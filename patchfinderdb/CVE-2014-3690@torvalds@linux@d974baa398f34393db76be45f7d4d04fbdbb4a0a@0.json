{
  "cve_id": "CVE-2014-3690",
  "cve_desc": "arch/x86/kvm/vmx.c in the KVM subsystem in the Linux kernel before 3.17.2 on Intel processors does not ensure that the value in the CR4 control register remains the same after a VM entry, which allows host OS users to kill arbitrary processes or cause a denial of service (system disruption) by leveraging /dev/kvm access, as demonstrated by PR_SET_TSC prctl calls within a modified copy of QEMU.",
  "repo": "torvalds/linux",
  "patch_hash": "d974baa398f34393db76be45f7d4d04fbdbb4a0a",
  "patch_info": {
    "commit_hash": "d974baa398f34393db76be45f7d4d04fbdbb4a0a",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/d974baa398f34393db76be45f7d4d04fbdbb4a0a",
    "files": [
      "arch/x86/kvm/vmx.c"
    ],
    "message": "x86,kvm,vmx: Preserve CR4 across VM entry\n\nCR4 isn't constant; at least the TSD and PCE bits can vary.\n\nTBH, treating CR0 and CR3 as constant scares me a bit, too, but it looks\nlike it's correct.\n\nThis adds a branch and a read from cr4 to each vm entry.  Because it is\nextremely likely that consecutive entries into the same vcpu will have\nthe same host cr4 value, this fixes up the vmcs instead of restoring cr4\nafter the fact.  A subsequent patch will add a kernel-wide cr4 shadow,\nreducing the overhead in the common case to just two memory reads and a\nbranch.\n\nSigned-off-by: Andy Lutomirski <luto@amacapital.net>\nAcked-by: Paolo Bonzini <pbonzini@redhat.com>\nCc: stable@vger.kernel.org\nCc: Petr Matousek <pmatouse@redhat.com>\nCc: Gleb Natapov <gleb@kernel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "before_after_code_files": [
      "arch/x86/kvm/vmx.c||arch/x86/kvm/vmx.c"
    ]
  },
  "patch_diff": {
    "arch/x86/kvm/vmx.c||arch/x86/kvm/vmx.c": [
      "File: arch/x86/kvm/vmx.c -> arch/x86/kvm/vmx.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4267:  u32 low32, high32;",
      "4268:  unsigned long tmpl;",
      "4269:  struct desc_ptr dt;",
      "4276: #ifdef CONFIG_X86_64",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4271:  unsigned long cr4;",
      "4277:  cr4 = read_cr4();",
      "4279:  vmx->host_state.vmcs_host_cr4 = cr4;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "7514: static void __noclone vmx_vcpu_run(struct kvm_vcpu *vcpu)",
      "7515: {",
      "7516:  struct vcpu_vmx *vmx = to_vmx(vcpu);",
      "7520:  if (unlikely(!cpu_has_virtual_nmis() && vmx->soft_vnmi_blocked))",
      "",
      "[Removed Lines]",
      "7517:  unsigned long debugctlmsr;",
      "",
      "[Added Lines]",
      "7523:  unsigned long debugctlmsr, cr4;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "7540:  if (test_bit(VCPU_REGS_RIP, (unsigned long *)&vcpu->arch.regs_dirty))",
      "7541:   vmcs_writel(GUEST_RIP, vcpu->arch.regs[VCPU_REGS_RIP]);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7549:  cr4 = read_cr4();",
      "7550:  if (unlikely(cr4 != vmx->host_state.vmcs_host_cr4)) {",
      "7551:   vmcs_writel(HOST_CR4, cr4);",
      "7552:   vmx->host_state.vmcs_host_cr4 = cr4;",
      "7553:  }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1e02ce4cccdcb9688386e5b8d2c9fa4660b45389",
      "candidate_info": {
        "commit_hash": "1e02ce4cccdcb9688386e5b8d2c9fa4660b45389",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/1e02ce4cccdcb9688386e5b8d2c9fa4660b45389",
        "files": [
          "arch/x86/include/asm/paravirt.h",
          "arch/x86/include/asm/special_insns.h",
          "arch/x86/include/asm/tlbflush.h",
          "arch/x86/include/asm/virtext.h",
          "arch/x86/kernel/acpi/sleep.c",
          "arch/x86/kernel/cpu/common.c",
          "arch/x86/kernel/cpu/mtrr/cyrix.c",
          "arch/x86/kernel/cpu/mtrr/generic.c",
          "arch/x86/kernel/head32.c",
          "arch/x86/kernel/head64.c",
          "arch/x86/kernel/process_32.c",
          "arch/x86/kernel/process_64.c",
          "arch/x86/kernel/setup.c",
          "arch/x86/kvm/svm.c",
          "arch/x86/kvm/vmx.c",
          "arch/x86/mm/fault.c",
          "arch/x86/mm/init.c",
          "arch/x86/mm/tlb.c",
          "arch/x86/power/cpu.c",
          "arch/x86/realmode/init.c"
        ],
        "message": "x86: Store a per-cpu shadow copy of CR4\n\nContext switches and TLB flushes can change individual bits of CR4.\nCR4 reads take several cycles, so store a shadow copy of CR4 in a\nper-cpu variable.\n\nTo avoid wasting a cache line, I added the CR4 shadow to\ncpu_tlbstate, which is already touched in switch_mm.  The heaviest\nusers of the cr4 shadow will be switch_mm and __switch_to_xtra, and\n__switch_to_xtra is called shortly after switch_mm during context\nswitch, so the cacheline is likely to be hot.\n\nSigned-off-by: Andy Lutomirski <luto@amacapital.net>\nReviewed-by: Thomas Gleixner <tglx@linutronix.de>\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>\nCc: Kees Cook <keescook@chromium.org>\nCc: Andrea Arcangeli <aarcange@redhat.com>\nCc: Vince Weaver <vince@deater.net>\nCc: \"hillf.zj\" <hillf.zj@alibaba-inc.com>\nCc: Valdis Kletnieks <Valdis.Kletnieks@vt.edu>\nCc: Paul Mackerras <paulus@samba.org>\nCc: Arnaldo Carvalho de Melo <acme@kernel.org>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nLink: http://lkml.kernel.org/r/3a54dd3353fffbf84804398e00dfdc5b7c1afd7d.1414190806.git.luto@amacapital.net\nSigned-off-by: Ingo Molnar <mingo@kernel.org>",
        "before_after_code_files": [
          "arch/x86/include/asm/paravirt.h||arch/x86/include/asm/paravirt.h",
          "arch/x86/include/asm/special_insns.h||arch/x86/include/asm/special_insns.h",
          "arch/x86/include/asm/tlbflush.h||arch/x86/include/asm/tlbflush.h",
          "arch/x86/include/asm/virtext.h||arch/x86/include/asm/virtext.h",
          "arch/x86/kernel/acpi/sleep.c||arch/x86/kernel/acpi/sleep.c",
          "arch/x86/kernel/cpu/common.c||arch/x86/kernel/cpu/common.c",
          "arch/x86/kernel/cpu/mtrr/cyrix.c||arch/x86/kernel/cpu/mtrr/cyrix.c",
          "arch/x86/kernel/cpu/mtrr/generic.c||arch/x86/kernel/cpu/mtrr/generic.c",
          "arch/x86/kernel/head32.c||arch/x86/kernel/head32.c",
          "arch/x86/kernel/head64.c||arch/x86/kernel/head64.c",
          "arch/x86/kernel/process_32.c||arch/x86/kernel/process_32.c",
          "arch/x86/kernel/process_64.c||arch/x86/kernel/process_64.c",
          "arch/x86/kernel/setup.c||arch/x86/kernel/setup.c",
          "arch/x86/kvm/svm.c||arch/x86/kvm/svm.c",
          "arch/x86/kvm/vmx.c||arch/x86/kvm/vmx.c",
          "arch/x86/mm/fault.c||arch/x86/mm/fault.c",
          "arch/x86/mm/init.c||arch/x86/mm/init.c",
          "arch/x86/mm/tlb.c||arch/x86/mm/tlb.c",
          "arch/x86/power/cpu.c||arch/x86/power/cpu.c",
          "arch/x86/realmode/init.c||arch/x86/realmode/init.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "arch/x86/kvm/vmx.c||arch/x86/kvm/vmx.c"
          ],
          "candidate": [
            "arch/x86/kvm/vmx.c||arch/x86/kvm/vmx.c"
          ]
        }
      },
      "candidate_diff": {
        "arch/x86/include/asm/paravirt.h||arch/x86/include/asm/paravirt.h": [
          "File: arch/x86/include/asm/paravirt.h -> arch/x86/include/asm/paravirt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:  PVOP_VCALL1(pv_mmu_ops.write_cr3, x);",
          "81: }",
          "84: {",
          "85:  return PVOP_CALL0(unsigned long, pv_cpu_ops.read_cr4);",
          "86: }",
          "88: {",
          "89:  return PVOP_CALL0(unsigned long, pv_cpu_ops.read_cr4_safe);",
          "90: }",
          "93: {",
          "94:  PVOP_VCALL1(pv_cpu_ops.write_cr4, x);",
          "95: }",
          "",
          "[Removed Lines]",
          "83: static inline unsigned long read_cr4(void)",
          "87: static inline unsigned long read_cr4_safe(void)",
          "92: static inline void write_cr4(unsigned long x)",
          "",
          "[Added Lines]",
          "83: static inline unsigned long __read_cr4(void)",
          "87: static inline unsigned long __read_cr4_safe(void)",
          "92: static inline void __write_cr4(unsigned long x)",
          "",
          "---------------"
        ],
        "arch/x86/include/asm/special_insns.h||arch/x86/include/asm/special_insns.h": [
          "File: arch/x86/include/asm/special_insns.h -> arch/x86/include/asm/special_insns.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "137:  native_write_cr3(x);",
          "138: }",
          "141: {",
          "142:  return native_read_cr4();",
          "143: }",
          "146: {",
          "147:  return native_read_cr4_safe();",
          "148: }",
          "151: {",
          "152:  native_write_cr4(x);",
          "153: }",
          "",
          "[Removed Lines]",
          "140: static inline unsigned long read_cr4(void)",
          "145: static inline unsigned long read_cr4_safe(void)",
          "150: static inline void write_cr4(unsigned long x)",
          "",
          "[Added Lines]",
          "140: static inline unsigned long __read_cr4(void)",
          "145: static inline unsigned long __read_cr4_safe(void)",
          "150: static inline void __write_cr4(unsigned long x)",
          "",
          "---------------"
        ],
        "arch/x86/include/asm/tlbflush.h||arch/x86/include/asm/tlbflush.h": [
          "File: arch/x86/include/asm/tlbflush.h -> arch/x86/include/asm/tlbflush.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: #define __flush_tlb_single(addr) __native_flush_tlb_single(addr)",
          "16: #endif",
          "19: static inline void cr4_set_bits(unsigned long mask)",
          "20: {",
          "21:  unsigned long cr4;",
          "26: }",
          "",
          "[Removed Lines]",
          "23:  cr4 = read_cr4();",
          "24:  cr4 |= mask;",
          "25:  write_cr4(cr4);",
          "",
          "[Added Lines]",
          "18: struct tlb_state {",
          "19: #ifdef CONFIG_SMP",
          "20:  struct mm_struct *active_mm;",
          "21:  int state;",
          "22: #endif",
          "28:  unsigned long cr4;",
          "29: };",
          "30: DECLARE_PER_CPU_SHARED_ALIGNED(struct tlb_state, cpu_tlbstate);",
          "33: static inline void cr4_init_shadow(void)",
          "34: {",
          "35:  this_cpu_write(cpu_tlbstate.cr4, __read_cr4());",
          "36: }",
          "43:  cr4 = this_cpu_read(cpu_tlbstate.cr4);",
          "44:  if ((cr4 | mask) != cr4) {",
          "45:   cr4 |= mask;",
          "46:   this_cpu_write(cpu_tlbstate.cr4, cr4);",
          "47:   __write_cr4(cr4);",
          "48:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30: {",
          "31:  unsigned long cr4;",
          "36: }",
          "",
          "[Removed Lines]",
          "33:  cr4 = read_cr4();",
          "34:  cr4 &= ~mask;",
          "35:  write_cr4(cr4);",
          "",
          "[Added Lines]",
          "56:  cr4 = this_cpu_read(cpu_tlbstate.cr4);",
          "57:  if ((cr4 & ~mask) != cr4) {",
          "58:   cr4 &= ~mask;",
          "59:   this_cpu_write(cpu_tlbstate.cr4, cr4);",
          "60:   __write_cr4(cr4);",
          "61:  }",
          "62: }",
          "65: static inline unsigned long cr4_read_shadow(void)",
          "66: {",
          "67:  return this_cpu_read(cpu_tlbstate.cr4);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "61: {",
          "62:  unsigned long cr4;",
          "66:  native_write_cr4(cr4 & ~X86_CR4_PGE);",
          "",
          "[Removed Lines]",
          "64:  cr4 = native_read_cr4();",
          "",
          "[Added Lines]",
          "96:  cr4 = this_cpu_read(cpu_tlbstate.cr4);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "221: #define TLBSTATE_OK 1",
          "222: #define TLBSTATE_LAZY 2",
          "230: static inline void reset_lazy_tlbstate(void)",
          "231: {",
          "232:  this_cpu_write(cpu_tlbstate.state, 0);",
          "",
          "[Removed Lines]",
          "224: struct tlb_state {",
          "225:  struct mm_struct *active_mm;",
          "226:  int state;",
          "227: };",
          "228: DECLARE_PER_CPU_SHARED_ALIGNED(struct tlb_state, cpu_tlbstate);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "arch/x86/include/asm/virtext.h||arch/x86/include/asm/virtext.h": [
          "File: arch/x86/include/asm/virtext.h -> arch/x86/include/asm/virtext.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "47: static inline int cpu_vmx_enabled(void)",
          "48: {",
          "50: }",
          "",
          "[Removed Lines]",
          "49:  return read_cr4() & X86_CR4_VMXE;",
          "",
          "[Added Lines]",
          "49:  return __read_cr4() & X86_CR4_VMXE;",
          "",
          "---------------"
        ],
        "arch/x86/kernel/acpi/sleep.c||arch/x86/kernel/acpi/sleep.c": [
          "File: arch/x86/kernel/acpi/sleep.c -> arch/x86/kernel/acpi/sleep.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "79:  header->pmode_cr0 = read_cr0();",
          "80:  if (__this_cpu_read(cpu_info.cpuid_level) >= 0) {",
          "82:   header->pmode_behavior |= (1 << WAKEUP_BEHAVIOR_RESTORE_CR4);",
          "83:  }",
          "84:  if (!rdmsr_safe(MSR_IA32_MISC_ENABLE,",
          "",
          "[Removed Lines]",
          "81:   header->pmode_cr4 = read_cr4();",
          "",
          "[Added Lines]",
          "81:   header->pmode_cr4 = __read_cr4();",
          "",
          "---------------"
        ],
        "arch/x86/kernel/cpu/common.c||arch/x86/kernel/cpu/common.c": [
          "File: arch/x86/kernel/cpu/common.c -> arch/x86/kernel/cpu/common.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: #include <asm/archrandom.h>",
          "20: #include <asm/hypervisor.h>",
          "21: #include <asm/processor.h>",
          "22: #include <asm/debugreg.h>",
          "23: #include <asm/sections.h>",
          "24: #include <asm/vsyscall.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: #include <asm/tlbflush.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1294:  wait_for_master_cpu(cpu);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1301:  cr4_init_shadow();",
          "",
          "---------------"
        ],
        "arch/x86/kernel/cpu/mtrr/cyrix.c||arch/x86/kernel/cpu/mtrr/cyrix.c": [
          "File: arch/x86/kernel/cpu/mtrr/cyrix.c -> arch/x86/kernel/cpu/mtrr/cyrix.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "140:  if (cpu_has_pge) {",
          "143:  }",
          "",
          "[Removed Lines]",
          "141:   cr4 = read_cr4();",
          "142:   write_cr4(cr4 & ~X86_CR4_PGE);",
          "",
          "[Added Lines]",
          "141:   cr4 = __read_cr4();",
          "142:   __write_cr4(cr4 & ~X86_CR4_PGE);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "173:  if (cpu_has_pge)",
          "175: }",
          "177: static void cyrix_set_arr(unsigned int reg, unsigned long base,",
          "",
          "[Removed Lines]",
          "174:   write_cr4(cr4);",
          "",
          "[Added Lines]",
          "174:   __write_cr4(cr4);",
          "",
          "---------------"
        ],
        "arch/x86/kernel/cpu/mtrr/generic.c||arch/x86/kernel/cpu/mtrr/generic.c": [
          "File: arch/x86/kernel/cpu/mtrr/generic.c -> arch/x86/kernel/cpu/mtrr/generic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "680:  if (cpu_has_pge) {",
          "683:  }",
          "",
          "[Removed Lines]",
          "681:   cr4 = read_cr4();",
          "682:   write_cr4(cr4 & ~X86_CR4_PGE);",
          "",
          "[Added Lines]",
          "681:   cr4 = __read_cr4();",
          "682:   __write_cr4(cr4 & ~X86_CR4_PGE);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "710:  if (cpu_has_pge)",
          "712:  raw_spin_unlock(&set_atomicity_lock);",
          "713: }",
          "",
          "[Removed Lines]",
          "711:   write_cr4(cr4);",
          "",
          "[Added Lines]",
          "711:   __write_cr4(cr4);",
          "",
          "---------------"
        ],
        "arch/x86/kernel/head32.c||arch/x86/kernel/head32.c": [
          "File: arch/x86/kernel/head32.c -> arch/x86/kernel/head32.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: asmlinkage __visible void __init i386_start_kernel(void)",
          "33: {",
          "34:  sanitize_boot_params(&boot_params);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34:  cr4_init_shadow();",
          "",
          "---------------"
        ],
        "arch/x86/kernel/head64.c||arch/x86/kernel/head64.c": [
          "File: arch/x86/kernel/head64.c -> arch/x86/kernel/head64.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "155:     (__START_KERNEL & PGDIR_MASK)));",
          "156:  BUILD_BUG_ON(__fix_to_virt(__end_of_fixed_addresses) <= MODULES_END);",
          "159:  reset_early_page_tables();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "158:  cr4_init_shadow();",
          "",
          "---------------"
        ],
        "arch/x86/kernel/process_32.c||arch/x86/kernel/process_32.c": [
          "File: arch/x86/kernel/process_32.c -> arch/x86/kernel/process_32.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "101:  cr0 = read_cr0();",
          "102:  cr2 = read_cr2();",
          "103:  cr3 = read_cr3();",
          "105:  printk(KERN_DEFAULT \"CR0: %08lx CR2: %08lx CR3: %08lx CR4: %08lx\\n\",",
          "106:    cr0, cr2, cr3, cr4);",
          "",
          "[Removed Lines]",
          "104:  cr4 = read_cr4_safe();",
          "",
          "[Added Lines]",
          "104:  cr4 = __read_cr4_safe();",
          "",
          "---------------"
        ],
        "arch/x86/kernel/process_64.c||arch/x86/kernel/process_64.c": [
          "File: arch/x86/kernel/process_64.c -> arch/x86/kernel/process_64.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "93:  cr0 = read_cr0();",
          "94:  cr2 = read_cr2();",
          "95:  cr3 = read_cr3();",
          "98:  printk(KERN_DEFAULT \"FS:  %016lx(%04x) GS:%016lx(%04x) knlGS:%016lx\\n\",",
          "99:         fs, fsindex, gs, gsindex, shadowgs);",
          "",
          "[Removed Lines]",
          "96:  cr4 = read_cr4();",
          "",
          "[Added Lines]",
          "96:  cr4 = __read_cr4();",
          "",
          "---------------"
        ],
        "arch/x86/kernel/setup.c||arch/x86/kernel/setup.c": [
          "File: arch/x86/kernel/setup.c -> arch/x86/kernel/setup.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1179:  if (boot_cpu_data.cpuid_level >= 0) {",
          "1182:   if (trampoline_cr4_features)",
          "1184:  }",
          "",
          "[Removed Lines]",
          "1181:   mmu_cr4_features = read_cr4();",
          "",
          "[Added Lines]",
          "1181:   mmu_cr4_features = __read_cr4();",
          "",
          "---------------"
        ],
        "arch/x86/kvm/svm.c||arch/x86/kvm/svm.c": [
          "File: arch/x86/kvm/svm.c -> arch/x86/kvm/svm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1584: static int svm_set_cr4(struct kvm_vcpu *vcpu, unsigned long cr4)",
          "1585: {",
          "1587:  unsigned long old_cr4 = to_svm(vcpu)->vmcb->save.cr4;",
          "1589:  if (cr4 & X86_CR4_VMXE)",
          "",
          "[Removed Lines]",
          "1586:  unsigned long host_cr4_mce = read_cr4() & X86_CR4_MCE;",
          "",
          "[Added Lines]",
          "1586:  unsigned long host_cr4_mce = cr4_read_shadow() & X86_CR4_MCE;",
          "",
          "---------------"
        ],
        "arch/x86/kvm/vmx.c||arch/x86/kvm/vmx.c": [
          "File: arch/x86/kvm/vmx.c -> arch/x86/kvm/vmx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2785:  u64 phys_addr = __pa(per_cpu(vmxarea, cpu));",
          "2786:  u64 old, test_bits;",
          "2789:   return -EBUSY;",
          "2791:  INIT_LIST_HEAD(&per_cpu(loaded_vmcss_on_cpu, cpu));",
          "",
          "[Removed Lines]",
          "2788:  if (read_cr4() & X86_CR4_VMXE)",
          "",
          "[Added Lines]",
          "2788:  if (cr4_read_shadow() & X86_CR4_VMXE)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4260:  vmx->host_state.vmcs_host_cr4 = cr4;",
          "",
          "[Removed Lines]",
          "4258:  cr4 = read_cr4();",
          "",
          "[Added Lines]",
          "4258:  cr4 = cr4_read_shadow();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7784:  if (test_bit(VCPU_REGS_RIP, (unsigned long *)&vcpu->arch.regs_dirty))",
          "7785:   vmcs_writel(GUEST_RIP, vcpu->arch.regs[VCPU_REGS_RIP]);",
          "7788:  if (unlikely(cr4 != vmx->host_state.vmcs_host_cr4)) {",
          "7789:   vmcs_writel(HOST_CR4, cr4);",
          "7790:   vmx->host_state.vmcs_host_cr4 = cr4;",
          "",
          "[Removed Lines]",
          "7787:  cr4 = read_cr4();",
          "",
          "[Added Lines]",
          "7787:  cr4 = cr4_read_shadow();",
          "",
          "---------------"
        ],
        "arch/x86/mm/fault.c||arch/x86/mm/fault.c": [
          "File: arch/x86/mm/fault.c -> arch/x86/mm/fault.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "600:    printk(nx_warning, from_kuid(&init_user_ns, current_uid()));",
          "601:   if (pte && pte_present(*pte) && pte_exec(*pte) &&",
          "602:     (pgd_flags(*pgd) & _PAGE_USER) &&",
          "604:    printk(smep_warning, from_kuid(&init_user_ns, current_uid()));",
          "605:  }",
          "",
          "[Removed Lines]",
          "603:     (read_cr4() & X86_CR4_SMEP))",
          "",
          "[Added Lines]",
          "603:     (__read_cr4() & X86_CR4_SMEP))",
          "",
          "---------------"
        ],
        "arch/x86/mm/init.c||arch/x86/mm/init.c": [
          "File: arch/x86/mm/init.c -> arch/x86/mm/init.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "713:  free_area_init_nodes(max_zone_pfns);",
          "714: }",
          "716: void update_cache_mode_entry(unsigned entry, enum page_cache_mode cache)",
          "717: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "716: DEFINE_PER_CPU_SHARED_ALIGNED(struct tlb_state, cpu_tlbstate) = {",
          "717: #ifdef CONFIG_SMP",
          "718:  .active_mm = &init_mm,",
          "719:  .state = 0,",
          "720: #endif",
          "722: };",
          "723: EXPORT_SYMBOL_GPL(cpu_tlbstate);",
          "",
          "---------------"
        ],
        "arch/x86/mm/tlb.c||arch/x86/mm/tlb.c": [
          "File: arch/x86/mm/tlb.c -> arch/x86/mm/tlb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: #include <asm/uv/uv.h>",
          "15: #include <linux/debugfs.h>",
          "",
          "[Removed Lines]",
          "17: DEFINE_PER_CPU_SHARED_ALIGNED(struct tlb_state, cpu_tlbstate)",
          "18:    = { &init_mm, 0, };",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "arch/x86/power/cpu.c||arch/x86/power/cpu.c": [
          "File: arch/x86/power/cpu.c -> arch/x86/power/cpu.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "105:  ctxt->cr0 = read_cr0();",
          "106:  ctxt->cr2 = read_cr2();",
          "107:  ctxt->cr3 = read_cr3();",
          "113:  ctxt->cr8 = read_cr8();",
          "114: #endif",
          "115:  ctxt->misc_enable_saved = !rdmsrl_safe(MSR_IA32_MISC_ENABLE,",
          "",
          "[Removed Lines]",
          "108: #ifdef CONFIG_X86_32",
          "109:  ctxt->cr4 = read_cr4_safe();",
          "110: #else",
          "112:  ctxt->cr4 = read_cr4();",
          "",
          "[Added Lines]",
          "108:  ctxt->cr4 = __read_cr4_safe();",
          "109: #ifdef CONFIG_X86_64",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "176: #ifdef CONFIG_X86_32",
          "177:  if (ctxt->cr4)",
          "179: #else",
          "181:  wrmsrl(MSR_EFER, ctxt->efer);",
          "182:  write_cr8(ctxt->cr8);",
          "184: #endif",
          "185:  write_cr3(ctxt->cr3);",
          "186:  write_cr2(ctxt->cr2);",
          "",
          "[Removed Lines]",
          "178:   write_cr4(ctxt->cr4);",
          "183:  write_cr4(ctxt->cr4);",
          "",
          "[Added Lines]",
          "175:   __write_cr4(ctxt->cr4);",
          "180:  __write_cr4(ctxt->cr4);",
          "",
          "---------------"
        ],
        "arch/x86/realmode/init.c||arch/x86/realmode/init.c": [
          "File: arch/x86/realmode/init.c -> arch/x86/realmode/init.c"
        ]
      }
    }
  ]
}