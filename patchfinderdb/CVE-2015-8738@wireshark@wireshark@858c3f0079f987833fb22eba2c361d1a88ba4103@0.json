{
  "cve_id": "CVE-2015-8738",
  "cve_desc": "The s7comm_decode_ud_cpu_szl_subfunc function in epan/dissectors/packet-s7comm_szl_ids.c in the S7COMM dissector in Wireshark 2.0.x before 2.0.1 does not validate the list count in an SZL response, which allows remote attackers to cause a denial of service (divide-by-zero error and application crash) via a crafted packet.",
  "repo": "wireshark/wireshark",
  "patch_hash": "858c3f0079f987833fb22eba2c361d1a88ba4103",
  "patch_info": {
    "commit_hash": "858c3f0079f987833fb22eba2c361d1a88ba4103",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/858c3f0079f987833fb22eba2c361d1a88ba4103",
    "files": [
      "epan/dissectors/packet-s7comm_szl_ids.c"
    ],
    "message": "[S7COMM] Prevent divide by zero.\n\nBug: 11823\nChange-Id: I4437efb3dc9532e3d29aacd36736d6f7b3ed38a2\nReviewed-on: https://code.wireshark.org/review/12322\nReviewed-by: Michael Mann <mmann78@netscape.net>",
    "before_after_code_files": [
      "epan/dissectors/packet-s7comm_szl_ids.c||epan/dissectors/packet-s7comm_szl_ids.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-s7comm_szl_ids.c||epan/dissectors/packet-s7comm_szl_ids.c": [
      "File: epan/dissectors/packet-s7comm_szl_ids.c -> epan/dissectors/packet-s7comm_szl_ids.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4012:                 tbytes = 0;",
      "4018:                     }",
      "4019:                 }",
      "4020:                 offset += 2;",
      "",
      "[Removed Lines]",
      "4013:                 if ((list_count * list_len) > (len - 8)) {",
      "4014:                     list_count = (len - 8) / list_len;",
      "4016:                     if (list_count > 0) {",
      "4017:                         tbytes = (len - 8) % list_count;",
      "",
      "[Added Lines]",
      "4013:                 if (list_len > 0) {",
      "4014:                     if ((list_count * list_len) > (len - 8)) {",
      "4015:                         list_count = (len - 8) / list_len;",
      "4017:                         if (list_count > 0) {",
      "4018:                             tbytes = (len - 8) % list_count;",
      "4019:                         }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d7ec92ddd63f9092368abb3a08d8f5c28f0442d1",
      "candidate_info": {
        "commit_hash": "d7ec92ddd63f9092368abb3a08d8f5c28f0442d1",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/d7ec92ddd63f9092368abb3a08d8f5c28f0442d1",
        "files": [
          "epan/dissectors/packet-s7comm_szl_ids.c"
        ],
        "message": "[S7COMM] Prevent divide by zero.\n\nBug: 11823\nChange-Id: I4437efb3dc9532e3d29aacd36736d6f7b3ed38a2\nReviewed-on: https://code.wireshark.org/review/12322\nReviewed-by: Michael Mann <mmann78@netscape.net>\n(cherry picked from commit 858c3f0079f987833fb22eba2c361d1a88ba4103)\nReviewed-on: https://code.wireshark.org/review/12324",
        "before_after_code_files": [
          "epan/dissectors/packet-s7comm_szl_ids.c||epan/dissectors/packet-s7comm_szl_ids.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-s7comm_szl_ids.c||epan/dissectors/packet-s7comm_szl_ids.c"
          ],
          "candidate": [
            "epan/dissectors/packet-s7comm_szl_ids.c||epan/dissectors/packet-s7comm_szl_ids.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-s7comm_szl_ids.c||epan/dissectors/packet-s7comm_szl_ids.c": [
          "File: epan/dissectors/packet-s7comm_szl_ids.c -> epan/dissectors/packet-s7comm_szl_ids.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4012:                 tbytes = 0;",
          "4018:                     }",
          "4019:                 }",
          "4020:                 offset += 2;",
          "",
          "[Removed Lines]",
          "4013:                 if ((list_count * list_len) > (len - 8)) {",
          "4014:                     list_count = (len - 8) / list_len;",
          "4016:                     if (list_count > 0) {",
          "4017:                         tbytes = (len - 8) % list_count;",
          "",
          "[Added Lines]",
          "4013:                 if (list_len > 0) {",
          "4014:                     if ((list_count * list_len) > (len - 8)) {",
          "4015:                         list_count = (len - 8) / list_len;",
          "4017:                         if (list_count > 0) {",
          "4018:                             tbytes = (len - 8) % list_count;",
          "4019:                         }",
          "",
          "---------------"
        ]
      }
    }
  ]
}