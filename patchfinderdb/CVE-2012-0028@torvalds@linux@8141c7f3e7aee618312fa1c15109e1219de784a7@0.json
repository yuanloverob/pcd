{
  "cve_id": "CVE-2012-0028",
  "cve_desc": "The robust futex implementation in the Linux kernel before 2.6.28 does not properly handle processes that make exec system calls, which allows local users to cause a denial of service or possibly gain privileges by writing to a memory location in a child process.",
  "repo": "torvalds/linux",
  "patch_hash": "8141c7f3e7aee618312fa1c15109e1219de784a7",
  "patch_info": {
    "commit_hash": "8141c7f3e7aee618312fa1c15109e1219de784a7",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/8141c7f3e7aee618312fa1c15109e1219de784a7",
    "files": [
      "kernel/exit.c",
      "kernel/fork.c"
    ],
    "message": "Move \"exit_robust_list\" into mm_release()\n\nWe don't want to get rid of the futexes just at exit() time, we want to\ndrop them when doing an execve() too, since that gets rid of the\nprevious VM image too.\n\nDoing it at mm_release() time means that we automatically always do it\nwhen we disassociate a VM map from the task.\n\nReported-by: pageexec@freemail.hu\nCc: Andrew Morton <akpm@linux-foundation.org>\nCc: Nick Piggin <npiggin@suse.de>\nCc: Hugh Dickins <hugh@veritas.com>\nCc: Ingo Molnar <mingo@elte.hu>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: Brad Spengler <spender@grsecurity.net>\nCc: Alex Efros <powerman@powerman.name>\nCc: Peter Zijlstra <a.p.zijlstra@chello.nl>\nCc: Oleg Nesterov <oleg@redhat.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "before_after_code_files": [
      "kernel/exit.c||kernel/exit.c",
      "kernel/fork.c||kernel/fork.c"
    ]
  },
  "patch_diff": {
    "kernel/exit.c||kernel/exit.c": [
      "File: kernel/exit.c -> kernel/exit.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "40: #include <linux/cn_proc.h>",
      "41: #include <linux/mutex.h>",
      "42: #include <linux/futex.h>",
      "44: #include <linux/pipe_fs_i.h>",
      "46: #include <linux/resource.h>",
      "",
      "[Removed Lines]",
      "43: #include <linux/compat.h>",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1059:   exit_itimers(tsk->signal);",
      "1060:  }",
      "1061:  acct_collect(code, group_dead);",
      "1070:  if (group_dead)",
      "1071:   tty_audit_exit();",
      "1072:  if (unlikely(tsk->audit_context))",
      "",
      "[Removed Lines]",
      "1062: #ifdef CONFIG_FUTEX",
      "1063:  if (unlikely(tsk->robust_list))",
      "1064:   exit_robust_list(tsk);",
      "1065: #ifdef CONFIG_COMPAT",
      "1066:  if (unlikely(tsk->compat_robust_list))",
      "1067:   compat_exit_robust_list(tsk);",
      "1068: #endif",
      "1069: #endif",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "kernel/fork.c||kernel/fork.c": [
      "File: kernel/fork.c -> kernel/fork.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "40: #include <linux/jiffies.h>",
      "41: #include <linux/tracehook.h>",
      "42: #include <linux/futex.h>",
      "43: #include <linux/task_io_accounting_ops.h>",
      "44: #include <linux/rcupdate.h>",
      "45: #include <linux/ptrace.h>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "43: #include <linux/compat.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "519: {",
      "520:  struct completion *vfork_done = tsk->vfork_done;",
      "523:  deactivate_mm(tsk, mm);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "524: #ifdef CONFIG_FUTEX",
      "525:  if (unlikely(tsk->robust_list))",
      "526:   exit_robust_list(tsk);",
      "527: #ifdef CONFIG_COMPAT",
      "528:  if (unlikely(tsk->compat_robust_list))",
      "529:   compat_exit_robust_list(tsk);",
      "530: #endif",
      "531: #endif",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fc6b177dee33365ccb29fe6d2092223cf8d679f9",
      "candidate_info": {
        "commit_hash": "fc6b177dee33365ccb29fe6d2092223cf8d679f9",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/fc6b177dee33365ccb29fe6d2092223cf8d679f9",
        "files": [
          "kernel/fork.c"
        ],
        "message": "futex: Nullify robust lists after cleanup\n\nThe robust list pointers of user space held futexes are kept intact\nover an exec() call. When the exec'ed task exits exit_robust_list() is\ncalled with the stale pointer. The risk of corruption is minimal, but\nstill it is incorrect to keep the pointers valid. Actually glibc\nshould uninstall the robust list before calling exec() but we have to\ndeal with it anyway.\n\nNullify the pointers after [compat_]exit_robust_list() has been\ncalled.\n\nReported-by: Anirban Sinha <ani@anirban.org>\nSigned-off-by: Peter Zijlstra <peterz@infradead.org>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nLKML-Reference: <new-submission>\nCc: stable@kernel.org",
        "before_after_code_files": [
          "kernel/fork.c||kernel/fork.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "kernel/fork.c||kernel/fork.c"
          ],
          "candidate": [
            "kernel/fork.c||kernel/fork.c"
          ]
        }
      },
      "candidate_diff": {
        "kernel/fork.c||kernel/fork.c": [
          "File: kernel/fork.c -> kernel/fork.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "545: #ifdef CONFIG_FUTEX",
          "547:   exit_robust_list(tsk);",
          "548: #ifdef CONFIG_COMPAT",
          "550:   compat_exit_robust_list(tsk);",
          "551: #endif",
          "552: #endif",
          "",
          "[Removed Lines]",
          "546:  if (unlikely(tsk->robust_list))",
          "549:  if (unlikely(tsk->compat_robust_list))",
          "",
          "[Added Lines]",
          "546:  if (unlikely(tsk->robust_list)) {",
          "548:   tsk->robust_list = NULL;",
          "549:  }",
          "551:  if (unlikely(tsk->compat_robust_list)) {",
          "553:   tsk->compat_robust_list = NULL;",
          "554:  }",
          "",
          "---------------"
        ]
      }
    }
  ]
}