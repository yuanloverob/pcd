{
  "cve_id": "CVE-2022-36039",
  "cve_desc": "Rizin is a UNIX-like reverse engineering framework and command-line toolset. Versions 0.4.0 and prior are vulnerable to out-of-bounds write when parsing DEX files. A user opening a malicious DEX file could be affected by this vulnerability, allowing an attacker to execute code on the user's machine. A patch is available on the `dev` branch of the repository.",
  "repo": "rizinorg/rizin",
  "patch_hash": "1524f85211445e41506f98180f8f69f7bf115406",
  "patch_info": {
    "commit_hash": "1524f85211445e41506f98180f8f69f7bf115406",
    "repo": "rizinorg/rizin",
    "commit_url": "https://github.com/rizinorg/rizin/commit/1524f85211445e41506f98180f8f69f7bf115406",
    "files": [
      "librz/bin/format/dex/dex.c"
    ],
    "message": "fix #2969 - oob write (1 byte) in dex.c",
    "before_after_code_files": [
      "librz/bin/format/dex/dex.c||librz/bin/format/dex/dex.c"
    ]
  },
  "patch_diff": {
    "librz/bin/format/dex/dex.c||librz/bin/format/dex/dex.c": [
      "File: librz/bin/format/dex/dex.c -> librz/bin/format/dex/dex.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "81:  DexString *string = NULL;",
      "83:  read = rz_buf_uleb128(buf, &size);",
      "84:  data = malloc(size + 1);",
      "85:  if (!data || rz_buf_read(buf, (ut8 *)data, size) != size) {",
      "86:   free(data);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "84:  if (UT64_ADD_OVFCHK(size, 1)) {",
      "85:   return NULL;",
      "86:  }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "905:  }",
      "906:  char *demangled = strdup(library + 1);",
      "907:  rz_str_replace_ch(demangled, '/', '.', 1);",
      "909:  return demangled;",
      "910: }",
      "",
      "[Removed Lines]",
      "908:  demangled[strlen(demangled) - 1] = 0;",
      "",
      "[Added Lines]",
      "912:  if (RZ_STR_ISNOTEMPTY(demangled)) {",
      "913:   demangled[strlen(demangled) - 1] = 0;",
      "914:  }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "52361f4f55107968820b1f3561c2ea7c451aed9d",
      "candidate_info": {
        "commit_hash": "52361f4f55107968820b1f3561c2ea7c451aed9d",
        "repo": "rizinorg/rizin",
        "commit_url": "https://github.com/rizinorg/rizin/commit/52361f4f55107968820b1f3561c2ea7c451aed9d",
        "files": [
          "librz/bin/format/dex/dex.c"
        ],
        "message": "fix #2969 - oob write (1 byte) in dex.c",
        "before_after_code_files": [
          "librz/bin/format/dex/dex.c||librz/bin/format/dex/dex.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "librz/bin/format/dex/dex.c||librz/bin/format/dex/dex.c"
          ],
          "candidate": [
            "librz/bin/format/dex/dex.c||librz/bin/format/dex/dex.c"
          ]
        }
      },
      "candidate_diff": {
        "librz/bin/format/dex/dex.c||librz/bin/format/dex/dex.c": [
          "File: librz/bin/format/dex/dex.c -> librz/bin/format/dex/dex.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:  DexString *string = NULL;",
          "83:  read = rz_buf_uleb128(buf, &size);",
          "84:  data = malloc(size + 1);",
          "85:  if (!data || rz_buf_read(buf, (ut8 *)data, size) != size) {",
          "86:   free(data);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "84:  if (UT64_ADD_OVFCHK(size, 1)) {",
          "85:   return NULL;",
          "86:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "905:  }",
          "906:  char *demangled = strdup(library + 1);",
          "907:  rz_str_replace_ch(demangled, '/', '.', 1);",
          "909:  return demangled;",
          "910: }",
          "",
          "[Removed Lines]",
          "908:  demangled[strlen(demangled) - 1] = 0;",
          "",
          "[Added Lines]",
          "912:  if (RZ_STR_ISNOTEMPTY(demangled)) {",
          "913:   demangled[strlen(demangled) - 1] = 0;",
          "914:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ca370dd66c5f57dc74e4e289e1655c93af0d7308",
      "candidate_info": {
        "commit_hash": "ca370dd66c5f57dc74e4e289e1655c93af0d7308",
        "repo": "rizinorg/rizin",
        "commit_url": "https://github.com/rizinorg/rizin/commit/ca370dd66c5f57dc74e4e289e1655c93af0d7308",
        "files": [
          "librz/magic/funcs.c"
        ],
        "message": "fix #2953 - oob read in magic/funcs.c",
        "before_after_code_files": [
          "librz/magic/funcs.c||librz/magic/funcs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/rizinorg/rizin/pull/2977"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "librz/magic/funcs.c||librz/magic/funcs.c": [
          "File: librz/magic/funcs.c -> librz/magic/funcs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "264:   file_oomem(ms, psize);",
          "265:   return NULL;",
          "266:  }",
          "267:  ms->o.pbuf = pbuf;",
          "269: #if 1",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "267:  pbuf[psize - 1] = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "307:   }",
          "308:  }",
          "309: #endif",
          "311:   if (isprint((ut8)*op)) {",
          "313:   } else {",
          "",
          "[Removed Lines]",
          "310:  for (np = ms->o.pbuf, op = ms->o.buf; *op; op++) {",
          "",
          "[Added Lines]",
          "311:  const char *pbuf_end = ms->o.pbuf + psize;",
          "312:  const char *buf_end = ms->o.buf + len;",
          "313:  for (np = ms->o.pbuf, op = ms->o.buf; op < buf_end && np < pbuf_end && *op; op++) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0aabf970feb0402f9ae6104a937b07d88d90cc03",
      "candidate_info": {
        "commit_hash": "0aabf970feb0402f9ae6104a937b07d88d90cc03",
        "repo": "rizinorg/rizin",
        "commit_url": "https://github.com/rizinorg/rizin/commit/0aabf970feb0402f9ae6104a937b07d88d90cc03",
        "files": [
          "librz/bin/format/mach0/dyldcache.c"
        ],
        "message": "fix #2952 - null deref in dyldcache.c",
        "before_after_code_files": [
          "librz/bin/format/mach0/dyldcache.c||librz/bin/format/mach0/dyldcache.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/rizinorg/rizin/pull/2977"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "librz/bin/format/mach0/dyldcache.c||librz/bin/format/mach0/dyldcache.c": [
          "File: librz/bin/format/mach0/dyldcache.c -> librz/bin/format/mach0/dyldcache.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "249:  RzListIter *iter;",
          "250:  RzDyldBinImage *bin;",
          "251:  rz_list_foreach (cache->bins, iter, bin) {",
          "253:    continue;",
          "254:   }",
          "",
          "[Removed Lines]",
          "252:   if (strcmp(bin->file, \"lib/libobjc.A.dylib\")) {",
          "",
          "[Added Lines]",
          "252:   if (!bin->file || strcmp(bin->file, \"lib/libobjc.A.dylib\")) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "626:      } else {",
          "627:       bin->file = strdup(file);",
          "628:      }",
          "629:     }",
          "630:     rz_list_append(bins, bin);",
          "631:     break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "629:     } else {",
          "630:      bin->file = rz_str_newf(\"unknown_image_%08\" PFMT64x, symbols_off);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0d18f10c8a93e00f58f831909a5a3b4b22cfda61",
      "candidate_info": {
        "commit_hash": "0d18f10c8a93e00f58f831909a5a3b4b22cfda61",
        "repo": "rizinorg/rizin",
        "commit_url": "https://github.com/rizinorg/rizin/commit/0d18f10c8a93e00f58f831909a5a3b4b22cfda61",
        "files": [
          "librz/bin/format/ne/ne.c"
        ],
        "message": "fix #2972 - oob read in ne.c",
        "before_after_code_files": [
          "librz/bin/format/ne/ne.c||librz/bin/format/ne/ne.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/rizinorg/rizin/pull/2977"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "librz/bin/format/ne/ne.c||librz/bin/format/ne/ne.c": [
          "File: librz/bin/format/ne/ne.c -> librz/bin/format/ne/ne.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "438:     break;",
          "439:    } else if (bundle_type == 0xFF) { // Moveable",
          "440:     off += 2;",
          "442:     off++;",
          "445:      free(entry);",
          "446:      continue;",
          "447:     }",
          "448:     entry->paddr = (ut64)bin->segment_entries[segnum - 1].offset * bin->alignment + segoff;",
          "449:    } else { // Fixed",
          "452:      free(entry);",
          "454:     }",
          "456:    }",
          "457:    off += 2;",
          "458:    rz_list_append(entries, entry);",
          "459:   }",
          "460:  }",
          "461:  rz_list_free(segments);",
          "462:  bin->entries = entries;",
          "463:  return entries;",
          "",
          "[Removed Lines]",
          "441:     ut8 segnum = *(bin->entry_table + off);",
          "443:     ut16 segoff = *(ut16 *)(bin->entry_table + off);",
          "444:     if (!segnum) {",
          "450:     ut16 *p = (ut16 *)(bin->entry_table + off);",
          "451:     if (off >= bin->ne_header->EntryTableLength || bundle_type > bin->ne_header->SegCount) {",
          "453:      continue;",
          "455:     entry->paddr = (ut64)bin->segment_entries[bundle_type - 1].offset * bin->alignment + (*p);",
          "",
          "[Added Lines]",
          "441:     if ((off + 1) >= bin->ne_header->EntryTableLength) {",
          "442:      free(entry);",
          "443:      goto end;",
          "444:     }",
          "445:     ut8 segnum = rz_read_le8(bin->entry_table + off);",
          "447:     if ((off + 2) >= bin->ne_header->EntryTableLength) {",
          "448:      free(entry);",
          "449:      goto end;",
          "450:     }",
          "451:     ut16 segoff = rz_read_le16(bin->entry_table + off);",
          "452:     if (!segnum || segnum > bin->ne_header->SegCount) {",
          "458:     ut8 *p = bin->entry_table + off;",
          "459:     if ((off + 2) >= bin->ne_header->EntryTableLength || bundle_type > bin->ne_header->SegCount) {",
          "461:      goto end;",
          "463:     entry->paddr = (ut64)bin->segment_entries[bundle_type - 1].offset * bin->alignment + rz_read_le16(p);",
          "469: end:",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "37a875aa604e7350a489133dee63d16d5ef4b935",
      "candidate_info": {
        "commit_hash": "37a875aa604e7350a489133dee63d16d5ef4b935",
        "repo": "rizinorg/rizin",
        "commit_url": "https://github.com/rizinorg/rizin/commit/37a875aa604e7350a489133dee63d16d5ef4b935",
        "files": [
          "librz/bin/format/pe/pe_info.c",
          "librz/bin/golang.c"
        ],
        "message": "fix #2970 - oob read in pe/pe_info.c and bin/golang.c",
        "before_after_code_files": [
          "librz/bin/format/pe/pe_info.c||librz/bin/format/pe/pe_info.c",
          "librz/bin/golang.c||librz/bin/golang.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/rizinorg/rizin/pull/2977"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "librz/bin/format/pe/pe_info.c||librz/bin/format/pe/pe_info.c": [
          "File: librz/bin/format/pe/pe_info.c -> librz/bin/format/pe/pe_info.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "613:  return rz_buf_read_at(buf, entry->paddr, b, len) > 0;",
          "614: }",
          "617:  const st32 dst_offset = rz_read_ble32(b + instr_off + 1, big_endian) + instr_off + 5;",
          "618:  entry->paddr += dst_offset;",
          "619:  entry->vaddr += dst_offset;",
          "",
          "[Removed Lines]",
          "616: static inline bool follow_offset(struct rz_bin_pe_addr_t *entry, RzBuffer *buf, ut8 *b, int len, bool big_endian, size_t instr_off) {",
          "",
          "[Added Lines]",
          "616: static inline bool follow_offset(struct rz_bin_pe_addr_t *entry, RzBuffer *buf, ut8 *b, size_t len, bool big_endian, size_t instr_off) {",
          "617:  if (instr_off + 5 >= len) {",
          "618:   return false;",
          "619:  }",
          "",
          "---------------"
        ],
        "librz/bin/golang.c||librz/bin/golang.c": [
          "File: librz/bin/golang.c -> librz/bin/golang.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "175:   RZ_LOG_ERROR(\"goinfo: Cannot read build info header at 0x%08\" PFMT64x \" (phy)\\n\", bi_paddr);",
          "176:   return;",
          "177:  }",
          "178:  ut32 ptr_size = tmp32[14];",
          "179:  ut32 setting_sz = 0;",
          "180:  if (tmp32[15] & 2) {",
          "181:   ut8 *buffer = malloc(GOLANG_MAX_STRING_BUF);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "180:  if (ptr_size != 4 && ptr_size != 8) {",
          "181:   return;",
          "182:  }",
          "",
          "---------------"
        ]
      }
    }
  ]
}