{
  "cve_id": "CVE-2021-23191",
  "cve_desc": "A security issue was found in htmldoc v1.9.12 and before. A NULL pointer dereference in the function image_load_jpeg() in image.cxx may result in denial of service.",
  "repo": "michaelrsweet/htmldoc",
  "patch_hash": "369b2ea1fd0d0537ba707f20a2f047b6afd2fbdc",
  "patch_info": {
    "commit_hash": "369b2ea1fd0d0537ba707f20a2f047b6afd2fbdc",
    "repo": "michaelrsweet/htmldoc",
    "commit_url": "https://github.com/michaelrsweet/htmldoc/commit/369b2ea1fd0d0537ba707f20a2f047b6afd2fbdc",
    "files": [
      "CHANGES.md",
      "htmldoc/file.c",
      "htmldoc/image.cxx",
      "htmldoc/ps-pdf.cxx"
    ],
    "message": "Fix JPEG error handling (Issue #415)",
    "before_after_code_files": [
      "htmldoc/file.c||htmldoc/file.c",
      "htmldoc/image.cxx||htmldoc/image.cxx",
      "htmldoc/ps-pdf.cxx||htmldoc/ps-pdf.cxx"
    ]
  },
  "patch_diff": {
    "htmldoc/file.c||htmldoc/file.c": [
      "File: htmldoc/file.c -> htmldoc/file.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1012:   for (i = web_files, wc = web_cache; i > 0; i --, wc ++)",
      "1013:     if (!strcmp(wc->name, filename))",
      "1016:   return (filename);",
      "1017: }",
      "",
      "[Removed Lines]",
      "1014:       return (wc->url);",
      "",
      "[Added Lines]",
      "1013:   {",
      "1015:     {",
      "1016:       if (!strncmp(wc->url, \"data:\", 5))",
      "1017:         return (\"data URL\");",
      "1018:       else",
      "1019:         return (wc->url);",
      "1020:     }",
      "1021:   }",
      "",
      "---------------"
    ],
    "htmldoc/image.cxx||htmldoc/image.cxx": [
      "File: htmldoc/image.cxx -> htmldoc/image.cxx",
      "--- Hunk 1 ---",
      "[Context before]",
      "1336: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1339: typedef struct hd_jpeg_err_s // JPEG error manager extension",
      "1340: {",
      "1341:   struct jpeg_error_mgr jerr; // JPEG error manager information",
      "1342:   jmp_buf retbuf;  // setjmp() return buffer",
      "1343:   char  message[JMSG_LENGTH_MAX];",
      "1345: } hd_jpeg_err_t;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1348: {",
      "1358:   jpeg_create_decompress(&cinfo);",
      "1359:   jpeg_stdio_src(&cinfo, fp);",
      "1360:   jpeg_read_header(&cinfo, (boolean)1);",
      "",
      "[Removed Lines]",
      "1354:   jpeg_std_error(&jerr);",
      "1355:   jerr.error_exit = jpeg_error_handler;",
      "1357:   cinfo.err = &jerr;",
      "",
      "[Added Lines]",
      "1359:   hd_jpeg_err_t   jerr;  // JPEG error handler",
      "1363:   jpeg_std_error(&jerr.jerr);",
      "1364:   jerr.jerr.error_exit = jpeg_error_handler;",
      "1366:   if (setjmp(jerr.retbuf))",
      "1367:   {",
      "1368:     progress_error(HD_ERROR_BAD_FORMAT, \"%s (%s)\", jerr.message,  file_rlookup(img->filename));",
      "1369:     jpeg_destroy_decompress(&cinfo);",
      "1370:     return (-1);",
      "1371:   }",
      "1373:   cinfo.err = (struct jpeg_error_mgr *)&jerr;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1799: static void",
      "1801: {",
      "1803: }",
      "",
      "[Removed Lines]",
      "1800: jpeg_error_handler(j_common_ptr)",
      "1802:   return;",
      "",
      "[Added Lines]",
      "1816: jpeg_error_handler(j_common_ptr p) // Common JPEG data",
      "1818:   hd_jpeg_err_t *jerr = (hd_jpeg_err_t *)p->err;",
      "1823:   (jerr->jerr.format_message)(p, jerr->message);",
      "1826:   longjmp(jerr->retbuf, 1);",
      "",
      "---------------"
    ],
    "htmldoc/ps-pdf.cxx||htmldoc/ps-pdf.cxx": [
      "File: htmldoc/ps-pdf.cxx -> htmldoc/ps-pdf.cxx",
      "--- Hunk 1 ---",
      "[Context before]",
      "1406:   DEBUG_printf((\"pspdf_prepare_page(%d)\\n\", page));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1407:   if (page < 0 || page >= num_pages)",
      "1408:     return;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "12286:       for (j = 1; j <= TocDocCount; j ++)",
      "12287:       {",
      "12288:         page  = pages + chapter_starts[j];",
      "12289:  start = chapter_starts[j] - chapter_starts[1] + 1;",
      "12290:  type  = 'D';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "12290:         if (chapter_starts[j] < 0)",
      "12291:           continue;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "eb6d6a72e3f6e0641f96902f6f2a77d1114bffb7",
      "candidate_info": {
        "commit_hash": "eb6d6a72e3f6e0641f96902f6f2a77d1114bffb7",
        "repo": "michaelrsweet/htmldoc",
        "commit_url": "https://github.com/michaelrsweet/htmldoc/commit/eb6d6a72e3f6e0641f96902f6f2a77d1114bffb7",
        "files": [
          "htmldoc/ps-pdf.cxx"
        ],
        "message": "Fix compiler warning.",
        "before_after_code_files": [
          "htmldoc/ps-pdf.cxx||htmldoc/ps-pdf.cxx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "htmldoc/ps-pdf.cxx||htmldoc/ps-pdf.cxx"
          ],
          "candidate": [
            "htmldoc/ps-pdf.cxx||htmldoc/ps-pdf.cxx"
          ]
        }
      },
      "candidate_diff": {
        "htmldoc/ps-pdf.cxx||htmldoc/ps-pdf.cxx": [
          "File: htmldoc/ps-pdf.cxx -> htmldoc/ps-pdf.cxx",
          "--- Hunk 1 ---",
          "[Context before]",
          "1406:   DEBUG_printf((\"pspdf_prepare_page(%d)\\n\", page));",
          "1408:     return;",
          "",
          "[Removed Lines]",
          "1407:   if (page < 0 || page >= num_pages)",
          "",
          "[Added Lines]",
          "1407:   if (page < 0 || (size_t)page >= num_pages)",
          "",
          "---------------"
        ]
      }
    }
  ]
}