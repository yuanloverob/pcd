{
  "cve_id": "CVE-2014-0218",
  "cve_desc": "Cross-site scripting (XSS) vulnerability in the URL downloader repository in repository/url/lib.php in Moodle through 2.3.11, 2.4.x before 2.4.10, 2.5.x before 2.5.6, and 2.6.x before 2.6.3 allows remote attackers to inject arbitrary web script or HTML via unspecified vectors.",
  "repo": "moodle/moodle",
  "patch_hash": "c5e8a036c509197bb2927f47c0579992be479f35",
  "patch_info": {
    "commit_hash": "c5e8a036c509197bb2927f47c0579992be479f35",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/c5e8a036c509197bb2927f47c0579992be479f35",
    "files": [
      "repository/url/lib.php"
    ],
    "message": "MDL-45332 repository_url: URL parameter is using PARAM_URL",
    "before_after_code_files": [
      "repository/url/lib.php||repository/url/lib.php"
    ]
  },
  "patch_diff": {
    "repository/url/lib.php||repository/url/lib.php": [
      "File: repository/url/lib.php -> repository/url/lib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "46:     public function __construct($repositoryid, $context = SYSCONTEXTID, $options = array()){",
      "47:         global $CFG;",
      "48:         parent::__construct($repositoryid, $context, $options);",
      "50:     }",
      "52:     public function check_login() {",
      "",
      "[Removed Lines]",
      "49:         $this->file_url = optional_param('file', '', PARAM_RAW);",
      "",
      "[Added Lines]",
      "49:         $this->file_url = optional_param('file', '', PARAM_URL);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6ae671b784d29e19ea98a8bc53933226ecddf642",
      "candidate_info": {
        "commit_hash": "6ae671b784d29e19ea98a8bc53933226ecddf642",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/6ae671b784d29e19ea98a8bc53933226ecddf642",
        "files": [
          "repository/url/lib.php",
          "repository/url/tests/lib_test.php"
        ],
        "message": "MDL-41846 repository_url: Escape > < ' \" in input url\n\nAnd throw an exception when a url is incorrectly formatted",
        "before_after_code_files": [
          "repository/url/lib.php||repository/url/lib.php",
          "repository/url/tests/lib_test.php||repository/url/tests/lib_test.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "repository/url/lib.php||repository/url/lib.php"
          ],
          "candidate": [
            "repository/url/lib.php||repository/url/lib.php"
          ]
        }
      },
      "candidate_diff": {
        "repository/url/lib.php||repository/url/lib.php": [
          "File: repository/url/lib.php -> repository/url/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:     public function __construct($repositoryid, $context = SYSCONTEXTID, $options = array()){",
          "47:         global $CFG;",
          "48:         parent::__construct($repositoryid, $context, $options);",
          "50:         $this->file_url = $this->escape_url($this->file_url);",
          "52:     }",
          "54:     public function check_login() {",
          "",
          "[Removed Lines]",
          "49:         $this->file_url = optional_param('file', '', PARAM_TEXT);",
          "51:         $this->file_url = clean_param($this->file_url, PARAM_URL);",
          "",
          "[Added Lines]",
          "49:         $this->file_url = optional_param('file', '', PARAM_RAW);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "97:     public function get_listing($path='', $page='') {",
          "99:         $ret = array();",
          "100:         $ret['list'] = array();",
          "101:         $ret['nosearch'] = true;",
          "102:         $ret['norefresh'] = true;",
          "103:         $ret['nologin'] = true;",
          "105:         $this->parse_file(null, $this->file_url, $ret, true);",
          "106:         return $ret;",
          "107:     }",
          "",
          "[Removed Lines]",
          "98:         global $CFG, $OUTPUT;",
          "",
          "[Added Lines]",
          "103:         $this->file_url = clean_param($this->file_url, PARAM_URL);",
          "104:         if (empty($this->file_url)) {",
          "105:             throw new repository_exception('validfiletype', 'repository_url');",
          "106:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "231:     protected function escape_url($url) {",
          "232:         $url = str_replace(' ', '%20', $url);",
          "233:         return $url;",
          "234:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "237:         $url = str_replace('\"', '%22', $url);",
          "238:         $url = str_replace('\\'', '%27', $url);",
          "240:         $url = str_replace('<', '%3C', $url);",
          "241:         $url = str_replace('>', '%3E', $url);",
          "",
          "---------------"
        ],
        "repository/url/tests/lib_test.php||repository/url/tests/lib_test.php": [
          "File: repository/url/tests/lib_test.php -> repository/url/tests/lib_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:         $repoid = $this->getDataGenerator()->create_repository('url')->id;",
          "48:                 'http://example.com/test_file.png' => 'http://example.com/test_file.png',",
          "49:                 'http://example.com/test%20file.png' => 'http://example.com/test%20file.png',",
          "50:                 'http://example.com/test file.png' => 'http://example.com/test%20file.png',",
          "51:                 'http://example.com/test file.png?query=string+test&more=string+tests' =>",
          "53:             );",
          "57:             $_GET['file'] = $input;",
          "58:             $repository = new repository_url($repoid);",
          "59:             $this->assertSame($expected, $repository->file_url);",
          "60:         }",
          "62:         unset($_GET['file']);",
          "63:     }",
          "",
          "[Removed Lines]",
          "47:         $testdata = array(",
          "52:                     'http://example.com/test%20file.png?query=string+test&more=string+tests'",
          "55:         foreach ($testdata as $input => $expected) {",
          "",
          "[Added Lines]",
          "47:         $conversions = array(",
          "52:                     'http://example.com/test%20file.png?query=string+test&more=string+tests',",
          "53:                 'http://example.com/?tag=<p>' => 'http://example.com/?tag=%3Cp%3E',",
          "54:                 'http://example.com/\"quoted\".txt' => 'http://example.com/%22quoted%22.txt',",
          "55:                 'http://example.com/\\'quoted\\'.txt' => 'http://example.com/%27quoted%27.txt',",
          "56:                 '' => ''",
          "59:         foreach ($conversions as $input => $expected) {",
          "66:         $exceptions = array(",
          "67:                 '%' => true,",
          "68:                 '!' => true,",
          "69:                 '!https://download.moodle.org/unittest/test.jpg' => true,",
          "70:                 'https://download.moodle.org/unittest/test.jpg' => false",
          "71:             );",
          "73:         foreach ($exceptions as $input => $expected) {",
          "74:             $caughtexception = false;",
          "75:             try {",
          "77:                 $_GET['file'] = $input;",
          "78:                 $repository = new repository_url($repoid);",
          "79:                 $repository->get_listing();",
          "80:             } catch (repository_exception $e) {",
          "81:                 if ($e->errorcode == 'validfiletype') {",
          "82:                     $caughtexception = true;",
          "83:                 }",
          "84:             }",
          "85:             $this->assertSame($expected, $caughtexception);",
          "86:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "80a0fee26629481838b1a1526e4d3e15797c0241",
      "candidate_info": {
        "commit_hash": "80a0fee26629481838b1a1526e4d3e15797c0241",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/80a0fee26629481838b1a1526e4d3e15797c0241",
        "files": [
          "repository/url/lib.php",
          "repository/url/tests/lib_test.php"
        ],
        "message": "MDL-41846 repository_url: Convert spaces to %20 in input url",
        "before_after_code_files": [
          "repository/url/lib.php||repository/url/lib.php",
          "repository/url/tests/lib_test.php||repository/url/tests/lib_test.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "repository/url/lib.php||repository/url/lib.php"
          ],
          "candidate": [
            "repository/url/lib.php||repository/url/lib.php"
          ]
        }
      },
      "candidate_diff": {
        "repository/url/lib.php||repository/url/lib.php": [
          "File: repository/url/lib.php -> repository/url/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:     public function __construct($repositoryid, $context = SYSCONTEXTID, $options = array()){",
          "47:         global $CFG;",
          "48:         parent::__construct($repositoryid, $context, $options);",
          "50:     }",
          "52:     public function check_login() {",
          "",
          "[Removed Lines]",
          "49:         $this->file_url = optional_param('file', '', PARAM_URL);",
          "",
          "[Added Lines]",
          "49:         $this->file_url = optional_param('file', '', PARAM_TEXT);",
          "50:         $this->file_url = $this->escape_url($this->file_url);",
          "51:         $this->file_url = clean_param($this->file_url, PARAM_URL);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "217:         }",
          "218:     }",
          "220:     public function supported_returntypes() {",
          "221:         return (FILE_INTERNAL | FILE_EXTERNAL);",
          "222:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "231:     protected function escape_url($url) {",
          "232:         $url = str_replace(' ', '%20', $url);",
          "233:         return $url;",
          "234:     }",
          "",
          "---------------"
        ],
        "repository/url/tests/lib_test.php||repository/url/tests/lib_test.php": [
          "File: repository/url/tests/lib_test.php -> repository/url/tests/lib_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "25: defined('MOODLE_INTERNAL') || die;",
          "27: global $CFG;",
          "28: require_once($CFG->dirroot . '/repository/url/lib.php');",
          "37: class repository_url_lib_testcase extends advanced_testcase {",
          "42:     public function test_escape_url() {",
          "43:         $this->resetAfterTest();",
          "45:         $repoid = $this->getDataGenerator()->create_repository('url')->id;",
          "47:         $testdata = array(",
          "48:                 'http://example.com/test_file.png' => 'http://example.com/test_file.png',",
          "49:                 'http://example.com/test%20file.png' => 'http://example.com/test%20file.png',",
          "50:                 'http://example.com/test file.png' => 'http://example.com/test%20file.png',",
          "51:                 'http://example.com/test file.png?query=string+test&more=string+tests' =>",
          "52:                     'http://example.com/test%20file.png?query=string+test&more=string+tests'",
          "53:             );",
          "55:         foreach ($testdata as $input => $expected) {",
          "57:             $_GET['file'] = $input;",
          "58:             $repository = new repository_url($repoid);",
          "59:             $this->assertSame($expected, $repository->file_url);",
          "60:         }",
          "62:         unset($_GET['file']);",
          "63:     }",
          "65: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "be305dc13ab0ff631ad31dd91161e25c67fbb6b6",
      "candidate_info": {
        "commit_hash": "be305dc13ab0ff631ad31dd91161e25c67fbb6b6",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/be305dc13ab0ff631ad31dd91161e25c67fbb6b6",
        "files": [
          "repository/url/lib.php",
          "repository/url/tests/lib_test.php"
        ],
        "message": "MDL-41846 repository_url: Escape > < ' \" in input url\n\nAnd throw an exception when a url is incorrectly formatted",
        "before_after_code_files": [
          "repository/url/lib.php||repository/url/lib.php",
          "repository/url/tests/lib_test.php||repository/url/tests/lib_test.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "repository/url/lib.php||repository/url/lib.php"
          ],
          "candidate": [
            "repository/url/lib.php||repository/url/lib.php"
          ]
        }
      },
      "candidate_diff": {
        "repository/url/lib.php||repository/url/lib.php": [
          "File: repository/url/lib.php -> repository/url/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:     public function __construct($repositoryid, $context = SYSCONTEXTID, $options = array()){",
          "47:         global $CFG;",
          "48:         parent::__construct($repositoryid, $context, $options);",
          "50:         $this->file_url = $this->escape_url($this->file_url);",
          "52:     }",
          "54:     public function check_login() {",
          "",
          "[Removed Lines]",
          "49:         $this->file_url = optional_param('file', '', PARAM_TEXT);",
          "51:         $this->file_url = clean_param($this->file_url, PARAM_URL);",
          "",
          "[Added Lines]",
          "49:         $this->file_url = optional_param('file', '', PARAM_RAW);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "97:     public function get_listing($path='', $page='') {",
          "99:         $ret = array();",
          "100:         $ret['list'] = array();",
          "101:         $ret['nosearch'] = true;",
          "102:         $ret['norefresh'] = true;",
          "103:         $ret['nologin'] = true;",
          "105:         $this->parse_file(null, $this->file_url, $ret, true);",
          "106:         return $ret;",
          "107:     }",
          "",
          "[Removed Lines]",
          "98:         global $CFG, $OUTPUT;",
          "",
          "[Added Lines]",
          "103:         $this->file_url = clean_param($this->file_url, PARAM_URL);",
          "104:         if (empty($this->file_url)) {",
          "105:             throw new repository_exception('validfiletype', 'repository_url');",
          "106:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "231:     protected function escape_url($url) {",
          "232:         $url = str_replace(' ', '%20', $url);",
          "233:         return $url;",
          "234:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "237:         $url = str_replace('\"', '%22', $url);",
          "238:         $url = str_replace('\\'', '%27', $url);",
          "240:         $url = str_replace('<', '%3C', $url);",
          "241:         $url = str_replace('>', '%3E', $url);",
          "",
          "---------------"
        ],
        "repository/url/tests/lib_test.php||repository/url/tests/lib_test.php": [
          "File: repository/url/tests/lib_test.php -> repository/url/tests/lib_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:         $repoid = $this->getDataGenerator()->create_repository('url')->id;",
          "48:                 'http://example.com/test_file.png' => 'http://example.com/test_file.png',",
          "49:                 'http://example.com/test%20file.png' => 'http://example.com/test%20file.png',",
          "50:                 'http://example.com/test file.png' => 'http://example.com/test%20file.png',",
          "51:                 'http://example.com/test file.png?query=string+test&more=string+tests' =>",
          "53:             );",
          "57:             $_GET['file'] = $input;",
          "58:             $repository = new repository_url($repoid);",
          "59:             $this->assertSame($expected, $repository->file_url);",
          "60:         }",
          "62:         unset($_GET['file']);",
          "63:     }",
          "",
          "[Removed Lines]",
          "47:         $testdata = array(",
          "52:                     'http://example.com/test%20file.png?query=string+test&more=string+tests'",
          "55:         foreach ($testdata as $input => $expected) {",
          "",
          "[Added Lines]",
          "47:         $conversions = array(",
          "52:                     'http://example.com/test%20file.png?query=string+test&more=string+tests',",
          "53:                 'http://example.com/?tag=<p>' => 'http://example.com/?tag=%3Cp%3E',",
          "54:                 'http://example.com/\"quoted\".txt' => 'http://example.com/%22quoted%22.txt',",
          "55:                 'http://example.com/\\'quoted\\'.txt' => 'http://example.com/%27quoted%27.txt',",
          "56:                 '' => ''",
          "59:         foreach ($conversions as $input => $expected) {",
          "66:         $exceptions = array(",
          "67:                 '%' => true,",
          "68:                 '!' => true,",
          "69:                 '!https://download.moodle.org/unittest/test.jpg' => true,",
          "70:                 'https://download.moodle.org/unittest/test.jpg' => false",
          "71:             );",
          "73:         foreach ($exceptions as $input => $expected) {",
          "74:             $caughtexception = false;",
          "75:             try {",
          "77:                 $_GET['file'] = $input;",
          "78:                 $repository = new repository_url($repoid);",
          "79:                 $repository->get_listing();",
          "80:             } catch (repository_exception $e) {",
          "81:                 if ($e->errorcode == 'validfiletype') {",
          "82:                     $caughtexception = true;",
          "83:                 }",
          "84:             }",
          "85:             $this->assertSame($expected, $caughtexception);",
          "86:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0ce7dfb2d435ca4401f43035ce3f96fcd1602b98",
      "candidate_info": {
        "commit_hash": "0ce7dfb2d435ca4401f43035ce3f96fcd1602b98",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/0ce7dfb2d435ca4401f43035ce3f96fcd1602b98",
        "files": [
          "repository/url/lib.php",
          "repository/url/tests/lib_test.php"
        ],
        "message": "MDL-41846 repository_url: Convert spaces to %20 in input url",
        "before_after_code_files": [
          "repository/url/lib.php||repository/url/lib.php",
          "repository/url/tests/lib_test.php||repository/url/tests/lib_test.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "repository/url/lib.php||repository/url/lib.php"
          ],
          "candidate": [
            "repository/url/lib.php||repository/url/lib.php"
          ]
        }
      },
      "candidate_diff": {
        "repository/url/lib.php||repository/url/lib.php": [
          "File: repository/url/lib.php -> repository/url/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:     public function __construct($repositoryid, $context = SYSCONTEXTID, $options = array()){",
          "47:         global $CFG;",
          "48:         parent::__construct($repositoryid, $context, $options);",
          "50:     }",
          "52:     public function check_login() {",
          "",
          "[Removed Lines]",
          "49:         $this->file_url = optional_param('file', '', PARAM_URL);",
          "",
          "[Added Lines]",
          "49:         $this->file_url = optional_param('file', '', PARAM_TEXT);",
          "50:         $this->file_url = $this->escape_url($this->file_url);",
          "51:         $this->file_url = clean_param($this->file_url, PARAM_URL);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "217:         }",
          "218:     }",
          "220:     public function supported_returntypes() {",
          "221:         return (FILE_INTERNAL | FILE_EXTERNAL);",
          "222:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "231:     protected function escape_url($url) {",
          "232:         $url = str_replace(' ', '%20', $url);",
          "233:         return $url;",
          "234:     }",
          "",
          "---------------"
        ],
        "repository/url/tests/lib_test.php||repository/url/tests/lib_test.php": [
          "File: repository/url/tests/lib_test.php -> repository/url/tests/lib_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "25: defined('MOODLE_INTERNAL') || die;",
          "27: global $CFG;",
          "28: require_once($CFG->dirroot . '/repository/url/lib.php');",
          "37: class repository_url_lib_testcase extends advanced_testcase {",
          "42:     public function test_escape_url() {",
          "43:         $this->resetAfterTest();",
          "45:         $repoid = $this->getDataGenerator()->create_repository('url')->id;",
          "47:         $testdata = array(",
          "48:                 'http://example.com/test_file.png' => 'http://example.com/test_file.png',",
          "49:                 'http://example.com/test%20file.png' => 'http://example.com/test%20file.png',",
          "50:                 'http://example.com/test file.png' => 'http://example.com/test%20file.png',",
          "51:                 'http://example.com/test file.png?query=string+test&more=string+tests' =>",
          "52:                     'http://example.com/test%20file.png?query=string+test&more=string+tests'",
          "53:             );",
          "55:         foreach ($testdata as $input => $expected) {",
          "57:             $_GET['file'] = $input;",
          "58:             $repository = new repository_url($repoid);",
          "59:             $this->assertSame($expected, $repository->file_url);",
          "60:         }",
          "62:         unset($_GET['file']);",
          "63:     }",
          "65: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dbe6a4d1882159920b80b49d660a33d54d3bd453",
      "candidate_info": {
        "commit_hash": "dbe6a4d1882159920b80b49d660a33d54d3bd453",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/dbe6a4d1882159920b80b49d660a33d54d3bd453",
        "files": [
          "repository/url/lib.php",
          "repository/url/tests/lib_test.php"
        ],
        "message": "MDL-41846 repository_url: Convert spaces to %20 in input url",
        "before_after_code_files": [
          "repository/url/lib.php||repository/url/lib.php",
          "repository/url/tests/lib_test.php||repository/url/tests/lib_test.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "repository/url/lib.php||repository/url/lib.php"
          ],
          "candidate": [
            "repository/url/lib.php||repository/url/lib.php"
          ]
        }
      },
      "candidate_diff": {
        "repository/url/lib.php||repository/url/lib.php": [
          "File: repository/url/lib.php -> repository/url/lib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:     public function __construct($repositoryid, $context = SYSCONTEXTID, $options = array()){",
          "47:         global $CFG;",
          "48:         parent::__construct($repositoryid, $context, $options);",
          "50:     }",
          "52:     public function check_login() {",
          "",
          "[Removed Lines]",
          "49:         $this->file_url = optional_param('file', '', PARAM_URL);",
          "",
          "[Added Lines]",
          "49:         $this->file_url = optional_param('file', '', PARAM_TEXT);",
          "50:         $this->file_url = $this->escape_url($this->file_url);",
          "51:         $this->file_url = clean_param($this->file_url, PARAM_URL);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "217:         }",
          "218:     }",
          "220:     public function supported_returntypes() {",
          "221:         return (FILE_INTERNAL | FILE_EXTERNAL);",
          "222:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "231:     protected function escape_url($url) {",
          "232:         $url = str_replace(' ', '%20', $url);",
          "233:         return $url;",
          "234:     }",
          "",
          "---------------"
        ],
        "repository/url/tests/lib_test.php||repository/url/tests/lib_test.php": [
          "File: repository/url/tests/lib_test.php -> repository/url/tests/lib_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "25: defined('MOODLE_INTERNAL') || die;",
          "27: global $CFG;",
          "28: require_once($CFG->dirroot . '/repository/url/lib.php');",
          "37: class repository_url_lib_testcase extends advanced_testcase {",
          "42:     public function test_escape_url() {",
          "43:         $this->resetAfterTest();",
          "45:         $repoid = $this->getDataGenerator()->create_repository('url')->id;",
          "47:         $testdata = array(",
          "48:                 'http://example.com/test_file.png' => 'http://example.com/test_file.png',",
          "49:                 'http://example.com/test%20file.png' => 'http://example.com/test%20file.png',",
          "50:                 'http://example.com/test file.png' => 'http://example.com/test%20file.png',",
          "51:                 'http://example.com/test file.png?query=string+test&more=string+tests' =>",
          "52:                     'http://example.com/test%20file.png?query=string+test&more=string+tests'",
          "53:             );",
          "55:         foreach ($testdata as $input => $expected) {",
          "57:             $_GET['file'] = $input;",
          "58:             $repository = new repository_url($repoid);",
          "59:             $this->assertSame($expected, $repository->file_url);",
          "60:         }",
          "62:         unset($_GET['file']);",
          "63:     }",
          "65: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}