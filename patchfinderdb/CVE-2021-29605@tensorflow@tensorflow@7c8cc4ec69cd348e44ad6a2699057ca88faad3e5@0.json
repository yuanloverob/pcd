{
  "cve_id": "CVE-2021-29605",
  "cve_desc": "TensorFlow is an end-to-end open source platform for machine learning. The TFLite code for allocating `TFLiteIntArray`s is vulnerable to an integer overflow issue(https://github.com/tensorflow/tensorflow/blob/4ceffae632721e52bf3501b736e4fe9d1221cdfa/tensorflow/lite/c/common.c#L24-L27). An attacker can craft a model such that the `size` multiplier is so large that the return value overflows the `int` datatype and becomes negative. In turn, this results in invalid value being given to `malloc`(https://github.com/tensorflow/tensorflow/blob/4ceffae632721e52bf3501b736e4fe9d1221cdfa/tensorflow/lite/c/common.c#L47-L52). In this case, `ret->size` would dereference an invalid pointer. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "7c8cc4ec69cd348e44ad6a2699057ca88faad3e5",
  "patch_info": {
    "commit_hash": "7c8cc4ec69cd348e44ad6a2699057ca88faad3e5",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/7c8cc4ec69cd348e44ad6a2699057ca88faad3e5",
    "files": [
      "tensorflow/lite/c/common.c",
      "tensorflow/lite/kernels/embedding_lookup_sparse.cc"
    ],
    "message": "Fix a dangerous integer overflow and a malloc of negative size.\n\nPiperOrigin-RevId: 371254154\nChange-Id: I250a98a3df26328770167025670235a963a72da0",
    "before_after_code_files": [
      "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c",
      "tensorflow/lite/kernels/embedding_lookup_sparse.cc||tensorflow/lite/kernels/embedding_lookup_sparse.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c": [
      "File: tensorflow/lite/c/common.c -> tensorflow/lite/c/common.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "45: #ifndef TF_LITE_STATIC_MEMORY",
      "47: TfLiteIntArray* TfLiteIntArrayCreate(int size) {",
      "50:   ret->size = size;",
      "51:   return ret;",
      "52: }",
      "",
      "[Removed Lines]",
      "48:   TfLiteIntArray* ret =",
      "49:       (TfLiteIntArray*)malloc(TfLiteIntArrayGetSizeInBytes(size));",
      "",
      "[Added Lines]",
      "48:   int alloc_size = TfLiteIntArrayGetSizeInBytes(size);",
      "49:   if (alloc_size <= 0) return NULL;",
      "50:   TfLiteIntArray* ret = (TfLiteIntArray*)malloc(alloc_size);",
      "51:   if (!ret) return ret;",
      "",
      "---------------"
    ],
    "tensorflow/lite/kernels/embedding_lookup_sparse.cc||tensorflow/lite/kernels/embedding_lookup_sparse.cc": [
      "File: tensorflow/lite/kernels/embedding_lookup_sparse.cc -> tensorflow/lite/kernels/embedding_lookup_sparse.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "175:   TfLiteIntArray* output_shape = TfLiteIntArrayCreate(output_rank);",
      "176:   int k = 0;",
      "177:   int embedding_size = 1;",
      "178:   int lookup_size = 1;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "176:   TF_LITE_ENSURE(context, output_shape != nullptr);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "df9521ab172bd36e3e360d5fce6244c301c9e886",
      "candidate_info": {
        "commit_hash": "df9521ab172bd36e3e360d5fce6244c301c9e886",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/df9521ab172bd36e3e360d5fce6244c301c9e886",
        "files": [
          "tensorflow/lite/c/common.c",
          "tensorflow/lite/c/common.h"
        ],
        "message": "[lite] Update TfLiteIntArrayCreate to return size_t\n\nPiperOrigin-RevId: 416439896\nChange-Id: I847f69b68d1ddaff4b1e925a09b8b69c1756653b",
        "before_after_code_files": [
          "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c",
          "tensorflow/lite/c/common.h||tensorflow/lite/c/common.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c"
          ],
          "candidate": [
            "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c": [
          "File: tensorflow/lite/c/common.c -> tensorflow/lite/c/common.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: #include <string.h>",
          "22: #endif  // TF_LITE_STATIC_MEMORY",
          "25:   static TfLiteIntArray dummy;",
          "26:   return sizeof(dummy) + sizeof(dummy.data[0]) * size;",
          "27: }",
          "",
          "[Removed Lines]",
          "24: int TfLiteIntArrayGetSizeInBytes(int size) {",
          "",
          "[Added Lines]",
          "24: size_t TfLiteIntArrayGetSizeInBytes(int size) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45: #ifndef TF_LITE_STATIC_MEMORY",
          "47: TfLiteIntArray* TfLiteIntArrayCreate(int size) {",
          "49:   if (alloc_size <= 0) return NULL;",
          "50:   TfLiteIntArray* ret = (TfLiteIntArray*)malloc(alloc_size);",
          "51:   if (!ret) return ret;",
          "",
          "[Removed Lines]",
          "48:   int alloc_size = TfLiteIntArrayGetSizeInBytes(size);",
          "",
          "[Added Lines]",
          "48:   size_t alloc_size = TfLiteIntArrayGetSizeInBytes(size);",
          "",
          "---------------"
        ],
        "tensorflow/lite/c/common.h||tensorflow/lite/c/common.h": [
          "File: tensorflow/lite/c/common.h -> tensorflow/lite/c/common.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "99: #ifndef TF_LITE_STATIC_MEMORY",
          "",
          "[Removed Lines]",
          "97: int TfLiteIntArrayGetSizeInBytes(int size);",
          "",
          "[Added Lines]",
          "97: size_t TfLiteIntArrayGetSizeInBytes(int size);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a1e1511dde36b3f8aa27a6ec630838e7ea40e091",
      "candidate_info": {
        "commit_hash": "a1e1511dde36b3f8aa27a6ec630838e7ea40e091",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/a1e1511dde36b3f8aa27a6ec630838e7ea40e091",
        "files": [
          "tensorflow/lite/c/common.c",
          "tensorflow/lite/c/common.h"
        ],
        "message": "[lite] Update TfLiteIntArrayCreate to return size_t\n\nPiperOrigin-RevId: 416439896\nChange-Id: I847f69b68d1ddaff4b1e925a09b8b69c1756653b",
        "before_after_code_files": [
          "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c",
          "tensorflow/lite/c/common.h||tensorflow/lite/c/common.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c"
          ],
          "candidate": [
            "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c": [
          "File: tensorflow/lite/c/common.c -> tensorflow/lite/c/common.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: #include <string.h>",
          "22: #endif  // TF_LITE_STATIC_MEMORY",
          "25:   static TfLiteIntArray dummy;",
          "28: #if defined(_MSC_VER)",
          "30:   computed_size -= sizeof(dummy.data[0]);",
          "",
          "[Removed Lines]",
          "24: int TfLiteIntArrayGetSizeInBytes(int size) {",
          "27:   int computed_size = sizeof(dummy) + sizeof(dummy.data[0]) * size;",
          "",
          "[Added Lines]",
          "24: size_t TfLiteIntArrayGetSizeInBytes(int size) {",
          "27:   size_t computed_size = sizeof(dummy) + sizeof(dummy.data[0]) * size;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "51: #ifndef TF_LITE_STATIC_MEMORY",
          "53: TfLiteIntArray* TfLiteIntArrayCreate(int size) {",
          "55:   if (alloc_size <= 0) return NULL;",
          "56:   TfLiteIntArray* ret = (TfLiteIntArray*)malloc(alloc_size);",
          "57:   if (!ret) return ret;",
          "",
          "[Removed Lines]",
          "54:   int alloc_size = TfLiteIntArrayGetSizeInBytes(size);",
          "",
          "[Added Lines]",
          "54:   size_t alloc_size = TfLiteIntArrayGetSizeInBytes(size);",
          "",
          "---------------"
        ],
        "tensorflow/lite/c/common.h||tensorflow/lite/c/common.h": [
          "File: tensorflow/lite/c/common.h -> tensorflow/lite/c/common.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "103: #ifndef TF_LITE_STATIC_MEMORY",
          "",
          "[Removed Lines]",
          "101: int TfLiteIntArrayGetSizeInBytes(int size);",
          "",
          "[Added Lines]",
          "101: size_t TfLiteIntArrayGetSizeInBytes(int size);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7de1d2a92f8434362eb628898ff8e646f3eb5d13",
      "candidate_info": {
        "commit_hash": "7de1d2a92f8434362eb628898ff8e646f3eb5d13",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/7de1d2a92f8434362eb628898ff8e646f3eb5d13",
        "files": [
          "tensorflow/lite/c/common.c",
          "tensorflow/lite/c/common.h"
        ],
        "message": "[lite] Update TfLiteIntArrayCreate to return size_t\n\nPiperOrigin-RevId: 416439896\nChange-Id: I847f69b68d1ddaff4b1e925a09b8b69c1756653b",
        "before_after_code_files": [
          "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c",
          "tensorflow/lite/c/common.h||tensorflow/lite/c/common.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c"
          ],
          "candidate": [
            "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c": [
          "File: tensorflow/lite/c/common.c -> tensorflow/lite/c/common.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: #include <string.h>",
          "22: #endif  // TF_LITE_STATIC_MEMORY",
          "25:   static TfLiteIntArray dummy;",
          "26:   return sizeof(dummy) + sizeof(dummy.data[0]) * size;",
          "27: }",
          "",
          "[Removed Lines]",
          "24: int TfLiteIntArrayGetSizeInBytes(int size) {",
          "",
          "[Added Lines]",
          "24: size_t TfLiteIntArrayGetSizeInBytes(int size) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45: #ifndef TF_LITE_STATIC_MEMORY",
          "47: TfLiteIntArray* TfLiteIntArrayCreate(int size) {",
          "49:   if (alloc_size <= 0) return NULL;",
          "50:   TfLiteIntArray* ret = (TfLiteIntArray*)malloc(alloc_size);",
          "51:   if (!ret) return ret;",
          "",
          "[Removed Lines]",
          "48:   int alloc_size = TfLiteIntArrayGetSizeInBytes(size);",
          "",
          "[Added Lines]",
          "48:   size_t alloc_size = TfLiteIntArrayGetSizeInBytes(size);",
          "",
          "---------------"
        ],
        "tensorflow/lite/c/common.h||tensorflow/lite/c/common.h": [
          "File: tensorflow/lite/c/common.h -> tensorflow/lite/c/common.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "99: #ifndef TF_LITE_STATIC_MEMORY",
          "",
          "[Removed Lines]",
          "97: int TfLiteIntArrayGetSizeInBytes(int size);",
          "",
          "[Added Lines]",
          "97: size_t TfLiteIntArrayGetSizeInBytes(int size);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bafe6745baae6421e7fa1c99cb1be99aa69ba035",
      "candidate_info": {
        "commit_hash": "bafe6745baae6421e7fa1c99cb1be99aa69ba035",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/bafe6745baae6421e7fa1c99cb1be99aa69ba035",
        "files": [
          "tensorflow/lite/kernels/embedding_lookup_sparse.cc"
        ],
        "message": "Fix a dangerous integer overflow and a malloc of negative size.",
        "before_after_code_files": [
          "tensorflow/lite/kernels/embedding_lookup_sparse.cc||tensorflow/lite/kernels/embedding_lookup_sparse.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/embedding_lookup_sparse.cc||tensorflow/lite/kernels/embedding_lookup_sparse.cc"
          ],
          "candidate": [
            "tensorflow/lite/kernels/embedding_lookup_sparse.cc||tensorflow/lite/kernels/embedding_lookup_sparse.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/embedding_lookup_sparse.cc||tensorflow/lite/kernels/embedding_lookup_sparse.cc": [
          "File: tensorflow/lite/kernels/embedding_lookup_sparse.cc -> tensorflow/lite/kernels/embedding_lookup_sparse.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "162:   TfLiteIntArray* output_shape = TfLiteIntArrayCreate(output_rank);",
          "163:   int k = 0;",
          "164:   int embedding_size = 1;",
          "165:   int lookup_size = 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "163:   TF_LITE_ENSURE(context, output_shape != nullptr);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fd8b154bb50015a77a8dd5e4f28f1d0e3a486c98",
      "candidate_info": {
        "commit_hash": "fd8b154bb50015a77a8dd5e4f28f1d0e3a486c98",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/fd8b154bb50015a77a8dd5e4f28f1d0e3a486c98",
        "files": [
          "tensorflow/lite/c/common.c",
          "tensorflow/lite/kernels/embedding_lookup_sparse.cc"
        ],
        "message": "Fix a dangerous integer overflow and a malloc of negative size.\n\nPiperOrigin-RevId: 371254154\nChange-Id: I250a98a3df26328770167025670235a963a72da0",
        "before_after_code_files": [
          "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c",
          "tensorflow/lite/kernels/embedding_lookup_sparse.cc||tensorflow/lite/kernels/embedding_lookup_sparse.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c",
            "tensorflow/lite/kernels/embedding_lookup_sparse.cc||tensorflow/lite/kernels/embedding_lookup_sparse.cc"
          ],
          "candidate": [
            "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c",
            "tensorflow/lite/kernels/embedding_lookup_sparse.cc||tensorflow/lite/kernels/embedding_lookup_sparse.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c": [
          "File: tensorflow/lite/c/common.c -> tensorflow/lite/c/common.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: #ifndef TF_LITE_STATIC_MEMORY",
          "47: TfLiteIntArray* TfLiteIntArrayCreate(int size) {",
          "50:   ret->size = size;",
          "51:   return ret;",
          "52: }",
          "",
          "[Removed Lines]",
          "48:   TfLiteIntArray* ret =",
          "49:       (TfLiteIntArray*)malloc(TfLiteIntArrayGetSizeInBytes(size));",
          "",
          "[Added Lines]",
          "48:   int alloc_size = TfLiteIntArrayGetSizeInBytes(size);",
          "49:   if (alloc_size <= 0) return NULL;",
          "50:   TfLiteIntArray* ret = (TfLiteIntArray*)malloc(alloc_size);",
          "51:   if (!ret) return ret;",
          "",
          "---------------"
        ],
        "tensorflow/lite/kernels/embedding_lookup_sparse.cc||tensorflow/lite/kernels/embedding_lookup_sparse.cc": [
          "File: tensorflow/lite/kernels/embedding_lookup_sparse.cc -> tensorflow/lite/kernels/embedding_lookup_sparse.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "175:   TfLiteIntArray* output_shape = TfLiteIntArrayCreate(output_rank);",
          "176:   int k = 0;",
          "177:   int embedding_size = 1;",
          "178:   int lookup_size = 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "176:   TF_LITE_ENSURE(context, output_shape != nullptr);",
          "",
          "---------------"
        ]
      }
    }
  ]
}