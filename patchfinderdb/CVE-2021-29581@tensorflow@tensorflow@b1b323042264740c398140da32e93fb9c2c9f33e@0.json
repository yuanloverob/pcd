{
  "cve_id": "CVE-2021-29581",
  "cve_desc": "TensorFlow is an end-to-end open source platform for machine learning. Due to lack of validation in `tf.raw_ops.CTCBeamSearchDecoder`, an attacker can trigger denial of service via segmentation faults. The implementation(https://github.com/tensorflow/tensorflow/blob/a74768f8e4efbda4def9f16ee7e13cf3922ac5f7/tensorflow/core/kernels/ctc_decoder_ops.cc#L68-L79) fails to detect cases when the input tensor is empty and proceeds to read data from a null buffer. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "b1b323042264740c398140da32e93fb9c2c9f33e",
  "patch_info": {
    "commit_hash": "b1b323042264740c398140da32e93fb9c2c9f33e",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/b1b323042264740c398140da32e93fb9c2c9f33e",
    "files": [
      "tensorflow/core/kernels/ctc_decoder_ops.cc"
    ],
    "message": "Fix SEGV in CTC ops\n\nPiperOrigin-RevId: 372430279\nChange-Id: I7ec2ad9d6f4d0980c33de45d27c6b17df5c6e26f",
    "before_after_code_files": [
      "tensorflow/core/kernels/ctc_decoder_ops.cc||tensorflow/core/kernels/ctc_decoder_ops.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/ctc_decoder_ops.cc||tensorflow/core/kernels/ctc_decoder_ops.cc": [
      "File: tensorflow/core/kernels/ctc_decoder_ops.cc -> tensorflow/core/kernels/ctc_decoder_ops.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "70:     if (inputs_shape.dims() != 3) {",
      "71:       return errors::InvalidArgument(\"inputs is not a 3-Tensor\");",
      "72:     }",
      "74:     const int64 max_time = inputs_shape.dim_size(0);",
      "75:     const int64 batch_size = inputs_shape.dim_size(1);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "73:     if (inputs_shape.num_elements() == 0) {",
      "74:       return errors::InvalidArgument(\"inputs must not be empty\");",
      "75:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f6b9d5ef58d8eae505405cf31deabf8aa70d3a48",
      "candidate_info": {
        "commit_hash": "f6b9d5ef58d8eae505405cf31deabf8aa70d3a48",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/f6b9d5ef58d8eae505405cf31deabf8aa70d3a48",
        "files": [
          "tensorflow/core/kernels/ctc_decoder_ops.cc"
        ],
        "message": "Fix SEGV in CTC ops\n\nPiperOrigin-RevId: 372430279\nChange-Id: I7ec2ad9d6f4d0980c33de45d27c6b17df5c6e26f",
        "before_after_code_files": [
          "tensorflow/core/kernels/ctc_decoder_ops.cc||tensorflow/core/kernels/ctc_decoder_ops.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/ctc_decoder_ops.cc||tensorflow/core/kernels/ctc_decoder_ops.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/ctc_decoder_ops.cc||tensorflow/core/kernels/ctc_decoder_ops.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/ctc_decoder_ops.cc||tensorflow/core/kernels/ctc_decoder_ops.cc": [
          "File: tensorflow/core/kernels/ctc_decoder_ops.cc -> tensorflow/core/kernels/ctc_decoder_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "70:     if (inputs_shape.dims() != 3) {",
          "71:       return errors::InvalidArgument(\"inputs is not a 3-Tensor\");",
          "72:     }",
          "74:     const int64 max_time = inputs_shape.dim_size(0);",
          "75:     const int64 batch_size = inputs_shape.dim_size(1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "73:     if (inputs_shape.num_elements() == 0) {",
          "74:       return errors::InvalidArgument(\"inputs must not be empty\");",
          "75:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c41ef7d1f20f4a00d5a1e5b602c4132669054ca0",
      "candidate_info": {
        "commit_hash": "c41ef7d1f20f4a00d5a1e5b602c4132669054ca0",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/c41ef7d1f20f4a00d5a1e5b602c4132669054ca0",
        "files": [
          "tensorflow/core/kernels/ctc_decoder_ops.cc"
        ],
        "message": "Fix SEGV in CTC ops\n\nPiperOrigin-RevId: 372430279\nChange-Id: I7ec2ad9d6f4d0980c33de45d27c6b17df5c6e26f",
        "before_after_code_files": [
          "tensorflow/core/kernels/ctc_decoder_ops.cc||tensorflow/core/kernels/ctc_decoder_ops.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/ctc_decoder_ops.cc||tensorflow/core/kernels/ctc_decoder_ops.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/ctc_decoder_ops.cc||tensorflow/core/kernels/ctc_decoder_ops.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/ctc_decoder_ops.cc||tensorflow/core/kernels/ctc_decoder_ops.cc": [
          "File: tensorflow/core/kernels/ctc_decoder_ops.cc -> tensorflow/core/kernels/ctc_decoder_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "70:     if (inputs_shape.dims() != 3) {",
          "71:       return errors::InvalidArgument(\"inputs is not a 3-Tensor\");",
          "72:     }",
          "74:     const int64 max_time = inputs_shape.dim_size(0);",
          "75:     const int64 batch_size = inputs_shape.dim_size(1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "73:     if (inputs_shape.num_elements() == 0) {",
          "74:       return errors::InvalidArgument(\"inputs must not be empty\");",
          "75:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4ae20817579a464e13a5a28f485c1437d1e5ea50",
      "candidate_info": {
        "commit_hash": "4ae20817579a464e13a5a28f485c1437d1e5ea50",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/4ae20817579a464e13a5a28f485c1437d1e5ea50",
        "files": [
          "tensorflow/core/kernels/ctc_decoder_ops.cc"
        ],
        "message": "Fix SEGV in CTC ops\n\nPiperOrigin-RevId: 372430279\nChange-Id: I7ec2ad9d6f4d0980c33de45d27c6b17df5c6e26f",
        "before_after_code_files": [
          "tensorflow/core/kernels/ctc_decoder_ops.cc||tensorflow/core/kernels/ctc_decoder_ops.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/ctc_decoder_ops.cc||tensorflow/core/kernels/ctc_decoder_ops.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/ctc_decoder_ops.cc||tensorflow/core/kernels/ctc_decoder_ops.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/ctc_decoder_ops.cc||tensorflow/core/kernels/ctc_decoder_ops.cc": [
          "File: tensorflow/core/kernels/ctc_decoder_ops.cc -> tensorflow/core/kernels/ctc_decoder_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "70:     if (inputs_shape.dims() != 3) {",
          "71:       return errors::InvalidArgument(\"inputs is not a 3-Tensor\");",
          "72:     }",
          "74:     const int64 max_time = inputs_shape.dim_size(0);",
          "75:     const int64 batch_size = inputs_shape.dim_size(1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "73:     if (inputs_shape.num_elements() == 0) {",
          "74:       return errors::InvalidArgument(\"inputs must not be empty\");",
          "75:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "31ff1f20231bd9f22a9418d32c2e18d82a3fd17f",
      "candidate_info": {
        "commit_hash": "31ff1f20231bd9f22a9418d32c2e18d82a3fd17f",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/31ff1f20231bd9f22a9418d32c2e18d82a3fd17f",
        "files": [
          "tensorflow/core/kernels/ctc_decoder_ops.cc"
        ],
        "message": "Fix SEGV in CTC ops\n\nPiperOrigin-RevId: 372430279\nChange-Id: I7ec2ad9d6f4d0980c33de45d27c6b17df5c6e26f",
        "before_after_code_files": [
          "tensorflow/core/kernels/ctc_decoder_ops.cc||tensorflow/core/kernels/ctc_decoder_ops.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/ctc_decoder_ops.cc||tensorflow/core/kernels/ctc_decoder_ops.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/ctc_decoder_ops.cc||tensorflow/core/kernels/ctc_decoder_ops.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/ctc_decoder_ops.cc||tensorflow/core/kernels/ctc_decoder_ops.cc": [
          "File: tensorflow/core/kernels/ctc_decoder_ops.cc -> tensorflow/core/kernels/ctc_decoder_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "70:     if (inputs_shape.dims() != 3) {",
          "71:       return errors::InvalidArgument(\"inputs is not a 3-Tensor\");",
          "72:     }",
          "74:     const int64 max_time = inputs_shape.dim_size(0);",
          "75:     const int64 batch_size = inputs_shape.dim_size(1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "73:     if (inputs_shape.num_elements() == 0) {",
          "74:       return errors::InvalidArgument(\"inputs must not be empty\");",
          "75:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "441708fd1933fc36862d2ebfe2cfdd1820f16a12",
      "candidate_info": {
        "commit_hash": "441708fd1933fc36862d2ebfe2cfdd1820f16a12",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/441708fd1933fc36862d2ebfe2cfdd1820f16a12",
        "files": [
          "tensorflow/core/kernels/ctc_decoder_ops.cc"
        ],
        "message": "Fix SEGV in CTC ops\n\nPiperOrigin-RevId: 372430279\nChange-Id: I7ec2ad9d6f4d0980c33de45d27c6b17df5c6e26f",
        "before_after_code_files": [
          "tensorflow/core/kernels/ctc_decoder_ops.cc||tensorflow/core/kernels/ctc_decoder_ops.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/ctc_decoder_ops.cc||tensorflow/core/kernels/ctc_decoder_ops.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/ctc_decoder_ops.cc||tensorflow/core/kernels/ctc_decoder_ops.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/ctc_decoder_ops.cc||tensorflow/core/kernels/ctc_decoder_ops.cc": [
          "File: tensorflow/core/kernels/ctc_decoder_ops.cc -> tensorflow/core/kernels/ctc_decoder_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "70:     if (inputs_shape.dims() != 3) {",
          "71:       return errors::InvalidArgument(\"inputs is not a 3-Tensor\");",
          "72:     }",
          "74:     const int64 max_time = inputs_shape.dim_size(0);",
          "75:     const int64 batch_size = inputs_shape.dim_size(1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "73:     if (inputs_shape.num_elements() == 0) {",
          "74:       return errors::InvalidArgument(\"inputs must not be empty\");",
          "75:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}