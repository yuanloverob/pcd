{
  "cve_id": "CVE-2019-19481",
  "cve_desc": "An issue was discovered in OpenSC through 0.19.0 and 0.20.x through 0.20.0-rc3. libopensc/card-cac1.c mishandles buffer limits for CAC certificates.",
  "repo": "OpenSC/OpenSC",
  "patch_hash": "b75c002cfb1fd61cd20ec938ff4937d7b1a94278",
  "patch_info": {
    "commit_hash": "b75c002cfb1fd61cd20ec938ff4937d7b1a94278",
    "repo": "OpenSC/OpenSC",
    "commit_url": "https://github.com/OpenSC/OpenSC/commit/b75c002cfb1fd61cd20ec938ff4937d7b1a94278",
    "files": [
      "src/libopensc/card-cac1.c"
    ],
    "message": "cac1: Correctly handle the buffer limits\n\nFound by oss-fuzz\n\nhttps://bugs.chromium.org/p/oss-fuzz/issues/detail?id=18618\nand others",
    "before_after_code_files": [
      "src/libopensc/card-cac1.c||src/libopensc/card-cac1.c"
    ]
  },
  "patch_diff": {
    "src/libopensc/card-cac1.c||src/libopensc/card-cac1.c": [
      "File: src/libopensc/card-cac1.c -> src/libopensc/card-cac1.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "69:  u8 *out_ptr;",
      "70:  size_t size = 0;",
      "71:  size_t left = 0;",
      "73:  sc_apdu_t apdu;",
      "74:  int r = SC_SUCCESS;",
      "75:  SC_FUNC_CALLED(card->ctx, SC_LOG_DEBUG_VERBOSE);",
      "",
      "[Removed Lines]",
      "72:  size_t len, next_len;",
      "",
      "[Added Lines]",
      "72:  size_t len;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "77:  size = left = *out_buf ? *out_len : sizeof(buf);",
      "78:  out_ptr = *out_buf ? *out_buf : buf;",
      "79:  sc_format_apdu(card, &apdu, SC_APDU_CASE_2_SHORT, CAC_INS_GET_CERTIFICATE, 0, 0 );",
      "83:   apdu.resp = out_ptr;",
      "84:   apdu.le = len;",
      "85:   apdu.resplen = left;",
      "",
      "[Removed Lines]",
      "80:  next_len = MIN(left, 100);",
      "81:  for (; left > 0; left -= len, out_ptr += len) {",
      "82:   len = next_len;",
      "",
      "[Added Lines]",
      "80:  len = MIN(left, 100);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "98:    left -= len;",
      "99:    break;",
      "100:   }",
      "102:  }",
      "103:  if (r < 0) {",
      "104:   SC_FUNC_RETURN(card->ctx, SC_LOG_DEBUG_VERBOSE, r);",
      "",
      "[Removed Lines]",
      "101:   next_len = MIN(left, apdu.sw2);",
      "",
      "[Added Lines]",
      "101:   left -= len;",
      "102:   out_ptr += len;",
      "103:   len = MIN(left, apdu.sw2);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "128:  int r = 0;",
      "129:  u8 *val = NULL;",
      "130:  u8 *cert_ptr;",
      "132:  size_t len, cert_len;",
      "133:  u8 cert_type;",
      "",
      "[Removed Lines]",
      "131:  size_t val_len;",
      "",
      "[Added Lines]",
      "133:  size_t val_len = 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "89ed273e8136b5254ee2df8771c4cbdc3ca1599e",
      "candidate_info": {
        "commit_hash": "89ed273e8136b5254ee2df8771c4cbdc3ca1599e",
        "repo": "OpenSC/OpenSC",
        "commit_url": "https://github.com/OpenSC/OpenSC/commit/89ed273e8136b5254ee2df8771c4cbdc3ca1599e",
        "files": [
          "src/libopensc/card-cac1.c"
        ],
        "message": "cac1: Simplify the cycle definintion",
        "before_after_code_files": [
          "src/libopensc/card-cac1.c||src/libopensc/card-cac1.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/libopensc/card-cac1.c||src/libopensc/card-cac1.c"
          ],
          "candidate": [
            "src/libopensc/card-cac1.c||src/libopensc/card-cac1.c"
          ]
        }
      },
      "candidate_diff": {
        "src/libopensc/card-cac1.c||src/libopensc/card-cac1.c": [
          "File: src/libopensc/card-cac1.c -> src/libopensc/card-cac1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "78:  out_ptr = *out_buf ? *out_buf : buf;",
          "79:  sc_format_apdu(card, &apdu, SC_APDU_CASE_2_SHORT, CAC_INS_GET_CERTIFICATE, 0, 0 );",
          "80:  len = MIN(left, 100);",
          "82:   apdu.resp = out_ptr;",
          "83:   apdu.le = len;",
          "84:   apdu.resplen = left;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "81:  while (left > 0) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}