{
  "cve_id": "CVE-2017-13083",
  "cve_desc": "Akeo Consulting Rufus prior to version 2.17.1187 does not adequately validate the integrity of updates downloaded over HTTP, allowing an attacker to easily convince a user to execute arbitrary code",
  "repo": "pbatard/rufus",
  "patch_hash": "c3c39f7f8a11f612c4ebf7affce25ec6928eb1cb",
  "patch_info": {
    "commit_hash": "c3c39f7f8a11f612c4ebf7affce25ec6928eb1cb",
    "repo": "pbatard/rufus",
    "commit_url": "https://github.com/pbatard/rufus/commit/c3c39f7f8a11f612c4ebf7affce25ec6928eb1cb",
    "files": [
      "res/localization/rufus.loc",
      "src/pki.c",
      "src/rufus.rc",
      "src/stdlg.c"
    ],
    "message": "[pki] fix https://www.kb.cert.org/vuls/id/403768\n\n* This commit effectively fixes https://www.kb.cert.org/vuls/id/403768 (CVE-2017-13083) as\n  it is described per its revision 11, which is the latest revision at the time of this commit,\n  by disabling Windows prompts, enacted during signature validation, that allow the user to\n  bypass the intended signature verification checks.\n* It needs to be pointed out that the vulnerability (\"allow(ing) the use of a self-signed\n  certificate\"), which relies on the end-user actively ignoring a Windows prompt that tells\n  them that the update failed the signature validation whilst also advising against running it,\n  is being fully addressed, even as the update protocol remains HTTP.\n* It also need to be pointed out that the extended delay (48 hours) between the time the\n  vulnerability was reported and the moment it is fixed in our codebase has to do with\n  the fact that the reporter chose to deviate from standard security practices by not\n  disclosing the details of the vulnerability with us, be it publicly or privately,\n  before creating the cert.org report. The only advance notification we received was a\n  generic note about the use of HTTP vs HTTPS, which, as have established, is not\n  immediately relevant to addressing the reported vulnerability.\n* Closes #1009\n* Note: The other vulnerability scenario described towards the end of #1009, which\n  doesn't have to do with the \"lack of CA checking\", will be addressed separately.",
    "before_after_code_files": [
      "res/localization/rufus.loc||res/localization/rufus.loc",
      "src/pki.c||src/pki.c",
      "src/rufus.rc||src/rufus.rc",
      "src/stdlg.c||src/stdlg.c"
    ]
  },
  "patch_diff": {
    "res/localization/rufus.loc||res/localization/rufus.loc": [
      "File: res/localization/rufus.loc -> res/localization/rufus.loc",
      "--- Hunk 1 ---",
      "[Context before]",
      "487: # eg. \"Partitioning (MBR)...\"",
      "488: t MSG_238 \"Partitioning (%s)...\"",
      "489: t MSG_239 \"Deleting partitions...\"",
      "490: t MSG_241 \"Downloading: %0.1f%%\"",
      "491: t MSG_242 \"Failed to download file.\"",
      "492: t MSG_243 \"Checking for Rufus updates...\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "490: t MSG_240 \"The signature for the downloaded update can not be validated. This could mean that your \"",
      "491:  \"system is improperly configured for signature validation or indicate a malicious download.\\n\\n\"",
      "492:  \"The download will be deleted. Please check the log for more details.\"",
      "",
      "---------------"
    ],
    "src/pki.c||src/pki.c": [
      "File: src/pki.c -> src/pki.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "53:  static char error_string[64];",
      "54:  DWORD error_code = GetLastError();",
      "57:   return WindowsErrorString();",
      "59:  switch (error_code) {",
      "",
      "[Removed Lines]",
      "56:  if ((error_code >> 16) != 0x8009)",
      "",
      "[Added Lines]",
      "56:  if (((error_code >> 16) != 0x8009) && ((error_code >> 16) != 0x800B))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "113:   return \"Cannot complete usage check.\";",
      "114:  case CRYPT_E_NO_TRUSTED_SIGNER:",
      "115:   return \"None of the signers of the cryptographic message or certificate trust list is trusted.\";",
      "116:  default:",
      "117:   static_sprintf(error_string, \"Unknown PKI error 0x%08lX\", error_code);",
      "118:   return error_string;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "116:  case CERT_E_UNTRUSTEDROOT:",
      "117:   return \"The root certificate is not trusted.\";",
      "118:  case TRUST_E_NOSIGNATURE:",
      "119:   return \"Not digitally signed.\";",
      "120:  case TRUST_E_EXPLICIT_DISTRUST:",
      "121:   return \"One of the certificates used was marked as untrusted by the user.\";",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "268:  }",
      "270:  trust_data.cbStruct = sizeof(trust_data);",
      "273:  trust_data.fdwRevocationChecks = WTD_REVOKE_WHOLECHAIN;",
      "",
      "[Removed Lines]",
      "271:  trust_data.dwUIChoice = WTD_UI_ALL;",
      "",
      "[Added Lines]",
      "283:  trust_data.dwUIChoice = WTD_UI_NONE;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "279:  r = WinVerifyTrust(NULL, &guid_generic_verify, &trust_data);",
      "280:  safe_free(trust_file.pcwszFilePath);",
      "282:  return r;",
      "283: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "293:  switch (r) {",
      "294:  case ERROR_SUCCESS:",
      "295:   break;",
      "296:  case TRUST_E_NOSIGNATURE:",
      "298:   uprintf(\"PKI: File does not appear to be signed: %s\", WinPKIErrorString());",
      "299:   MessageBoxExU(hDlg, lmprintf(MSG_284), lmprintf(MSG_283), MB_OK | MB_ICONERROR | MB_IS_RTL, selected_langid);",
      "300:   break;",
      "301:  default:",
      "302:   uprintf(\"PKI: Failed to validate signature: %s\", WinPKIErrorString());",
      "303:   MessageBoxExU(hDlg, lmprintf(MSG_240), lmprintf(MSG_283), MB_OK | MB_ICONERROR | MB_IS_RTL, selected_langid);",
      "304:   break;",
      "305:  }",
      "",
      "---------------"
    ],
    "src/rufus.rc||src/rufus.rc": [
      "File: src/rufus.rc -> src/rufus.rc",
      "--- Hunk 1 ---",
      "[Context before]",
      "33: IDD_DIALOG DIALOGEX 12, 12, 242, 376",
      "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
      "35: EXSTYLE WS_EX_ACCEPTFILES",
      "37: FONT 8, \"Segoe UI Symbol\", 400, 0, 0x0",
      "38: BEGIN",
      "39:     LTEXT           \"Device\",IDS_DEVICE_TXT,9,6,200,8",
      "",
      "[Removed Lines]",
      "36: CAPTION \"Rufus 2.17.1186\"",
      "",
      "[Added Lines]",
      "36: CAPTION \"Rufus 2.17.1187\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "368: VS_VERSION_INFO VERSIONINFO",
      "371:  FILEFLAGSMASK 0x3fL",
      "372: #ifdef _DEBUG",
      "373:  FILEFLAGS 0x1L",
      "",
      "[Removed Lines]",
      "369:  FILEVERSION 2,17,1186,0",
      "370:  PRODUCTVERSION 2,17,1186,0",
      "",
      "[Added Lines]",
      "369:  FILEVERSION 2,17,1187,0",
      "370:  PRODUCTVERSION 2,17,1187,0",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "384:         BEGIN",
      "385:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
      "386:             VALUE \"FileDescription\", \"Rufus\"",
      "388:             VALUE \"InternalName\", \"Rufus\"",
      "389:             VALUE \"LegalCopyright\", \"\ufffd 2011-2017 Pete Batard (GPL v3)\"",
      "390:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
      "391:             VALUE \"OriginalFilename\", \"rufus.exe\"",
      "392:             VALUE \"ProductName\", \"Rufus\"",
      "394:         END",
      "395:     END",
      "396:     BLOCK \"VarFileInfo\"",
      "",
      "[Removed Lines]",
      "387:             VALUE \"FileVersion\", \"2.17.1186\"",
      "393:             VALUE \"ProductVersion\", \"2.17.1186\"",
      "",
      "[Added Lines]",
      "387:             VALUE \"FileVersion\", \"2.17.1187\"",
      "393:             VALUE \"ProductVersion\", \"2.17.1187\"",
      "",
      "---------------"
    ],
    "src/stdlg.c||src/stdlg.c": [
      "File: src/stdlg.c -> src/stdlg.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674:    case 2:  // Launch newer version and close this one",
      "1675:     Sleep(1000); // Add a delay on account of antivirus scanners",
      "1678:      break;",
      "1680:     memset(&si, 0, sizeof(si));",
      "1681:     memset(&pi, 0, sizeof(pi));",
      "",
      "[Removed Lines]",
      "1677:     if (ValidateSignature(hDlg, filepath) != NO_ERROR)",
      "",
      "[Added Lines]",
      "1677:     if (ValidateSignature(hDlg, filepath) != NO_ERROR) {",
      "1679:      _unlinkU(filepath);",
      "1680:      EnableWindow(GetDlgItem(hDlg, IDC_DOWNLOAD), FALSE);",
      "1682:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8aeaa5e3b9898472311d17d969e8ab8f10909391",
      "candidate_info": {
        "commit_hash": "8aeaa5e3b9898472311d17d969e8ab8f10909391",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/8aeaa5e3b9898472311d17d969e8ab8f10909391",
        "files": [
          "res/localization/rufus.loc",
          "src/rufus.rc"
        ],
        "message": "[loc] update Japanese translation",
        "before_after_code_files": [
          "res/localization/rufus.loc||res/localization/rufus.loc",
          "src/rufus.rc||src/rufus.rc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "res/localization/rufus.loc||res/localization/rufus.loc",
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "res/localization/rufus.loc||res/localization/rufus.loc",
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "res/localization/rufus.loc||res/localization/rufus.loc": [
          "File: res/localization/rufus.loc -> res/localization/rufus.loc",
          "--- Hunk 1 ---",
          "[Context before]",
          "8034: t IDC_RUFUS_MBR \"BIOS ID\u3067Rufus\u306eMBR\u3092\u4f5c\u6210\"",
          "8035: t IDS_FORMAT_OPTIONS_TXT \"\u30d5\u30a9\u30fc\u30de\u30c3\u30c8 \u30aa\u30d7\u30b7\u30e7\u30f3\"",
          "8036: t IDS_FILE_SYSTEM_TXT \"\u30d5\u30a1\u30a4\u30eb \u30b7\u30b9\u30c6\u30e0\"",
          "8038: t IDS_LABEL_TXT \"\u30dc\u30ea\u30e5\u30fc\u30e0 \u30e9\u30d9\u30eb\"",
          "8039: t IDC_QUICK_FORMAT \"\u30af\u30a4\u30c3\u30af \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\"",
          "8040: t IDC_BAD_BLOCKS \"\u4e0d\u826f\u30d6\u30ed\u30c3\u30af\u3092\u691c\u51fa\"",
          "",
          "[Removed Lines]",
          "8037: t IDS_CLUSTER_SIZE_TXT \"\u30af\u30e9\u30b9\u30bf \u30b5\u30a4\u30ba\"",
          "",
          "[Added Lines]",
          "8037: t IDS_CLUSTER_SIZE_TXT \"\u30af\u30e9\u30b9\u30bf\u30fc \u30b5\u30a4\u30ba\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "8047: g IDD_ABOUTBOX",
          "8048: t IDD_ABOUTBOX \"Rufus\u306b\u3064\u3044\u3066\"",
          "8049: t IDC_ABOUT_LICENSE \"\u30e9\u30a4\u30bb\u30f3\u30b9\"",
          "8052: # About -> License dialog",
          "8053: g IDD_LICENSE",
          "",
          "[Removed Lines]",
          "8050: t IDOK \"\u9589\u3058\u308b\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "8089: # Messages used throughout the application",
          "8090: t MSG_001 \"\u4ed6\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u691c\u51fa\u3057\u307e\u3057\u305f\u3002\"",
          "8093: t MSG_003 \"\u8b66\u544a: \u30c7\u30d0\u30a4\u30b9\u201c%s\u201d\u306e\u30c7\u30fc\u30bf\u306f\u6d88\u53bb\u3055\u308c\u307e\u3059\u3002\\n\"",
          "8095: t MSG_004 \"Rufus\u306e\u66f4\u65b0\u30dd\u30ea\u30b7\u30fc\"",
          "8096: t MSG_005 \"\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u884c\u308f\u308c\u308b\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u306e\u81ea\u52d5\u78ba\u8a8d\u6a5f\u80fd\u3092\u6709\u52b9\u306b\u3057\u307e\u3059\u304b?\"",
          "8097: # Must be the same as IDD_DIALOG:IDCANCEL (i.e. \"Close\" - I know it's confusing)",
          "",
          "[Removed Lines]",
          "8091: t MSG_002 \"Rufus\u306f\u3059\u3067\u306b\u5b9f\u884c\u3055\u308c\u3066\u3044\u307e\u3059\u3002\\n\"",
          "8092:  \"\u3082\u3046\u4e00\u5ea6\u5b9f\u884c\u3059\u308b\u524d\u306b\u65e2\u306b\u8d77\u52d5\u4e2d\u306eRufus\u3092\u7d42\u4e86\u3055\u305b\u3066\u304f\u3060\u3055\u3044\u3002\"",
          "8094:  \"\u7d9a\u3051\u308b\u306b\u306f[OK]\u3092\u3001\u53d6\u308a\u6d88\u3059\u306b\u306f[\u30ad\u30e3\u30f3\u30bb\u30eb]\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\"",
          "",
          "[Added Lines]",
          "8090: t MSG_002 \"Rufus\u306f\u65e2\u306b\u5b9f\u884c\u3055\u308c\u3066\u3044\u307e\u3059\u3002\\n\"",
          "8091:  \"\u3082\u3046\u4e00\u5ea6\u5b9f\u884c\u3059\u308b\u524d\u306b\u65e2\u306b\u8d77\u52d5\u4e2d\u306eRufus\u3092\u7d42\u4e86\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"",
          "8093:  \"\u3053\u306e\u64cd\u4f5c\u3092\u7d9a\u3051\u308b\u306b\u306f [OK] \u3092\u3001\u7d42\u4e86\u3059\u308b\u5834\u5408\u306f [\u30ad\u30e3\u30f3\u30bb\u30eb] \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "8158: t MSG_056 \"\u3053\u306e\u30c7\u30d0\u30a4\u30b9\u306f\u30af\u30a4\u30c3\u30af \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u304d\u307e\u305b\u3093\u3002\"",
          "8159: t MSG_057 \"\u30dc\u30ea\u30e5\u30fc\u30e0 \u30e9\u30d9\u30eb\u306f\u7121\u52b9\u3067\u3059\u3002\"",
          "8160: t MSG_058 \"\u30c7\u30d0\u30a4\u30b9 \u30cf\u30f3\u30c9\u30eb\u306f\u7121\u52b9\u3067\u3059\u3002\"",
          "8162: t MSG_060 \"\u30dc\u30ea\u30e5\u30fc\u30e0 \u30b5\u30a4\u30ba\u306f\u7121\u52b9\u3067\u3059\u3002\"",
          "8163: t MSG_061 \"\u30c9\u30e9\u30a4\u30d6\u306b\u30ea\u30e0\u30fc\u30d0\u30d6\u30eb \u30e1\u30c7\u30a3\u30a2\u3092\u633f\u5165\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"",
          "8164: t MSG_062 \"\u975e\u5bfe\u5fdc\u30b3\u30de\u30f3\u30c9\u3092\u53d7\u3051\u53d6\u308a\u307e\u3057\u305f\u3002\"",
          "",
          "[Removed Lines]",
          "8161: t MSG_059 \"\u9078\u629e\u3055\u308c\u305f\u30af\u30e9\u30b9\u30bf \u30b5\u30a4\u30ba\u306f\u3053\u306e\u30c7\u30d0\u30a4\u30b9\u306b\u306f\u7121\u52b9\u3067\u3059\u3002\"",
          "",
          "[Added Lines]",
          "8160: t MSG_059 \"\u9078\u629e\u3055\u308c\u305f\u30af\u30e9\u30b9\u30bf\u30fc \u30b5\u30a4\u30ba\u306f\u3053\u306e\u30c7\u30d0\u30a4\u30b9\u306b\u306f\u7121\u52b9\u3067\u3059\u3002\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "8172: t MSG_069 \"\u30d5\u30a1\u30a4\u30eb\u3092\u30bf\u30fc\u30b2\u30c3\u30c8 \u30c9\u30e9\u30a4\u30d6\u3078\u30b3\u30d4\u30fc\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\"",
          "8173: t MSG_070 \"\u30e6\u30fc\u30b6\u30fc\u306b\u3088\u3063\u3066\u30ad\u30e3\u30f3\u30bb\u30eb\u3055\u308c\u307e\u3057\u305f\u3002\"",
          "8174: # See http://en.wikipedia.org/wiki/Thread_%28computing%29",
          "8176: t MSG_072 \"\u4e0d\u826f\u30d6\u30ed\u30c3\u30af\u306e\u691c\u51fa\u51e6\u7406\u304c\u5b8c\u4e86\u3057\u307e\u305b\u3093\u3067\u3057\u305f\u3002\"",
          "8178: t MSG_074 \"ISO\u30a4\u30e1\u30fc\u30b8\u304b\u3089\u306e\u62bd\u51fa\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002\"",
          "8179: t MSG_075 \"\u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u518d\u30de\u30a6\u30f3\u30c8\u3067\u304d\u307e\u305b\u3093\u3002\"",
          "8180: t MSG_076 \"\u30d5\u30a1\u30a4\u30eb\u3078\u30d6\u30fc\u30c8\u7528\u30d1\u30c3\u30c1\u3092\u5f53\u3066\u3089\u308c\u307e\u305b\u3093\u3002\"",
          "",
          "[Removed Lines]",
          "8175: t MSG_071 \"\u4f5c\u696d (\u51e6\u7406) \u3092\u59cb\u3081\u3089\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002\"",
          "8177: t MSG_073 \"ISO\u30a4\u30e1\u30fc\u30b8 \u30b9\u30ad\u30e3\u30f3\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002\"",
          "",
          "[Added Lines]",
          "8174: t MSG_071 \"\u30b9\u30ec\u30c3\u30c9\u3092\u958b\u59cb\u3067\u304d\u307e\u305b\u3093\u3002\"",
          "8176: t MSG_073 \"ISO\u30a4\u30e1\u30fc\u30b8\u306e\u30b9\u30ad\u30e3\u30f3\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "8187:  \"\\n\\n\u30d5\u30a1\u30a4\u30eb\u7834\u640d\u3092\u907f\u3051\u308b\u305f\u3081\u306b\u306f\u3001\u4f5c\u696d\u5b8c\u4e86\u307e\u3067\u5f85\u3064\u3053\u3068\u3092\u63a8\u5968\u3057\u307e\u3059\u304c\u3001\"",
          "8188:  \"\u30c7\u30d0\u30a4\u30b9\u3092\u53d6\u308a\u5916\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\"",
          "8189: t MSG_081 \"\u975e\u5bfe\u5fdc\u306e\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002\"",
          "8192: t MSG_084 \"\u3053\u306eISO\u306f\u201c%s\u201d\u306e\u53e4\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u4f7f\u7528\u3059\u308b\u3088\u3046\u3067\u3059\u3002\\n\"",
          "8193:  \"\u30d6\u30fc\u30c8\u30e1\u30cb\u30e5\u30fc\u304c\u6b63\u3057\u304f\u8868\u793a\u3067\u304d\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\\n\\n\"",
          "8195:  \"- \u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u63a5\u7d9a\u3057\u3001\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u306b\u306f [\u306f\u3044] \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\u3002\\n\"",
          "8196:  \"- \u65e2\u5b58\u306eISO\u3092\u5909\u66f4\u3057\u306a\u3044\u5834\u5408\u306f [\u3044\u3044\u3048] \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\u3002\\n\"",
          "8197:  \"\u3069\u3046\u3057\u305f\u3089\u3088\u3044\u304b\u308f\u304b\u3089\u306a\u3044\u5834\u5408\u306f [\u306f\u3044] \u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3053\u3068\u3092\u63a8\u5968\u3057\u307e\u3059\u3002\\n\\n\"",
          "8199:  \"\u3059\u3067\u306b\u201c%s\u201d\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u5834\u5408\u306f\u81ea\u52d5\u7684\u306b\u518d\u5229\u7528\u3057\u307e\u3059\u3002\"",
          "8200: t MSG_085 \"\u201c%s\u201d\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u4e2d\"",
          "8201: t MSG_086 \"\u30a4\u30e1\u30fc\u30b8\u304c\u9078\u629e\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\"",
          "8202: t MSG_088 \"\u30a4\u30e1\u30fc\u30b8\u304c\u5927\u304d\u3059\u304e\u307e\u3059\u3002\"",
          "8203: t MSG_089 \"\u30a4\u30e1\u30fc\u30b8\u304c\u9078\u629e\u3057\u305f\u30bf\u30fc\u30b2\u30c3\u30c8\u306b\u306f\u5927\u304d\u3059\u304e\u307e\u3059\u3002\"",
          "8204: t MSG_090 \"\u975e\u5bfe\u5fdc\u306eISO\u3067\u3059\u3002\"",
          "8206:  \"EFI\u3067\u30d6\u30fc\u30c8\u53ef\u80fd\u306aISO\u3092\u9078\u629e\u3059\u308b\u304b\u3001BIOS\u306e\u8a2d\u5b9a\u3067\u30bf\u30fc\u30b2\u30c3\u30c8 \u30bf\u30a4\u30d7\u3092\u8a2d\u5b9a\u3057\u76f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"",
          "8207: t MSG_092 \"\u3053\u306e\u30d5\u30a1\u30a4\u30eb \u30b7\u30b9\u30c6\u30e0\u306b\u306f\u975e\u5bfe\u5fdc\u3067\u3059\u3002\"",
          "8208: t MSG_093 \"\u91cd\u8981: \u3053\u306e\u30c9\u30e9\u30a4\u30d6\u306f\u8907\u6570\u306e\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u3092\u542b\u3093\u3067\u3044\u307e\u3059!! \\n\\n\"",
          "8211: t MSG_094 \"\u8907\u6570\u306e\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u3092\u691c\u51fa\u3057\u307e\u3057\u305f\u3002\"",
          "8212: t MSG_095 \"DD\u30a4\u30e1\u30fc\u30b8\"",
          "8213: t MSG_096 \"\u73fe\u5728\u306e\u9078\u629e\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb \u30b7\u30b9\u30c6\u30e0\u3067\u306f\u3053\u306eISO\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\"",
          "8214:  \"\u5225\u306e\u30d5\u30a1\u30a4\u30eb \u30b7\u30b9\u30c6\u30e0\u304bISO\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"",
          "8216: t MSG_098 \"\u6ce8\u610f: Windows To Go\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u30bf\u30fc\u30b2\u30c3\u30c8 \u30c9\u30e9\u30a4\u30d6\u306f\"",
          "8218:  \"Windows\u3092\u8a2d\u8a08\u3057\u3066\u3044\u306a\u3044\u305f\u3081\u3001Windows\u306e\u30d6\u30fc\u30c8\u4e2d\u306b\u30d5\u30ea\u30fc\u30ba\u3059\u308b\u53ef\u80fd\u6027\u304c\u9ad8\u304f\u306a\u308a\u307e\u3059\u3002\"",
          "8219:  \"\\n\\n\u7d9a\u3051\u3066\u3088\u308d\u3057\u3044\u3067\u3059\u304b?\\n\\n\"",
          "8221:  \"\u88fd\u9020\u30e1\u30fc\u30ab\u30fc\u304b\u3089\u306e\u30c4\u30fc\u30eb\u7b49\u3067\u306e\u307f\u5909\u66f4\u53ef\u80fd\u3067\u3059\u304c\u3001\"",
          "8222:  \"\u6b8b\u5ff5\u306a\u304c\u3089\u305d\u306e\u3088\u3046\u306a\u30c4\u30fc\u30eb\u306f\u5168\u304f\u3068\u8a00\u3063\u3066\u3044\u3044\u307b\u3069\"",
          "8223:  \"\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\"",
          "8224: t MSG_099 \"\u30d5\u30a1\u30a4\u30eb \u30b7\u30b9\u30c6\u30e0\u5236\u9650\"",
          "8225: t MSG_100 \"ISO\u30a4\u30e1\u30fc\u30b8\u306b4GB\u3088\u308a\u5927\u304d\u306a\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308a\u307e\u3059\u3002\"",
          "8226:  \"FAT\u3001FAT32\u30d5\u30a1\u30a4\u30eb \u30b7\u30b9\u30c6\u30e0\u3067\u4f7f\u7528\u53ef\u80fd\u306a\u6700\u5927\u306e\u30b5\u30a4\u30ba\u3092\u8d85\u3048\u3066\u3044\u307e\u3059\u3002\"",
          "8228: t MSG_102 \"\u5229\u7528\u4e2d\u306e\u3053\u306e\u74b0\u5883\u3067\u306fWIM\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30d5\u30a1\u30a4\u30eb\u3092\u62bd\u51fa\u3067\u304d\u307e\u305b\u3093\u3002\"",
          "8229:  \"EFI\u3067\u306e\u30d6\u30fc\u30c8\u3092\u5fc5\u8981\u3068\u3059\u308bWindows 7\u3068Windows Vista\u7528\u306eUSB\u30c9\u30e9\u30a4\u30d6\u3092\u4f5c\u308b\u305f\u3081\u306b\u306f\u3001\"",
          "8230:  \"WIM\u30d5\u30a1\u30a4\u30eb\u3092\u5c55\u958b\u3067\u304d\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\"",
          "8232:  \"7-Zip\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30da\u30fc\u30b8\u3078\u884c\u304d\u307e\u3059\u304b?\"",
          "8233: t MSG_103 \"%s\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u304b?\"",
          "8234: t MSG_104 \"%s\u307e\u305f\u306f\u305d\u308c\u4ee5\u5f8c\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u201c%s\u201d\u30d5\u30a1\u30a4\u30eb\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\\n\"",
          "8235:  \"\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u306f100KB\u3088\u308a\u5927\u304d\u3044\u306e\u3067Rufus\u306b\u5185\u8535\u3057\u3066\u3044\u307e\u305b\u3093\u3002%s\u306bISO\u30a4\u30e1\u30fc\u30b8\u304c\u5e38\u6642\u3042\u308b\u305f\u3081\u3067\u3059\u3002\"",
          "8236:  \"\\n\\nRufus\u3067\u4e0d\u8db3\u3057\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\\n\"",
          "8237:  \"- \u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u63a5\u7d9a\u3057\u3001\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u306b\u306f [\u306f\u3044] \u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\\n\"",
          "8239:  \"\u6ce8\u610f:\u30d5\u30a1\u30a4\u30eb\u306f\u73fe\u5728\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3078\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u308c\u307e\u3059\u3002\"",
          "8240:  \"\u201c%s\u201d\u304c\u65e2\u306b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3042\u308b\u5834\u5408\u3001\u81ea\u52d5\u7684\u306b\u518d\u4f7f\u7528\u3057\u307e\u3059\u3002\\n\"",
          "8241: t MSG_105 \"\u30ad\u30e3\u30f3\u30bb\u30eb\u3059\u308b\u3068\u30c7\u30d0\u30a4\u30b9\u306f\u4f7f\u7528\u4e0d\u53ef\u80fd\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\\n\"",
          "8244: t MSG_107 \"\u5168\u3066\u306e\u30d5\u30a1\u30a4\u30eb\"",
          "8245: t MSG_108 \"Rufus\u306e\u30ed\u30b0\"",
          "8246: t MSG_109 \"0x%02X (\u30c7\u30a3\u30b9\u30af %d)\"",
          "8247: # \"Cluster size\" below should be the same as the label for IDS_CLUSTER_SIZE_TXT",
          "8248: # \"kilobytes\" should be the same as in MSG_027",
          "8252: # \"%d:%02d\" below is a duration (mins:secs)",
          "8255: t MSG_113 \"\u5927\u304d\u306aUDF\u30dc\u30ea\u30e5\u30fc\u30e0\"",
          "8256: t MSG_114 \"\u3053\u306e\u30a4\u30e1\u30fc\u30b8\u306fSyslinux %s%s\u3092\u4f7f\u7528\u3057\u307e\u3059\u304c\u3001\u3053\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u306f\"",
          "8257:  \"Syslinux %s%s\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30d5\u30a1\u30a4\u30eb\u306e\u307f\u5185\u8535\u3057\u3066\u3044\u307e\u3059\u3002\\n\\n\"",
          "8258:  \"\u65b0\u3057\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u306eSyslinux\u306f\u53e4\u3044Syslinux\u3068\u5b8c\u5168\u306a\u4e92\u63db\u6027\u306f\u3042\u308a\u307e\u305b\u3093\u3002\"",
          "8259:  \"Rufus\u306b\u3059\u3079\u3066\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306eSyslinux\u30c7\u30fc\u30bf\u3092\u542b\u3080\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u305f\u3081\u3001\"",
          "8261:  \"\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\\n\"",
          "8267: t MSG_116 \"\u3053\u306e\u30a4\u30e1\u30fc\u30b8\u306fGrub %s\u3092\u4f7f\u7528\u3057\u307e\u3059\u304c\u3001\u3053\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u306f\"",
          "8269:  \"\u305d\u308c\u305e\u308c\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306eGrub\u306f\u4ed6\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306eGrub\u3068\u5b8c\u5168\u306a\u4e92\u63db\u6027\u306f\u3042\u308a\u307e\u305b\u3093\u3002\"",
          "8270:  \"\u30a4\u30e1\u30fc\u30b8\u306b\u9069\u5408\u3057\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u306eGrub\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u30d5\u30a1\u30a4\u30eb (core.img) \"",
          "8271:  \"\u3092\u63a2\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\\n\"",
          "8272:  \"- \u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u63a5\u7d9a\u3057\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3092\u8a66\u884c\u3059\u308b\u306b\u306f [\u306f\u3044] \u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\\n\"",
          "8278:  \"\u5185\u8535\u3057\u3066\u3044\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u306eGrub\u304c\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\\n\"",
          "8279: t MSG_117 \"\u6a19\u6e96\u306eWindows\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\"",
          "8280: t MSG_119 \"\u8a73\u7d30\u306a\u30c9\u30e9\u30a4\u30d6 \u30d7\u30ed\u30d1\u30c6\u30a3\"",
          "",
          "[Removed Lines]",
          "8190: t MSG_082 \"\u3053\u306e\u30a4\u30e1\u30fc\u30b8\u306f\u30d6\u30fc\u30c8\u975e\u5bfe\u5fdc\u3067\u3059\u3002\u3082\u3057\u304f\u306f\u3001Rufus\u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u30d6\u30fc\u30c8\u65b9\u5f0f\u3001\u5727\u7e2e\u65b9\u5f0f\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\"",
          "8191: t MSG_083 \"%s\u3092\u4ea4\u63db\u3057\u307e\u3059\u304b?\"",
          "8194:  \"\u3053\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306bRufus\u306e\u65b0\u3057\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u307e\u3059\u3002\\n\"",
          "8198:  \"\u6ce8\u610f: \u65b0\u3057\u3044\u30d5\u30a1\u30a4\u30eb\u306f\u73fe\u5728\u306e\u30d5\u30a9\u30eb\u30c0\u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u308c\u307e\u3059\u3002\"",
          "8205: t MSG_091 \"UEFI\u30bf\u30fc\u30b2\u30c3\u30c8 \u30bf\u30a4\u30d7\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u3001EFI\u3067\u30d6\u30fc\u30c8\u53ef\u80fd\u306aISO\u3060\u3051\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\"",
          "8209:  \"Windows\u304c\u8a8d\u8b58\u3067\u304d\u306a\u3044\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u3084\u30dc\u30ea\u30e5\u30fc\u30e0\u3001\u30ea\u30b9\u30c8\u5316\u3067\u304d\u306a\u3044\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u3084\u30dc\u30ea\u30e5\u30fc\u30e0\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\"",
          "8210:  \"\u7d9a\u3051\u308b\u5834\u5408\u3001\u3053\u306e\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u306e\u30c7\u30fc\u30bf\u3092\u5931\u3046\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\"",
          "8215: t MSG_097 \"\u30d5\u30a1\u30a4\u30eb \u30b7\u30b9\u30c6\u30e0\u304cNTFS\u306e\u5834\u5408\u306e\u307f\u201c%s\u201d\u306f\u4f7f\u7528\u53ef\u80fd\u3067\u3059\u3002\"",
          "8217:  \"FIXED\u5c5e\u6027\u3092\u6301\u3061\u307e\u305b\u3093\u3002REMOVABLE\u5c5e\u6027\u304c\u3042\u308b\u30c9\u30e9\u30a4\u30d6\u3067\u52d5\u4f5c\u3059\u308b\u3088\u3046\u306bMicrosoft\u306f\"",
          "8220:  \"\u6ce8\u610f: FIXED/REMOVABLE\u5c5e\u6027\u306f\u3001\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u56fa\u6709\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\"",
          "8227: t MSG_101 \"\u4e0d\u8db3\u3057\u3066\u3057\u307e\u3063\u305fWIM\u306e\u30b5\u30dd\u30fc\u30c8\u306b\u3064\u3044\u3066\"",
          "8231:  \"7-Zip\u306e\u6700\u8fd1\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u7528\u3044\u3066\u5c55\u958b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\\n\"",
          "8238:  \"- \u5f8c\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u30c9\u30e9\u30a4\u30d6\u306b\u7f6e\u3044\u3066\u624b\u52d5\u3067\u30b3\u30d4\u30fc\u3059\u308b\u306b\u306f [\u3044\u3044\u3048] \u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\\n\\n\"",
          "8242:  \"\u30ad\u30e3\u30f3\u30bb\u30eb\u3059\u308b\u5834\u5408\u306b\u306f [\u306f\u3044] \u3092\u3001\u305d\u3046\u3067\u306f\u306a\u3044\u5834\u5408\u306b\u306f [\u3044\u3044\u3048] \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"",
          "8243: t MSG_106 \"\u30d5\u30a9\u30eb\u30c0\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"",
          "8249: t MSG_110 \"\u30af\u30e9\u30b9\u30bf\u30b5\u30a4\u30ba\u306f64KB\u3067\u3059\u3002\u3053\u306e\u5834\u5408\u3001MS-DOS\u306f\u30c9\u30e9\u30a4\u30d6\u304b\u3089\u30d6\u30fc\u30c8\u3067\u304d\u307e\u305b\u3093\u3002\\n\"",
          "8250:  \"\u30af\u30e9\u30b9\u30bf\u30b5\u30a4\u30ba\u3092\u5909\u66f4\u3001\u307e\u305f\u306fFreeDOS\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"",
          "8251: t MSG_111 \"\u4e92\u63db\u6027\u304c\u306a\u3044\u30af\u30e9\u30b9\u30bf\u30b5\u30a4\u30ba\u3067\u3059\u3002\"",
          "8253: t MSG_112 \"USB2.0\u63a5\u7d9a\u6642\u306b\u5927\u304d\u306aUDF\u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3059\u308b\u3068\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u3002\"",
          "8254:  \"\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u63a8\u5b9a\u5b8c\u4e86\u6642\u9593\u306f%d:%02d\u3067\u3059\u3002\u3053\u306e\u9593\u3001\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u306f\u9032\u3093\u3067\u3044\u306a\u3044\u3088\u3046\u306b\u898b\u3048\u307e\u3059\u3002\u7d42\u4e86\u307e\u3067\u3057\u3070\u3089\u304f\u304a\u5f85\u3061\u304f\u3060\u3055\u3044\u3002\"",
          "8260:  \"\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u304b\u3089\u4e8c\u3064\u306e\u30d5\u30a1\u30a4\u30eb (ldlinux.sys\u3068ldlinux.bss) \u3092\u8ffd\u52a0\u3067\"",
          "8262:  \"- \u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u63a5\u7d9a\u3057\u3001\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u306b\u306f\u3001 [\u306f\u3044] \u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\\n\"",
          "8263:  \"- \u53d6\u308a\u6d88\u3057\u305f\u3044\u5834\u5408\u306b\u306f [\u3044\u3044\u3048] \u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\\n\\n\"",
          "8264:  \"\u6ce8\u610f: \u30d5\u30a1\u30a4\u30eb\u306f\u73fe\u5728\u306e\u30d5\u30a9\u30eb\u30c0\u3078\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u308c\u307e\u3059\u3002\"",
          "8265:  \"\u30d5\u30a1\u30a4\u30eb\u304c\u65e2\u306b\u73fe\u5728\u306e\u30d5\u30a9\u30eb\u30c0\u306b\u3042\u308b\u5834\u5408\u306f\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u305b\u305a\u81ea\u52d5\u7684\u306b\u518d\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\\n\"",
          "8266: t MSG_115 \"\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u304c\u5fc5\u8981\u3067\u3059\u3002\"",
          "8268: \"Grub %s\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30d5\u30a1\u30a4\u30eb\u306e\u307f\u5185\u8535\u3057\u3066\u3044\u307e\u3059\u3002\\n\\n\"",
          "8273:  \"- Rufus\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f [\u3044\u3044\u3048] \u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\\n\"",
          "8274:  \"- \u3053\u306e\u64cd\u4f5c\u3092\u4e2d\u6b62\u3059\u308b\u306b\u306f [\u30ad\u30e3\u30f3\u30bb\u30eb] \u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\\n\\n\"",
          "8275:  \"\u6ce8\u610f: \u30d5\u30a1\u30a4\u30eb\u306f\u73fe\u5728\u306e\u30d5\u30a9\u30eb\u30c0\u3078\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u308c\u307e\u3059\u3002\"",
          "8276:  \"\u30d5\u30a1\u30a4\u30eb\u304c\u65e2\u306b\u73fe\u5728\u306e\u30d5\u30a9\u30eb\u30c0\u306b\u3042\u308b\u5834\u5408\u306f\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u305b\u305a\u81ea\u52d5\u7684\u306b\u518d\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\\n\"",
          "8277:  \"\u3082\u3057\u9069\u5408\u3059\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f\u5834\u5408\u306b\u306f\"",
          "",
          "[Added Lines]",
          "8189: t MSG_082 \"\u3053\u306e\u30a4\u30e1\u30fc\u30b8\u306f\u30d6\u30fc\u30c8\u975e\u5bfe\u5fdc\u3042\u308b\u3044\u306fRufus\u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u30d6\u30fc\u30c8\u65b9\u5f0f\u3001\u5727\u7e2e\u65b9\u5f0f\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\"",
          "8190: t MSG_083 \"%s\u3092\u7f6e\u304d\u63db\u3048\u307e\u3059\u304b?\"",
          "8193:  \"\u3053\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u65b0\u3057\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u307e\u3059\u3002\\n\"",
          "8197:  \"\u6ce8\u610f: \u65b0\u3057\u3044\u30d5\u30a1\u30a4\u30eb\u306f\u73fe\u5728\u306e\u30d5\u30a9\u30eb\u30c0\u30fc\u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u308c\u307e\u3059\u3002\"",
          "8204: t MSG_091 \"UEFI\u30bf\u30fc\u30b2\u30c3\u30c8 \u30bf\u30a4\u30d7\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u3001EFI\u3067\u30d6\u30fc\u30c8\u53ef\u80fd\u306aISO\u3060\u3051\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002\"",
          "8208:  \"Windows\u304c\u8a8d\u8b58\u3067\u304d\u306a\u3044\u3042\u308b\u3044\u306f\u30ea\u30b9\u30c8\u5316\u3067\u304d\u306a\u3044\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u3084\u30dc\u30ea\u30e5\u30fc\u30e0\u304c\u5b58\u5728\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\"",
          "8209:  \"\u7d9a\u884c\u3059\u308b\u5834\u5408\u3001\u3053\u308c\u3089\u306e\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u3067\u306e\u30c7\u30fc\u30bf\u640d\u5931\u306e\u8cac\u4efb\u306f\u30e6\u30fc\u30b6\u30fc\u306b\u3042\u308a\u307e\u3059\u3002\"",
          "8214: t MSG_097 \"\u30d5\u30a1\u30a4\u30eb \u30b7\u30b9\u30c6\u30e0\u304cNTFS\u306e\u5834\u5408\u306e\u307f\u201c%s\u201d\u306f\u9069\u7528\u53ef\u80fd\u3067\u3059\u3002\"",
          "8216:  \"\u201cFIXED\u201d\u5c5e\u6027\u3092\u6301\u3061\u307e\u305b\u3093\u3002\u201cREMOVABLE\u201d\u5c5e\u6027\u304c\u3042\u308b\u30c9\u30e9\u30a4\u30d6\u3067\u52d5\u4f5c\u3059\u308b\u3088\u3046\u306bMicrosoft\u306f\"",
          "8219:  \"\u6ce8\u610f: \u201cFIXED/REMOVABLE\u201d\u5c5e\u6027\u306f\u3001\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u56fa\u6709\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\"",
          "8226: t MSG_101 \"WIM\u306e\u30b5\u30dd\u30fc\u30c8\u304c\u3042\u308a\u307e\u305b\u3093\"",
          "8230:  \"\u6700\u8fd1\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306e7-Zip\u3067\u5c55\u958b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\\n\"",
          "8237:  \"- \u5f8c\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u30c9\u30e9\u30a4\u30d6\u306b\u7f6e\u3044\u3066\u624b\u52d5\u3067\u30b3\u30d4\u30fc\u3059\u308b\u5834\u5408\u306f [\u3044\u3044\u3048] \u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\\n\\n\"",
          "8241:  \"\u30ad\u30e3\u30f3\u30bb\u30eb\u3059\u308b\u306b\u306f [\u306f\u3044] \u3092\u3001\u305d\u3046\u3067\u306f\u306a\u3044\u5834\u5408\u306f [\u3044\u3044\u3048] \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"",
          "8242: t MSG_106 \"\u30d5\u30a9\u30eb\u30c0\u30fc\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"",
          "8248: t MSG_110 \"MS-DOS\u306f\u30af\u30e9\u30b9\u30bf\u30fc \u30b5\u30a4\u30ba\u304c64\u30ad\u30ed\u30d0\u30a4\u30c8\u306e\u30c9\u30e9\u30a4\u30d6\u304b\u3089\u30d6\u30fc\u30c8\u3067\u304d\u307e\u305b\u3093\u3002\\n\"",
          "8249:  \"\u30af\u30e9\u30b9\u30bf\u30fc \u30b5\u30a4\u30ba\u3092\u5909\u66f4\u3001\u307e\u305f\u306fFreeDOS\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"",
          "8250: t MSG_111 \"\u4e92\u63db\u6027\u306e\u306a\u3044\u30af\u30e9\u30b9\u30bf\u30fc \u30b5\u30a4\u30ba\"",
          "8252: t MSG_112 \"\u5927\u304d\u306aUDF\u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3059\u308b\u306b\u306f\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u3002\"",
          "8253:  \"USB2.0\u63a5\u7d9a\u306e\u5834\u5408\u3001\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u5b8c\u4e86\u307e\u3067\u306e\u63a8\u5b9a\u6642\u9593\u306f%d:%02d\u3067\u3059\u3002\u3053\u306e\u9593\u3001\u30d7\u30ed\u30b0\u30ec\u30b9 \u30d0\u30fc\u306f\u9032\u3093\u3067\u3044\u306a\u3044\u3088\u3046\u306b\u898b\u3048\u307e\u3059\u3002\u7d42\u4e86\u307e\u3067\u3057\u3070\u3089\u304f\u304a\u5f85\u3061\u304f\u3060\u3055\u3044\u3002\"",
          "8259:  \"\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u304b\u30892\u3064\u306e\u30d5\u30a1\u30a4\u30eb (ldlinux.sys\u3068ldlinux.bss) \u3092\u8ffd\u52a0\u3067\"",
          "8261:  \"- \u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u63a5\u7d9a\u3057\u3001\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u306b\u306f [\u306f\u3044] \u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\\n\"",
          "8262:  \"- \u53d6\u308a\u6d88\u3057\u305f\u3044\u5834\u5408\u306f [\u3044\u3044\u3048] \u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\\n\\n\"",
          "8263:  \"\u6ce8\u610f: \u30d5\u30a1\u30a4\u30eb\u306f\u73fe\u5728\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3078\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u308c\u307e\u3059\u3002\"",
          "8264:  \"\u30d5\u30a1\u30a4\u30eb\u304c\u65e2\u306b\u73fe\u5728\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3042\u308b\u5834\u5408\u306f\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u305b\u305a\u81ea\u52d5\u7684\u306b\u518d\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\\n\"",
          "8265: t MSG_115 \"\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u304c\u5fc5\u8981\u3067\u3059\"",
          "8267:  \"Grub %s\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30d5\u30a1\u30a4\u30eb\u306e\u307f\u5185\u8535\u3057\u3066\u3044\u307e\u3059\u3002\\n\\n\"",
          "8272:  \"- Rufus\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f [\u3044\u3044\u3048] \u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\\n\"",
          "8273:  \"- \u3053\u306e\u64cd\u4f5c\u3092\u4e2d\u6b62\u3059\u308b\u5834\u5408\u306f [\u30ad\u30e3\u30f3\u30bb\u30eb] \u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\\n\\n\"",
          "8274:  \"\u6ce8\u610f: \u30d5\u30a1\u30a4\u30eb\u306f\u73fe\u5728\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3078\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u308c\u307e\u3059\u3002\"",
          "8275:  \"\u30d5\u30a1\u30a4\u30eb\u304c\u65e2\u306b\u73fe\u5728\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3042\u308b\u5834\u5408\u306f\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u305b\u305a\u81ea\u52d5\u7684\u306b\u518d\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\\n\"",
          "8276:  \"\u9069\u5408\u3059\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f\u5834\u5408\u306f\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "8282: t MSG_121 \"%s\u3092\u8868\u793a\"",
          "8283: t MSG_122 \"%s\u3092\u96a0\u3059\"",
          "8284: # Tooltips",
          "8286:  \"\u8d77\u52d5\u306b\u5931\u6557\u3059\u308b\u53ef\u80fd\u6027\u3092\u6e1b\u3089\u3059\u305f\u3081\u3001\"",
          "8287:  \"\u30c9\u30e9\u30a4\u30d6\u306e\u4f5c\u6210\u3092\u958b\u59cb\u3059\u308b\u524d\u306b\u30bf\u30fc\u30b2\u30c3\u30c8\u304cBIOS\u3068UEFI\u306e\u3069\u3061\u3089\u306e\u5f62\u5f0f\u3092\u4f7f\u3046\u304b\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"",
          "8288: # Note: You shouldn't translate 'Legacy Mode' below, as this is an option that usually appears in English in the UEFI settings.",
          "",
          "[Removed Lines]",
          "8285: t MSG_150 \"\u3053\u306e\u30d6\u30fc\u30c8\u7528\u30c9\u30e9\u30a4\u30d6\u3092\u4f7f\u7528\u3059\u308b\u4e88\u5b9a\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u7a2e\u985e\u3092\u9078\u629e\u3057\u307e\u3059\u3002\\n\"",
          "",
          "[Added Lines]",
          "8284: t MSG_150 \"\u3053\u306e\u30d6\u30fc\u30c8\u7528\u30c9\u30e9\u30a4\u30d6\u3092\u4f7f\u7528\u3059\u308b\u4e88\u5b9a\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u306e\u7a2e\u985e\u3067\u3059\u3002\\n\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "8301: t MSG_159 \"\u3053\u3053\u3067\u30c9\u30e9\u30a4\u30d6\u306e\u30e9\u30d9\u30eb\u3092\u8a2d\u5b9a\u53ef\u80fd\u3067\u3059\u3002\u5404\u56fd\u306e\u6587\u5b57\u304c\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\"",
          "8302: t MSG_160 \"\u8a73\u7d30\u8a2d\u5b9a\u306b\u5207\u308a\u66ff\u3048\u307e\u3059\u3002\"",
          "8303: t MSG_161 \"\u30c6\u30b9\u30c8 \u30d1\u30bf\u30fc\u30f3\u3067\u4e0d\u826f\u30d6\u30ed\u30c3\u30af\u3092\u691c\u51fa\u3059\u308b\u306b\u306f\u30c1\u30a7\u30c3\u30af \u30dc\u30c3\u30af\u30b9\u3092\u30aa\u30f3\u306b\u3057\u307e\u3059\u3002\"",
          "8305: t MSG_163 \"\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\u65b9\u6cd5\u3067\u3059\u3002\"",
          "8306: t MSG_164 \"\u30c9\u30e9\u30a4\u30d6\u3092\u8d77\u52d5\u53ef\u80fd\u306b\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3059\u308b\u65b9\u6cd5\u3067\u3059\u3002\"",
          "8307: t MSG_165 \"\u30af\u30ea\u30c3\u30af\u3057\u3066\u30a4\u30e1\u30fc\u30b8\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"",
          "8308: t MSG_166 \"\u6a5f\u80fd\u62e1\u5f35\u3055\u308c\u305f\u30e9\u30d9\u30eb\u306e\u8868\u793a\u3068\u30c7\u30d0\u30a4\u30b9 \u30a2\u30a4\u30b3\u30f3\u306e\u8a2d\u5b9a\u3092\u6709\u52b9\u3059\u308b\u306b\u306f\"",
          "8309:  \"\u3053\u306e\u30c1\u30a7\u30c3\u30af \u30dc\u30c3\u30af\u30b9\u3092\u30aa\u30f3\u306b\u3057\u307e\u3059\u3002autorun.inf\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\"",
          "8313: t MSG_169 \"\u7279\u5225\u306a\u96a0\u3057\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u3001\u5404\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u306e\u4f4d\u7f6e\u5408\u308f\u305b\u3092\u884c\u3044\u307e\u3059\u3002\\n\"",
          "8315: t MSG_170 \"\u5916\u4ed8\u3051USB HDD\u306e\u30ea\u30b9\u30c8\u3092\u6709\u52b9\u306b\u3057\u307e\u3059\u3002\u81ea\u5df1\u8cac\u4efb\u3067\u3059!!!\"",
          "8318: # The following will appear in the about dialog",
          "8319: t MSG_174 \"Rufus - \u4fe1\u983c\u6027\u306e\u9ad8\u3044USB\u30d5\u30a9\u30fc\u30de\u30c3\u30c8 \u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\"",
          "8320: t MSG_175 \"\u30d0\u30fc\u30b8\u30e7\u30f3 %d.%d (Build %d)\"",
          "",
          "[Removed Lines]",
          "8304: t MSG_162 \"\u201c\u30af\u30a4\u30c3\u30af\u201d\u3067\u306f\u306a\u3044\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u3059\u308b\u306b\u306f\u30c1\u30a7\u30c3\u30af \u30dc\u30c3\u30af\u30b9\u3092\u30aa\u30d5\u306b\u3057\u307e\u3059\u3002\"",
          "8310: t MSG_167 \"\u30d6\u30fc\u30c8\u3092\u8a31\u53ef\u3057\u3001BIOS\u304b\u3089USB\u306e\u30c9\u30e9\u30a4\u30d6ID\u306b\u898b\u3048\u308b\u3088\u3046\u3001\u507d\u88c5\u3057\u305fMBR\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\"",
          "8311: t MSG_168 \"\u6700\u512a\u5148\u3067\u30d6\u30fc\u30c8\u53ef\u80fd\u306aUSB\u30c9\u30e9\u30a4\u30d6 (\u901a\u5e38\u306f0x80) \u3078\u507d\u88c5\u3057\u307e\u3059\u3002\\n\"",
          "8312:  \"Windows XP\u3067\u8907\u6570\u306edisk\u3092\u5b9f\u88c5\u3057\u305f\u30de\u30b7\u30f3\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u6642\u3060\u3051\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\"",
          "8314:  \"\u53e4\u3044BIOS\u4f7f\u7528\u6642\u306b\u30d6\u30fc\u30c8\u6642\u306e\u691c\u51fa\u3092\u6539\u5584\u3067\u304d\u307e\u3059\u3002\"",
          "8316: t MSG_171 \"\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u59cb\u3081\u307e\u3059\u3002\\n\u30bf\u30fc\u30b2\u30c3\u30c8 \u30c9\u30e9\u30a4\u30d6\u306e\u30c7\u30fc\u30bf\u306f\u5168\u3066\u7834\u58ca\u3055\u308c\u307e\u3059\u3002\"",
          "8317: t MSG_173 \"\u9078\u629e\u3059\u308b\u306b\u306f\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\"",
          "",
          "[Added Lines]",
          "8303: t MSG_162 \"\u201c\u30af\u30a4\u30c3\u30af\u3067\u306f\u306a\u3044\u201d\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u3059\u308b\u306b\u306f\u30c1\u30a7\u30c3\u30af \u30dc\u30c3\u30af\u30b9\u3092\u30aa\u30d5\u306b\u3057\u307e\u3059\u3002\"",
          "8309: t MSG_167 \"\u30d6\u30fc\u30c8\u9078\u629e\u304c\u53ef\u80fd\u3067BIOS\u306eUSB\u30c9\u30e9\u30a4\u30d6ID\u306b\u898b\u3048\u308b\u3088\u3046\u507d\u88c5\u3055\u308c\u305fMBR\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\"",
          "8310: t MSG_168 \"\u6700\u512a\u5148\u3067\u30d6\u30fc\u30c8\u53ef\u80fd\u306aUSB\u30c9\u30e9\u30a4\u30d6 (\u901a\u5e38\u306f0x80) \u3092\u5225\u306e\u30c7\u30a3\u30b9\u30af\u3068\u3057\u3066\u507d\u88c5\u3057\u307e\u3059\u3002\\n\"",
          "8311:  \"Windows XP\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u8907\u6570\u306e\u30c7\u30a3\u30b9\u30af\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306b\u306e\u307f\u5fc5\u8981\u3067\u3059\u3002\"",
          "8313:  \"\u53e4\u3044BIOS\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306b\u30d6\u30fc\u30c8\u6642\u306e\u691c\u51fa\u3092\u6539\u5584\u3067\u304d\u307e\u3059\u3002\"",
          "8315: t MSG_171 \"\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u59cb\u3081\u307e\u3059\u3002\\n\u30bf\u30fc\u30b2\u30c3\u30c8 \u30c9\u30e9\u30a4\u30d6\u306e\u30c7\u30fc\u30bf\u306f\u5168\u3066\u7834\u68c4\u3055\u308c\u307e\u3059\u3002\"",
          "8316: t MSG_173 \"\u9078\u629e\u3059\u308b\u306b\u306f\u30af\u30ea\u30c3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "8322:  \"\u6821\u6b63\u3001\u7ffb\u8a33: Tiryoh <mailto:tiryoh@gmail.com>\"",
          "8323: t MSG_177 \"\u30d0\u30b0\u306e\u5831\u544a\u3001\u304a\u554f\u3044\u5408\u308f\u305b\u7b49\u306f\u3053\u3061\u3089\u304b\u3089:\"",
          "8324: t MSG_178 \"\u5404\u7a2e\u8457\u4f5c\u6a29: \"",
          "8326: t MSG_180 \"\u3053\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u78ba\u8a8d\u3092\u8a31\u53ef\u3057\u305f\u5834\u5408\u3001\\\\line\"",
          "8327:  \"\u4ee5\u4e0b\u306e\u60c5\u5831\u3092\u30b5\u30fc\u30d0\u30fc\u306b\u9001\u4fe1\u3059\u308b\u3053\u3068\u306b\u540c\u610f\u3057\u307e\u3059\u3002\"",
          "8328: t MSG_181 \"\u3054\u4f7f\u7528\u4e2d\u306eOS\u306e\u7a2e\u985e\u3068\u30d0\u30fc\u30b8\u30e7\u30f3\"",
          "",
          "[Removed Lines]",
          "8325: t MSG_179 \"\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u30dd\u30ea\u30b7\u30fc: \"",
          "",
          "[Added Lines]",
          "8324: t MSG_179 \"\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8 \u30dd\u30ea\u30b7\u30fc: \"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "8332:  \"\u53ce\u96c6\u3057\u305f\u60c5\u5831\u306f\\\\b\u6700\u5927\u3067\u4e00\u5e74\u9593\\\\b0 \u4fdd\u7ba1\u3059\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002 \\\\line\"",
          "8333:  \"\u305f\u3060\u3057\u3001\u305d\u306e\u30c7\u30fc\u30bf\u3092\u5b89\u6613\u306b\u7b2c\u4e09\u8005\u3078\u958b\u793a\u3059\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002\"",
          "8334: t MSG_185 \"\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u306e\u65b9\u6cd5: \"",
          "8336:  \"\u307e\u305f\u3001\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u306e\u78ba\u8a8d\u306b\u306f\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u63a5\u7d9a\u304c\u5fc5\u8981\u3067\u3059\u3002\"",
          "8337: t MSG_187 \"\u9078\u629e\u3057\u305f\u30d6\u30fc\u30c8\u8a2d\u5b9a\u306b\u306f\u7121\u52b9\u306a\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002\"",
          "8339: t MSG_189 \"\u3053\u306eISO\u306f\u9078\u629e\u4e2d\u306e\u30d5\u30a1\u30a4\u30eb \u30b7\u30b9\u30c6\u30e0\u3068\u4e92\u63db\u6027\u304c\u3042\u308a\u307e\u305b\u3093\u3002\"",
          "8348:  \"\u3053\u306e\u30c9\u30e9\u30a4\u30d6\u306f%d\u30d0\u30a4\u30c8\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\"",
          "8349:  \"\u591a\u304f\u306e\u5834\u5408\u3001\u3053\u306e\u3088\u3046\u306a\u30c9\u30e9\u30a4\u30d6\u304b\u3089\u30d6\u30fc\u30c8\u3067\u304d\u307e\u305b\u3093\u3002\\n\"",
          "8353:  \"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u73fe\u5728\u306e\u30c9\u30e9\u30a4\u30d6\u306fFIXED\u3068\u3057\u3066\u691c\u51fa\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002\"",
          "8354: t MSG_199 \"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb \u30e1\u30c7\u30a3\u30a2\u3068\u3057\u3066\u9078\u629e\u4e2d\u306e\u30c7\u30d0\u30a4\u30b9\u3092\u4f7f\u7528\u3057\u3001\u5225\u306e\u30c7\u30a3\u30b9\u30af\u306bWindows\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5834\u5408\u306f\u3053\u3061\u3089\u3092\u9078\u3093\u3067\u304f\u3060\u3055\u3044\u3002\"",
          "8357: # Status messages - these messages will appear on the status bar",
          "8358: t MSG_201 \"\u30ad\u30e3\u30f3\u30bb\u30eb\u4e2d - \u304a\u5f85\u3061\u304f\u3060\u3055\u3044...\"",
          "",
          "[Removed Lines]",
          "8335: t MSG_186 \"Rufus\u306f\u3001\u672c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5b9f\u884c\u6642\u306e\u307f\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u306e\u78ba\u8a8d\u3092\u884c\u3044\u307e\u3059\u3002\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u307e\u305f\u306f\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u30b5\u30fc\u30d3\u30b9\u3092\u5b9f\u884c\u3057\u3066\u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u306f\u4e00\u5207\u3042\u308a\u307e\u305b\u3093\u3002\\\\line\\n\"",
          "8338: t MSG_188 \"\u73fe\u5728\u9078\u629e\u4e2d\u306e\u30a4\u30e1\u30fc\u30b8\u3068\u30d6\u30fc\u30c8\u8a2d\u5b9a\u304c\u9055\u3044\u307e\u3059\u3002\u5225\u306e\u30a4\u30e1\u30fc\u30b8\u3092\u4f7f\u3046\u304b\u3001\u4ed6\u306e\u30d6\u30fc\u30c8\u8a2d\u5b9a\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"",
          "8340: t MSG_190 \"\u4e92\u63db\u6027\u306e\u306a\u3044\u30c9\u30e9\u30a4\u30d6\u304c\u691c\u51fa\u3055\u308c\u307e\u3057\u305f\"",
          "8341: t MSG_191 \"\u66f8\u304d\u8fbc\u307f\u3092\u30d1\u30b9\u3057\u307e\u3057\u305f\"",
          "8342: t MSG_192 \"\u8aad\u307f\u51fa\u3057\u3092\u30d1\u30b9\u3057\u307e\u3057\u305f\"",
          "8343: t MSG_193 \"\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 %s\"",
          "8344: t MSG_194 \"%s\u306f\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\"",
          "8345: t MSG_195 \"\u5185\u8535\u3057\u3066\u3044\u308b %s\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u7528\u3057\u307e\u3059\"",
          "8346: t MSG_196 \"\u91cd\u8981: \u3053\u306e\u30c9\u30e9\u30a4\u30d6\u306f\u6a19\u6e96\u4ee5\u5916\u306e\u30bb\u30af\u30bf\u30b5\u30a4\u30ba\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059!\\n\\n\"",
          "8347:  \"\u5f93\u6765\u306e\u30c9\u30e9\u30a4\u30d6\u306f\u3001512\u30d0\u30a4\u30c8\u306e\u30bb\u30af\u30bf\u30b5\u30a4\u30ba\u3092\u4f7f\u7528\u3057\u307e\u3059\u304c\u3001\"",
          "8350:  \"Rufus\u306f\u30d6\u30fc\u30c8\u3067\u304d\u308b\u3088\u3046\u306b\u3001\u30c9\u30e9\u30a4\u30d6\u3092\u4f5c\u6210\u3057\u3088\u3046\u3068\u3057\u307e\u3059\u3002\u3057\u304b\u3057\u52d5\u4f5c\u4fdd\u8a3c\u306f\u3042\u308a\u307e\u305b\u3093\u3002\"",
          "8351: t MSG_197 \"\u6a19\u6e96\u4ee5\u5916\u306e\u30bb\u30af\u30bf\u30b5\u30a4\u30ba\u304c\u691c\u51fa\u3055\u308c\u307e\u3057\u305f\"",
          "8352: t MSG_198 \"FIXED\u5c5e\u6027\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306b\u9650\u308a\u3001GPT\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u306e\u30c9\u30e9\u30a4\u30d6\u306bWindows To Go\u3092\"",
          "8355: t MSG_200 \"\u9078\u629e\u4e2d\u306e\u30c7\u30d0\u30a4\u30b9\u304b\u3089\u76f4\u63a5Windows\u3092\u5b9f\u884c\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u3053\u3061\u3089\u3092\u9078\u3093\u3067\u304f\u3060\u3055\u3044\u3002\"",
          "",
          "[Added Lines]",
          "8334: t MSG_186 \"Rufus\u306f\u3001\u672c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5b9f\u884c\u6642\u306e\u307f\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u306e\u78ba\u8a8d\u3092\u884c\u3044\u307e\u3059\u3002\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u307e\u305f\u306f\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9 \u30b5\u30fc\u30d3\u30b9\u3092\u5b9f\u884c\u3057\u3066\u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u306f\u4e00\u5207\u3042\u308a\u307e\u305b\u3093\u3002\\\\line\\n\"",
          "8337: t MSG_188 \"\u73fe\u5728\u9078\u629e\u4e2d\u306e\u30a4\u30e1\u30fc\u30b8\u3068\u30d6\u30fc\u30c8\u8a2d\u5b9a\u304c\u4e00\u81f4\u3057\u307e\u305b\u3093\u3002\u5225\u306e\u30a4\u30e1\u30fc\u30b8\u3092\u4f7f\u3046\u304b\u3001\u4ed6\u306e\u30d6\u30fc\u30c8\u8a2d\u5b9a\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"",
          "8339: t MSG_190 \"\u4e92\u63db\u6027\u306e\u306a\u3044\u30c9\u30e9\u30a4\u30d6\u304c\u691c\u51fa\u3055\u308c\u307e\u3057\u305f\u3002\"",
          "8340: t MSG_191 \"\u66f8\u304d\u8fbc\u307f\u3092\u30d1\u30b9\u3057\u307e\u3057\u305f\u3002\"",
          "8341: t MSG_192 \"\u8aad\u307f\u51fa\u3057\u3092\u30d1\u30b9\u3057\u307e\u3057\u305f\u3002\"",
          "8342: t MSG_193 \"%s\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3057\u305f\u3002\"",
          "8343: t MSG_194 \"%s\u306f\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\"",
          "8344: t MSG_195 \"\u5185\u8535\u3057\u3066\u3044\u308b %s\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\"",
          "8345: t MSG_196 \"\u91cd\u8981: \u3053\u306e\u30c9\u30e9\u30a4\u30d6\u306f\u6a19\u6e96\u4ee5\u5916\u306e\u30bb\u30af\u30bf \u30b5\u30a4\u30ba\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059!\\n\\n\"",
          "8346:  \"\u5f93\u6765\u306e\u30c9\u30e9\u30a4\u30d6\u306f\u3001512\u30d0\u30a4\u30c8\u306e\u30bb\u30af\u30bf \u30b5\u30a4\u30ba\u3092\u4f7f\u7528\u3057\u307e\u3059\u304c\u3001\"",
          "8349:  \"\u3053\u306e\u307e\u307e\u30d6\u30fc\u30c8\u7528\u30c9\u30e9\u30a4\u30d6\u3092\u4f5c\u6210\u3057\u3088\u3046\u3068\u3057\u307e\u3059\u304c\u3001\u52d5\u4f5c\u4fdd\u8a3c\u306f\u3042\u308a\u307e\u305b\u3093\u3002\"",
          "8350: t MSG_197 \"\u6a19\u6e96\u4ee5\u5916\u306e\u30bb\u30af\u30bf\u30b5\u30a4\u30ba\u304c\u691c\u51fa\u3055\u308c\u307e\u3057\u305f\u3002\"",
          "8351: t MSG_198 \"\u201cFIXED\u201d\u5c5e\u6027\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306b\u9650\u308a\u3001GPT\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u306e\u30c9\u30e9\u30a4\u30d6\u306bWindows To Go\u3092\"",
          "8354: t MSG_200 \"\u9078\u629e\u4e2d\u306e\u30c7\u30d0\u30a4\u30b9\u304b\u3089\u76f4\u63a5Windows\u3092\u5b9f\u884c\u3057\u305f\u3044\u5834\u5408\u306f\u3053\u3061\u3089\u3092\u9078\u3093\u3067\u304f\u3060\u3055\u3044\u3002\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "8366: t MSG_206 \"\u30d5\u30a1\u30a4\u30eb\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093: %s\"",
          "8367: # The name proposed by Windows' Computer Management -> Disk Management when you try to format a drive",
          "8368: # with an empty label. See http://rufus.akeo.ie/pics/default_name.png",
          "8370: # Same message, once for singular and plural (\"1 device found\", \"2 devices found\")",
          "8371: t MSG_208 \"%d \u500b\u306e\u30c7\u30d0\u30a4\u30b9\u3092\u691c\u51fa\u3057\u307e\u3057\u305f\u3002\"",
          "8372: t MSG_209 \"%d \u500b\u306e\u30c7\u30d0\u30a4\u30b9\u3092\u691c\u51fa\u3057\u307e\u3057\u305f\u3002\"",
          "",
          "[Removed Lines]",
          "8369: t MSG_207 \"\u65b0\u3057\u3044\u30dc\u30ea\u30e5\u30fc\u30e0\u30e9\u30d9\u30eb\"",
          "",
          "[Added Lines]",
          "8368: t MSG_207 \"\u65b0\u3057\u3044\u30dc\u30ea\u30e5\u30fc\u30e0 \u30e9\u30d9\u30eb\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "8380: t MSG_215 \"%s\u3092\u958b\u304d\u307e\u3057\u305f\u3002\"",
          "8381: t MSG_216 \"%s\u3092\u4fdd\u5b58\u3057\u307e\u3057\u305f\u3002\"",
          "8382: # Formatting status (make sure you use a double % to print the percent sign)",
          "8385: t MSG_219 \"NTFS \u4fee\u6b63\u4e2d: %d%% \u5b8c\u4e86\"",
          "8386: # Parameter: the file system and an estimated duration in mins and secs.",
          "8387: # eg. \"Formatting (UDF) - Estimated duration 3:21...\"",
          "8388: # NB: if \"estimated duration\" is too long, just use \"estimated\" or an abbreviation",
          "8391: # Parameter: the file system. eg. \"Formatting (NTFS)...\"",
          "8393: t MSG_223 \"NTFS\u306e\u4fee\u6b63\u304c\u5fc5\u8981\u304b\u78ba\u8a8d\u4e2d (\u30c1\u30a7\u30c3\u30af\u30c7\u30a3\u30b9\u30af)...\"",
          "8394: t MSG_224 \"MBR/PBR/GPT\u69cb\u9020\u306e\u30af\u30ea\u30fc\u30cb\u30f3\u30b0\u4e2d...\"",
          "8397: t MSG_227 \"\u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u9589\u3058\u3066\u3044\u307e\u3059...\"",
          "8400: t MSG_230 \"DOS\u30d5\u30a1\u30a4\u30eb\u3092\u30b3\u30d4\u30fc\u4e2d...\"",
          "8401: t MSG_231 \"ISO\u30d5\u30a1\u30a4\u30eb\u3092\u30b3\u30d4\u30fc\u4e2d...\"",
          "8403: t MSG_233 \"\u6700\u7d42\u51e6\u7406\u4e2d\u3067\u3059\u3002\u3082\u3046\u9593\u3082\u306a\u304f\u7d42\u308f\u308a\u307e\u3059...\"",
          "8404: # Takes a Syslinux version as parameter, eg. \"Installing Syslinux v5.10...\"",
          "8405: t MSG_234 \"Syslinux %s\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u4e2d...\"",
          "8406: # Bad blocks status. eg: \"Bad Blocks: PASS 1/2 - 12.34% (0/0/1 errors)\"",
          "8408: t MSG_236 \"\u4e0d\u826f\u30d6\u30ed\u30c3\u30af: \u30e9\u30f3\u30c0\u30e0\u30d1\u30bf\u30fc\u30f3\u3067\u30c6\u30b9\u30c8\"",
          "8409: t MSG_237 \"\u4e0d\u826f\u30d6\u30ed\u30c3\u30af: \u30d1\u30bf\u30fc\u30f3 0x%02X \u3067\u30c6\u30b9\u30c8\"",
          "8410: t MSG_238 \"\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u5206\u5272\u4e2d (%s)...\"",
          "8411: t MSG_239 \"\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u524a\u9664\u4e2d...\"",
          "8412: t MSG_241 \"\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u4e2d: %0.1f%%\"",
          "8414: t MSG_243 \"Rufus\u306e\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3092\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059...\"",
          "8417: t MSG_246 \"Rufus\u306e\u65b0\u3057\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u5229\u7528\u3067\u304d\u307e\u3059!\"",
          "8421: t MSG_250 \"%s \u6709\u52b9\"",
          "8422: t MSG_251 \"%s \u7121\u52b9\"",
          "8423: t MSG_252 \"\u30b5\u30a4\u30ba\u306e\u78ba\u8a8d\"",
          "8424: t MSG_253 \"\u30cf\u30fc\u30c9\u30c7\u30a3\u30b9\u30af\u306e\u691c\u51fa\"",
          "8428: t MSG_257 \"Juliet\u306e\u30b5\u30dd\u30fc\u30c8\"",
          "8429: t MSG_258 \"Rock Ridge\u306e\u30b5\u30dd\u30fc\u30c8\"",
          "8430: t MSG_259 \"\u5f37\u5236\u7684\u306b\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\"",
          "8431: t MSG_260 \"NTFS\u5727\u7e2e\"",
          "8432: t MSG_261 \"\u30a4\u30e1\u30fc\u30b8\u3092\u66f8\u304d\u8fbc\u307f\u4e2d: %0.1f%% \u5b8c\u4e86\"",
          "8433: t MSG_262 \"ISO\u306e\u30b5\u30dd\u30fc\u30c8\"",
          "8437: t MSG_266 \"\u30c7\u30e5\u30a2\u30eb UEFI/BIOS \u30e2\u30fc\u30c9\"",
          "8438: t MSG_267 \"Windows\u30a4\u30e1\u30fc\u30b8\u3092\u9069\u7528\u4e2d: %0.1f%% \u5b8c\u4e86\"",
          "8439: t MSG_268 \"Windows\u30a4\u30e1\u30fc\u30b8\u3092\u9069\u7528\u3057\u307e\u3059...\"",
          "",
          "[Removed Lines]",
          "8383: t MSG_217 \"\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u4e2d: %0.1f%%\"",
          "8384: t MSG_218 \"\u30d5\u30a1\u30a4\u30eb \u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u6210\u4e2d: %d/%d\"",
          "8389: t MSG_220 \"\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u4e2d: (%s) - \u6b8b\u308a\u7d04 %d:%02d...\"",
          "8390: t MSG_221 \"\u30e9\u30d9\u30eb\u4f5c\u6210\u4e2d (\u6642\u9593\u304c\u304b\u304b\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059)\"",
          "8392: t MSG_222 \"\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u4e2d: (%s)...\"",
          "8395: t MSG_225 \"\u30c7\u30a3\u30b9\u30af\u30a2\u30af\u30bb\u30b9\u3092\u8981\u6c42\u3057\u3066\u3044\u307e\u3059...\"",
          "8396: t MSG_226 \"\u30d6\u30fc\u30c8\u30ec\u30b3\u30fc\u30c9\u3092\u5206\u6790\u3057\u3066\u307e\u3059...\"",
          "8398: t MSG_228 \"\u30de\u30b9\u30bf\u30fc\u30d6\u30fc\u30c8\u30ec\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u8fbc\u3093\u3067\u3044\u307e\u3059...\"",
          "8399: t MSG_229 \"\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u30d6\u30fc\u30c8\u30ec\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u8fbc\u3093\u3067\u3044\u307e\u3059...\"",
          "8402: t MSG_232 \"Win7 EFI \u30d6\u30fc\u30c8\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u4e2d (\u6642\u9593\u304c\u304b\u304b\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059)\"",
          "8407: t MSG_235 \"\u4e0d\u826f\u30d6\u30ed\u30c3\u30af: %s %d/%d - %0.2f%% (%d/%d/%d \u30a8\u30e9\u30fc)\"",
          "8413: t MSG_242 \"\u30d5\u30a1\u30a4\u30eb\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306f\u5931\u6557\u3057\u307e\u3057\u305f\u3002\"",
          "8415: t MSG_244 \"\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8:\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u63a5\u7d9a\u306b\u5931\u6557\u3057\u307e\u3057\u305f\"",
          "8416: t MSG_245 \"\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8:\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u30c7\u30fc\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u305b\u3093\"",
          "8418: t MSG_247 \"Rufus\u306e\u65b0\u3057\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\"",
          "8419: t MSG_248 \"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30ec\u30b8\u30b9\u30c8\u30ea\u30ad\u30fc\u306f\u6b63\u5e38\u306b\u524a\u9664\u3067\u304d\u307e\u3057\u305f\"",
          "8420: t MSG_249 \"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30ec\u30b8\u30b9\u30c8\u30ea\u30ad\u30fc\u306e\u524a\u9664\u306b\u5931\u6557\u3057\u307e\u3057\u305f\"",
          "8425: t MSG_254 \"\u5f37\u5236\u7684\u306b\u30e9\u30fc\u30b8FAT32\u3067\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3057\u307e\u3059\"",
          "8426: t MSG_255 \"NoDriveTypeAutorun\u306f\u9589\u3058\u308b\u6642\u306b\u524a\u9664\u3055\u308c\u307e\u3059\"",
          "8427: t MSG_256 \"\u507d\u88c5\u3055\u308c\u305f\u30c9\u30e9\u30a4\u30d6\u3092\u691c\u51fa\u3057\u307e\u3057\u305f\"",
          "8434: t MSG_263 \"\u9069\u5207\u306a\u30b5\u30a4\u30ba\u306e\u5024\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"",
          "8435: t MSG_264 \"\u201c%s\u201d\u30d5\u30a9\u30eb\u30c0\u3092\u524a\u9664\u3057\u3066\u3044\u307e\u3059\u3002\"",
          "8436: t MSG_265 \"VMWare\u30c7\u30a3\u30b9\u30af\u3092\u691c\u51fa\"",
          "",
          "[Added Lines]",
          "8382: t MSG_217 \"\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u4e2d: %0.1f%% \u5b8c\u4e86\"",
          "8383: t MSG_218 \"\u30d5\u30a1\u30a4\u30eb \u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u6210\u4e2d: %d/%d \u306e\u30bf\u30b9\u30af\u304c\u5b8c\u4e86\"",
          "8388: t MSG_220 \"\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u4e2d (%s) - \u6b8b\u308a\u7d04 %d:%02d...\"",
          "8389: t MSG_221 \"\u30e9\u30d9\u30eb\u4f5c\u6210\u4e2d (\u6642\u9593\u304c\u304b\u304b\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059)...\"",
          "8391: t MSG_222 \"\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u4e2d (%s)...\"",
          "8394: t MSG_225 \"\u30c7\u30a3\u30b9\u30af \u30a2\u30af\u30bb\u30b9\u3092\u8981\u6c42\u3057\u3066\u3044\u307e\u3059...\"",
          "8395: t MSG_226 \"\u30d6\u30fc\u30c8 \u30ec\u30b3\u30fc\u30c9\u3092\u5206\u6790\u3057\u3066\u307e\u3059...\"",
          "8397: t MSG_228 \"\u30de\u30b9\u30bf\u30fc \u30d6\u30fc\u30c8 \u30ec\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u8fbc\u3093\u3067\u3044\u307e\u3059...\"",
          "8398: t MSG_229 \"\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3 \u30d6\u30fc\u30c8 \u30ec\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u8fbc\u3093\u3067\u3044\u307e\u3059...\"",
          "8401: t MSG_232 \"Win7 EFI \u30d6\u30fc\u30c8 \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u4e2d (\u6642\u9593\u304c\u304b\u304b\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059)...\"",
          "8406: t MSG_235 \"\u4e0d\u826f\u30d6\u30ed\u30c3\u30af: %s %d/%d - %0.2f%% (\u30a8\u30e9\u30fc: %d/%d/%d)\"",
          "8412: t MSG_242 \"\u30d5\u30a1\u30a4\u30eb\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002\"",
          "8414: t MSG_244 \"\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8: \u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u63a5\u7d9a\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002\"",
          "8415: t MSG_245 \"\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8: \u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u30c7\u30fc\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u305b\u3093\u3002\"",
          "8417: t MSG_247 \"Rufus\u306e\u65b0\u3057\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\"",
          "8418: t MSG_248 \"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30ec\u30b8\u30b9\u30c8\u30ea \u30ad\u30fc\u3092\u6b63\u5e38\u306b\u524a\u9664\u3057\u307e\u3057\u305f\u3002\"",
          "8419: t MSG_249 \"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30ec\u30b8\u30b9\u30c8\u30ea \u30ad\u30fc\u306e\u524a\u9664\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002\"",
          "8424: t MSG_254 \"\u30e9\u30fc\u30b8FAT32\u3067\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u5f37\u5236\"",
          "8425: t MSG_255 \"NoDriveTypeAutorun\u306fRufus\u3092\u9589\u3058\u308b\u6642\u306b\u524a\u9664\u3055\u308c\u307e\u3059\u3002\"",
          "8426: t MSG_256 \"\u507d\u88c5\u3055\u308c\u305f\u30c9\u30e9\u30a4\u30d6\u306e\u691c\u51fa\"",
          "8433: t MSG_263 \"\u6b63\u78ba\u306a\u30b5\u30a4\u30ba\u5358\u4f4d\u3092\u4f7f\u7528\"",
          "8434: t MSG_264 \"\u201c%s\u201d\u30d5\u30a9\u30eb\u30c0\u30fc\u3092\u524a\u9664\u3057\u3066\u3044\u307e\u3059\u3002\"",
          "8435: t MSG_265 \"VMWare\u30c7\u30a3\u30b9\u30af\u306e\u691c\u51fa\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "8445: t MSG_274 \"ISOHybrid\u30a4\u30e1\u30fc\u30b8\u3092\u691c\u51fa\u3057\u307e\u3057\u305f\u3002\"",
          "8446: t MSG_275 \"\u9078\u629e\u3055\u308c\u305f\u30a4\u30e1\u30fc\u30b8\u306fISOHybrid\u3067\u3059\u3002\\n\"",
          "8447:  \"%s (\u30d5\u30a1\u30a4\u30eb \u30b3\u30d4\u30fc) \u30e2\u30fc\u30c9\u307e\u305f\u306f%s (\u30c7\u30a3\u30b9\u30af \u30a4\u30e1\u30fc\u30b8) \u30e2\u30fc\u30c9\u3067\u66f8\u304d\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\\n\"",
          "8449:  \"\u30d6\u30fc\u30c8\u4e2d\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u5834\u5408\u306b\u306f\u3001%s\u30e2\u30fc\u30c9\u3067\u518d\u5ea6\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\\n\\n\"",
          "8450:  \"\u3053\u306e\u30a4\u30e1\u30fc\u30b8\u3092\u66f8\u304d\u8fbc\u3080\u969b\u306b\u4f7f\u7528\u3059\u308b\u30e2\u30fc\u30c9\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"",
          "8451: t MSG_276 \"%s\u30e2\u30fc\u30c9\u3067\u66f8\u304d\u8fbc\u3080 (\u63a8\u5968)\"",
          "8452: t MSG_277 \"%s\u30e2\u30fc\u30c9\u3067\u66f8\u304d\u8fbc\u3080\"",
          "8453: t MSG_279 \"\u975e\u30d6\u30fc\u30c8\u7528\"",
          "8454: t MSG_280 \"\u30c7\u30a3\u30b9\u30af\u307e\u305f\u306fISO\u30a4\u30e1\u30fc\u30b8\"",
          "8455: t MSG_281 \"%s (\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044)\"",
          "8457: t MSG_283 \"\u7121\u52b9\u306a\u30c7\u30b8\u30bf\u30eb\u7f72\u540d\"",
          "8458: t MSG_284 \"\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u306b\u306f\u30c7\u30b8\u30bf\u30eb\u7f72\u540d\u304c\u3042\u308a\u307e\u305b\u3093\u3002\"",
          "8459: t MSG_285 \"\u3053\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u5b9f\u884c\u53ef\u80fd\u30d5\u30a1\u30a4\u30eb\u306e\u30c7\u30b8\u30bf\u30eb\u7f72\u540d\u306f\u201c%s\u201d\u3067\u3059\u3002\\n\"",
          "8460:  \"\u3053\u308c\u306f\u6b63\u898f\u306e\u7f72\u540d\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u60aa\u610f\u306e\u3042\u308b\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\\n\"",
          "8462: t MSG_286 \"\u201c0\u201d\u3092\u30c9\u30e9\u30a4\u30d6\u3078\u66f8\u304d\u8fbc\u307f\u521d\u671f\u5316\u4e2d: %0.1f%% \u5b8c\u4e86\"",
          "8464: t MSG_288 \"\u7ba1\u7406\u8005\u6a29\u9650\u304c\u3042\u308a\u307e\u305b\u3093\u3002\"",
          "8465: t MSG_289 \"\u3053\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u7ba1\u7406\u8005\u6a29\u9650\u3067\u306e\u307f\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002\"",
          "8466: t MSG_290 \"\u30d5\u30a1\u30a4\u30eb\u306e\u7d22\u5f15\u5316\"",
          "",
          "[Removed Lines]",
          "8448:  \"\u66f8\u304d\u8fbc\u307f\u5f8c\u3001\u30c9\u30e9\u30a4\u30d6\u3078\u30d5\u30eb\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u3001Rufus\u306f%s\u30e2\u30fc\u30c9\u3092\u63a8\u5968\u3057\u307e\u3059\u3002\\n\"",
          "8456: t MSG_282 \"\u30ed\u30c3\u30af\u3057\u3066\u3044\u308b\u6392\u4ed6\u7684\u306aUSB\u30c9\u30e9\u30a4\u30d6\"",
          "8461:  \"\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u884c\u3057\u3066\u3082\u826f\u3044\u3067\u3059\u304b?\"",
          "8463: t MSG_287 \"USB\u63a5\u7d9a\u3067\u306a\u3044\u30ea\u30e0\u30fc\u30d0\u30d6\u30eb\u30c7\u30a3\u30b9\u30af\u3092\u691c\u51fa\u3057\u307e\u3057\u305f\u3002\"",
          "",
          "[Added Lines]",
          "8447:  \"\u66f8\u304d\u8fbc\u307f\u5f8c\u3001\u30c9\u30e9\u30a4\u30d6\u306b\u30d5\u30eb\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u3001Rufus\u306f%s\u30e2\u30fc\u30c9\u3092\u63a8\u5968\u3057\u307e\u3059\u3002\\n\"",
          "8452: t MSG_278 \"\u7af6\u5408\u3059\u308b\u30d7\u30ed\u30bb\u30b9\u306e\u78ba\u8a8d\u4e2d...\"",
          "8456: t MSG_282 \"\u6392\u4ed6\u7684\u306aUSB\u30c9\u30e9\u30a4\u30d6\u306e\u30ed\u30c3\u30af\"",
          "8461:  \"\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u884c\u3057\u307e\u3059\u304b?\"",
          "8463: t MSG_287 \"USB\u63a5\u7d9a\u3067\u306a\u3044\u30ea\u30e0\u30fc\u30d0\u30d6\u30eb \u30c7\u30a3\u30b9\u30af\u3092\u691c\u51fa\u3057\u307e\u3057\u305f\u3002\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "8471: t MSG_295 \"\u8b66\u544a: \u975e\u516c\u5f0f\u7248\"",
          "8472: t MSG_296 \"\u3053\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306eRufus\u306f\u516c\u5f0f\u306e\u958b\u767a\u8005\u306b\u3088\u3063\u3066\u63d0\u4f9b\u3055\u308c\u305f\u3082\u306e\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\\n\\n\"",
          "8473:  \"\u975e\u516c\u5f0f\u7248Rufus\u3092\u5b9f\u884c\u3057\u307e\u3059\u304b?\"",
          "8476:  \"%s\u306e\u30c7\u30fc\u30bf\u304c\u4e0d\u8db3\u3057\u3066\u3044\u307e\u3059\u3002\\n\\n\"",
          "8477:  \"\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u308c\u305f\u3082\u306e\u306a\u3089\u3070\u3001\u518d\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001\"",
          "8478:  \"MD5\u304bSHA\u306e\u30c1\u30a7\u30c3\u30af\u30b5\u30e0\u304c\u516c\u5f0f\u306e\u3082\u306e\u3068\u4e00\u81f4\u3057\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\\n\\n\"",
          "8479:  \"MD5\u3068SHA\u306f[#]\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3059\u308c\u3070Rufus\u3067\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\"",
          "8480: t MSG_299 \"\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u306e\u691c\u8a3c\u30a8\u30e9\u30fc\"",
          "8482:  \"\u6f5c\u5728\u7684\u306a\u653b\u6483\u30b7\u30ca\u30ea\u30aa\u3092\u9632\u6b62\u3059\u308b\u305f\u3081\u3001\u66f4\u65b0\u30d7\u30ed\u30bb\u30b9\u3092\u4e2d\u6b62\u3057\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\u3057\u307e\u3059\u3002 \u8a73\u7d30\u306f\u30ed\u30b0\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"",
          "8483: t MSG_301 \"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u8a2d\u5b9a\u3092\u8868\u793a\u3057\u307e\u3059\u3002\"",
          "8484: t MSG_302 \"\u3053\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u60c5\u5831\u3092\u8868\u793a\u3057\u307e\u3059\u3002\"",
          "",
          "[Removed Lines]",
          "8474: t MSG_297 \"\u5207\u308a\u8a70\u3081\u3089\u308c\u305f (\u4e0d\u5b8c\u5168\u306a) ISO\u30d5\u30a1\u30a4\u30eb\u304c\u691c\u51fa\u3055\u308c\u307e\u3057\u305f\u3002\"",
          "8475: t MSG_298 \"\u9078\u629e\u3055\u308c\u305fISO\u30d5\u30a1\u30a4\u30eb\u306f\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30eb\u30b5\u30a4\u30ba\u3068\u4e00\u81f4\u3057\u307e\u305b\u3093\u3002\"",
          "8481: t MSG_300 \"\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u306e\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u304c\u73fe\u5728\u306e\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u306e\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3088\u308a\u3082\u65b0\u3057\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\\n\\n\"",
          "",
          "[Added Lines]",
          "8474: t MSG_297 \"\u4e0d\u5b8c\u5168\u306aISO\u30d5\u30a1\u30a4\u30eb\u3092\u691c\u51fa\u3057\u307e\u3057\u305f\u3002\"",
          "8475: t MSG_298 \"\u9078\u629e\u3055\u308c\u305fISO\u30d5\u30a1\u30a4\u30eb\u306f\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30eb \u30b5\u30a4\u30ba\u3068\u4e00\u81f4\u3057\u307e\u305b\u3093\u3002\"",
          "8481: t MSG_300 \"\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u306e\u30bf\u30a4\u30e0 \u30b9\u30bf\u30f3\u30d7\u304c\u73fe\u5728\u306e\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u306e\u30bf\u30a4\u30e0 \u30b9\u30bf\u30f3\u30d7\u3088\u308a\u3082\u65b0\u3057\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\\n\\n\"",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 232, 326",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 9, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Drive Properties\",IDS_DRIVE_PROPERTIES_TXT,8,6,53,12,NOT WS_GROUP",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 3.0.1263\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 3.0.1264\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "391: VS_VERSION_INFO VERSIONINFO",
          "394:  FILEFLAGSMASK 0x3fL",
          "395: #ifdef _DEBUG",
          "396:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "392:  FILEVERSION 3,0,1263,0",
          "393:  PRODUCTVERSION 3,0,1263,0",
          "",
          "[Added Lines]",
          "392:  FILEVERSION 3,0,1264,0",
          "393:  PRODUCTVERSION 3,0,1264,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "407:         BEGIN",
          "408:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
          "409:             VALUE \"FileDescription\", \"Rufus\"",
          "411:             VALUE \"InternalName\", \"Rufus\"",
          "412:             VALUE \"LegalCopyright\", \"\ufffd 2011-2018 Pete Batard (GPL v3)\"",
          "413:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
          "414:             VALUE \"OriginalFilename\", \"rufus.exe\"",
          "415:             VALUE \"ProductName\", \"Rufus\"",
          "417:         END",
          "418:     END",
          "419:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "410:             VALUE \"FileVersion\", \"3.0.1263\"",
          "416:             VALUE \"ProductVersion\", \"3.0.1263\"",
          "",
          "[Added Lines]",
          "410:             VALUE \"FileVersion\", \"3.0.1264\"",
          "416:             VALUE \"ProductVersion\", \"3.0.1264\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1014b8008de81e8804a48dc8e961daf56cf9d6ab",
      "candidate_info": {
        "commit_hash": "1014b8008de81e8804a48dc8e961daf56cf9d6ab",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/1014b8008de81e8804a48dc8e961daf56cf9d6ab",
        "files": [
          "res/localization/Pollock.cs",
          "src/rufus.rc"
        ],
        "message": "[pollock] fix a sequential download issue\n\n* Apparently you need to close the request/response as the Garbage Collection\n  will not do that for you. High level language my ass!",
        "before_after_code_files": [
          "res/localization/Pollock.cs||res/localization/Pollock.cs",
          "src/rufus.rc||src/rufus.rc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "res/localization/Pollock.cs||res/localization/Pollock.cs": [
          "File: res/localization/Pollock.cs -> res/localization/Pollock.cs",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:         private static Encoding encoding = new UTF8Encoding(false);",
          "115:         private static List<string> rtl_languages = new List<string> { \"ar-SA\", \"he-IL\", \"fa-IR\" };",
          "116:         private static Stopwatch sw = new System.Diagnostics.Stopwatch();",
          "118:         private static DateTime last_changed = DateTime.MinValue;",
          "119:         private static int download_status;",
          "120:         private static int console_x_pos;",
          "",
          "[Removed Lines]",
          "117:         private static WebClient wc = new WebClient();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "726:             {",
          "727:                 HttpWebResponse response = (HttpWebResponse)request.GetResponse();",
          "728:                 status = response.StatusCode;",
          "729:             }",
          "730:             catch (WebException we)",
          "731:             {",
          "732:                 HttpWebResponse response = we.Response as HttpWebResponse;",
          "733:                 status = response.StatusCode;",
          "734:             }",
          "735:             switch (status)",
          "736:             {",
          "737:                 case HttpStatusCode.OK:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "728:                 response.Close();",
          "734:                 response.Close();",
          "736:             request.Abort();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "754:             if (!ValidateDownload(url))",
          "755:                 return null;",
          "758:             {",
          "759:                 try",
          "760:                 {",
          "",
          "[Removed Lines]",
          "757:             using (wc)",
          "",
          "[Added Lines]",
          "759:             using (WebClient wc = new WebClient())",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "789:                 return false;",
          "791:             console_x_pos = Console.CursorLeft;",
          "793:             {",
          "794:                 wc.CachePolicy = new RequestCachePolicy(RequestCacheLevel.NoCacheNoStore);",
          "795:                 wc.DownloadFileCompleted += new AsyncCompletedEventHandler(DownloadCompleted);",
          "",
          "[Removed Lines]",
          "792:             using (wc)",
          "",
          "[Added Lines]",
          "794:             using (WebClient wc = new WebClient())",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "823:         {",
          "824:             if (cancel_requested)",
          "825:             {",
          "827:                 return;",
          "828:             }",
          "833:             in_progress = true;",
          "835:             speed = (e.BytesReceived / 1024d / sw.Elapsed.TotalSeconds);",
          "",
          "[Removed Lines]",
          "826:                 wc.CancelAsync();",
          "829:             if (in_progress)",
          "830:                 return;",
          "",
          "[Added Lines]",
          "828:                 ((WebClient)sender).CancelAsync();",
          "833:             if (in_progress)",
          "834:                 return;",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 232, 326",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 9, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Drive Properties\",IDS_DRIVE_PROPERTIES_TXT,8,6,53,12,NOT WS_GROUP",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 3.2.1336\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 3.2.1337\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "394: VS_VERSION_INFO VERSIONINFO",
          "397:  FILEFLAGSMASK 0x3fL",
          "398: #ifdef _DEBUG",
          "399:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "395:  FILEVERSION 3,2,1336,0",
          "396:  PRODUCTVERSION 3,2,1336,0",
          "",
          "[Added Lines]",
          "395:  FILEVERSION 3,2,1337,0",
          "396:  PRODUCTVERSION 3,2,1337,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "411:             VALUE \"Comments\", \"https://akeo.ie\"",
          "412:             VALUE \"CompanyName\", \"Akeo Consulting\"",
          "413:             VALUE \"FileDescription\", \"Rufus\"",
          "415:             VALUE \"InternalName\", \"Rufus\"",
          "416:             VALUE \"LegalCopyright\", \"\ufffd 2011-2018 Pete Batard (GPL v3)\"",
          "417:             VALUE \"LegalTrademarks\", \"https://www.gnu.org/copyleft/gpl.html\"",
          "418:             VALUE \"OriginalFilename\", \"rufus-3.2.exe\"",
          "419:             VALUE \"ProductName\", \"Rufus\"",
          "421:         END",
          "422:     END",
          "423:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "414:             VALUE \"FileVersion\", \"3.2.1336\"",
          "420:             VALUE \"ProductVersion\", \"3.2.1336\"",
          "",
          "[Added Lines]",
          "414:             VALUE \"FileVersion\", \"3.2.1337\"",
          "420:             VALUE \"ProductVersion\", \"3.2.1337\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "234b0a3fde17c134e900cd76c7d39a3db04fec03",
      "candidate_info": {
        "commit_hash": "234b0a3fde17c134e900cd76c7d39a3db04fec03",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/234b0a3fde17c134e900cd76c7d39a3db04fec03",
        "files": [
          "src/ms-sys/br.c",
          "src/ms-sys/inc/mbr_2000.h",
          "src/ms-sys/inc/mbr_vista.h",
          "src/ms-sys/inc/mbr_win7.h",
          "src/rufus.rc"
        ],
        "message": "[ms-sys] fix for detecting windows MBRs with localised messages\n\n* Windows MBRs contain localised strings which mean the bytes between the\n  executable code and the disk signature / partition table can change depending\n  on locale. This patch adds lengths to reflect the offsets which are the same\n  for every locale, and only compares these lengths when detecting existing\n  Windows MBRs.",
        "before_after_code_files": [
          "src/ms-sys/br.c||src/ms-sys/br.c",
          "src/ms-sys/inc/mbr_2000.h||src/ms-sys/inc/mbr_2000.h",
          "src/ms-sys/inc/mbr_vista.h||src/ms-sys/inc/mbr_vista.h",
          "src/ms-sys/inc/mbr_win7.h||src/ms-sys/inc/mbr_win7.h",
          "src/rufus.rc||src/rufus.rc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "src/ms-sys/br.c||src/ms-sys/br.c": [
          "File: src/ms-sys/br.c -> src/ms-sys/br.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "117:    #include \"mbr_2000.h\"",
          "119:    return",
          "121:       is_br(fp);",
          "",
          "[Removed Lines]",
          "120:       contains_data(fp, 0x0, mbr_2000_0x0, sizeof(mbr_2000_0x0)) &&",
          "",
          "[Added Lines]",
          "120:       contains_data(fp, 0x0, mbr_2000_0x0, MBR_2000_LANG_INDEP_LEN) &&",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "126:    #include \"mbr_vista.h\"",
          "128:    return",
          "130:       is_br(fp);",
          "",
          "[Removed Lines]",
          "129:       contains_data(fp, 0x0, mbr_vista_0x0, sizeof(mbr_vista_0x0)) &&",
          "",
          "[Added Lines]",
          "129:       contains_data(fp, 0x0, mbr_vista_0x0, MBR_VISTA_LANG_INDEP_LEN) &&",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "135:    #include \"mbr_win7.h\"",
          "137:    return",
          "139:       is_br(fp);",
          "",
          "[Removed Lines]",
          "138:       contains_data(fp, 0x0, mbr_win7_0x0, sizeof(mbr_win7_0x0)) &&",
          "",
          "[Added Lines]",
          "138:       contains_data(fp, 0x0, mbr_win7_0x0, MBR_WIN7_LANG_INDEP_LEN) &&",
          "",
          "---------------"
        ],
        "src/ms-sys/inc/mbr_2000.h||src/ms-sys/inc/mbr_2000.h": [
          "File: src/ms-sys/inc/mbr_2000.h -> src/ms-sys/inc/mbr_2000.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: unsigned char mbr_2000_0x0[] = {",
          "6:   0x33, 0xc0, 0x8e, 0xd0, 0xbc, 0x00, 0x7c, 0xfb, 0x50, 0x07, 0x50, 0x1f,",
          "7:   0xfc, 0xbe, 0x1b, 0x7c, 0xbf, 0x1b, 0x06, 0x50, 0x57, 0xb9, 0xe5, 0x01,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: #define MBR_2000_LANG_INDEP_LEN 0x12c",
          "",
          "---------------"
        ],
        "src/ms-sys/inc/mbr_vista.h||src/ms-sys/inc/mbr_vista.h": [
          "File: src/ms-sys/inc/mbr_vista.h -> src/ms-sys/inc/mbr_vista.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: unsigned char mbr_vista_0x0[] = {",
          "6: 0x33, 0xc0, 0x8e, 0xd0, 0xbc, 0x00, 0x7c, 0x8e, 0xc0, 0x8e, 0xd8, 0xbe,",
          "7: 0x00, 0x7c, 0xbf, 0x00, 0x06, 0xb9, 0x00, 0x02, 0xfc, 0xf3, 0xa4, 0x50,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: #define MBR_VISTA_LANG_INDEP_LEN 0x162",
          "",
          "---------------"
        ],
        "src/ms-sys/inc/mbr_win7.h||src/ms-sys/inc/mbr_win7.h": [
          "File: src/ms-sys/inc/mbr_win7.h -> src/ms-sys/inc/mbr_win7.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: unsigned char mbr_win7_0x0[] = {",
          "6:   0x33, 0xc0, 0x8e, 0xd0, 0xbc, 0x00, 0x7c, 0x8e, 0xc0, 0x8e, 0xd8, 0xbe,",
          "7:   0x00, 0x7c, 0xbf, 0x00, 0x06, 0xb9, 0x00, 0x02, 0xfc, 0xf3, 0xa4, 0x50,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: #define MBR_WIN7_LANG_INDEP_LEN 0x163",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 242, 376",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 8, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Device\",IDS_DEVICE_TXT,9,6,200,8",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 2.11.996\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 2.11.997\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "322: VS_VERSION_INFO VERSIONINFO",
          "325:  FILEFLAGSMASK 0x3fL",
          "326: #ifdef _DEBUG",
          "327:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "323:  FILEVERSION 2,11,996,0",
          "324:  PRODUCTVERSION 2,11,996,0",
          "",
          "[Added Lines]",
          "323:  FILEVERSION 2,11,997,0",
          "324:  PRODUCTVERSION 2,11,997,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "338:         BEGIN",
          "339:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
          "340:             VALUE \"FileDescription\", \"Rufus\"",
          "342:             VALUE \"InternalName\", \"Rufus\"",
          "343:             VALUE \"LegalCopyright\", \"\ufffd 2011-2016 Pete Batard (GPL v3)\"",
          "344:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
          "345:             VALUE \"OriginalFilename\", \"rufus.exe\"",
          "346:             VALUE \"ProductName\", \"Rufus\"",
          "348:         END",
          "349:     END",
          "350:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "341:             VALUE \"FileVersion\", \"2.11.996\"",
          "347:             VALUE \"ProductVersion\", \"2.11.996\"",
          "",
          "[Added Lines]",
          "341:             VALUE \"FileVersion\", \"2.11.997\"",
          "347:             VALUE \"ProductVersion\", \"2.11.997\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d1927ac1efb8775be81c5f5738d25fc117c3bf86",
      "candidate_info": {
        "commit_hash": "d1927ac1efb8775be81c5f5738d25fc117c3bf86",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/d1927ac1efb8775be81c5f5738d25fc117c3bf86",
        "files": [
          "src/format.c",
          "src/rufus.c",
          "src/rufus.h",
          "src/rufus.rc",
          "src/search.c",
          "src/search.h",
          "src/stdfn.c"
        ],
        "message": "[core] handle search improvements\n\n* Fix memory leaks due to not releasing the heap\n* Also speed up lookups by not reopening the same process twice in a row\n* Also make the usb_debug variable global so we can use uuprintf everywhere",
        "before_after_code_files": [
          "src/format.c||src/format.c",
          "src/rufus.c||src/rufus.c",
          "src/rufus.h||src/rufus.h",
          "src/rufus.rc||src/rufus.rc",
          "src/search.c||src/search.c",
          "src/search.h||src/search.h",
          "src/stdfn.c||src/stdfn.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "src/format.c||src/format.c": [
          "File: src/format.c -> src/format.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "61: extern const int nb_steps[FS_MAX];",
          "62: extern uint32_t dur_mins, dur_secs;",
          "63: static int fs_index = 0, wintogo_index = -1;",
          "65: uint8_t *grub2_buf = NULL;",
          "66: long grub2_len;",
          "67: static BOOL WritePBR(HANDLE hLogicalDrive);",
          "",
          "[Removed Lines]",
          "64: extern BOOL force_large_fat32, enable_ntfs_compression, lock_drive, zero_drive, disable_file_indexing, usb_debug;",
          "",
          "[Added Lines]",
          "64: extern BOOL force_large_fat32, enable_ntfs_compression, lock_drive, zero_drive, disable_file_indexing;",
          "",
          "---------------"
        ],
        "src/rufus.c||src/rufus.c": [
          "File: src/rufus.c -> src/rufus.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2170:  case WM_COMMAND:",
          "2171: #ifdef RUFUS_TEST",
          "2172:   if (LOWORD(wParam) == IDC_TEST) {",
          "2175:    break;",
          "2176:   }",
          "2177: #endif",
          "",
          "[Removed Lines]",
          "2173:    char* choices[] = { \"Choice 1\", \"Choice 2\", \"Choice 3\" };",
          "2174:    SelectionDyn(\"Test Choice\", \"Unused\", choices, ARRAYSIZE(choices));",
          "",
          "[Added Lines]",
          "2173:    SearchProcess(\"\\\\Device\\\\Harddisk5\\\\DR5\", TRUE, TRUE);",
          "",
          "---------------"
        ],
        "src/rufus.h||src/rufus.h": [
          "File: src/rufus.h -> src/rufus.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "392: extern unsigned long syslinux_ldlinux_len[2];",
          "393: extern const int nb_steps[FS_MAX];",
          "394: extern BOOL use_own_c32[NB_OLD_C32], detect_fakes, iso_op_in_progress, format_op_in_progress, right_to_left_mode;",
          "396: extern RUFUS_IMG_REPORT img_report;",
          "397: extern int64_t iso_blocking_status;",
          "398: extern uint16_t rufus_version[3], embedded_sl_version[2];",
          "",
          "[Removed Lines]",
          "395: extern BOOL allow_dual_uefi_bios, togo_mode, large_drive;",
          "",
          "[Added Lines]",
          "395: extern BOOL allow_dual_uefi_bios, togo_mode, large_drive, usb_debug;",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 242, 376",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 8, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Device\",IDS_DEVICE_TXT,9,6,200,8",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 2.15.1096\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 2.15.1097\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "336: VS_VERSION_INFO VERSIONINFO",
          "339:  FILEFLAGSMASK 0x3fL",
          "340: #ifdef _DEBUG",
          "341:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "337:  FILEVERSION 2,15,1096,0",
          "338:  PRODUCTVERSION 2,15,1096,0",
          "",
          "[Added Lines]",
          "337:  FILEVERSION 2,15,1097,0",
          "338:  PRODUCTVERSION 2,15,1097,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "352:         BEGIN",
          "353:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
          "354:             VALUE \"FileDescription\", \"Rufus\"",
          "356:             VALUE \"InternalName\", \"Rufus\"",
          "357:             VALUE \"LegalCopyright\", \"\ufffd 2011-2017 Pete Batard (GPL v3)\"",
          "358:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
          "359:             VALUE \"OriginalFilename\", \"rufus.exe\"",
          "360:             VALUE \"ProductName\", \"Rufus\"",
          "362:         END",
          "363:     END",
          "364:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "355:             VALUE \"FileVersion\", \"2.15.1096\"",
          "361:             VALUE \"ProductVersion\", \"2.15.1096\"",
          "",
          "[Added Lines]",
          "355:             VALUE \"FileVersion\", \"2.15.1097\"",
          "361:             VALUE \"ProductVersion\", \"2.15.1097\"",
          "",
          "---------------"
        ],
        "src/search.c||src/search.c": [
          "File: src/search.c -> src/search.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "34: #include \"missing.h\"",
          "35: #include \"msapi_utf8.h\"",
          "37: PF_TYPE_DECL(NTAPI, PVOID, RtlCreateHeap, (ULONG, PVOID, SIZE_T, SIZE_T, PVOID, PRTL_HEAP_PARAMETERS));",
          "38: PF_TYPE_DECL(NTAPI, PVOID, RtlAllocateHeap, (PVOID, ULONG, SIZE_T));",
          "39: PF_TYPE_DECL(NTAPI, BOOLEAN, RtlFreeHeap, (PVOID, ULONG, PVOID));",
          "41: PF_TYPE_DECL(NTAPI, NTSTATUS, NtQuerySystemInformation, (SYSTEM_INFORMATION_CLASS, PVOID, ULONG, PULONG));",
          "42: PF_TYPE_DECL(NTAPI, NTSTATUS, NtQueryObject, (HANDLE, OBJECT_INFORMATION_CLASS, PVOID, ULONG, PULONG));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42: PF_TYPE_DECL(NTAPI, PVOID, RtlDestroyHeap, (PVOID));",
          "45: #ifdef USE_OBJECT_TYPES",
          "46: PF_TYPE_DECL(NTAPI, VOID, RtlInitUnicodeString, (PUNICODE_STRING, PCWSTR));",
          "47: PF_TYPE_DECL(NTAPI, BOOLEAN, RtlEqualUnicodeString, (PCUNICODE_STRING, PCUNICODE_STRING, BOOLEAN));",
          "48: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "60:  switch (Status) {",
          "61:  case STATUS_UNSUCCESSFUL:",
          "62:   return \"Operation Failed\";",
          "65:  case STATUS_BUFFER_OVERFLOW:",
          "66:   return \"Buffer Overflow\";",
          "67:  case STATUS_INVALID_HANDLE:",
          "68:   return \"Invalid Handle.\";",
          "69:  case STATUS_INVALID_PARAMETER:",
          "",
          "[Removed Lines]",
          "63:  case STATUS_NOT_IMPLEMENTED:",
          "64:   return \"Not Implemented\";",
          "",
          "[Added Lines]",
          "74:  case STATUS_NOT_IMPLEMENTED:",
          "75:   return \"Not Implemented\";",
          "76:  case STATUS_INFO_LENGTH_MISMATCH:",
          "77:   return \"Info Length Mismatch\";",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "77:  case STATUS_OBJECT_TYPE_MISMATCH:",
          "78:   return \"Wrong Type\";",
          "79:  case STATUS_OBJECT_NAME_INVALID:",
          "81:  case STATUS_OBJECT_NAME_NOT_FOUND:",
          "82:   return \"Object Name not found\";",
          "83:  case STATUS_SHARING_VIOLATION:",
          "84:   return \"Sharing Violation\";",
          "85:  case STATUS_INSUFFICIENT_RESOURCES:",
          "",
          "[Removed Lines]",
          "80:   return \"Object Name invalid\";",
          "",
          "[Added Lines]",
          "91:   return \"Object Name Invalid\";",
          "94:  case STATUS_OBJECT_PATH_INVALID:",
          "95:   return \"Object Path Invalid\";",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "92:  }",
          "93: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "109: static NTSTATUS PhCreateHeap(VOID)",
          "110: {",
          "111:  NTSTATUS status = STATUS_SUCCESS;",
          "113:  if (PhHeapHandle != NULL)",
          "114:   return STATUS_ALREADY_COMPLETE;",
          "116:  PF_INIT_OR_SET_STATUS(RtlCreateHeap, Ntdll);",
          "118:  if (NT_SUCCESS(status)) {",
          "119:   PhHeapHandle = pfRtlCreateHeap(HEAP_NO_SERIALIZE | HEAP_GROWABLE, NULL, 2 * MB, 1 * MB, NULL, NULL);",
          "120:   if (PhHeapHandle == NULL)",
          "121:    status = STATUS_UNSUCCESSFUL;",
          "122:  }",
          "124:  return status;",
          "125: }",
          "127: static NTSTATUS PhDestroyHeap(VOID)",
          "128: {",
          "129:  NTSTATUS status = STATUS_SUCCESS;",
          "131:  if (PhHeapHandle == NULL)",
          "132:   return STATUS_ALREADY_COMPLETE;",
          "134:  PF_INIT_OR_SET_STATUS(RtlDestroyHeap, Ntdll);",
          "136:  if (NT_SUCCESS(status)) {",
          "137:   if (pfRtlDestroyHeap(PhHeapHandle) == NULL) {",
          "138:    PhHeapHandle = NULL;",
          "139:   } else {",
          "140:    status = STATUS_UNSUCCESSFUL;",
          "141:   }",
          "142:  }",
          "144:  return status;",
          "145: }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "103: static PVOID PhAllocate(SIZE_T Size)",
          "104: {",
          "111:  return pfRtlAllocateHeap(PhHeapHandle, 0, Size);",
          "114: }",
          "",
          "[Removed Lines]",
          "105:  PF_INIT_OR_OUT(RtlCreateHeap, Ntdll);",
          "106:  PF_INIT_OR_OUT(RtlAllocateHeap, Ntdll);",
          "108:  if (PhHeapHandle == NULL) {",
          "109:   PhHeapHandle = pfRtlCreateHeap(HEAP_GROWABLE, NULL, 2 * MB, 1 * MB, NULL, NULL);",
          "110:  }",
          "112: out:",
          "113:  return NULL;",
          "",
          "[Added Lines]",
          "157:  PF_INIT(RtlAllocateHeap, Ntdll);",
          "158:  if (pfRtlAllocateHeap == NULL)",
          "159:   return NULL;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "137: NTSTATUS PhEnumHandlesEx(PSYSTEM_HANDLE_INFORMATION_EX *Handles)",
          "138: {",
          "139:  static ULONG initialBufferSize = 0x10000;",
          "141:  PVOID buffer;",
          "142:  ULONG bufferSize;",
          "148:  bufferSize = initialBufferSize;",
          "149:  buffer = PhAllocate(bufferSize);",
          "",
          "[Removed Lines]",
          "140:  NTSTATUS status;",
          "144:  PF_INIT(NtQuerySystemInformation, Ntdll);",
          "145:  if (pfNtQuerySystemInformation == NULL)",
          "146:   return STATUS_NOT_IMPLEMENTED;",
          "",
          "[Added Lines]",
          "189:  NTSTATUS status = STATUS_SUCCESS;",
          "193:  PF_INIT_OR_SET_STATUS(NtQuerySystemInformation, Ntdll);",
          "194:  if (!NT_SUCCESS(status))",
          "195:   return status;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "188: NTSTATUS PhOpenProcess(PHANDLE ProcessHandle, ACCESS_MASK DesiredAccess, HANDLE ProcessId)",
          "189: {",
          "191:  OBJECT_ATTRIBUTES objectAttributes;",
          "192:  CLIENT_ID clientId;",
          "",
          "[Removed Lines]",
          "190:  NTSTATUS status = STATUS_NOT_IMPLEMENTED;",
          "",
          "[Added Lines]",
          "239:  NTSTATUS status = STATUS_SUCCESS;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "196:   return 0;",
          "197:  }",
          "201:  clientId.UniqueProcess = ProcessId;",
          "202:  clientId.UniqueThread = NULL;",
          "",
          "[Removed Lines]",
          "199:  PF_INIT_OR_OUT(NtOpenProcess, Ntdll);",
          "",
          "[Added Lines]",
          "248:  PF_INIT_OR_SET_STATUS(NtOpenProcess, Ntdll);",
          "249:  if (!NT_SUCCESS(status))",
          "250:   return status;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "204:  InitializeObjectAttributes(&objectAttributes, NULL, 0, NULL, NULL);",
          "205:  status = pfNtOpenProcess(ProcessHandle, DesiredAccess, &objectAttributes, &clientId);",
          "208:  return status;",
          "209: }",
          "",
          "[Removed Lines]",
          "207: out:",
          "",
          "[Added Lines]",
          "261: #ifdef USE_OBJECT_TYPES",
          "262: NTSTATUS PhEnumObjectTypes(POBJECT_TYPES_INFORMATION *ObjectTypes)",
          "263: {",
          "264:  NTSTATUS status = STATUS_SUCCESS;",
          "265:  PVOID buffer;",
          "266:  ULONG bufferSize;",
          "267:  ULONG returnLength;",
          "269:  PF_INIT_OR_SET_STATUS(NtQueryObject, Ntdll);",
          "270:  if (!NT_SUCCESS(status))",
          "271:   return status;",
          "273:  bufferSize = 0x1000;",
          "274:  buffer = PhAllocate(bufferSize);",
          "276:  while ((status = pfNtQueryObject(NULL, ObjectTypesInformation, buffer, bufferSize, &returnLength)) == STATUS_INFO_LENGTH_MISMATCH) {",
          "277:   PhFree(buffer);",
          "278:   bufferSize *= 2;",
          "281:   if (bufferSize > PH_LARGE_BUFFER_SIZE)",
          "282:    return STATUS_INSUFFICIENT_RESOURCES;",
          "284:   buffer = PhAllocate(bufferSize);",
          "285:  }",
          "287:  if (!NT_SUCCESS(status)) {",
          "288:   PhFree(buffer);",
          "289:   return status;",
          "290:  }",
          "294:  return status;",
          "295: }",
          "297: ULONG PhGetObjectTypeNumber(PUNICODE_STRING TypeName)",
          "298: {",
          "299:  NTSTATUS status = STATUS_SUCCESS;",
          "300:  POBJECT_TYPES_INFORMATION objectTypes;",
          "301:  POBJECT_TYPE_INFORMATION objectType;",
          "302:  ULONG objectIndex = -1;",
          "303:  ULONG i;",
          "305:  PF_INIT_OR_SET_STATUS(RtlEqualUnicodeString, NtDll);",
          "306:  if (!NT_SUCCESS(status))",
          "307:   return -1;",
          "309:  status = PhEnumObjectTypes(&objectTypes);",
          "310:  if (NT_SUCCESS(status)) {",
          "311:   objectType = PH_FIRST_OBJECT_TYPE(objectTypes);",
          "313:   for (i = 0; i < objectTypes->NumberOfTypes; i++) {",
          "314:    if (pfRtlEqualUnicodeString(&objectType->TypeName, TypeName, TRUE)) {",
          "315:     if (nWindowsVersion >= WINDOWS_8_1) {",
          "316:      objectIndex = objectType->TypeIndex;",
          "317:      break;",
          "318:     } else if (nWindowsVersion >= WINDOWS_7) {",
          "319:      objectIndex = i + 2;",
          "320:      break;",
          "321:     } else {",
          "322:      objectIndex = i + 1;",
          "323:      break;",
          "324:     }",
          "325:    }",
          "327:    objectType = PH_NEXT_OBJECT_TYPE(objectType);",
          "328:   }",
          "330:   PhFree(objectTypes);",
          "331:  }",
          "333:  return objectIndex;",
          "334: }",
          "335: #endif",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "220: BOOL SearchProcess(char* HandleName, BOOL bPartialMatch, BOOL bIgnoreSelf)",
          "221: {",
          "225:  ULONG_PTR i;",
          "226:  ULONG bufferSize;",
          "227:  USHORT wHandleNameLen;",
          "229:  HANDLE dupHandle = NULL;",
          "230:  HANDLE processHandle = NULL;",
          "231:  BOOLEAN bFound = FALSE;",
          "242:  if (NT_SUCCESS(status))",
          "243:   status = PhEnumHandlesEx(&handles);",
          "244:  if (!NT_SUCCESS(status)) {",
          "247:  }",
          "253:  wHandleName = utf8_to_wchar(HandleName);",
          "256:  bufferSize = 0x200;",
          "257:  buffer = PhAllocate(bufferSize);",
          "259:  for (i = 0; ; i++) {",
          "260:   ULONG attempts = 8;",
          "",
          "[Removed Lines]",
          "222:  NTSTATUS status;",
          "223:  PSYSTEM_HANDLE_INFORMATION_EX handles;",
          "224:  POBJECT_NAME_INFORMATION buffer;",
          "228:  WCHAR *wHandleName;",
          "232:  char exe_path[2][MAX_PATH];",
          "233:  int cur;",
          "235:  status = STATUS_NOT_IMPLEMENTED;",
          "236:  PF_INIT(NtQueryObject, Ntdll);",
          "237:  PF_INIT(NtDuplicateObject, NtDll);",
          "238:  PF_INIT(NtClose, NtDll);",
          "239:  if ((pfNtQueryObject != NULL) && (pfNtClose != NULL) && (pfNtDuplicateObject != NULL))",
          "240:   status = 0;",
          "245:   uprintf(\"Could not enumerate handles: %s\", NtStatusError(status));",
          "246:   return FALSE;",
          "250:  exe_path[0][0] = 0;",
          "251:  cur = 1;",
          "254:  wHandleNameLen = (USHORT) wcslen(wHandleName);",
          "",
          "[Added Lines]",
          "348:  NTSTATUS status = STATUS_SUCCESS;",
          "349:  PSYSTEM_HANDLE_INFORMATION_EX handles = NULL;",
          "350:  POBJECT_NAME_INFORMATION buffer = NULL;",
          "351: #ifdef USE_OBJECT_TYPES",
          "352:  UNICODE_STRING fileTypeName;",
          "353:  ULONG fileObjectTypeIndex = -1;",
          "354: #endif",
          "356:  ULONG_PTR pid[2];",
          "357:  ULONG_PTR last_access_denied_pid = 0;",
          "360:  WCHAR *wHandleName = NULL;",
          "364:  char exe[2][MAX_PATH];",
          "365:  int cur_exe, cur_pid;",
          "367:  PF_INIT_OR_SET_STATUS(NtQueryObject, Ntdll);",
          "368:  PF_INIT_OR_SET_STATUS(NtDuplicateObject, NtDll);",
          "369:  PF_INIT_OR_SET_STATUS(NtClose, NtDll);",
          "370: #ifdef USE_OBJECT_TYPES",
          "371:  PF_INIT(RtlInitUnicodeString, NtDll);",
          "372: #endif",
          "374:  if (NT_SUCCESS(status))",
          "375:   status = PhCreateHeap();",
          "381:   uprintf(\"Warning: Could not enumerate process handles: %s\", NtStatusError(status));",
          "382:   goto out;",
          "385:  pid[0] = (ULONG_PTR)NULL;",
          "386:  cur_pid = 1;",
          "387:  exe[0][0] = 0;",
          "388:  cur_exe = 1;",
          "391:  wHandleNameLen = (USHORT)wcslen(wHandleName);",
          "395:  if (buffer == NULL)",
          "396:   goto out;",
          "398: #ifdef USE_OBJECT_TYPES",
          "399:  pfRtlInitUnicodeString(&fileTypeName, L\"File\");",
          "400:  fileObjectTypeIndex = PhGetObjectTypeNumber(&fileTypeName);",
          "401:  if (fileObjectTypeIndex < 0)",
          "402:   uprintf(\"Warning: Could not get Object Index for file types\");",
          "403:  }",
          "404: #endif",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "264:    pfNtClose(dupHandle);",
          "265:    dupHandle = NULL;",
          "266:   }",
          "271:   }",
          "273:   CHECK_FOR_USER_CANCEL;",
          "276:   if (i >= handles->NumberOfHandles)",
          "277:    break;",
          "289:   if (processHandle == NtCurrentProcess()) {",
          "290:    if (bIgnoreSelf)",
          "291:     continue;",
          "",
          "[Removed Lines]",
          "267:   if (processHandle != NULL) {",
          "268:    if (processHandle != NtCurrentProcess())",
          "269:     pfNtClose(processHandle);",
          "270:    processHandle = NULL;",
          "282:   status = PhOpenProcess(&processHandle, PROCESS_DUP_HANDLE | PROCESS_QUERY_INFORMATION,",
          "283:    (HANDLE)handleInfo->UniqueProcessId);",
          "285:   if (!NT_SUCCESS(status))",
          "286:    continue;",
          "",
          "[Added Lines]",
          "415: #ifdef USE_OBJECT_TYPES",
          "417:   if ((fileObjectTypeIndex >= 0 ) && (handleInfo->ObjectTypeIndex != (USHORT)fileObjectTypeIndex))",
          "418:    continue;",
          "419: #endif",
          "422:   pid[cur_pid] = handleInfo->UniqueProcessId;",
          "424:   if (pid[0] != pid[1]) {",
          "425:    cur_pid = (cur_pid + 1) % 2;",
          "427:    if (processHandle != NULL) {",
          "428:     if (processHandle != NtCurrentProcess())",
          "429:      pfNtClose(processHandle);",
          "430:     processHandle = NULL;",
          "431:    }",
          "437:   if (handleInfo->UniqueProcessId == last_access_denied_pid)",
          "438:    continue;",
          "445:   if (pid[0] != pid[1]) {",
          "446:    status = PhOpenProcess(&processHandle, PROCESS_DUP_HANDLE | PROCESS_QUERY_INFORMATION,",
          "447:     (HANDLE)handleInfo->UniqueProcessId);",
          "449:    if (!NT_SUCCESS(status)) {",
          "450:     uuprintf(\"SearchProcess: Could not open process %ld: %s\",",
          "451:      handleInfo->UniqueProcessId, NtStatusError(status));",
          "452:     processHandle = NULL;",
          "453:     if (status == STATUS_ACCESS_DENIED) {",
          "454:      last_access_denied_pid = handleInfo->UniqueProcessId;",
          "455:     }",
          "456:     continue;",
          "457:    }",
          "458:   }",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "306:   do {",
          "309:    if (status == STATUS_BUFFER_OVERFLOW || status == STATUS_INFO_LENGTH_MISMATCH ||",
          "310:     status == STATUS_BUFFER_TOO_SMALL) {",
          "311:     PhFree(buffer);",
          "312:     buffer = PhAllocate(bufferSize);",
          "313:    } else {",
          "314:     break;",
          "315:    }",
          "316:   } while (--attempts);",
          "318:    continue;",
          "321:   if ((!bPartialMatch) && (wHandleNameLen != buffer->Name.Length))",
          "",
          "[Removed Lines]",
          "307:    status = pfNtQueryObject(dupHandle, ObjectBasicInformation + 1,",
          "308:     buffer, bufferSize, &bufferSize);",
          "317:   if (!NT_SUCCESS(status))",
          "",
          "[Added Lines]",
          "478:    ULONG returnSize;",
          "479:    status = pfNtQueryObject(dupHandle, ObjectNameInformation, buffer, bufferSize, &returnSize);",
          "482:     uuprintf(\"SearchProcess: Realloc from %d to %d\", bufferSize, returnSize);",
          "483:     bufferSize = returnSize;",
          "490:   if (!NT_SUCCESS(status)) {",
          "491:    uuprintf(\"SearchProcess: NtQueryObject failed for handle %X of process %ld: %s\",",
          "492:     handleInfo->HandleValue, handleInfo->UniqueProcessId, NtStatusError(status));",
          "494:   }",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "335:   }",
          "343:    }",
          "344:   } else {",
          "345:    uprintf(\"o Unknown (Process ID %d)\", GetProcessId(processHandle));",
          "",
          "[Removed Lines]",
          "338:   if (GetModuleFileNameExU(processHandle, 0, exe_path[cur], MAX_PATH - 1)) {",
          "340:    if (strcmp(exe_path[0], exe_path[1]) != 0) {",
          "341:     uprintf(\"o %s\", exe_path[cur]);",
          "342:     cur = (cur + 1) % 2;",
          "",
          "[Added Lines]",
          "514:   if (GetModuleFileNameExU(processHandle, 0, exe[cur_exe], MAX_PATH - 1)) {",
          "516:    if (strcmp(exe[0], exe[1]) != 0) {",
          "517:     uprintf(\"o %s\", exe[cur_exe]);",
          "518:     cur_exe = (cur_exe + 1) % 2;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "355:  free(wHandleName);",
          "356:  PhFree(buffer);",
          "357:  return bFound;",
          "358: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "533:  PhFree(handles);",
          "534:  PhDestroyHeap();",
          "",
          "---------------"
        ],
        "src/search.h||src/search.h": [
          "File: src/search.h -> src/search.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: #define PH_LARGE_BUFFER_SIZE   (256 * 1024 * 1024)",
          "33: #define STATUS_UNSUCCESSFUL    ((NTSTATUS)0x80000001L)",
          "34: #define STATUS_BUFFER_OVERFLOW   ((NTSTATUS)0x80000005L)",
          "35: #define STATUS_NOT_IMPLEMENTED   ((NTSTATUS)0xC0000002L)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33: #define STATUS_SUCCESS     ((NTSTATUS)0x00000000L)",
          "34: #define STATUS_ALREADY_COMPLETE   ((NTSTATUS)0x000000FFL)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40: #define STATUS_OBJECT_TYPE_MISMATCH  ((NTSTATUS)0xC0000024L)",
          "41: #define STATUS_OBJECT_NAME_INVALID  ((NTSTATUS)0xC0000033L)",
          "42: #define STATUS_OBJECT_NAME_NOT_FOUND ((NTSTATUS)0xC0000034L)",
          "43: #define STATUS_SHARING_VIOLATION  ((NTSTATUS)0xC0000043L)",
          "44: #define STATUS_INSUFFICIENT_RESOURCES ((NTSTATUS)0xC000009AL)",
          "45: #define STATUS_NOT_SUPPORTED   ((NTSTATUS)0xC00000BBL)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45: #define STATUS_OBJECT_PATH_INVALID  ((NTSTATUS)0xC0000039L)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "78:  HANDLE UniqueProcess;",
          "79:  HANDLE UniqueThread;",
          "80: } CLIENT_ID, *PCLIENT_ID;",
          "81: #endif",
          "85: typedef struct _RTL_HEAP_ENTRY",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "85: typedef struct _OBJECT_TYPE_INFORMATION",
          "86: {",
          "87:  UNICODE_STRING TypeName;",
          "88:  ULONG TotalNumberOfObjects;",
          "89:  ULONG TotalNumberOfHandles;",
          "90:  ULONG TotalPagedPoolUsage;",
          "91:  ULONG TotalNonPagedPoolUsage;",
          "92:  ULONG TotalNamePoolUsage;",
          "93:  ULONG TotalHandleTableUsage;",
          "94:  ULONG HighWaterNumberOfObjects;",
          "95:  ULONG HighWaterNumberOfHandles;",
          "96:  ULONG HighWaterPagedPoolUsage;",
          "97:  ULONG HighWaterNonPagedPoolUsage;",
          "98:  ULONG HighWaterNamePoolUsage;",
          "99:  ULONG HighWaterHandleTableUsage;",
          "100:  ULONG InvalidAttributes;",
          "101:  GENERIC_MAPPING GenericMapping;",
          "102:  ULONG ValidAccessMask;",
          "103:  BOOLEAN SecurityRequired;",
          "104:  BOOLEAN MaintainHandleCount;",
          "105:  UCHAR TypeIndex; // since WINBLUE",
          "106:  CHAR ReservedByte;",
          "107:  ULONG PoolType;",
          "108:  ULONG DefaultPagedPoolCharge;",
          "109:  ULONG DefaultNonPagedPoolCharge;",
          "110: } OBJECT_TYPE_INFORMATION, *POBJECT_TYPE_INFORMATION;",
          "112: typedef enum _MY_OBJECT_INFORMATION_CLASS",
          "113: {",
          "114:  _ObjectBasicInformation, // OBJECT_BASIC_INFORMATION",
          "115:  ObjectNameInformation, // OBJECT_NAME_INFORMATION",
          "116:  _ObjectTypeInformation, // OBJECT_TYPE_INFORMATION",
          "117:  ObjectTypesInformation, // OBJECT_TYPES_INFORMATION",
          "118:  ObjectHandleFlagInformation, // OBJECT_HANDLE_FLAG_INFORMATION",
          "119:  ObjectSessionInformation,",
          "120:  ObjectSessionObjectInformation,",
          "121:  MaxObjectInfoClass",
          "122: } MY_OBJECT_INFORMATION_CLASS;",
          "125: typedef struct _OBJECT_TYPES_INFORMATION",
          "126: {",
          "127:  ULONG NumberOfTypes;",
          "128: } OBJECT_TYPES_INFORMATION, *POBJECT_TYPES_INFORMATION;",
          "130: #define ALIGN_UP_BY(Address, Align) (((ULONG_PTR)(Address) + (Align) - 1) & ~((Align) - 1))",
          "131: #define ALIGN_UP(Address, Type) ALIGN_UP_BY(Address, sizeof(Type))",
          "133: #define PH_FIRST_OBJECT_TYPE(ObjectTypes) \\",
          "134:     (POBJECT_TYPE_INFORMATION)((PCHAR)(ObjectTypes) + ALIGN_UP(sizeof(OBJECT_TYPES_INFORMATION), ULONG_PTR))",
          "136: #define PH_NEXT_OBJECT_TYPE(ObjectType) \\",
          "137:     (POBJECT_TYPE_INFORMATION)((PCHAR)(ObjectType) + sizeof(OBJECT_TYPE_INFORMATION) + \\",
          "138:     ALIGN_UP(ObjectType->TypeName.MaximumLength, ULONG_PTR))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "184: #define HEAP_CLASS_7 0x00007000 // CSR shared heap",
          "185: #define HEAP_CLASS_8 0x00008000 // CSR port heap",
          "186: #define HEAP_CLASS_MASK 0x0000f000",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "245: #define PF_INIT_OR_SET_STATUS(proc, name)  do {PF_INIT(proc, name);   \\",
          "246:  if (pf##proc == NULL) status = STATUS_NOT_IMPLEMENTED; } while(0)",
          "",
          "---------------"
        ],
        "src/stdfn.c||src/stdfn.c": [
          "File: src/stdfn.c -> src/stdfn.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: #include \"settings.h\"",
          "36: int  nWindowsVersion = WINDOWS_UNDEFINED;",
          "37: int  nWindowsBuildNumber = -1;",
          "38: char WindowsVersionStr[128] = \"Windows \";",
          "",
          "[Removed Lines]",
          "35: extern BOOL usb_debug; // For uuprintf",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ff2548b559bdaab37ac22d6fdcf6223833e488b8",
      "candidate_info": {
        "commit_hash": "ff2548b559bdaab37ac22d6fdcf6223833e488b8",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/ff2548b559bdaab37ac22d6fdcf6223833e488b8",
        "files": [
          "src/msapi_utf8.h",
          "src/rufus.rc"
        ],
        "message": "[internal] align msapi_utf8.h to the one we use for libwdi",
        "before_after_code_files": [
          "src/msapi_utf8.h||src/msapi_utf8.h",
          "src/rufus.rc||src/rufus.rc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "src/msapi_utf8.h||src/msapi_utf8.h": [
          "File: src/msapi_utf8.h -> src/msapi_utf8.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "681: {",
          "682:  DWORD ret = 0xFFFFFFFF, err = ERROR_INVALID_DATA;",
          "683:  wconvert(lpFileName);",
          "685:  err = GetLastError();",
          "686:  wfree(lpFileName);",
          "687:  SetLastError(err);",
          "",
          "[Removed Lines]",
          "684:  ret = GetFileAttributesW(wlpFileName);",
          "",
          "[Added Lines]",
          "685:  if ((wlpFileName[0] == L'\"') && (wlpFileName[wcslen(wlpFileName) - 1] == L'\"')) {",
          "686:   wlpFileName[wcslen(wlpFileName) - 1] = 0;",
          "687:   ret = GetFileAttributesW(&wlpFileName[1]);",
          "688:  } else {",
          "689:   ret = GetFileAttributesW(wlpFileName);",
          "690:  }",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 232, 326",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 9, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Drive Properties\",IDS_DRIVE_PROPERTIES_TXT,8,6,53,12,NOT WS_GROUP",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 3.2.1361\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 3.2.1362\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "394: VS_VERSION_INFO VERSIONINFO",
          "397:  FILEFLAGSMASK 0x3fL",
          "398: #ifdef _DEBUG",
          "399:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "395:  FILEVERSION 3,2,1361,0",
          "396:  PRODUCTVERSION 3,2,1361,0",
          "",
          "[Added Lines]",
          "395:  FILEVERSION 3,2,1362,0",
          "396:  PRODUCTVERSION 3,2,1362,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "411:             VALUE \"Comments\", \"https://akeo.ie\"",
          "412:             VALUE \"CompanyName\", \"Akeo Consulting\"",
          "413:             VALUE \"FileDescription\", \"Rufus\"",
          "415:             VALUE \"InternalName\", \"Rufus\"",
          "416:             VALUE \"LegalCopyright\", \"\ufffd 2011-2018 Pete Batard (GPL v3)\"",
          "417:             VALUE \"LegalTrademarks\", \"https://www.gnu.org/copyleft/gpl.html\"",
          "418:             VALUE \"OriginalFilename\", \"rufus-3.2.exe\"",
          "419:             VALUE \"ProductName\", \"Rufus\"",
          "421:         END",
          "422:     END",
          "423:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "414:             VALUE \"FileVersion\", \"3.2.1361\"",
          "420:             VALUE \"ProductVersion\", \"3.2.1361\"",
          "",
          "[Added Lines]",
          "414:             VALUE \"FileVersion\", \"3.2.1362\"",
          "420:             VALUE \"ProductVersion\", \"3.2.1362\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}