{
  "cve_id": "CVE-2022-0518",
  "cve_desc": "Heap-based Buffer Overflow in GitHub repository radareorg/radare2 prior to 5.6.2.",
  "repo": "radareorg/radare2",
  "patch_hash": "9650e3c352f675687bf6c6f65ff2c4a3d0e288fa",
  "patch_info": {
    "commit_hash": "9650e3c352f675687bf6c6f65ff2c4a3d0e288fa",
    "repo": "radareorg/radare2",
    "commit_url": "https://github.com/radareorg/radare2/commit/9650e3c352f675687bf6c6f65ff2c4a3d0e288fa",
    "files": [
      "shlr/java/class.c"
    ],
    "message": "Fix oobread segfault in java arith8.class ##crash\n\n* Reported by Cen Zhang via huntr.dev",
    "before_after_code_files": [
      "shlr/java/class.c||shlr/java/class.c"
    ]
  },
  "patch_diff": {
    "shlr/java/class.c||shlr/java/class.c": [
      "File: shlr/java/class.c -> shlr/java/class.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3733:  ut64 offset = 0, curpos;",
      "3734:  attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
      "3735:  offset += 6;",
      "3736:  if (attr == NULL) {",
      "3738:   return attr;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3736:  if (buf_offset + offset + 8 > sz) {",
      "3737:   eprintf (\"Invalid amount of inner classes\\n\");",
      "3738:   return NULL;",
      "3739:  }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "3743:  attr->info.inner_classes_attr.classes = r_list_newf (r_bin_java_inner_classes_attr_entry_free);",
      "3744:  for (i = 0; i < attr->info.inner_classes_attr.number_of_classes; i++) {",
      "3745:   curpos = buf_offset + offset;",
      "3747:    eprintf (\"Invalid amount of inner classes\\n\");",
      "3748:    break;",
      "3749:   }",
      "",
      "[Removed Lines]",
      "3746:   if (offset + 8 > sz) {",
      "",
      "[Added Lines]",
      "3750:   if (buf_offset + offset + 8 > sz) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8525ad0b9fd596f4b251bb3d7b114e6dc7ce1ee8",
      "candidate_info": {
        "commit_hash": "8525ad0b9fd596f4b251bb3d7b114e6dc7ce1ee8",
        "repo": "radareorg/radare2",
        "commit_url": "https://github.com/radareorg/radare2/commit/8525ad0b9fd596f4b251bb3d7b114e6dc7ce1ee8",
        "files": [
          "libr/bin/format/pyc/marshal.c"
        ],
        "message": "Fix bins/*/rep8 - UAF crash in pyc parser ##crash\n\n* Reported by Cen Zhang via huntr.dev",
        "before_after_code_files": [
          "libr/bin/format/pyc/marshal.c||libr/bin/format/pyc/marshal.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/radareorg/radare2/pull/19669"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libr/bin/format/pyc/marshal.c||libr/bin/format/pyc/marshal.c": [
          "File: libr/bin/format/pyc/marshal.c -> libr/bin/format/pyc/marshal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1098:   break;",
          "1099:  case TYPE_UNKNOWN:",
          "1100:   eprintf (\"Get not implemented for type 0x%x\\n\", type);",
          "1102:   free_object (ret);",
          "1103:   return NULL;",
          "1104:  case 0:",
          "",
          "[Removed Lines]",
          "1101:   r_list_pop (refs);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "79b39bb54d840442dccea0ddaa11077edd4b8b99",
      "candidate_info": {
        "commit_hash": "79b39bb54d840442dccea0ddaa11077edd4b8b99",
        "repo": "radareorg/radare2",
        "commit_url": "https://github.com/radareorg/radare2/commit/79b39bb54d840442dccea0ddaa11077edd4b8b99",
        "files": [
          "libr/anal/Makefile",
          "shlr/java/class.c",
          "sys/rebuild.sh",
          "sys/sanitize.sh"
        ],
        "message": "Fix java oobread in id_000000,sig_06,sync_m1,src_000048 ##crash\n\n* Reported by Cen Zhang via huntr.dev",
        "before_after_code_files": [
          "shlr/java/class.c||shlr/java/class.c",
          "sys/rebuild.sh||sys/rebuild.sh",
          "sys/sanitize.sh||sys/sanitize.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/radareorg/radare2/pull/19669"
        ],
        "olp_code_files": {
          "patch": [
            "shlr/java/class.c||shlr/java/class.c"
          ],
          "candidate": [
            "shlr/java/class.c||shlr/java/class.c"
          ]
        }
      },
      "candidate_diff": {
        "shlr/java/class.c||shlr/java/class.c": [
          "File: shlr/java/class.c -> shlr/java/class.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7149: R_API RBinJavaAttrInfo *r_bin_java_rtv_annotations_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {",
          "7150:  ut32 i = 0;",
          "7152:  ut64 offset = 0;",
          "7154:  offset += 6;",
          "7155:  if (attr) {",
          "7156:   attr->type = R_BIN_JAVA_ATTR_TYPE_RUNTIME_VISIBLE_ANNOTATION_ATTR;",
          "",
          "[Removed Lines]",
          "7151:  RBinJavaAttrInfo *attr = NULL;",
          "7153:  attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
          "",
          "[Added Lines]",
          "7152:  if (buf_offset + 8 > sz) {",
          "7153:   return NULL;",
          "7154:  }",
          "7155:  RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
          "",
          "---------------"
        ],
        "sys/rebuild.sh||sys/rebuild.sh": [
          "File: sys/rebuild.sh -> sys/rebuild.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "18:  cd \"$1\" || exit 1",
          "19:  $MAKE clean",
          "20:  $MAKE -j8 || exit 1",
          "22: }",
          "24: Build() {",
          "25:  cd \"$1\" || exit 1",
          "26:  $MAKE -j8 || exit 1",
          "28: }",
          "30: RebuildIOSDebug() {",
          "",
          "[Removed Lines]",
          "21:  cd -",
          "27:  cd -",
          "",
          "[Added Lines]",
          "21:  cd - > /dev/null",
          "27:  cd - > /dev/null",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49: RebuildJava() {",
          "50:  Rebuild shlr/java",
          "51:  Rebuild libr/asm",
          "52:  Rebuild libr/anal",
          "54:  Rebuild libr/core",
          "55: }",
          "",
          "[Removed Lines]",
          "53:  Rebuild libr/bin",
          "",
          "[Added Lines]",
          "51:  Rebuild libr/bin",
          "",
          "---------------"
        ],
        "sys/sanitize.sh||sys/sanitize.sh": [
          "File: sys/sanitize.sh -> sys/sanitize.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: # SANITIZE=\"address leak memory undefined\"",
          "3: # SANITIZE=\"address signed-integer-overflow\"  # Faster build",
          "4: # default:",
          "8: printf \"\\033[32m\"",
          "9: echo \"=========================================================================\"",
          "",
          "[Removed Lines]",
          "5: # SANITIZE=${SANITIZE:=\"address undefined signed-integer-overflow\"}",
          "6: SANITIZE=${SANITIZE:=\"thread\"}",
          "",
          "[Added Lines]",
          "5: SANITIZE=${SANITIZE:=\"address undefined signed-integer-overflow\"}",
          "6: # SANITIZE=${SANITIZE:=\"thread\"}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d17a7bdf166108a29a27cd89bf454f9fa6c050d6",
      "candidate_info": {
        "commit_hash": "d17a7bdf166108a29a27cd89bf454f9fa6c050d6",
        "repo": "radareorg/radare2",
        "commit_url": "https://github.com/radareorg/radare2/commit/d17a7bdf166108a29a27cd89bf454f9fa6c050d6",
        "files": [
          "libr/anal/p/anal_arm_cs.c"
        ],
        "message": "Fix negative index in anal.arm64.cs ##crash\n\n* Reported by Cen Zhang via huntr.dev",
        "before_after_code_files": [
          "libr/anal/p/anal_arm_cs.c||libr/anal/p/anal_arm_cs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/radareorg/radare2/pull/19669"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libr/anal/p/anal_arm_cs.c||libr/anal/p/anal_arm_cs.c": [
          "File: libr/anal/p/anal_arm_cs.c -> libr/anal/p/anal_arm_cs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1016: #define VEC64(n) insn->detail->arm64.operands[n].vess",
          "1017: #define VEC64_APPEND(sb, n, i) vector64_append(sb, handle, insn, n, i)",
          "1020: static void vector64_append(RStrBuf *sb, csh *handle, cs_insn *insn, int n, int i) {",
          "1021:  cs_arm64_op op = INSOP64 (n);",
          "",
          "[Removed Lines]",
          "1018: #define VEC64_MASK(sh, sz) (bitmask_by_width[63]^(bitmask_by_width[sz-1]<<sh))",
          "",
          "[Added Lines]",
          "1018: #define VEC64_MASK(sh, sz) (bitmask_by_width[63]^(bitmask_by_width[sz>0?sz-1:0]<<sh))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6c4428f018d385fc80a33ecddcb37becea685dd5",
      "candidate_info": {
        "commit_hash": "6c4428f018d385fc80a33ecddcb37becea685dd5",
        "repo": "radareorg/radare2",
        "commit_url": "https://github.com/radareorg/radare2/commit/6c4428f018d385fc80a33ecddcb37becea685dd5",
        "files": [
          "shlr/java/class.c"
        ],
        "message": "Improve boundary checks to fix oobread segfaults ##crash\n\n* Reported by Cen Zhang via huntr.dev\n* Reproducer: bins/fuzzed/javaoob-havoc.class",
        "before_after_code_files": [
          "shlr/java/class.c||shlr/java/class.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "shlr/java/class.c||shlr/java/class.c"
          ],
          "candidate": [
            "shlr/java/class.c||shlr/java/class.c"
          ]
        }
      },
      "candidate_diff": {
        "shlr/java/class.c||shlr/java/class.c": [
          "File: shlr/java/class.c -> shlr/java/class.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3628: R_API RBinJavaAttrInfo *r_bin_java_enclosing_methods_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {",
          "3629:  ut64 offset = 6;",
          "3630:  RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
          "3631:  if (!attr || sz < 10) {",
          "3632:   free (attr);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3630:  if (sz < 8) {",
          "3631:   return NULL;",
          "3632:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3716: R_API RBinJavaAttrInfo *r_bin_java_inner_classes_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {",
          "3717:  RBinJavaClassesAttribute *icattr;",
          "3719:  RBinJavaCPTypeObj *obj;",
          "3720:  ut32 i = 0;",
          "3721:  ut64 offset = 0, curpos;",
          "3726:   return NULL;",
          "3727:  }",
          "3731:  }",
          "3732:  attr->type = R_BIN_JAVA_ATTR_TYPE_INNER_CLASSES_ATTR;",
          "3733:  attr->info.inner_classes_attr.number_of_classes = R_BIN_JAVA_USHORT (buffer, offset);",
          "3734:  offset += 2;",
          "3735:  attr->info.inner_classes_attr.classes = r_list_newf (r_bin_java_inner_classes_attr_entry_free);",
          "3736:  for (i = 0; i < attr->info.inner_classes_attr.number_of_classes; i++) {",
          "3737:   curpos = buf_offset + offset;",
          "3739:    eprintf (\"Invalid amount of inner classes\\n\");",
          "3740:    break;",
          "3741:   }",
          "",
          "[Removed Lines]",
          "3718:  RBinJavaAttrInfo *attr = NULL;",
          "3722:  attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
          "3723:  offset += 6;",
          "3724:  if (buf_offset + offset + 8 > sz) {",
          "3725:   eprintf (\"Invalid amount of inner classes\\n\");",
          "3728:  if (attr == NULL) {",
          "3730:   return attr;",
          "3738:   if (buf_offset + offset + 8 > sz) {",
          "",
          "[Added Lines]",
          "3724:  if (sz < 8) {",
          "3727:  RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
          "3728:  if (!attr) {",
          "3729:   return NULL;",
          "3731:  offset += 6;",
          "3738:   if (offset + 8 > sz) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3874: R_API RBinJavaAttrInfo *r_bin_java_source_debug_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {",
          "3875:  ut64 offset = 6;",
          "3876:  RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
          "3877:  if (!attr) {",
          "3878:   return NULL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3876:  if (sz < 8) {",
          "3877:   return NULL;",
          "3878:  }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3940: R_API RBinJavaAttrInfo *r_bin_java_local_variable_table_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {",
          "3941:  RBinJavaLocalVariableAttribute *lvattr;",
          "3942:  ut64 curpos = 0, offset = 6;",
          "3944:  ut32 i = 0;",
          "3946:   return NULL;",
          "3947:  }",
          "3949:  if (!attr) {",
          "3950:   return NULL;",
          "3951:  }",
          "",
          "[Removed Lines]",
          "3943:  RBinJavaAttrInfo *attr;",
          "3945:  if (!buffer || sz < 1) {",
          "3948:  attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
          "",
          "[Added Lines]",
          "3947:  if (!bin || !buffer || sz < 8) {",
          "3950:  RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4019: }",
          "4021: R_API RBinJavaAttrInfo *r_bin_java_local_variable_type_table_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {",
          "4022:  RBinJavaLocalVariableTypeAttribute *lvattr;",
          "4023:  ut64 offset = 6;",
          "4024:  ut32 i = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4024:  if (sz < 8) {",
          "4025:   return NULL;",
          "4026:  }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4072: }",
          "4074: R_API RBinJavaAttrInfo *r_bin_java_source_code_file_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {",
          "4076:   return NULL;",
          "4077:  }",
          "4078:  ut64 offset = 0;",
          "4079:  RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
          "4080:  offset += 6;",
          "4083:  }",
          "4090:  return attr;",
          "4091: }",
          "",
          "[Removed Lines]",
          "4075:  if (!sz) {",
          "4081:  if (!attr) {",
          "4082:   return NULL;",
          "4084:  attr->type = R_BIN_JAVA_ATTR_TYPE_SOURCE_FILE_ATTR;",
          "4086:  attr->info.source_file_attr.sourcefile_idx = R_BIN_JAVA_USHORT (buffer, offset);",
          "4087:  offset += 2;",
          "4088:  attr->size = offset;",
          "",
          "[Added Lines]",
          "4080:  if (!sz || sz == UT64_MAX) {",
          "4083: #if 0",
          "4085:  if (sz < 8) {",
          "4086:   return NULL;",
          "4087:  }",
          "4088: #endif",
          "4092:  if (attr) {",
          "4093:   attr->type = R_BIN_JAVA_ATTR_TYPE_SOURCE_FILE_ATTR;",
          "4094:   attr->info.source_file_attr.sourcefile_idx = R_BIN_JAVA_USHORT (buffer, offset);",
          "4095:   offset += 2;",
          "4096:   attr->size = offset;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "4095: }",
          "4097: R_API RBinJavaAttrInfo *r_bin_java_synthetic_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {",
          "4099:  RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
          "4100:  if (!attr) {",
          "4101:   return NULL;",
          "4102:  }",
          "4104:  attr->type = R_BIN_JAVA_ATTR_TYPE_SYNTHETIC_ATTR;",
          "4106:  return attr;",
          "4107: }",
          "",
          "[Removed Lines]",
          "4098:  ut64 offset = 0;",
          "4103:  offset += 6;",
          "4105:  attr->size = offset;",
          "",
          "[Added Lines]",
          "4107:  if (sz < 8) {",
          "4108:   return NULL;",
          "4109:  }",
          "4115:  attr->size = 6;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "4134: R_API RBinJavaVerificationObj *r_bin_java_verification_info_from_type(RBinJavaObj *bin, R_BIN_JAVA_STACKMAP_TYPE type, ut32 value) {",
          "4135:  RBinJavaVerificationObj *se = R_NEW0 (RBinJavaVerificationObj);",
          "4149:  }",
          "4150:  return se;",
          "4151: }",
          "4153: R_API RBinJavaVerificationObj *r_bin_java_read_from_buffer_verification_info_new(ut8 *buffer, ut64 sz, ut64 buf_offset) {",
          "4154:  ut64 offset = 0;",
          "4155:  RBinJavaVerificationObj *se = R_NEW0 (RBinJavaVerificationObj);",
          "4156:  if (!se) {",
          "",
          "[Removed Lines]",
          "4136:  if (!se) {",
          "4137:   return NULL;",
          "4138:  }",
          "4139:  se->tag = type;",
          "4140:  if (se->tag == R_BIN_JAVA_STACKMAP_OBJECT) {",
          "4141:   se->info.obj_val_cp_idx = (ut16) value;",
          "4142:  } else if (se->tag == R_BIN_JAVA_STACKMAP_UNINIT) {",
          "4144:   se->info.uninit_offset = value;",
          "4145:   } else {",
          "4146:   se->info.uninit_offset = (ut16) value;",
          "4148:   se->info.uninit_offset = (ut16) value;",
          "",
          "[Added Lines]",
          "4146:  if (se) {",
          "4147:   se->tag = type;",
          "4148:   if (se->tag == R_BIN_JAVA_STACKMAP_OBJECT) {",
          "4149:    se->info.obj_val_cp_idx = (ut16) value;",
          "4150:   } else if (se->tag == R_BIN_JAVA_STACKMAP_UNINIT) {",
          "4151:    se->info.uninit_offset = (ut16) value;",
          "4152:   }",
          "4158:  if (sz < 8) {",
          "4159:   return NULL;",
          "4160:  }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "4270: }",
          "4272: R_API RBinJavaStackMapFrame *r_bin_java_stack_map_frame_new(ut8 *buffer, ut64 sz, RBinJavaStackMapFrame *p_frame, ut64 buf_offset) {",
          "4273:  RBinJavaStackMapFrame *stack_frame = r_bin_java_default_stack_frame ();",
          "4274:  RBinJavaVerificationObj *se = NULL;",
          "4275:  ut64 offset = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4280:  if (sz < 8) {",
          "4281:   return NULL;",
          "4282:  }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "4573: R_API RBinJavaAttrInfo *r_bin_java_stack_map_table_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {",
          "4574:  ut32 i = 0;",
          "4575:  ut64 offset = 0;",
          "4576:  RBinJavaStackMapFrame *stack_frame = NULL, *new_stack_frame = NULL;",
          "4577:  if (sz < 10) {",
          "4578:   return NULL;",
          "4579:  }",
          "4580:  RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
          "4581:  offset += 6;",
          "4583:  if (!attr) {",
          "4584:   return NULL;",
          "4585:  }",
          "",
          "[Removed Lines]",
          "4582:  IFDBG eprintf(\"r_bin_java_stack_map_table_attr_new: New stack map allocated.\\n\");",
          "",
          "[Added Lines]",
          "4586:  if (sz < 8) {",
          "4587:   return NULL;",
          "4588:  }",
          "4595:  IFDBG eprintf (\"r_bin_java_stack_map_table_attr_new: New stack map allocated.\\n\");",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "6355: R_API RBinJavaAttrInfo *r_bin_java_annotation_default_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {",
          "6356:  ut64 offset = 0;",
          "6359:  offset += 6;",
          "6360:  if (attr && sz >= offset) {",
          "6361:   attr->type = R_BIN_JAVA_ATTR_TYPE_ANNOTATION_DEFAULT_ATTR;",
          "",
          "[Removed Lines]",
          "6357:  RBinJavaAttrInfo *attr = NULL;",
          "6358:  attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
          "",
          "[Added Lines]",
          "6370:  if (sz < 8) {",
          "6371:   return NULL;",
          "6372:  }",
          "6373:  RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "6436: R_API RBinJavaAnnotation *r_bin_java_annotation_new(ut8 *buffer, ut64 sz, ut64 buf_offset) {",
          "6437:  ut32 i = 0;",
          "6439:  RBinJavaElementValuePair *evps = NULL;",
          "6440:  ut64 offset = 0;",
          "6442:  if (!annotation) {",
          "6443:   return NULL;",
          "6444:  }",
          "",
          "[Removed Lines]",
          "6438:  RBinJavaAnnotation *annotation = NULL;",
          "6441:  annotation = R_NEW0 (RBinJavaAnnotation);",
          "",
          "[Added Lines]",
          "6455:  if (sz < 8) {",
          "6456:   return NULL;",
          "6457:  }",
          "6458:  RBinJavaAnnotation *annotation = R_NEW0 (RBinJavaAnnotation);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "6510: }",
          "6512: R_API ut64 r_bin_java_element_pair_calc_size(RBinJavaElementValuePair *evp) {",
          "6521:   sz += r_bin_java_element_value_calc_size (evp->value);",
          "6522:  }",
          "6523:  return sz;",
          "",
          "[Removed Lines]",
          "6513:  ut64 sz = 0;",
          "6514:  if (evp == NULL) {",
          "6515:   return sz;",
          "6516:  }",
          "6518:  sz += 2;",
          "6520:  if (evp->value) {",
          "",
          "[Added Lines]",
          "6530:  ut64 sz = 2;",
          "6531:  if (evp && evp->value) {",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "6596: R_API RBinJavaElementValue *r_bin_java_element_value_new(ut8 *buffer, ut64 sz, ut64 buf_offset) {",
          "6597:  ut32 i = 0;",
          "6598:  ut64 offset = 0;",
          "6599:  RBinJavaElementValue *element_value = R_NEW0 (RBinJavaElementValue);",
          "6600:  if (!element_value) {",
          "6601:   return NULL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6612:  if (sz < 8) {",
          "6613:   return NULL;",
          "6614:  }",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "7011: R_API RBinJavaAttrInfo *r_bin_java_rtv_annotations_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {",
          "7012:  ut32 i = 0;",
          "7013:  ut64 offset = 0;",
          "7015:   return NULL;",
          "7016:  }",
          "7017:  RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
          "",
          "[Removed Lines]",
          "7014:  if (buf_offset + 8 > sz) {",
          "",
          "[Added Lines]",
          "7030:  if (sz < 8) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}