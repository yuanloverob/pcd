{
  "cve_id": "CVE-2019-20788",
  "cve_desc": "libvncclient/cursor.c in LibVNCServer through 0.9.12 has a HandleCursorShape integer overflow and heap-based buffer overflow via a large height or width value. NOTE: this may overlap CVE-2019-15690.",
  "repo": "LibVNC/libvncserver",
  "patch_hash": "54220248886b5001fbbb9fa73c4e1a2cb9413fed",
  "patch_info": {
    "commit_hash": "54220248886b5001fbbb9fa73c4e1a2cb9413fed",
    "repo": "LibVNC/libvncserver",
    "commit_url": "https://github.com/LibVNC/libvncserver/commit/54220248886b5001fbbb9fa73c4e1a2cb9413fed",
    "files": [
      "libvncclient/cursor.c"
    ],
    "message": "libvncclient/cursor: limit width/height input values\n\nAvoids a possible heap overflow reported by Pavel Cheremushkin\n<Pavel.Cheremushkin@kaspersky.com>.\n\nre #275",
    "before_after_code_files": [
      "libvncclient/cursor.c||libvncclient/cursor.c"
    ]
  },
  "patch_diff": {
    "libvncclient/cursor.c||libvncclient/cursor.c": [
      "File: libvncclient/cursor.c -> libvncclient/cursor.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "28: #define OPER_SAVE     0",
      "29: #define OPER_RESTORE  1",
      "31: #define RGB24_TO_PIXEL(bpp,r,g,b)                                       \\",
      "32:    ((((uint##bpp##_t)(r) & 0xFF) * client->format.redMax + 127) / 255             \\",
      "33:     << client->format.redShift |                                              \\",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31: #define MAX_CURSOR_SIZE 1024",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "54:   if (width * height == 0)",
      "55:     return TRUE;",
      "58:   if(client->rcSource)",
      "59:     free(client->rcSource);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "59:   if (width >= MAX_CURSOR_SIZE || height >= MAX_CURSOR_SIZE)",
      "60:     return FALSE;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8937203441ee241c4ace85da687b7d6633a12365",
      "candidate_info": {
        "commit_hash": "8937203441ee241c4ace85da687b7d6633a12365",
        "repo": "LibVNC/libvncserver",
        "commit_url": "https://github.com/LibVNC/libvncserver/commit/8937203441ee241c4ace85da687b7d6633a12365",
        "files": [
          "libvncclient/rfbproto.c"
        ],
        "message": "libvncclient/rfbproto: limit max textchat size\n\nAddresses GitHub Security Lab (GHSL) Vulnerability Report\n`GHSL-2020-063`.\n\nRe #275",
        "before_after_code_files": [
          "libvncclient/rfbproto.c||libvncclient/rfbproto.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libvncclient/rfbproto.c||libvncclient/rfbproto.c": [
          "File: libvncclient/rfbproto.c -> libvncclient/rfbproto.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2159:               client->HandleTextChat(client, (int)rfbTextChatFinished, NULL);",
          "2160:           break;",
          "2161:       default:",
          "2162:           buffer=malloc(msg.tc.length+1);",
          "2163:           if (!ReadFromRFBServer(client, buffer, msg.tc.length))",
          "2164:           {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2163:    if(msg.tc.length > MAX_TEXTCHAT_SIZE)",
          "2164:        return FALSE;",
          "",
          "---------------"
        ]
      }
    }
  ]
}