{
  "cve_id": "CVE-2015-3813",
  "cve_desc": "The fragment_add_work function in epan/reassemble.c in the packet-reassembly feature in Wireshark 1.12.x before 1.12.5 does not properly determine the defragmentation state in a case of an insufficient snapshot length, which allows remote attackers to cause a denial of service (memory consumption) via a crafted packet.",
  "repo": "wireshark/wireshark",
  "patch_hash": "c35f2ccb4433718416551cc7a85afb0860529d57",
  "patch_info": {
    "commit_hash": "c35f2ccb4433718416551cc7a85afb0860529d57",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/c35f2ccb4433718416551cc7a85afb0860529d57",
    "files": [
      "epan/reassemble.c"
    ],
    "message": "reassembly: address a 15-year old XXX comment\n\nQuestion: \"what if we didn't capture the entire fragment due to a too-short\n          snapshot length?\"\nAnswer: An assertion fails and we leak a bunch of memory.\n\nDon't do that.\n\nBug: 11129\nChange-Id: I0adfb217f0e66ae8f5f6255a4caf7ff940826b59\nReviewed-on: https://code.wireshark.org/review/8128\nPetri-Dish: Evan Huus <eapache@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Evan Huus <eapache@gmail.com>",
    "before_after_code_files": [
      "epan/reassemble.c||epan/reassemble.c"
    ]
  },
  "patch_diff": {
    "epan/reassemble.c||epan/reassemble.c": [
      "File: epan/reassemble.c -> epan/reassemble.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1020:  fd->tvb_data = tvb_clone_offset_len(tvb, offset, fd->len);",
      "1021:  LINK_FRAG(fd_head,fd);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1018:  if (!tvb_bytes_exist(tvb, offset, fd->len)) {",
      "1019:   g_slice_free(fragment_item, fd);",
      "1020:   THROW(BoundsError);",
      "1021:  }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "27e0dac05b05b2fe780bbcb685933a714be10ef0",
      "candidate_info": {
        "commit_hash": "27e0dac05b05b2fe780bbcb685933a714be10ef0",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/27e0dac05b05b2fe780bbcb685933a714be10ef0",
        "files": [
          "epan/reassemble.c"
        ],
        "message": "reassembly: address a 15-year old XXX comment\n\nQuestion: \"what if we didn't capture the entire fragment due to a too-short\n          snapshot length?\"\nAnswer: An assertion fails and we leak a bunch of memory.\n\nDon't do that.\n\nBug: 11129\nChange-Id: I0adfb217f0e66ae8f5f6255a4caf7ff940826b59\nReviewed-on: https://code.wireshark.org/review/8128\nPetri-Dish: Evan Huus <eapache@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Evan Huus <eapache@gmail.com>\n(cherry picked from commit c35f2ccb4433718416551cc7a85afb0860529d57)\nReviewed-on: https://code.wireshark.org/review/8149\n(cherry picked from commit 5bbf0d2afbf31f50eed0d46a56a2a1e8f494901a)\nReviewed-on: https://code.wireshark.org/review/8638\nReviewed-by: Balint Reczey <balint@balintreczey.hu>",
        "before_after_code_files": [
          "epan/reassemble.c||epan/reassemble.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/reassemble.c||epan/reassemble.c"
          ],
          "candidate": [
            "epan/reassemble.c||epan/reassemble.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/reassemble.c||epan/reassemble.c": [
          "File: epan/reassemble.c -> epan/reassemble.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1019:  fd->tvb_data = tvb_clone_offset_len(tvb, offset, fd->len);",
          "1020:  LINK_FRAG(fd_head,fd);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1017:  if (!tvb_bytes_exist(tvb, offset, fd->len)) {",
          "1018:   g_slice_free(fragment_item, fd);",
          "1019:   THROW(BoundsError);",
          "1020:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5bbf0d2afbf31f50eed0d46a56a2a1e8f494901a",
      "candidate_info": {
        "commit_hash": "5bbf0d2afbf31f50eed0d46a56a2a1e8f494901a",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/5bbf0d2afbf31f50eed0d46a56a2a1e8f494901a",
        "files": [
          "epan/reassemble.c"
        ],
        "message": "reassembly: address a 15-year old XXX comment\n\nQuestion: \"what if we didn't capture the entire fragment due to a too-short\n          snapshot length?\"\nAnswer: An assertion fails and we leak a bunch of memory.\n\nDon't do that.\n\nBug: 11129\nChange-Id: I0adfb217f0e66ae8f5f6255a4caf7ff940826b59\nReviewed-on: https://code.wireshark.org/review/8128\nPetri-Dish: Evan Huus <eapache@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Evan Huus <eapache@gmail.com>\n(cherry picked from commit c35f2ccb4433718416551cc7a85afb0860529d57)\nReviewed-on: https://code.wireshark.org/review/8149",
        "before_after_code_files": [
          "epan/reassemble.c||epan/reassemble.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/reassemble.c||epan/reassemble.c"
          ],
          "candidate": [
            "epan/reassemble.c||epan/reassemble.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/reassemble.c||epan/reassemble.c": [
          "File: epan/reassemble.c -> epan/reassemble.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1019:  fd->tvb_data = tvb_clone_offset_len(tvb, offset, fd->len);",
          "1020:  LINK_FRAG(fd_head,fd);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1017:  if (!tvb_bytes_exist(tvb, offset, fd->len)) {",
          "1018:   g_slice_free(fragment_item, fd);",
          "1019:   THROW(BoundsError);",
          "1020:  }",
          "",
          "---------------"
        ]
      }
    }
  ]
}