{
  "cve_id": "CVE-2022-23558",
  "cve_desc": "Tensorflow is an Open Source Machine Learning Framework. An attacker can craft a TFLite model that would cause an integer overflow in `TfLiteIntArrayCreate`. The `TfLiteIntArrayGetSizeInBytes` returns an `int` instead of a `size_t. An attacker can control model inputs such that `computed_size` overflows the size of `int` datatype. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "a1e1511dde36b3f8aa27a6ec630838e7ea40e091",
  "patch_info": {
    "commit_hash": "a1e1511dde36b3f8aa27a6ec630838e7ea40e091",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/a1e1511dde36b3f8aa27a6ec630838e7ea40e091",
    "files": [
      "tensorflow/lite/c/common.c",
      "tensorflow/lite/c/common.h"
    ],
    "message": "[lite] Update TfLiteIntArrayCreate to return size_t\n\nPiperOrigin-RevId: 416439896\nChange-Id: I847f69b68d1ddaff4b1e925a09b8b69c1756653b",
    "before_after_code_files": [
      "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c",
      "tensorflow/lite/c/common.h||tensorflow/lite/c/common.h"
    ]
  },
  "patch_diff": {
    "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c": [
      "File: tensorflow/lite/c/common.c -> tensorflow/lite/c/common.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "21: #include <string.h>",
      "22: #endif  // TF_LITE_STATIC_MEMORY",
      "25:   static TfLiteIntArray dummy;",
      "28: #if defined(_MSC_VER)",
      "30:   computed_size -= sizeof(dummy.data[0]);",
      "",
      "[Removed Lines]",
      "24: int TfLiteIntArrayGetSizeInBytes(int size) {",
      "27:   int computed_size = sizeof(dummy) + sizeof(dummy.data[0]) * size;",
      "",
      "[Added Lines]",
      "24: size_t TfLiteIntArrayGetSizeInBytes(int size) {",
      "27:   size_t computed_size = sizeof(dummy) + sizeof(dummy.data[0]) * size;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "51: #ifndef TF_LITE_STATIC_MEMORY",
      "53: TfLiteIntArray* TfLiteIntArrayCreate(int size) {",
      "55:   if (alloc_size <= 0) return NULL;",
      "56:   TfLiteIntArray* ret = (TfLiteIntArray*)malloc(alloc_size);",
      "57:   if (!ret) return ret;",
      "",
      "[Removed Lines]",
      "54:   int alloc_size = TfLiteIntArrayGetSizeInBytes(size);",
      "",
      "[Added Lines]",
      "54:   size_t alloc_size = TfLiteIntArrayGetSizeInBytes(size);",
      "",
      "---------------"
    ],
    "tensorflow/lite/c/common.h||tensorflow/lite/c/common.h": [
      "File: tensorflow/lite/c/common.h -> tensorflow/lite/c/common.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "103: #ifndef TF_LITE_STATIC_MEMORY",
      "",
      "[Removed Lines]",
      "101: int TfLiteIntArrayGetSizeInBytes(int size);",
      "",
      "[Added Lines]",
      "101: size_t TfLiteIntArrayGetSizeInBytes(int size);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "cb7e2353fa3adb15bc903dd8c98a186f7437c781",
      "candidate_info": {
        "commit_hash": "cb7e2353fa3adb15bc903dd8c98a186f7437c781",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/cb7e2353fa3adb15bc903dd8c98a186f7437c781",
        "files": [
          "tensorflow/lite/c/common.c",
          "tensorflow/lite/c/common.h"
        ],
        "message": "Make flexible array members work with Visual Studio.\n\nPiperOrigin-RevId: 398550680\nChange-Id: I555ebee6ddf1701233346577aec78e38bace5f4b",
        "before_after_code_files": [
          "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c",
          "tensorflow/lite/c/common.h||tensorflow/lite/c/common.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c",
            "tensorflow/lite/c/common.h||tensorflow/lite/c/common.h"
          ],
          "candidate": [
            "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c",
            "tensorflow/lite/c/common.h||tensorflow/lite/c/common.h"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c": [
          "File: tensorflow/lite/c/common.c -> tensorflow/lite/c/common.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: int TfLiteIntArrayGetSizeInBytes(int size) {",
          "25:   static TfLiteIntArray dummy;",
          "27: }",
          "29: int TfLiteIntArrayEqual(const TfLiteIntArray* a, const TfLiteIntArray* b) {",
          "",
          "[Removed Lines]",
          "26:   return sizeof(dummy) + sizeof(dummy.data[0]) * size;",
          "",
          "[Added Lines]",
          "27:   int computed_size = sizeof(dummy) + sizeof(dummy.data[0]) * size;",
          "28: #if defined(_MSC_VER)",
          "30:   computed_size -= sizeof(dummy.data[0]);",
          "31: #endif",
          "32:   return computed_size;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "69: int TfLiteFloatArrayGetSizeInBytes(int size) {",
          "70:   static TfLiteFloatArray dummy;",
          "72: }",
          "74: #ifndef TF_LITE_STATIC_MEMORY",
          "",
          "[Removed Lines]",
          "71:   return sizeof(dummy) + sizeof(dummy.data[0]) * size;",
          "",
          "[Added Lines]",
          "78:   int computed_size = sizeof(dummy) + sizeof(dummy.data[0]) * size;",
          "79: #if defined(_MSC_VER)",
          "81:   computed_size -= sizeof(dummy.data[0]);",
          "82: #endif",
          "83:   return computed_size;",
          "",
          "---------------"
        ],
        "tensorflow/lite/c/common.h||tensorflow/lite/c/common.h": [
          "File: tensorflow/lite/c/common.h -> tensorflow/lite/c/common.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "81: typedef struct TfLiteIntArray {",
          "82:   int size;",
          "88:     (defined(__clang__) && __clang_major__ == 7 && __clang_minor__ == 1)",
          "89:   int data[0];",
          "90: #else",
          "91:   int data[];",
          "",
          "[Removed Lines]",
          "85: #if (!defined(__clang__) && defined(__GNUC__) && __GNUC__ == 6 && \\",
          "86:      __GNUC_MINOR__ >= 1) ||                                      \\",
          "87:     defined(HEXAGON) ||                                           \\",
          "",
          "[Added Lines]",
          "84: #if defined(_MSC_VER)",
          "86:   int data[1];",
          "87: #elif (!defined(__clang__) && defined(__GNUC__) && __GNUC__ == 6 && \\",
          "88:        __GNUC_MINOR__ >= 1) ||                                      \\",
          "89:     defined(HEXAGON) ||                                             \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "122: typedef struct TfLiteFloatArray {",
          "123:   int size;",
          "129:   float data[0];",
          "130: #else",
          "131:   float data[];",
          "",
          "[Removed Lines]",
          "127: #if !defined(__clang__) && defined(__GNUC__) && __GNUC__ == 6 && \\",
          "128:     __GNUC_MINOR__ >= 1",
          "",
          "[Added Lines]",
          "128: #if defined(_MSC_VER)",
          "130:   float data[1];",
          "131: #elif (!defined(__clang__) && defined(__GNUC__) && __GNUC__ == 6 && \\",
          "132:        __GNUC_MINOR__ >= 1) ||                                      \\",
          "133:     defined(HEXAGON) ||                                             \\",
          "134:     (defined(__clang__) && __clang_major__ == 7 && __clang_minor__ == 1)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7c8cc4ec69cd348e44ad6a2699057ca88faad3e5",
      "candidate_info": {
        "commit_hash": "7c8cc4ec69cd348e44ad6a2699057ca88faad3e5",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/7c8cc4ec69cd348e44ad6a2699057ca88faad3e5",
        "files": [
          "tensorflow/lite/c/common.c",
          "tensorflow/lite/kernels/embedding_lookup_sparse.cc"
        ],
        "message": "Fix a dangerous integer overflow and a malloc of negative size.\n\nPiperOrigin-RevId: 371254154\nChange-Id: I250a98a3df26328770167025670235a963a72da0",
        "before_after_code_files": [
          "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c",
          "tensorflow/lite/kernels/embedding_lookup_sparse.cc||tensorflow/lite/kernels/embedding_lookup_sparse.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c"
          ],
          "candidate": [
            "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c": [
          "File: tensorflow/lite/c/common.c -> tensorflow/lite/c/common.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: #ifndef TF_LITE_STATIC_MEMORY",
          "47: TfLiteIntArray* TfLiteIntArrayCreate(int size) {",
          "50:   ret->size = size;",
          "51:   return ret;",
          "52: }",
          "",
          "[Removed Lines]",
          "48:   TfLiteIntArray* ret =",
          "49:       (TfLiteIntArray*)malloc(TfLiteIntArrayGetSizeInBytes(size));",
          "",
          "[Added Lines]",
          "48:   int alloc_size = TfLiteIntArrayGetSizeInBytes(size);",
          "49:   if (alloc_size <= 0) return NULL;",
          "50:   TfLiteIntArray* ret = (TfLiteIntArray*)malloc(alloc_size);",
          "51:   if (!ret) return ret;",
          "",
          "---------------"
        ],
        "tensorflow/lite/kernels/embedding_lookup_sparse.cc||tensorflow/lite/kernels/embedding_lookup_sparse.cc": [
          "File: tensorflow/lite/kernels/embedding_lookup_sparse.cc -> tensorflow/lite/kernels/embedding_lookup_sparse.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "175:   TfLiteIntArray* output_shape = TfLiteIntArrayCreate(output_rank);",
          "176:   int k = 0;",
          "177:   int embedding_size = 1;",
          "178:   int lookup_size = 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "176:   TF_LITE_ENSURE(context, output_shape != nullptr);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "78988db304f9a1fef8cad02d564a4f05a05ac74c",
      "candidate_info": {
        "commit_hash": "78988db304f9a1fef8cad02d564a4f05a05ac74c",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/78988db304f9a1fef8cad02d564a4f05a05ac74c",
        "files": [
          "tensorflow/lite/c/common.c",
          "tensorflow/lite/c/common.h"
        ],
        "message": "[lite] Update TfLiteIntArrayCreate to return size_t\n\nPiperOrigin-RevId: 416439896\nChange-Id: I847f69b68d1ddaff4b1e925a09b8b69c1756653b",
        "before_after_code_files": [
          "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c",
          "tensorflow/lite/c/common.h||tensorflow/lite/c/common.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c",
            "tensorflow/lite/c/common.h||tensorflow/lite/c/common.h"
          ],
          "candidate": [
            "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c",
            "tensorflow/lite/c/common.h||tensorflow/lite/c/common.h"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c": [
          "File: tensorflow/lite/c/common.c -> tensorflow/lite/c/common.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: #include <string.h>",
          "22: #endif  // TF_LITE_STATIC_MEMORY",
          "25:   static TfLiteIntArray dummy;",
          "26:   return sizeof(dummy) + sizeof(dummy.data[0]) * size;",
          "27: }",
          "",
          "[Removed Lines]",
          "24: int TfLiteIntArrayGetSizeInBytes(int size) {",
          "",
          "[Added Lines]",
          "24: size_t TfLiteIntArrayGetSizeInBytes(int size) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45: #ifndef TF_LITE_STATIC_MEMORY",
          "47: TfLiteIntArray* TfLiteIntArrayCreate(int size) {",
          "49:   if (alloc_size <= 0) return NULL;",
          "50:   TfLiteIntArray* ret = (TfLiteIntArray*)malloc(alloc_size);",
          "51:   if (!ret) return ret;",
          "",
          "[Removed Lines]",
          "48:   int alloc_size = TfLiteIntArrayGetSizeInBytes(size);",
          "",
          "[Added Lines]",
          "48:   size_t alloc_size = TfLiteIntArrayGetSizeInBytes(size);",
          "",
          "---------------"
        ],
        "tensorflow/lite/c/common.h||tensorflow/lite/c/common.h": [
          "File: tensorflow/lite/c/common.h -> tensorflow/lite/c/common.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "99: #ifndef TF_LITE_STATIC_MEMORY",
          "",
          "[Removed Lines]",
          "97: int TfLiteIntArrayGetSizeInBytes(int size);",
          "",
          "[Added Lines]",
          "97: size_t TfLiteIntArrayGetSizeInBytes(int size);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "df9521ab172bd36e3e360d5fce6244c301c9e886",
      "candidate_info": {
        "commit_hash": "df9521ab172bd36e3e360d5fce6244c301c9e886",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/df9521ab172bd36e3e360d5fce6244c301c9e886",
        "files": [
          "tensorflow/lite/c/common.c",
          "tensorflow/lite/c/common.h"
        ],
        "message": "[lite] Update TfLiteIntArrayCreate to return size_t\n\nPiperOrigin-RevId: 416439896\nChange-Id: I847f69b68d1ddaff4b1e925a09b8b69c1756653b",
        "before_after_code_files": [
          "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c",
          "tensorflow/lite/c/common.h||tensorflow/lite/c/common.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c",
            "tensorflow/lite/c/common.h||tensorflow/lite/c/common.h"
          ],
          "candidate": [
            "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c",
            "tensorflow/lite/c/common.h||tensorflow/lite/c/common.h"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c": [
          "File: tensorflow/lite/c/common.c -> tensorflow/lite/c/common.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: #include <string.h>",
          "22: #endif  // TF_LITE_STATIC_MEMORY",
          "25:   static TfLiteIntArray dummy;",
          "26:   return sizeof(dummy) + sizeof(dummy.data[0]) * size;",
          "27: }",
          "",
          "[Removed Lines]",
          "24: int TfLiteIntArrayGetSizeInBytes(int size) {",
          "",
          "[Added Lines]",
          "24: size_t TfLiteIntArrayGetSizeInBytes(int size) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45: #ifndef TF_LITE_STATIC_MEMORY",
          "47: TfLiteIntArray* TfLiteIntArrayCreate(int size) {",
          "49:   if (alloc_size <= 0) return NULL;",
          "50:   TfLiteIntArray* ret = (TfLiteIntArray*)malloc(alloc_size);",
          "51:   if (!ret) return ret;",
          "",
          "[Removed Lines]",
          "48:   int alloc_size = TfLiteIntArrayGetSizeInBytes(size);",
          "",
          "[Added Lines]",
          "48:   size_t alloc_size = TfLiteIntArrayGetSizeInBytes(size);",
          "",
          "---------------"
        ],
        "tensorflow/lite/c/common.h||tensorflow/lite/c/common.h": [
          "File: tensorflow/lite/c/common.h -> tensorflow/lite/c/common.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "99: #ifndef TF_LITE_STATIC_MEMORY",
          "",
          "[Removed Lines]",
          "97: int TfLiteIntArrayGetSizeInBytes(int size);",
          "",
          "[Added Lines]",
          "97: size_t TfLiteIntArrayGetSizeInBytes(int size);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7de1d2a92f8434362eb628898ff8e646f3eb5d13",
      "candidate_info": {
        "commit_hash": "7de1d2a92f8434362eb628898ff8e646f3eb5d13",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/7de1d2a92f8434362eb628898ff8e646f3eb5d13",
        "files": [
          "tensorflow/lite/c/common.c",
          "tensorflow/lite/c/common.h"
        ],
        "message": "[lite] Update TfLiteIntArrayCreate to return size_t\n\nPiperOrigin-RevId: 416439896\nChange-Id: I847f69b68d1ddaff4b1e925a09b8b69c1756653b",
        "before_after_code_files": [
          "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c",
          "tensorflow/lite/c/common.h||tensorflow/lite/c/common.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c",
            "tensorflow/lite/c/common.h||tensorflow/lite/c/common.h"
          ],
          "candidate": [
            "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c",
            "tensorflow/lite/c/common.h||tensorflow/lite/c/common.h"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/c/common.c||tensorflow/lite/c/common.c": [
          "File: tensorflow/lite/c/common.c -> tensorflow/lite/c/common.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: #include <string.h>",
          "22: #endif  // TF_LITE_STATIC_MEMORY",
          "25:   static TfLiteIntArray dummy;",
          "26:   return sizeof(dummy) + sizeof(dummy.data[0]) * size;",
          "27: }",
          "",
          "[Removed Lines]",
          "24: int TfLiteIntArrayGetSizeInBytes(int size) {",
          "",
          "[Added Lines]",
          "24: size_t TfLiteIntArrayGetSizeInBytes(int size) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45: #ifndef TF_LITE_STATIC_MEMORY",
          "47: TfLiteIntArray* TfLiteIntArrayCreate(int size) {",
          "49:   if (alloc_size <= 0) return NULL;",
          "50:   TfLiteIntArray* ret = (TfLiteIntArray*)malloc(alloc_size);",
          "51:   if (!ret) return ret;",
          "",
          "[Removed Lines]",
          "48:   int alloc_size = TfLiteIntArrayGetSizeInBytes(size);",
          "",
          "[Added Lines]",
          "48:   size_t alloc_size = TfLiteIntArrayGetSizeInBytes(size);",
          "",
          "---------------"
        ],
        "tensorflow/lite/c/common.h||tensorflow/lite/c/common.h": [
          "File: tensorflow/lite/c/common.h -> tensorflow/lite/c/common.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "99: #ifndef TF_LITE_STATIC_MEMORY",
          "",
          "[Removed Lines]",
          "97: int TfLiteIntArrayGetSizeInBytes(int size);",
          "",
          "[Added Lines]",
          "97: size_t TfLiteIntArrayGetSizeInBytes(int size);",
          "",
          "---------------"
        ]
      }
    }
  ]
}