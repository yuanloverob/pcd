{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1e0ce5d1bdf364bf6eca821635e3ae8e65807667",
      "candidate_info": {
        "commit_hash": "1e0ce5d1bdf364bf6eca821635e3ae8e65807667",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/1e0ce5d1bdf364bf6eca821635e3ae8e65807667",
        "files": [
          "lib/child_process.js",
          "lib/cluster.js",
          "lib/fs.js",
          "lib/http.js",
          "lib/net.js",
          "lib/readline.js",
          "lib/repl.js",
          "lib/tls.js",
          "lib/zlib.js"
        ],
        "message": "domain: the EventEmitter constructor is now always called in nodecore",
        "before_after_code_files": [
          "lib/child_process.js||lichild_process.js",
          "lib/cluster.js||licluster.js",
          "lib/fs.js||lifs.js",
          "lib/http.js||lihttp.js",
          "lib/net.js||linet.js",
          "lib/readline.js||lireadline.js",
          "lib/repl.js||lirepl.js",
          "lib/tls.js||litls.js",
          "lib/zlib.js||lizlib.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/child_process.js||lichild_process.js": [
          "File: lib/child_process.js -> lichild_process.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "162: function SocketListSend(slave, key) {",
          "163:   var self = this;",
          "165:   this.key = key;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "203: function SocketListReceive(slave, key) {",
          "204:   var self = this;",
          "206:   this.key = key;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "634: function ChildProcess() {",
          "635:   var self = this;",
          "637:   this._closesNeeded = 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/cluster.js||licluster.js": [
          "File: lib/cluster.js -> licluster.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "41: }",
          "45: util.inherits(cluster, EventEmitter);",
          "46: var cluster = module.exports = new cluster();",
          "",
          "[Removed Lines]",
          "44: function cluster() {}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "255: function Worker(customEnv) {",
          "256:   if (!(this instanceof Worker)) return new Worker();",
          "258:   var self = this;",
          "259:   var env = process.env;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/fs.js||lifs.js": [
          "File: lib/fs.js -> lifs.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "813: function FSWatcher() {",
          "814:   var self = this;",
          "815:   var FSEvent = process.binding('fs_event_wrap').FSEvent;",
          "816:   this._handle = new FSEvent();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "871: function StatWatcher() {",
          "872:   var self = this;",
          "873:   this._handle = new binding.StatWatcher();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1566: function SyncWriteStream(fd) {",
          "1567:   this.fd = fd;",
          "1568:   this.writable = true;",
          "1569:   this.readable = false;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/http.js||lihttp.js": [
          "File: lib/http.js -> lihttp.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: var util = require('util');",
          "23: var net = require('net');",
          "25: var url = require('url');",
          "26: var EventEmitter = require('events').EventEmitter;",
          "27: var FreeList = require('freelist').FreeList;",
          "",
          "[Removed Lines]",
          "24: var stream = require('stream');",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "265: function IncomingMessage(socket) {",
          "269:   this.socket = socket;",
          "",
          "[Removed Lines]",
          "266:   stream.Stream.call(this);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "290:   this.statusCode = null;",
          "291:   this.client = this.socket;",
          "292: }",
          "296: exports.IncomingMessage = IncomingMessage;",
          "",
          "[Removed Lines]",
          "293: util.inherits(IncomingMessage, stream.Stream);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "431: function OutgoingMessage() {",
          "434:   this.output = [];",
          "435:   this.outputEncodings = [];",
          "",
          "[Removed Lines]",
          "432:   stream.Stream.call(this);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "448:   this.finished = false;",
          "449: }",
          "453: exports.OutgoingMessage = OutgoingMessage;",
          "",
          "[Removed Lines]",
          "450: util.inherits(OutgoingMessage, stream.Stream);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1024: function Agent(options) {",
          "1025:   var self = this;",
          "1026:   self.options = options || {};",
          "1027:   self.requests = {};",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1792: function Client(port, host) {",
          "1793:   if (!(this instanceof Client)) return new Client(port, host);",
          "1794:   host = host || 'localhost';",
          "1795:   port = port || 80;",
          "1796:   this.host = host;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/net.js||linet.js": [
          "File: lib/net.js -> linet.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: var events = require('events');",
          "24: var timers = require('timers');",
          "25: var util = require('util');",
          "26: var assert = require('assert');",
          "",
          "[Removed Lines]",
          "23: var stream = require('stream');",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "129: function Socket(options) {",
          "130:   if (!(this instanceof Socket)) return new Socket(options);",
          "134:   if (typeof options == 'number') {",
          "",
          "[Removed Lines]",
          "132:   stream.Stream.call(this);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "152:     this.allowHalfOpen = options && options.allowHalfOpen;",
          "153:   }",
          "154: }",
          "158: exports.Socket = Socket;",
          "",
          "[Removed Lines]",
          "155: util.inherits(Socket, stream.Stream);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/readline.js||lireadline.js": [
          "File: lib/readline.js -> lireadline.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:     return new Interface(input, output, completer, terminal);",
          "50:   }",
          "52:   if (arguments.length === 1) {",
          "54:     output = input.output;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "57:     input = input.input;",
          "58:   }",
          "62:   completer = completer || function() { return []; };",
          "64:   if (typeof completer !== 'function') {",
          "",
          "[Removed Lines]",
          "60:   EventEmitter.call(this);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/repl.js||lirepl.js": [
          "File: lib/repl.js -> lirepl.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: var util = require('util');",
          "44: var inherits = require('util').inherits;",
          "45: var vm = require('vm');",
          "46: var path = require('path');",
          "47: var fs = require('fs');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "79:     return new REPLServer(prompt, stream, eval, useGlobal, ignoreUndefined);",
          "80:   }",
          "82:   var options, input, output;",
          "83:   if (typeof prompt == 'object') {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "96:     options = {};",
          "97:   }",
          "101:   var self = this;",
          "103:   self.useGlobal = !!useGlobal;",
          "",
          "[Removed Lines]",
          "99:   EventEmitter.call(this);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "378: function ArrayStream() {",
          "379:   this.run = function(data) {",
          "380:     var self = this;",
          "381:     data.forEach(function(line) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "383:     });",
          "384:   }",
          "385: }",
          "387: ArrayStream.prototype.readable = true;",
          "388: ArrayStream.prototype.writable = true;",
          "389: ArrayStream.prototype.resume = function() {};",
          "",
          "[Removed Lines]",
          "386: util.inherits(ArrayStream, require('stream').Stream);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/tls.js||litls.js": [
          "File: lib/tls.js -> litls.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: var util = require('util');",
          "24: var net = require('net');",
          "25: var events = require('events');",
          "27: var END_OF_FILE = 42;",
          "28: var assert = require('assert').ok;",
          "29: var constants = require('constants');",
          "",
          "[Removed Lines]",
          "26: var stream = require('stream');",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "81: function CryptoStream(pair) {",
          "84:   this.pair = pair;",
          "",
          "[Removed Lines]",
          "82:   stream.Stream.call(this);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "91:   this._pendingCallbacks = [];",
          "92:   this._pendingBytes = 0;",
          "93: }",
          "97: CryptoStream.prototype.write = function(data /* , encoding, cb */) {",
          "",
          "[Removed Lines]",
          "94: util.inherits(CryptoStream, stream.Stream);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/zlib.js||lizlib.js": [
          "File: lib/zlib.js -> lizlib.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: var binding = process.binding('zlib');",
          "23: var util = require('util');",
          "25: var assert = require('assert').ok;",
          "",
          "[Removed Lines]",
          "24: var stream = require('stream');",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "217: function Zlib(opts, mode) {",
          "218:   this._opts = opts = opts || {};",
          "219:   this._queue = [];",
          "220:   this._processing = false;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "296:   var self = this;",
          "297: }",
          "301: Zlib.prototype.write = function write(chunk, cb) {",
          "302:   if (this._hadError) return true;",
          "",
          "[Removed Lines]",
          "299: util.inherits(Zlib, stream.Stream);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "85a86b5fd64ee4f5502552096dcc5f616158d7d6",
      "candidate_info": {
        "commit_hash": "85a86b5fd64ee4f5502552096dcc5f616158d7d6",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/85a86b5fd64ee4f5502552096dcc5f616158d7d6",
        "files": [
          "tools/wafadmin/Tools/node_addon.py"
        ],
        "message": "waf: predict target arch for OSX",
        "before_after_code_files": [
          "tools/wafadmin/Tools/node_addon.py||tools/wafadmin/Tools/node_addon.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/wafadmin/Tools/node_addon.py||tools/wafadmin/Tools/node_addon.py": [
          "File: tools/wafadmin/Tools/node_addon.py -> tools/wafadmin/Tools/node_addon.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import os",
          "3: from TaskGen import extension, taskgen, before, after, feature",
          "4: from Configure import conf, conftest",
          "",
          "[Removed Lines]",
          "2: import TaskGen, Utils, Utils, Runner, Options, Build",
          "",
          "[Added Lines]",
          "2: import TaskGen, Utils, Runner, Options, Build",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "26:   conf.env['PREFIX_NODE'] = get_prefix()",
          "27:   prefix = conf.env['PREFIX_NODE']",
          "28:   lib = join(prefix, 'lib')",
          "30:   conf.env['LIBPATH_NODE'] = lib",
          "31:   conf.env['CPPPATH_NODE'] = join(prefix, 'include', 'node')",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29:   nodebin = join(prefix, 'bin', 'node')",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "49:   found = os.path.exists(conf.env['NODE_PATH'])",
          "50:   conf.check_message('node path', '', found, conf.env['NODE_PATH'])",
          "53:   conf.check_message('node prefix', '', found, prefix)",
          "55:   ## On Cygwin we need to link to the generated symbol definitions",
          "56:   if Options.platform.startswith('cygwin'): conf.env['LIB_NODE'] = 'node'",
          "58:   ## On Mac OSX we need to use mac bundles",
          "61: def get_node_path():",
          "62:     join = os.path.join",
          "",
          "[Removed Lines]",
          "52:   found = os.path.exists(join(prefix, 'bin', 'node'))",
          "59:   if Options.platform == 'darwin': conf.check_tool('osx')",
          "",
          "[Added Lines]",
          "53:   found = os.path.exists(nodebin)",
          "60:   if Options.platform == 'darwin':",
          "61:     if 'i386' in Utils.cmd_output(['file', nodebin]):",
          "62:       conf.env.append_value('CPPFLAGS_NODE', ['-arch', 'i386'])",
          "63:       conf.env.append_value('CXXFLAGS_NODE', ['-arch', 'i386'])",
          "64:       conf.env.append_value('LINKFLAGS', ['-arch', 'i386'])",
          "65:       conf.env['DEST_CPU'] = 'i386'",
          "66:     conf.check_tool('osx')",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f03c3203a1acc048b413820ef4f792bc385413cd",
      "candidate_info": {
        "commit_hash": "f03c3203a1acc048b413820ef4f792bc385413cd",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/f03c3203a1acc048b413820ef4f792bc385413cd",
        "files": [
          "src/node.cc",
          "test/simple/test-cli-eval.js"
        ],
        "message": "cli: make -p equivalent to -pe\n\nFixes #3938.",
        "before_after_code_files": [
          "src/node.cc||src/node.cc",
          "test/simple/test-cli-eval.js||test/simple/test-cli-eval.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.cc||src/node.cc": [
          "File: src/node.cc -> src/node.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2384:     } else if (strcmp(arg, \"--help\") == 0 || strcmp(arg, \"-h\") == 0) {",
          "2385:       PrintHelp();",
          "2386:       exit(0);",
          "2389:       if (argc <= i + 1) {",
          "2391:         exit(1);",
          "2392:       }",
          "2396:       argv[i] = const_cast<char*>(\"\");",
          "2397:       eval_string = argv[++i];",
          "2401:     } else if (strcmp(arg, \"--interactive\") == 0 || strcmp(arg, \"-i\") == 0) {",
          "2402:       force_repl = true;",
          "2403:       argv[i] = const_cast<char*>(\"\");",
          "",
          "[Removed Lines]",
          "2387:     } else if (strcmp(arg, \"--eval\") == 0 || strcmp(arg, \"-e\") == 0 ||",
          "2388:         strcmp(arg, \"-pe\") == 0) {",
          "2390:         fprintf(stderr, \"Error: --eval requires an argument\\n\");",
          "2393:       if (arg[1] == 'p') {",
          "2394:         print_eval = true;",
          "2395:       }",
          "2398:     } else if (strcmp(arg, \"--print\") == 0 || strcmp(arg, \"-p\") == 0) {",
          "2399:       print_eval = true;",
          "2400:       argv[i] = const_cast<char*>(\"\");",
          "",
          "[Added Lines]",
          "2387:     } else if (strcmp(arg, \"--eval\") == 0   ||",
          "2388:                strcmp(arg, \"-e\") == 0       ||",
          "2389:                strcmp(arg, \"--print\") == 0  ||",
          "2390:                strcmp(arg, \"-pe\") == 0      ||",
          "2391:                strcmp(arg, \"-p\") == 0) {",
          "2393:         fprintf(stderr, \"Error: %s requires an argument\\n\", arg);",
          "2396:       print_eval = print_eval || strchr(arg, 'p') != NULL;",
          "",
          "---------------"
        ],
        "test/simple/test-cli-eval.js||test/simple/test-cli-eval.js": [
          "File: test/simple/test-cli-eval.js -> test/simple/test-cli-eval.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "48:     });",
          "52:   var cmd = nodejs + ' ' + s + ' ';",
          "54:   child.exec(cmd + '42',",
          "",
          "[Removed Lines]",
          "51: ['--print --eval', '-p -e', '-pe'].forEach(function(s) {",
          "",
          "[Added Lines]",
          "51: '--print -pe -p'.split(' ').forEach(function(s) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "073c7b4d083384cde62bcc4009f34888f44c793e",
      "candidate_info": {
        "commit_hash": "073c7b4d083384cde62bcc4009f34888f44c793e",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/073c7b4d083384cde62bcc4009f34888f44c793e",
        "files": [
          "src/node_version.h"
        ],
        "message": "Now working on 0.8.8",
        "before_after_code_files": [
          "src/node_version.h||src/node_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_version.h||src/node_version.h": [
          "File: src/node_version.h -> src/node_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: #define NODE_MAJOR_VERSION 0",
          "26: #define NODE_MINOR_VERSION 8",
          "30: #ifndef NODE_STRINGIFY",
          "31: #define NODE_STRINGIFY(n) NODE_STRINGIFY_HELPER(n)",
          "",
          "[Removed Lines]",
          "27: #define NODE_PATCH_VERSION 7",
          "28: #define NODE_VERSION_IS_RELEASE 1",
          "",
          "[Added Lines]",
          "27: #define NODE_PATCH_VERSION 8",
          "28: #define NODE_VERSION_IS_RELEASE 0",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "228ddddc1cee6876e951a5365b3d3de2a00ef9ef",
      "candidate_info": {
        "commit_hash": "228ddddc1cee6876e951a5365b3d3de2a00ef9ef",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/228ddddc1cee6876e951a5365b3d3de2a00ef9ef",
        "files": [
          "lib/repl.js"
        ],
        "message": "repl: ensure that 'repl.ignoreUndefined' is a boolean",
        "before_after_code_files": [
          "lib/repl.js||lirepl.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/repl.js||lirepl.js": [
          "File: lib/repl.js -> lirepl.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "102:   var self = this;",
          "104:   self.useGlobal = !!useGlobal;",
          "106:   self.eval = eval || function(code, context, file, cb) {",
          "107:     var err, result;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "290:       self.bufferedCommand = '';",
          "294:         self.context._ = ret;",
          "295:         self.outputStream.write(exports.writer(ret) + '\\n');",
          "296:       }",
          "",
          "[Removed Lines]",
          "293:       if (!e && (!ignoreUndefined || ret !== undefined)) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}