{
  "cve_id": "CVE-2018-7326",
  "cve_desc": "In Wireshark 2.4.0 to 2.4.4 and 2.2.0 to 2.2.12, epan/dissectors/packet-lltd.c had an infinite loop that was addressed by using a correct integer data type.",
  "repo": "wireshark/wireshark",
  "patch_hash": "8760999f646fb398fa0c824f3539cee4a4911d13",
  "patch_info": {
    "commit_hash": "8760999f646fb398fa0c824f3539cee4a4911d13",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/8760999f646fb398fa0c824f3539cee4a4911d13",
    "files": [
      "epan/dissectors/packet-lltd.c"
    ],
    "message": "LLTD: use wider variables to prevent overflow and infinite loops\n\nBug: 14419\nChange-Id: I1adf186a56e87a043077d330d59f18b8e5823cd7\nReviewed-on: https://code.wireshark.org/review/25871\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot\nReviewed-by: Michael Mann <mmann78@netscape.net>",
    "before_after_code_files": [
      "epan/dissectors/packet-lltd.c||epan/dissectors/packet-lltd.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-lltd.c||epan/dissectors/packet-lltd.c": [
      "File: epan/dissectors/packet-lltd.c -> epan/dissectors/packet-lltd.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "310: static int",
      "311: dissect_lltd_tlv(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree, guint32 offset, gboolean* end)",
      "312: {",
      "314:     proto_item *tlv_item, *type_item;",
      "315:     proto_tree *tlv_tree, *type_tree;",
      "318:     type = tvb_get_guint8(tvb, offset);",
      "319:     if (type == 0)",
      "",
      "[Removed Lines]",
      "313:     guint8     i, type, length = 0;",
      "316:     guint32 temp32;",
      "",
      "[Added Lines]",
      "313:     guint8     type, length = 0;",
      "316:     guint32 i, temp32;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "293b999425e998d6cde0d9149648e421ea7687d0",
      "candidate_info": {
        "commit_hash": "293b999425e998d6cde0d9149648e421ea7687d0",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/293b999425e998d6cde0d9149648e421ea7687d0",
        "files": [
          "epan/dissectors/packet-lltd.c"
        ],
        "message": "LLTD: use wider variables to prevent overflow and infinite loops\n\nBug: 14419\nChange-Id: I1adf186a56e87a043077d330d59f18b8e5823cd7\nReviewed-on: https://code.wireshark.org/review/25871\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot\nReviewed-by: Michael Mann <mmann78@netscape.net>\n(cherry picked from commit 8760999f646fb398fa0c824f3539cee4a4911d13)\nReviewed-on: https://code.wireshark.org/review/25878",
        "before_after_code_files": [
          "epan/dissectors/packet-lltd.c||epan/dissectors/packet-lltd.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-lltd.c||epan/dissectors/packet-lltd.c"
          ],
          "candidate": [
            "epan/dissectors/packet-lltd.c||epan/dissectors/packet-lltd.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-lltd.c||epan/dissectors/packet-lltd.c": [
          "File: epan/dissectors/packet-lltd.c -> epan/dissectors/packet-lltd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "322: static int",
          "323: dissect_lltd_tlv(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree, guint32 offset, gboolean* end)",
          "324: {",
          "326:     proto_item *tlv_item, *type_item;",
          "327:     proto_tree *tlv_tree, *type_tree;",
          "330:     type = tvb_get_guint8(tvb, offset);",
          "331:     if (type == 0)",
          "",
          "[Removed Lines]",
          "325:     guint8     i, type, length = 0;",
          "328:     guint32 temp32;",
          "",
          "[Added Lines]",
          "325:     guint8     type, length = 0;",
          "328:     guint32 i, temp32;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a742125d4d13530d1d68d42c7ccafdf88656fdf2",
      "candidate_info": {
        "commit_hash": "a742125d4d13530d1d68d42c7ccafdf88656fdf2",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/a742125d4d13530d1d68d42c7ccafdf88656fdf2",
        "files": [
          "epan/dissectors/packet-lltd.c"
        ],
        "message": "LLTD: use wider variables to prevent overflow and infinite loops\n\nBug: 14419\nChange-Id: I1adf186a56e87a043077d330d59f18b8e5823cd7\nReviewed-on: https://code.wireshark.org/review/25871\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot\nReviewed-by: Michael Mann <mmann78@netscape.net>\n(cherry picked from commit 8760999f646fb398fa0c824f3539cee4a4911d13)\nReviewed-on: https://code.wireshark.org/review/25879",
        "before_after_code_files": [
          "epan/dissectors/packet-lltd.c||epan/dissectors/packet-lltd.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-lltd.c||epan/dissectors/packet-lltd.c"
          ],
          "candidate": [
            "epan/dissectors/packet-lltd.c||epan/dissectors/packet-lltd.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-lltd.c||epan/dissectors/packet-lltd.c": [
          "File: epan/dissectors/packet-lltd.c -> epan/dissectors/packet-lltd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "322: static int",
          "323: dissect_lltd_tlv(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree, guint32 offset, gboolean* end)",
          "324: {",
          "326:     proto_item *tlv_item, *type_item;",
          "327:     proto_tree *tlv_tree, *type_tree;",
          "330:     type = tvb_get_guint8(tvb, offset);",
          "331:     if (type == 0)",
          "",
          "[Removed Lines]",
          "325:     guint8     i, type, length = 0;",
          "328:     guint32 temp32;",
          "",
          "[Added Lines]",
          "325:     guint8     type, length = 0;",
          "328:     guint32 i, temp32;",
          "",
          "---------------"
        ]
      }
    }
  ]
}