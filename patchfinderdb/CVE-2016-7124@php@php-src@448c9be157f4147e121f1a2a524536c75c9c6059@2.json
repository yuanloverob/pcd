{
  "cve_id": "CVE-2016-7124",
  "cve_desc": "ext/standard/var_unserializer.c in PHP before 5.6.25 and 7.x before 7.0.10 mishandles certain invalid objects, which allows remote attackers to cause a denial of service or possibly have unspecified other impact via crafted serialized data that leads to a (1) __destruct call or (2) magic method call.",
  "repo": "php/php-src",
  "patch_hash": "448c9be157f4147e121f1a2a524536c75c9c6059",
  "patch_info": {
    "commit_hash": "448c9be157f4147e121f1a2a524536c75c9c6059",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/448c9be157f4147e121f1a2a524536c75c9c6059",
    "files": [
      "ext/standard/tests/strings/bug72663.phpt",
      "ext/standard/tests/strings/bug72663_2.phpt",
      "ext/standard/var_unserializer.c",
      "ext/standard/var_unserializer.re"
    ],
    "message": "Fix bug #72663 - destroy broken object when unserializing",
    "before_after_code_files": [
      "ext/standard/tests/strings/bug72663.phpt||ext/standard/tests/strings/bug72663.phpt",
      "ext/standard/tests/strings/bug72663_2.phpt||ext/standard/tests/strings/bug72663_2.phpt",
      "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
      "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
    ]
  },
  "patch_diff": {
    "ext/standard/tests/strings/bug72663.phpt||ext/standard/tests/strings/bug72663.phpt": [
      "File: ext/standard/tests/strings/bug72663.phpt -> ext/standard/tests/strings/bug72663.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: --TEST--",
      "2: Bug #72663: Create an Unexpected Object and Don't Invoke __wakeup() in Deserialization",
      "3: --FILE--",
      "4: <?php",
      "5: class obj implements Serializable {",
      "6:     var $data;",
      "7:     function serialize() {",
      "8:         return serialize($this->data);",
      "9:     }",
      "10:     function unserialize($data) {",
      "11:         $this->data = unserialize($data);",
      "12:     }",
      "13: }",
      "15: $inner = 'a:1:{i:0;O:9:\"Exception\":2:{s:7:\"'.\"\\0\".'*'.\"\\0\".'file\";R:4;}';",
      "16: $exploit = 'a:2:{i:0;C:3:\"obj\":'.strlen($inner).':{'.$inner.'}i:1;R:4;}';",
      "18: $data = unserialize($exploit);",
      "19: echo $data[1];",
      "20: ?>",
      "21: DONE",
      "22: --EXPECTF--",
      "23: Notice: unserialize(): Unexpected end of serialized data in %sbug72663.php on line %d",
      "25: Notice: unserialize(): Error at offset 46 of 47 bytes in %sbug72663.php on line %d",
      "26: DONE",
      "",
      "---------------"
    ],
    "ext/standard/tests/strings/bug72663_2.phpt||ext/standard/tests/strings/bug72663_2.phpt": [
      "File: ext/standard/tests/strings/bug72663_2.phpt -> ext/standard/tests/strings/bug72663_2.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: --TEST--",
      "2: Bug #72663: Create an Unexpected Object and Don't Invoke __wakeup() in Deserialization",
      "3: --FILE--",
      "4: <?php",
      "6: ini_set('session.serialize_handler', 'php_serialize');",
      "7: session_start();",
      "8: $sess = 'O:9:\"Exception\":2:{s:7:\"'.\"\\0\".'*'.\"\\0\".'file\";R:1;}';",
      "9: session_decode($sess);",
      "10: var_dump($_SESSION);",
      "11: ?>",
      "12: DONE",
      "13: --EXPECTF--",
      "14: Notice: session_decode(): Unexpected end of serialized data in %sbug72663_2.php on line %d",
      "15: array(0) {",
      "16: }",
      "17: DONE",
      "",
      "---------------"
    ],
    "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
      "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "434:  }",
      "436:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_OBJPROP_PP(rval), elements, 1)) {",
      "437:   return 0;",
      "438:  }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "438:      zend_hash_clean(Z_OBJPROP_PP(rval));",
      "439:      ZVAL_NULL(*rval);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "486: {",
      "487:  YYCTYPE yych;",
      "488:  static const unsigned char yybm[] = {",
      "",
      "[Removed Lines]",
      "485: #line 486 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "488: #line 489 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "542:  yych = *(YYMARKER = ++YYCURSOR);",
      "543:  if (yych == ':') goto yy95;",
      "544: yy3:",
      "546:  { return 0; }",
      "548: yy4:",
      "549:  yych = *(YYMARKER = ++YYCURSOR);",
      "550:  if (yych == ':') goto yy89;",
      "",
      "[Removed Lines]",
      "545: #line 851 \"ext/standard/var_unserializer.re\"",
      "547: #line 548 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "548: #line 854 \"ext/standard/var_unserializer.re\"",
      "550: #line 551 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "587:  goto yy3;",
      "588: yy14:",
      "589:  ++YYCURSOR;",
      "591:  {",
      "593:  php_error_docref(NULL TSRMLS_CC, E_NOTICE, \"Unexpected end of serialized data\");",
      "595: }",
      "597: yy16:",
      "598:  yych = *++YYCURSOR;",
      "599:  goto yy3;",
      "",
      "[Removed Lines]",
      "590: #line 845 \"ext/standard/var_unserializer.re\"",
      "596: #line 597 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "593: #line 848 \"ext/standard/var_unserializer.re\"",
      "599: #line 600 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "619:  if (yybm[0+yych] & 128) {",
      "620:   goto yy20;",
      "621:  }",
      "623:  yych = *++YYCURSOR;",
      "624:  if (yych != '\"') goto yy18;",
      "625:  ++YYCURSOR;",
      "627:  {",
      "628:  size_t len, len2, len3, maxlen;",
      "629:  long elements;",
      "",
      "[Removed Lines]",
      "622:  if (yych != ':') goto yy18;",
      "626: #line 698 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "625:  if (yych <= '/') goto yy18;",
      "626:  if (yych >= ';') goto yy18;",
      "630: #line 701 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "771:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
      "772: }",
      "774: yy25:",
      "775:  yych = *++YYCURSOR;",
      "776:  if (yych <= ',') {",
      "",
      "[Removed Lines]",
      "773: #line 774 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "777: #line 778 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "795:  yych = *++YYCURSOR;",
      "796:  if (yych != '\"') goto yy18;",
      "797:  ++YYCURSOR;",
      "799:  {",
      "800:     if (!var_hash) return 0;",
      "",
      "[Removed Lines]",
      "798: #line 689 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "802: #line 692 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "804:  return object_common2(UNSERIALIZE_PASSTHRU,",
      "805:    object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR));",
      "806: }",
      "808: yy32:",
      "809:  yych = *++YYCURSOR;",
      "810:  if (yych == '+') goto yy33;",
      "",
      "[Removed Lines]",
      "807: #line 808 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "811: #line 812 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "825:  yych = *++YYCURSOR;",
      "826:  if (yych != '{') goto yy18;",
      "827:  ++YYCURSOR;",
      "829:  {",
      "830:  long elements = parse_iv(start + 2);",
      "",
      "[Removed Lines]",
      "828: #line 668 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "832: #line 671 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "847:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
      "848: }",
      "850: yy39:",
      "851:  yych = *++YYCURSOR;",
      "852:  if (yych == '+') goto yy40;",
      "",
      "[Removed Lines]",
      "849: #line 850 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "853: #line 854 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "867:  yych = *++YYCURSOR;",
      "868:  if (yych != '\"') goto yy18;",
      "869:  ++YYCURSOR;",
      "871:  {",
      "872:  size_t len, maxlen;",
      "873:  char *str;",
      "",
      "[Removed Lines]",
      "870: #line 633 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "874: #line 636 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "902:  ZVAL_STRINGL(*rval, str, len, 0);",
      "903:  return 1;",
      "904: }",
      "906: yy46:",
      "907:  yych = *++YYCURSOR;",
      "908:  if (yych == '+') goto yy47;",
      "",
      "[Removed Lines]",
      "905: #line 906 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "909: #line 910 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "923:  yych = *++YYCURSOR;",
      "924:  if (yych != '\"') goto yy18;",
      "925:  ++YYCURSOR;",
      "927:  {",
      "928:  size_t len, maxlen;",
      "929:  char *str;",
      "",
      "[Removed Lines]",
      "926: #line 600 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "930: #line 603 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "956:  ZVAL_STRINGL(*rval, str, len, 1);",
      "957:  return 1;",
      "958: }",
      "960: yy53:",
      "961:  yych = *++YYCURSOR;",
      "962:  if (yych <= '/') {",
      "",
      "[Removed Lines]",
      "959: #line 960 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "963: #line 964 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "1044:  }",
      "1045: yy63:",
      "1046:  ++YYCURSOR;",
      "1048:  {",
      "1049: #if SIZEOF_LONG == 4",
      "1050: use_double:",
      "",
      "[Removed Lines]",
      "1047: #line 590 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "1051: #line 593 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "1054:  ZVAL_DOUBLE(*rval, zend_strtod((const char *)start + 2, NULL));",
      "1055:  return 1;",
      "1056: }",
      "1058: yy65:",
      "1059:  yych = *++YYCURSOR;",
      "1060:  if (yych <= ',') {",
      "",
      "[Removed Lines]",
      "1057: #line 1058 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "1061: #line 1062 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "1113:  yych = *++YYCURSOR;",
      "1114:  if (yych != ';') goto yy18;",
      "1115:  ++YYCURSOR;",
      "1117:  {",
      "1119:  INIT_PZVAL(*rval);",
      "",
      "[Removed Lines]",
      "1116: #line 575 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "1120: #line 578 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "1129:  return 1;",
      "1130: }",
      "1132: yy76:",
      "1133:  yych = *++YYCURSOR;",
      "1134:  if (yych == 'N') goto yy73;",
      "",
      "[Removed Lines]",
      "1131: #line 1132 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "1135: #line 1136 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "1155:  if (yych <= '9') goto yy79;",
      "1156:  if (yych != ';') goto yy18;",
      "1157:  ++YYCURSOR;",
      "1159:  {",
      "1160: #if SIZEOF_LONG == 4",
      "1161:  int digits = YYCURSOR - start - 3;",
      "",
      "[Removed Lines]",
      "1158: #line 548 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "1162: #line 551 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "1182:  ZVAL_LONG(*rval, parse_iv(start + 2));",
      "1183:  return 1;",
      "1184: }",
      "1186: yy83:",
      "1187:  yych = *++YYCURSOR;",
      "1188:  if (yych <= '/') goto yy18;",
      "",
      "[Removed Lines]",
      "1185: #line 1186 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "1189: #line 1190 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "1190:  yych = *++YYCURSOR;",
      "1191:  if (yych != ';') goto yy18;",
      "1192:  ++YYCURSOR;",
      "1194:  {",
      "1196:  INIT_PZVAL(*rval);",
      "1197:  ZVAL_BOOL(*rval, parse_iv(start + 2));",
      "1198:  return 1;",
      "1199: }",
      "1201: yy87:",
      "1202:  ++YYCURSOR;",
      "1204:  {",
      "1206:  INIT_PZVAL(*rval);",
      "1207:  ZVAL_NULL(*rval);",
      "1208:  return 1;",
      "1209: }",
      "1211: yy89:",
      "1212:  yych = *++YYCURSOR;",
      "1213:  if (yych <= ',') {",
      "",
      "[Removed Lines]",
      "1193: #line 541 \"ext/standard/var_unserializer.re\"",
      "1200: #line 1201 \"ext/standard/var_unserializer.c\"",
      "1203: #line 534 \"ext/standard/var_unserializer.re\"",
      "1210: #line 1211 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "1197: #line 544 \"ext/standard/var_unserializer.re\"",
      "1204: #line 1205 \"ext/standard/var_unserializer.c\"",
      "1207: #line 537 \"ext/standard/var_unserializer.re\"",
      "1214: #line 1215 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "1230:  if (yych <= '9') goto yy91;",
      "1231:  if (yych != ';') goto yy18;",
      "1232:  ++YYCURSOR;",
      "1234:  {",
      "1235:  long id;",
      "",
      "[Removed Lines]",
      "1233: #line 511 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "1237: #line 514 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "1254:  return 1;",
      "1255: }",
      "1257: yy95:",
      "1258:  yych = *++YYCURSOR;",
      "1259:  if (yych <= ',') {",
      "",
      "[Removed Lines]",
      "1256: #line 1257 \"ext/standard/var_unserializer.c\"",
      "",
      "[Added Lines]",
      "1260: #line 1261 \"ext/standard/var_unserializer.c\"",
      "",
      "---------------",
      "--- Hunk 24 ---",
      "[Context before]",
      "1276:  if (yych <= '9') goto yy97;",
      "1277:  if (yych != ';') goto yy18;",
      "1278:  ++YYCURSOR;",
      "1280:  {",
      "1281:  long id;",
      "",
      "[Removed Lines]",
      "1279: #line 490 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "1283: #line 493 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------",
      "--- Hunk 25 ---",
      "[Context before]",
      "1298:  return 1;",
      "1299: }",
      "1301: }",
      "1305:  return 0;",
      "",
      "[Removed Lines]",
      "1300: #line 1301 \"ext/standard/var_unserializer.c\"",
      "1302: #line 853 \"ext/standard/var_unserializer.re\"",
      "",
      "[Added Lines]",
      "1304: #line 1305 \"ext/standard/var_unserializer.c\"",
      "1306: #line 856 \"ext/standard/var_unserializer.re\"",
      "",
      "---------------"
    ],
    "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
      "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
      "--- Hunk 1 ---",
      "[Context before]",
      "438:  }",
      "440:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_OBJPROP_PP(rval), elements, 1)) {",
      "441:   return 0;",
      "442:  }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "442:      zend_hash_clean(Z_OBJPROP_PP(rval));",
      "443:      ZVAL_NULL(*rval);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6bfedfd22eb8521cd0f38ab45fca3c877ee724ca",
      "candidate_info": {
        "commit_hash": "6bfedfd22eb8521cd0f38ab45fca3c877ee724ca",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/6bfedfd22eb8521cd0f38ab45fca3c877ee724ca",
        "files": [
          "ext/session/php_session.h",
          "ext/session/session.c",
          "ext/spl/spl_observer.c",
          "ext/standard/php_var.h",
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re"
        ],
        "message": "Fixed unserialize()",
        "before_after_code_files": [
          "ext/session/php_session.h||ext/session/php_session.h",
          "ext/session/session.c||ext/session/session.c",
          "ext/spl/spl_observer.c||ext/spl/spl_observer.c",
          "ext/standard/php_var.h||ext/standard/php_var.h",
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ],
          "candidate": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ]
        }
      },
      "candidate_diff": {
        "ext/session/php_session.h||ext/session/php_session.h": [
          "File: ext/session/php_session.h -> ext/session/php_session.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "221: PHPAPI void session_adapt_url(const char *, size_t, char **, size_t * TSRMLS_DC);",
          "223: PHPAPI void php_add_session_var(zend_string *name TSRMLS_DC);",
          "225: PHPAPI zval *php_get_session_var(zend_string *name TSRMLS_DC);",
          "227: PHPAPI int php_session_register_module(ps_module *);",
          "",
          "[Removed Lines]",
          "224: PHPAPI void php_set_session_var(zend_string *name, zval *state_val, php_unserialize_data_t *var_hash TSRMLS_DC);",
          "",
          "[Added Lines]",
          "224: PHPAPI zval *php_set_session_var(zend_string *name, zval *state_val, php_unserialize_data_t *var_hash TSRMLS_DC);",
          "",
          "---------------"
        ],
        "ext/session/session.c||ext/session/session.c": [
          "File: ext/session/session.c -> ext/session/session.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "159: }",
          "163: {",
          "164:  IF_SESSION_VARS() {",
          "166:  }",
          "167: }",
          "",
          "[Removed Lines]",
          "165:   zend_set_hash_symbol(state_val, name->val, name->len, Z_ISREF_P(state_val), 1, Z_ARRVAL_P(Z_REFVAL(PS(http_session_vars))));",
          "",
          "[Added Lines]",
          "165:   return zend_hash_update(Z_ARRVAL_P(Z_REFVAL(PS(http_session_vars))), name, state_val);",
          "167:  return NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "924:   }",
          "926:   if (has_value) {",
          "928:    if (php_var_unserialize(&current, (const unsigned char **) &p, (const unsigned char *) endptr, &var_hash TSRMLS_CC)) {",
          "930:    }",
          "932:   }",
          "933:   PS_ADD_VARL(name);",
          "934:   STR_RELEASE(name);",
          "",
          "[Removed Lines]",
          "927:    ZVAL_NULL(&current);",
          "929:     php_set_session_var(name, &current, &var_hash  TSRMLS_CC);",
          "931:    zval_ptr_dtor(&current);",
          "",
          "[Added Lines]",
          "928:    ZVAL_UNDEF(&current);",
          "930:     zval *zv = php_set_session_var(name, &current, &var_hash  TSRMLS_CC);",
          "931:     var_replace(&var_hash, &current, zv);",
          "932:    } else {",
          "933:     zval_ptr_dtor(&current);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "978: {",
          "979:  const char *p, *q;",
          "980:  const char *endptr = val + vallen;",
          "982:  int has_value;",
          "983:  int namelen;",
          "984:  zend_string *name;",
          "",
          "[Removed Lines]",
          "981:  zval stack, *current = NULL;",
          "",
          "[Added Lines]",
          "984:  zval current;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "989:  p = val;",
          "992:  while (p < endptr) {",
          "993:   zval *tmp;",
          "994:   q = p;",
          "",
          "[Removed Lines]",
          "991:  array_init(&stack);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1013:   }",
          "1015:   if (has_value) {",
          "1022:    }",
          "1023:   }",
          "1024:   PS_ADD_VARL(name);",
          "",
          "[Removed Lines]",
          "1016:    zval dummy;",
          "1017:    ZVAL_NULL(&dummy);",
          "1019:    current = zend_hash_next_index_insert(Z_ARRVAL(stack), &dummy);",
          "1020:    if (php_var_unserialize(current, (const unsigned char **) &q, (const unsigned char *) endptr, &var_hash TSRMLS_CC)) {",
          "1021:     php_set_session_var(name, current, &var_hash TSRMLS_CC);",
          "",
          "[Added Lines]",
          "1018:    ZVAL_UNDEF(&current);",
          "1019:    if (php_var_unserialize(&current, (const unsigned char **) &q, (const unsigned char *) endptr, &var_hash TSRMLS_CC)) {",
          "1020:     zval *zv = php_set_session_var(name, &current, &var_hash TSRMLS_CC);",
          "1021:     var_replace(&var_hash, &current, zv);",
          "1022:    } else {",
          "1023:     zval_ptr_dtor(&current);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1030: break_outer_loop:",
          "1032:  PHP_VAR_UNSERIALIZE_DESTROY(var_hash);",
          "1035:  return SUCCESS;",
          "1036: }",
          "",
          "[Removed Lines]",
          "1033:  zval_ptr_dtor(&stack);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "ext/spl/spl_observer.c||ext/spl/spl_observer.c": [
          "File: ext/spl/spl_observer.c -> ext/spl/spl_observer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "213:    ZVAL_NULL(&pelement->inf);",
          "214:   }",
          "215:   spl_object_storage_free_hash(intern, hash);",
          "217:  }",
          "219:  ZVAL_COPY(&element.obj, obj);",
          "",
          "[Removed Lines]",
          "216:   return;",
          "",
          "[Added Lines]",
          "216:   return pelement;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "222:  } else {",
          "223:   ZVAL_NULL(&element.inf);",
          "224:  }",
          "226:  spl_object_storage_free_hash(intern, hash);",
          "",
          "[Removed Lines]",
          "225:  zend_hash_update_mem(&intern->storage, hash, &element, sizeof(spl_SplObjectStorageElement));",
          "",
          "[Added Lines]",
          "225:  pelement = zend_hash_update_mem(&intern->storage, hash, &element, sizeof(spl_SplObjectStorageElement));",
          "227:  return pelement;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "796:  const unsigned char *p, *s;",
          "797:  php_unserialize_data_t var_hash;",
          "798:  zval entry, pmembers, pcount, inf;",
          "799:  long count;",
          "801:  if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, \"s\", &buf, &buf_len) == FAILURE) {",
          "802:   return;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "800:  spl_SplObjectStorageElement *element;",
          "802:  HashPosition pos;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "869:     var_push_dtor(&var_hash, &pelement->obj);",
          "870:    }",
          "871:   }",
          "873:   zval_ptr_dtor(&entry);",
          "874:   zval_ptr_dtor(&inf);",
          "875:  }",
          "",
          "[Removed Lines]",
          "872:   spl_object_storage_attach(intern, getThis(), &entry, &inf TSRMLS_CC);",
          "",
          "[Added Lines]",
          "876:   element = spl_object_storage_attach(intern, getThis(), &entry, &inf TSRMLS_CC);",
          "877:   var_replace(&var_hash, &entry, &element->obj);",
          "878:   var_replace(&var_hash, &inf, &element->inf);",
          "",
          "---------------"
        ],
        "ext/standard/php_var.h||ext/standard/php_var.h": [
          "File: ext/standard/php_var.h -> ext/standard/php_var.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "52: PHPAPI void php_var_serialize(smart_str *buf, zval *struc, php_serialize_data_t *var_hash TSRMLS_DC);",
          "53: PHPAPI int php_var_unserialize(zval *rval, const unsigned char **p, const unsigned char *max, php_unserialize_data_t *var_hash TSRMLS_DC);",
          "54: PHPAPI int php_var_unserialize_intern(zval *rval, const unsigned char **p, const unsigned char *max, php_unserialize_data_t *var_hash TSRMLS_DC);",
          "56: #define PHP_VAR_SERIALIZE_INIT(var_hash_ptr) \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "54: PHPAPI int php_var_unserialize_ref(zval *rval, const unsigned char **p, const unsigned char *max, php_unserialize_data_t *var_hash TSRMLS_DC);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "114:  } \\",
          "115: } while (0)",
          "117: PHPAPI void var_push_dtor(php_unserialize_data_t *var_hash, zval *val);",
          "118: PHPAPI void var_push_dtor_no_addref(php_unserialize_data_t *var_hashx, zval *rval);",
          "119: PHPAPI void var_destroy(php_unserialize_data_t *var_hash);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "118: PHPAPI void var_replace(php_unserialize_data_t *var_hash, zval *ozval, zval *nzval);",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:  void *next;",
          "35: } var_entries;",
          "37: static inline void var_push(php_unserialize_data_t *var_hashx, zval *rval)",
          "38: {",
          "39:  var_entries *var_hash = (*var_hashx)->last;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37: typedef struct {",
          "38:  zval data[VAR_ENTRIES_MAX];",
          "39:  long used_slots;",
          "40:  void *next;",
          "41: } var_dtor_entries;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "61: PHPAPI void var_push_dtor(php_unserialize_data_t *var_hashx, zval *rval)",
          "62: {",
          "64: #if VAR_ENTRIES_DBG",
          "65:  fprintf(stderr, \"var_push_dtor(%ld): %d\\n\", var_hash?var_hash->used_slots:-1L, Z_TYPE_PP(rval));",
          "66: #endif",
          "68:  if (!var_hash || var_hash->used_slots == VAR_ENTRIES_MAX) {",
          "70:   var_hash->used_slots = 0;",
          "71:   var_hash->next = 0;",
          "",
          "[Removed Lines]",
          "63:  var_entries *var_hash = (*var_hashx)->last_dtor;",
          "69:   var_hash = emalloc(sizeof(var_entries));",
          "",
          "[Added Lines]",
          "69:  var_dtor_entries *var_hash = (*var_hashx)->last_dtor;",
          "75:   var_hash = emalloc(sizeof(var_dtor_entries));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "79:   (*var_hashx)->last_dtor = var_hash;",
          "80:  }",
          "84: }",
          "87: #if 0",
          "88: PHPAPI void var_push_dtor_no_addref(php_unserialize_data_t *var_hashx, zval *rval)",
          "89: {",
          "91: #if VAR_ENTRIES_DBG",
          "92:  fprintf(stderr, \"var_push_dtor_no_addref(%ld): %d (%d)\\n\", var_hash?var_hash->used_slots:-1L, Z_TYPE_PP(rval), Z_REFCOUNT_PP(rval));",
          "93: #endif",
          "95:  if (!var_hash || var_hash->used_slots == VAR_ENTRIES_MAX) {",
          "97:   var_hash->used_slots = 0;",
          "98:   var_hash->next = 0;",
          "",
          "[Removed Lines]",
          "82:  if (Z_REFCOUNTED_P(rval)) Z_ADDREF_P(rval);",
          "83:  var_hash->data[var_hash->used_slots++] = rval;",
          "90:  var_entries *var_hash = (*var_hashx)->last_dtor;",
          "96:   var_hash = emalloc(sizeof(var_entries));",
          "",
          "[Added Lines]",
          "88:  ZVAL_COPY(&var_hash->data[var_hash->used_slots], rval);",
          "89:  var_hash->used_slots++;",
          "96:  var_dtor_entries *var_hash = (*var_hashx)->last_dtor;",
          "102:   var_hash = emalloc(sizeof(var_dtor_entries));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "106:   (*var_hashx)->last_dtor = var_hash;",
          "107:  }",
          "110: }",
          "111: #endif",
          "114: {",
          "115:  var_entries *var_hash = (*var_hashx)->first;",
          "116: #if VAR_ENTRIES_DBG",
          "",
          "[Removed Lines]",
          "109:  var_hash->data[var_hash->used_slots++] = rval;",
          "113: static int var_access(php_unserialize_data_t *var_hashx, long id, zval **store)",
          "",
          "[Added Lines]",
          "115:  ZVAL_COPY_VALUE(&var_hash->data[var_hash->used_slots], rval);",
          "116:  var_hash->used_slots++;",
          "120: PHPAPI void var_replace(php_unserialize_data_t *var_hashx, zval *ozval, zval *nzval)",
          "121: {",
          "122:  long i;",
          "123:  var_entries *var_hash = (*var_hashx)->first;",
          "124: #if VAR_ENTRIES_DBG",
          "125:  fprintf(stderr, \"var_replace(%ld): %d\\n\", var_hash?var_hash->used_slots:-1L, Z_TYPE_PP(nzval));",
          "126: #endif",
          "128:  while (var_hash) {",
          "129:   for (i = 0; i < var_hash->used_slots; i++) {",
          "130:    if (var_hash->data[i] == ozval) {",
          "131:     var_hash->data[i] = nzval;",
          "133:    }",
          "134:   }",
          "135:   var_hash = var_hash->next;",
          "136:  }",
          "137: }",
          "139: static zval *var_access(php_unserialize_data_t *var_hashx, long id)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "122:   id -= VAR_ENTRIES_MAX;",
          "123:  }",
          "132: }",
          "134: PHPAPI void var_destroy(php_unserialize_data_t *var_hashx)",
          "",
          "[Removed Lines]",
          "125:  if (!var_hash) return !SUCCESS;",
          "127:  if (id < 0 || id >= var_hash->used_slots) return !SUCCESS;",
          "131:  return SUCCESS;",
          "",
          "[Added Lines]",
          "151:  if (!var_hash) return NULL;",
          "153:  if (id < 0 || id >= var_hash->used_slots) return NULL;",
          "155:  return var_hash->data[id];",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "136:  void *next;",
          "137:  long i;",
          "138:  var_entries *var_hash = (*var_hashx)->first;",
          "139: #if VAR_ENTRIES_DBG",
          "140:  fprintf(stderr, \"var_destroy(%ld)\\n\", var_hash?var_hash->used_slots:-1L);",
          "141: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "163:  var_dtor_entries *var_dtor_hash = (*var_hashx)->first_dtor;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "146:   var_hash = next;",
          "147:  }",
          "154:   }",
          "158:  }",
          "159: }",
          "",
          "[Removed Lines]",
          "149:  var_hash = (*var_hashx)->first_dtor;",
          "151:  while (var_hash) {",
          "152:   for (i = 0; i < var_hash->used_slots; i++) {",
          "153:    zval_ptr_dtor(var_hash->data[i]);",
          "155:   next = var_hash->next;",
          "156:   efree(var_hash);",
          "157:   var_hash = next;",
          "",
          "[Added Lines]",
          "174:  while (var_dtor_hash) {",
          "175:   for (i = 0; i < var_dtor_hash->used_slots; i++) {",
          "176:    zval_ptr_dtor(&var_dtor_hash->data[i]);",
          "178:   next = var_dtor_hash->next;",
          "179:   efree(var_dtor_hash);",
          "180:   var_dtor_hash = next;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "210: #define YYMARKER marker",
          "",
          "[Removed Lines]",
          "213: #line 218 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "236: #line 241 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "443:  start = cursor;",
          "447: {",
          "448:  YYCTYPE yych;",
          "449:  static const unsigned char yybm[] = {",
          "",
          "[Removed Lines]",
          "446: #line 447 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "472: #line 473 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "503:  yych = *(YYMARKER = ++YYCURSOR);",
          "504:  if (yych == ':') goto yy95;",
          "505: yy3:",
          "507:  { return 0; }",
          "509: yy4:",
          "510:  yych = *(YYMARKER = ++YYCURSOR);",
          "511:  if (yych == ':') goto yy89;",
          "",
          "[Removed Lines]",
          "506: #line 793 \"ext/standard/var_unserializer.re\"",
          "508: #line 509 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "532: #line 817 \"ext/standard/var_unserializer.re\"",
          "534: #line 535 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "548:  goto yy3;",
          "549: yy14:",
          "550:  ++YYCURSOR;",
          "552:  {",
          "554:  php_error_docref(NULL TSRMLS_CC, E_NOTICE, \"Unexpected end of serialized data\");",
          "556: }",
          "558: yy16:",
          "559:  yych = *++YYCURSOR;",
          "560:  goto yy3;",
          "",
          "[Removed Lines]",
          "551: #line 787 \"ext/standard/var_unserializer.re\"",
          "557: #line 558 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "577: #line 811 \"ext/standard/var_unserializer.re\"",
          "583: #line 584 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "584:  yych = *++YYCURSOR;",
          "585:  if (yych != '\"') goto yy18;",
          "586:  ++YYCURSOR;",
          "588:  {",
          "589:  size_t len, len2, len3, maxlen;",
          "590:  long elements;",
          "",
          "[Removed Lines]",
          "587: #line 648 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "613: #line 672 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "724:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "725: }",
          "727: yy25:",
          "728:  yych = *++YYCURSOR;",
          "729:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "726: #line 727 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "752: #line 753 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "748:  yych = *++YYCURSOR;",
          "749:  if (yych != '\"') goto yy18;",
          "750:  ++YYCURSOR;",
          "752:  {",
          "",
          "[Removed Lines]",
          "751: #line 640 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "777: #line 664 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "756:  return object_common2(UNSERIALIZE_PASSTHRU,",
          "757:    object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR));",
          "758: }",
          "760: yy32:",
          "761:  yych = *++YYCURSOR;",
          "762:  if (yych == '+') goto yy33;",
          "",
          "[Removed Lines]",
          "759: #line 760 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "785: #line 786 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "777:  yych = *++YYCURSOR;",
          "778:  if (yych != '{') goto yy18;",
          "779:  ++YYCURSOR;",
          "781:  {",
          "782:  long elements = parse_iv(start + 2);",
          "",
          "[Removed Lines]",
          "780: #line 619 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "806: #line 643 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "799:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "800: }",
          "802: yy39:",
          "803:  yych = *++YYCURSOR;",
          "804:  if (yych == '+') goto yy40;",
          "",
          "[Removed Lines]",
          "801: #line 802 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "827: #line 828 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "819:  yych = *++YYCURSOR;",
          "820:  if (yych != '\"') goto yy18;",
          "821:  ++YYCURSOR;",
          "823:  {",
          "824:  size_t len, maxlen;",
          "",
          "[Removed Lines]",
          "822: #line 589 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "848: #line 613 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "849:  efree(str);",
          "850:  return 1;",
          "851: }",
          "853: yy46:",
          "854:  yych = *++YYCURSOR;",
          "855:  if (yych == '+') goto yy47;",
          "",
          "[Removed Lines]",
          "852: #line 853 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "878: #line 879 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "870:  yych = *++YYCURSOR;",
          "871:  if (yych != '\"') goto yy18;",
          "872:  ++YYCURSOR;",
          "874:  {",
          "875:  size_t len, maxlen;",
          "876:  char *str;",
          "",
          "[Removed Lines]",
          "873: #line 562 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "899: #line 586 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "897:  ZVAL_STRINGL(rval, str, len);",
          "898:  return 1;",
          "899: }",
          "901: yy53:",
          "902:  yych = *++YYCURSOR;",
          "903:  if (yych <= '/') {",
          "",
          "[Removed Lines]",
          "900: #line 901 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "926: #line 927 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "985:  }",
          "986: yy63:",
          "987:  ++YYCURSOR;",
          "989:  {",
          "990: #if SIZEOF_LONG == 4",
          "991: use_double:",
          "",
          "[Removed Lines]",
          "988: #line 553 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1014: #line 577 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "994:  ZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));",
          "995:  return 1;",
          "996: }",
          "998: yy65:",
          "999:  yych = *++YYCURSOR;",
          "1000:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "997: #line 998 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1023: #line 1024 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1053:  yych = *++YYCURSOR;",
          "1054:  if (yych != ';') goto yy18;",
          "1055:  ++YYCURSOR;",
          "1057:  {",
          "",
          "[Removed Lines]",
          "1056: #line 537 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1082: #line 561 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1070:  return 1;",
          "1071: }",
          "1073: yy76:",
          "1074:  yych = *++YYCURSOR;",
          "1075:  if (yych == 'N') goto yy73;",
          "",
          "[Removed Lines]",
          "1072: #line 1073 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1098: #line 1099 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1096:  if (yych <= '9') goto yy79;",
          "1097:  if (yych != ';') goto yy18;",
          "1098:  ++YYCURSOR;",
          "1100:  {",
          "1101: #if SIZEOF_LONG == 4",
          "1102:  int digits = YYCURSOR - start - 3;",
          "",
          "[Removed Lines]",
          "1099: #line 511 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1125: #line 535 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "1122:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1123:  return 1;",
          "1124: }",
          "1126: yy83:",
          "1127:  yych = *++YYCURSOR;",
          "1128:  if (yych <= '/') goto yy18;",
          "",
          "[Removed Lines]",
          "1125: #line 1126 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1151: #line 1152 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "1130:  yych = *++YYCURSOR;",
          "1131:  if (yych != ';') goto yy18;",
          "1132:  ++YYCURSOR;",
          "1134:  {",
          "1136:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1137:  return 1;",
          "1138: }",
          "1140: yy87:",
          "1141:  ++YYCURSOR;",
          "1143:  {",
          "1145:  ZVAL_NULL(rval);",
          "1146:  return 1;",
          "1147: }",
          "1149: yy89:",
          "1150:  yych = *++YYCURSOR;",
          "1151:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1133: #line 505 \"ext/standard/var_unserializer.re\"",
          "1139: #line 1140 \"ext/standard/var_unserializer.c\"",
          "1142: #line 499 \"ext/standard/var_unserializer.re\"",
          "1148: #line 1149 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1159: #line 529 \"ext/standard/var_unserializer.re\"",
          "1165: #line 1166 \"ext/standard/var_unserializer.c\"",
          "1168: #line 523 \"ext/standard/var_unserializer.re\"",
          "1174: #line 1175 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "1168:  if (yych <= '9') goto yy91;",
          "1169:  if (yych != ';') goto yy18;",
          "1170:  ++YYCURSOR;",
          "1172:  {",
          "1173:  long id;",
          "",
          "[Removed Lines]",
          "1171: #line 476 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1197: #line 500 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "1176:  if (!var_hash) return 0;",
          "1178:  id = parse_iv(start + 2) - 1;",
          "1180:   return 0;",
          "1181:  }",
          "",
          "[Removed Lines]",
          "1179:  if (id == -1 || var_access(var_hash, id, &rval_ref) != SUCCESS) {",
          "",
          "[Added Lines]",
          "1205:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "1192:  return 1;",
          "1193: }",
          "1195: yy95:",
          "1196:  yych = *++YYCURSOR;",
          "1197:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1194: #line 1195 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1220: #line 1221 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "1214:  if (yych <= '9') goto yy97;",
          "1215:  if (yych != ';') goto yy18;",
          "1216:  ++YYCURSOR;",
          "1218:  {",
          "1219:  long id;",
          "",
          "[Removed Lines]",
          "1217: #line 451 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1243: #line 477 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "1222:  if (!var_hash) return 0;",
          "1224:  id = parse_iv(start + 2) - 1;",
          "1226:   return 0;",
          "1227:  }",
          "1232:  if (Z_ISREF_P(rval_ref)) {",
          "1233:   ZVAL_COPY(rval, rval_ref);",
          "1234:  } else {",
          "",
          "[Removed Lines]",
          "1225:  if (id == -1 || var_access(var_hash, id, &rval_ref) != SUCCESS) {",
          "1229:  if (!ZVAL_IS_UNDEF(rval)) {",
          "1230:   zval_ptr_dtor(rval);",
          "1231:  }",
          "",
          "[Added Lines]",
          "1251:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "1255:  zval_ptr_dtor(rval);",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "1240:  return 1;",
          "1241: }",
          "1243: }",
          "1247:  return 0;",
          "",
          "[Removed Lines]",
          "1242: #line 1243 \"ext/standard/var_unserializer.c\"",
          "1244: #line 795 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1266: #line 1267 \"ext/standard/var_unserializer.c\"",
          "1268: #line 819 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:  void *next;",
          "33: } var_entries;",
          "35: static inline void var_push(php_unserialize_data_t *var_hashx, zval *rval)",
          "36: {",
          "37:  var_entries *var_hash = (*var_hashx)->last;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "35: typedef struct {",
          "36:  zval data[VAR_ENTRIES_MAX];",
          "37:  long used_slots;",
          "38:  void *next;",
          "39: } var_dtor_entries;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "59: PHPAPI void var_push_dtor(php_unserialize_data_t *var_hashx, zval *rval)",
          "60: {",
          "62: #if VAR_ENTRIES_DBG",
          "63:  fprintf(stderr, \"var_push_dtor(%ld): %d\\n\", var_hash?var_hash->used_slots:-1L, Z_TYPE_PP(rval));",
          "64: #endif",
          "66:  if (!var_hash || var_hash->used_slots == VAR_ENTRIES_MAX) {",
          "68:   var_hash->used_slots = 0;",
          "69:   var_hash->next = 0;",
          "",
          "[Removed Lines]",
          "61:  var_entries *var_hash = (*var_hashx)->last_dtor;",
          "67:   var_hash = emalloc(sizeof(var_entries));",
          "",
          "[Added Lines]",
          "67:  var_dtor_entries *var_hash = (*var_hashx)->last_dtor;",
          "73:   var_hash = emalloc(sizeof(var_dtor_entries));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "77:   (*var_hashx)->last_dtor = var_hash;",
          "78:  }",
          "82: }",
          "85: #if 0",
          "86: PHPAPI void var_push_dtor_no_addref(php_unserialize_data_t *var_hashx, zval *rval)",
          "87: {",
          "89: #if VAR_ENTRIES_DBG",
          "90:  fprintf(stderr, \"var_push_dtor_no_addref(%ld): %d (%d)\\n\", var_hash?var_hash->used_slots:-1L, Z_TYPE_PP(rval), Z_REFCOUNT_PP(rval));",
          "91: #endif",
          "93:  if (!var_hash || var_hash->used_slots == VAR_ENTRIES_MAX) {",
          "95:   var_hash->used_slots = 0;",
          "96:   var_hash->next = 0;",
          "",
          "[Removed Lines]",
          "80:  if (Z_REFCOUNTED_P(rval)) Z_ADDREF_P(rval);",
          "81:  var_hash->data[var_hash->used_slots++] = rval;",
          "88:  var_entries *var_hash = (*var_hashx)->last_dtor;",
          "94:   var_hash = emalloc(sizeof(var_entries));",
          "",
          "[Added Lines]",
          "86:  ZVAL_COPY(&var_hash->data[var_hash->used_slots], rval);",
          "87:  var_hash->used_slots++;",
          "94:  var_dtor_entries *var_hash = (*var_hashx)->last_dtor;",
          "100:   var_hash = emalloc(sizeof(var_dtor_entries));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "104:   (*var_hashx)->last_dtor = var_hash;",
          "105:  }",
          "108: }",
          "109: #endif",
          "112: {",
          "113:  var_entries *var_hash = (*var_hashx)->first;",
          "114: #if VAR_ENTRIES_DBG",
          "",
          "[Removed Lines]",
          "107:  var_hash->data[var_hash->used_slots++] = rval;",
          "111: static int var_access(php_unserialize_data_t *var_hashx, long id, zval **store)",
          "",
          "[Added Lines]",
          "113:  ZVAL_COPY_VALUE(&var_hash->data[var_hash->used_slots], rval);",
          "114:  var_hash->used_slots++;",
          "118: PHPAPI void var_replace(php_unserialize_data_t *var_hashx, zval *ozval, zval *nzval)",
          "119: {",
          "120:  long i;",
          "121:  var_entries *var_hash = (*var_hashx)->first;",
          "122: #if VAR_ENTRIES_DBG",
          "123:  fprintf(stderr, \"var_replace(%ld): %d\\n\", var_hash?var_hash->used_slots:-1L, Z_TYPE_PP(nzval));",
          "124: #endif",
          "126:  while (var_hash) {",
          "127:   for (i = 0; i < var_hash->used_slots; i++) {",
          "128:    if (var_hash->data[i] == ozval) {",
          "129:     var_hash->data[i] = nzval;",
          "131:    }",
          "132:   }",
          "133:   var_hash = var_hash->next;",
          "134:  }",
          "135: }",
          "137: static zval *var_access(php_unserialize_data_t *var_hashx, long id)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "120:   id -= VAR_ENTRIES_MAX;",
          "121:  }",
          "130: }",
          "132: PHPAPI void var_destroy(php_unserialize_data_t *var_hashx)",
          "",
          "[Removed Lines]",
          "123:  if (!var_hash) return !SUCCESS;",
          "125:  if (id < 0 || id >= var_hash->used_slots) return !SUCCESS;",
          "129:  return SUCCESS;",
          "",
          "[Added Lines]",
          "149:  if (!var_hash) return NULL;",
          "151:  if (id < 0 || id >= var_hash->used_slots) return NULL;",
          "153:  return var_hash->data[id];",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "134:  void *next;",
          "135:  long i;",
          "136:  var_entries *var_hash = (*var_hashx)->first;",
          "137: #if VAR_ENTRIES_DBG",
          "138:  fprintf(stderr, \"var_destroy(%ld)\\n\", var_hash?var_hash->used_slots:-1L);",
          "139: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "161:  var_dtor_entries *var_dtor_hash = (*var_hashx)->first_dtor;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "144:   var_hash = next;",
          "145:  }",
          "152:   }",
          "156:  }",
          "157: }",
          "",
          "[Removed Lines]",
          "147:  var_hash = (*var_hashx)->first_dtor;",
          "149:  while (var_hash) {",
          "150:   for (i = 0; i < var_hash->used_slots; i++) {",
          "151:    zval_ptr_dtor(var_hash->data[i]);",
          "153:   next = var_hash->next;",
          "154:   efree(var_hash);",
          "155:   var_hash = next;",
          "",
          "[Added Lines]",
          "172:  while (var_dtor_hash) {",
          "173:   for (i = 0; i < var_dtor_hash->used_slots; i++) {",
          "174:    zval_ptr_dtor(&var_dtor_hash->data[i]);",
          "176:   next = var_dtor_hash->next;",
          "177:   efree(var_dtor_hash);",
          "178:   var_dtor_hash = next;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "455:  if (!var_hash) return 0;",
          "457:  id = parse_iv(start + 2) - 1;",
          "459:   return 0;",
          "460:  }",
          "465:  if (Z_ISREF_P(rval_ref)) {",
          "466:   ZVAL_COPY(rval, rval_ref);",
          "467:  } else {",
          "",
          "[Removed Lines]",
          "458:  if (id == -1 || var_access(var_hash, id, &rval_ref) != SUCCESS) {",
          "462:  if (!ZVAL_IS_UNDEF(rval)) {",
          "463:   zval_ptr_dtor(rval);",
          "464:  }",
          "",
          "[Added Lines]",
          "484:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "488:  zval_ptr_dtor(rval);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "480:  if (!var_hash) return 0;",
          "482:  id = parse_iv(start + 2) - 1;",
          "484:   return 0;",
          "485:  }",
          "",
          "[Removed Lines]",
          "483:  if (id == -1 || var_access(var_hash, id, &rval_ref) != SUCCESS) {",
          "",
          "[Added Lines]",
          "507:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c6cba554544d9dc676d1cfa99447364c95768664",
      "candidate_info": {
        "commit_hash": "c6cba554544d9dc676d1cfa99447364c95768664",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/c6cba554544d9dc676d1cfa99447364c95768664",
        "files": [
          "Zend/zend.c",
          "Zend/zend.h",
          "Zend/zend_API.c",
          "Zend/zend_builtin_functions.c",
          "Zend/zend_exceptions.c",
          "Zend/zend_execute.c",
          "Zend/zend_execute.h",
          "Zend/zend_execute_API.c",
          "Zend/zend_vm_def.h",
          "Zend/zend_vm_execute.h",
          "Zend/zend_vm_gen.php",
          "ext/ereg/ereg.c",
          "ext/pcre/php_pcre.c",
          "ext/standard/array.c",
          "ext/standard/proc_open.c",
          "ext/standard/string.c",
          "ext/standard/type.c",
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re"
        ],
        "message": "Use ZVAL_DEREF() macro",
        "before_after_code_files": [
          "Zend/zend.c||Zend/zend.c",
          "Zend/zend.h||Zend/zend.h",
          "Zend/zend_API.c||Zend/zend_API.c",
          "Zend/zend_builtin_functions.c||Zend/zend_builtin_functions.c",
          "Zend/zend_exceptions.c||Zend/zend_exceptions.c",
          "Zend/zend_execute.c||Zend/zend_execute.c",
          "Zend/zend_execute.h||Zend/zend_execute.h",
          "Zend/zend_execute_API.c||Zend/zend_execute_API.c",
          "Zend/zend_vm_def.h||Zend/zend_vm_def.h",
          "Zend/zend_vm_gen.php||Zend/zend_vm_gen.php",
          "ext/ereg/ereg.c||ext/ereg/ereg.c",
          "ext/pcre/php_pcre.c||ext/pcre/php_pcre.c",
          "ext/standard/array.c||ext/standard/array.c",
          "ext/standard/proc_open.c||ext/standard/proc_open.c",
          "ext/standard/string.c||ext/standard/string.c",
          "ext/standard/type.c||ext/standard/type.c",
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ],
          "candidate": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ]
        }
      },
      "candidate_diff": {
        "Zend/zend.c||Zend/zend.c": [
          "File: Zend/zend.c -> Zend/zend.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "412: {",
          "416:  switch (Z_TYPE_P(expr)) {",
          "417:   case IS_ARRAY:",
          "418:    ZEND_PUTS_EX(\"Array\\n\");",
          "",
          "[Removed Lines]",
          "413:  if (Z_ISREF_P(expr)) {",
          "414:   expr = Z_REFVAL_P(expr);",
          "415:  }",
          "",
          "[Added Lines]",
          "413:  ZVAL_DEREF(expr);",
          "",
          "---------------"
        ],
        "Zend/zend.h||Zend/zend.h": [
          "File: Zend/zend.h -> Zend/zend.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "669:   zval_copy_ctor(__z1);       \\",
          "670:  } while (0)",
          "672: #define ZVAL_DUP_DEREF(z, v)       \\",
          "673:  do {            \\",
          "674:   zval *__z1 = (z);        \\",
          "675:   zval *__z2 = (v);        \\",
          "681:   zval_copy_ctor(__z1);       \\",
          "682:  } while (0)",
          "",
          "[Removed Lines]",
          "676:   if (Z_ISREF_P(__z2)) {       \\",
          "677:    ZVAL_COPY_VALUE(__z1, Z_REFVAL_P(__z2)); \\",
          "678:   } else {          \\",
          "679:    ZVAL_COPY_VALUE(__z1, __z2);    \\",
          "680:   }            \\",
          "",
          "[Added Lines]",
          "672: #define ZVAL_DEREF(z) do {        \\",
          "673:   if (UNEXPECTED(Z_ISREF_P(z))) {     \\",
          "674:    (z) = Z_REFVAL_P(z);      \\",
          "675:   }            \\",
          "676:  } while (0)",
          "680: #if 0",
          "681: #define ZVAL_DEREF_REF(z) do {       \\",
          "682:   ZEND_ASSERT(Z_ISREF_P(z));      \\",
          "683:   (z) = Z_REFVAL_P(z);       \\",
          "684:  } while (0)",
          "685: #else",
          "686: #define ZVAL_DEREF_REF(z)        \\",
          "687:  ZVAL_DEREF(z)",
          "688: #endif",
          "694:   ZVAL_DEREF(__z2);        \\",
          "695:   ZVAL_COPY_VALUE(__z1, __z2);     \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "691:   efree(ref);          \\",
          "692:  } while (0)",
          "701: #define INIT_PZVAL_COPY(z, v)       \\",
          "702:  do {            \\",
          "",
          "[Removed Lines]",
          "694: #define ZVAL_DEREF(z) do {        \\",
          "695:   if (Z_ISREF_P((z))) {       \\",
          "696:    (z) = Z_REFVAL_P((z));      \\",
          "697:   }            \\",
          "698:  } while (0)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "738:    if (Z_REFCOUNT_P(__zv) == 1) {    \\",
          "739:     ZVAL_UNREF(__zv);      \\",
          "740:    } else {         \\",
          "742:     Z_DELREF_P(__zv);      \\",
          "744:    }           \\",
          "745:   }            \\",
          "746:  } while (0)",
          "",
          "[Removed Lines]",
          "741:     zval *ref = Z_REFVAL_P(__zv);   \\",
          "743:     ZVAL_DUP(__zv, ref);     \\",
          "",
          "[Added Lines]",
          "751:     ZVAL_DUP(__zv, Z_REFVAL_P(__zv));  \\",
          "",
          "---------------"
        ],
        "Zend/zend_API.c||Zend/zend_API.c": [
          "File: Zend/zend_API.c -> Zend/zend_API.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "229: {",
          "233:  return zend_get_type_by_const(Z_TYPE_P(arg));",
          "234: }",
          "",
          "[Removed Lines]",
          "230:  if (Z_ISREF_P(arg)) {",
          "231:   arg = Z_REFVAL_P(arg);",
          "232:  }",
          "",
          "[Added Lines]",
          "230:  ZVAL_DEREF(arg);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "360:   spec_walk++;",
          "361:  }",
          "367:  switch (c) {",
          "368:   case 'l':",
          "",
          "[Removed Lines]",
          "363:  if (Z_ISREF_P(arg)) {",
          "364:   arg = Z_REFVAL_P(arg);",
          "365:  }",
          "",
          "[Added Lines]",
          "361:  ZVAL_DEREF(arg);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1117: {",
          "1123:  if (IS_CONSTANT_TYPE(Z_TYPE_P(pp))) {",
          "1124:   zend_class_entry **scope = EG(in_execution)?&EG(scope):&CG(active_class_entry);",
          "",
          "[Removed Lines]",
          "1120:  if (Z_ISREF_P(pp)) {",
          "1121:   pp = Z_REFVAL_P(pp);",
          "1122:  }",
          "",
          "[Added Lines]",
          "1114:  ZVAL_DEREF(pp);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3226:       break;",
          "3227:      }",
          "3233:      if (Z_TYPE_P(method) != IS_STRING) {",
          "3234:       break;",
          "3235:      }",
          "3241:      if (Z_TYPE_P(obj) == IS_STRING) {",
          "3242:       if (callable_name) {",
          "3243:        char *ptr;",
          "",
          "[Removed Lines]",
          "3229:      if (UNEXPECTED(Z_ISREF_P(method))) {",
          "3230:       method = Z_REFVAL_P(method);",
          "3231:      }",
          "3237:      if (UNEXPECTED(Z_ISREF_P(obj))) {",
          "3238:       obj = Z_REFVAL_P(obj);",
          "3239:      }",
          "",
          "[Added Lines]",
          "3221:      ZVAL_DEREF(method);",
          "3226:      ZVAL_DEREF(obj);",
          "",
          "---------------"
        ],
        "Zend/zend_builtin_functions.c||Zend/zend_builtin_functions.c": [
          "File: Zend/zend_builtin_functions.c -> Zend/zend_builtin_functions.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "585:   return;",
          "586:  }",
          "591:  target_hash = HASH_OF(array);",
          "592:  if (!target_hash) {",
          "593:   zend_error(E_WARNING,\"Variable passed to each() is not an array or object\");",
          "",
          "[Removed Lines]",
          "588:  if (Z_ISREF_P(array)) {",
          "589:   array = Z_REFVAL_P(array);",
          "590:  }",
          "",
          "[Added Lines]",
          "588:  ZVAL_DEREF_REF(array);",
          "",
          "---------------"
        ],
        "Zend/zend_exceptions.c||Zend/zend_exceptions.c": [
          "File: Zend/zend_exceptions.c -> Zend/zend_exceptions.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "381:  switch (Z_TYPE_P(arg)) {",
          "382:   case IS_NULL:",
          "383:    TRACE_APPEND_STR(\"NULL, \");",
          "",
          "[Removed Lines]",
          "378:  if (Z_ISREF_P(arg)) {",
          "379:   arg = Z_REFVAL_P(arg);",
          "380:  }",
          "",
          "[Added Lines]",
          "378:  ZVAL_DEREF(arg);",
          "",
          "---------------"
        ],
        "Zend/zend_execute.c||Zend/zend_execute.c": [
          "File: Zend/zend_execute.c -> Zend/zend_execute.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "198:   ret = Z_INDIRECT_P(ret);",
          "199:  }",
          "200:  should_free->var = ret;",
          "204:  return ret;",
          "205: }",
          "",
          "[Removed Lines]",
          "201:  if (UNEXPECTED(Z_ISREF_P(ret))) {",
          "202:   ret = Z_REFVAL_P(ret);",
          "203:  }",
          "",
          "[Added Lines]",
          "201:  ZVAL_DEREF(ret);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "281:  if (UNEXPECTED(Z_TYPE_P(ret) == IS_UNDEF)) {",
          "282:   return _get_zval_cv_lookup(ret, var, type TSRMLS_CC);",
          "283:  }",
          "287:  return ret;",
          "288: }",
          "",
          "[Removed Lines]",
          "284:  if (UNEXPECTED(Z_ISREF_P(ret))) {",
          "285:   ret = Z_REFVAL_P(ret);",
          "286:  }",
          "",
          "[Added Lines]",
          "282:  ZVAL_DEREF(ret);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "304:  if (UNEXPECTED(Z_TYPE_P(ret) == IS_UNDEF)) {",
          "305:   return _get_zval_cv_lookup_BP_VAR_R(ret, var TSRMLS_CC);",
          "306:  }",
          "310:  return ret;",
          "311: }",
          "",
          "[Removed Lines]",
          "307:  if (UNEXPECTED(Z_ISREF_P(ret))) {",
          "308:   ret = Z_REFVAL_P(ret);",
          "309:  }",
          "",
          "[Added Lines]",
          "303:  ZVAL_DEREF(ret);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "327:  if (UNEXPECTED(Z_TYPE_P(ret) == IS_UNDEF)) {",
          "328:   return _get_zval_cv_lookup_BP_VAR_UNSET(ret, var TSRMLS_CC);",
          "329:  }",
          "333:  return ret;",
          "334: }",
          "",
          "[Removed Lines]",
          "330:  if (UNEXPECTED(Z_ISREF_P(ret))) {",
          "331:   ret = Z_REFVAL_P(ret);",
          "332:  }",
          "",
          "[Added Lines]",
          "324:  ZVAL_DEREF(ret);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "350:  if (Z_TYPE_P(ret) == IS_UNDEF) {",
          "351:   return _get_zval_cv_lookup_BP_VAR_IS(ret, var TSRMLS_CC);",
          "352:  }",
          "356:  return ret;",
          "357: }",
          "",
          "[Removed Lines]",
          "353:  if (UNEXPECTED(Z_ISREF_P(ret))) {",
          "354:   ret = Z_REFVAL_P(ret);",
          "355:  }",
          "",
          "[Added Lines]",
          "345:  ZVAL_DEREF(ret);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "373:  if (UNEXPECTED(Z_TYPE_P(ret) == IS_UNDEF)) {",
          "374:   return _get_zval_cv_lookup_BP_VAR_RW(ret, var TSRMLS_CC);",
          "375:  }",
          "379:  return ret;",
          "380: }",
          "",
          "[Removed Lines]",
          "376:  if (UNEXPECTED(Z_ISREF_P(ret))) {",
          "377:   ret = Z_REFVAL_P(ret);",
          "378:  }",
          "",
          "[Added Lines]",
          "366:  ZVAL_DEREF(ret);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "396:  if (Z_TYPE_P(ret) == IS_UNDEF) {",
          "397:   return _get_zval_cv_lookup_BP_VAR_W(ret, var TSRMLS_CC);",
          "398:  }",
          "402:  return ret;",
          "403: }",
          "",
          "[Removed Lines]",
          "399:  if (UNEXPECTED(Z_ISREF_P(ret))) {",
          "400:   ret = Z_REFVAL_P(ret);",
          "401:  }",
          "",
          "[Added Lines]",
          "387:  ZVAL_DEREF(ret);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "535: {",
          "536:  zval *object = object_ptr;",
          "541:  if (Z_TYPE_P(object) == IS_NULL",
          "542:   || (Z_TYPE_P(object) == IS_BOOL && Z_LVAL_P(object) == 0)",
          "543:   || (Z_TYPE_P(object) == IS_STRING && Z_STRLEN_P(object) == 0)",
          "",
          "[Removed Lines]",
          "538:  if (UNEXPECTED(Z_ISREF_P(object_ptr))) {",
          "539:   object = Z_REFVAL_P(object);",
          "540:  }",
          "",
          "[Added Lines]",
          "524:  ZVAL_DEREF(object);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "612:    need_msg = zend_verify_arg_class_kind(cur_arg_info, fetch_type, &class_name, &ce TSRMLS_CC);",
          "613:    return zend_verify_arg_error(E_RECOVERABLE_ERROR, zf, arg_num, need_msg, class_name, \"none\", \"\" TSRMLS_CC);",
          "614:   }",
          "618:   if (Z_TYPE_P(arg) == IS_OBJECT) {",
          "619:    need_msg = zend_verify_arg_class_kind(cur_arg_info, fetch_type, &class_name, &ce TSRMLS_CC);",
          "620:    if (!ce || !instanceof_function(Z_OBJCE_P(arg), ce TSRMLS_CC)) {",
          "",
          "[Removed Lines]",
          "615:   if (Z_ISREF_P(arg)) {",
          "616:    arg = Z_REFVAL_P(arg);",
          "617:   }",
          "",
          "[Added Lines]",
          "599:   ZVAL_DEREF(arg);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "631:      return zend_verify_arg_error(E_RECOVERABLE_ERROR, zf, arg_num, \"be of the type array\", \"\", \"none\", \"\" TSRMLS_CC);",
          "632:     }",
          "637:     if (Z_TYPE_P(arg) != IS_ARRAY && (Z_TYPE_P(arg) != IS_NULL || !cur_arg_info->allow_null)) {",
          "638:      return zend_verify_arg_error(E_RECOVERABLE_ERROR, zf, arg_num, \"be of the type array\", \"\", zend_zval_type_name(arg), \"\" TSRMLS_CC);",
          "639:     }",
          "",
          "[Removed Lines]",
          "634:     if (Z_ISREF_P(arg)) {",
          "635:      arg = Z_REFVAL_P(arg);",
          "636:     }",
          "",
          "[Added Lines]",
          "616:     ZVAL_DEREF(arg);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "662:   zval tmp;",
          "663:   zval *object = object_ptr;",
          "668:  if (Z_TYPE_P(object) != IS_OBJECT) {",
          "669:   if (object == &EG(error_zval)) {",
          "670:     if (retval) {",
          "",
          "[Removed Lines]",
          "665:   if (Z_ISREF_P(object)) {",
          "666:    object = Z_REFVAL_P(object);",
          "667:   }",
          "",
          "[Added Lines]",
          "645:   ZVAL_DEREF(object);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "711:  if (value_type == IS_TMP_VAR) {",
          "717:   value = &tmp;",
          "718:  } else if (value_type == IS_CONST) {",
          "722:   ZVAL_DUP(&tmp, value);",
          "723:  } else if (Z_REFCOUNTED_P(value)) {",
          "724:   Z_ADDREF_P(value);",
          "",
          "[Removed Lines]",
          "712:   if (UNEXPECTED(Z_ISREF_P(value))) {",
          "713:    ZVAL_COPY_VALUE(&tmp, Z_REFVAL_P(value));",
          "714:         } else {",
          "715:    ZVAL_COPY_VALUE(&tmp, value);",
          "716:         }",
          "719:   if (UNEXPECTED(Z_ISREF_P(value))) {",
          "720:    value = Z_REFVAL_P(value);",
          "721:   }",
          "",
          "[Added Lines]",
          "690:   ZVAL_DEREF(value);",
          "691:   ZVAL_COPY_VALUE(&tmp, value);",
          "694:   ZVAL_DEREF(value);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "800: static inline zval* zend_assign_tmp_to_variable(zval *variable_ptr, zval *value TSRMLS_DC)",
          "801: {",
          "806:  if (Z_TYPE_P(variable_ptr) == IS_OBJECT &&",
          "807:      UNEXPECTED(Z_OBJ_HANDLER_P(variable_ptr, set) != NULL)) {",
          "808:   Z_OBJ_HANDLER_P(variable_ptr, set)(variable_ptr, value TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "802:  if (Z_ISREF_P(variable_ptr)) {",
          "803:   variable_ptr = Z_REFVAL_P(variable_ptr);",
          "804:  }",
          "",
          "[Added Lines]",
          "775:  ZVAL_DEREF(variable_ptr);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "828: static inline zval* zend_assign_const_to_variable(zval *variable_ptr, zval *value TSRMLS_DC)",
          "829: {",
          "834:  if (Z_TYPE_P(variable_ptr) == IS_OBJECT &&",
          "835:      UNEXPECTED(Z_OBJ_HANDLER_P(variable_ptr, set) != NULL)) {",
          "836:   Z_OBJ_HANDLER_P(variable_ptr, set)(variable_ptr, value TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "830:  if (Z_ISREF_P(variable_ptr)) {",
          "831:   variable_ptr = Z_REFVAL_P(variable_ptr);",
          "832:  }",
          "",
          "[Added Lines]",
          "800:  ZVAL_DEREF(variable_ptr);",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1082:     zval *retval;",
          "1083:     zval *container = container_ptr;",
          "1089:  switch (Z_TYPE_P(container)) {",
          "1090:   case IS_ARRAY:",
          "1091:    if (type != BP_VAR_UNSET) {",
          "",
          "[Removed Lines]",
          "1085:  if (Z_ISREF_P(container)) {",
          "1086:   container = Z_REFVAL_P(container);",
          "1087:  }",
          "",
          "[Added Lines]",
          "1052:  ZVAL_DEREF(container);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1245: {",
          "1246:  zval *retval;",
          "1251:  switch (Z_TYPE_P(container)) {",
          "1253:   case IS_ARRAY:",
          "",
          "[Removed Lines]",
          "1248:  if (UNEXPECTED(Z_ISREF_P(container))) {",
          "1249:   container = Z_REFVAL_P(container);",
          "1250:  }",
          "",
          "[Added Lines]",
          "1212:  ZVAL_DEREF(container);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1342: {",
          "1343:  zval *container = container_ptr;",
          "1349:  if (Z_TYPE_P(container) != IS_OBJECT) {",
          "1350:   if (container == &EG(error_zval)) {",
          "1351:    ZVAL_INDIRECT(result, &EG(error_zval));",
          "",
          "[Removed Lines]",
          "1345:  if (Z_ISREF_P(container)) {",
          "1346:   container = Z_REFVAL_P(container);",
          "1347:  }",
          "",
          "[Added Lines]",
          "1307:  ZVAL_DEREF(container);",
          "",
          "---------------"
        ],
        "Zend/zend_execute.h||Zend/zend_execute.h": [
          "File: Zend/zend_execute.h -> Zend/zend_execute.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:    ZEND_ASSERT(zval_ptr != &EG(uninitialized_zval));",
          "82:    _zval_dtor_func_for_ptr(Z_COUNTED_P(zval_ptr) ZEND_FILE_LINE_CC);",
          "83:   } else {",
          "90:    GC_ZVAL_CHECK_POSSIBLE_ROOT(zval_ptr);",
          "91:   }",
          "92:  }",
          "",
          "[Removed Lines]",
          "84:    if (Z_REFCOUNT_P(zval_ptr) == 1 && Z_ISREF_P(zval_ptr)) {",
          "89:    }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "98:   if (!Z_DELREF_P(zval_ptr)) {",
          "99:    ZEND_ASSERT(zval_ptr != &EG(uninitialized_zval));",
          "100:    _zval_dtor_func_for_ptr(Z_COUNTED_P(zval_ptr) ZEND_FILE_LINE_CC);",
          "108:   }",
          "109:  }",
          "110: }",
          "",
          "[Removed Lines]",
          "101:   } else {",
          "102:    if (Z_REFCOUNT_P(zval_ptr) == 1 && Z_ISREF_P(zval_ptr)) {",
          "107:    }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "Zend/zend_execute_API.c||Zend/zend_execute_API.c": [
          "File: Zend/zend_execute_API.c -> Zend/zend_execute_API.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "457:   Z_DELREF_P(zval_ptr);",
          "458:   if (Z_REFCOUNT_P(zval_ptr) == 0) {",
          "459:    _zval_internal_dtor_for_ptr(zval_ptr ZEND_FILE_LINE_CC);",
          "466:   }",
          "467:  }",
          "468: }",
          "",
          "[Removed Lines]",
          "460:   } else if (Z_REFCOUNT_P(zval_ptr) == 1) {",
          "461:    if (Z_ISREF_P(zval_ptr)) {",
          "465:    }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "Zend/zend_vm_def.h||Zend/zend_vm_def.h": [
          "File: Zend/zend_vm_def.h -> Zend/zend_vm_def.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "343:  if (UNEXPECTED(Z_TYPE_P(object) != IS_OBJECT)) {",
          "344:   make_real_object(object TSRMLS_CC);",
          "345:  }",
          "350:  value = get_zval_ptr((opline+1)->op1_type, &(opline+1)->op1, execute_data, &free_op_data1, BP_VAR_R);",
          "",
          "[Removed Lines]",
          "346:  if (UNEXPECTED(Z_ISREF_P(object))) {",
          "347:   object = Z_REFVAL_P(object);",
          "348:  }",
          "",
          "[Added Lines]",
          "346:  ZVAL_DEREF(object);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "502:   Z_OBJ_HANDLER_P(var_ptr, set)(var_ptr, objval TSRMLS_CC);",
          "503:   zval_ptr_dtor(objval);",
          "504:  } else {",
          "509:   binary_op(var_ptr, var_ptr, value TSRMLS_CC);",
          "510:  }",
          "",
          "[Removed Lines]",
          "506:      if (Z_ISREF_P(var_ptr)) {",
          "507:       var_ptr = Z_REFVAL_P(var_ptr);",
          "508:   }",
          "",
          "[Added Lines]",
          "503:      ZVAL_DEREF(var_ptr);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "797:   ZEND_VM_NEXT_OPCODE();",
          "798:  }",
          "801:   var_ptr = Z_REFVAL_P(var_ptr);",
          "802:  } else {",
          "803:   SEPARATE_ZVAL(var_ptr);",
          "",
          "[Removed Lines]",
          "800:  if (Z_ISREF_P(var_ptr)) {",
          "",
          "[Added Lines]",
          "795:  if (UNEXPECTED(Z_ISREF_P(var_ptr))) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "846:   ZEND_VM_NEXT_OPCODE();",
          "847:  }",
          "850:   var_ptr = Z_REFVAL_P(var_ptr);",
          "851:  } else {",
          "852:   SEPARATE_ZVAL(var_ptr);",
          "",
          "[Removed Lines]",
          "849:  if (Z_ISREF_P(var_ptr)) {",
          "",
          "[Added Lines]",
          "844:  if (UNEXPECTED(Z_ISREF_P(var_ptr))) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "896:  retval = EX_VAR(opline->result.var);",
          "899:   var_ptr = Z_REFVAL_P(var_ptr);",
          "900:   ZVAL_DUP(retval, var_ptr);",
          "901:  } else {",
          "",
          "[Removed Lines]",
          "898:  if (Z_ISREF_P(var_ptr)) {",
          "",
          "[Added Lines]",
          "893:  if (UNEXPECTED(Z_ISREF_P(var_ptr))) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "943:  retval = EX_VAR(opline->result.var);",
          "946:   var_ptr = Z_REFVAL_P(var_ptr);",
          "947:   ZVAL_DUP(retval, var_ptr);",
          "948:  } else {",
          "",
          "[Removed Lines]",
          "945:  if (Z_ISREF_P(var_ptr)) {",
          "",
          "[Added Lines]",
          "940:  if (UNEXPECTED(Z_ISREF_P(var_ptr))) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "975:  zval *z;",
          "977:  SAVE_OPLINE();",
          "984:  zend_print_variable(z);",
          "",
          "[Removed Lines]",
          "978:  z = GET_OP1_ZVAL_PTR(BP_VAR_R);",
          "980:  if (UNEXPECTED(Z_ISREF_P(z))) {",
          "981:   z = Z_REFVAL_P(z);",
          "982:  }",
          "",
          "[Added Lines]",
          "973:  z = GET_OP1_ZVAL_PTR_DEREF(BP_VAR_R);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1364:  zval *offset;",
          "1366:  SAVE_OPLINE();",
          "1368:  offset  = GET_OP2_ZVAL_PTR(BP_VAR_R);",
          "1374:  if (UNEXPECTED(Z_TYPE_P(container) != IS_OBJECT) ||",
          "1375:      UNEXPECTED(Z_OBJ_HT_P(container)->read_property == NULL)) {",
          "1376:   zend_error(E_NOTICE, \"Trying to get property of non-object\");",
          "",
          "[Removed Lines]",
          "1367:  container = GET_OP1_OBJ_ZVAL_PTR(BP_VAR_R);",
          "1370:  if (UNEXPECTED(Z_ISREF_P(container))) {",
          "1371:   container = Z_REFVAL_P(container);",
          "1372:  }",
          "",
          "[Added Lines]",
          "1358:  container = GET_OP1_OBJ_ZVAL_PTR_DEREF(BP_VAR_R);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1686:  if (OP1_TYPE == IS_VAR && UNEXPECTED(Z_TYPE_P(object_ptr) == IS_STR_OFFSET)) {",
          "1687:   zend_error_noreturn(E_ERROR, \"Cannot use string offset as an array\");",
          "1688:  }",
          "1690:   object_ptr = Z_REFVAL_P(object_ptr);",
          "1691:  }",
          "1692:  if (Z_TYPE_P(object_ptr) == IS_OBJECT) {",
          "",
          "[Removed Lines]",
          "1689:  if (Z_ISREF_P(object_ptr) && Z_TYPE_P(Z_REFVAL_P(object_ptr)) == IS_OBJECT) {",
          "",
          "[Added Lines]",
          "1676:  if (UNEXPECTED(Z_ISREF_P(object_ptr)) && Z_TYPE_P(Z_REFVAL_P(object_ptr)) == IS_OBJECT) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2389:  }",
          "2391:  if (Z_TYPE_P(var) != IS_STRING) {",
          "2395:   if (Z_TYPE_P(var) != IS_STRING) {",
          "2396:    zend_make_printable_zval(var, &var_copy, &use_copy);",
          "",
          "[Removed Lines]",
          "2392:   if (Z_ISREF_P(var)) {",
          "2393:    var = Z_REFVAL_P(var);",
          "2394:   }",
          "",
          "[Added Lines]",
          "2379:   ZVAL_DEREF(var);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2477:   zend_error_noreturn(E_ERROR, \"Method name must be a string\");",
          "2478:  }",
          "2481:  if (Z_ISREF_P(object)) {",
          "2482:   ZVAL_COPY_VALUE(&call->object, Z_REFVAL_P(object));",
          "2483:  } else {",
          "2484:   ZVAL_COPY_VALUE(&call->object, object);",
          "2485:  }",
          "2487:  if (EXPECTED(Z_TYPE(call->object) != IS_UNDEF) &&",
          "2488:      EXPECTED(Z_TYPE(call->object) == IS_OBJECT)) {",
          "",
          "[Removed Lines]",
          "2480:  object = GET_OP1_OBJ_ZVAL_PTR(BP_VAR_R);",
          "",
          "[Added Lines]",
          "2465:  object = GET_OP1_OBJ_ZVAL_PTR_DEREF(BP_VAR_R);",
          "2466:  ZVAL_COPY_VALUE(&call->object, object);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2677:   SAVE_OPLINE();",
          "2678:   function_name_ptr = function_name = GET_OP2_ZVAL_PTR(BP_VAR_R);",
          "2683:   if (EXPECTED(Z_TYPE_P(function_name) == IS_STRING)) {",
          "2684:    if (Z_STRVAL_P(function_name)[0] == '\\\\') {",
          "2685:     lcname = STR_ALLOC(Z_STRLEN_P(function_name) - 1, 0);",
          "",
          "[Removed Lines]",
          "2679:   if (Z_ISREF_P(function_name)) {",
          "2680:    function_name = Z_REFVAL_P(function_name);",
          "2681:   }",
          "",
          "[Added Lines]",
          "2668:   ZVAL_DEREF(function_name);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "3873:  zval *result = EX_VAR(opline->result.var);",
          "3875:  SAVE_OPLINE();",
          "3881:  if (opline->extended_value != IS_STRING) {",
          "3882:   ZVAL_COPY_VALUE(result, expr);",
          "3883:   if (!IS_OP1_TMP_FREE()) {",
          "",
          "[Removed Lines]",
          "3876:  expr = GET_OP1_ZVAL_PTR(BP_VAR_R);",
          "3878:  if (Z_ISREF_P(expr)) {",
          "3879:   expr = Z_REFVAL_P(expr);",
          "3880:  }",
          "",
          "[Added Lines]",
          "3861:  expr = GET_OP1_ZVAL_PTR_DEREF(BP_VAR_R);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "4288:  if ((OP1_TYPE == IS_CV || OP1_TYPE == IS_VAR) &&",
          "4289:      (opline->extended_value & ZEND_FE_RESET_VARIABLE)) {",
          "4290:   array_ptr = array_ref = GET_OP1_ZVAL_PTR_PTR(BP_VAR_R);",
          "4295:   } else if (Z_TYPE_P(array_ptr) == IS_OBJECT) {",
          "4296:    if(Z_OBJ_HT_P(array_ptr)->get_class_entry == NULL) {",
          "4297:     zend_error(E_WARNING, \"foreach() cannot iterate over objects without PHP class\");",
          "",
          "[Removed Lines]",
          "4291:   if (Z_ISREF_P(array_ref)) {",
          "4292:    array_ptr = Z_REFVAL_P(array_ptr);",
          "4293:   }",
          "4294:   if (Z_TYPE_P(array_ptr) == IS_NULL) {",
          "",
          "[Added Lines]",
          "4272:   ZVAL_DEREF(array_ptr);",
          "4273:   if (Z_TYPE_P(array_ptr) == IS_ARRAY) {",
          "4274:    if (!Z_ISREF_P(array_ref)) {",
          "4275:     SEPARATE_ZVAL(array_ptr);",
          "4276:     array_ref = array_ptr;",
          "4277:     if (opline->extended_value & ZEND_FE_FETCH_BYREF) {",
          "4278:      ZVAL_NEW_REF(array_ptr, array_ptr);",
          "4279:      array_ref = array_ptr;",
          "4280:      array_ptr = Z_REFVAL_P(array_ptr);",
          "4281:     }",
          "4282:    }",
          "4283:    if (Z_REFCOUNTED_P(array_ref)) Z_ADDREF_P(array_ref);",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "4307:    }",
          "4308:    array_ref = array_ptr;",
          "4309:   } else {",
          "4321:    if (Z_REFCOUNTED_P(array_ref)) Z_ADDREF_P(array_ref);",
          "4322:   }",
          "4323:  } else {",
          "4324:   array_ptr = array_ref = GET_OP1_ZVAL_PTR(BP_VAR_R);",
          "4329:    zval tmp;",
          "",
          "[Removed Lines]",
          "4310:    if (Z_TYPE_P(array_ptr) == IS_ARRAY) {",
          "4311:     if (!Z_ISREF_P(array_ref)) {",
          "4312:      SEPARATE_ZVAL(array_ptr);",
          "4313:      array_ref = array_ptr;",
          "4314:      if (opline->extended_value & ZEND_FE_FETCH_BYREF) {",
          "4315:       ZVAL_NEW_REF(array_ptr, array_ptr);",
          "4316:       array_ref = array_ptr;",
          "4317:       array_ptr = Z_REFVAL_P(array_ptr);",
          "4318:      }",
          "4319:     }",
          "4320:    }",
          "4325:   if (Z_ISREF_P(array_ref)) {",
          "4326:    array_ptr = Z_REFVAL_P(array_ptr);",
          "4327:   }",
          "",
          "[Added Lines]",
          "4303:   ZVAL_DEREF(array_ptr);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "4465:  zval *key = NULL;",
          "4467:  array = array_ref = EX_VAR(opline->op1.var);",
          "4471:  if (opline->extended_value & ZEND_FE_FETCH_WITH_KEY) {",
          "4472:   key = EX_VAR((opline+1)->result.var);",
          "4473:  }",
          "",
          "[Removed Lines]",
          "4468:  if (Z_ISREF_P(array)) {",
          "4469:   array = Z_REFVAL_P(array);",
          "4470:  }",
          "",
          "[Added Lines]",
          "4444:  ZVAL_DEREF(array);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "4607:      (opline->extended_value & ZEND_QUICK_SET)) {",
          "4608:   if (Z_TYPE_P(EX_VAR_NUM(opline->op1.var)) != IS_UNDEF) {",
          "4609:    value = EX_VAR_NUM(opline->op1.var);",
          "4613:   } else {",
          "4614:    isset = 0;",
          "4615:   }",
          "",
          "[Removed Lines]",
          "4610:    if (Z_ISREF_P(value)) {",
          "4611:     value = Z_REFVAL_P(value);",
          "4612:    }",
          "",
          "[Added Lines]",
          "4584:    ZVAL_DEREF(value);",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "4687:  zval *offset;",
          "4689:  SAVE_OPLINE();",
          "4691:  offset = GET_OP2_ZVAL_PTR(BP_VAR_R);",
          "4696:  if (Z_TYPE_P(container) == IS_ARRAY && !prop_dim) {",
          "4697:   HashTable *ht;",
          "4698:   int isset = 0;",
          "",
          "[Removed Lines]",
          "4690:  container = GET_OP1_OBJ_ZVAL_PTR(BP_VAR_IS);",
          "4693:  if (Z_ISREF_P(container)) {",
          "4694:   container = Z_REFVAL_P(container);",
          "4695:  }",
          "",
          "[Added Lines]",
          "4662:  container = GET_OP1_OBJ_ZVAL_PTR_DEREF(BP_VAR_IS);",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "5120:  zend_bool result;",
          "5122:  SAVE_OPLINE();",
          "5128:  if (Z_TYPE_P(expr) == IS_OBJECT && Z_OBJ_HT_P(expr)->get_class_entry) {",
          "5129:   result = instanceof_function(Z_OBJCE_P(expr), Z_CE_P(EX_VAR(opline->op2.var)) TSRMLS_CC);",
          "5130:  } else {",
          "",
          "[Removed Lines]",
          "5123:  expr = GET_OP1_ZVAL_PTR(BP_VAR_R);",
          "5125:  if (Z_ISREF_P(expr)) {",
          "5126:   expr = Z_REFVAL_P(expr);",
          "5127:  }",
          "",
          "[Added Lines]",
          "5092:  expr = GET_OP1_ZVAL_PTR_DEREF(BP_VAR_R);",
          "",
          "---------------"
        ],
        "Zend/zend_vm_gen.php||Zend/zend_vm_gen.php": [
          "File: Zend/zend_vm_gen.php -> Zend/zend_vm_gen.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "189:  \"CV\"     => \"_get_zval_ptr_cv_\\\\1(execute_data, opline->op2.var TSRMLS_CC)\",",
          "190: );",
          "192: $op1_get_obj_zval_ptr_ptr = array(",
          "193:  \"ANY\"    => \"get_obj_zval_ptr_ptr(opline->op1_type, &opline->op1, execute_data, &free_op1, \\\\1)\",",
          "194:  \"TMP\"    => \"NULL\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "192: $op1_get_obj_zval_ptr_deref = array(",
          "193:  \"ANY\"    => \"get_obj_zval_ptr(opline->op1_type, &opline->op1, execute_data, &free_op1, \\\\1)\",",
          "194:  \"TMP\"    => \"_get_zval_ptr_tmp(opline->op1.var, execute_data, &free_op1 TSRMLS_CC)\",",
          "195:  \"VAR\"    => \"_get_zval_ptr_var_deref(opline->op1.var, execute_data, &free_op1 TSRMLS_CC)\",",
          "196:  \"CONST\"  => \"opline->op1.zv\",",
          "197:  \"UNUSED\" => \"_get_obj_zval_ptr_unused(TSRMLS_C)\",",
          "198:  \"CV\"     => \"_get_zval_ptr_cv_deref_\\\\1(execute_data, opline->op1.var TSRMLS_CC)\",",
          "199: );",
          "201: $op2_get_obj_zval_ptr_deref = array(",
          "202:  \"ANY\"    => \"get_obj_zval_ptr(opline->op2_type, &opline->op2, execute_data, &free_op2, \\\\1)\",",
          "203:  \"TMP\"    => \"_get_zval_ptr_tmp(opline->op2.var, execute_data, &free_op2 TSRMLS_CC)\",",
          "204:  \"VAR\"    => \"_get_zval_ptr_var_deref(opline->op2.var, execute_data, &free_op2 TSRMLS_CC)\",",
          "205:  \"CONST\"  => \"opline->op2.zv\",",
          "206:  \"UNUSED\" => \"_get_obj_zval_ptr_unused(TSRMLS_C)\",",
          "207:  \"CV\"     => \"_get_zval_ptr_cv_deref_\\\\1(execute_data, opline->op2.var TSRMLS_CC)\",",
          "208: );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "331:   $op1_get_zval_ptr_deref, $op2_get_zval_ptr_deref,",
          "332:   $op1_get_zval_ptr_ptr, $op2_get_zval_ptr_ptr,",
          "333:   $op1_get_obj_zval_ptr, $op2_get_obj_zval_ptr,",
          "334:   $op1_get_obj_zval_ptr_ptr, $op2_get_obj_zval_ptr_ptr,",
          "335:   $op1_is_tmp_free, $op2_is_tmp_free, $op1_free, $op2_free,",
          "336:   $op1_free_op, $op2_free_op, $op1_free_op_if_var, $op2_free_op_if_var,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "352:   $op1_get_obj_zval_ptr_deref, $op2_get_obj_zval_ptr_deref,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "352:    \"/GET_OP2_ZVAL_PTR_PTR\\(([^)]*)\\)/\",",
          "353:    \"/GET_OP1_OBJ_ZVAL_PTR\\(([^)]*)\\)/\",",
          "354:    \"/GET_OP2_OBJ_ZVAL_PTR\\(([^)]*)\\)/\",",
          "355:    \"/GET_OP1_OBJ_ZVAL_PTR_PTR\\(([^)]*)\\)/\",",
          "356:    \"/GET_OP2_OBJ_ZVAL_PTR_PTR\\(([^)]*)\\)/\",",
          "357:    \"/IS_OP1_TMP_FREE\\(\\)/\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "374:    \"/GET_OP1_OBJ_ZVAL_PTR_DEREF\\(([^)]*)\\)/\",",
          "375:    \"/GET_OP2_OBJ_ZVAL_PTR_DEREF\\(([^)]*)\\)/\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "388:    $op2_get_zval_ptr_ptr[$op2],",
          "389:    $op1_get_obj_zval_ptr[$op1],",
          "390:    $op2_get_obj_zval_ptr[$op2],",
          "391:    $op1_get_obj_zval_ptr_ptr[$op1],",
          "392:    $op2_get_obj_zval_ptr_ptr[$op2],",
          "393:    $op1_is_tmp_free[$op1],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "412:    $op1_get_obj_zval_ptr_deref[$op1],",
          "413:    $op2_get_obj_zval_ptr_deref[$op2],",
          "",
          "---------------"
        ],
        "ext/ereg/ereg.c||ext/ereg/ereg.c": [
          "File: ext/ereg/ereg.c -> ext/ereg/ereg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "350:  }",
          "351:  match_len = 1;",
          "355:  }",
          "357:  if (array && err != REG_NOMATCH) {",
          "",
          "[Removed Lines]",
          "353:  if (array && Z_ISREF_P(array)) {",
          "354:   array = Z_REFVAL_P(array);",
          "",
          "[Added Lines]",
          "353:  if (array) {",
          "354:   ZVAL_DEREF_REF(array);",
          "",
          "---------------"
        ],
        "ext/pcre/php_pcre.c||ext/pcre/php_pcre.c": [
          "File: ext/pcre/php_pcre.c -> ext/pcre/php_pcre.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "539:   RETURN_FALSE;",
          "540:  }",
          "544:  }",
          "545:  php_pcre_match_impl(pce, subject, subject_len, return_value, subpats,",
          "546:   global, ZEND_NUM_ARGS() >= 4, flags, start_offset TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "542:  if (subpats && Z_ISREF_P(subpats)) {",
          "543:   subpats = Z_REFVAL_P(subpats);",
          "",
          "[Added Lines]",
          "542:  if (subpats) {",
          "543:   ZVAL_DEREF_REF(subpats);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1392:   }",
          "1393:  }",
          "1394:  if (ZEND_NUM_ARGS() > 4) {",
          "1398:   zval_dtor(zcount);",
          "1399:   ZVAL_LONG(zcount, replace_count);",
          "1400:  }",
          "",
          "[Removed Lines]",
          "1395:   if (Z_ISREF_P(zcount)) {",
          "1396:    zcount = Z_REFVAL_P(zcount);",
          "1397:   }",
          "",
          "[Added Lines]",
          "1395:   ZVAL_DEREF_REF(zcount);",
          "",
          "---------------"
        ],
        "ext/standard/array.c||ext/standard/array.c": [
          "File: ext/standard/array.c -> ext/standard/array.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "288:     zend_hash_move_forward_ex(Z_ARRVAL_P(array), &pos)",
          "289:    ) {",
          "290:     Z_ARRVAL_P(array)->nApplyCount++;",
          "294:     cnt += php_count_recursive(element, COUNT_RECURSIVE TSRMLS_CC);",
          "295:     Z_ARRVAL_P(array)->nApplyCount--;",
          "296:    }",
          "",
          "[Removed Lines]",
          "291:     if (Z_ISREF_P(element)) {",
          "292:      element = Z_REFVAL_P(element);",
          "293:     }",
          "",
          "[Added Lines]",
          "291:     ZVAL_DEREF(element);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "421:  fval = &f->val;",
          "422:  sval = &s->val;",
          "432:  ZVAL_COPY_VALUE(&first, fval);",
          "433:  ZVAL_COPY_VALUE(&second, sval);",
          "",
          "[Removed Lines]",
          "424:  if (Z_ISREF_P(fval)) {",
          "425:   fval = Z_REFVAL_P(fval);",
          "426:  }",
          "428:  if (Z_ISREF_P(sval)) {",
          "429:   sval = Z_REFVAL_P(sval);",
          "430:  }",
          "",
          "[Added Lines]",
          "422:  ZVAL_DEREF(fval);",
          "423:  ZVAL_DEREF(sval);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1462: {",
          "1463:  zval *value_ptr, data;",
          "1468:  if (Z_TYPE_P(entry) == IS_STRING) {",
          "1469:   if ((value_ptr = zend_hash_find_ind(eg_active_symbol_table, Z_STR_P(entry))) != NULL) {",
          "1470:    ZVAL_DUP(&data, value_ptr);",
          "",
          "[Removed Lines]",
          "1465:  if (Z_ISREF_P(entry)) {",
          "1466:   entry = Z_REFVAL_P(entry);",
          "1467:  }",
          "",
          "[Added Lines]",
          "1457:  ZVAL_DEREF(entry);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1583:  zend_hash_internal_pointer_reset_ex(Z_ARRVAL_P(keys), &pos);",
          "1584:  while ((entry = zend_hash_get_current_data_ex(Z_ARRVAL_P(keys), &pos)) != NULL) {",
          "1590:   if (Z_TYPE_P(entry) == IS_LONG) {",
          "1591:    zval_add_ref(val);",
          "1592:    zend_hash_index_update(Z_ARRVAL_P(return_value), Z_LVAL_P(entry), val);",
          "",
          "[Removed Lines]",
          "1586:   if (UNEXPECTED(Z_ISREF_P(entry))) {",
          "1587:    entry = Z_REFVAL_P(entry);",
          "1588:   }",
          "",
          "[Added Lines]",
          "1575:   ZVAL_DEREF(entry);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2280:      HashTable *thash;",
          "2281:      zval tmp;",
          "2289:      thash = Z_TYPE_P(dest_zval) == IS_ARRAY ? Z_ARRVAL_P(dest_zval) : NULL;",
          "2290:      if ((thash && thash->nApplyCount > 1) || (src_entry == dest_entry && Z_ISREF_P(dest_entry) && (Z_REFCOUNT_P(dest_entry) % 2))) {",
          "2291:       php_error_docref(NULL TSRMLS_CC, E_WARNING, \"recursion detected\");",
          "",
          "[Removed Lines]",
          "2283:      if (Z_ISREF_P(src_zval)) {",
          "2284:       src_zval = Z_REFVAL_P(src_zval);",
          "2285:      }",
          "2286:      if (Z_ISREF_P(dest_zval)) {",
          "2287:       dest_zval = Z_REFVAL_P(dest_zval);",
          "2288:      }",
          "",
          "[Added Lines]",
          "2269:      ZVAL_DEREF(src_zval);",
          "2270:      ZVAL_DEREF(dest_zval);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2369:       zend_hash_move_forward_ex(src, &pos)) {",
          "2371:   src_zval = src_entry;",
          "2375:   switch (zend_hash_get_current_key_ex(src, &string_key, &num_key, 0, &pos)) {",
          "2376:    case HASH_KEY_IS_STRING:",
          "2377:     if (Z_TYPE_P(src_zval) != IS_ARRAY ||",
          "",
          "[Removed Lines]",
          "2372:   if (Z_ISREF_P(src_zval)) {",
          "2373:    src_zval = Z_REFVAL_P(src_zval);",
          "2374:   }",
          "",
          "[Added Lines]",
          "2354:   ZVAL_DEREF(src_zval);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2405:   }",
          "2407:   dest_zval = dest_entry;",
          "2411:   if (Z_ARRVAL_P(dest_zval)->nApplyCount > 1 ||",
          "2412:       Z_ARRVAL_P(src_zval)->nApplyCount > 1 ||",
          "2413:       (Z_ISREF_P(src_entry) && Z_ISREF_P(dest_entry) && Z_REF_P(src_entry) == Z_REF_P(dest_entry) && (Z_REFCOUNT_P(dest_entry) % 2))) {",
          "",
          "[Removed Lines]",
          "2408:   if (Z_ISREF_P(dest_zval)) {",
          "2409:    dest_zval = Z_REFVAL_P(dest_zval);",
          "2410:   }",
          "",
          "[Added Lines]",
          "2388:   ZVAL_DEREF(dest_zval);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2444:  for (i = 0; i < argc; i++) {",
          "2445:   zval *arg = args + i;",
          "2450:   if (Z_TYPE_P(arg) != IS_ARRAY) {",
          "2451:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Argument #%d is not an array\", i + 1);",
          "2452:    RETURN_NULL();",
          "",
          "[Removed Lines]",
          "2447:   if (Z_ISREF_P(arg)) {",
          "2448:    arg = Z_REFVAL_P(arg);",
          "2449:   }",
          "",
          "[Added Lines]",
          "2425:   ZVAL_DEREF(arg);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2464:  for (i = 0; i < argc; i++) {",
          "2465:   zval *arg = args + i;",
          "2470:   if (!replace) {",
          "2471:    php_array_merge(Z_ARRVAL_P(return_value), Z_ARRVAL_P(arg), recursive TSRMLS_CC);",
          "",
          "[Removed Lines]",
          "2467:   if (Z_ISREF_P(arg)) {",
          "2468:    arg = Z_REFVAL_P(arg);",
          "2469:   }",
          "",
          "[Added Lines]",
          "2443:   ZVAL_DEREF(arg);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "3966:  for (i = 0; i < argc; i++) {",
          "3967:   zval *arg = &args[i];",
          "3972:   if (Z_TYPE_P(arg) == IS_ARRAY) {",
          "",
          "[Removed Lines]",
          "3969:   if (Z_ISREF_P(arg)) {",
          "3970:    arg = Z_REFVAL_P(arg);",
          "3971:   }",
          "",
          "[Added Lines]",
          "3943:   ZVAL_DEREF(arg);",
          "",
          "---------------"
        ],
        "ext/standard/proc_open.c||ext/standard/proc_open.c": [
          "File: ext/standard/proc_open.c -> ext/standard/proc_open.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "897:  proc->env = env;",
          "899:  if (pipes != NULL) {",
          "902:   zval_dtor(pipes);",
          "903:  }",
          "",
          "[Removed Lines]",
          "900:   ZEND_ASSERT(Z_ISREF_P(pipes));",
          "901:   pipes = Z_REFVAL_P(pipes);",
          "",
          "[Added Lines]",
          "900:   ZVAL_DEREF_REF(pipes);",
          "",
          "---------------"
        ],
        "ext/standard/string.c||ext/standard/string.c": [
          "File: ext/standard/string.c -> ext/standard/string.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2502:      zval *repl_str;",
          "2503:      zval zrepl;",
          "2509:      if (Z_TYPE_P(tmp_repl) != IS_STRING) {",
          "2510:       ZVAL_DUP(&zrepl, tmp_repl);",
          "2511:       convert_to_string(&zrepl);",
          "",
          "[Removed Lines]",
          "2505:      if (Z_ISREF_P(tmp_repl)) {",
          "2506:       tmp_repl = Z_REFVAL_P(tmp_repl);",
          "2507:      }",
          "",
          "[Added Lines]",
          "2505:      ZVAL_DEREF(tmp_repl);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4428:   array_init(&ret);",
          "4429:   sapi_module.treat_data(PARSE_STRING, res, &ret TSRMLS_CC);",
          "4434:   zval_dtor(arrayArg);",
          "4435:   ZVAL_COPY_VALUE(arrayArg, &ret);",
          "4436:  }",
          "",
          "[Removed Lines]",
          "4431:   if (Z_ISREF_P(arrayArg)) {",
          "4432:    arrayArg = Z_REFVAL_P(arrayArg);",
          "4433:   }",
          "",
          "[Added Lines]",
          "4428:   ZVAL_DEREF(arrayArg);",
          "",
          "---------------"
        ],
        "ext/standard/type.c||ext/standard/type.c": [
          "File: ext/standard/type.c -> ext/standard/type.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "98:   return;",
          "99:  }",
          "105:  if (!strcasecmp(type, \"integer\")) {",
          "106:   convert_to_long(var);",
          "107:  } else if (!strcasecmp(type, \"int\")) {",
          "",
          "[Removed Lines]",
          "101:  if (Z_TYPE_P(var)) {",
          "102:   var = Z_REFVAL_P(var);",
          "103:  }",
          "",
          "[Added Lines]",
          "101:  ZVAL_DEREF_REF(var);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "224:   RETURN_FALSE;",
          "225:  }",
          "230:  if (Z_TYPE_P(arg) == type) {",
          "231:   if (type == IS_OBJECT) {",
          "232:    zend_class_entry *ce;",
          "",
          "[Removed Lines]",
          "227:  if (Z_ISREF_P(arg)) {",
          "228:   arg = Z_REFVAL_P(arg);",
          "229:  }",
          "",
          "[Added Lines]",
          "224:  ZVAL_DEREF(arg);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "392:   check_flags |= IS_CALLABLE_CHECK_SYNTAX_ONLY;",
          "393:  }",
          "394:  if (ZEND_NUM_ARGS() > 2) {",
          "397:   }",
          "398:   retval = zend_is_callable_ex(var, NULL, check_flags, &name, NULL, &error TSRMLS_CC);",
          "399:   zval_dtor(callable_name);",
          "",
          "[Removed Lines]",
          "395:   if (callable_name && Z_ISREF_P(callable_name)) {",
          "396:    callable_name = Z_REFVAL_P(callable_name);",
          "",
          "[Added Lines]",
          "390:   if (callable_name) {",
          "391:    ZVAL_DEREF(callable_name);",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "398:   return 0;",
          "399:  }",
          "405:  if (Z_OBJCE_P(rval) != PHP_IC_ENTRY &&",
          "406:   zend_hash_str_exists(&Z_OBJCE_P(rval)->function_table, \"__wakeup\", sizeof(\"__wakeup\")-1)) {",
          "407:   ZVAL_STRINGL(&fname, \"__wakeup\", sizeof(\"__wakeup\") - 1);",
          "",
          "[Removed Lines]",
          "401:  if (Z_ISREF_P(rval)) {",
          "402:   rval = Z_REFVAL_P(rval);",
          "403:  }",
          "",
          "[Added Lines]",
          "401:  ZVAL_DEREF(rval);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "442:  start = cursor;",
          "446: {",
          "447:  YYCTYPE yych;",
          "448:  static const unsigned char yybm[] = {",
          "",
          "[Removed Lines]",
          "445: #line 446 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "442: #line 443 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "502:  yych = *(YYMARKER = ++YYCURSOR);",
          "503:  if (yych == ':') goto yy95;",
          "504: yy3:",
          "506:  { return 0; }",
          "508: yy4:",
          "509:  yych = *(YYMARKER = ++YYCURSOR);",
          "510:  if (yych == ':') goto yy89;",
          "",
          "[Removed Lines]",
          "505: #line 792 \"ext/standard/var_unserializer.re\"",
          "507: #line 508 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "502: #line 789 \"ext/standard/var_unserializer.re\"",
          "504: #line 505 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "547:  goto yy3;",
          "548: yy14:",
          "549:  ++YYCURSOR;",
          "551:  {",
          "553:  php_error_docref(NULL TSRMLS_CC, E_NOTICE, \"Unexpected end of serialized data\");",
          "555: }",
          "557: yy16:",
          "558:  yych = *++YYCURSOR;",
          "559:  goto yy3;",
          "",
          "[Removed Lines]",
          "550: #line 786 \"ext/standard/var_unserializer.re\"",
          "556: #line 557 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "547: #line 783 \"ext/standard/var_unserializer.re\"",
          "553: #line 554 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "583:  yych = *++YYCURSOR;",
          "584:  if (yych != '\"') goto yy18;",
          "585:  ++YYCURSOR;",
          "587:  {",
          "588:  size_t len, len2, len3, maxlen;",
          "589:  long elements;",
          "",
          "[Removed Lines]",
          "586: #line 647 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "583: #line 644 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "723:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "724: }",
          "726: yy25:",
          "727:  yych = *++YYCURSOR;",
          "728:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "725: #line 726 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "722: #line 723 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "747:  yych = *++YYCURSOR;",
          "748:  if (yych != '\"') goto yy18;",
          "749:  ++YYCURSOR;",
          "751:  {",
          "",
          "[Removed Lines]",
          "750: #line 639 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "747: #line 636 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "755:  return object_common2(UNSERIALIZE_PASSTHRU,",
          "756:    object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR));",
          "757: }",
          "759: yy32:",
          "760:  yych = *++YYCURSOR;",
          "761:  if (yych == '+') goto yy33;",
          "",
          "[Removed Lines]",
          "758: #line 759 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "755: #line 756 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "776:  yych = *++YYCURSOR;",
          "777:  if (yych != '{') goto yy18;",
          "778:  ++YYCURSOR;",
          "780:  {",
          "781:  long elements = parse_iv(start + 2);",
          "",
          "[Removed Lines]",
          "779: #line 618 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "776: #line 615 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "798:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "799: }",
          "801: yy39:",
          "802:  yych = *++YYCURSOR;",
          "803:  if (yych == '+') goto yy40;",
          "",
          "[Removed Lines]",
          "800: #line 801 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "797: #line 798 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "818:  yych = *++YYCURSOR;",
          "819:  if (yych != '\"') goto yy18;",
          "820:  ++YYCURSOR;",
          "822:  {",
          "823:  size_t len, maxlen;",
          "",
          "[Removed Lines]",
          "821: #line 588 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "818: #line 585 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "848:  efree(str);",
          "849:  return 1;",
          "850: }",
          "852: yy46:",
          "853:  yych = *++YYCURSOR;",
          "854:  if (yych == '+') goto yy47;",
          "",
          "[Removed Lines]",
          "851: #line 852 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "848: #line 849 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "869:  yych = *++YYCURSOR;",
          "870:  if (yych != '\"') goto yy18;",
          "871:  ++YYCURSOR;",
          "873:  {",
          "874:  size_t len, maxlen;",
          "875:  char *str;",
          "",
          "[Removed Lines]",
          "872: #line 561 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "869: #line 558 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "896:  ZVAL_STRINGL(rval, str, len);",
          "897:  return 1;",
          "898: }",
          "900: yy53:",
          "901:  yych = *++YYCURSOR;",
          "902:  if (yych <= '/') {",
          "",
          "[Removed Lines]",
          "899: #line 900 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "896: #line 897 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "984:  }",
          "985: yy63:",
          "986:  ++YYCURSOR;",
          "988:  {",
          "989: #if SIZEOF_LONG == 4",
          "990: use_double:",
          "",
          "[Removed Lines]",
          "987: #line 552 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "984: #line 549 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "993:  ZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));",
          "994:  return 1;",
          "995: }",
          "997: yy65:",
          "998:  yych = *++YYCURSOR;",
          "999:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "996: #line 997 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "993: #line 994 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1052:  yych = *++YYCURSOR;",
          "1053:  if (yych != ';') goto yy18;",
          "1054:  ++YYCURSOR;",
          "1056:  {",
          "",
          "[Removed Lines]",
          "1055: #line 536 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1052: #line 533 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1069:  return 1;",
          "1070: }",
          "1072: yy76:",
          "1073:  yych = *++YYCURSOR;",
          "1074:  if (yych == 'N') goto yy73;",
          "",
          "[Removed Lines]",
          "1071: #line 1072 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1068: #line 1069 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1095:  if (yych <= '9') goto yy79;",
          "1096:  if (yych != ';') goto yy18;",
          "1097:  ++YYCURSOR;",
          "1099:  {",
          "1100: #if SIZEOF_LONG == 4",
          "1101:  int digits = YYCURSOR - start - 3;",
          "",
          "[Removed Lines]",
          "1098: #line 510 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1095: #line 507 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1121:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1122:  return 1;",
          "1123: }",
          "1125: yy83:",
          "1126:  yych = *++YYCURSOR;",
          "1127:  if (yych <= '/') goto yy18;",
          "",
          "[Removed Lines]",
          "1124: #line 1125 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1121: #line 1122 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1129:  yych = *++YYCURSOR;",
          "1130:  if (yych != ';') goto yy18;",
          "1131:  ++YYCURSOR;",
          "1133:  {",
          "1135:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1136:  return 1;",
          "1137: }",
          "1139: yy87:",
          "1140:  ++YYCURSOR;",
          "1142:  {",
          "1144:  ZVAL_NULL(rval);",
          "1145:  return 1;",
          "1146: }",
          "1148: yy89:",
          "1149:  yych = *++YYCURSOR;",
          "1150:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1132: #line 504 \"ext/standard/var_unserializer.re\"",
          "1138: #line 1139 \"ext/standard/var_unserializer.c\"",
          "1141: #line 498 \"ext/standard/var_unserializer.re\"",
          "1147: #line 1148 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1129: #line 501 \"ext/standard/var_unserializer.re\"",
          "1135: #line 1136 \"ext/standard/var_unserializer.c\"",
          "1138: #line 495 \"ext/standard/var_unserializer.re\"",
          "1144: #line 1145 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1167:  if (yych <= '9') goto yy91;",
          "1168:  if (yych != ';') goto yy18;",
          "1169:  ++YYCURSOR;",
          "1171:  {",
          "1172:  long id;",
          "",
          "[Removed Lines]",
          "1170: #line 475 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1167: #line 472 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1191:  return 1;",
          "1192: }",
          "1194: yy95:",
          "1195:  yych = *++YYCURSOR;",
          "1196:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1193: #line 1194 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1190: #line 1191 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1213:  if (yych <= '9') goto yy97;",
          "1214:  if (yych != ';') goto yy18;",
          "1215:  ++YYCURSOR;",
          "1217:  {",
          "1218:  long id;",
          "",
          "[Removed Lines]",
          "1216: #line 450 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1213: #line 447 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1239:  return 1;",
          "1240: }",
          "1242: }",
          "1246:  return 0;",
          "",
          "[Removed Lines]",
          "1241: #line 1242 \"ext/standard/var_unserializer.c\"",
          "1243: #line 794 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1238: #line 1239 \"ext/standard/var_unserializer.c\"",
          "1240: #line 791 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "402:   return 0;",
          "403:  }",
          "409:  if (Z_OBJCE_P(rval) != PHP_IC_ENTRY &&",
          "410:   zend_hash_str_exists(&Z_OBJCE_P(rval)->function_table, \"__wakeup\", sizeof(\"__wakeup\")-1)) {",
          "411:   ZVAL_STRINGL(&fname, \"__wakeup\", sizeof(\"__wakeup\") - 1);",
          "",
          "[Removed Lines]",
          "405:  if (Z_ISREF_P(rval)) {",
          "406:   rval = Z_REFVAL_P(rval);",
          "407:  }",
          "",
          "[Added Lines]",
          "405:  ZVAL_DEREF(rval);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "be54eb7db10c6aa838cef969822a5ae0f4e605e3",
      "candidate_info": {
        "commit_hash": "be54eb7db10c6aa838cef969822a5ae0f4e605e3",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/be54eb7db10c6aa838cef969822a5ae0f4e605e3",
        "files": [
          "NEWS",
          "Zend/zend_hash.c",
          "Zend/zend_hash.h",
          "ext/soap/tests/bug70211.phpt",
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re"
        ],
        "message": "Fixed bug #70211 (php 7 ZEND_HASH_IF_FULL_DO_RESIZE use after free)",
        "before_after_code_files": [
          "Zend/zend_hash.c||Zend/zend_hash.c",
          "Zend/zend_hash.h||Zend/zend_hash.h",
          "ext/soap/tests/bug70211.phpt||ext/soap/tests/bug70211.phpt",
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ],
          "candidate": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ]
        }
      },
      "candidate_diff": {
        "Zend/zend_hash.c||Zend/zend_hash.c": [
          "File: Zend/zend_hash.c -> Zend/zend_hash.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "807:  }",
          "808: }",
          "810: ZEND_API int ZEND_FASTCALL zend_hash_rehash(HashTable *ht)",
          "811: {",
          "812:  Bucket *p;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "810: ZEND_API int ZEND_FASTCALL zend_hash_resize(HashTable *ht, uint32_t size) {",
          "811:  void *old_data = HT_GET_DATA_ADDR(ht);",
          "812:  Bucket *old_buckets = ht->arData;",
          "814:  HANDLE_BLOCK_INTERRUPTIONS();",
          "815:  ht->nTableSize = zend_hash_check_size(size);",
          "816:  ht->nTableMask = -ht->nTableSize;",
          "817:  HT_SET_DATA_ADDR(ht, pemalloc(HT_SIZE(ht), ht->u.flags & HASH_FLAG_PERSISTENT));",
          "818:  memcpy(ht->arData, old_buckets, sizeof(Bucket) * ht->nNumUsed);",
          "819:  pefree(old_data, ht->u.flags & HASH_FLAG_PERSISTENT);",
          "820:  zend_hash_rehash(ht);",
          "821:  HANDLE_UNBLOCK_INTERRUPTIONS();",
          "822: }",
          "",
          "---------------"
        ],
        "Zend/zend_hash.h||Zend/zend_hash.h": [
          "File: Zend/zend_hash.h -> Zend/zend_hash.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "212: #define zend_hash_next_free_element(ht) \\",
          "213:  (ht)->nNextFreeElement",
          "215: ZEND_API int ZEND_FASTCALL zend_hash_rehash(HashTable *ht);",
          "217: ZEND_API HashTable* ZEND_FASTCALL zend_array_dup(HashTable *source);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "215: ZEND_API int ZEND_FASTCALL zend_hash_resize(HashTable *ht, uint32_t size);",
          "",
          "---------------"
        ],
        "ext/soap/tests/bug70211.phpt||ext/soap/tests/bug70211.phpt": [
          "File: ext/soap/tests/bug70211.phpt -> ext/soap/tests/bug70211.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #70211 (php 7 ZEND_HASH_IF_FULL_DO_RESIZE use after free)",
          "3: --FILE--",
          "4: <?php",
          "6: $addr = 0x4141414141414141;",
          "8: function ptr2str($ptr)",
          "9: {",
          "10:     $out = \"\";",
          "11:     for ($i=0; $i<8; $i++) {",
          "12:         $out .= chr($ptr & 0xff);",
          "13:         $ptr >>= 8;",
          "14:     }",
          "15:     return $out;",
          "16: }",
          "18: $sf = new SoapFault('1', 'string', 'detail', 'header','line', str_repeat(\"A\",232).ptr2str($addr));",
          "19: $ob = unserialize(\"a:3:{i:0;\".serialize($sf).'i:1;r:12;i:2;r:10;}');",
          "21: var_dump($ob[1]);",
          "22: ?>",
          "23: --EXPECT--",
          "24: string(6) \"detail\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "470: {",
          "471:  zval retval;",
          "472:  zval fname;",
          "474:  if (Z_TYPE_P(rval) != IS_OBJECT) {",
          "475:   return 0;",
          "476:  }",
          "480:   return 0;",
          "481:  }",
          "",
          "[Removed Lines]",
          "479:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_OBJPROP_P(rval), elements, 1)) {",
          "",
          "[Added Lines]",
          "473:  HashTable *ht = Z_OBJPROP_P(rval);",
          "479:  zend_hash_resize(ht, zend_hash_num_elements(ht) + elements);",
          "480:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, ht, elements, 1)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "528:  start = cursor;",
          "532: {",
          "533:  YYCTYPE yych;",
          "534:  static const unsigned char yybm[] = {",
          "",
          "[Removed Lines]",
          "531: #line 532 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "532: #line 533 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "588:  yych = *(YYMARKER = ++YYCURSOR);",
          "589:  if (yych == ':') goto yy95;",
          "590: yy3:",
          "592:  { return 0; }",
          "594: yy4:",
          "595:  yych = *(YYMARKER = ++YYCURSOR);",
          "596:  if (yych == ':') goto yy89;",
          "",
          "[Removed Lines]",
          "591: #line 879 \"ext/standard/var_unserializer.re\"",
          "593: #line 594 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "592: #line 880 \"ext/standard/var_unserializer.re\"",
          "594: #line 595 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "633:  goto yy3;",
          "634: yy14:",
          "635:  ++YYCURSOR;",
          "637:  {",
          "639:  php_error_docref(NULL, E_NOTICE, \"Unexpected end of serialized data\");",
          "641: }",
          "643: yy16:",
          "644:  yych = *++YYCURSOR;",
          "645:  goto yy3;",
          "",
          "[Removed Lines]",
          "636: #line 873 \"ext/standard/var_unserializer.re\"",
          "642: #line 643 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "637: #line 874 \"ext/standard/var_unserializer.re\"",
          "643: #line 644 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "669:  yych = *++YYCURSOR;",
          "670:  if (yych != '\"') goto yy18;",
          "671:  ++YYCURSOR;",
          "673:  {",
          "674:  size_t len, len2, len3, maxlen;",
          "675:  zend_long elements;",
          "",
          "[Removed Lines]",
          "672: #line 728 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "673: #line 729 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "815:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "816: }",
          "818: yy25:",
          "819:  yych = *++YYCURSOR;",
          "820:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "817: #line 818 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "818: #line 819 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "839:  yych = *++YYCURSOR;",
          "840:  if (yych != '\"') goto yy18;",
          "841:  ++YYCURSOR;",
          "843:  {",
          "",
          "[Removed Lines]",
          "842: #line 720 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "843: #line 721 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "847:  return object_common2(UNSERIALIZE_PASSTHRU,",
          "848:    object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR));",
          "849: }",
          "851: yy32:",
          "852:  yych = *++YYCURSOR;",
          "853:  if (yych == '+') goto yy33;",
          "",
          "[Removed Lines]",
          "850: #line 851 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "851: #line 852 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "868:  yych = *++YYCURSOR;",
          "869:  if (yych != '{') goto yy18;",
          "870:  ++YYCURSOR;",
          "872:  {",
          "873:  zend_long elements = parse_iv(start + 2);",
          "",
          "[Removed Lines]",
          "871: #line 699 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "872: #line 700 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "890:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "891: }",
          "893: yy39:",
          "894:  yych = *++YYCURSOR;",
          "895:  if (yych == '+') goto yy40;",
          "",
          "[Removed Lines]",
          "892: #line 893 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "893: #line 894 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "910:  yych = *++YYCURSOR;",
          "911:  if (yych != '\"') goto yy18;",
          "912:  ++YYCURSOR;",
          "914:  {",
          "915:  size_t len, maxlen;",
          "916:  zend_string *str;",
          "",
          "[Removed Lines]",
          "913: #line 671 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "914: #line 672 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "938:  ZVAL_STR(rval, str);",
          "939:  return 1;",
          "940: }",
          "942: yy46:",
          "943:  yych = *++YYCURSOR;",
          "944:  if (yych == '+') goto yy47;",
          "",
          "[Removed Lines]",
          "941: #line 942 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "942: #line 943 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "959:  yych = *++YYCURSOR;",
          "960:  if (yych != '\"') goto yy18;",
          "961:  ++YYCURSOR;",
          "963:  {",
          "964:  size_t len, maxlen;",
          "965:  char *str;",
          "",
          "[Removed Lines]",
          "962: #line 644 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "963: #line 645 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "986:  ZVAL_STRINGL(rval, str, len);",
          "987:  return 1;",
          "988: }",
          "990: yy53:",
          "991:  yych = *++YYCURSOR;",
          "992:  if (yych <= '/') {",
          "",
          "[Removed Lines]",
          "989: #line 990 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "990: #line 991 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1074:  }",
          "1075: yy63:",
          "1076:  ++YYCURSOR;",
          "1078:  {",
          "1079: #if SIZEOF_ZEND_LONG == 4",
          "1080: use_double:",
          "",
          "[Removed Lines]",
          "1077: #line 635 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1078: #line 636 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1083:  ZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));",
          "1084:  return 1;",
          "1085: }",
          "1087: yy65:",
          "1088:  yych = *++YYCURSOR;",
          "1089:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1086: #line 1087 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1087: #line 1088 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1142:  yych = *++YYCURSOR;",
          "1143:  if (yych != ';') goto yy18;",
          "1144:  ++YYCURSOR;",
          "1146:  {",
          "",
          "[Removed Lines]",
          "1145: #line 619 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1146: #line 620 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1159:  return 1;",
          "1160: }",
          "1162: yy76:",
          "1163:  yych = *++YYCURSOR;",
          "1164:  if (yych == 'N') goto yy73;",
          "",
          "[Removed Lines]",
          "1161: #line 1162 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1162: #line 1163 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1185:  if (yych <= '9') goto yy79;",
          "1186:  if (yych != ';') goto yy18;",
          "1187:  ++YYCURSOR;",
          "1189:  {",
          "1190: #if SIZEOF_ZEND_LONG == 4",
          "1191:  int digits = YYCURSOR - start - 3;",
          "",
          "[Removed Lines]",
          "1188: #line 593 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1189: #line 594 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1211:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1212:  return 1;",
          "1213: }",
          "1215: yy83:",
          "1216:  yych = *++YYCURSOR;",
          "1217:  if (yych <= '/') goto yy18;",
          "",
          "[Removed Lines]",
          "1214: #line 1215 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1215: #line 1216 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1219:  yych = *++YYCURSOR;",
          "1220:  if (yych != ';') goto yy18;",
          "1221:  ++YYCURSOR;",
          "1223:  {",
          "1225:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1226:  return 1;",
          "1227: }",
          "1229: yy87:",
          "1230:  ++YYCURSOR;",
          "1232:  {",
          "1234:  ZVAL_NULL(rval);",
          "1235:  return 1;",
          "1236: }",
          "1238: yy89:",
          "1239:  yych = *++YYCURSOR;",
          "1240:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1222: #line 587 \"ext/standard/var_unserializer.re\"",
          "1228: #line 1229 \"ext/standard/var_unserializer.c\"",
          "1231: #line 581 \"ext/standard/var_unserializer.re\"",
          "1237: #line 1238 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1223: #line 588 \"ext/standard/var_unserializer.re\"",
          "1229: #line 1230 \"ext/standard/var_unserializer.c\"",
          "1232: #line 582 \"ext/standard/var_unserializer.re\"",
          "1238: #line 1239 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1257:  if (yych <= '9') goto yy91;",
          "1258:  if (yych != ';') goto yy18;",
          "1259:  ++YYCURSOR;",
          "1261:  {",
          "1262:  zend_long id;",
          "",
          "[Removed Lines]",
          "1260: #line 558 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1261: #line 559 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1281:  return 1;",
          "1282: }",
          "1284: yy95:",
          "1285:  yych = *++YYCURSOR;",
          "1286:  if (yych <= ',') {",
          "",
          "[Removed Lines]",
          "1283: #line 1284 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "1284: #line 1285 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1303:  if (yych <= '9') goto yy97;",
          "1304:  if (yych != ';') goto yy18;",
          "1305:  ++YYCURSOR;",
          "1307:  {",
          "1308:  zend_long id;",
          "",
          "[Removed Lines]",
          "1306: #line 536 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1307: #line 537 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1326:  return 1;",
          "1327: }",
          "1329: }",
          "1333:  return 0;",
          "",
          "[Removed Lines]",
          "1328: #line 1329 \"ext/standard/var_unserializer.c\"",
          "1330: #line 881 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1329: #line 1330 \"ext/standard/var_unserializer.c\"",
          "1331: #line 882 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "474: {",
          "475:  zval retval;",
          "476:  zval fname;",
          "478:  if (Z_TYPE_P(rval) != IS_OBJECT) {",
          "479:   return 0;",
          "480:  }",
          "484:   return 0;",
          "485:  }",
          "",
          "[Removed Lines]",
          "483:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_OBJPROP_P(rval), elements, 1)) {",
          "",
          "[Added Lines]",
          "477:  HashTable *ht = Z_OBJPROP_P(rval);",
          "483:  zend_hash_resize(ht, zend_hash_num_elements(ht) + elements);",
          "484:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, ht, elements, 1)) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5fbf3be13b58b81de8fb422ca58dd95d4023fb88",
      "candidate_info": {
        "commit_hash": "5fbf3be13b58b81de8fb422ca58dd95d4023fb88",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/5fbf3be13b58b81de8fb422ca58dd95d4023fb88",
        "files": [
          "ext/standard/var_unserializer.c"
        ],
        "message": "Re-add var_unserializer.c",
        "before_after_code_files": [
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c"
          ],
          "candidate": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: #line 1 \"ext/standard/var_unserializer.re\"",
          "4:   +----------------------------------------------------------------------+",
          "5:   | PHP Version 7                                                        |",
          "6:   +----------------------------------------------------------------------+",
          "7:   | Copyright (c) 1997-2016 The PHP Group                                |",
          "8:   +----------------------------------------------------------------------+",
          "9:   | This source file is subject to version 3.01 of the PHP license,      |",
          "10:   | that is bundled with this package in the file LICENSE, and is        |",
          "11:   | available through the world-wide-web at the following url:           |",
          "12:   | http://www.php.net/license/3_01.txt                                  |",
          "13:   | If you did not receive a copy of the PHP license and are unable to   |",
          "14:   | obtain it through the world-wide-web, please send a note to          |",
          "15:   | license@php.net so we can mail you a copy immediately.               |",
          "16:   +----------------------------------------------------------------------+",
          "17:   | Author: Sascha Schumann <sascha@schumann.cx>                         |",
          "18:   +----------------------------------------------------------------------+",
          "23: #include \"php.h\"",
          "24: #include \"ext/standard/php_var.h\"",
          "25: #include \"php_incomplete_class.h\"",
          "26: #include \"zend_portability.h\"",
          "28: struct php_unserialize_data {",
          "29:  void *first;",
          "30:  void *last;",
          "31:  void *first_dtor;",
          "32:  void *last_dtor;",
          "33:  HashTable *allowed_classes;",
          "34: };",
          "36: PHPAPI php_unserialize_data_t php_var_unserialize_init() {",
          "37:  php_unserialize_data_t d;",
          "39:  if (BG(serialize_lock) || !BG(unserialize).level) {",
          "40:   d = ecalloc(1, sizeof(struct php_unserialize_data));",
          "41:   if (!BG(serialize_lock)) {",
          "42:    BG(unserialize).data = d;",
          "43:    BG(unserialize).level = 1;",
          "44:   }",
          "45:  } else {",
          "46:   d = BG(unserialize).data;",
          "47:   ++BG(unserialize).level;",
          "48:  }",
          "49:  return d;",
          "50: }",
          "52: PHPAPI void php_var_unserialize_destroy(php_unserialize_data_t d) {",
          "54:  if (BG(serialize_lock) || BG(unserialize).level == 1) {",
          "55:   var_destroy(&d);",
          "56:   efree(d);",
          "57:  }",
          "58:  if (!BG(serialize_lock) && !--BG(unserialize).level) {",
          "59:   BG(unserialize).data = NULL;",
          "60:  }",
          "61: }",
          "63: PHPAPI HashTable *php_var_unserialize_get_allowed_classes(php_unserialize_data_t d) {",
          "64:  return d->allowed_classes;",
          "65: }",
          "66: PHPAPI void php_var_unserialize_set_allowed_classes(php_unserialize_data_t d, HashTable *classes) {",
          "67:  d->allowed_classes = classes;",
          "68: }",
          "72: #define VAR_ENTRIES_MAX 1024",
          "73: #define VAR_ENTRIES_DBG 0",
          "75: typedef struct {",
          "76:  zval *data[VAR_ENTRIES_MAX];",
          "77:  zend_long used_slots;",
          "78:  void *next;",
          "79: } var_entries;",
          "81: typedef struct {",
          "82:  zval data[VAR_ENTRIES_MAX];",
          "83:  zend_long used_slots;",
          "84:  void *next;",
          "85: } var_dtor_entries;",
          "87: static inline void var_push(php_unserialize_data_t *var_hashx, zval *rval)",
          "88: {",
          "89:  var_entries *var_hash = (*var_hashx)->last;",
          "90: #if VAR_ENTRIES_DBG",
          "91:  fprintf(stderr, \"var_push(%ld): %d\\n\", var_hash?var_hash->used_slots:-1L, Z_TYPE_P(rval));",
          "92: #endif",
          "94:  if (!var_hash || var_hash->used_slots == VAR_ENTRIES_MAX) {",
          "95:   var_hash = emalloc(sizeof(var_entries));",
          "96:   var_hash->used_slots = 0;",
          "97:   var_hash->next = 0;",
          "99:   if (!(*var_hashx)->first) {",
          "100:    (*var_hashx)->first = var_hash;",
          "101:   } else {",
          "102:    ((var_entries *) (*var_hashx)->last)->next = var_hash;",
          "103:   }",
          "105:   (*var_hashx)->last = var_hash;",
          "106:  }",
          "108:  var_hash->data[var_hash->used_slots++] = rval;",
          "109: }",
          "111: PHPAPI void var_push_dtor(php_unserialize_data_t *var_hashx, zval *rval)",
          "112: {",
          "113:  zval *tmp_var = var_tmp_var(var_hashx);",
          "114:     if (!tmp_var) {",
          "115:         return;",
          "116:     }",
          "117:  ZVAL_COPY(tmp_var, rval);",
          "118: }",
          "120: PHPAPI zval *var_tmp_var(php_unserialize_data_t *var_hashx)",
          "121: {",
          "122:     var_dtor_entries *var_hash;",
          "124:     if (!var_hashx || !*var_hashx) {",
          "125:         return NULL;",
          "126:     }",
          "128:     var_hash = (*var_hashx)->last_dtor;",
          "129:     if (!var_hash || var_hash->used_slots == VAR_ENTRIES_MAX) {",
          "130:         var_hash = emalloc(sizeof(var_dtor_entries));",
          "131:         var_hash->used_slots = 0;",
          "132:         var_hash->next = 0;",
          "134:         if (!(*var_hashx)->first_dtor) {",
          "135:             (*var_hashx)->first_dtor = var_hash;",
          "136:         } else {",
          "137:             ((var_dtor_entries *) (*var_hashx)->last_dtor)->next = var_hash;",
          "138:         }",
          "140:         (*var_hashx)->last_dtor = var_hash;",
          "141:     }",
          "142:     ZVAL_UNDEF(&var_hash->data[var_hash->used_slots]);",
          "143:     return &var_hash->data[var_hash->used_slots++];",
          "144: }",
          "146: PHPAPI void var_replace(php_unserialize_data_t *var_hashx, zval *ozval, zval *nzval)",
          "147: {",
          "148:  zend_long i;",
          "149:  var_entries *var_hash = (*var_hashx)->first;",
          "150: #if VAR_ENTRIES_DBG",
          "151:  fprintf(stderr, \"var_replace(%ld): %d\\n\", var_hash?var_hash->used_slots:-1L, Z_TYPE_P(nzval));",
          "152: #endif",
          "154:  while (var_hash) {",
          "155:   for (i = 0; i < var_hash->used_slots; i++) {",
          "156:    if (var_hash->data[i] == ozval) {",
          "157:     var_hash->data[i] = nzval;",
          "159:    }",
          "160:   }",
          "161:   var_hash = var_hash->next;",
          "162:  }",
          "163: }",
          "165: static zval *var_access(php_unserialize_data_t *var_hashx, zend_long id)",
          "166: {",
          "167:  var_entries *var_hash = (*var_hashx)->first;",
          "168: #if VAR_ENTRIES_DBG",
          "169:  fprintf(stderr, \"var_access(%ld): %ld\\n\", var_hash?var_hash->used_slots:-1L, id);",
          "170: #endif",
          "172:  while (id >= VAR_ENTRIES_MAX && var_hash && var_hash->used_slots == VAR_ENTRIES_MAX) {",
          "173:   var_hash = var_hash->next;",
          "174:   id -= VAR_ENTRIES_MAX;",
          "175:  }",
          "177:  if (!var_hash) return NULL;",
          "179:  if (id < 0 || id >= var_hash->used_slots) return NULL;",
          "181:  return var_hash->data[id];",
          "182: }",
          "184: PHPAPI void var_destroy(php_unserialize_data_t *var_hashx)",
          "185: {",
          "186:  void *next;",
          "187:  zend_long i;",
          "188:  var_entries *var_hash = (*var_hashx)->first;",
          "189:  var_dtor_entries *var_dtor_hash = (*var_hashx)->first_dtor;",
          "190: #if VAR_ENTRIES_DBG",
          "191:  fprintf(stderr, \"var_destroy(%ld)\\n\", var_hash?var_hash->used_slots:-1L);",
          "192: #endif",
          "194:  while (var_hash) {",
          "195:   next = var_hash->next;",
          "196:   efree_size(var_hash, sizeof(var_entries));",
          "197:   var_hash = next;",
          "198:  }",
          "200:  while (var_dtor_hash) {",
          "201:   for (i = 0; i < var_dtor_hash->used_slots; i++) {",
          "202: #if VAR_ENTRIES_DBG",
          "203:    fprintf(stderr, \"var_destroy dtor(%p, %ld)\\n\", var_dtor_hash->data[i], Z_REFCOUNT_P(var_dtor_hash->data[i]));",
          "204: #endif",
          "205:    zval_ptr_dtor(&var_dtor_hash->data[i]);",
          "206:   }",
          "207:   next = var_dtor_hash->next;",
          "208:   efree_size(var_dtor_hash, sizeof(var_dtor_entries));",
          "209:   var_dtor_hash = next;",
          "210:  }",
          "211: }",
          "215: static zend_string *unserialize_str(const unsigned char **p, size_t len, size_t maxlen)",
          "216: {",
          "217:  size_t i, j;",
          "218:  zend_string *str = zend_string_safe_alloc(1, len, 0, 0);",
          "219:  unsigned char *end = *(unsigned char **)p+maxlen;",
          "221:  if (end < *p) {",
          "222:   zend_string_free(str);",
          "223:   return NULL;",
          "224:  }",
          "226:  for (i = 0; i < len; i++) {",
          "227:   if (*p >= end) {",
          "228:    zend_string_free(str);",
          "229:    return NULL;",
          "230:   }",
          "231:   if (**p != '\\\\') {",
          "232:    ZSTR_VAL(str)[i] = (char)**p;",
          "233:   } else {",
          "234:    unsigned char ch = 0;",
          "236:    for (j = 0; j < 2; j++) {",
          "237:     (*p)++;",
          "238:     if (**p >= '0' && **p <= '9') {",
          "239:      ch = (ch << 4) + (**p -'0');",
          "240:     } else if (**p >= 'a' && **p <= 'f') {",
          "241:      ch = (ch << 4) + (**p -'a'+10);",
          "242:     } else if (**p >= 'A' && **p <= 'F') {",
          "243:      ch = (ch << 4) + (**p -'A'+10);",
          "244:     } else {",
          "245:      zend_string_free(str);",
          "246:      return NULL;",
          "247:     }",
          "248:    }",
          "249:    ZSTR_VAL(str)[i] = (char)ch;",
          "250:   }",
          "251:   (*p)++;",
          "252:  }",
          "253:  ZSTR_VAL(str)[i] = 0;",
          "254:  ZSTR_LEN(str) = i;",
          "255:  return str;",
          "256: }",
          "258: static inline int unserialize_allowed_class(",
          "259:   zend_string *class_name, php_unserialize_data_t *var_hashx)",
          "260: {",
          "261:  HashTable *classes = (*var_hashx)->allowed_classes;",
          "262:  zend_string *lcname;",
          "263:  int res;",
          "264:  ALLOCA_FLAG(use_heap)",
          "266:  if(classes == NULL) {",
          "267:   return 1;",
          "268:  }",
          "269:  if(!zend_hash_num_elements(classes)) {",
          "270:   return 0;",
          "271:  }",
          "273:  ZSTR_ALLOCA_ALLOC(lcname, ZSTR_LEN(class_name), use_heap);",
          "274:  zend_str_tolower_copy(ZSTR_VAL(lcname), ZSTR_VAL(class_name), ZSTR_LEN(class_name));",
          "275:  res = zend_hash_exists(classes, lcname);",
          "276:  ZSTR_ALLOCA_FREE(lcname, use_heap);",
          "277:  return res;",
          "278: }",
          "280: #define YYFILL(n) do { } while (0)",
          "281: #define YYCTYPE unsigned char",
          "282: #define YYCURSOR cursor",
          "283: #define YYLIMIT limit",
          "284: #define YYMARKER marker",
          "287: #line 292 \"ext/standard/var_unserializer.re\"",
          "292: static inline zend_long parse_iv2(const unsigned char *p, const unsigned char **q)",
          "293: {",
          "294:  char cursor;",
          "295:  zend_long result = 0;",
          "296:  int neg = 0;",
          "298:  switch (*p) {",
          "299:   case '-':",
          "300:    neg++;",
          "302:   case '+':",
          "303:    p++;",
          "304:  }",
          "306:  while (1) {",
          "307:   cursor = (char)*p;",
          "308:   if (cursor >= '0' && cursor <= '9') {",
          "309:    result = result * 10 + (size_t)(cursor - (unsigned char)'0');",
          "310:   } else {",
          "311:    break;",
          "312:   }",
          "313:   p++;",
          "314:  }",
          "315:  if (q) *q = p;",
          "316:  if (neg) return -result;",
          "317:  return result;",
          "318: }",
          "320: static inline zend_long parse_iv(const unsigned char *p)",
          "321: {",
          "322:  return parse_iv2(p, NULL);",
          "323: }",
          "326: static inline size_t parse_uiv(const unsigned char *p)",
          "327: {",
          "328:  unsigned char cursor;",
          "329:  size_t result = 0;",
          "331:  if (*p == '+') {",
          "332:   p++;",
          "333:  }",
          "335:  while (1) {",
          "336:   cursor = *p;",
          "337:   if (cursor >= '0' && cursor <= '9') {",
          "338:    result = result * 10 + (size_t)(cursor - (unsigned char)'0');",
          "339:   } else {",
          "340:    break;",
          "341:   }",
          "342:   p++;",
          "343:  }",
          "344:  return result;",
          "345: }",
          "347: #define UNSERIALIZE_PARAMETER zval *rval, const unsigned char **p, const unsigned char *max, php_unserialize_data_t *var_hash",
          "348: #define UNSERIALIZE_PASSTHRU rval, p, max, var_hash",
          "350: static int php_var_unserialize_internal(UNSERIALIZE_PARAMETER);",
          "352: static zend_always_inline int process_nested_data(UNSERIALIZE_PARAMETER, HashTable *ht, zend_long elements, int objprops)",
          "353: {",
          "354:  while (elements-- > 0) {",
          "355:   zval key, *data, d, *old_data;",
          "356:   zend_ulong idx;",
          "358:   ZVAL_UNDEF(&key);",
          "360:   if (!php_var_unserialize_internal(&key, p, max, NULL)) {",
          "361:    zval_dtor(&key);",
          "362:    return 0;",
          "363:   }",
          "365:   data = NULL;",
          "366:   ZVAL_UNDEF(&d);",
          "368:   if (!objprops) {",
          "369:    if (Z_TYPE(key) == IS_LONG) {",
          "370:     idx = Z_LVAL(key);",
          "371: numeric_key:",
          "372:     if (UNEXPECTED((old_data = zend_hash_index_find(ht, idx)) != NULL)) {",
          "374:      var_push_dtor(var_hash, old_data);",
          "375:      data = zend_hash_index_update(ht, idx, &d);",
          "376:     } else {",
          "377:      data = zend_hash_index_add_new(ht, idx, &d);",
          "378:     }",
          "379:    } else if (Z_TYPE(key) == IS_STRING) {",
          "380:     if (UNEXPECTED(ZEND_HANDLE_NUMERIC(Z_STR(key), idx))) {",
          "381:      goto numeric_key;",
          "382:     }",
          "383:     if (UNEXPECTED((old_data = zend_hash_find(ht, Z_STR(key))) != NULL)) {",
          "385:      var_push_dtor(var_hash, old_data);",
          "386:      data = zend_hash_update(ht, Z_STR(key), &d);",
          "387:     } else {",
          "388:      data = zend_hash_add_new(ht, Z_STR(key), &d);",
          "389:     }",
          "390:    } else {",
          "391:     zval_dtor(&key);",
          "392:     return 0;",
          "393:    }",
          "394:   } else {",
          "395:    if (EXPECTED(Z_TYPE(key) == IS_STRING)) {",
          "396: string_key:",
          "397:     if ((old_data = zend_hash_find(ht, Z_STR(key))) != NULL) {",
          "398:      if (Z_TYPE_P(old_data) == IS_INDIRECT) {",
          "399:       old_data = Z_INDIRECT_P(old_data);",
          "400:      }",
          "401:      var_push_dtor(var_hash, old_data);",
          "402:      data = zend_hash_update_ind(ht, Z_STR(key), &d);",
          "403:     } else {",
          "404:      data = zend_hash_add_new(ht, Z_STR(key), &d);",
          "405:     }",
          "406:    } else if (Z_TYPE(key) == IS_LONG) {",
          "408:     convert_to_string(&key);",
          "409:     goto string_key;",
          "410:    } else {",
          "411:     zval_dtor(&key);",
          "412:     return 0;",
          "413:    }",
          "414:   }",
          "416:   if (!php_var_unserialize_internal(data, p, max, var_hash)) {",
          "417:    zval_dtor(&key);",
          "418:    return 0;",
          "419:   }",
          "421:   if (UNEXPECTED(Z_ISUNDEF_P(data))) {",
          "422:    if (Z_TYPE(key) == IS_LONG) {",
          "423:     zend_hash_index_del(ht, Z_LVAL(key));",
          "424:    } else {",
          "425:     zend_hash_del_ind(ht, Z_STR(key));",
          "426:    }",
          "427:   } else {",
          "428:    var_push_dtor(var_hash, data);",
          "429:   }",
          "431:   zval_dtor(&key);",
          "433:   if (elements && *(*p-1) != ';' && *(*p-1) != '}') {",
          "434:    (*p)--;",
          "435:    return 0;",
          "436:   }",
          "437:  }",
          "439:  return 1;",
          "440: }",
          "442: static inline int finish_nested_data(UNSERIALIZE_PARAMETER)",
          "443: {",
          "444:  if (*((*p)++) == '}')",
          "445:   return 1;",
          "447: #if SOMETHING_NEW_MIGHT_LEAD_TO_CRASH_ENABLE_IF_YOU_ARE_BRAVE",
          "448:  zval_ptr_dtor(rval);",
          "449: #endif",
          "450:  return 0;",
          "451: }",
          "453: static inline int object_custom(UNSERIALIZE_PARAMETER, zend_class_entry *ce)",
          "454: {",
          "455:  zend_long datalen;",
          "457:  datalen = parse_iv2((*p) + 2, p);",
          "459:  (*p) += 2;",
          "461:  if (datalen < 0 || (max - (*p)) <= datalen) {",
          "462:   zend_error(E_WARNING, \"Insufficient data for unserializing - \" ZEND_LONG_FMT \" required, \" ZEND_LONG_FMT \" present\", datalen, (zend_long)(max - (*p)));",
          "463:   return 0;",
          "464:  }",
          "466:  if (ce->unserialize == NULL) {",
          "467:   zend_error(E_WARNING, \"Class %s has no unserializer\", ZSTR_VAL(ce->name));",
          "468:   object_init_ex(rval, ce);",
          "469:  } else if (ce->unserialize(rval, ce, (const unsigned char*)*p, datalen, (zend_unserialize_data *)var_hash) != SUCCESS) {",
          "470:   return 0;",
          "471:  }",
          "473:  (*p) += datalen;",
          "475:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "476: }",
          "478: static inline zend_long object_common1(UNSERIALIZE_PARAMETER, zend_class_entry *ce)",
          "479: {",
          "480:  zend_long elements;",
          "482:  if( *p >= max - 2) {",
          "483:   zend_error(E_WARNING, \"Bad unserialize data\");",
          "484:   return -1;",
          "485:  }",
          "487:  elements = parse_iv2((*p) + 2, p);",
          "489:  (*p) += 2;",
          "491:  if (ce->serialize == NULL) {",
          "492:   object_init_ex(rval, ce);",
          "493:  } else {",
          "496:   zend_error(E_WARNING, \"Erroneous data format for unserializing '%s'\", ZSTR_VAL(ce->name));",
          "497:   return -1;",
          "498:  }",
          "500:  return elements;",
          "501: }",
          "503: #ifdef PHP_WIN32",
          "504: # pragma optimize(\"\", off)",
          "505: #endif",
          "506: static inline int object_common2(UNSERIALIZE_PARAMETER, zend_long elements)",
          "507: {",
          "508:  zval retval;",
          "509:  zval fname;",
          "510:  HashTable *ht;",
          "511:  zend_bool has_wakeup;",
          "513:  if (Z_TYPE_P(rval) != IS_OBJECT) {",
          "514:   return 0;",
          "515:  }",
          "517:  has_wakeup = Z_OBJCE_P(rval) != PHP_IC_ENTRY",
          "518:   && zend_hash_str_exists(&Z_OBJCE_P(rval)->function_table, \"__wakeup\", sizeof(\"__wakeup\")-1);",
          "520:  ht = Z_OBJPROP_P(rval);",
          "521:  zend_hash_extend(ht, zend_hash_num_elements(ht) + elements, (ht->u.flags & HASH_FLAG_PACKED));",
          "522:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, ht, elements, 1)) {",
          "523:   if (has_wakeup) {",
          "524:    ZVAL_DEREF(rval);",
          "525:    GC_FLAGS(Z_OBJ_P(rval)) |= IS_OBJ_DESTRUCTOR_CALLED;",
          "526:   }",
          "527:   return 0;",
          "528:  }",
          "530:  ZVAL_DEREF(rval);",
          "531:  if (has_wakeup) {",
          "532:   ZVAL_STRINGL(&fname, \"__wakeup\", sizeof(\"__wakeup\") - 1);",
          "533:   BG(serialize_lock)++;",
          "534:   if (call_user_function_ex(CG(function_table), rval, &fname, &retval, 0, 0, 1, NULL) == FAILURE || Z_ISUNDEF(retval)) {",
          "535:    GC_FLAGS(Z_OBJ_P(rval)) |= IS_OBJ_DESTRUCTOR_CALLED;",
          "536:   }",
          "537:   BG(serialize_lock)--;",
          "538:   zval_dtor(&fname);",
          "539:   zval_dtor(&retval);",
          "540:  }",
          "542:  if (EG(exception)) {",
          "543:   return 0;",
          "544:  }",
          "546:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "547: }",
          "548: #ifdef PHP_WIN32",
          "549: # pragma optimize(\"\", on)",
          "550: #endif",
          "552: PHPAPI int php_var_unserialize(UNSERIALIZE_PARAMETER)",
          "553: {",
          "554:  var_entries *orig_var_entries = (*var_hash)->last;",
          "555:  zend_long orig_used_slots = orig_var_entries ? orig_var_entries->used_slots : 0;",
          "556:  int result;",
          "558:  result = php_var_unserialize_internal(UNSERIALIZE_PASSTHRU);",
          "560:  if (!result) {",
          "564:   var_entries *e = orig_var_entries;",
          "565:   zend_long s = orig_used_slots;",
          "566:   while (e) {",
          "567:    for (; s < e->used_slots; s++) {",
          "568:     e->data[s] = NULL;",
          "569:    }",
          "571:    e = e->next;",
          "572:    s = 0;",
          "573:   }",
          "574:  }",
          "576:  return result;",
          "577: }",
          "579: static int php_var_unserialize_internal(UNSERIALIZE_PARAMETER)",
          "580: {",
          "581:  const unsigned char *cursor, *limit, *marker, *start;",
          "582:  zval *rval_ref;",
          "584:  limit = max;",
          "585:  cursor = *p;",
          "587:  if (YYCURSOR >= YYLIMIT) {",
          "588:   return 0;",
          "589:  }",
          "591:  if (var_hash && (*p)[0] != 'R') {",
          "592:   var_push(var_hash, rval);",
          "593:  }",
          "595:  start = cursor;",
          "598: #line 599 \"ext/standard/var_unserializer.c\"",
          "599: {",
          "600:  YYCTYPE yych;",
          "601:  static const unsigned char yybm[] = {",
          "602:     0,   0,   0,   0,   0,   0,   0,   0,",
          "603:     0,   0,   0,   0,   0,   0,   0,   0,",
          "604:     0,   0,   0,   0,   0,   0,   0,   0,",
          "605:     0,   0,   0,   0,   0,   0,   0,   0,",
          "606:     0,   0,   0,   0,   0,   0,   0,   0,",
          "607:     0,   0,   0,   0,   0,   0,   0,   0,",
          "608:   128, 128, 128, 128, 128, 128, 128, 128,",
          "609:   128, 128,   0,   0,   0,   0,   0,   0,",
          "610:     0,   0,   0,   0,   0,   0,   0,   0,",
          "611:     0,   0,   0,   0,   0,   0,   0,   0,",
          "612:     0,   0,   0,   0,   0,   0,   0,   0,",
          "613:     0,   0,   0,   0,   0,   0,   0,   0,",
          "614:     0,   0,   0,   0,   0,   0,   0,   0,",
          "615:     0,   0,   0,   0,   0,   0,   0,   0,",
          "616:     0,   0,   0,   0,   0,   0,   0,   0,",
          "617:     0,   0,   0,   0,   0,   0,   0,   0,",
          "618:     0,   0,   0,   0,   0,   0,   0,   0,",
          "619:     0,   0,   0,   0,   0,   0,   0,   0,",
          "620:     0,   0,   0,   0,   0,   0,   0,   0,",
          "621:     0,   0,   0,   0,   0,   0,   0,   0,",
          "622:     0,   0,   0,   0,   0,   0,   0,   0,",
          "623:     0,   0,   0,   0,   0,   0,   0,   0,",
          "624:     0,   0,   0,   0,   0,   0,   0,   0,",
          "625:     0,   0,   0,   0,   0,   0,   0,   0,",
          "626:     0,   0,   0,   0,   0,   0,   0,   0,",
          "627:     0,   0,   0,   0,   0,   0,   0,   0,",
          "628:     0,   0,   0,   0,   0,   0,   0,   0,",
          "629:     0,   0,   0,   0,   0,   0,   0,   0,",
          "630:     0,   0,   0,   0,   0,   0,   0,   0,",
          "631:     0,   0,   0,   0,   0,   0,   0,   0,",
          "632:     0,   0,   0,   0,   0,   0,   0,   0,",
          "633:     0,   0,   0,   0,   0,   0,   0,   0,",
          "634:  };",
          "636:  if ((YYLIMIT - YYCURSOR) < 7) YYFILL(7);",
          "637:  yych = *YYCURSOR;",
          "638:  switch (yych) {",
          "639:  case 'C':",
          "640:  case 'O': goto yy13;",
          "641:  case 'N': goto yy5;",
          "642:  case 'R': goto yy2;",
          "643:  case 'S': goto yy10;",
          "644:  case 'a': goto yy11;",
          "645:  case 'b': goto yy6;",
          "646:  case 'd': goto yy8;",
          "647:  case 'i': goto yy7;",
          "648:  case 'o': goto yy12;",
          "649:  case 'r': goto yy4;",
          "650:  case 's': goto yy9;",
          "651:  case '}': goto yy14;",
          "652:  default: goto yy16;",
          "653:  }",
          "654: yy2:",
          "655:  yych = *(YYMARKER = ++YYCURSOR);",
          "656:  if (yych == ':') goto yy95;",
          "657: yy3:",
          "658: #line 976 \"ext/standard/var_unserializer.re\"",
          "659:  { return 0; }",
          "660: #line 661 \"ext/standard/var_unserializer.c\"",
          "661: yy4:",
          "662:  yych = *(YYMARKER = ++YYCURSOR);",
          "663:  if (yych == ':') goto yy89;",
          "664:  goto yy3;",
          "665: yy5:",
          "666:  yych = *++YYCURSOR;",
          "667:  if (yych == ';') goto yy87;",
          "668:  goto yy3;",
          "669: yy6:",
          "670:  yych = *(YYMARKER = ++YYCURSOR);",
          "671:  if (yych == ':') goto yy83;",
          "672:  goto yy3;",
          "673: yy7:",
          "674:  yych = *(YYMARKER = ++YYCURSOR);",
          "675:  if (yych == ':') goto yy77;",
          "676:  goto yy3;",
          "677: yy8:",
          "678:  yych = *(YYMARKER = ++YYCURSOR);",
          "679:  if (yych == ':') goto yy53;",
          "680:  goto yy3;",
          "681: yy9:",
          "682:  yych = *(YYMARKER = ++YYCURSOR);",
          "683:  if (yych == ':') goto yy46;",
          "684:  goto yy3;",
          "685: yy10:",
          "686:  yych = *(YYMARKER = ++YYCURSOR);",
          "687:  if (yych == ':') goto yy39;",
          "688:  goto yy3;",
          "689: yy11:",
          "690:  yych = *(YYMARKER = ++YYCURSOR);",
          "691:  if (yych == ':') goto yy32;",
          "692:  goto yy3;",
          "693: yy12:",
          "694:  yych = *(YYMARKER = ++YYCURSOR);",
          "695:  if (yych == ':') goto yy25;",
          "696:  goto yy3;",
          "697: yy13:",
          "698:  yych = *(YYMARKER = ++YYCURSOR);",
          "699:  if (yych == ':') goto yy17;",
          "700:  goto yy3;",
          "701: yy14:",
          "702:  ++YYCURSOR;",
          "703: #line 970 \"ext/standard/var_unserializer.re\"",
          "704:  {",
          "706:  php_error_docref(NULL, E_NOTICE, \"Unexpected end of serialized data\");",
          "708: }",
          "709: #line 710 \"ext/standard/var_unserializer.c\"",
          "710: yy16:",
          "711:  yych = *++YYCURSOR;",
          "712:  goto yy3;",
          "713: yy17:",
          "714:  yych = *++YYCURSOR;",
          "715:  if (yybm[0+yych] & 128) {",
          "716:   goto yy20;",
          "717:  }",
          "718:  if (yych == '+') goto yy19;",
          "719: yy18:",
          "720:  YYCURSOR = YYMARKER;",
          "721:  goto yy3;",
          "722: yy19:",
          "723:  yych = *++YYCURSOR;",
          "724:  if (yybm[0+yych] & 128) {",
          "725:   goto yy20;",
          "726:  }",
          "727:  goto yy18;",
          "728: yy20:",
          "729:  ++YYCURSOR;",
          "730:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "731:  yych = *YYCURSOR;",
          "732:  if (yybm[0+yych] & 128) {",
          "733:   goto yy20;",
          "734:  }",
          "735:  if (yych <= '/') goto yy18;",
          "736:  if (yych >= ';') goto yy18;",
          "737:  yych = *++YYCURSOR;",
          "738:  if (yych != '\"') goto yy18;",
          "739:  ++YYCURSOR;",
          "740: #line 818 \"ext/standard/var_unserializer.re\"",
          "741:  {",
          "742:  size_t len, len2, len3, maxlen;",
          "743:  zend_long elements;",
          "744:  char *str;",
          "745:  zend_string *class_name;",
          "746:  zend_class_entry *ce;",
          "747:  int incomplete_class = 0;",
          "749:  int custom_object = 0;",
          "751:  zval user_func;",
          "752:  zval retval;",
          "753:  zval args[1];",
          "755:     if (!var_hash) return 0;",
          "756:  if (*start == 'C') {",
          "757:   custom_object = 1;",
          "758:  }",
          "760:  len2 = len = parse_uiv(start + 2);",
          "761:  maxlen = max - YYCURSOR;",
          "762:  if (maxlen < len || len == 0) {",
          "764:   return 0;",
          "765:  }",
          "767:  str = (char*)YYCURSOR;",
          "769:  YYCURSOR += len;",
          "771:  if (*(YYCURSOR) != '\"') {",
          "773:   return 0;",
          "774:  }",
          "775:  if (*(YYCURSOR+1) != ':') {",
          "777:   return 0;",
          "778:  }",
          "780:  len3 = strspn(str, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
          "781:  if (len3 != len)",
          "782:  {",
          "784:   return 0;",
          "785:  }",
          "787:  class_name = zend_string_init(str, len, 0);",
          "789:  do {",
          "790:   if(!unserialize_allowed_class(class_name, var_hash)) {",
          "791:    incomplete_class = 1;",
          "792:    ce = PHP_IC_ENTRY;",
          "793:    break;",
          "794:   }",
          "797:   BG(serialize_lock)++;",
          "798:   ce = zend_lookup_class(class_name);",
          "799:   if (ce) {",
          "800:    BG(serialize_lock)--;",
          "801:    if (EG(exception)) {",
          "802:     zend_string_release(class_name);",
          "803:     return 0;",
          "804:    }",
          "805:    break;",
          "806:   }",
          "807:   BG(serialize_lock)--;",
          "809:   if (EG(exception)) {",
          "810:    zend_string_release(class_name);",
          "811:    return 0;",
          "812:   }",
          "815:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
          "816:    incomplete_class = 1;",
          "817:    ce = PHP_IC_ENTRY;",
          "818:    break;",
          "819:   }",
          "822:   ZVAL_STRING(&user_func, PG(unserialize_callback_func));",
          "824:   ZVAL_STR_COPY(&args[0], class_name);",
          "825:   BG(serialize_lock)++;",
          "826:   if (call_user_function_ex(CG(function_table), NULL, &user_func, &retval, 1, args, 0, NULL) != SUCCESS) {",
          "827:    BG(serialize_lock)--;",
          "828:    if (EG(exception)) {",
          "829:     zend_string_release(class_name);",
          "830:     zval_ptr_dtor(&user_func);",
          "831:     zval_ptr_dtor(&args[0]);",
          "832:     return 0;",
          "833:    }",
          "834:    php_error_docref(NULL, E_WARNING, \"defined (%s) but not found\", Z_STRVAL(user_func));",
          "835:    incomplete_class = 1;",
          "836:    ce = PHP_IC_ENTRY;",
          "837:    zval_ptr_dtor(&user_func);",
          "838:    zval_ptr_dtor(&args[0]);",
          "839:    break;",
          "840:   }",
          "841:   BG(serialize_lock)--;",
          "842:   zval_ptr_dtor(&retval);",
          "843:   if (EG(exception)) {",
          "844:    zend_string_release(class_name);",
          "845:    zval_ptr_dtor(&user_func);",
          "846:    zval_ptr_dtor(&args[0]);",
          "847:    return 0;",
          "848:   }",
          "851:   BG(serialize_lock)++;",
          "852:   if ((ce = zend_lookup_class(class_name)) == NULL) {",
          "853:    php_error_docref(NULL, E_WARNING, \"Function %s() hasn't defined the class it was called for\", Z_STRVAL(user_func));",
          "854:    incomplete_class = 1;",
          "855:    ce = PHP_IC_ENTRY;",
          "856:   }",
          "857:   BG(serialize_lock)--;",
          "859:   zval_ptr_dtor(&user_func);",
          "860:   zval_ptr_dtor(&args[0]);",
          "861:   break;",
          "862:  } while (1);",
          "866:  if (custom_object) {",
          "867:   int ret;",
          "869:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
          "871:   if (ret && incomplete_class) {",
          "872:    php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "873:   }",
          "874:   zend_string_release(class_name);",
          "875:   return ret;",
          "876:  }",
          "878:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "880:  if (elements < 0) {",
          "881:     zend_string_release(class_name);",
          "882:     return 0;",
          "883:  }",
          "885:  if (incomplete_class) {",
          "886:   php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "887:  }",
          "888:  zend_string_release(class_name);",
          "890:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "891: }",
          "892: #line 893 \"ext/standard/var_unserializer.c\"",
          "893: yy25:",
          "894:  yych = *++YYCURSOR;",
          "895:  if (yych <= ',') {",
          "896:   if (yych != '+') goto yy18;",
          "897:  } else {",
          "898:   if (yych <= '-') goto yy26;",
          "899:   if (yych <= '/') goto yy18;",
          "900:   if (yych <= '9') goto yy27;",
          "901:   goto yy18;",
          "902:  }",
          "903: yy26:",
          "904:  yych = *++YYCURSOR;",
          "905:  if (yych <= '/') goto yy18;",
          "906:  if (yych >= ':') goto yy18;",
          "907: yy27:",
          "908:  ++YYCURSOR;",
          "909:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "910:  yych = *YYCURSOR;",
          "911:  if (yych <= '/') goto yy18;",
          "912:  if (yych <= '9') goto yy27;",
          "913:  if (yych >= ';') goto yy18;",
          "914:  yych = *++YYCURSOR;",
          "915:  if (yych != '\"') goto yy18;",
          "916:  ++YYCURSOR;",
          "917: #line 807 \"ext/standard/var_unserializer.re\"",
          "918:  {",
          "919:  long elements;",
          "920:     if (!var_hash) return 0;",
          "922:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
          "923:  if (elements < 0) {",
          "924:   return 0;",
          "925:  }",
          "926:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "927: }",
          "928: #line 929 \"ext/standard/var_unserializer.c\"",
          "929: yy32:",
          "930:  yych = *++YYCURSOR;",
          "931:  if (yych == '+') goto yy33;",
          "932:  if (yych <= '/') goto yy18;",
          "933:  if (yych <= '9') goto yy34;",
          "934:  goto yy18;",
          "935: yy33:",
          "936:  yych = *++YYCURSOR;",
          "937:  if (yych <= '/') goto yy18;",
          "938:  if (yych >= ':') goto yy18;",
          "939: yy34:",
          "940:  ++YYCURSOR;",
          "941:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "942:  yych = *YYCURSOR;",
          "943:  if (yych <= '/') goto yy18;",
          "944:  if (yych <= '9') goto yy34;",
          "945:  if (yych >= ';') goto yy18;",
          "946:  yych = *++YYCURSOR;",
          "947:  if (yych != '{') goto yy18;",
          "948:  ++YYCURSOR;",
          "949: #line 783 \"ext/standard/var_unserializer.re\"",
          "950:  {",
          "951:  zend_long elements = parse_iv(start + 2);",
          "954:     if (!var_hash) return 0;",
          "956:  if (elements < 0) {",
          "957:   return 0;",
          "958:  }",
          "960:  array_init_size(rval, elements);",
          "961:  if (elements) {",
          "964:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
          "965:  }",
          "967:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_P(rval), elements, 0)) {",
          "968:   return 0;",
          "969:  }",
          "971:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "972: }",
          "973: #line 974 \"ext/standard/var_unserializer.c\"",
          "974: yy39:",
          "975:  yych = *++YYCURSOR;",
          "976:  if (yych == '+') goto yy40;",
          "977:  if (yych <= '/') goto yy18;",
          "978:  if (yych <= '9') goto yy41;",
          "979:  goto yy18;",
          "980: yy40:",
          "981:  yych = *++YYCURSOR;",
          "982:  if (yych <= '/') goto yy18;",
          "983:  if (yych >= ':') goto yy18;",
          "984: yy41:",
          "985:  ++YYCURSOR;",
          "986:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "987:  yych = *YYCURSOR;",
          "988:  if (yych <= '/') goto yy18;",
          "989:  if (yych <= '9') goto yy41;",
          "990:  if (yych >= ';') goto yy18;",
          "991:  yych = *++YYCURSOR;",
          "992:  if (yych != '\"') goto yy18;",
          "993:  ++YYCURSOR;",
          "994: #line 749 \"ext/standard/var_unserializer.re\"",
          "995:  {",
          "996:  size_t len, maxlen;",
          "997:  zend_string *str;",
          "999:  len = parse_uiv(start + 2);",
          "1000:  maxlen = max - YYCURSOR;",
          "1001:  if (maxlen < len) {",
          "1003:   return 0;",
          "1004:  }",
          "1006:  if ((str = unserialize_str(&YYCURSOR, len, maxlen)) == NULL) {",
          "1007:   return 0;",
          "1008:  }",
          "1010:  if (*(YYCURSOR) != '\"') {",
          "1011:   zend_string_free(str);",
          "1013:   return 0;",
          "1014:  }",
          "1016:  if (*(YYCURSOR + 1) != ';') {",
          "1017:   efree(str);",
          "1019:   return 0;",
          "1020:  }",
          "1022:  YYCURSOR += 2;",
          "1025:  ZVAL_STR(rval, str);",
          "1026:  return 1;",
          "1027: }",
          "1028: #line 1029 \"ext/standard/var_unserializer.c\"",
          "1029: yy46:",
          "1030:  yych = *++YYCURSOR;",
          "1031:  if (yych == '+') goto yy47;",
          "1032:  if (yych <= '/') goto yy18;",
          "1033:  if (yych <= '9') goto yy48;",
          "1034:  goto yy18;",
          "1035: yy47:",
          "1036:  yych = *++YYCURSOR;",
          "1037:  if (yych <= '/') goto yy18;",
          "1038:  if (yych >= ':') goto yy18;",
          "1039: yy48:",
          "1040:  ++YYCURSOR;",
          "1041:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "1042:  yych = *YYCURSOR;",
          "1043:  if (yych <= '/') goto yy18;",
          "1044:  if (yych <= '9') goto yy48;",
          "1045:  if (yych >= ';') goto yy18;",
          "1046:  yych = *++YYCURSOR;",
          "1047:  if (yych != '\"') goto yy18;",
          "1048:  ++YYCURSOR;",
          "1049: #line 717 \"ext/standard/var_unserializer.re\"",
          "1050:  {",
          "1051:  size_t len, maxlen;",
          "1052:  char *str;",
          "1054:  len = parse_uiv(start + 2);",
          "1055:  maxlen = max - YYCURSOR;",
          "1056:  if (maxlen < len) {",
          "1058:   return 0;",
          "1059:  }",
          "1061:  str = (char*)YYCURSOR;",
          "1063:  YYCURSOR += len;",
          "1065:  if (*(YYCURSOR) != '\"') {",
          "1067:   return 0;",
          "1068:  }",
          "1070:  if (*(YYCURSOR + 1) != ';') {",
          "1072:   return 0;",
          "1073:  }",
          "1075:  YYCURSOR += 2;",
          "1078:  ZVAL_STRINGL(rval, str, len);",
          "1079:  return 1;",
          "1080: }",
          "1081: #line 1082 \"ext/standard/var_unserializer.c\"",
          "1082: yy53:",
          "1083:  yych = *++YYCURSOR;",
          "1084:  if (yych <= '/') {",
          "1085:   if (yych <= ',') {",
          "1086:    if (yych == '+') goto yy57;",
          "1087:    goto yy18;",
          "1088:   } else {",
          "1089:    if (yych <= '-') goto yy55;",
          "1090:    if (yych <= '.') goto yy60;",
          "1091:    goto yy18;",
          "1092:   }",
          "1093:  } else {",
          "1094:   if (yych <= 'I') {",
          "1095:    if (yych <= '9') goto yy58;",
          "1096:    if (yych <= 'H') goto yy18;",
          "1097:    goto yy56;",
          "1098:   } else {",
          "1099:    if (yych != 'N') goto yy18;",
          "1100:   }",
          "1101:  }",
          "1102:  yych = *++YYCURSOR;",
          "1103:  if (yych == 'A') goto yy76;",
          "1104:  goto yy18;",
          "1105: yy55:",
          "1106:  yych = *++YYCURSOR;",
          "1107:  if (yych <= '/') {",
          "1108:   if (yych == '.') goto yy60;",
          "1109:   goto yy18;",
          "1110:  } else {",
          "1111:   if (yych <= '9') goto yy58;",
          "1112:   if (yych != 'I') goto yy18;",
          "1113:  }",
          "1114: yy56:",
          "1115:  yych = *++YYCURSOR;",
          "1116:  if (yych == 'N') goto yy72;",
          "1117:  goto yy18;",
          "1118: yy57:",
          "1119:  yych = *++YYCURSOR;",
          "1120:  if (yych == '.') goto yy60;",
          "1121:  if (yych <= '/') goto yy18;",
          "1122:  if (yych >= ':') goto yy18;",
          "1123: yy58:",
          "1124:  ++YYCURSOR;",
          "1125:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1126:  yych = *YYCURSOR;",
          "1127:  if (yych <= ':') {",
          "1128:   if (yych <= '.') {",
          "1129:    if (yych <= '-') goto yy18;",
          "1130:    goto yy70;",
          "1131:   } else {",
          "1132:    if (yych <= '/') goto yy18;",
          "1133:    if (yych <= '9') goto yy58;",
          "1134:    goto yy18;",
          "1135:   }",
          "1136:  } else {",
          "1137:   if (yych <= 'E') {",
          "1138:    if (yych <= ';') goto yy63;",
          "1139:    if (yych <= 'D') goto yy18;",
          "1140:    goto yy65;",
          "1141:   } else {",
          "1142:    if (yych == 'e') goto yy65;",
          "1143:    goto yy18;",
          "1144:   }",
          "1145:  }",
          "1146: yy60:",
          "1147:  yych = *++YYCURSOR;",
          "1148:  if (yych <= '/') goto yy18;",
          "1149:  if (yych >= ':') goto yy18;",
          "1150: yy61:",
          "1151:  ++YYCURSOR;",
          "1152:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1153:  yych = *YYCURSOR;",
          "1154:  if (yych <= ';') {",
          "1155:   if (yych <= '/') goto yy18;",
          "1156:   if (yych <= '9') goto yy61;",
          "1157:   if (yych <= ':') goto yy18;",
          "1158:  } else {",
          "1159:   if (yych <= 'E') {",
          "1160:    if (yych <= 'D') goto yy18;",
          "1161:    goto yy65;",
          "1162:   } else {",
          "1163:    if (yych == 'e') goto yy65;",
          "1164:    goto yy18;",
          "1165:   }",
          "1166:  }",
          "1167: yy63:",
          "1168:  ++YYCURSOR;",
          "1169: #line 708 \"ext/standard/var_unserializer.re\"",
          "1170:  {",
          "1171: #if SIZEOF_ZEND_LONG == 4",
          "1172: use_double:",
          "1173: #endif",
          "1175:  ZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));",
          "1176:  return 1;",
          "1177: }",
          "1178: #line 1179 \"ext/standard/var_unserializer.c\"",
          "1179: yy65:",
          "1180:  yych = *++YYCURSOR;",
          "1181:  if (yych <= ',') {",
          "1182:   if (yych != '+') goto yy18;",
          "1183:  } else {",
          "1184:   if (yych <= '-') goto yy66;",
          "1185:   if (yych <= '/') goto yy18;",
          "1186:   if (yych <= '9') goto yy67;",
          "1187:   goto yy18;",
          "1188:  }",
          "1189: yy66:",
          "1190:  yych = *++YYCURSOR;",
          "1191:  if (yych <= ',') {",
          "1192:   if (yych == '+') goto yy69;",
          "1193:   goto yy18;",
          "1194:  } else {",
          "1195:   if (yych <= '-') goto yy69;",
          "1196:   if (yych <= '/') goto yy18;",
          "1197:   if (yych >= ':') goto yy18;",
          "1198:  }",
          "1199: yy67:",
          "1200:  ++YYCURSOR;",
          "1201:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1202:  yych = *YYCURSOR;",
          "1203:  if (yych <= '/') goto yy18;",
          "1204:  if (yych <= '9') goto yy67;",
          "1205:  if (yych == ';') goto yy63;",
          "1206:  goto yy18;",
          "1207: yy69:",
          "1208:  yych = *++YYCURSOR;",
          "1209:  if (yych <= '/') goto yy18;",
          "1210:  if (yych <= '9') goto yy67;",
          "1211:  goto yy18;",
          "1212: yy70:",
          "1213:  ++YYCURSOR;",
          "1214:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1215:  yych = *YYCURSOR;",
          "1216:  if (yych <= ';') {",
          "1217:   if (yych <= '/') goto yy18;",
          "1218:   if (yych <= '9') goto yy70;",
          "1219:   if (yych <= ':') goto yy18;",
          "1220:   goto yy63;",
          "1221:  } else {",
          "1222:   if (yych <= 'E') {",
          "1223:    if (yych <= 'D') goto yy18;",
          "1224:    goto yy65;",
          "1225:   } else {",
          "1226:    if (yych == 'e') goto yy65;",
          "1227:    goto yy18;",
          "1228:   }",
          "1229:  }",
          "1230: yy72:",
          "1231:  yych = *++YYCURSOR;",
          "1232:  if (yych != 'F') goto yy18;",
          "1233: yy73:",
          "1234:  yych = *++YYCURSOR;",
          "1235:  if (yych != ';') goto yy18;",
          "1236:  ++YYCURSOR;",
          "1237: #line 692 \"ext/standard/var_unserializer.re\"",
          "1238:  {",
          "1241:  if (!strncmp((char*)start + 2, \"NAN\", 3)) {",
          "1242:   ZVAL_DOUBLE(rval, ZEND_NAN);",
          "1243:  } else if (!strncmp((char*)start + 2, \"INF\", 3)) {",
          "1244:   ZVAL_DOUBLE(rval, ZEND_INFINITY);",
          "1245:  } else if (!strncmp((char*)start + 2, \"-INF\", 4)) {",
          "1246:   ZVAL_DOUBLE(rval, -ZEND_INFINITY);",
          "1247:  } else {",
          "1248:   ZVAL_NULL(rval);",
          "1249:  }",
          "1251:  return 1;",
          "1252: }",
          "1253: #line 1254 \"ext/standard/var_unserializer.c\"",
          "1254: yy76:",
          "1255:  yych = *++YYCURSOR;",
          "1256:  if (yych == 'N') goto yy73;",
          "1257:  goto yy18;",
          "1258: yy77:",
          "1259:  yych = *++YYCURSOR;",
          "1260:  if (yych <= ',') {",
          "1261:   if (yych != '+') goto yy18;",
          "1262:  } else {",
          "1263:   if (yych <= '-') goto yy78;",
          "1264:   if (yych <= '/') goto yy18;",
          "1265:   if (yych <= '9') goto yy79;",
          "1266:   goto yy18;",
          "1267:  }",
          "1268: yy78:",
          "1269:  yych = *++YYCURSOR;",
          "1270:  if (yych <= '/') goto yy18;",
          "1271:  if (yych >= ':') goto yy18;",
          "1272: yy79:",
          "1273:  ++YYCURSOR;",
          "1274:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1275:  yych = *YYCURSOR;",
          "1276:  if (yych <= '/') goto yy18;",
          "1277:  if (yych <= '9') goto yy79;",
          "1278:  if (yych != ';') goto yy18;",
          "1279:  ++YYCURSOR;",
          "1280: #line 666 \"ext/standard/var_unserializer.re\"",
          "1281:  {",
          "1282: #if SIZEOF_ZEND_LONG == 4",
          "1283:  int digits = YYCURSOR - start - 3;",
          "1285:  if (start[2] == '-' || start[2] == '+') {",
          "1286:   digits--;",
          "1287:  }",
          "1290:  if (digits >= MAX_LENGTH_OF_LONG - 1) {",
          "1291:   if (digits == MAX_LENGTH_OF_LONG - 1) {",
          "1292:    int cmp = strncmp((char*)YYCURSOR - MAX_LENGTH_OF_LONG, long_min_digits, MAX_LENGTH_OF_LONG - 1);",
          "1294:    if (!(cmp < 0 || (cmp == 0 && start[2] == '-'))) {",
          "1295:     goto use_double;",
          "1296:    }",
          "1297:   } else {",
          "1298:    goto use_double;",
          "1299:   }",
          "1300:  }",
          "1301: #endif",
          "1303:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1304:  return 1;",
          "1305: }",
          "1306: #line 1307 \"ext/standard/var_unserializer.c\"",
          "1307: yy83:",
          "1308:  yych = *++YYCURSOR;",
          "1309:  if (yych <= '/') goto yy18;",
          "1310:  if (yych >= '2') goto yy18;",
          "1311:  yych = *++YYCURSOR;",
          "1312:  if (yych != ';') goto yy18;",
          "1313:  ++YYCURSOR;",
          "1314: #line 660 \"ext/standard/var_unserializer.re\"",
          "1315:  {",
          "1317:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1318:  return 1;",
          "1319: }",
          "1320: #line 1321 \"ext/standard/var_unserializer.c\"",
          "1321: yy87:",
          "1322:  ++YYCURSOR;",
          "1323: #line 654 \"ext/standard/var_unserializer.re\"",
          "1324:  {",
          "1326:  ZVAL_NULL(rval);",
          "1327:  return 1;",
          "1328: }",
          "1329: #line 1330 \"ext/standard/var_unserializer.c\"",
          "1330: yy89:",
          "1331:  yych = *++YYCURSOR;",
          "1332:  if (yych <= ',') {",
          "1333:   if (yych != '+') goto yy18;",
          "1334:  } else {",
          "1335:   if (yych <= '-') goto yy90;",
          "1336:   if (yych <= '/') goto yy18;",
          "1337:   if (yych <= '9') goto yy91;",
          "1338:   goto yy18;",
          "1339:  }",
          "1340: yy90:",
          "1341:  yych = *++YYCURSOR;",
          "1342:  if (yych <= '/') goto yy18;",
          "1343:  if (yych >= ':') goto yy18;",
          "1344: yy91:",
          "1345:  ++YYCURSOR;",
          "1346:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1347:  yych = *YYCURSOR;",
          "1348:  if (yych <= '/') goto yy18;",
          "1349:  if (yych <= '9') goto yy91;",
          "1350:  if (yych != ';') goto yy18;",
          "1351:  ++YYCURSOR;",
          "1352: #line 629 \"ext/standard/var_unserializer.re\"",
          "1353:  {",
          "1354:  zend_long id;",
          "1357:  if (!var_hash) return 0;",
          "1359:  id = parse_iv(start + 2) - 1;",
          "1360:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "1361:   return 0;",
          "1362:  }",
          "1364:  if (rval_ref == rval) {",
          "1365:   return 0;",
          "1366:  }",
          "1368:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "1369:   ZVAL_UNDEF(rval);",
          "1370:   return 1;",
          "1371:  }",
          "1373:  ZVAL_COPY(rval, rval_ref);",
          "1375:  return 1;",
          "1376: }",
          "1377: #line 1378 \"ext/standard/var_unserializer.c\"",
          "1378: yy95:",
          "1379:  yych = *++YYCURSOR;",
          "1380:  if (yych <= ',') {",
          "1381:   if (yych != '+') goto yy18;",
          "1382:  } else {",
          "1383:   if (yych <= '-') goto yy96;",
          "1384:   if (yych <= '/') goto yy18;",
          "1385:   if (yych <= '9') goto yy97;",
          "1386:   goto yy18;",
          "1387:  }",
          "1388: yy96:",
          "1389:  yych = *++YYCURSOR;",
          "1390:  if (yych <= '/') goto yy18;",
          "1391:  if (yych >= ':') goto yy18;",
          "1392: yy97:",
          "1393:  ++YYCURSOR;",
          "1394:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1395:  yych = *YYCURSOR;",
          "1396:  if (yych <= '/') goto yy18;",
          "1397:  if (yych <= '9') goto yy97;",
          "1398:  if (yych != ';') goto yy18;",
          "1399:  ++YYCURSOR;",
          "1400: #line 603 \"ext/standard/var_unserializer.re\"",
          "1401:  {",
          "1402:  zend_long id;",
          "1405:  if (!var_hash) return 0;",
          "1407:  id = parse_iv(start + 2) - 1;",
          "1408:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "1409:   return 0;",
          "1410:  }",
          "1412:  zval_ptr_dtor(rval);",
          "1413:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "1414:   ZVAL_UNDEF(rval);",
          "1415:   return 1;",
          "1416:  }",
          "1417:  if (Z_ISREF_P(rval_ref)) {",
          "1418:   ZVAL_COPY(rval, rval_ref);",
          "1419:  } else {",
          "1420:   ZVAL_NEW_REF(rval_ref, rval_ref);",
          "1421:   ZVAL_COPY(rval, rval_ref);",
          "1422:  }",
          "1424:  return 1;",
          "1425: }",
          "1426: #line 1427 \"ext/standard/var_unserializer.c\"",
          "1427: }",
          "1428: #line 978 \"ext/standard/var_unserializer.re\"",
          "1431:  return 0;",
          "1432: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cab5ef5355a709caadd156a2957002325fe85f18",
      "candidate_info": {
        "commit_hash": "cab5ef5355a709caadd156a2957002325fe85f18",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/cab5ef5355a709caadd156a2957002325fe85f18",
        "files": [
          "ext/standard/tests/serialize/bug25378.phpt",
          "ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re"
        ],
        "message": "Fixed bug #74111\n\n(cherry picked from commit 3a25a56a92ac1d0d6028a8ecd32ccf03bcd71ade)",
        "before_after_code_files": [
          "ext/standard/tests/serialize/bug25378.phpt||ext/standard/tests/serialize/bug25378.phpt",
          "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
          "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ],
          "candidate": [
            "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c",
            "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re"
          ]
        }
      },
      "candidate_diff": {
        "ext/standard/tests/serialize/bug25378.phpt||ext/standard/tests/serialize/bug25378.phpt": [
          "File: ext/standard/tests/serialize/bug25378.phpt -> ext/standard/tests/serialize/bug25378.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "42: Notice: unserialize(): Error at offset 17 of 33 bytes in %sbug25378.php on line %d",
          "43: bool(false)",
          "46: bool(false)",
          "48: Notice: unserialize(): Error at offset 2 of 13 bytes in %sbug25378.php on line %d",
          "",
          "[Removed Lines]",
          "45: Notice: unserialize(): Error at offset 33 of 32 bytes in %sbug25378.php on line %d",
          "",
          "[Added Lines]",
          "45: Notice: unserialize(): Error at offset 32 of 32 bytes in %sbug25378.php on line %d",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.c||ext/standard/var_unserializer.c": [
          "File: ext/standard/var_unserializer.c -> ext/standard/var_unserializer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "429: static inline int finish_nested_data(UNSERIALIZE_PARAMETER)",
          "430: {",
          "438: }",
          "440: static inline int object_custom(UNSERIALIZE_PARAMETER, zend_class_entry *ce)",
          "",
          "[Removed Lines]",
          "431:  if (*((*p)++) == '}')",
          "432:   return 1;",
          "434: #if SOMETHING_NEW_MIGHT_LEAD_TO_CRASH_ENABLE_IF_YOU_ARE_BRAVE",
          "435:  zval_ptr_dtor(rval);",
          "436: #endif",
          "437:  return 0;",
          "",
          "[Added Lines]",
          "431:  if (*p >= max || **p != '}') {",
          "432:   return 0;",
          "433:  }",
          "435:  (*p)++;",
          "436:  return 1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "582:  start = cursor;",
          "586: {",
          "587:  YYCTYPE yych;",
          "588:  static const unsigned char yybm[] = {",
          "",
          "[Removed Lines]",
          "585: #line 586 \"ext/standard/var_unserializer.c\"",
          "",
          "[Added Lines]",
          "584: #line 585 \"ext/standard/var_unserializer.c\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "623:  yych = *YYCURSOR;",
          "624:  switch (yych) {",
          "625:  case 'C':",
          "627:  case 'N': goto yy5;",
          "634:  case 'o': goto yy12;",
          "639:  }",
          "640: yy2:",
          "642: yy3:",
          "644:  { return 0; }",
          "645: #line 646 \"ext/standard/var_unserializer.c\"",
          "646: yy4:",
          "647:  yych = *(YYMARKER = ++YYCURSOR);",
          "649:  goto yy3;",
          "650: yy5:",
          "651:  yych = *++YYCURSOR;",
          "653:  goto yy3;",
          "654: yy6:",
          "655:  yych = *(YYMARKER = ++YYCURSOR);",
          "657:  goto yy3;",
          "658: yy7:",
          "659:  yych = *(YYMARKER = ++YYCURSOR);",
          "661:  goto yy3;",
          "662: yy8:",
          "663:  yych = *(YYMARKER = ++YYCURSOR);",
          "665:  goto yy3;",
          "666: yy9:",
          "667:  yych = *(YYMARKER = ++YYCURSOR);",
          "669:  goto yy3;",
          "670: yy10:",
          "671:  yych = *(YYMARKER = ++YYCURSOR);",
          "673:  goto yy3;",
          "674: yy11:",
          "675:  yych = *(YYMARKER = ++YYCURSOR);",
          "677:  goto yy3;",
          "678: yy12:",
          "679:  yych = *(YYMARKER = ++YYCURSOR);",
          "681:  goto yy3;",
          "682: yy13:",
          "683:  yych = *(YYMARKER = ++YYCURSOR);",
          "685:  goto yy3;",
          "686: yy14:",
          "691:  ++YYCURSOR;",
          "693:  {",
          "695:  php_error_docref(NULL, E_NOTICE, \"Unexpected end of serialized data\");",
          "697: }",
          "699: yy17:",
          "700:  yych = *++YYCURSOR;",
          "701:  if (yybm[0+yych] & 128) {",
          "703:  }",
          "705: yy18:",
          "706:  YYCURSOR = YYMARKER;",
          "707:  goto yy3;",
          "708: yy19:",
          "718:  yych = *++YYCURSOR;",
          "727:  }",
          "739:  goto yy18;",
          "742:  if (yych <= '/') goto yy18;",
          "746:  yych = *++YYCURSOR;",
          "755:   }",
          "764:   }",
          "765:  }",
          "776:  }",
          "787:  }",
          "789:  yych = *++YYCURSOR;",
          "790:  if (yych <= ',') {",
          "793:  } else {",
          "795:   if (yych <= '/') goto yy18;",
          "797:   goto yy18;",
          "798:  }",
          "800:  yych = *++YYCURSOR;",
          "802:  if (yych <= '/') goto yy18;",
          "812:  ++YYCURSOR;",
          "813:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "814:  yych = *YYCURSOR;",
          "818:  if (yych <= '/') goto yy18;",
          "822:  yych = *++YYCURSOR;",
          "826:  ++YYCURSOR;",
          "829:  if (yych <= '/') goto yy18;",
          "830:  if (yych <= '9') goto yy34;",
          "832:  goto yy18;",
          "834:  yych = *++YYCURSOR;",
          "835:  if (yych <= '/') goto yy18;",
          "836:  if (yych >= ':') goto yy18;",
          "838:  ++YYCURSOR;",
          "839:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "840:  yych = *YYCURSOR;",
          "841:  if (yych <= '/') goto yy18;",
          "846:  yych = *++YYCURSOR;",
          "850:  ++YYCURSOR;",
          "875:  }",
          "903:  }",
          "913:  yych = *++YYCURSOR;",
          "914:  if (yych <= '/') goto yy18;",
          "923:  goto yy18;",
          "925:  yych = *++YYCURSOR;",
          "926:  if (yych <= '/') goto yy18;",
          "927:  if (yych >= ':') goto yy18;",
          "929:  ++YYCURSOR;",
          "930:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "931:  yych = *YYCURSOR;",
          "932:  if (yych <= '/') goto yy18;",
          "937:  yych = *++YYCURSOR;",
          "941:  ++YYCURSOR;",
          "944:  if (yych <= '/') goto yy18;",
          "947:  goto yy18;",
          "949:  yych = *++YYCURSOR;",
          "950:  if (yych <= '/') goto yy18;",
          "951:  if (yych >= ':') goto yy18;",
          "953:  ++YYCURSOR;",
          "954:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "955:  yych = *YYCURSOR;",
          "956:  if (yych <= '/') goto yy18;",
          "961:  yych = *++YYCURSOR;",
          "965:  ++YYCURSOR;",
          "967:  {",
          "975:   return 0;",
          "976:  }",
          "982:  }",
          "988:  }",
          "990:  return 1;",
          "991: }",
          "994:  yych = *++YYCURSOR;",
          "996:  goto yy18;",
          "998:  yych = *++YYCURSOR;",
          "1000:  goto yy18;",
          "1002:  ++YYCURSOR;",
          "1011:  ++YYCURSOR;",
          "1012:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1013:  yych = *YYCURSOR;",
          "1014:  if (yych <= ';') {",
          "1015:   if (yych <= '/') goto yy18;",
          "1017:   if (yych <= ':') goto yy18;",
          "1018:  } else {",
          "1019:   if (yych <= 'E') {",
          "1020:    if (yych <= 'D') goto yy18;",
          "1022:   } else {",
          "1024:    goto yy18;",
          "1025:   }",
          "1026:  }",
          "1028:  ++YYCURSOR;",
          "1030:  {",
          "1031: #if SIZEOF_ZEND_LONG == 4",
          "1032: use_double:",
          "",
          "[Removed Lines]",
          "626:  case 'O': goto yy4;",
          "628:  case 'R': goto yy6;",
          "629:  case 'S': goto yy7;",
          "630:  case 'a': goto yy8;",
          "631:  case 'b': goto yy9;",
          "632:  case 'd': goto yy10;",
          "633:  case 'i': goto yy11;",
          "635:  case 'r': goto yy13;",
          "636:  case 's': goto yy14;",
          "637:  case '}': goto yy15;",
          "638:  default: goto yy2;",
          "641:  ++YYCURSOR;",
          "643: #line 963 \"ext/standard/var_unserializer.re\"",
          "648:  if (yych == ':') goto yy17;",
          "652:  if (yych == ';') goto yy19;",
          "656:  if (yych == ':') goto yy21;",
          "660:  if (yych == ':') goto yy22;",
          "664:  if (yych == ':') goto yy23;",
          "668:  if (yych == ':') goto yy24;",
          "672:  if (yych == ':') goto yy25;",
          "676:  if (yych == ':') goto yy26;",
          "680:  if (yych == ':') goto yy27;",
          "684:  if (yych == ':') goto yy28;",
          "687:  yych = *(YYMARKER = ++YYCURSOR);",
          "688:  if (yych == ':') goto yy29;",
          "689:  goto yy3;",
          "690: yy15:",
          "692: #line 957 \"ext/standard/var_unserializer.re\"",
          "698: #line 699 \"ext/standard/var_unserializer.c\"",
          "702:   goto yy31;",
          "704:  if (yych == '+') goto yy30;",
          "709:  ++YYCURSOR;",
          "710: #line 641 \"ext/standard/var_unserializer.re\"",
          "711:  {",
          "713:  ZVAL_NULL(rval);",
          "714:  return 1;",
          "715: }",
          "716: #line 717 \"ext/standard/var_unserializer.c\"",
          "717: yy21:",
          "719:  if (yych <= ',') {",
          "720:   if (yych == '+') goto yy33;",
          "721:   goto yy18;",
          "722:  } else {",
          "723:   if (yych <= '-') goto yy33;",
          "724:   if (yych <= '/') goto yy18;",
          "725:   if (yych <= '9') goto yy34;",
          "726:   goto yy18;",
          "728: yy22:",
          "729:  yych = *++YYCURSOR;",
          "730:  if (yych == '+') goto yy36;",
          "731:  if (yych <= '/') goto yy18;",
          "732:  if (yych <= '9') goto yy37;",
          "733:  goto yy18;",
          "734: yy23:",
          "735:  yych = *++YYCURSOR;",
          "736:  if (yych == '+') goto yy39;",
          "737:  if (yych <= '/') goto yy18;",
          "738:  if (yych <= '9') goto yy40;",
          "740: yy24:",
          "741:  yych = *++YYCURSOR;",
          "743:  if (yych <= '1') goto yy42;",
          "744:  goto yy18;",
          "745: yy25:",
          "747:  if (yych <= '/') {",
          "748:   if (yych <= ',') {",
          "749:    if (yych == '+') goto yy43;",
          "750:    goto yy18;",
          "751:   } else {",
          "752:    if (yych <= '-') goto yy44;",
          "753:    if (yych <= '.') goto yy45;",
          "754:    goto yy18;",
          "756:  } else {",
          "757:   if (yych <= 'I') {",
          "758:    if (yych <= '9') goto yy46;",
          "759:    if (yych <= 'H') goto yy18;",
          "760:    goto yy48;",
          "761:   } else {",
          "762:    if (yych == 'N') goto yy49;",
          "763:    goto yy18;",
          "766: yy26:",
          "767:  yych = *++YYCURSOR;",
          "768:  if (yych <= ',') {",
          "769:   if (yych == '+') goto yy50;",
          "770:   goto yy18;",
          "771:  } else {",
          "772:   if (yych <= '-') goto yy50;",
          "773:   if (yych <= '/') goto yy18;",
          "774:   if (yych <= '9') goto yy51;",
          "775:   goto yy18;",
          "777: yy27:",
          "778:  yych = *++YYCURSOR;",
          "779:  if (yych <= ',') {",
          "780:   if (yych == '+') goto yy53;",
          "781:   goto yy18;",
          "782:  } else {",
          "783:   if (yych <= '-') goto yy53;",
          "784:   if (yych <= '/') goto yy18;",
          "785:   if (yych <= '9') goto yy54;",
          "786:   goto yy18;",
          "788: yy28:",
          "791:   if (yych == '+') goto yy56;",
          "792:   goto yy18;",
          "794:   if (yych <= '-') goto yy56;",
          "796:   if (yych <= '9') goto yy57;",
          "799: yy29:",
          "801:  if (yych == '+') goto yy59;",
          "803:  if (yych <= '9') goto yy60;",
          "804:  goto yy18;",
          "805: yy30:",
          "806:  yych = *++YYCURSOR;",
          "807:  if (yybm[0+yych] & 128) {",
          "808:   goto yy31;",
          "809:  }",
          "810:  goto yy18;",
          "811: yy31:",
          "815:  if (yybm[0+yych] & 128) {",
          "816:   goto yy31;",
          "817:  }",
          "819:  if (yych <= ':') goto yy62;",
          "820:  goto yy18;",
          "821: yy33:",
          "823:  if (yych <= '/') goto yy18;",
          "824:  if (yych >= ':') goto yy18;",
          "825: yy34:",
          "827:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "828:  yych = *YYCURSOR;",
          "831:  if (yych == ';') goto yy63;",
          "833: yy36:",
          "837: yy37:",
          "842:  if (yych <= '9') goto yy37;",
          "843:  if (yych <= ':') goto yy65;",
          "844:  goto yy18;",
          "845: yy39:",
          "847:  if (yych <= '/') goto yy18;",
          "848:  if (yych >= ':') goto yy18;",
          "849: yy40:",
          "851:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "852:  yych = *YYCURSOR;",
          "853:  if (yych <= '/') goto yy18;",
          "854:  if (yych <= '9') goto yy40;",
          "855:  if (yych <= ':') goto yy66;",
          "856:  goto yy18;",
          "857: yy42:",
          "858:  yych = *++YYCURSOR;",
          "859:  if (yych == ';') goto yy67;",
          "860:  goto yy18;",
          "861: yy43:",
          "862:  yych = *++YYCURSOR;",
          "863:  if (yych == '.') goto yy45;",
          "864:  if (yych <= '/') goto yy18;",
          "865:  if (yych <= '9') goto yy46;",
          "866:  goto yy18;",
          "867: yy44:",
          "868:  yych = *++YYCURSOR;",
          "869:  if (yych <= '/') {",
          "870:   if (yych != '.') goto yy18;",
          "871:  } else {",
          "872:   if (yych <= '9') goto yy46;",
          "873:   if (yych == 'I') goto yy48;",
          "874:   goto yy18;",
          "876: yy45:",
          "877:  yych = *++YYCURSOR;",
          "878:  if (yych <= '/') goto yy18;",
          "879:  if (yych <= '9') goto yy69;",
          "880:  goto yy18;",
          "881: yy46:",
          "882:  ++YYCURSOR;",
          "883:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "884:  yych = *YYCURSOR;",
          "885:  if (yych <= ':') {",
          "886:   if (yych <= '.') {",
          "887:    if (yych <= '-') goto yy18;",
          "888:    goto yy69;",
          "889:   } else {",
          "890:    if (yych <= '/') goto yy18;",
          "891:    if (yych <= '9') goto yy46;",
          "892:    goto yy18;",
          "893:   }",
          "894:  } else {",
          "895:   if (yych <= 'E') {",
          "896:    if (yych <= ';') goto yy71;",
          "897:    if (yych <= 'D') goto yy18;",
          "898:    goto yy73;",
          "899:   } else {",
          "900:    if (yych == 'e') goto yy73;",
          "901:    goto yy18;",
          "902:   }",
          "904: yy48:",
          "905:  yych = *++YYCURSOR;",
          "906:  if (yych == 'N') goto yy74;",
          "907:  goto yy18;",
          "908: yy49:",
          "909:  yych = *++YYCURSOR;",
          "910:  if (yych == 'A') goto yy75;",
          "911:  goto yy18;",
          "912: yy50:",
          "915:  if (yych >= ':') goto yy18;",
          "916: yy51:",
          "917:  ++YYCURSOR;",
          "918:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "919:  yych = *YYCURSOR;",
          "920:  if (yych <= '/') goto yy18;",
          "921:  if (yych <= '9') goto yy51;",
          "922:  if (yych == ';') goto yy76;",
          "924: yy53:",
          "928: yy54:",
          "933:  if (yych <= '9') goto yy54;",
          "934:  if (yych <= ':') goto yy78;",
          "935:  goto yy18;",
          "936: yy56:",
          "938:  if (yych <= '/') goto yy18;",
          "939:  if (yych >= ':') goto yy18;",
          "940: yy57:",
          "942:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "943:  yych = *YYCURSOR;",
          "945:  if (yych <= '9') goto yy57;",
          "946:  if (yych == ';') goto yy79;",
          "948: yy59:",
          "952: yy60:",
          "957:  if (yych <= '9') goto yy60;",
          "958:  if (yych <= ':') goto yy81;",
          "959:  goto yy18;",
          "960: yy62:",
          "962:  if (yych == '\"') goto yy82;",
          "963:  goto yy18;",
          "964: yy63:",
          "966: #line 590 \"ext/standard/var_unserializer.re\"",
          "968:  zend_long id;",
          "971:  if (!var_hash) return 0;",
          "973:  id = parse_iv(start + 2) - 1;",
          "974:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "978:  zval_ptr_dtor(rval);",
          "979:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "980:   ZVAL_UNDEF(rval);",
          "981:   return 1;",
          "983:  if (Z_ISREF_P(rval_ref)) {",
          "984:   ZVAL_COPY(rval, rval_ref);",
          "985:  } else {",
          "986:   ZVAL_NEW_REF(rval_ref, rval_ref);",
          "987:   ZVAL_COPY(rval, rval_ref);",
          "992: #line 993 \"ext/standard/var_unserializer.c\"",
          "993: yy65:",
          "995:  if (yych == '\"') goto yy84;",
          "997: yy66:",
          "999:  if (yych == '{') goto yy86;",
          "1001: yy67:",
          "1003: #line 647 \"ext/standard/var_unserializer.re\"",
          "1004:  {",
          "1006:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1007:  return 1;",
          "1008: }",
          "1009: #line 1010 \"ext/standard/var_unserializer.c\"",
          "1010: yy69:",
          "1016:   if (yych <= '9') goto yy69;",
          "1021:    goto yy73;",
          "1023:    if (yych == 'e') goto yy73;",
          "1027: yy71:",
          "1029: #line 695 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "625:  case 'O': goto yy13;",
          "627:  case 'R': goto yy2;",
          "628:  case 'S': goto yy10;",
          "629:  case 'a': goto yy11;",
          "630:  case 'b': goto yy6;",
          "631:  case 'd': goto yy8;",
          "632:  case 'i': goto yy7;",
          "634:  case 'r': goto yy4;",
          "635:  case 's': goto yy9;",
          "636:  case '}': goto yy14;",
          "637:  default: goto yy16;",
          "640:  yych = *(YYMARKER = ++YYCURSOR);",
          "641:  if (yych == ':') goto yy95;",
          "643: #line 962 \"ext/standard/var_unserializer.re\"",
          "648:  if (yych == ':') goto yy89;",
          "652:  if (yych == ';') goto yy87;",
          "656:  if (yych == ':') goto yy83;",
          "660:  if (yych == ':') goto yy77;",
          "664:  if (yych == ':') goto yy53;",
          "668:  if (yych == ':') goto yy46;",
          "672:  if (yych == ':') goto yy39;",
          "676:  if (yych == ':') goto yy32;",
          "680:  if (yych == ':') goto yy25;",
          "684:  if (yych == ':') goto yy17;",
          "688: #line 956 \"ext/standard/var_unserializer.re\"",
          "694: #line 695 \"ext/standard/var_unserializer.c\"",
          "695: yy16:",
          "696:  yych = *++YYCURSOR;",
          "697:  goto yy3;",
          "701:   goto yy20;",
          "703:  if (yych == '+') goto yy19;",
          "709:  if (yybm[0+yych] & 128) {",
          "710:   goto yy20;",
          "713: yy20:",
          "714:  ++YYCURSOR;",
          "715:  if ((YYLIMIT - YYCURSOR) < 2) YYFILL(2);",
          "716:  yych = *YYCURSOR;",
          "717:  if (yybm[0+yych] & 128) {",
          "718:   goto yy20;",
          "719:  }",
          "721:  if (yych >= ';') goto yy18;",
          "723:  if (yych != '\"') goto yy18;",
          "724:  ++YYCURSOR;",
          "725: #line 804 \"ext/standard/var_unserializer.re\"",
          "726:  {",
          "727:  size_t len, len2, len3, maxlen;",
          "728:  zend_long elements;",
          "729:  char *str;",
          "730:  zend_string *class_name;",
          "731:  zend_class_entry *ce;",
          "732:  int incomplete_class = 0;",
          "734:  int custom_object = 0;",
          "736:  zval user_func;",
          "737:  zval retval;",
          "738:  zval args[1];",
          "740:     if (!var_hash) return 0;",
          "741:  if (*start == 'C') {",
          "742:   custom_object = 1;",
          "743:  }",
          "745:  len2 = len = parse_uiv(start + 2);",
          "746:  maxlen = max - YYCURSOR;",
          "747:  if (maxlen < len || len == 0) {",
          "749:   return 0;",
          "750:  }",
          "752:  str = (char*)YYCURSOR;",
          "754:  YYCURSOR += len;",
          "756:  if (*(YYCURSOR) != '\"') {",
          "758:   return 0;",
          "759:  }",
          "760:  if (*(YYCURSOR+1) != ':') {",
          "762:   return 0;",
          "763:  }",
          "765:  len3 = strspn(str, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
          "766:  if (len3 != len)",
          "767:  {",
          "769:   return 0;",
          "770:  }",
          "772:  class_name = zend_string_init(str, len, 0);",
          "774:  do {",
          "775:   if(!unserialize_allowed_class(class_name, classes)) {",
          "776:    incomplete_class = 1;",
          "777:    ce = PHP_IC_ENTRY;",
          "778:    break;",
          "782:   BG(serialize_lock)++;",
          "783:   ce = zend_lookup_class(class_name);",
          "784:   if (ce) {",
          "785:    BG(serialize_lock)--;",
          "786:    if (EG(exception)) {",
          "787:     zend_string_release(class_name);",
          "788:     return 0;",
          "789:    }",
          "790:    break;",
          "791:   }",
          "792:   BG(serialize_lock)--;",
          "794:   if (EG(exception)) {",
          "795:    zend_string_release(class_name);",
          "796:    return 0;",
          "797:   }",
          "800:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
          "801:    incomplete_class = 1;",
          "802:    ce = PHP_IC_ENTRY;",
          "803:    break;",
          "804:   }",
          "807:   ZVAL_STRING(&user_func, PG(unserialize_callback_func));",
          "809:   ZVAL_STR_COPY(&args[0], class_name);",
          "810:   BG(serialize_lock)++;",
          "811:   if (call_user_function_ex(CG(function_table), NULL, &user_func, &retval, 1, args, 0, NULL) != SUCCESS) {",
          "812:    BG(serialize_lock)--;",
          "813:    if (EG(exception)) {",
          "814:     zend_string_release(class_name);",
          "815:     zval_ptr_dtor(&user_func);",
          "816:     zval_ptr_dtor(&args[0]);",
          "817:     return 0;",
          "818:    }",
          "819:    php_error_docref(NULL, E_WARNING, \"defined (%s) but not found\", Z_STRVAL(user_func));",
          "820:    incomplete_class = 1;",
          "821:    ce = PHP_IC_ENTRY;",
          "822:    zval_ptr_dtor(&user_func);",
          "823:    zval_ptr_dtor(&args[0]);",
          "824:    break;",
          "825:   }",
          "826:   BG(serialize_lock)--;",
          "827:   zval_ptr_dtor(&retval);",
          "828:   if (EG(exception)) {",
          "829:    zend_string_release(class_name);",
          "830:    zval_ptr_dtor(&user_func);",
          "831:    zval_ptr_dtor(&args[0]);",
          "832:    return 0;",
          "833:   }",
          "836:   BG(serialize_lock)++;",
          "837:   if ((ce = zend_lookup_class(class_name)) == NULL) {",
          "838:    php_error_docref(NULL, E_WARNING, \"Function %s() hasn't defined the class it was called for\", Z_STRVAL(user_func));",
          "839:    incomplete_class = 1;",
          "840:    ce = PHP_IC_ENTRY;",
          "841:   }",
          "842:   BG(serialize_lock)--;",
          "844:   zval_ptr_dtor(&user_func);",
          "845:   zval_ptr_dtor(&args[0]);",
          "846:   break;",
          "847:  } while (1);",
          "851:  if (custom_object) {",
          "852:   int ret;",
          "854:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
          "856:   if (ret && incomplete_class) {",
          "857:    php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "859:   zend_string_release(class_name);",
          "860:   return ret;",
          "863:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "865:  if (elements < 0) {",
          "866:     zend_string_release(class_name);",
          "867:     return 0;",
          "870:  if (incomplete_class) {",
          "871:   php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "873:  zend_string_release(class_name);",
          "875:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "876: }",
          "877: #line 878 \"ext/standard/var_unserializer.c\"",
          "878: yy25:",
          "881:   if (yych != '+') goto yy18;",
          "883:   if (yych <= '-') goto yy26;",
          "885:   if (yych <= '9') goto yy27;",
          "888: yy26:",
          "891:  if (yych >= ':') goto yy18;",
          "892: yy27:",
          "897:  if (yych <= '9') goto yy27;",
          "898:  if (yych >= ';') goto yy18;",
          "900:  if (yych != '\"') goto yy18;",
          "902: #line 793 \"ext/standard/var_unserializer.re\"",
          "903:  {",
          "904:  zend_long elements;",
          "905:     if (!var_hash) return 0;",
          "907:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
          "908:  if (elements < 0 || elements >= HT_MAX_SIZE) {",
          "909:   return 0;",
          "910:  }",
          "911:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "912: }",
          "913: #line 914 \"ext/standard/var_unserializer.c\"",
          "914: yy32:",
          "915:  yych = *++YYCURSOR;",
          "916:  if (yych == '+') goto yy33;",
          "920: yy33:",
          "924: yy34:",
          "929:  if (yych <= '9') goto yy34;",
          "930:  if (yych >= ';') goto yy18;",
          "932:  if (yych != '{') goto yy18;",
          "934: #line 769 \"ext/standard/var_unserializer.re\"",
          "935:  {",
          "936:  zend_long elements = parse_iv(start + 2);",
          "939:     if (!var_hash) return 0;",
          "941:  if (elements < 0 || elements >= HT_MAX_SIZE) {",
          "942:   return 0;",
          "945:  array_init_size(rval, elements);",
          "946:  if (elements) {",
          "949:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
          "952:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_P(rval), elements, 0)) {",
          "953:   return 0;",
          "954:  }",
          "956:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "957: }",
          "958: #line 959 \"ext/standard/var_unserializer.c\"",
          "959: yy39:",
          "961:  if (yych == '+') goto yy40;",
          "963:  if (yych <= '9') goto yy41;",
          "965: yy40:",
          "969: yy41:",
          "974:  if (yych <= '9') goto yy41;",
          "975:  if (yych >= ';') goto yy18;",
          "977:  if (yych != '\"') goto yy18;",
          "979: #line 735 \"ext/standard/var_unserializer.re\"",
          "980:  {",
          "981:  size_t len, maxlen;",
          "982:  zend_string *str;",
          "984:  len = parse_uiv(start + 2);",
          "985:  maxlen = max - YYCURSOR;",
          "986:  if (maxlen < len) {",
          "988:   return 0;",
          "989:  }",
          "991:  if ((str = unserialize_str(&YYCURSOR, len, maxlen)) == NULL) {",
          "992:   return 0;",
          "993:  }",
          "995:  if (*(YYCURSOR) != '\"') {",
          "996:   zend_string_free(str);",
          "998:   return 0;",
          "999:  }",
          "1001:  if (*(YYCURSOR + 1) != ';') {",
          "1002:   efree(str);",
          "1004:   return 0;",
          "1005:  }",
          "1007:  YYCURSOR += 2;",
          "1010:  ZVAL_STR(rval, str);",
          "1011:  return 1;",
          "1012: }",
          "1013: #line 1014 \"ext/standard/var_unserializer.c\"",
          "1014: yy46:",
          "1015:  yych = *++YYCURSOR;",
          "1016:  if (yych == '+') goto yy47;",
          "1018:  if (yych <= '9') goto yy48;",
          "1020: yy47:",
          "1024: yy48:",
          "1029:  if (yych <= '9') goto yy48;",
          "1030:  if (yych >= ';') goto yy18;",
          "1032:  if (yych != '\"') goto yy18;",
          "1034: #line 703 \"ext/standard/var_unserializer.re\"",
          "1036:  size_t len, maxlen;",
          "1037:  char *str;",
          "1039:  len = parse_uiv(start + 2);",
          "1040:  maxlen = max - YYCURSOR;",
          "1041:  if (maxlen < len) {",
          "1046:  str = (char*)YYCURSOR;",
          "1048:  YYCURSOR += len;",
          "1050:  if (*(YYCURSOR) != '\"') {",
          "1052:   return 0;",
          "1055:  if (*(YYCURSOR + 1) != ';') {",
          "1057:   return 0;",
          "1060:  YYCURSOR += 2;",
          "1063:  ZVAL_STRINGL(rval, str, len);",
          "1066: #line 1067 \"ext/standard/var_unserializer.c\"",
          "1067: yy53:",
          "1068:  yych = *++YYCURSOR;",
          "1069:  if (yych <= '/') {",
          "1070:   if (yych <= ',') {",
          "1071:    if (yych == '+') goto yy57;",
          "1072:    goto yy18;",
          "1073:   } else {",
          "1074:    if (yych <= '-') goto yy55;",
          "1075:    if (yych <= '.') goto yy60;",
          "1076:    goto yy18;",
          "1077:   }",
          "1078:  } else {",
          "1079:   if (yych <= 'I') {",
          "1080:    if (yych <= '9') goto yy58;",
          "1081:    if (yych <= 'H') goto yy18;",
          "1082:    goto yy56;",
          "1083:   } else {",
          "1084:    if (yych != 'N') goto yy18;",
          "1085:   }",
          "1086:  }",
          "1088:  if (yych == 'A') goto yy76;",
          "1090: yy55:",
          "1091:  yych = *++YYCURSOR;",
          "1092:  if (yych <= '/') {",
          "1093:   if (yych == '.') goto yy60;",
          "1094:   goto yy18;",
          "1095:  } else {",
          "1096:   if (yych <= '9') goto yy58;",
          "1097:   if (yych != 'I') goto yy18;",
          "1098:  }",
          "1099: yy56:",
          "1101:  if (yych == 'N') goto yy72;",
          "1103: yy57:",
          "1104:  yych = *++YYCURSOR;",
          "1105:  if (yych == '.') goto yy60;",
          "1106:  if (yych <= '/') goto yy18;",
          "1107:  if (yych >= ':') goto yy18;",
          "1108: yy58:",
          "1110:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1111:  yych = *YYCURSOR;",
          "1112:  if (yych <= ':') {",
          "1113:   if (yych <= '.') {",
          "1114:    if (yych <= '-') goto yy18;",
          "1115:    goto yy70;",
          "1116:   } else {",
          "1117:    if (yych <= '/') goto yy18;",
          "1118:    if (yych <= '9') goto yy58;",
          "1119:    goto yy18;",
          "1120:   }",
          "1121:  } else {",
          "1122:   if (yych <= 'E') {",
          "1123:    if (yych <= ';') goto yy63;",
          "1124:    if (yych <= 'D') goto yy18;",
          "1125:    goto yy65;",
          "1126:   } else {",
          "1127:    if (yych == 'e') goto yy65;",
          "1128:    goto yy18;",
          "1129:   }",
          "1130:  }",
          "1131: yy60:",
          "1132:  yych = *++YYCURSOR;",
          "1133:  if (yych <= '/') goto yy18;",
          "1134:  if (yych >= ':') goto yy18;",
          "1135: yy61:",
          "1141:   if (yych <= '9') goto yy61;",
          "1146:    goto yy65;",
          "1148:    if (yych == 'e') goto yy65;",
          "1152: yy63:",
          "1154: #line 694 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1035:  ZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));",
          "1036:  return 1;",
          "1037: }",
          "1040:  yych = *++YYCURSOR;",
          "1041:  if (yych <= ',') {",
          "1044:  } else {",
          "1046:   if (yych <= '/') goto yy18;",
          "1048:   goto yy18;",
          "1049:  }",
          "1051:  yych = *++YYCURSOR;",
          "1053:  goto yy18;",
          "1055:  yych = *++YYCURSOR;",
          "1057:  goto yy18;",
          "1059:  ++YYCURSOR;",
          "1077:   } else {",
          "1079:   }",
          "1080:  }",
          "1088:  yych = *++YYCURSOR;",
          "1092:  ++YYCURSOR;",
          "1094:  {",
          "1112:  }",
          "1116:  return 1;",
          "1117: }",
          "1120:  yych = *++YYCURSOR;",
          "1122:  goto yy18;",
          "1124:  ++YYCURSOR;",
          "1126:  {",
          "1170:  }",
          "1218:    }",
          "1258:   }",
          "1268:  }",
          "1276: }",
          "1279:  ++YYCURSOR;",
          "1281:  {",
          "1312:  return 1;",
          "1313: }",
          "1316:  ++YYCURSOR;",
          "1318:  {",
          "1340: }",
          "1343:  yych = *++YYCURSOR;",
          "1344:  if (yych <= ',') {",
          "1347:  } else {",
          "1349:   if (yych <= '/') goto yy18;",
          "1351:  }",
          "1353:  ++YYCURSOR;",
          "1354:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1355:  yych = *YYCURSOR;",
          "1356:  if (yych <= '/') goto yy18;",
          "1365:  ++YYCURSOR;",
          "1367:  {",
          "1389:   return 0;",
          "1390:  }",
          "1398:   return 0;",
          "1399:  }",
          "1404:  }",
          "1410:  return 1;",
          "1411: }",
          "1413: yy96:",
          "1414:  yych = *++YYCURSOR;",
          "1415:  if (yych <= '/') goto yy18;",
          "1418: yy97:",
          "1419:  ++YYCURSOR;",
          "1421:  {",
          "1430:  } else {",
          "1432:  }",
          "1434:  return 1;",
          "1435: }",
          "1437: }",
          "1441:  return 0;",
          "",
          "[Removed Lines]",
          "1038: #line 1039 \"ext/standard/var_unserializer.c\"",
          "1039: yy73:",
          "1042:   if (yych == '+') goto yy88;",
          "1043:   goto yy18;",
          "1045:   if (yych <= '-') goto yy88;",
          "1047:   if (yych <= '9') goto yy89;",
          "1050: yy74:",
          "1052:  if (yych == 'F') goto yy91;",
          "1054: yy75:",
          "1056:  if (yych == 'N') goto yy91;",
          "1058: yy76:",
          "1060: #line 653 \"ext/standard/var_unserializer.re\"",
          "1061:  {",
          "1062: #if SIZEOF_ZEND_LONG == 4",
          "1063:  int digits = YYCURSOR - start - 3;",
          "1065:  if (start[2] == '-' || start[2] == '+') {",
          "1066:   digits--;",
          "1067:  }",
          "1070:  if (digits >= MAX_LENGTH_OF_LONG - 1) {",
          "1071:   if (digits == MAX_LENGTH_OF_LONG - 1) {",
          "1072:    int cmp = strncmp((char*)YYCURSOR - MAX_LENGTH_OF_LONG, long_min_digits, MAX_LENGTH_OF_LONG - 1);",
          "1074:    if (!(cmp < 0 || (cmp == 0 && start[2] == '-'))) {",
          "1075:     goto use_double;",
          "1076:    }",
          "1078:    goto use_double;",
          "1081: #endif",
          "1083:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1084:  return 1;",
          "1085: }",
          "1086: #line 1087 \"ext/standard/var_unserializer.c\"",
          "1087: yy78:",
          "1089:  if (yych == '\"') goto yy92;",
          "1090:  goto yy18;",
          "1091: yy79:",
          "1093: #line 616 \"ext/standard/var_unserializer.re\"",
          "1095:  zend_long id;",
          "1098:  if (!var_hash) return 0;",
          "1100:  id = parse_iv(start + 2) - 1;",
          "1101:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "1102:   return 0;",
          "1103:  }",
          "1105:  if (rval_ref == rval) {",
          "1106:   return 0;",
          "1107:  }",
          "1109:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "1110:   ZVAL_UNDEF(rval);",
          "1111:   return 1;",
          "1114:  ZVAL_COPY(rval, rval_ref);",
          "1118: #line 1119 \"ext/standard/var_unserializer.c\"",
          "1119: yy81:",
          "1121:  if (yych == '\"') goto yy94;",
          "1123: yy82:",
          "1125: #line 805 \"ext/standard/var_unserializer.re\"",
          "1127:  size_t len, len2, len3, maxlen;",
          "1128:  zend_long elements;",
          "1129:  char *str;",
          "1130:  zend_string *class_name;",
          "1131:  zend_class_entry *ce;",
          "1132:  int incomplete_class = 0;",
          "1134:  int custom_object = 0;",
          "1136:  zval user_func;",
          "1137:  zval retval;",
          "1138:  zval args[1];",
          "1140:     if (!var_hash) return 0;",
          "1141:  if (*start == 'C') {",
          "1142:   custom_object = 1;",
          "1143:  }",
          "1145:  len2 = len = parse_uiv(start + 2);",
          "1146:  maxlen = max - YYCURSOR;",
          "1147:  if (maxlen < len || len == 0) {",
          "1149:   return 0;",
          "1150:  }",
          "1152:  str = (char*)YYCURSOR;",
          "1154:  YYCURSOR += len;",
          "1156:  if (*(YYCURSOR) != '\"') {",
          "1158:   return 0;",
          "1159:  }",
          "1160:  if (*(YYCURSOR+1) != ':') {",
          "1162:   return 0;",
          "1163:  }",
          "1165:  len3 = strspn(str, \"0123456789_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\\177\\200\\201\\202\\203\\204\\205\\206\\207\\210\\211\\212\\213\\214\\215\\216\\217\\220\\221\\222\\223\\224\\225\\226\\227\\230\\231\\232\\233\\234\\235\\236\\237\\240\\241\\242\\243\\244\\245\\246\\247\\250\\251\\252\\253\\254\\255\\256\\257\\260\\261\\262\\263\\264\\265\\266\\267\\270\\271\\272\\273\\274\\275\\276\\277\\300\\301\\302\\303\\304\\305\\306\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\\321\\322\\323\\324\\325\\326\\327\\330\\331\\332\\333\\334\\335\\336\\337\\340\\341\\342\\343\\344\\345\\346\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\\361\\362\\363\\364\\365\\366\\367\\370\\371\\372\\373\\374\\375\\376\\377\\\\\");",
          "1166:  if (len3 != len)",
          "1167:  {",
          "1169:   return 0;",
          "1172:  class_name = zend_string_init(str, len, 0);",
          "1174:  do {",
          "1175:   if(!unserialize_allowed_class(class_name, classes)) {",
          "1176:    incomplete_class = 1;",
          "1177:    ce = PHP_IC_ENTRY;",
          "1178:    break;",
          "1179:   }",
          "1182:   BG(serialize_lock)++;",
          "1183:   ce = zend_lookup_class(class_name);",
          "1184:   if (ce) {",
          "1185:    BG(serialize_lock)--;",
          "1186:    if (EG(exception)) {",
          "1187:     zend_string_release(class_name);",
          "1188:     return 0;",
          "1189:    }",
          "1190:    break;",
          "1191:   }",
          "1192:   BG(serialize_lock)--;",
          "1194:   if (EG(exception)) {",
          "1195:    zend_string_release(class_name);",
          "1196:    return 0;",
          "1197:   }",
          "1200:   if ((PG(unserialize_callback_func) == NULL) || (PG(unserialize_callback_func)[0] == '\\0')) {",
          "1201:    incomplete_class = 1;",
          "1202:    ce = PHP_IC_ENTRY;",
          "1203:    break;",
          "1204:   }",
          "1207:   ZVAL_STRING(&user_func, PG(unserialize_callback_func));",
          "1209:   ZVAL_STR_COPY(&args[0], class_name);",
          "1210:   BG(serialize_lock)++;",
          "1211:   if (call_user_function_ex(CG(function_table), NULL, &user_func, &retval, 1, args, 0, NULL) != SUCCESS) {",
          "1212:    BG(serialize_lock)--;",
          "1213:    if (EG(exception)) {",
          "1214:     zend_string_release(class_name);",
          "1215:     zval_ptr_dtor(&user_func);",
          "1216:     zval_ptr_dtor(&args[0]);",
          "1217:     return 0;",
          "1219:    php_error_docref(NULL, E_WARNING, \"defined (%s) but not found\", Z_STRVAL(user_func));",
          "1220:    incomplete_class = 1;",
          "1221:    ce = PHP_IC_ENTRY;",
          "1222:    zval_ptr_dtor(&user_func);",
          "1223:    zval_ptr_dtor(&args[0]);",
          "1224:    break;",
          "1225:   }",
          "1226:   BG(serialize_lock)--;",
          "1227:   zval_ptr_dtor(&retval);",
          "1228:   if (EG(exception)) {",
          "1229:    zend_string_release(class_name);",
          "1230:    zval_ptr_dtor(&user_func);",
          "1231:    zval_ptr_dtor(&args[0]);",
          "1232:    return 0;",
          "1233:   }",
          "1236:   BG(serialize_lock)++;",
          "1237:   if ((ce = zend_lookup_class(class_name)) == NULL) {",
          "1238:    php_error_docref(NULL, E_WARNING, \"Function %s() hasn't defined the class it was called for\", Z_STRVAL(user_func));",
          "1239:    incomplete_class = 1;",
          "1240:    ce = PHP_IC_ENTRY;",
          "1241:   }",
          "1242:   BG(serialize_lock)--;",
          "1244:   zval_ptr_dtor(&user_func);",
          "1245:   zval_ptr_dtor(&args[0]);",
          "1246:   break;",
          "1247:  } while (1);",
          "1251:  if (custom_object) {",
          "1252:   int ret;",
          "1254:   ret = object_custom(UNSERIALIZE_PASSTHRU, ce);",
          "1256:   if (ret && incomplete_class) {",
          "1257:    php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "1259:   zend_string_release(class_name);",
          "1260:   return ret;",
          "1261:  }",
          "1263:  elements = object_common1(UNSERIALIZE_PASSTHRU, ce);",
          "1265:  if (elements < 0) {",
          "1266:     zend_string_release(class_name);",
          "1267:     return 0;",
          "1270:  if (incomplete_class) {",
          "1271:   php_store_class_name(rval, ZSTR_VAL(class_name), len2);",
          "1272:  }",
          "1273:  zend_string_release(class_name);",
          "1275:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1277: #line 1278 \"ext/standard/var_unserializer.c\"",
          "1278: yy84:",
          "1280: #line 736 \"ext/standard/var_unserializer.re\"",
          "1282:  size_t len, maxlen;",
          "1283:  zend_string *str;",
          "1285:  len = parse_uiv(start + 2);",
          "1286:  maxlen = max - YYCURSOR;",
          "1287:  if (maxlen < len) {",
          "1289:   return 0;",
          "1290:  }",
          "1292:  if ((str = unserialize_str(&YYCURSOR, len, maxlen)) == NULL) {",
          "1293:   return 0;",
          "1294:  }",
          "1296:  if (*(YYCURSOR) != '\"') {",
          "1297:   zend_string_free(str);",
          "1299:   return 0;",
          "1300:  }",
          "1302:  if (*(YYCURSOR + 1) != ';') {",
          "1303:   efree(str);",
          "1305:   return 0;",
          "1306:  }",
          "1308:  YYCURSOR += 2;",
          "1311:  ZVAL_STR(rval, str);",
          "1314: #line 1315 \"ext/standard/var_unserializer.c\"",
          "1315: yy86:",
          "1317: #line 770 \"ext/standard/var_unserializer.re\"",
          "1319:  zend_long elements = parse_iv(start + 2);",
          "1322:     if (!var_hash) return 0;",
          "1324:  if (elements < 0 || elements >= HT_MAX_SIZE) {",
          "1325:   return 0;",
          "1326:  }",
          "1328:  array_init_size(rval, elements);",
          "1329:  if (elements) {",
          "1332:   zend_hash_real_init(Z_ARRVAL_P(rval), 0);",
          "1333:  }",
          "1335:  if (!process_nested_data(UNSERIALIZE_PASSTHRU, Z_ARRVAL_P(rval), elements, 0)) {",
          "1336:   return 0;",
          "1337:  }",
          "1339:  return finish_nested_data(UNSERIALIZE_PASSTHRU);",
          "1341: #line 1342 \"ext/standard/var_unserializer.c\"",
          "1342: yy88:",
          "1345:   if (yych == '+') goto yy96;",
          "1346:   goto yy18;",
          "1348:   if (yych <= '-') goto yy96;",
          "1350:   if (yych >= ':') goto yy18;",
          "1352: yy89:",
          "1357:  if (yych <= '9') goto yy89;",
          "1358:  if (yych == ';') goto yy71;",
          "1359:  goto yy18;",
          "1360: yy91:",
          "1361:  yych = *++YYCURSOR;",
          "1362:  if (yych == ';') goto yy97;",
          "1363:  goto yy18;",
          "1364: yy92:",
          "1366: #line 794 \"ext/standard/var_unserializer.re\"",
          "1368:  zend_long elements;",
          "1369:     if (!var_hash) return 0;",
          "1371:  elements = object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR);",
          "1372:  if (elements < 0 || elements >= HT_MAX_SIZE) {",
          "1373:   return 0;",
          "1374:  }",
          "1375:  return object_common2(UNSERIALIZE_PASSTHRU, elements);",
          "1376: }",
          "1377: #line 1378 \"ext/standard/var_unserializer.c\"",
          "1378: yy94:",
          "1379:  ++YYCURSOR;",
          "1380: #line 704 \"ext/standard/var_unserializer.re\"",
          "1381:  {",
          "1382:  size_t len, maxlen;",
          "1383:  char *str;",
          "1385:  len = parse_uiv(start + 2);",
          "1386:  maxlen = max - YYCURSOR;",
          "1387:  if (maxlen < len) {",
          "1392:  str = (char*)YYCURSOR;",
          "1394:  YYCURSOR += len;",
          "1396:  if (*(YYCURSOR) != '\"') {",
          "1401:  if (*(YYCURSOR + 1) != ';') {",
          "1403:   return 0;",
          "1406:  YYCURSOR += 2;",
          "1409:  ZVAL_STRINGL(rval, str, len);",
          "1412: #line 1413 \"ext/standard/var_unserializer.c\"",
          "1416:  if (yych <= '9') goto yy89;",
          "1417:  goto yy18;",
          "1420: #line 679 \"ext/standard/var_unserializer.re\"",
          "1424:  if (!strncmp((char*)start + 2, \"NAN\", 3)) {",
          "1425:   ZVAL_DOUBLE(rval, php_get_nan());",
          "1426:  } else if (!strncmp((char*)start + 2, \"INF\", 3)) {",
          "1427:   ZVAL_DOUBLE(rval, php_get_inf());",
          "1428:  } else if (!strncmp((char*)start + 2, \"-INF\", 4)) {",
          "1429:   ZVAL_DOUBLE(rval, -php_get_inf());",
          "1431:   ZVAL_NULL(rval);",
          "1436: #line 1437 \"ext/standard/var_unserializer.c\"",
          "1438: #line 965 \"ext/standard/var_unserializer.re\"",
          "",
          "[Added Lines]",
          "1163: #line 1164 \"ext/standard/var_unserializer.c\"",
          "1164: yy65:",
          "1167:   if (yych != '+') goto yy18;",
          "1169:   if (yych <= '-') goto yy66;",
          "1171:   if (yych <= '9') goto yy67;",
          "1174: yy66:",
          "1176:  if (yych <= ',') {",
          "1177:   if (yych == '+') goto yy69;",
          "1178:   goto yy18;",
          "1179:  } else {",
          "1180:   if (yych <= '-') goto yy69;",
          "1181:   if (yych <= '/') goto yy18;",
          "1182:   if (yych >= ':') goto yy18;",
          "1183:  }",
          "1184: yy67:",
          "1185:  ++YYCURSOR;",
          "1186:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1187:  yych = *YYCURSOR;",
          "1188:  if (yych <= '/') goto yy18;",
          "1189:  if (yych <= '9') goto yy67;",
          "1190:  if (yych == ';') goto yy63;",
          "1192: yy69:",
          "1194:  if (yych <= '/') goto yy18;",
          "1195:  if (yych <= '9') goto yy67;",
          "1197: yy70:",
          "1199:  if ((YYLIMIT - YYCURSOR) < 4) YYFILL(4);",
          "1200:  yych = *YYCURSOR;",
          "1201:  if (yych <= ';') {",
          "1202:   if (yych <= '/') goto yy18;",
          "1203:   if (yych <= '9') goto yy70;",
          "1204:   if (yych <= ':') goto yy18;",
          "1205:   goto yy63;",
          "1206:  } else {",
          "1207:   if (yych <= 'E') {",
          "1208:    if (yych <= 'D') goto yy18;",
          "1209:    goto yy65;",
          "1211:    if (yych == 'e') goto yy65;",
          "1212:    goto yy18;",
          "1215: yy72:",
          "1217:  if (yych != 'F') goto yy18;",
          "1218: yy73:",
          "1219:  yych = *++YYCURSOR;",
          "1220:  if (yych != ';') goto yy18;",
          "1222: #line 678 \"ext/standard/var_unserializer.re\"",
          "1226:  if (!strncmp((char*)start + 2, \"NAN\", 3)) {",
          "1227:   ZVAL_DOUBLE(rval, php_get_nan());",
          "1228:  } else if (!strncmp((char*)start + 2, \"INF\", 3)) {",
          "1229:   ZVAL_DOUBLE(rval, php_get_inf());",
          "1230:  } else if (!strncmp((char*)start + 2, \"-INF\", 4)) {",
          "1231:   ZVAL_DOUBLE(rval, -php_get_inf());",
          "1232:  } else {",
          "1233:   ZVAL_NULL(rval);",
          "1238: #line 1239 \"ext/standard/var_unserializer.c\"",
          "1239: yy76:",
          "1241:  if (yych == 'N') goto yy73;",
          "1243: yy77:",
          "1244:  yych = *++YYCURSOR;",
          "1245:  if (yych <= ',') {",
          "1246:   if (yych != '+') goto yy18;",
          "1247:  } else {",
          "1248:   if (yych <= '-') goto yy78;",
          "1249:   if (yych <= '/') goto yy18;",
          "1250:   if (yych <= '9') goto yy79;",
          "1251:   goto yy18;",
          "1252:  }",
          "1253: yy78:",
          "1254:  yych = *++YYCURSOR;",
          "1255:  if (yych <= '/') goto yy18;",
          "1256:  if (yych >= ':') goto yy18;",
          "1257: yy79:",
          "1259:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1260:  yych = *YYCURSOR;",
          "1261:  if (yych <= '/') goto yy18;",
          "1262:  if (yych <= '9') goto yy79;",
          "1263:  if (yych != ';') goto yy18;",
          "1264:  ++YYCURSOR;",
          "1265: #line 652 \"ext/standard/var_unserializer.re\"",
          "1267: #if SIZEOF_ZEND_LONG == 4",
          "1268:  int digits = YYCURSOR - start - 3;",
          "1270:  if (start[2] == '-' || start[2] == '+') {",
          "1271:   digits--;",
          "1275:  if (digits >= MAX_LENGTH_OF_LONG - 1) {",
          "1276:   if (digits == MAX_LENGTH_OF_LONG - 1) {",
          "1277:    int cmp = strncmp((char*)YYCURSOR - MAX_LENGTH_OF_LONG, long_min_digits, MAX_LENGTH_OF_LONG - 1);",
          "1279:    if (!(cmp < 0 || (cmp == 0 && start[2] == '-'))) {",
          "1280:     goto use_double;",
          "1282:   } else {",
          "1283:    goto use_double;",
          "1286: #endif",
          "1288:  ZVAL_LONG(rval, parse_iv(start + 2));",
          "1289:  return 1;",
          "1291: #line 1292 \"ext/standard/var_unserializer.c\"",
          "1292: yy83:",
          "1293:  yych = *++YYCURSOR;",
          "1294:  if (yych <= '/') goto yy18;",
          "1295:  if (yych >= '2') goto yy18;",
          "1296:  yych = *++YYCURSOR;",
          "1297:  if (yych != ';') goto yy18;",
          "1299: #line 646 \"ext/standard/var_unserializer.re\"",
          "1302:  ZVAL_BOOL(rval, parse_iv(start + 2));",
          "1305: #line 1306 \"ext/standard/var_unserializer.c\"",
          "1306: yy87:",
          "1308: #line 640 \"ext/standard/var_unserializer.re\"",
          "1311:  ZVAL_NULL(rval);",
          "1312:  return 1;",
          "1314: #line 1315 \"ext/standard/var_unserializer.c\"",
          "1315: yy89:",
          "1318:   if (yych != '+') goto yy18;",
          "1320:   if (yych <= '-') goto yy90;",
          "1322:   if (yych <= '9') goto yy91;",
          "1323:   goto yy18;",
          "1325: yy90:",
          "1326:  yych = *++YYCURSOR;",
          "1327:  if (yych <= '/') goto yy18;",
          "1328:  if (yych >= ':') goto yy18;",
          "1329: yy91:",
          "1334:  if (yych <= '9') goto yy91;",
          "1335:  if (yych != ';') goto yy18;",
          "1337: #line 615 \"ext/standard/var_unserializer.re\"",
          "1339:  zend_long id;",
          "1342:  if (!var_hash) return 0;",
          "1344:  id = parse_iv(start + 2) - 1;",
          "1345:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "1349:  if (rval_ref == rval) {",
          "1353:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "1354:   ZVAL_UNDEF(rval);",
          "1355:   return 1;",
          "1358:  ZVAL_COPY(rval, rval_ref);",
          "1362: #line 1363 \"ext/standard/var_unserializer.c\"",
          "1363: yy95:",
          "1364:  yych = *++YYCURSOR;",
          "1365:  if (yych <= ',') {",
          "1366:   if (yych != '+') goto yy18;",
          "1367:  } else {",
          "1368:   if (yych <= '-') goto yy96;",
          "1369:   if (yych <= '/') goto yy18;",
          "1370:   if (yych <= '9') goto yy97;",
          "1371:   goto yy18;",
          "1372:  }",
          "1376:  if (yych >= ':') goto yy18;",
          "1379:  if (YYLIMIT <= YYCURSOR) YYFILL(1);",
          "1380:  yych = *YYCURSOR;",
          "1381:  if (yych <= '/') goto yy18;",
          "1382:  if (yych <= '9') goto yy97;",
          "1383:  if (yych != ';') goto yy18;",
          "1384:  ++YYCURSOR;",
          "1385: #line 589 \"ext/standard/var_unserializer.re\"",
          "1387:  zend_long id;",
          "1390:  if (!var_hash) return 0;",
          "1392:  id = parse_iv(start + 2) - 1;",
          "1393:  if (id == -1 || (rval_ref = var_access(var_hash, id)) == NULL) {",
          "1394:   return 0;",
          "1395:  }",
          "1397:  zval_ptr_dtor(rval);",
          "1398:  if (Z_ISUNDEF_P(rval_ref) || (Z_ISREF_P(rval_ref) && Z_ISUNDEF_P(Z_REFVAL_P(rval_ref)))) {",
          "1399:   ZVAL_UNDEF(rval);",
          "1400:   return 1;",
          "1401:  }",
          "1402:  if (Z_ISREF_P(rval_ref)) {",
          "1403:   ZVAL_COPY(rval, rval_ref);",
          "1405:   ZVAL_NEW_REF(rval_ref, rval_ref);",
          "1406:   ZVAL_COPY(rval, rval_ref);",
          "1411: #line 1412 \"ext/standard/var_unserializer.c\"",
          "1413: #line 964 \"ext/standard/var_unserializer.re\"",
          "",
          "---------------"
        ],
        "ext/standard/var_unserializer.re||ext/standard/var_unserializer.re": [
          "File: ext/standard/var_unserializer.re -> ext/standard/var_unserializer.re",
          "--- Hunk 1 ---",
          "[Context before]",
          "433: static inline int finish_nested_data(UNSERIALIZE_PARAMETER)",
          "434: {",
          "442: }",
          "444: static inline int object_custom(UNSERIALIZE_PARAMETER, zend_class_entry *ce)",
          "",
          "[Removed Lines]",
          "435:  if (*((*p)++) == '}')",
          "436:   return 1;",
          "438: #if SOMETHING_NEW_MIGHT_LEAD_TO_CRASH_ENABLE_IF_YOU_ARE_BRAVE",
          "439:  zval_ptr_dtor(rval);",
          "440: #endif",
          "441:  return 0;",
          "",
          "[Added Lines]",
          "435:  if (*p >= max || **p != '}') {",
          "436:   return 0;",
          "437:  }",
          "439:  (*p)++;",
          "440:  return 1;",
          "",
          "---------------"
        ]
      }
    }
  ]
}