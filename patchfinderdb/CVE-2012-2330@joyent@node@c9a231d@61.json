{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fb383a0ad08470d2a50923c7f3baa3a59a530026",
      "candidate_info": {
        "commit_hash": "fb383a0ad08470d2a50923c7f3baa3a59a530026",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/fb383a0ad08470d2a50923c7f3baa3a59a530026",
        "files": [
          "lib/util.js",
          "test/simple/test-util-inspect.js"
        ],
        "message": "util: make util.inspect() work when \"hasOwnProperty\" is overwritten",
        "before_after_code_files": [
          "lib/util.js||liutil.js",
          "test/simple/test-util-inspect.js||test/simple/test-util-inspect.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/util.js||liutil.js": [
          "File: lib/util.js -> liutil.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "318: function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {",
          "319:   var output = [];",
          "320:   for (var i = 0, l = value.length; i < l; ++i) {",
          "322:       output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,",
          "323:           String(i), true));",
          "324:     } else {",
          "",
          "[Removed Lines]",
          "321:     if (Object.prototype.hasOwnProperty.call(value, String(i))) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "349:       str = ctx.stylize('[Setter]', 'special');",
          "350:     }",
          "351:   }",
          "353:     name = '[' + key + ']';",
          "354:   }",
          "355:   if (!str) {",
          "",
          "[Removed Lines]",
          "352:   if (!visibleKeys.hasOwnProperty(key)) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "556:   }",
          "557:   return origin;",
          "558: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-util-inspect.js||test/simple/test-util-inspect.js": [
          "File: test/simple/test-util-inspect.js -> test/simple/test-util-inspect.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "108: var x = { inspect: util.inspect };",
          "109: assert.ok(util.inspect(x).indexOf('inspect') != -1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "112: assert.doesNotThrow(function() {",
          "113:   util.inspect({",
          "114:     hasOwnProperty: null",
          "115:   });",
          "116: });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b0c0111b04201bf99fde0fe0616b9fdf1f33655d",
      "candidate_info": {
        "commit_hash": "b0c0111b04201bf99fde0fe0616b9fdf1f33655d",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/b0c0111b04201bf99fde0fe0616b9fdf1f33655d",
        "files": [
          "lib/http.js",
          "test/simple/test-https-strict.js"
        ],
        "message": "https: Use host header as effective servername",
        "before_after_code_files": [
          "lib/http.js||lihttp.js",
          "test/simple/test-https-strict.js||test/simple/test-https-strict.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/http.js||lihttp.js": [
          "File: lib/http.js -> lihttp.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1067:   }",
          "1068:   if (this.sockets[name].length < this.maxSockets) {",
          "1071:   } else {",
          "1073:     if (!this.requests[name]) {",
          "",
          "[Removed Lines]",
          "1070:     req.onSocket(this.createSocket(name, host, port, localAddress));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1076:     this.requests[name].push(req);",
          "1077:   }",
          "1078: };",
          "1080:   var self = this;",
          "1081:   var options = util._extend({}, self.options);",
          "1082:   options.port = port;",
          "1083:   options.host = host;",
          "1084:   options.localAddress = localAddress;",
          "1085:   var s = self.createConnection(options);",
          "1086:   if (!self.sockets[name]) {",
          "1087:     self.sockets[name] = [];",
          "",
          "[Removed Lines]",
          "1079: Agent.prototype.createSocket = function(name, host, port, localAddress) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1122:     }",
          "1123:   }",
          "1124:   if (this.requests[name] && this.requests[name].length) {",
          "1127:   }",
          "1128: };",
          "",
          "[Removed Lines]",
          "1126:     this.createSocket(name, host, port, localAddress).emit('free');",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-https-strict.js||test/simple/test-https-strict.js": [
          "File: test/simple/test-https-strict.js -> test/simple/test-https-strict.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: if (!process.versions.openssl) {",
          "23:   console.error('Skipping because node compiled without OpenSSL.');",
          "24:   process.exit(0);",
          "25: }",
          "27: var common = require('../common');",
          "28: var assert = require('assert');",
          "30: var fs = require('fs');",
          "31: var path = require('path');",
          "32: var https = require('https');",
          "34: function file(fname) {",
          "35:   return path.resolve(common.fixturesDir, 'keys', fname);",
          "36: }",
          "38: function read(fname) {",
          "39:   return fs.readFileSync(file(fname));",
          "40: }",
          "43: var key1 = read('agent1-key.pem');",
          "44: var cert1 = read('agent1-cert.pem');",
          "47: var key2 = read('agent2-key.pem');",
          "48: var cert2 = read('agent2-cert.pem');",
          "51: var key3 = read('agent3-key.pem');",
          "52: var cert3 = read('agent3-cert.pem');",
          "54: var ca1 = read('ca1-cert.pem');",
          "55: var ca2 = read('ca2-cert.pem');",
          "59: var agent0 = new https.Agent();",
          "60: var agent1 = new https.Agent({ ca: [ca1] });",
          "61: var agent2 = new https.Agent({ ca: [ca2] });",
          "62: var agent3 = new https.Agent({ ca: [ca1, ca2] });",
          "64: var options1 = {",
          "65:   key: key1,",
          "66:   cert: cert1",
          "67: };",
          "69: var options2 = {",
          "70:   key: key2,",
          "71:   cert: cert2",
          "72: };",
          "74: var options3 = {",
          "75:   key: key3,",
          "76:   cert: cert3",
          "77: };",
          "79: var server1 = server(options1);",
          "80: var server2 = server(options2);",
          "81: var server3 = server(options3);",
          "83: var listenWait = 0;",
          "85: var port = common.PORT;",
          "86: var port1 = port++;",
          "87: var port2 = port++;",
          "88: var port3 = port++;",
          "89: server1.listen(port1, listening());",
          "90: server2.listen(port2, listening());",
          "91: server3.listen(port3, listening());",
          "93: var responseErrors = {};",
          "94: var expectResponseCount = 0;",
          "95: var responseCount = 0;",
          "96: var pending = 0;",
          "100: function server(options, port) {",
          "101:   var s = https.createServer(options, handler);",
          "102:   s.requests = [];",
          "103:   s.expectCount = 0;",
          "104:   return s;",
          "105: }",
          "107: function handler(req, res) {",
          "108:   this.requests.push(req.url);",
          "109:   res.statusCode = 200;",
          "110:   res.setHeader('foo', 'bar');",
          "111:   res.end('hello, world\\n');",
          "112: }",
          "114: function listening() {",
          "115:   listenWait++;",
          "116:   return function() {",
          "117:     listenWait--;",
          "118:     if (listenWait === 0) {",
          "119:       allListening();",
          "120:     }",
          "121:   }",
          "122: }",
          "124: function makeReq(path, port, error, host, ca) {",
          "125:   pending++;",
          "126:   var options = {",
          "127:     port: port,",
          "128:     path: path,",
          "129:     ca: ca",
          "130:   };",
          "131:   var whichCa = 0;",
          "132:   if (!ca) {",
          "133:     options.agent = agent0;",
          "134:   } else {",
          "135:     if (!Array.isArray(ca)) ca = [ca];",
          "136:     if (-1 !== ca.indexOf(ca1) && -1 !== ca.indexOf(ca2)) {",
          "137:       options.agent = agent3;",
          "138:     } else if (-1 !== ca.indexOf(ca1)) {",
          "139:       options.agent = agent1;",
          "140:     } else if (-1 !== ca.indexOf(ca2)) {",
          "141:       options.agent = agent2;",
          "142:     } else {",
          "143:       options.agent = agent0;",
          "144:     }",
          "145:   }",
          "147:   if (host) {",
          "148:     options.headers = { host: host }",
          "149:   }",
          "150:   var req = https.get(options);",
          "151:   expectResponseCount++;",
          "152:   var server = port === port1 ? server1",
          "153:       : port === port2 ? server2",
          "154:       : port === port3 ? server3",
          "155:       : null;",
          "157:   if (!server) throw new Error('invalid port: '+port);",
          "158:   server.expectCount++;",
          "160:   req.on('response', function(res) {",
          "161:     responseCount++;",
          "162:     assert.equal(res.connection.authorizationError, error);",
          "163:     responseErrors[path] = res.connection.authorizationError;",
          "164:     pending--;",
          "165:     if (pending === 0) {",
          "166:       server1.close();",
          "167:       server2.close();",
          "168:       server3.close();",
          "169:     }",
          "170:   })",
          "171: }",
          "173: function allListening() {",
          "177:   makeReq('/inv1', port1, 'UNABLE_TO_VERIFY_LEAF_SIGNATURE');",
          "178:   makeReq('/inv1-ca1', port1,",
          "179:           'Hostname/IP doesn\\'t match certificate\\'s altnames',",
          "180:           null, ca1);",
          "181:   makeReq('/inv1-ca1ca2', port1,",
          "182:           'Hostname/IP doesn\\'t match certificate\\'s altnames',",
          "183:           null, [ca1, ca2]);",
          "184:   makeReq('/val1-ca1', port1, null, 'agent1', ca1);",
          "185:   makeReq('/val1-ca1ca2', port1, null, 'agent1', [ca1, ca2]);",
          "186:   makeReq('/inv1-ca2', port1,",
          "187:           'UNABLE_TO_VERIFY_LEAF_SIGNATURE', 'agent1', ca2);",
          "191:   makeReq('/inv2', port2, 'DEPTH_ZERO_SELF_SIGNED_CERT');",
          "192:   makeReq('/inv2-ca1', port2, 'DEPTH_ZERO_SELF_SIGNED_CERT',",
          "193:           'agent2', ca1);",
          "194:   makeReq('/inv2-ca1ca2', port2, 'DEPTH_ZERO_SELF_SIGNED_CERT',",
          "195:           'agent2', [ca1, ca2]);",
          "198:   makeReq('/inv3', port3, 'UNABLE_TO_VERIFY_LEAF_SIGNATURE');",
          "199:   makeReq('/inv3-ca2', port3,",
          "200:           'Hostname/IP doesn\\'t match certificate\\'s altnames',",
          "201:           null, ca2);",
          "202:   makeReq('/inv3-ca1ca2', port3,",
          "203:           'Hostname/IP doesn\\'t match certificate\\'s altnames',",
          "204:           null, [ca1, ca2]);",
          "205:   makeReq('/val3-ca2', port3, null, 'agent3', ca2);",
          "206:   makeReq('/val3-ca1ca2', port3, null, 'agent3', [ca1, ca2]);",
          "207:   makeReq('/inv3-ca1', port3,",
          "208:           'UNABLE_TO_VERIFY_LEAF_SIGNATURE', 'agent1', ca1);",
          "210: }",
          "212: process.on('exit', function() {",
          "213:   console.error(responseErrors);",
          "214:   assert.equal(server1.requests.length, server1.expectCount);",
          "215:   assert.equal(server2.requests.length, server2.expectCount);",
          "216:   assert.equal(server3.requests.length, server3.expectCount);",
          "217:   assert.equal(responseCount, expectResponseCount);",
          "218: });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "feaa8a41c7533c254923ea7333457234ed44f8f9",
      "candidate_info": {
        "commit_hash": "feaa8a41c7533c254923ea7333457234ed44f8f9",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/feaa8a41c7533c254923ea7333457234ed44f8f9",
        "files": [
          "src/node.cc",
          "src/node.js",
          "test/simple/test-force-repl.js"
        ],
        "message": "cmd: add a -i / --interactive flag to force the REPL\n\nThis is the only way to spawn a node child process in REPL mode, and will\nalso be needed to be able to use the REPL in MinTTY.",
        "before_after_code_files": [
          "src/node.cc||src/node.cc",
          "src/node.js||src/node.js",
          "test/simple/test-force-repl.js||test/simple/test-force-repl.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.cc||src/node.cc": [
          "File: src/node.cc -> src/node.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "113: static bool print_eval = false;",
          "114: static char *eval_string = NULL;",
          "115: static int option_end_index = 0;",
          "116: static bool use_debug_agent = false;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "114: static bool force_repl = false;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2155:     process->Set(String::NewSymbol(\"_print_eval\"), Boolean::New(print_eval));",
          "2156:   }",
          "2158:   size_t size = 2*PATH_MAX;",
          "2159:   char* execPath = new char[size];",
          "2160:   if (uv_exepath(execPath, &size) != 0) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2159:   if (force_repl) {",
          "2160:     process->Set(String::NewSymbol(\"_forceRepl\"), True());",
          "2161:   }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2299:          \"  -v, --version        print node's version\\n\"",
          "2300:          \"  -e, --eval script    evaluate script\\n\"",
          "2301:          \"  -p, --print          print result of --eval\\n\"",
          "2302:          \"  --v8-options         print v8 command line options\\n\"",
          "2303:          \"  --vars               print various compiled-in variables\\n\"",
          "2304:          \"  --max-stack-size=val set max v8 stack size (bytes)\\n\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2307:          \"  -i, --interactive    always enter the REPL even if stdin\\n\"",
          "2308:          \"                       does not appear to be a terminal\\n\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2360:     } else if (strcmp(arg, \"--print\") == 0 || strcmp(arg, \"-p\") == 0) {",
          "2361:       print_eval = true;",
          "2362:       argv[i] = const_cast<char*>(\"\");",
          "2363:     } else if (strcmp(arg, \"--v8-options\") == 0) {",
          "2364:       argv[i] = const_cast<char*>(\"--help\");",
          "2365:     } else if (argv[i][0] != '-') {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2370:     } else if (strcmp(arg, \"--interactive\") == 0 || strcmp(arg, \"-i\") == 0) {",
          "2371:       force_repl = true;",
          "2372:       argv[i] = const_cast<char*>(\"\");",
          "",
          "---------------"
        ],
        "src/node.js||src/node.js": [
          "File: src/node.js -> src/node.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "118:     } else {",
          "119:       var Module = NativeModule.require('module');",
          "124:         var repl = Module.requireRepl().start('> ', null, null, true);",
          "125:         repl.on('exit', function() {",
          "",
          "[Removed Lines]",
          "122:       if (NativeModule.require('tty').isatty(0)) {",
          "",
          "[Added Lines]",
          "122:       if (process._forceRepl || NativeModule.require('tty').isatty(0)) {",
          "",
          "---------------"
        ],
        "test/simple/test-force-repl.js||test/simple/test-force-repl.js": [
          "File: test/simple/test-force-repl.js -> test/simple/test-force-repl.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var common = require('../common');",
          "23: var assert = require('assert');",
          "24: var spawn = require('child_process').spawn;",
          "27: var cp = spawn(process.execPath, ['-i']);",
          "28: var gotToEnd = false;",
          "29: var timeoutId = setTimeout(function() {",
          "30:   throw new Error('timeout!');",
          "31: }, 1000); // give node + the repl 1 second to boot up",
          "33: cp.stdout.setEncoding('utf8');",
          "35: cp.stdout.once('data', function(b) {",
          "36:   clearTimeout(timeoutId);",
          "37:   assert.equal(b, '> ');",
          "38:   gotToEnd = true;",
          "39:   cp.kill();",
          "40: });",
          "42: process.on('exit', function() {",
          "43:   assert(gotToEnd);",
          "44: });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a3efcd2006614c3835c9395b91ab89c1f260806c",
      "candidate_info": {
        "commit_hash": "a3efcd2006614c3835c9395b91ab89c1f260806c",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/a3efcd2006614c3835c9395b91ab89c1f260806c",
        "files": [
          "ChangeLog",
          "doc/about/index.html",
          "doc/community/index.html",
          "doc/index.html",
          "doc/logos/index.html",
          "doc/template.html",
          "src/node_version.h"
        ],
        "message": "2012.02.01, Version 0.7.2 (unstable)\n\n* Update V8 to 3.8.9\n\n* Support for sharing streams across Isolates (Igor Zinkovsky)\n\n* #2636 - Fix case where http_parsers are freed too early (koichik)\n\n* url: Support for IPv6 addresses in URLs (\u0141ukasz Walukiewicz)\n\n* child_process: Add disconnect() method to child processes (Andreas Madsen)\n\n* fs: add O_EXCL support, exclusive open file (Ben Noordhuis)\n\n* fs: more specific error messages (Tj Holowaychuk)\n\n* tty: emit 'unknown' key event if key sequence not found (Dan VerWeire, Nathan Rajlich)\n\n* build: compile release build too if BUILDTYPE=Debug (Ben Noordhuis)\n\n* module: fix --debug-brk on symlinked scripts (Fedor Indutny)\n\n* zlib: fix `Failed to set dictionary` issue (Fedor Indutny)\n\n* waf: predict target arch for OS X (Fedor Indutny)",
        "before_after_code_files": [
          "src/node_version.h||src/node_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_version.h||src/node_version.h": [
          "File: src/node_version.h -> src/node_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: #define NODE_MAJOR_VERSION 0",
          "30: #define NODE_MINOR_VERSION 7",
          "31: #define NODE_PATCH_VERSION 2",
          "34: #ifndef NODE_STRINGIFY",
          "35: #define NODE_STRINGIFY(n) NODE_STRINGIFY_HELPER(n)",
          "",
          "[Removed Lines]",
          "32: #define NODE_VERSION_IS_RELEASE 0",
          "",
          "[Added Lines]",
          "32: #define NODE_VERSION_IS_RELEASE 1",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5d9968f53dce708966eb92a612ca8a7833a51ced",
      "candidate_info": {
        "commit_hash": "5d9968f53dce708966eb92a612ca8a7833a51ced",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/5d9968f53dce708966eb92a612ca8a7833a51ced",
        "files": [
          "tools/install.py"
        ],
        "message": "installer: don't install header files\n\nThey are no longer necessary now that node-waf has been removed. People need to\nswitch to node-gyp.",
        "before_after_code_files": [
          "tools/install.py||tools/install.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tools/install.py||tools/install.py": [
          "File: tools/install.py -> tools/install.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:     assert(0) # unhandled action type",
          "116: def files(action):",
          "138:   action(['doc/node.1'], 'share/man/man1/')",
          "139:   action(['out/Release/node'], 'bin/node')",
          "",
          "[Removed Lines]",
          "117:   action(['deps/uv/include/uv.h',",
          "118:           'deps/v8/include/v8-debug.h',",
          "119:           'deps/v8/include/v8-preparser.h',",
          "120:           'deps/v8/include/v8-profiler.h',",
          "121:           'deps/v8/include/v8-testing.h',",
          "122:           'deps/v8/include/v8.h',",
          "123:           'deps/v8/include/v8stdint.h',",
          "124:           'src/eio-emul.h',",
          "125:           'src/ev-emul.h',",
          "126:           'src/node.h',",
          "127:           'src/node_buffer.h',",
          "128:           'src/node_object_wrap.h',",
          "129:           'src/node_version.h'],",
          "130:           'include/node/')",
          "131:   action(['deps/uv/include/uv-private/eio.h',",
          "132:           'deps/uv/include/uv-private/ev.h',",
          "133:           'deps/uv/include/uv-private/ngx-queue.h',",
          "134:           'deps/uv/include/uv-private/tree.h',",
          "135:           'deps/uv/include/uv-private/uv-unix.h',",
          "136:           'deps/uv/include/uv-private/uv-win.h'],",
          "137:           'include/node/uv-private/')",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}