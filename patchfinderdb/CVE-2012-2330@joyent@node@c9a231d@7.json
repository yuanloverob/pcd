{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0b57fee3f8598e4d16af5ce89714e460dd042700",
      "candidate_info": {
        "commit_hash": "0b57fee3f8598e4d16af5ce89714e460dd042700",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/0b57fee3f8598e4d16af5ce89714e460dd042700",
        "files": [
          "test/disabled/test-fs-largefile.js",
          "test/simple/test-fs-largefile.js"
        ],
        "message": "enable test-fs-largefile.js test",
        "before_after_code_files": [
          "test/disabled/test-fs-largefile.js||test/simple/test-fs-largefile.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/disabled/test-fs-largefile.js||test/simple/test-fs-largefile.js": [
          "File: test/disabled/test-fs-largefile.js -> test/simple/test-fs-largefile.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "53: fs.close(fd);",
          "55: process.on('exit', function() {",
          "57: });",
          "",
          "[Removed Lines]",
          "56:   fs.unlink(filepath);",
          "",
          "[Added Lines]",
          "56:   fs.unlinkSync(filepath);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "39a0836d5c9bd4f76b07fa32cf81310ec8b80383",
      "candidate_info": {
        "commit_hash": "39a0836d5c9bd4f76b07fa32cf81310ec8b80383",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/39a0836d5c9bd4f76b07fa32cf81310ec8b80383",
        "files": [
          "lib/fs.js",
          "test/simple/test-regress-GH-4027.js"
        ],
        "message": "fs: fix watchFile() missing deletion events\n\nMake sure the deletion event gets reported in the following scenario:\n\n  1. Watch a file.\n  2. The initial stat() goes okay.\n  3. Something deletes the watched file.\n  4. The second stat() fails with ENOENT.\n\nThe second stat() translates into the first 'change' event but a logic error\nstopped it from getting emitted.\n\nFixes #4027.",
        "before_after_code_files": [
          "lib/fs.js||lifs.js",
          "test/simple/test-regress-GH-4027.js||test/simple/test-regress-GH-4027.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/fs.js||lifs.js": [
          "File: lib/fs.js -> lifs.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "881:   var oldStatus = -1;",
          "883:   this._handle.onchange = function(current, previous, newStatus) {",
          "885:     oldStatus = newStatus;",
          "886:     self.emit('change', current, previous);",
          "887:   };",
          "",
          "[Removed Lines]",
          "884:     if (oldStatus == -1 && newStatus == -1) return;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-regress-GH-4027.js||test/simple/test-regress-GH-4027.js": [
          "File: test/simple/test-regress-GH-4027.js -> test/simple/test-regress-GH-4027.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var common = require('../common');",
          "23: var assert = require('assert');",
          "24: var path = require('path');",
          "25: var fs = require('fs');",
          "27: var filename = path.join(common.tmpDir, 'watched');",
          "28: fs.writeFileSync(filename, 'quis custodiet ipsos custodes');",
          "29: setTimeout(fs.unlinkSync, 100, filename);",
          "31: var seenEvent = 0;",
          "32: process.on('exit', function() {",
          "33:   assert.equal(seenEvent, 1);",
          "34: });",
          "36: fs.watchFile(filename, { interval: 50 }, function(curr, prev) {",
          "37:   assert.equal(prev.nlink, 1);",
          "38:   assert.equal(curr.nlink, 0);",
          "39:   fs.unwatchFile(filename);",
          "40:   seenEvent++;",
          "41: });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4ec77e2e2861cdd43c2837d214d1478ebe5a0783",
      "candidate_info": {
        "commit_hash": "4ec77e2e2861cdd43c2837d214d1478ebe5a0783",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/4ec77e2e2861cdd43c2837d214d1478ebe5a0783",
        "files": [
          "lib/child_process.js",
          "test/simple/test-child-process-kill-throw.js"
        ],
        "message": "child_process: rename field _internal to _handle\n\nConsistent with how other classes that are built around HandleWraps call it.",
        "before_after_code_files": [
          "lib/child_process.js||lichild_process.js",
          "test/simple/test-child-process-kill-throw.js||test/simple/test-child-process-kill-throw.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/child_process.js||lichild_process.js": [
          "File: lib/child_process.js -> lichild_process.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "627:   this.exitCode = null;",
          "628:   this.killed = false;",
          "",
          "[Removed Lines]",
          "630:   this._internal = new Process();",
          "631:   this._internal.onexit = function(exitCode, signalCode) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "645:       self.stdin.destroy();",
          "646:     }",
          "651:     self.emit('exit', self.exitCode, self.signalCode);",
          "",
          "[Removed Lines]",
          "648:     self._internal.close();",
          "649:     self._internal = null;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "681:   setStreamOption('stdoutStream', 1, options);",
          "682:   setStreamOption('stderrStream', 2, options);",
          "686:   if (r) {",
          "687:     if (options.stdinStream) {",
          "",
          "[Removed Lines]",
          "684:   var r = this._internal.spawn(options);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "696:       options.stderrStream.close();",
          "697:     }",
          "701:     throw errnoException(errno, 'spawn');",
          "702:   }",
          "706:   if (options.stdinStream) {",
          "707:     this.stdin = createSocket(options.stdinStream, false);",
          "",
          "[Removed Lines]",
          "699:     this._internal.close();",
          "700:     this._internal = null;",
          "704:   this.pid = this._internal.pid;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "754:     throw new Error('Unknown signal: ' + sig);",
          "755:   }",
          "758:     this.killed = true;",
          "760:     if (r === -1) {",
          "761:       this.emit('error', errnoException(errno, 'kill'));",
          "762:       return;",
          "",
          "[Removed Lines]",
          "757:   if (this._internal) {",
          "759:     var r = this._internal.kill(signal);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-child-process-kill-throw.js||test/simple/test-child-process-kill-throw.js": [
          "File: test/simple/test-child-process-kill-throw.js -> test/simple/test-child-process-kill-throw.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:   var error = {};",
          "32:   child.on('exit', function() {",
          "34:       kill: function() {",
          "35:         global.errno = 42;",
          "36:         return -1;",
          "",
          "[Removed Lines]",
          "33:     child._internal = {",
          "",
          "[Added Lines]",
          "33:     child._handle = {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "459717efb629cddb53d5b8cc64eb91a1e8de5340",
      "candidate_info": {
        "commit_hash": "459717efb629cddb53d5b8cc64eb91a1e8de5340",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/459717efb629cddb53d5b8cc64eb91a1e8de5340",
        "files": [
          "src/node_version.h"
        ],
        "message": "Now working on 0.9.2",
        "before_after_code_files": [
          "src/node_version.h||src/node_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_version.h||src/node_version.h": [
          "File: src/node_version.h -> src/node_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: #define NODE_MAJOR_VERSION 0",
          "26: #define NODE_MINOR_VERSION 9",
          "30: #ifndef NODE_STRINGIFY",
          "31: #define NODE_STRINGIFY(n) NODE_STRINGIFY_HELPER(n)",
          "",
          "[Removed Lines]",
          "27: #define NODE_PATCH_VERSION 1",
          "28: #define NODE_VERSION_IS_RELEASE 1",
          "",
          "[Added Lines]",
          "27: #define NODE_PATCH_VERSION 2",
          "28: #define NODE_VERSION_IS_RELEASE 0",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7f896889ba88e0e90dd8cbcdc55ba3384fa01b02",
      "candidate_info": {
        "commit_hash": "7f896889ba88e0e90dd8cbcdc55ba3384fa01b02",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/7f896889ba88e0e90dd8cbcdc55ba3384fa01b02",
        "files": [
          "deps/uv/src/win/tcp.c"
        ],
        "message": "uv: upgrade to b1649b6f",
        "before_after_code_files": [
          "deps/uv/src/win/tcp.c||deps/uv/src/win/tcp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/src/win/tcp.c||deps/uv/src/win/tcp.c": [
          "File: deps/uv/src/win/tcp.c -> deps/uv/src/win/tcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "94:     return -1;",
          "95:   }",
          "105:   if (CreateIoCompletionPort((HANDLE)socket,",
          "",
          "[Removed Lines]",
          "98:   if (!SetHandleInformation((HANDLE)socket, HANDLE_FLAG_INHERIT, 0)) {",
          "99:     uv__set_sys_error(loop, GetLastError());",
          "100:     return -1;",
          "101:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "258:       return -1;",
          "259:     }",
          "261:     if (uv_tcp_set_socket(handle->loop, handle, sock, 0) == -1) {",
          "262:       closesocket(sock);",
          "263:       return -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "256:     if (!SetHandleInformation((HANDLE) sock, HANDLE_FLAG_INHERIT, 0)) {",
          "257:       uv__set_sys_error(handle->loop, GetLastError());",
          "258:       closesocket(sock);",
          "259:       return -1;",
          "260:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "371:     return;",
          "372:   }",
          "375:   memset(&(req->overlapped), 0, sizeof(req->overlapped));",
          "376:   if (handle->flags & UV_HANDLE_EMULATE_IOCP) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "376:   if (!SetHandleInformation((HANDLE) accept_socket, HANDLE_FLAG_INHERIT, 0)) {",
          "377:     SET_REQ_ERROR(req, GetLastError());",
          "378:     uv_insert_pending_req(loop, (uv_req_t*)req);",
          "379:     handle->reqs_pending++;",
          "380:     closesocket(accept_socket);",
          "381:     return;",
          "382:   }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1154:     return -1;",
          "1155:   }",
          "1160:   if (tcp_connection) {",
          "1161:     uv_connection_init((uv_stream_t*)tcp);",
          "1162:   }",
          "1164:   if (socket_protocol_info->iAddressFamily == AF_INET6) {",
          "1165:     tcp->flags |= UV_HANDLE_IPV6;",
          "1170:   }",
          "1172:   tcp->loop->active_tcp_streams++;",
          "1173:   return 0;",
          "1174: }",
          "",
          "[Removed Lines]",
          "1157:   tcp->flags |= UV_HANDLE_BOUND;",
          "1158:   tcp->flags |= UV_HANDLE_SHARED_TCP_SOCKET;",
          "1166:   }",
          "1168:   if (uv_tcp_set_socket(tcp->loop, tcp, socket, 1) != 0) {",
          "1169:     return -1;",
          "",
          "[Added Lines]",
          "1167:   if (!SetHandleInformation((HANDLE) socket, HANDLE_FLAG_INHERIT, 0)) {",
          "1168:     uv__set_sys_error(tcp->loop, GetLastError());",
          "1169:     closesocket(socket);",
          "1170:     return -1;",
          "1171:   }",
          "1173:   if (uv_tcp_set_socket(tcp->loop, tcp, socket, 1) != 0) {",
          "1174:     closesocket(socket);",
          "1175:     return -1;",
          "1176:   }",
          "1182:   tcp->flags |= UV_HANDLE_BOUND;",
          "1183:   tcp->flags |= UV_HANDLE_SHARED_TCP_SOCKET;",
          "",
          "---------------"
        ]
      }
    }
  ]
}