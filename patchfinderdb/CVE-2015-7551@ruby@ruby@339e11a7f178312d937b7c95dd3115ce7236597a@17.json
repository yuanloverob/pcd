{
  "cve_id": "CVE-2015-7551",
  "cve_desc": "The Fiddle::Handle implementation in ext/fiddle/handle.c in Ruby before 2.0.0-p648, 2.1 before 2.1.8, and 2.2 before 2.2.4, as distributed in Apple OS X before 10.11.4 and other products, mishandles tainting, which allows context-dependent attackers to execute arbitrary code or cause a denial of service (application crash) via a crafted string, related to the DL module and the libffi library.  NOTE: this vulnerability exists because of a CVE-2009-5147 regression.",
  "repo": "ruby/ruby",
  "patch_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
  "patch_info": {
    "commit_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
    "repo": "ruby/ruby",
    "commit_url": "https://github.com/ruby/ruby/commit/339e11a7f178312d937b7c95dd3115ce7236597a",
    "files": [
      "ChangeLog",
      "ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb",
      "version.h"
    ],
    "message": "merge revision(s): 53153 and 23405@ruby_1_9_1\n\n\t* ext/fiddle/handle.c: check tainted string arguments.\n\t  Patch provided by tenderlove and nobu.\n\n\t* test/fiddle/test_handle.rb (class TestHandle): add test for above.\n\n\t* ext/dl/handle.c (rb_dlhandle_initialize): prohibits DL::dlopen\n\t  with a tainted name of library.\n\t  Patch by sheepman <sheepman AT sheepman.sakura.ne.jp>.\n\n\t* ext/dl/handle.c (rb_dlhandle_sym): ditto\n\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@53156 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
    "before_after_code_files": [
      "ext/fiddle/handle.c||ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb",
      "version.h||version.h"
    ]
  },
  "patch_diff": {
    "ext/fiddle/handle.c||ext/fiddle/handle.c": [
      "File: ext/fiddle/handle.c -> ext/fiddle/handle.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #include <ruby.h>",
      "2: #include <fiddle.h>",
      "4: VALUE rb_cHandle;",
      "6: struct dl_handle {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4: #define SafeStringValueCStr(v) (rb_check_safe_obj(rb_string_value(&v)), StringValueCStr(v))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "143:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "144:  break;",
      "145:       case 1:",
      "147:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "148:  break;",
      "149:       case 2:",
      "151:  cflag = NUM2INT(flag);",
      "152:  break;",
      "153:       default:",
      "",
      "[Removed Lines]",
      "146:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "150:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "",
      "[Added Lines]",
      "148:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "152:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "263:     return PTR2NUM(fiddle_handle);",
      "264: }",
      "",
      "[Removed Lines]",
      "266: static VALUE fiddle_handle_sym(void *handle, const char *symbol);",
      "",
      "[Added Lines]",
      "268: static VALUE fiddle_handle_sym(void *handle, VALUE symbol);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "282:  rb_raise(rb_eFiddleError, \"closed handle\");",
      "283:     }",
      "286: }",
      "288: #ifndef RTLD_NEXT",
      "",
      "[Removed Lines]",
      "285:     return fiddle_handle_sym(fiddle_handle->ptr, StringValueCStr(sym));",
      "",
      "[Added Lines]",
      "287:     return fiddle_handle_sym(fiddle_handle->ptr, sym);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "305: static VALUE",
      "306: rb_fiddle_handle_s_sym(VALUE self, VALUE sym)",
      "307: {",
      "309: }",
      "311: static VALUE",
      "313: {",
      "314: #if defined(HAVE_DLERROR)",
      "315:     const char *err;",
      "",
      "[Removed Lines]",
      "308:     return fiddle_handle_sym(RTLD_NEXT, StringValueCStr(sym));",
      "312: fiddle_handle_sym(void *handle, const char *name)",
      "",
      "[Added Lines]",
      "310:     return fiddle_handle_sym(RTLD_NEXT, sym);",
      "314: fiddle_handle_sym(void *handle, VALUE symbol)",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "318: # define CHECK_DLERROR",
      "319: #endif",
      "320:     void (*func)();",
      "322:     rb_secure(2);",
      "323: #ifdef HAVE_DLERROR",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "323:     const char *name = SafeStringValueCStr(symbol);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "367:     }",
      "368: #endif",
      "369:     if( !func ){",
      "371:     }",
      "373:     return PTR2NUM(func);",
      "",
      "[Removed Lines]",
      "370:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%s\\\"\", name);",
      "",
      "[Added Lines]",
      "373:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%\"PRIsVALUE\"\\\"\", symbol);",
      "",
      "---------------"
    ],
    "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb": [
      "File: test/fiddle/test_handle.rb -> test/fiddle/test_handle.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "11:     include Test::Unit::Assertions",
      "13:     def test_to_i",
      "14:       handle = Fiddle::Handle.new(LIBC_SO)",
      "15:       assert_kind_of Integer, handle.to_i",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "13:     def test_safe_handle_open",
      "14:       t = Thread.new do",
      "15:         $SAFE = 1",
      "16:         Fiddle::Handle.new(LIBC_SO.taint)",
      "17:       end",
      "18:       assert_raise(SecurityError) { t.value }",
      "19:     end",
      "21:     def test_safe_function_lookup",
      "22:       t = Thread.new do",
      "23:         h = Fiddle::Handle.new(LIBC_SO)",
      "24:         $SAFE = 1",
      "25:         h[\"qsort\".taint]",
      "26:       end",
      "27:       assert_raise(SecurityError) { t.value }",
      "28:     end",
      "",
      "---------------"
    ],
    "version.h||version.h": [
      "File: version.h -> version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #define RUBY_VERSION \"2.1.8\"",
      "2: #define RUBY_RELEASE_DATE \"2015-12-16\"",
      "5: #define RUBY_RELEASE_YEAR 2015",
      "6: #define RUBY_RELEASE_MONTH 12",
      "",
      "[Removed Lines]",
      "3: #define RUBY_PATCHLEVEL 438",
      "",
      "[Added Lines]",
      "3: #define RUBY_PATCHLEVEL 439",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "63f9fa6e292920be991116c270d7170f98449684",
      "candidate_info": {
        "commit_hash": "63f9fa6e292920be991116c270d7170f98449684",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/63f9fa6e292920be991116c270d7170f98449684",
        "files": [
          "version.h"
        ],
        "message": "* 2015-01-06\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@49151 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.5\"",
          "3: #define RUBY_PATCHLEVEL 276",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 1",
          "9: #include \"ruby/version.h\"",
          "",
          "[Removed Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-01-05\"",
          "7: #define RUBY_RELEASE_DAY 5",
          "",
          "[Added Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-01-06\"",
          "7: #define RUBY_RELEASE_DAY 6",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e9ea9d6527b1f1db455d89ce6e5b6c3cfa40a184",
      "candidate_info": {
        "commit_hash": "e9ea9d6527b1f1db455d89ce6e5b6c3cfa40a184",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/e9ea9d6527b1f1db455d89ce6e5b6c3cfa40a184",
        "files": [
          "ChangeLog",
          "ext/win32/lib/win32/registry.rb",
          "version.h"
        ],
        "message": "merge revision(s) 49542: [Backport #10820]\n\n\t* ext/win32/lib/win32/registry.rb (Win32::Registry::API): use wide\n\t  versions of RegDeleteValue and RegDeleteKey.\n\t  [ruby-core:67958] [Bug #10820]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@51596 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "ext/win32/lib/win32/registry.rb||ext/win32/lib/win32/registry.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "ext/win32/lib/win32/registry.rb||ext/win32/lib/win32/registry.rb": [
          "File: ext/win32/lib/win32/registry.rb -> ext/win32/lib/win32/registry.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "222:         \"long RegEnumKeyExW(void *, long, void *, void *, void *, void *, void *, void *)\",",
          "223:         \"long RegQueryValueExW(void *, void *, void *, void *, void *, void *)\",",
          "224:         \"long RegSetValueExW(void *, void *, long, long, void *, long)\",",
          "227:         \"long RegFlushKey(void *)\",",
          "228:         \"long RegCloseKey(void *)\",",
          "229:         \"long RegQueryInfoKey(void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *, void *)\",",
          "",
          "[Removed Lines]",
          "225:         \"long RegDeleteValue(void *, void *)\",",
          "226:         \"long RegDeleteKey(void *, void *)\",",
          "",
          "[Added Lines]",
          "225:         \"long RegDeleteValueW(void *, void *)\",",
          "226:         \"long RegDeleteKeyW(void *, void *)\",",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.7\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "9: #include \"ruby/version.h\"",
          "",
          "[Removed Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-07-07\"",
          "3: #define RUBY_PATCHLEVEL 379",
          "6: #define RUBY_RELEASE_MONTH 7",
          "7: #define RUBY_RELEASE_DAY 7",
          "",
          "[Added Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-08-17\"",
          "3: #define RUBY_PATCHLEVEL 380",
          "6: #define RUBY_RELEASE_MONTH 8",
          "7: #define RUBY_RELEASE_DAY 17",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4ef48a781ad8519f8dfe4871336d25a84e62bcd2",
      "candidate_info": {
        "commit_hash": "4ef48a781ad8519f8dfe4871336d25a84e62bcd2",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/4ef48a781ad8519f8dfe4871336d25a84e62bcd2",
        "files": [
          "ChangeLog",
          "lib/logger.rb",
          "version.h"
        ],
        "message": "merge revision(s) 53790,53844: [Backport #12054]\n\n\t* lib/logger.rb: Remove block from Logger.add as it's not needed\n\t  patch provided by Daniel Lobato Garc\uff83\uff6d [fix GH-1240] [Bug #12054]\n\t  patch provided by Daniel Lobato Garcia [fix GH-1240] [Bug #12054]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@53938 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "lib/logger.rb||lilogger.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "lib/logger.rb||lilogger.rb": [
          "File: lib/logger.rb -> lilogger.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "361:   # * Append open does not need to lock file.",
          "362:   # * If the OS supports multi I/O, records possibly may be mixed.",
          "363:   #",
          "365:     severity ||= UNKNOWN",
          "366:     if @logdev.nil? or severity < @level",
          "367:       return true",
          "",
          "[Removed Lines]",
          "364:   def add(severity, message = nil, progname = nil, &block)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.9\"",
          "2: #define RUBY_RELEASE_DATE \"2016-02-25\"",
          "5: #define RUBY_RELEASE_YEAR 2016",
          "6: #define RUBY_RELEASE_MONTH 2",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 456",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 457",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d11451301132d5947b3a60c2c3f4ba0c6004130b",
      "candidate_info": {
        "commit_hash": "d11451301132d5947b3a60c2c3f4ba0c6004130b",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/d11451301132d5947b3a60c2c3f4ba0c6004130b",
        "files": [
          "ChangeLog",
          "ext/dl/handle.c",
          "version.h"
        ],
        "message": "fix mistake of previous commit.\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@53158 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "ext/dl/handle.c||ext/dl/handle.c",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "ext/dl/handle.c||ext/dl/handle.c": [
          "File: ext/dl/handle.c -> ext/dl/handle.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: #include <ruby.h>",
          "6: #include \"dl.h\"",
          "8: VALUE rb_cDLHandle;",
          "10: #ifdef _WIN32",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8: #define SafeStringValuePtr(v) (rb_string_value(&v), rb_check_safe_obj(v), RSTRING_PTR(v))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "132:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
          "133:  break;",
          "134:       case 1:",
          "136:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
          "137:  break;",
          "138:       case 2:",
          "140:  cflag = NUM2INT(flag);",
          "141:  break;",
          "142:       default:",
          "",
          "[Removed Lines]",
          "135:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
          "139:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
          "",
          "[Added Lines]",
          "137:  clib = NIL_P(lib) ? NULL : SafeStringValuePtr(lib);",
          "141:  clib = NIL_P(lib) ? NULL : SafeStringValuePtr(lib);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "265: rb_dlhandle_sym(VALUE self, VALUE sym)",
          "266: {",
          "267:     struct dl_handle *dlhandle;",
          "269:     TypedData_Get_Struct(self, struct dl_handle, &dlhandle_data_type, dlhandle);",
          "270:     if( ! dlhandle->open ){",
          "271:  rb_raise(rb_eDLError, \"closed handle\");",
          "272:     }",
          "275: }",
          "277: #ifndef RTLD_NEXT",
          "",
          "[Removed Lines]",
          "274:     return dlhandle_sym(dlhandle->ptr, StringValueCStr(sym));",
          "",
          "[Added Lines]",
          "270:     const char *name;",
          "272:     name = SafeStringValuePtr(sym);",
          "279:     return dlhandle_sym(dlhandle->ptr, name);",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.8\"",
          "2: #define RUBY_RELEASE_DATE \"2015-12-16\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 12",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 439",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 440",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "431b9dbd009f47458cd502784fad01983e656ce0",
      "candidate_info": {
        "commit_hash": "431b9dbd009f47458cd502784fad01983e656ce0",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/431b9dbd009f47458cd502784fad01983e656ce0",
        "files": [
          "ChangeLog",
          "thread_pthread.c",
          "version.h"
        ],
        "message": "merge revision(s) 51626: [Backport #11457]\n\n\t* thread_pthread.c (reserve_stack): ensure the memory is really\n\t  allocated. [Bug #11457]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@51975 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "thread_pthread.c||thread_pthread.c",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "thread_pthread.c||thread_pthread.c": [
          "File: thread_pthread.c -> thread_pthread.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "681:  limit -= size;",
          "682:  if (buf > limit) {",
          "683:      limit = alloca(buf - limit);",
          "684:      limit -= stack_check_margin;",
          "686:  }",
          "687:     }",
          "688: }",
          "",
          "[Removed Lines]",
          "685:      limit[0] = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.8\"",
          "2: #define RUBY_RELEASE_DATE \"2015-09-29\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 9",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 401",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 402",
          "",
          "---------------"
        ]
      }
    }
  ]
}