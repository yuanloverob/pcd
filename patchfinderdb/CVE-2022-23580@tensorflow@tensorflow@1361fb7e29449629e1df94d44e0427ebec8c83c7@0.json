{
  "cve_id": "CVE-2022-23580",
  "cve_desc": "Tensorflow is an Open Source Machine Learning Framework. During shape inference, TensorFlow can allocate a large vector based on a value from a tensor controlled by the user. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "1361fb7e29449629e1df94d44e0427ebec8c83c7",
  "patch_info": {
    "commit_hash": "1361fb7e29449629e1df94d44e0427ebec8c83c7",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/1361fb7e29449629e1df94d44e0427ebec8c83c7",
    "files": [
      "tensorflow/core/framework/shape_inference.cc"
    ],
    "message": "Fix abort caused by allocating a too large vector.\n\nWe need to make sure that the number of dimensions in a shape is within limits.\n\nPiperOrigin-RevId: 408997911\nChange-Id: If59e1c23f2ec9c2d4ff4d8632fd62b2a7773a4eb",
    "before_after_code_files": [
      "tensorflow/core/framework/shape_inference.cc||tensorflow/core/framework/shape_inference.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/core/framework/shape_inference.cc||tensorflow/core/framework/shape_inference.cc": [
      "File: tensorflow/core/framework/shape_inference.cc -> tensorflow/core/framework/shape_inference.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "15: #include \"tensorflow/core/framework/shape_inference.h\"",
      "17: #include \"tensorflow/core/framework/bounds_check.h\"",
      "18: #include \"tensorflow/core/framework/full_type_util.h\"",
      "19: #include \"tensorflow/core/framework/node_def.pb.h\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "17: #include <cstdint>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "789:       return ReturnUnknownShape(out);",
      "790:     }",
      "791:     const auto num_dims = Value(shape_dim);",
      "792:     std::vector<DimensionHandle> dims;",
      "793:     dims.reserve(num_dims);",
      "794:     for (int i = 0; i < num_dims; i++) dims.push_back(UnknownDim());",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "800:     const int64_t max_dimensions = 1 << 20;",
      "801:     if (num_dims >= max_dimensions) {",
      "802:       return errors::Internal(",
      "803:           \"Cannot create a tensor with \", num_dims,",
      "804:           \" dimensions, as these would be more than maximum of \",",
      "805:           max_dimensions);",
      "806:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b7ecb3666c6aadc22a62e10639a01c95ed72d980",
      "candidate_info": {
        "commit_hash": "b7ecb3666c6aadc22a62e10639a01c95ed72d980",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/b7ecb3666c6aadc22a62e10639a01c95ed72d980",
        "files": [
          "tensorflow/core/framework/shape_inference.cc"
        ],
        "message": "Bump the maximum threshold before erroring\n\nPiperOrigin-RevId: 424653571\nChange-Id: Ic2d9f3a7db627d78cde80ad415105f3d53735b3b",
        "before_after_code_files": [
          "tensorflow/core/framework/shape_inference.cc||tensorflow/core/framework/shape_inference.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/framework/shape_inference.cc||tensorflow/core/framework/shape_inference.cc"
          ],
          "candidate": [
            "tensorflow/core/framework/shape_inference.cc||tensorflow/core/framework/shape_inference.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/framework/shape_inference.cc||tensorflow/core/framework/shape_inference.cc": [
          "File: tensorflow/core/framework/shape_inference.cc -> tensorflow/core/framework/shape_inference.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "800:     if (num_dims >= max_dimensions) {",
          "801:       return errors::Internal(",
          "802:           \"Cannot create a tensor with \", num_dims,",
          "",
          "[Removed Lines]",
          "799:     const int64_t max_dimensions = 1 << 20;",
          "",
          "[Added Lines]",
          "799:     const int64_t max_dimensions = 1 << 25;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b1756cf206fc4db86f05c420a2838bd2099546df",
      "candidate_info": {
        "commit_hash": "b1756cf206fc4db86f05c420a2838bd2099546df",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/b1756cf206fc4db86f05c420a2838bd2099546df",
        "files": [
          "tensorflow/core/framework/shape_inference.cc"
        ],
        "message": "Bump the maximum threshold before erroring\n\nPiperOrigin-RevId: 424653571\nChange-Id: Ic2d9f3a7db627d78cde80ad415105f3d53735b3b",
        "before_after_code_files": [
          "tensorflow/core/framework/shape_inference.cc||tensorflow/core/framework/shape_inference.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/framework/shape_inference.cc||tensorflow/core/framework/shape_inference.cc"
          ],
          "candidate": [
            "tensorflow/core/framework/shape_inference.cc||tensorflow/core/framework/shape_inference.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/framework/shape_inference.cc||tensorflow/core/framework/shape_inference.cc": [
          "File: tensorflow/core/framework/shape_inference.cc -> tensorflow/core/framework/shape_inference.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "800:     if (num_dims >= max_dimensions) {",
          "801:       return errors::Internal(",
          "802:           \"Cannot create a tensor with \", num_dims,",
          "",
          "[Removed Lines]",
          "799:     const int64_t max_dimensions = 1 << 20;",
          "",
          "[Added Lines]",
          "799:     const int64_t max_dimensions = 1 << 25;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f651ee38eabf538c9add10d88176ba278553c6dc",
      "candidate_info": {
        "commit_hash": "f651ee38eabf538c9add10d88176ba278553c6dc",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/f651ee38eabf538c9add10d88176ba278553c6dc",
        "files": [
          "tensorflow/core/framework/shape_inference.cc"
        ],
        "message": "Fix abort caused by allocating a too large vector.\n\nWe need to make sure that the number of dimensions in a shape is within limits.\n\nPiperOrigin-RevId: 408997911\nChange-Id: If59e1c23f2ec9c2d4ff4d8632fd62b2a7773a4eb",
        "before_after_code_files": [
          "tensorflow/core/framework/shape_inference.cc||tensorflow/core/framework/shape_inference.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/framework/shape_inference.cc||tensorflow/core/framework/shape_inference.cc"
          ],
          "candidate": [
            "tensorflow/core/framework/shape_inference.cc||tensorflow/core/framework/shape_inference.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/framework/shape_inference.cc||tensorflow/core/framework/shape_inference.cc": [
          "File: tensorflow/core/framework/shape_inference.cc -> tensorflow/core/framework/shape_inference.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: #include \"tensorflow/core/framework/shape_inference.h\"",
          "17: #include \"tensorflow/core/framework/bounds_check.h\"",
          "18: #include \"tensorflow/core/framework/node_def.pb.h\"",
          "19: #include \"tensorflow/core/framework/partial_tensor_shape.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: #include <cstdint>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "779:       return ReturnUnknownShape(out);",
          "780:     }",
          "781:     const auto num_dims = Value(shape_dim);",
          "782:     std::vector<DimensionHandle> dims;",
          "783:     dims.reserve(num_dims);",
          "784:     for (int i = 0; i < num_dims; i++) dims.push_back(UnknownDim());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "790:     const int64_t max_dimensions = 1 << 20;",
          "791:     if (num_dims >= max_dimensions) {",
          "792:       return errors::Internal(",
          "793:           \"Cannot create a tensor with \", num_dims,",
          "794:           \" dimensions, as these would be more than maximum of \",",
          "795:           max_dimensions);",
          "796:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "81bfdf05287d18aa78309ffa3ac38268900acb1a",
      "candidate_info": {
        "commit_hash": "81bfdf05287d18aa78309ffa3ac38268900acb1a",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/81bfdf05287d18aa78309ffa3ac38268900acb1a",
        "files": [
          "tensorflow/core/framework/shape_inference.cc"
        ],
        "message": "Fix abort caused by allocating a too large vector.\n\nWe need to make sure that the number of dimensions in a shape is within limits.\n\nPiperOrigin-RevId: 408997911\nChange-Id: If59e1c23f2ec9c2d4ff4d8632fd62b2a7773a4eb",
        "before_after_code_files": [
          "tensorflow/core/framework/shape_inference.cc||tensorflow/core/framework/shape_inference.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/framework/shape_inference.cc||tensorflow/core/framework/shape_inference.cc"
          ],
          "candidate": [
            "tensorflow/core/framework/shape_inference.cc||tensorflow/core/framework/shape_inference.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/framework/shape_inference.cc||tensorflow/core/framework/shape_inference.cc": [
          "File: tensorflow/core/framework/shape_inference.cc -> tensorflow/core/framework/shape_inference.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: #include \"tensorflow/core/framework/shape_inference.h\"",
          "17: #include \"tensorflow/core/framework/bounds_check.h\"",
          "18: #include \"tensorflow/core/framework/full_type_util.h\"",
          "19: #include \"tensorflow/core/framework/node_def.pb.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: #include <cstdint>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "786:       return ReturnUnknownShape(out);",
          "787:     }",
          "788:     const auto num_dims = Value(shape_dim);",
          "789:     std::vector<DimensionHandle> dims;",
          "790:     dims.reserve(num_dims);",
          "791:     for (int i = 0; i < num_dims; i++) dims.push_back(UnknownDim());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "797:     const int64_t max_dimensions = 1 << 20;",
          "798:     if (num_dims >= max_dimensions) {",
          "799:       return errors::Internal(",
          "800:           \"Cannot create a tensor with \", num_dims,",
          "801:           \" dimensions, as these would be more than maximum of \",",
          "802:           max_dimensions);",
          "803:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e306848769c0ce79c53b7443d39e15a130deb290",
      "candidate_info": {
        "commit_hash": "e306848769c0ce79c53b7443d39e15a130deb290",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/e306848769c0ce79c53b7443d39e15a130deb290",
        "files": [
          "tensorflow/core/framework/shape_inference.cc"
        ],
        "message": "Fix abort caused by allocating a too large vector.\n\nWe need to make sure that the number of dimensions in a shape is within limits.\n\nPiperOrigin-RevId: 408997911\nChange-Id: If59e1c23f2ec9c2d4ff4d8632fd62b2a7773a4eb",
        "before_after_code_files": [
          "tensorflow/core/framework/shape_inference.cc||tensorflow/core/framework/shape_inference.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/framework/shape_inference.cc||tensorflow/core/framework/shape_inference.cc"
          ],
          "candidate": [
            "tensorflow/core/framework/shape_inference.cc||tensorflow/core/framework/shape_inference.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/framework/shape_inference.cc||tensorflow/core/framework/shape_inference.cc": [
          "File: tensorflow/core/framework/shape_inference.cc -> tensorflow/core/framework/shape_inference.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: #include \"tensorflow/core/framework/shape_inference.h\"",
          "17: #include \"tensorflow/core/framework/bounds_check.h\"",
          "18: #include \"tensorflow/core/framework/full_type_util.h\"",
          "19: #include \"tensorflow/core/framework/node_def.pb.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: #include <cstdint>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "786:       return ReturnUnknownShape(out);",
          "787:     }",
          "788:     const auto num_dims = Value(shape_dim);",
          "789:     std::vector<DimensionHandle> dims;",
          "790:     dims.reserve(num_dims);",
          "791:     for (int i = 0; i < num_dims; i++) dims.push_back(UnknownDim());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "797:     const int64_t max_dimensions = 1 << 20;",
          "798:     if (num_dims >= max_dimensions) {",
          "799:       return errors::Internal(",
          "800:           \"Cannot create a tensor with \", num_dims,",
          "801:           \" dimensions, as these would be more than maximum of \",",
          "802:           max_dimensions);",
          "803:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}