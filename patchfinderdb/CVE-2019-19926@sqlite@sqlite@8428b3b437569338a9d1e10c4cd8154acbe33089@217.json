{
  "cve_id": "CVE-2019-19926",
  "cve_desc": "multiSelect in select.c in SQLite 3.30.1 mishandles certain errors during parsing, as demonstrated by errors from sqlite3WindowRewrite() calls. NOTE: this vulnerability exists because of an incomplete fix for CVE-2019-19880.",
  "repo": "sqlite/sqlite",
  "patch_hash": "8428b3b437569338a9d1e10c4cd8154acbe33089",
  "patch_info": {
    "commit_hash": "8428b3b437569338a9d1e10c4cd8154acbe33089",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/8428b3b437569338a9d1e10c4cd8154acbe33089",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c"
    ],
    "message": "Continuation of [e2bddcd4c55ba3cb]: Add another spot where it is necessary to abort early due to prior errors in sqlite3WindowRewrite().\n\nFossilOrigin-Name: cba2a2a44cdf138a629109bb0ad088ed4ef67fc66bed3e0373554681a39615d2",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 3d4c0bf8904135fa68c75801bfa738715cacc3b19dc8ad6ef550b11798d4b121",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2809:     }",
      "2810:   #endif",
      "2811:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2812:   if( pParse->nErr ) goto multi_select_end;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4a254f98e3fc2b214127f1714d27a2eccc4f7fda",
      "candidate_info": {
        "commit_hash": "4a254f98e3fc2b214127f1714d27a2eccc4f7fda",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/4a254f98e3fc2b214127f1714d27a2eccc4f7fda",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c"
        ],
        "message": "Improvements to the LEFT JOIN strength reduction optimization.\n\nFossilOrigin-Name: 548082dfab5d9484279ccc11cd2833ac131b54b7481372b576d7c28bbb3294ea",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 4ed905b18847d4dbf5a2570052abced338065f824137b90300f62d77b3159d80",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5231: int sqlite3ExprImpliesNonNullRow(Expr *p, int iTab){",
          "5232:   Walker w;",
          "5233:   p = sqlite3ExprSkipCollateAndLikely(p);",
          "5235:     p = p->pLeft;",
          "5236:   }",
          "5237:   w.xExprCallback = impliesNotNullRow;",
          "5238:   w.xSelectCallback = 0;",
          "",
          "[Removed Lines]",
          "5234:   if( p && p->op==TK_NOTNULL ){",
          "",
          "[Added Lines]",
          "5234:   if( p==0 ) return 0;",
          "5235:   if( p->op==TK_NOTNULL ){",
          "5237:   }else if( p->op==TK_AND ){",
          "5238:     if( sqlite3ExprImpliesNonNullRow(p->pLeft, iTab) ) return 1;",
          "5239:     p = p->pRight;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8cd2e4ae0370efc24aad29f6e2581ef650ca17c5",
      "candidate_info": {
        "commit_hash": "8cd2e4ae0370efc24aad29f6e2581ef650ca17c5",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/8cd2e4ae0370efc24aad29f6e2581ef650ca17c5",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/resolve.c",
          "test/altertab2.test",
          "test/altertab3.test",
          "test/autoindex5.test"
        ],
        "message": "Build and test fixes for SQLITE_OMIT_WINDOWFUNC builds.\n\nFossilOrigin-Name: 8824115a9776e876a3677f0cb479e311ee65584d43872b37766a146afec72d8f",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/resolve.c||src/resolve.c",
          "test/altertab2.test||test/altertab2.test",
          "test/altertab3.test||test/altertab3.test",
          "test/autoindex5.test||test/autoindex5.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 4a4952d38e8177ed8d59aaa575410bebf76787dd6d801fdbdb809d4f8c670da0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/resolve.c||src/resolve.c": [
          "File: src/resolve.c -> src/resolve.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1533:       }",
          "1534:     }",
          "1536:     if( IN_RENAME_OBJECT ){",
          "1537:       Window *pWin;",
          "1538:       for(pWin=p->pWinDefn; pWin; pWin=pWin->pNextWin){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1536: #ifndef SQLITE_OMIT_WINDOWFUNC",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1543:         }",
          "1544:       }",
          "1545:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1547: #endif",
          "",
          "---------------"
        ],
        "test/altertab2.test||test/altertab2.test": [
          "File: test/altertab2.test -> test/altertab2.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "179: }",
          "181: #-------------------------------------------------------------------------",
          "182: do_execsql_test 5.0 {",
          "183:   CREATE TABLE t2(a);",
          "184:   CREATE TRIGGER r2 AFTER INSERT ON t2 WHEN new.a NOT NULL BEGIN",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "182: ifcapable windowfunc {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "235: do_execsql_test 5.3 {",
          "236:   INSERT INTO t2x VALUES(1);",
          "237: } {}",
          "239: #-------------------------------------------------------------------------",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "239: } ;# windowfunc",
          "",
          "---------------"
        ],
        "test/altertab3.test||test/altertab3.test": [
          "File: test/altertab3.test -> test/altertab3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:   return",
          "21: }",
          "23: do_execsql_test 1.0 {",
          "24:   CREATE TABLE t1(a, b);",
          "25:   CREATE TRIGGER tr1 AFTER INSERT ON t1 BEGIN",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: ifcapable windowfunc {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40: do_execsql_test 1.3 {",
          "41:   INSERT INTO t1 VALUES(1, 2);",
          "42: }",
          "44: #-------------------------------------------------------------------------",
          "45: reset_db",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44: } ;# windowfunc",
          "",
          "---------------"
        ],
        "test/autoindex5.test||test/autoindex5.test": [
          "File: test/autoindex5.test -> test/autoindex5.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "128: # Segfault due to multiple uses of the same subquery where the",
          "129: # subquery is implemented via coroutine.",
          "130: #",
          "131: sqlite3 db :memory:",
          "132: do_execsql_test 3.0 {",
          "133:   -- This is the original test case reported on the mailing list",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "131: ifcapable windowfunc {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "166:       AND (albums.id IN (1, 2)))",
          "167:   ));",
          "168: } {1 Ar}",
          "169: # The remaining test cases were discovered (by Dan) during trouble-shooting",
          "170: sqlite3 db :memory:",
          "171: do_execsql_test 3.1 {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "170: } ;# windowfunc",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "713836f913a4af0be745c606c658f17c51cdf77f",
      "candidate_info": {
        "commit_hash": "713836f913a4af0be745c606c658f17c51cdf77f",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/713836f913a4af0be745c606c658f17c51cdf77f",
        "files": [
          "LICENSE.md",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Add a LICENSE.md, containing the text of the blessing.\n\nFossilOrigin-Name: cbb7e60272cda518fa1bd8d3e3cd02e031b657fef92a9d4d7ed8c2bfb97be7c8",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b3fa58dd7403dbd4d2e9f3ae23d7d1337830d6fef2aa2f137ac5174de0d5828e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1f3b284b11bdc781dba7fe655fd287b2d9bef029",
      "candidate_info": {
        "commit_hash": "1f3b284b11bdc781dba7fe655fd287b2d9bef029",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/1f3b284b11bdc781dba7fe655fd287b2d9bef029",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/alter.c",
          "src/vdbeaux.c",
          "test/altertab3.test"
        ],
        "message": "Ensure that ALTER TABLE commands open statement transactions. Fix for [596d059a].\n\nFossilOrigin-Name: 0f2129f59f7df929106e2af876c2976dea6528c1dc1850d64cddb256f20e121a",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/alter.c||src/alter.c",
          "src/vdbeaux.c||src/vdbeaux.c",
          "test/altertab3.test||test/altertab3.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: fb60150aeedc3898cb249c75c98a7cb48fcec090f94ded7896b634e436c7daa5",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/alter.c||src/alter.c": [
          "File: src/alter.c -> src/alter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "166:   }",
          "167: #endif",
          "174:   v = sqlite3GetVdbe(pParse);",
          "175:   if( v==0 ){",
          "176:     goto exit_rename_table;",
          "177:   }",
          "180:   zTabName = pTab->zName;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "177:   sqlite3MayAbort(pParse);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "243:     int i = ++pParse->nMem;",
          "244:     sqlite3VdbeLoadString(v, i, zName);",
          "245:     sqlite3VdbeAddOp4(v, OP_VRename, i, 0, 0,(const char*)pVTab, P4_VTAB);",
          "247:   }",
          "248: #endif",
          "",
          "[Removed Lines]",
          "246:     sqlite3MayAbort(pParse);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "567:   zNew = sqlite3NameFromToken(db, pNew);",
          "568:   if( !zNew ) goto exit_rename_column;",
          "569:   assert( pNew->n>0 );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "566:   sqlite3MayAbort(pParse);",
          "",
          "---------------"
        ],
        "src/vdbeaux.c||src/vdbeaux.c": [
          "File: src/vdbeaux.c -> src/vdbeaux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "637:     int opcode = pOp->opcode;",
          "638:     if( opcode==OP_Destroy || opcode==OP_VUpdate || opcode==OP_VRename",
          "639:      || opcode==OP_VDestroy",
          "640:      || ((opcode==OP_Halt || opcode==OP_HaltIfNull)",
          "641:       && ((pOp->p1)!=SQLITE_OK && pOp->p2==OE_Abort))",
          "642:     ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "640:      || (opcode==OP_Function0 && pOp->p4.pFunc->funcFlags&SQLITE_FUNC_INTERNAL)",
          "",
          "---------------"
        ],
        "test/altertab3.test||test/altertab3.test": [
          "File: test/altertab3.test -> test/altertab3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:   SELECT sql FROM sqlite_master WHERE name = 'v1'",
          "82: } {{CREATE VIEW v1 AS SELECT * FROM t1 WHERE a=1 OR (bbb IN ())}}",
          "86: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "84: #-------------------------------------------------------------------------",
          "85: reset_db",
          "86: do_execsql_test 4.0 {",
          "87:   CREATE TABLE t1(a, b);",
          "88:   CREATE TABLE t3(e, f);",
          "89:   CREATE TRIGGER tr1 AFTER INSERT ON t1 BEGIN",
          "90:     INSERT INTO t2 VALUES(new.a, new.b);",
          "91:   END;",
          "92: }",
          "94: do_catchsql_test 4.1.2 {",
          "95:   BEGIN;",
          "96:     ALTER TABLE t3 RENAME TO t4;",
          "97: } {1 {error in trigger tr1: no such table: main.t2}}",
          "98: do_execsql_test 4.1.2 {",
          "99:   COMMIT;",
          "100: }",
          "101: do_execsql_test 4.1.3 {",
          "102:   SELECT * FROM sqlite_master WHERE type='table' AND name!='t1';",
          "103: } {table t3 t3 3 {CREATE TABLE t3(e, f)}}",
          "106: do_catchsql_test 4.2.1 {",
          "107:   BEGIN;",
          "108:     ALTER TABLE t3 RENAME e TO eee;",
          "109: } {1 {error in trigger tr1: no such table: main.t2}}",
          "110: do_execsql_test 4.2.2 {",
          "111:   COMMIT;",
          "112: }",
          "113: do_execsql_test 4.2.3 {",
          "114:   SELECT * FROM sqlite_master WHERE type='table' AND name!='t1';",
          "115: } {table t3 t3 3 {CREATE TABLE t3(e, f)}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "656d535ae6cdb6a4857dcb0cd7e8a71c2ddb7ab8",
      "candidate_info": {
        "commit_hash": "656d535ae6cdb6a4857dcb0cd7e8a71c2ddb7ab8",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/656d535ae6cdb6a4857dcb0cd7e8a71c2ddb7ab8",
        "files": [
          "VERSION",
          "configure",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Increase the version number to 3.31.0 for the next release cycle.\n\nFossilOrigin-Name: ffd4c30620abe6ba38d82f3db934d18cc8468aaac4cd50a4e01be8910854d3f0",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: bf875dc59909f9c22f7c1fc843bc4d9e5d97af5cb4ef43c4fa1d566ddfdeaacb",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}