{
  "cve_id": "CVE-2012-2790",
  "cve_desc": "Unspecified vulnerability in the read_var_block_data function in libavcodec/alsdec.c in FFmpeg before 0.11, and Libav 0.7.x before 0.7.7 and 0.8.x before 0.8.4, has unknown impact and attack vectors, related to the \"number of decoded samples in first sub-block in BGMC mode.\"",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "2837d8dc276760db1821b81df3f794a90bfa56e6",
  "patch_info": {
    "commit_hash": "2837d8dc276760db1821b81df3f794a90bfa56e6",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/2837d8dc276760db1821b81df3f794a90bfa56e6",
    "files": [
      "libavcodec/alsdec.c"
    ],
    "message": "alsdec: fix number of decoded samples in first sub-block in BGMC mode.\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
    "before_after_code_files": [
      "libavcodec/alsdec.c||libavcodec/alsdec.c"
    ]
  },
  "patch_diff": {
    "libavcodec/alsdec.c||libavcodec/alsdec.c": [
      "File: libavcodec/alsdec.c -> libavcodec/alsdec.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "785:             k    [sb] = s[sb] > b ? s[sb] - b : 0;",
      "786:             delta[sb] = 5 - s[sb] + k[sb];",
      "789:                         delta[sb], sx[sb], &high, &low, &value, ctx->bgmc_lut, ctx->bgmc_lut_status);",
      "792:         }",
      "794:         ff_bgmc_decode_end(gb);",
      "",
      "[Removed Lines]",
      "788:             ff_bgmc_decode(gb, sb_length, current_res,",
      "791:             current_res += sb_length;",
      "",
      "[Added Lines]",
      "788:             ff_bgmc_decode(gb, sb_length - i, current_res,",
      "791:             current_res += sb_length - i;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "dc5283dffcd41e8a41671d7566dfdd27c25e66bf",
      "candidate_info": {
        "commit_hash": "dc5283dffcd41e8a41671d7566dfdd27c25e66bf",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/dc5283dffcd41e8a41671d7566dfdd27c25e66bf",
        "files": [
          "libavcodec/alsdec.c"
        ],
        "message": "alsdec: fix number of decoded samples in first sub-block in BGMC mode.\n\nFixes CVE-2012-2790\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\nSigned-off-by: Justin Ruggles <justin.ruggles@gmail.com>\n(cherry picked from commit 66197988b1ee914825afbc3084e6da63f862068a)\n\nSigned-off-by: Reinhard Tartler <siretart@tauware.de>",
        "before_after_code_files": [
          "libavcodec/alsdec.c||libavcodec/alsdec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/alsdec.c||libavcodec/alsdec.c"
          ],
          "candidate": [
            "libavcodec/alsdec.c||libavcodec/alsdec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/alsdec.c||libavcodec/alsdec.c": [
          "File: libavcodec/alsdec.c -> libavcodec/alsdec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "770:         int          delta[8];",
          "771:         unsigned int k    [8];",
          "772:         unsigned int b = av_clip((av_ceil_log2(bd->block_length) - 3) >> 1, 0, 5);",
          "776:         unsigned int high;",
          "",
          "[Removed Lines]",
          "773:         unsigned int i;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "782:         current_res = bd->raw_samples + start;",
          "784:         for (sb = 0; sb < sub_blocks; sb++) {",
          "785:             k    [sb] = s[sb] > b ? s[sb] - b : 0;",
          "786:             delta[sb] = 5 - s[sb] + k[sb];",
          "789:                         delta[sb], sx[sb], &high, &low, &value, ctx->bgmc_lut, ctx->bgmc_lut_status);",
          "792:         }",
          "794:         ff_bgmc_decode_end(gb);",
          "799:         current_res = bd->raw_samples + start;",
          "802:             unsigned int cur_tail_code = tail_code[sx[sb]][delta[sb]];",
          "803:             unsigned int cur_k         = k[sb];",
          "804:             unsigned int cur_s         = s[sb];",
          "807:                 int32_t res = *current_res;",
          "809:                 if (res == cur_tail_code) {",
          "",
          "[Removed Lines]",
          "788:             ff_bgmc_decode(gb, sb_length, current_res,",
          "791:             current_res += sb_length;",
          "798:         i = start;",
          "801:         for (sb = 0; sb < sub_blocks; sb++, i = 0) {",
          "806:             for (; i < sb_length; i++) {",
          "",
          "[Added Lines]",
          "784:             unsigned int sb_len  = sb_length - (sb ? 0 : start);",
          "789:             ff_bgmc_decode(gb, sb_len, current_res,",
          "792:             current_res += sb_len;",
          "801:         for (sb = 0; sb < sub_blocks; sb++, start = 0) {",
          "806:             for (; start < sb_length; start++) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9474c93028444f0524e8a09a115fbdc3a3756cd0",
      "candidate_info": {
        "commit_hash": "9474c93028444f0524e8a09a115fbdc3a3756cd0",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/9474c93028444f0524e8a09a115fbdc3a3756cd0",
        "files": [
          "libavcodec/alsdec.c"
        ],
        "message": "alsdec: fix number of decoded samples in first sub-block in BGMC mode.\n\nFixes CVE-2012-2790\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\nSigned-off-by: Justin Ruggles <justin.ruggles@gmail.com>\n(cherry picked from commit 66197988b1ee914825afbc3084e6da63f862068a)\n\nSigned-off-by: Reinhard Tartler <siretart@tauware.de>",
        "before_after_code_files": [
          "libavcodec/alsdec.c||libavcodec/alsdec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/alsdec.c||libavcodec/alsdec.c"
          ],
          "candidate": [
            "libavcodec/alsdec.c||libavcodec/alsdec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/alsdec.c||libavcodec/alsdec.c": [
          "File: libavcodec/alsdec.c -> libavcodec/alsdec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "769:         int          delta[8];",
          "770:         unsigned int k    [8];",
          "771:         unsigned int b = av_clip((av_ceil_log2(bd->block_length) - 3) >> 1, 0, 5);",
          "775:         unsigned int high;",
          "",
          "[Removed Lines]",
          "772:         unsigned int i;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "781:         current_res = bd->raw_samples + start;",
          "783:         for (sb = 0; sb < sub_blocks; sb++) {",
          "784:             k    [sb] = s[sb] > b ? s[sb] - b : 0;",
          "785:             delta[sb] = 5 - s[sb] + k[sb];",
          "788:                         delta[sb], sx[sb], &high, &low, &value, ctx->bgmc_lut, ctx->bgmc_lut_status);",
          "791:         }",
          "793:         ff_bgmc_decode_end(gb);",
          "798:         current_res = bd->raw_samples + start;",
          "801:             unsigned int cur_tail_code = tail_code[sx[sb]][delta[sb]];",
          "802:             unsigned int cur_k         = k[sb];",
          "803:             unsigned int cur_s         = s[sb];",
          "806:                 int32_t res = *current_res;",
          "808:                 if (res == cur_tail_code) {",
          "",
          "[Removed Lines]",
          "787:             ff_bgmc_decode(gb, sb_length, current_res,",
          "790:             current_res += sb_length;",
          "797:         i = start;",
          "800:         for (sb = 0; sb < sub_blocks; sb++, i = 0) {",
          "805:             for (; i < sb_length; i++) {",
          "",
          "[Added Lines]",
          "783:             unsigned int sb_len  = sb_length - (sb ? 0 : start);",
          "788:             ff_bgmc_decode(gb, sb_len, current_res,",
          "791:             current_res += sb_len;",
          "800:         for (sb = 0; sb < sub_blocks; sb++, start = 0) {",
          "805:             for (; start < sb_length; start++) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}