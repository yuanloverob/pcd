{
  "cve_id": "CVE-2016-7155",
  "cve_desc": "hw/scsi/vmw_pvscsi.c in QEMU (aka Quick Emulator) allows local guest OS administrators to cause a denial of service (out-of-bounds access or infinite loop, and QEMU process crash) via a crafted page count for descriptor rings.",
  "repo": "qemu/qemu",
  "patch_hash": "7f61f4690dd153be98900a2a508b88989e692753",
  "patch_info": {
    "commit_hash": "7f61f4690dd153be98900a2a508b88989e692753",
    "repo": "qemu/qemu",
    "commit_url": "https://github.com/qemu/qemu/commit/7f61f4690dd153be98900a2a508b88989e692753",
    "files": [
      "hw/scsi/vmw_pvscsi.c"
    ],
    "message": "vmw_pvscsi: check page count while initialising descriptor rings\n\nVmware Paravirtual SCSI emulation uses command descriptors to\nprocess SCSI commands. These descriptors come with their ring\nbuffers. A guest could set the page count for these rings to\nan arbitrary value, leading to infinite loop or OOB access.\nAdd check to avoid it.\n\nReported-by: Tom Victor <vv474172261@gmail.com>\nSigned-off-by: Prasad J Pandit <pjp@fedoraproject.org>\nMessage-Id: <1472626169-12989-1-git-send-email-ppandit@redhat.com>\nCc: qemu-stable@nongnu.org\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
    "before_after_code_files": [
      "hw/scsi/vmw_pvscsi.c||hw/scsi/vmw_pvscsi.c"
    ]
  },
  "patch_diff": {
    "hw/scsi/vmw_pvscsi.c||hw/scsi/vmw_pvscsi.c": [
      "File: hw/scsi/vmw_pvscsi.c -> hw/scsi/vmw_pvscsi.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "152:     return log;",
      "153: }",
      "156: pvscsi_ring_init_data(PVSCSIRingInfo *m, PVSCSICmdDescSetupRings *ri)",
      "157: {",
      "158:     int i;",
      "",
      "[Removed Lines]",
      "155: static int",
      "",
      "[Added Lines]",
      "155: static void",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "160:     uint32_t req_ring_size, cmp_ring_size;",
      "161:     m->rs_pa = ri->ringsStatePPN << VMW_PAGE_SHIFT;",
      "167:     req_ring_size = ri->reqRingNumPages * PVSCSI_MAX_NUM_REQ_ENTRIES_PER_PAGE;",
      "168:     cmp_ring_size = ri->cmpRingNumPages * PVSCSI_MAX_NUM_CMP_ENTRIES_PER_PAGE;",
      "169:     txr_len_log2 = pvscsi_log2(req_ring_size - 1);",
      "",
      "[Removed Lines]",
      "163:     if ((ri->reqRingNumPages > PVSCSI_SETUP_RINGS_MAX_NUM_PAGES)",
      "164:         || (ri->cmpRingNumPages > PVSCSI_SETUP_RINGS_MAX_NUM_PAGES)) {",
      "165:         return -1;",
      "166:     }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "197:     smp_wmb();",
      "200: }",
      "202: static int",
      "",
      "[Removed Lines]",
      "199:     return 0;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "747:     trace_pvscsi_tx_rings_num_pages(\"Confirm Ring\", rc->cmpRingNumPages);",
      "748:     for (i = 0; i < rc->cmpRingNumPages; i++) {",
      "750:     }",
      "751: }",
      "",
      "[Removed Lines]",
      "749:         trace_pvscsi_tx_rings_ppn(\"Confirm Ring\", rc->reqRingPPNs[i]);",
      "",
      "[Added Lines]",
      "743:         trace_pvscsi_tx_rings_ppn(\"Confirm Ring\", rc->cmpRingPPNs[i]);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "780:     trace_pvscsi_on_cmd_arrived(\"PVSCSI_CMD_SETUP_RINGS\");",
      "784:         return PVSCSI_COMMAND_PROCESSING_FAILED;",
      "785:     }",
      "787:     s->rings_info_valid = TRUE;",
      "788:     return PVSCSI_COMMAND_PROCESSING_SUCCEEDED;",
      "789: }",
      "",
      "[Removed Lines]",
      "782:     pvscsi_dbg_dump_tx_rings_config(rc);",
      "783:     if (pvscsi_ring_init_data(&s->rings, rc) < 0) {",
      "",
      "[Added Lines]",
      "776:     if (!rc->reqRingNumPages",
      "777:         || rc->reqRingNumPages > PVSCSI_SETUP_RINGS_MAX_NUM_PAGES",
      "778:         || !rc->cmpRingNumPages",
      "779:         || rc->cmpRingNumPages > PVSCSI_SETUP_RINGS_MAX_NUM_PAGES) {",
      "783:     pvscsi_dbg_dump_tx_rings_config(rc);",
      "784:     pvscsi_ring_init_data(&s->rings, rc);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "742886578d76e088d7fffdfce3bd2f4001e30558",
      "candidate_info": {
        "commit_hash": "742886578d76e088d7fffdfce3bd2f4001e30558",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/742886578d76e088d7fffdfce3bd2f4001e30558",
        "files": [
          "hw/scsi/vmw_pvscsi.c"
        ],
        "message": "vmw_pvscsi: check page count while initialising descriptor rings\n\nVmware Paravirtual SCSI emulation uses command descriptors to\nprocess SCSI commands. These descriptors come with their ring\nbuffers. A guest could set the page count for these rings to\nan arbitrary value, leading to infinite loop or OOB access.\nAdd check to avoid it.\n\nReported-by: Tom Victor <vv474172261@gmail.com>\nSigned-off-by: Prasad J Pandit <pjp@fedoraproject.org>\nMessage-Id: <1472626169-12989-1-git-send-email-ppandit@redhat.com>\nCc: qemu-stable@nongnu.org\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>\n(cherry picked from commit 7f61f4690dd153be98900a2a508b88989e692753)\nSigned-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>",
        "before_after_code_files": [
          "hw/scsi/vmw_pvscsi.c||hw/scsi/vmw_pvscsi.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hw/scsi/vmw_pvscsi.c||hw/scsi/vmw_pvscsi.c"
          ],
          "candidate": [
            "hw/scsi/vmw_pvscsi.c||hw/scsi/vmw_pvscsi.c"
          ]
        }
      },
      "candidate_diff": {
        "hw/scsi/vmw_pvscsi.c||hw/scsi/vmw_pvscsi.c": [
          "File: hw/scsi/vmw_pvscsi.c -> hw/scsi/vmw_pvscsi.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "152:     return log;",
          "153: }",
          "156: pvscsi_ring_init_data(PVSCSIRingInfo *m, PVSCSICmdDescSetupRings *ri)",
          "157: {",
          "158:     int i;",
          "",
          "[Removed Lines]",
          "155: static int",
          "",
          "[Added Lines]",
          "155: static void",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "160:     uint32_t req_ring_size, cmp_ring_size;",
          "161:     m->rs_pa = ri->ringsStatePPN << VMW_PAGE_SHIFT;",
          "167:     req_ring_size = ri->reqRingNumPages * PVSCSI_MAX_NUM_REQ_ENTRIES_PER_PAGE;",
          "168:     cmp_ring_size = ri->cmpRingNumPages * PVSCSI_MAX_NUM_CMP_ENTRIES_PER_PAGE;",
          "169:     txr_len_log2 = pvscsi_log2(req_ring_size - 1);",
          "",
          "[Removed Lines]",
          "163:     if ((ri->reqRingNumPages > PVSCSI_SETUP_RINGS_MAX_NUM_PAGES)",
          "164:         || (ri->cmpRingNumPages > PVSCSI_SETUP_RINGS_MAX_NUM_PAGES)) {",
          "165:         return -1;",
          "166:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "197:     smp_wmb();",
          "200: }",
          "202: static int",
          "",
          "[Removed Lines]",
          "199:     return 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "750:     trace_pvscsi_tx_rings_num_pages(\"Confirm Ring\", rc->cmpRingNumPages);",
          "751:     for (i = 0; i < rc->cmpRingNumPages; i++) {",
          "753:     }",
          "754: }",
          "",
          "[Removed Lines]",
          "752:         trace_pvscsi_tx_rings_ppn(\"Confirm Ring\", rc->reqRingPPNs[i]);",
          "",
          "[Added Lines]",
          "746:         trace_pvscsi_tx_rings_ppn(\"Confirm Ring\", rc->cmpRingPPNs[i]);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "783:     trace_pvscsi_on_cmd_arrived(\"PVSCSI_CMD_SETUP_RINGS\");",
          "787:         return PVSCSI_COMMAND_PROCESSING_FAILED;",
          "788:     }",
          "790:     s->rings_info_valid = TRUE;",
          "791:     return PVSCSI_COMMAND_PROCESSING_SUCCEEDED;",
          "792: }",
          "",
          "[Removed Lines]",
          "785:     pvscsi_dbg_dump_tx_rings_config(rc);",
          "786:     if (pvscsi_ring_init_data(&s->rings, rc) < 0) {",
          "",
          "[Added Lines]",
          "779:     if (!rc->reqRingNumPages",
          "780:         || rc->reqRingNumPages > PVSCSI_SETUP_RINGS_MAX_NUM_PAGES",
          "781:         || !rc->cmpRingNumPages",
          "782:         || rc->cmpRingNumPages > PVSCSI_SETUP_RINGS_MAX_NUM_PAGES) {",
          "786:     pvscsi_dbg_dump_tx_rings_config(rc);",
          "787:     pvscsi_ring_init_data(&s->rings, rc);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "da99530e410349d672e792e820b355a648d430fa",
      "candidate_info": {
        "commit_hash": "da99530e410349d672e792e820b355a648d430fa",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/da99530e410349d672e792e820b355a648d430fa",
        "files": [
          "hw/scsi/vmw_pvscsi.c"
        ],
        "message": "vmw_pvscsi: check page count while initialising descriptor rings\n\nVmware Paravirtual SCSI emulation uses command descriptors to\nprocess SCSI commands. These descriptors come with their ring\nbuffers. A guest could set the page count for these rings to\nan arbitrary value, leading to infinite loop or OOB access.\nAdd check to avoid it.\n\nReported-by: Tom Victor <vv474172261@gmail.com>\nSigned-off-by: Prasad J Pandit <pjp@fedoraproject.org>\nMessage-Id: <1472626169-12989-1-git-send-email-ppandit@redhat.com>\nCc: qemu-stable@nongnu.org\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>\n(cherry picked from commit 7f61f4690dd153be98900a2a508b88989e692753)\nSigned-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>",
        "before_after_code_files": [
          "hw/scsi/vmw_pvscsi.c||hw/scsi/vmw_pvscsi.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hw/scsi/vmw_pvscsi.c||hw/scsi/vmw_pvscsi.c"
          ],
          "candidate": [
            "hw/scsi/vmw_pvscsi.c||hw/scsi/vmw_pvscsi.c"
          ]
        }
      },
      "candidate_diff": {
        "hw/scsi/vmw_pvscsi.c||hw/scsi/vmw_pvscsi.c": [
          "File: hw/scsi/vmw_pvscsi.c -> hw/scsi/vmw_pvscsi.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "153:     return log;",
          "154: }",
          "157: pvscsi_ring_init_data(PVSCSIRingInfo *m, PVSCSICmdDescSetupRings *ri)",
          "158: {",
          "159:     int i;",
          "",
          "[Removed Lines]",
          "156: static int",
          "",
          "[Added Lines]",
          "156: static void",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "161:     uint32_t req_ring_size, cmp_ring_size;",
          "162:     m->rs_pa = ri->ringsStatePPN << VMW_PAGE_SHIFT;",
          "168:     req_ring_size = ri->reqRingNumPages * PVSCSI_MAX_NUM_REQ_ENTRIES_PER_PAGE;",
          "169:     cmp_ring_size = ri->cmpRingNumPages * PVSCSI_MAX_NUM_CMP_ENTRIES_PER_PAGE;",
          "170:     txr_len_log2 = pvscsi_log2(req_ring_size - 1);",
          "",
          "[Removed Lines]",
          "164:     if ((ri->reqRingNumPages > PVSCSI_SETUP_RINGS_MAX_NUM_PAGES)",
          "165:         || (ri->cmpRingNumPages > PVSCSI_SETUP_RINGS_MAX_NUM_PAGES)) {",
          "166:         return -1;",
          "167:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "198:     smp_wmb();",
          "201: }",
          "203: static int",
          "",
          "[Removed Lines]",
          "200:     return 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "751:     trace_pvscsi_tx_rings_num_pages(\"Confirm Ring\", rc->cmpRingNumPages);",
          "752:     for (i = 0; i < rc->cmpRingNumPages; i++) {",
          "754:     }",
          "755: }",
          "",
          "[Removed Lines]",
          "753:         trace_pvscsi_tx_rings_ppn(\"Confirm Ring\", rc->reqRingPPNs[i]);",
          "",
          "[Added Lines]",
          "747:         trace_pvscsi_tx_rings_ppn(\"Confirm Ring\", rc->cmpRingPPNs[i]);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "784:     trace_pvscsi_on_cmd_arrived(\"PVSCSI_CMD_SETUP_RINGS\");",
          "788:         return PVSCSI_COMMAND_PROCESSING_FAILED;",
          "789:     }",
          "791:     s->rings_info_valid = TRUE;",
          "792:     return PVSCSI_COMMAND_PROCESSING_SUCCEEDED;",
          "793: }",
          "",
          "[Removed Lines]",
          "786:     pvscsi_dbg_dump_tx_rings_config(rc);",
          "787:     if (pvscsi_ring_init_data(&s->rings, rc) < 0) {",
          "",
          "[Added Lines]",
          "780:     if (!rc->reqRingNumPages",
          "781:         || rc->reqRingNumPages > PVSCSI_SETUP_RINGS_MAX_NUM_PAGES",
          "782:         || !rc->cmpRingNumPages",
          "783:         || rc->cmpRingNumPages > PVSCSI_SETUP_RINGS_MAX_NUM_PAGES) {",
          "787:     pvscsi_dbg_dump_tx_rings_config(rc);",
          "788:     pvscsi_ring_init_data(&s->rings, rc);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3e831b40e015ba34dfb55ff11f767001839425ff",
      "candidate_info": {
        "commit_hash": "3e831b40e015ba34dfb55ff11f767001839425ff",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/3e831b40e015ba34dfb55ff11f767001839425ff",
        "files": [
          "hw/scsi/vmw_pvscsi.c"
        ],
        "message": "scsi: pvscsi: check command descriptor ring buffer size (CVE-2016-4952)\n\nVmware Paravirtual SCSI emulation uses command descriptors to\nprocess SCSI commands. These descriptors come with their ring\nbuffers. A guest could set the ring buffer size to an arbitrary\nvalue leading to OOB access issue. Add check to avoid it.\n\nReported-by: Li Qiang <liqiang6-s@360.cn>\nSigned-off-by: Prasad J Pandit <pjp@fedoraproject.org>\nCc: qemu-stable@nongnu.org\nMessage-Id: <1464000485-27041-1-git-send-email-ppandit@redhat.com>\nReviewed-by: Shmulik Ladkani <shmulik.ladkani@ravellosystems.com>\nReviewed-by: Dmitry Fleytman <dmitry@daynix.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>",
        "before_after_code_files": [
          "hw/scsi/vmw_pvscsi.c||hw/scsi/vmw_pvscsi.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "hw/scsi/vmw_pvscsi.c||hw/scsi/vmw_pvscsi.c"
          ],
          "candidate": [
            "hw/scsi/vmw_pvscsi.c||hw/scsi/vmw_pvscsi.c"
          ]
        }
      },
      "candidate_diff": {
        "hw/scsi/vmw_pvscsi.c||hw/scsi/vmw_pvscsi.c": [
          "File: hw/scsi/vmw_pvscsi.c -> hw/scsi/vmw_pvscsi.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "153:     return log;",
          "154: }",
          "157: pvscsi_ring_init_data(PVSCSIRingInfo *m, PVSCSICmdDescSetupRings *ri)",
          "158: {",
          "159:     int i;",
          "",
          "[Removed Lines]",
          "156: static void",
          "",
          "[Added Lines]",
          "156: static int",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "161:     uint32_t req_ring_size, cmp_ring_size;",
          "162:     m->rs_pa = ri->ringsStatePPN << VMW_PAGE_SHIFT;",
          "164:     req_ring_size = ri->reqRingNumPages * PVSCSI_MAX_NUM_REQ_ENTRIES_PER_PAGE;",
          "165:     cmp_ring_size = ri->cmpRingNumPages * PVSCSI_MAX_NUM_CMP_ENTRIES_PER_PAGE;",
          "166:     txr_len_log2 = pvscsi_log2(req_ring_size - 1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "164:     if ((ri->reqRingNumPages > PVSCSI_SETUP_RINGS_MAX_NUM_PAGES)",
          "165:         || (ri->cmpRingNumPages > PVSCSI_SETUP_RINGS_MAX_NUM_PAGES)) {",
          "166:         return -1;",
          "167:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "194:     smp_wmb();",
          "195: }",
          "198: pvscsi_ring_init_msg(PVSCSIRingInfo *m, PVSCSICmdDescSetupMsgRing *ri)",
          "199: {",
          "200:     int i;",
          "201:     uint32_t len_log2;",
          "202:     uint32_t ring_size;",
          "204:     ring_size = ri->numPages * PVSCSI_MAX_NUM_MSG_ENTRIES_PER_PAGE;",
          "205:     len_log2 = pvscsi_log2(ring_size - 1);",
          "",
          "[Removed Lines]",
          "197: static void",
          "",
          "[Added Lines]",
          "200:     return 0;",
          "203: static int",
          "210:     if (ri->numPages > PVSCSI_SETUP_MSG_RING_MAX_NUM_PAGES) {",
          "211:         return -1;",
          "212:     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "222:     smp_wmb();",
          "223: }",
          "225: static void",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "233:     return 0;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "770:     trace_pvscsi_on_cmd_arrived(\"PVSCSI_CMD_SETUP_RINGS\");",
          "772:     pvscsi_dbg_dump_tx_rings_config(rc);",
          "774:     s->rings_info_valid = TRUE;",
          "775:     return PVSCSI_COMMAND_PROCESSING_SUCCEEDED;",
          "776: }",
          "",
          "[Removed Lines]",
          "773:     pvscsi_ring_init_data(&s->rings, rc);",
          "",
          "[Added Lines]",
          "784:     if (pvscsi_ring_init_data(&s->rings, rc) < 0) {",
          "785:         return PVSCSI_COMMAND_PROCESSING_FAILED;",
          "786:     }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "850:     }",
          "852:     if (s->rings_info_valid) {",
          "854:         s->msg_ring_info_valid = TRUE;",
          "855:     }",
          "856:     return sizeof(PVSCSICmdDescSetupMsgRing) / sizeof(uint32_t);",
          "",
          "[Removed Lines]",
          "853:         pvscsi_ring_init_msg(&s->rings, rc);",
          "",
          "[Added Lines]",
          "867:         if (pvscsi_ring_init_msg(&s->rings, rc) < 0) {",
          "868:             return PVSCSI_COMMAND_PROCESSING_FAILED;",
          "869:         }",
          "",
          "---------------"
        ]
      }
    }
  ]
}