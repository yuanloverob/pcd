{
  "cve_id": "CVE-2017-15116",
  "cve_desc": "The rngapi_reset function in crypto/rng.c in the Linux kernel before 4.2 allows attackers to cause a denial of service (NULL pointer dereference).",
  "repo": "torvalds/linux",
  "patch_hash": "94f1bb15bed84ad6c893916b7e7b9db6f1d7eec6",
  "patch_info": {
    "commit_hash": "94f1bb15bed84ad6c893916b7e7b9db6f1d7eec6",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/94f1bb15bed84ad6c893916b7e7b9db6f1d7eec6",
    "files": [
      "crypto/rng.c",
      "include/crypto/internal/rng.h",
      "include/crypto/rng.h",
      "include/linux/crypto.h"
    ],
    "message": "crypto: rng - Remove old low-level rng interface\n\nNow that all rng implementations have switched over to the new\ninterface, we can remove the old low-level interface.\n\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
    "before_after_code_files": [
      "crypto/rng.c||crypto/rng.c",
      "include/crypto/internal/rng.h||include/crypto/internal/rng.h",
      "include/crypto/rng.h||include/crypto/rng.h",
      "include/linux/crypto.h||include/linux/crypto.h"
    ]
  },
  "patch_diff": {
    "crypto/rng.c||crypto/rng.c": [
      "File: crypto/rng.c -> crypto/rng.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "36:  return container_of(tfm, struct crypto_rng, base);",
      "37: }",
      "72: int crypto_rng_reset(struct crypto_rng *tfm, const u8 *seed, unsigned int slen)",
      "73: {",
      "74:  u8 *buf = NULL;",
      "",
      "[Removed Lines]",
      "39: static inline struct old_rng_alg *crypto_old_rng_alg(struct crypto_rng *tfm)",
      "40: {",
      "41:  return &crypto_rng_tfm(tfm)->__crt_alg->cra_rng;",
      "42: }",
      "44: static int generate(struct crypto_rng *tfm, const u8 *src, unsigned int slen,",
      "45:       u8 *dst, unsigned int dlen)",
      "46: {",
      "47:  return crypto_old_rng_alg(tfm)->rng_make_random(tfm, dst, dlen);",
      "48: }",
      "50: static int rngapi_reset(struct crypto_rng *tfm, const u8 *seed,",
      "51:    unsigned int slen)",
      "52: {",
      "53:  u8 *buf = NULL;",
      "54:  u8 *src = (u8 *)seed;",
      "55:  int err;",
      "57:  if (slen) {",
      "58:   buf = kmalloc(slen, GFP_KERNEL);",
      "59:   if (!buf)",
      "60:    return -ENOMEM;",
      "62:   memcpy(buf, seed, slen);",
      "63:   src = buf;",
      "64:  }",
      "66:  err = crypto_old_rng_alg(tfm)->rng_reset(tfm, src, slen);",
      "68:  kzfree(buf);",
      "69:  return err;",
      "70: }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "83:   seed = buf;",
      "84:  }",
      "88:  kfree(buf);",
      "89:  return err;",
      "",
      "[Removed Lines]",
      "86:  err = tfm->seed(tfm, seed, slen);",
      "",
      "[Added Lines]",
      "54:  err = crypto_rng_alg(tfm)->seed(tfm, seed, slen);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "93: static int crypto_rng_init_tfm(struct crypto_tfm *tfm)",
      "94: {",
      "110:  return 0;",
      "111: }",
      "",
      "[Removed Lines]",
      "95:  struct crypto_rng *rng = __crypto_rng_cast(tfm);",
      "96:  struct rng_alg *alg = crypto_rng_alg(rng);",
      "97:  struct old_rng_alg *oalg = crypto_old_rng_alg(rng);",
      "99:  if (oalg->rng_make_random) {",
      "100:   rng->generate = generate;",
      "101:   rng->seed = rngapi_reset;",
      "102:   rng->seedsize = oalg->seedsize;",
      "103:   return 0;",
      "104:  }",
      "106:  rng->generate = alg->generate;",
      "107:  rng->seed = alg->seed;",
      "108:  rng->seedsize = alg->seedsize;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "114: {",
      "115:  struct rng_alg *ralg = container_of(alg, struct rng_alg, base);",
      "119: }",
      "121: #ifdef CONFIG_NET",
      "",
      "[Removed Lines]",
      "117:  return alg->cra_rng.rng_make_random ?",
      "118:         alg->cra_rng.seedsize : ralg->seedsize;",
      "",
      "[Added Lines]",
      "70:  return ralg->seedsize;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "150:  seq_printf(m, \"seedsize     : %u\\n\", seedsize(alg));",
      "151: }",
      "154:  .extsize = crypto_alg_extsize,",
      "155:  .init_tfm = crypto_rng_init_tfm,",
      "156: #ifdef CONFIG_PROC_FS",
      "",
      "[Removed Lines]",
      "153: const struct crypto_type crypto_rng_type = {",
      "",
      "[Added Lines]",
      "105: static const struct crypto_type crypto_rng_type = {",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "162:  .type = CRYPTO_ALG_TYPE_RNG,",
      "163:  .tfmsize = offsetof(struct crypto_rng, base),",
      "164: };",
      "167: struct crypto_rng *crypto_alloc_rng(const char *alg_name, u32 type, u32 mask)",
      "168: {",
      "",
      "[Removed Lines]",
      "165: EXPORT_SYMBOL_GPL(crypto_rng_type);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "include/crypto/internal/rng.h||include/crypto/internal/rng.h": [
      "File: include/crypto/internal/rng.h -> include/crypto/internal/rng.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "16: #include <crypto/algapi.h>",
      "17: #include <crypto/rng.h>",
      "21: int crypto_register_rng(struct rng_alg *alg);",
      "22: void crypto_unregister_rng(struct rng_alg *alg);",
      "23: int crypto_register_rngs(struct rng_alg *algs, int count);",
      "",
      "[Removed Lines]",
      "19: extern const struct crypto_type crypto_rng_type;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "include/crypto/rng.h||include/crypto/rng.h": [
      "File: include/crypto/rng.h -> include/crypto/rng.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "56: };",
      "58: struct crypto_rng {",
      "64:  struct crypto_tfm base;",
      "65: };",
      "",
      "[Removed Lines]",
      "59:  int (*generate)(struct crypto_rng *tfm,",
      "60:    const u8 *src, unsigned int slen,",
      "61:    u8 *dst, unsigned int dlen);",
      "62:  int (*seed)(struct crypto_rng *tfm, const u8 *seed, unsigned int slen);",
      "63:  unsigned int seedsize;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "144:           const u8 *src, unsigned int slen,",
      "145:           u8 *dst, unsigned int dlen)",
      "146: {",
      "148: }",
      "",
      "[Removed Lines]",
      "147:  return tfm->generate(tfm, src, slen, dst, dlen);",
      "",
      "[Added Lines]",
      "143:  return crypto_rng_alg(tfm)->generate(tfm, src, slen, dst, dlen);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "199: static inline int crypto_rng_seedsize(struct crypto_rng *tfm)",
      "200: {",
      "202: }",
      "204: #endif",
      "",
      "[Removed Lines]",
      "201:  return tfm->seedsize;",
      "",
      "[Added Lines]",
      "197:  return crypto_rng_alg(tfm)->seedsize;",
      "",
      "---------------"
    ],
    "include/linux/crypto.h||include/linux/crypto.h": [
      "File: include/linux/crypto.h -> include/linux/crypto.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "138: struct crypto_aead;",
      "139: struct crypto_blkcipher;",
      "140: struct crypto_hash;",
      "142: struct crypto_tfm;",
      "143: struct crypto_type;",
      "144: struct aead_givcrypt_request;",
      "",
      "[Removed Lines]",
      "141: struct crypto_rng;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "426:          unsigned int slen, u8 *dst, unsigned int *dlen);",
      "427: };",
      "457: #define cra_ablkcipher cra_u.ablkcipher",
      "458: #define cra_aead cra_u.aead",
      "459: #define cra_blkcipher cra_u.blkcipher",
      "460: #define cra_cipher cra_u.cipher",
      "461: #define cra_compress cra_u.compress",
      "",
      "[Removed Lines]",
      "448: struct old_rng_alg {",
      "449:  int (*rng_make_random)(struct crypto_rng *tfm, u8 *rdata,",
      "450:           unsigned int dlen);",
      "451:  int (*rng_reset)(struct crypto_rng *tfm, u8 *seed, unsigned int slen);",
      "453:  unsigned int seedsize;",
      "454: };",
      "462: #define cra_rng  cra_u.rng",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "559:   struct blkcipher_alg blkcipher;",
      "560:   struct cipher_alg cipher;",
      "561:   struct compress_alg compress;",
      "563:  } cra_u;",
      "565:  int (*cra_init)(struct crypto_tfm *tfm);",
      "",
      "[Removed Lines]",
      "562:   struct old_rng_alg rng;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d0e83059a6c9b04f00264a74b8f6439948de4613",
      "candidate_info": {
        "commit_hash": "d0e83059a6c9b04f00264a74b8f6439948de4613",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/d0e83059a6c9b04f00264a74b8f6439948de4613",
        "files": [
          "crypto/rng.c",
          "include/crypto/rng.h",
          "include/linux/crypto.h"
        ],
        "message": "crypto: rng - Convert crypto_rng to new style crypto_type\n\nThis patch converts the top-level crypto_rng to the \"new\" style.\nIt was the last algorithm type added before we switched over\nto the new way of doing things exemplified by shash.\n\nAll users will automatically switch over to the new interface.\n\nNote that this patch does not touch the low-level interface to\nrng implementations.\n\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
        "before_after_code_files": [
          "crypto/rng.c||crypto/rng.c",
          "include/crypto/rng.h||include/crypto/rng.h",
          "include/linux/crypto.h||include/linux/crypto.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "crypto/rng.c||crypto/rng.c",
            "include/crypto/rng.h||include/crypto/rng.h",
            "include/linux/crypto.h||include/linux/crypto.h"
          ],
          "candidate": [
            "crypto/rng.c||crypto/rng.c",
            "include/crypto/rng.h||include/crypto/rng.h",
            "include/linux/crypto.h||include/linux/crypto.h"
          ]
        }
      },
      "candidate_diff": {
        "crypto/rng.c||crypto/rng.c": [
          "File: crypto/rng.c -> crypto/rng.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: #include <linux/cryptouser.h>",
          "25: #include <net/netlink.h>",
          "27: static DEFINE_MUTEX(crypto_default_rng_lock);",
          "28: struct crypto_rng *crypto_default_rng;",
          "29: EXPORT_SYMBOL_GPL(crypto_default_rng);",
          "30: static int crypto_default_rng_refcnt;",
          "32: static int rngapi_reset(struct crypto_rng *tfm, u8 *seed, unsigned int slen)",
          "33: {",
          "34:  u8 *buf = NULL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: #include \"internal.h\"",
          "34: static inline struct crypto_rng *__crypto_rng_cast(struct crypto_tfm *tfm)",
          "35: {",
          "36:  return container_of(tfm, struct crypto_rng, base);",
          "37: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49:  return err;",
          "50: }",
          "53: {",
          "54:  struct rng_alg *alg = &tfm->__crt_alg->cra_rng;",
          "60:  return 0;",
          "61: }",
          "",
          "[Removed Lines]",
          "52: static int crypto_init_rng_ops(struct crypto_tfm *tfm, u32 type, u32 mask)",
          "55:  struct rng_tfm *ops = &tfm->crt_rng;",
          "57:  ops->rng_gen_random = alg->rng_make_random;",
          "58:  ops->rng_reset = rngapi_reset;",
          "",
          "[Added Lines]",
          "59: static int crypto_rng_init_tfm(struct crypto_tfm *tfm)",
          "61:  struct crypto_rng *rng = __crypto_rng_cast(tfm);",
          "64:  rng->generate = alg->rng_make_random;",
          "65:  rng->seed = rngapi_reset;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "92:  seq_printf(m, \"seedsize     : %u\\n\", alg->cra_rng.seedsize);",
          "93: }",
          "101: const struct crypto_type crypto_rng_type = {",
          "104: #ifdef CONFIG_PROC_FS",
          "105:  .show = crypto_rng_show,",
          "106: #endif",
          "107:  .report = crypto_rng_report,",
          "108: };",
          "109: EXPORT_SYMBOL_GPL(crypto_rng_type);",
          "111: int crypto_get_default_rng(void)",
          "112: {",
          "113:  struct crypto_rng *rng;",
          "",
          "[Removed Lines]",
          "95: static unsigned int crypto_rng_ctxsize(struct crypto_alg *alg, u32 type,",
          "96:            u32 mask)",
          "97: {",
          "98:  return alg->cra_ctxsize;",
          "99: }",
          "102:  .ctxsize = crypto_rng_ctxsize,",
          "103:  .init = crypto_init_rng_ops,",
          "",
          "[Added Lines]",
          "103:  .extsize = crypto_alg_extsize,",
          "104:  .init_tfm = crypto_rng_init_tfm,",
          "109:  .maskclear = ~CRYPTO_ALG_TYPE_MASK,",
          "110:  .maskset = CRYPTO_ALG_TYPE_MASK,",
          "111:  .type = CRYPTO_ALG_TYPE_RNG,",
          "112:  .tfmsize = offsetof(struct crypto_rng, base),",
          "116: struct crypto_rng *crypto_alloc_rng(const char *alg_name, u32 type, u32 mask)",
          "117: {",
          "118:  return crypto_alloc_tfm(alg_name, &crypto_rng_type, type, mask);",
          "119: }",
          "120: EXPORT_SYMBOL_GPL(crypto_alloc_rng);",
          "",
          "---------------"
        ],
        "include/crypto/rng.h||include/crypto/rng.h": [
          "File: include/crypto/rng.h -> include/crypto/rng.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: #include <linux/crypto.h>",
          "18: extern struct crypto_rng *crypto_default_rng;",
          "20: int crypto_get_default_rng(void);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18: struct crypto_rng {",
          "19:  int (*generate)(struct crypto_rng *tfm, u8 *rdata, unsigned int dlen);",
          "20:  int (*seed)(struct crypto_rng *tfm, u8 *seed, unsigned int slen);",
          "21:  struct crypto_tfm base;",
          "22: };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "30: static inline struct crypto_rng *__crypto_rng_cast(struct crypto_tfm *tfm)",
          "31: {",
          "32:  return (struct crypto_rng *)tfm;",
          "33: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "65: static inline struct crypto_tfm *crypto_rng_tfm(struct crypto_rng *tfm)",
          "66: {",
          "",
          "[Removed Lines]",
          "55: static inline struct crypto_rng *crypto_alloc_rng(const char *alg_name,",
          "56:         u32 type, u32 mask)",
          "57: {",
          "58:  type &= ~CRYPTO_ALG_TYPE_MASK;",
          "59:  type |= CRYPTO_ALG_TYPE_RNG;",
          "60:  mask |= CRYPTO_ALG_TYPE_MASK;",
          "62:  return __crypto_rng_cast(crypto_alloc_base(alg_name, type, mask));",
          "63: }",
          "",
          "[Added Lines]",
          "56: struct crypto_rng *crypto_alloc_rng(const char *alg_name, u32 type, u32 mask);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "80:  return &crypto_rng_tfm(tfm)->__crt_alg->cra_rng;",
          "81: }",
          "92: static inline void crypto_free_rng(struct crypto_rng *tfm)",
          "93: {",
          "95: }",
          "",
          "[Removed Lines]",
          "83: static inline struct rng_tfm *crypto_rng_crt(struct crypto_rng *tfm)",
          "84: {",
          "85:  return &crypto_rng_tfm(tfm)->crt_rng;",
          "86: }",
          "94:  crypto_free_tfm(crypto_rng_tfm(tfm));",
          "",
          "[Added Lines]",
          "82:  crypto_destroy_tfm(tfm, crypto_rng_tfm(tfm));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "108: static inline int crypto_rng_get_bytes(struct crypto_rng *tfm,",
          "109:            u8 *rdata, unsigned int dlen)",
          "110: {",
          "112: }",
          "",
          "[Removed Lines]",
          "111:  return crypto_rng_crt(tfm)->rng_gen_random(tfm, rdata, dlen);",
          "",
          "[Added Lines]",
          "99:  return tfm->generate(tfm, rdata, dlen);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "131: static inline int crypto_rng_reset(struct crypto_rng *tfm,",
          "132:        u8 *seed, unsigned int slen)",
          "133: {",
          "135: }",
          "",
          "[Removed Lines]",
          "134:  return crypto_rng_crt(tfm)->rng_reset(tfm, seed, slen);",
          "",
          "[Added Lines]",
          "122:  return tfm->seed(tfm, seed, slen);",
          "",
          "---------------"
        ],
        "include/linux/crypto.h||include/linux/crypto.h": [
          "File: include/linux/crypto.h -> include/linux/crypto.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "655:                        u8 *dst, unsigned int *dlen);",
          "656: };",
          "664: #define crt_ablkcipher crt_u.ablkcipher",
          "665: #define crt_aead crt_u.aead",
          "666: #define crt_blkcipher crt_u.blkcipher",
          "667: #define crt_cipher crt_u.cipher",
          "668: #define crt_hash crt_u.hash",
          "669: #define crt_compress crt_u.compress",
          "672: struct crypto_tfm {",
          "",
          "[Removed Lines]",
          "658: struct rng_tfm {",
          "659:  int (*rng_gen_random)(struct crypto_rng *tfm, u8 *rdata,",
          "660:          unsigned int dlen);",
          "661:  int (*rng_reset)(struct crypto_rng *tfm, u8 *seed, unsigned int slen);",
          "662: };",
          "670: #define crt_rng  crt_u.rng",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "680:   struct cipher_tfm cipher;",
          "681:   struct hash_tfm hash;",
          "682:   struct compress_tfm compress;",
          "684:  } crt_u;",
          "686:  void (*exit)(struct crypto_tfm *tfm);",
          "",
          "[Removed Lines]",
          "683:   struct rng_tfm rng;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "714:  struct crypto_tfm base;",
          "715: };",
          "721: enum {",
          "722:  CRYPTOA_UNSPEC,",
          "723:  CRYPTOA_ALG,",
          "",
          "[Removed Lines]",
          "717: struct crypto_rng {",
          "718:  struct crypto_tfm base;",
          "719: };",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}