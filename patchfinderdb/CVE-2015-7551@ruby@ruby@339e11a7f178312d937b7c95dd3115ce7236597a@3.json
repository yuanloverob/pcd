{
  "cve_id": "CVE-2015-7551",
  "cve_desc": "The Fiddle::Handle implementation in ext/fiddle/handle.c in Ruby before 2.0.0-p648, 2.1 before 2.1.8, and 2.2 before 2.2.4, as distributed in Apple OS X before 10.11.4 and other products, mishandles tainting, which allows context-dependent attackers to execute arbitrary code or cause a denial of service (application crash) via a crafted string, related to the DL module and the libffi library.  NOTE: this vulnerability exists because of a CVE-2009-5147 regression.",
  "repo": "ruby/ruby",
  "patch_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
  "patch_info": {
    "commit_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
    "repo": "ruby/ruby",
    "commit_url": "https://github.com/ruby/ruby/commit/339e11a7f178312d937b7c95dd3115ce7236597a",
    "files": [
      "ChangeLog",
      "ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb",
      "version.h"
    ],
    "message": "merge revision(s): 53153 and 23405@ruby_1_9_1\n\n\t* ext/fiddle/handle.c: check tainted string arguments.\n\t  Patch provided by tenderlove and nobu.\n\n\t* test/fiddle/test_handle.rb (class TestHandle): add test for above.\n\n\t* ext/dl/handle.c (rb_dlhandle_initialize): prohibits DL::dlopen\n\t  with a tainted name of library.\n\t  Patch by sheepman <sheepman AT sheepman.sakura.ne.jp>.\n\n\t* ext/dl/handle.c (rb_dlhandle_sym): ditto\n\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@53156 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
    "before_after_code_files": [
      "ext/fiddle/handle.c||ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb",
      "version.h||version.h"
    ]
  },
  "patch_diff": {
    "ext/fiddle/handle.c||ext/fiddle/handle.c": [
      "File: ext/fiddle/handle.c -> ext/fiddle/handle.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #include <ruby.h>",
      "2: #include <fiddle.h>",
      "4: VALUE rb_cHandle;",
      "6: struct dl_handle {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4: #define SafeStringValueCStr(v) (rb_check_safe_obj(rb_string_value(&v)), StringValueCStr(v))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "143:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "144:  break;",
      "145:       case 1:",
      "147:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "148:  break;",
      "149:       case 2:",
      "151:  cflag = NUM2INT(flag);",
      "152:  break;",
      "153:       default:",
      "",
      "[Removed Lines]",
      "146:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "150:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "",
      "[Added Lines]",
      "148:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "152:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "263:     return PTR2NUM(fiddle_handle);",
      "264: }",
      "",
      "[Removed Lines]",
      "266: static VALUE fiddle_handle_sym(void *handle, const char *symbol);",
      "",
      "[Added Lines]",
      "268: static VALUE fiddle_handle_sym(void *handle, VALUE symbol);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "282:  rb_raise(rb_eFiddleError, \"closed handle\");",
      "283:     }",
      "286: }",
      "288: #ifndef RTLD_NEXT",
      "",
      "[Removed Lines]",
      "285:     return fiddle_handle_sym(fiddle_handle->ptr, StringValueCStr(sym));",
      "",
      "[Added Lines]",
      "287:     return fiddle_handle_sym(fiddle_handle->ptr, sym);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "305: static VALUE",
      "306: rb_fiddle_handle_s_sym(VALUE self, VALUE sym)",
      "307: {",
      "309: }",
      "311: static VALUE",
      "313: {",
      "314: #if defined(HAVE_DLERROR)",
      "315:     const char *err;",
      "",
      "[Removed Lines]",
      "308:     return fiddle_handle_sym(RTLD_NEXT, StringValueCStr(sym));",
      "312: fiddle_handle_sym(void *handle, const char *name)",
      "",
      "[Added Lines]",
      "310:     return fiddle_handle_sym(RTLD_NEXT, sym);",
      "314: fiddle_handle_sym(void *handle, VALUE symbol)",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "318: # define CHECK_DLERROR",
      "319: #endif",
      "320:     void (*func)();",
      "322:     rb_secure(2);",
      "323: #ifdef HAVE_DLERROR",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "323:     const char *name = SafeStringValueCStr(symbol);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "367:     }",
      "368: #endif",
      "369:     if( !func ){",
      "371:     }",
      "373:     return PTR2NUM(func);",
      "",
      "[Removed Lines]",
      "370:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%s\\\"\", name);",
      "",
      "[Added Lines]",
      "373:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%\"PRIsVALUE\"\\\"\", symbol);",
      "",
      "---------------"
    ],
    "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb": [
      "File: test/fiddle/test_handle.rb -> test/fiddle/test_handle.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "11:     include Test::Unit::Assertions",
      "13:     def test_to_i",
      "14:       handle = Fiddle::Handle.new(LIBC_SO)",
      "15:       assert_kind_of Integer, handle.to_i",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "13:     def test_safe_handle_open",
      "14:       t = Thread.new do",
      "15:         $SAFE = 1",
      "16:         Fiddle::Handle.new(LIBC_SO.taint)",
      "17:       end",
      "18:       assert_raise(SecurityError) { t.value }",
      "19:     end",
      "21:     def test_safe_function_lookup",
      "22:       t = Thread.new do",
      "23:         h = Fiddle::Handle.new(LIBC_SO)",
      "24:         $SAFE = 1",
      "25:         h[\"qsort\".taint]",
      "26:       end",
      "27:       assert_raise(SecurityError) { t.value }",
      "28:     end",
      "",
      "---------------"
    ],
    "version.h||version.h": [
      "File: version.h -> version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #define RUBY_VERSION \"2.1.8\"",
      "2: #define RUBY_RELEASE_DATE \"2015-12-16\"",
      "5: #define RUBY_RELEASE_YEAR 2015",
      "6: #define RUBY_RELEASE_MONTH 12",
      "",
      "[Removed Lines]",
      "3: #define RUBY_PATCHLEVEL 438",
      "",
      "[Added Lines]",
      "3: #define RUBY_PATCHLEVEL 439",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "db0f86030891ee91fb2e2b116dcc05bb3bcc019e",
      "candidate_info": {
        "commit_hash": "db0f86030891ee91fb2e2b116dcc05bb3bcc019e",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/db0f86030891ee91fb2e2b116dcc05bb3bcc019e",
        "files": [
          "ChangeLog",
          "thread.c",
          "version.h"
        ],
        "message": "merge revision(s) r49428: [Backport #10694]\n\n\t* thread.c: Improve documentation for Thread#value\n\t  [Bug #10694][ruby-core:67324][ci skip]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@49912 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "thread.c||thread.c",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "thread.c||thread.c": [
          "File: thread.c -> thread.c"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.5\"",
          "2: #define RUBY_RELEASE_DATE \"2015-03-10\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 3",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 311",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 312",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f73e2f5321477ce9fb3783b799050fe59f37ada2",
      "candidate_info": {
        "commit_hash": "f73e2f5321477ce9fb3783b799050fe59f37ada2",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/f73e2f5321477ce9fb3783b799050fe59f37ada2",
        "files": [
          "ChangeLog",
          "ext/tk/lib/tkextlib/tcllib/toolbar.rb",
          "version.h"
        ],
        "message": "merge revision(s) 54021: [Backport #11891]\n\n\t* ext/tk/lib/tkextlib/tcllib/toolbar.rb: fix method name typo.\n\t  [ruby-core:72511] [Bug #11891] The patch provided by Akira Matsuda.\n\t  [ruby-core:72510] [Bug #11890] The patch provided by Akira Matsuda.\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@54280 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "ext/tk/lib/tkextlib/tcllib/toolbar.rb||ext/tk/lib/tkextlib/tcllib/toolbar.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "ext/tk/lib/tkextlib/tcllib/toolbar.rb||ext/tk/lib/tkextlib/tcllib/toolbar.rb": [
          "File: ext/tk/lib/tkextlib/tcllib/toolbar.rb -> ext/tk/lib/tkextlib/tcllib/toolbar.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "56:     }",
          "57:   end",
          "60:     @parent = @t = parent",
          "61:     @tpath = parent.path",
          "",
          "[Removed Lines]",
          "59:   def initaialize(parent, *args)",
          "",
          "[Added Lines]",
          "59:   def initialize(parent, *args)",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.9\"",
          "2: #define RUBY_RELEASE_DATE \"2016-03-25\"",
          "5: #define RUBY_RELEASE_YEAR 2016",
          "6: #define RUBY_RELEASE_MONTH 3",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 477",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 478",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c9eefd56440eaaddf0d2a8924452a87e42e89f57",
      "candidate_info": {
        "commit_hash": "c9eefd56440eaaddf0d2a8924452a87e42e89f57",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/c9eefd56440eaaddf0d2a8924452a87e42e89f57",
        "files": [
          "ChangeLog",
          "ext/socket/init.c",
          "test/socket/test_basicsocket.rb",
          "version.h"
        ],
        "message": "merge revision(s) 53231,53244: [Backport #11854]\n\n\t* ext/socket/init.c (rsock_init_sock): check FD after validating\n\n\t* test/socket/test_basicsocket.rb (test_for_fd): new\n\t  [ruby-core:72418] [Bug #11854]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@53923 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "ext/socket/init.c||ext/socket/init.c",
          "test/socket/test_basicsocket.rb||test/socket/test_basicsocket.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "ext/socket/init.c||ext/socket/init.c": [
          "File: ext/socket/init.c -> ext/socket/init.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:     if (fstat(fd, &sbuf) < 0)",
          "50:         rb_sys_fail(\"fstat(2)\");",
          "54: #else",
          "58: #endif",
          "60:     MakeOpenFile(sock, fp);",
          "61:     fp->fd = fd;",
          "62:     fp->mode = FMODE_READWRITE|FMODE_DUPLEX;",
          "",
          "[Removed Lines]",
          "51:     rb_update_max_fd(fd);",
          "52:     if (!S_ISSOCK(sbuf.st_mode))",
          "53:         rb_raise(rb_eArgError, \"not a socket file descriptor\");",
          "55:     rb_update_max_fd(fd);",
          "56:     if (!rb_w32_is_socket(fd))",
          "57:         rb_raise(rb_eArgError, \"not a socket file descriptor\");",
          "",
          "[Added Lines]",
          "51:     if (!S_ISSOCK(sbuf.st_mode)) {",
          "52:  errno = EBADF;",
          "53:         rb_sys_fail(\"not a socket file descriptor\");",
          "54:     }",
          "56:     if (!rb_w32_is_socket(fd)) {",
          "57:  errno = EBADF;",
          "58:         rb_sys_fail(\"not a socket file descriptor\");",
          "59:     }",
          "62:     rb_update_max_fd(fd);",
          "",
          "---------------"
        ],
        "test/socket/test_basicsocket.rb||test/socket/test_basicsocket.rb": [
          "File: test/socket/test_basicsocket.rb -> test/socket/test_basicsocket.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "85:       }",
          "86:     end",
          "87:   end",
          "88: end if defined?(BasicSocket)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "88:   def test_for_fd",
          "89:     assert_raise(Errno::EBADF, '[ruby-core:72418] [Bug #11854]') do",
          "90:       BasicSocket.for_fd(-1)",
          "91:     end",
          "92:     inet_stream do |sock|",
          "93:       s = BasicSocket.for_fd(sock.fileno)",
          "94:       assert_instance_of BasicSocket, s",
          "95:       s.autoclose = false",
          "96:       sock.close",
          "97:     end",
          "98:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.9\"",
          "2: #define RUBY_RELEASE_DATE \"2016-02-25\"",
          "5: #define RUBY_RELEASE_YEAR 2016",
          "6: #define RUBY_RELEASE_MONTH 2",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 444",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 445",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "39a65664265525fcd7ca23c5613f832b0889cd01",
      "candidate_info": {
        "commit_hash": "39a65664265525fcd7ca23c5613f832b0889cd01",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/39a65664265525fcd7ca23c5613f832b0889cd01",
        "files": [
          "ChangeLog",
          "test/ruby/test_settracefunc.rb",
          "version.h",
          "vm.c"
        ],
        "message": "merge revision(s) 50206: [Backport #10724]\n\n\t* vm.c (vm_exec): check other events when RETURN is thrown.\n\t  [Bug #10724]\n\n\t* test/ruby/test_settracefunc.rb: add a test.\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@50576 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "test/ruby/test_settracefunc.rb||test/ruby/test_settracefunc.rb",
          "version.h||version.h",
          "vm.c||vm.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "test/ruby/test_settracefunc.rb||test/ruby/test_settracefunc.rb": [
          "File: test/ruby/test_settracefunc.rb -> test/ruby/test_settracefunc.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1348:       }",
          "1349:     end",
          "1350:   end",
          "1351: end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1352:   class Bug10724",
          "1353:     def initialize",
          "1354:       loop{return}",
          "1355:     end",
          "1356:   end",
          "1358:   def test_throwing_return_with_finish_frame",
          "1359:     target_th = Thread.current",
          "1360:     evs = []",
          "1362:     TracePoint.new(:call, :return){|tp|",
          "1363:       return if Thread.current != target_th",
          "1364:       evs << tp.event",
          "1365:     }.enable{",
          "1366:       a = Bug10724.new",
          "1367:     }",
          "1369:     assert_equal([:call, :return], evs)",
          "1370:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.7\"",
          "2: #define RUBY_RELEASE_DATE \"2015-05-21\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 5",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 349",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 350",
          "",
          "---------------"
        ],
        "vm.c||vm.c": [
          "File: vm.c -> vm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1285: }",
          "1286: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1288: static void",
          "1289: hook_before_rewind(rb_thread_t *th, rb_control_frame_t *cfp)",
          "1290: {",
          "1291:     switch (VM_FRAME_TYPE(th->cfp)) {",
          "1292:       case VM_FRAME_MAGIC_METHOD:",
          "1293:  RUBY_DTRACE_METHOD_RETURN_HOOK(th, 0, 0);",
          "1294:  EXEC_EVENT_HOOK_AND_POP_FRAME(th, RUBY_EVENT_RETURN, th->cfp->self, 0, 0, Qnil);",
          "1295:  break;",
          "1296:       case VM_FRAME_MAGIC_BLOCK:",
          "1297:       case VM_FRAME_MAGIC_LAMBDA:",
          "1298:  if (VM_FRAME_TYPE_BMETHOD_P(th->cfp)) {",
          "1299:      EXEC_EVENT_HOOK(th, RUBY_EVENT_B_RETURN, th->cfp->self, 0, 0, Qnil);",
          "1300:      EXEC_EVENT_HOOK_AND_POP_FRAME(th, RUBY_EVENT_RETURN, th->cfp->self, th->cfp->me->called_id, th->cfp->me->klass, Qnil);",
          "1301:  }",
          "1302:  else {",
          "1303:      EXEC_EVENT_HOOK_AND_POP_FRAME(th, RUBY_EVENT_B_RETURN, th->cfp->self, 0, 0, Qnil);",
          "1304:  }",
          "1305:  break;",
          "1306:       case VM_FRAME_MAGIC_CLASS:",
          "1307:  EXEC_EVENT_HOOK_AND_POP_FRAME(th, RUBY_EVENT_END, th->cfp->self, 0, 0, Qnil);",
          "1308:  break;",
          "1309:     }",
          "1310: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1451:        }",
          "1452:    }",
          "1453:    if (!catch_iseqval) {",
          "1455:        th->errinfo = Qnil;",
          "1463:        vm_pop_frame(th);",
          "1464:        goto finish_vme;",
          "1465:    }",
          "",
          "[Removed Lines]",
          "1454:        result = GET_THROWOBJ_VAL(err);",
          "1457:        switch (VM_FRAME_TYPE(cfp)) {",
          "1458:          case VM_FRAME_MAGIC_LAMBDA:",
          "1459:     EXEC_EVENT_HOOK_AND_POP_FRAME(th, RUBY_EVENT_B_RETURN, th->cfp->self, 0, 0, Qnil);",
          "1460:     break;",
          "1461:        }",
          "",
          "[Added Lines]",
          "1478:        result = GET_THROWOBJ_VAL(err);",
          "1479:        hook_before_rewind(th, th->cfp);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1598:  }",
          "1599:  else {",
          "1622:      if (VM_FRAME_TYPE_FINISH_P(th->cfp)) {",
          "1623:   vm_pop_frame(th);",
          "",
          "[Removed Lines]",
          "1602:      switch (VM_FRAME_TYPE(th->cfp)) {",
          "1603:        case VM_FRAME_MAGIC_METHOD:",
          "1604:   RUBY_DTRACE_METHOD_RETURN_HOOK(th, 0, 0);",
          "1605:   EXEC_EVENT_HOOK_AND_POP_FRAME(th, RUBY_EVENT_RETURN, th->cfp->self, 0, 0, Qnil);",
          "1606:   break;",
          "1607:        case VM_FRAME_MAGIC_BLOCK:",
          "1608:        case VM_FRAME_MAGIC_LAMBDA:",
          "1609:   if (VM_FRAME_TYPE_BMETHOD_P(th->cfp)) {",
          "1610:       EXEC_EVENT_HOOK(th, RUBY_EVENT_B_RETURN, th->cfp->self, 0, 0, Qnil);",
          "1611:       EXEC_EVENT_HOOK_AND_POP_FRAME(th, RUBY_EVENT_RETURN, th->cfp->self, th->cfp->me->called_id, th->cfp->me->klass, Qnil);",
          "1612:   }",
          "1613:   else {",
          "1614:       EXEC_EVENT_HOOK_AND_POP_FRAME(th, RUBY_EVENT_B_RETURN, th->cfp->self, 0, 0, Qnil);",
          "1615:   }",
          "1616:   break;",
          "1617:        case VM_FRAME_MAGIC_CLASS:",
          "1618:   EXEC_EVENT_HOOK_AND_POP_FRAME(th, RUBY_EVENT_END, th->cfp->self, 0, 0, Qnil);",
          "1619:   break;",
          "1620:      }",
          "",
          "[Added Lines]",
          "1618:      hook_before_rewind(th, th->cfp);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2558571db146e6463501db9b006436d8e22ba6f3",
      "candidate_info": {
        "commit_hash": "2558571db146e6463501db9b006436d8e22ba6f3",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/2558571db146e6463501db9b006436d8e22ba6f3",
        "files": [
          "ChangeLog",
          "ext/openssl/ossl_cipher.c",
          "version.h"
        ],
        "message": "merge revision(s) r48923: [Backport #10633]\n\n\t* ext/openssl/ossl_cipher.c (ossl_cipher_update_long): update huge\n\t  data gradually not to exceed INT_MAX.  workaround of OpenSSL API\n\t  limitation.  [ruby-core:67043] [Bug #10633]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@49383 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "ext/openssl/ossl_cipher.c||ext/openssl/ossl_cipher.c",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "ext/openssl/ossl_cipher.c||ext/openssl/ossl_cipher.c": [
          "File: ext/openssl/ossl_cipher.c -> ext/openssl/ossl_cipher.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "329:     return Qnil;",
          "330: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "332: static int",
          "333: ossl_cipher_update_long(EVP_CIPHER_CTX *ctx, unsigned char *out, long *out_len_ptr,",
          "334:    const unsigned char *in, long in_len)",
          "335: {",
          "336:     int out_part_len;",
          "337:     long out_len = 0;",
          "338: #define UPDATE_LENGTH_LIMIT INT_MAX",
          "340: #if SIZEOF_LONG > UPDATE_LENGTH_LIMIT",
          "341:     if (in_len > UPDATE_LENGTH_LIMIT) {",
          "342:  const int in_part_len = (UPDATE_LENGTH_LIMIT / 2 + 1) & ~1;",
          "343:  do {",
          "344:      if (!EVP_CipherUpdate(ctx, out ? (out + out_len) : 0,",
          "345:       &out_part_len, in, in_part_len))",
          "346:   return 0;",
          "347:      out_len += out_part_len;",
          "348:      in += in_part_len;",
          "349:  } while ((in_len -= in_part_len) > UPDATE_LENGTH_LIMIT);",
          "350:     }",
          "351: #endif",
          "352:     if (!EVP_CipherUpdate(ctx, out ? (out + out_len) : 0,",
          "353:      &out_part_len, in, (int)in_len))",
          "354:  return 0;",
          "355:     if (out_len_ptr) *out_len_ptr = out_len += out_part_len;",
          "356:     return 1;",
          "357: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "347: {",
          "348:     EVP_CIPHER_CTX *ctx;",
          "349:     unsigned char *in;",
          "351:     VALUE data, str;",
          "353:     rb_scan_args(argc, argv, \"11\", &data, &str);",
          "355:     StringValue(data);",
          "356:     in = (unsigned char *)RSTRING_PTR(data);",
          "358:         ossl_raise(rb_eArgError, \"data must not be empty\");",
          "359:     GetCipher(self, ctx);",
          "360:     out_len = in_len+EVP_CIPHER_CTX_block_size(ctx);",
          "362:     if (NIL_P(str)) {",
          "363:         str = rb_str_new(0, out_len);",
          "",
          "[Removed Lines]",
          "350:     int in_len, out_len;",
          "357:     if ((in_len = RSTRING_LENINT(data)) == 0)",
          "",
          "[Added Lines]",
          "377:     long in_len, out_len;",
          "384:     if ((in_len = RSTRING_LEN(data)) == 0)",
          "388:     if (out_len <= 0) {",
          "389:  ossl_raise(rb_eRangeError,",
          "390:      \"data too big to make output buffer: %ld bytes\", in_len);",
          "391:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "366:         rb_str_resize(str, out_len);",
          "367:     }",
          "370:  ossl_raise(eCipherError, NULL);",
          "371:     assert(out_len < RSTRING_LEN(str));",
          "372:     rb_str_set_len(str, out_len);",
          "",
          "[Removed Lines]",
          "369:     if (!EVP_CipherUpdate(ctx, (unsigned char *)RSTRING_PTR(str), &out_len, in, in_len))",
          "",
          "[Added Lines]",
          "400:     if (!ossl_cipher_update_long(ctx, (unsigned char *)RSTRING_PTR(str), &out_len, in, in_len))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "506: {",
          "507:     EVP_CIPHER_CTX *ctx;",
          "508:     unsigned char *in;",
          "512:     StringValue(data);",
          "514:     in = (unsigned char *) RSTRING_PTR(data);",
          "517:     GetCipher(self, ctx);",
          "520:         ossl_raise(eCipherError, \"couldn't set additional authenticated data\");",
          "522:     return data;",
          "",
          "[Removed Lines]",
          "509:     int in_len;",
          "510:     int out_len;",
          "515:     in_len = RSTRING_LENINT(data);",
          "519:     if (!EVP_CipherUpdate(ctx, NULL, &out_len, in, in_len))",
          "",
          "[Added Lines]",
          "540:     long in_len, out_len;",
          "545:     in_len = RSTRING_LEN(data);",
          "549:     if (!ossl_cipher_update_long(ctx, NULL, &out_len, in, in_len))",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.5\"",
          "2: #define RUBY_RELEASE_DATE \"2015-01-22\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 1",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 284",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 285",
          "",
          "---------------"
        ]
      }
    }
  ]
}