{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "78a25696f1ef88e245c9b88a25244d73e517ecd1",
      "candidate_info": {
        "commit_hash": "78a25696f1ef88e245c9b88a25244d73e517ecd1",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/78a25696f1ef88e245c9b88a25244d73e517ecd1",
        "files": [
          "src/node.cc",
          "src/node_isolate.cc",
          "src/node_isolate.h"
        ],
        "message": "Move uv loop initialization into isolate",
        "before_after_code_files": [
          "src/node.cc||src/node.cc",
          "src/node_isolate.cc||src/node_isolate.cc",
          "src/node_isolate.h||src/node_isolate.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.cc||src/node.cc": [
          "File: src/node.cc -> src/node.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1891: static void RunIsolate(void* arg) {",
          "1892:   ThreadInfo* ti = reinterpret_cast<ThreadInfo*>(arg);",
          "1897:   StartThread(isolate, ti->argc_, ti->argv_);",
          "1898:   delete ti;",
          "",
          "[Removed Lines]",
          "1894:   uv_loop_t* loop = uv_loop_new();",
          "1895:   Isolate* isolate = Isolate::New(loop);",
          "",
          "[Added Lines]",
          "1894:   Isolate* isolate = Isolate::New();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2782:   node::Isolate::Initialize();",
          "2784:   StartThread(isolate, argc, argv);",
          "2785:   isolate->Dispose();",
          "",
          "[Removed Lines]",
          "2783:   Isolate* isolate = node::Isolate::New(uv_default_loop());",
          "",
          "[Added Lines]",
          "2782:   Isolate* isolate = node::Isolate::New();",
          "",
          "---------------"
        ],
        "src/node_isolate.cc||src/node_isolate.cc": [
          "File: src/node_isolate.cc -> src/node_isolate.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:   }",
          "41: }",
          "45: }",
          "49:   assert(initialized && \"node::Isolate::Initialize() hasn't been called\");",
          "51:   uv_mutex_lock(&id_lock);",
          "52:   id_ = ++id;",
          "53:   uv_mutex_unlock(&id_lock);",
          "55:   ngx_queue_init(&at_exit_callbacks_);",
          "58:   v8_isolate_ = v8::Isolate::GetCurrent();",
          "59:   if (v8_isolate_ == NULL) {",
          "",
          "[Removed Lines]",
          "43: Isolate* Isolate::New(uv_loop_t* loop) {",
          "44:   return new Isolate(loop);",
          "48: Isolate::Isolate(uv_loop_t* loop) {",
          "56:   loop_ = loop;",
          "",
          "[Added Lines]",
          "44: Isolate* Isolate::New() {",
          "45:   return new Isolate();",
          "49: Isolate::Isolate() {",
          "56:   if (id_ == 1) {",
          "57:     loop_ = uv_default_loop();",
          "58:   } else {",
          "59:     loop_ = uv_loop_new();",
          "60:   }",
          "",
          "---------------"
        ],
        "src/node_isolate.h||src/node_isolate.h": [
          "File: src/node_isolate.h -> src/node_isolate.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:   typedef void (*AtExitCallback)(void* arg);",
          "53:   static Isolate* GetCurrent() {",
          "54:     return reinterpret_cast<Isolate*>(v8::Isolate::GetCurrent()->GetData());",
          "",
          "[Removed Lines]",
          "51:   static Isolate* New(uv_loop_t* loop);",
          "",
          "[Added Lines]",
          "51:   static Isolate* New();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "82:   unsigned int id_;",
          "84: private:",
          "87:   struct AtExitCallbackInfo {",
          "88:     ngx_queue_t at_exit_callbacks_;",
          "",
          "[Removed Lines]",
          "85:   Isolate(uv_loop_t* loop);",
          "",
          "[Added Lines]",
          "85:   Isolate();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b28e700ebdf6583364fec3171390a24153f79632",
      "candidate_info": {
        "commit_hash": "b28e700ebdf6583364fec3171390a24153f79632",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/b28e700ebdf6583364fec3171390a24153f79632",
        "files": [
          "lib/sys.js"
        ],
        "message": "require('sys') now throws\n\nTo be removed in v0.9",
        "before_after_code_files": [
          "lib/sys.js||lisys.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/sys.js||lisys.js": [
          "File: lib/sys.js -> lisys.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "22: var util = require('util');",
          "24: util._deprecationWarning('sys',",
          "25:   'The \"sys\" module is now called \"util\". It should have a similar interface.');",
          "27: exports.print = util.print;",
          "28: exports.puts = util.puts;",
          "29: exports.debug = util.debug;",
          "30: exports.error = util.error;",
          "31: exports.inspect = util.inspect;",
          "32: exports.p = util.p;",
          "33: exports.log = util.log;",
          "34: exports.exec = util.exec;",
          "35: exports.pump = util.pump;",
          "36: exports.inherits = util.inherits;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d1eff9ab68ae3fa32285544ad9f1d2c2ed52ab82",
      "candidate_info": {
        "commit_hash": "d1eff9ab68ae3fa32285544ad9f1d2c2ed52ab82",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/d1eff9ab68ae3fa32285544ad9f1d2c2ed52ab82",
        "files": [
          "src/node_crypto.cc",
          "test/simple/test-domain-crypto.js"
        ],
        "message": "crypto: make randomBytes() compatible with domains\n\nDon't execute the callback in the context of the global object.\n\nMakeCallback() tries to apply the active domain to the callback. If the user\npolluted the global object with a 'domain' property, as in the code example\nbelow, MakeCallback() will try to apply that.\n\nExample:\n\n    domain = {};                // missing var keyword is intentional\n    crypto.randomBytes(8, cb);  // TypeError: undefined is not a function\n\nFixes #3956.",
        "before_after_code_files": [
          "src/node_crypto.cc||src/node_crypto.cc",
          "test/simple/test-domain-crypto.js||test/simple/test-domain-crypto.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_crypto.cc||src/node_crypto.cc": [
          "File: src/node_crypto.cc -> src/node_crypto.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "4355: struct RandomBytesRequest {",
          "4356:   ~RandomBytesRequest();",
          "4358:   unsigned long error_; // openssl error code or zero",
          "4359:   uv_work_t work_req_;",
          "4360:   size_t size_;",
          "",
          "[Removed Lines]",
          "4357:   Persistent<Function> callback_;",
          "",
          "[Added Lines]",
          "4357:   Persistent<Object> obj_;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4365: RandomBytesRequest::~RandomBytesRequest() {",
          "4370: }",
          "",
          "[Removed Lines]",
          "4366:   if (!callback_.IsEmpty()) {",
          "4367:     callback_.Dispose();",
          "4368:     callback_.Clear();",
          "4369:   }",
          "",
          "[Added Lines]",
          "4366:   if (obj_.IsEmpty()) return;",
          "4367:   obj_.Dispose();",
          "4368:   obj_.Clear();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4427:   HandleScope scope;",
          "4428:   Local<Value> argv[2];",
          "4429:   RandomBytesCheck(req, argv);",
          "4437:   delete req;",
          "4438: }",
          "",
          "[Removed Lines]",
          "4433:   MakeCallback(Context::GetCurrent()->Global(),",
          "4434:                req->callback_,",
          "4435:                ARRAY_SIZE(argv), argv);",
          "",
          "[Added Lines]",
          "4429:   MakeCallback(req->obj_, \"ondone\", ARRAY_SIZE(argv), argv);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4457:   req->size_ = size;",
          "4459:   if (args[1]->IsFunction()) {",
          "4463:     uv_queue_work(uv_default_loop(),",
          "4464:                   &req->work_req_,",
          "4465:                   RandomBytesWork<generator>,",
          "4466:                   RandomBytesAfter<generator>);",
          "4469:   }",
          "4470:   else {",
          "4471:     Local<Value> argv[2];",
          "",
          "[Removed Lines]",
          "4460:     Local<Function> callback_v = Local<Function>(Function::Cast(*args[1]));",
          "4461:     req->callback_ = Persistent<Function>::New(callback_v);",
          "4468:     return Undefined();",
          "",
          "[Added Lines]",
          "4454:     req->obj_ = Persistent<Object>::New(Object::New());",
          "4455:     req->obj_->Set(String::New(\"ondone\"), args[1]);",
          "4462:     return req->obj_;",
          "",
          "---------------"
        ],
        "test/simple/test-domain-crypto.js||test/simple/test-domain-crypto.js": [
          "File: test/simple/test-domain-crypto.js -> test/simple/test-domain-crypto.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: try {",
          "23:   var crypto = require('crypto');",
          "24: } catch (e) {",
          "25:   console.log('Not compiled with OPENSSL support.');",
          "26:   process.exit();",
          "27: }",
          "30: domain = require('domain');",
          "33: crypto.randomBytes(8);",
          "34: crypto.randomBytes(8, function() {});",
          "35: crypto.pseudoRandomBytes(8);",
          "36: crypto.pseudoRandomBytes(8, function() {});",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0fcb12460223cd3434c699e571a62a53aa65891d",
      "candidate_info": {
        "commit_hash": "0fcb12460223cd3434c699e571a62a53aa65891d",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/0fcb12460223cd3434c699e571a62a53aa65891d",
        "files": [
          "src/node_version.h"
        ],
        "message": "Now working on 0.7.9",
        "before_after_code_files": [
          "src/node_version.h||src/node_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_version.h||src/node_version.h": [
          "File: src/node_version.h -> src/node_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: #define NODE_MAJOR_VERSION 0",
          "30: #define NODE_MINOR_VERSION 7",
          "34: #ifndef NODE_STRINGIFY",
          "35: #define NODE_STRINGIFY(n) NODE_STRINGIFY_HELPER(n)",
          "",
          "[Removed Lines]",
          "31: #define NODE_PATCH_VERSION 8",
          "32: #define NODE_VERSION_IS_RELEASE 1",
          "",
          "[Added Lines]",
          "31: #define NODE_PATCH_VERSION 9",
          "32: #define NODE_VERSION_IS_RELEASE 0",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2cca7488bf5f783c0b7a2c1258baa583a771164a",
      "candidate_info": {
        "commit_hash": "2cca7488bf5f783c0b7a2c1258baa583a771164a",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/2cca7488bf5f783c0b7a2c1258baa583a771164a",
        "files": [
          "deps/v8/build/common.gypi",
          "deps/v8/src/debug-agent.cc",
          "deps/v8/src/platform-posix.cc"
        ],
        "message": "Patches floating on V8",
        "before_after_code_files": [
          "deps/v8/build/common.gypi||deps/v8/build/common.gypi",
          "deps/v8/src/debug-agent.cc||deps/v8/src/debug-agent.cc",
          "deps/v8/src/platform-posix.cc||deps/v8/src/platform-posix.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/v8/build/common.gypi||deps/v8/build/common.gypi": [
          "File: deps/v8/build/common.gypi -> deps/v8/build/common.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "339:             'cflags': [ '-I/usr/pkg/include' ],",
          "340:           }],",
          "341:           ['OS==\"linux\" or OS==\"freebsd\" or OS==\"openbsd\" or OS==\"netbsd\"', {",
          "343:                         '-Wnon-virtual-dtor', '-Woverloaded-virtual' ],",
          "344:           }],",
          "345:         ],",
          "",
          "[Removed Lines]",
          "342:             'cflags': [ '-Wall', '<(werror)', '-W', '-Wno-unused-parameter',",
          "",
          "[Added Lines]",
          "342:             'cflags': [ '-Wno-unused-parameter',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "386:           }],  # OS==\"mac\"",
          "387:           ['OS==\"win\"', {",
          "388:             'msvs_configuration_attributes': {",
          "390:               'IntermediateDirectory': '$(OutDir)\\\\obj\\\\$(ProjectName)',",
          "391:               'CharacterSet': '1',",
          "392:             },",
          "",
          "[Removed Lines]",
          "389:               'OutputDirectory': '<(DEPTH)\\\\build\\\\$(ConfigurationName)',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/v8/src/debug-agent.cc||deps/v8/src/debug-agent.cc": [
          "File: deps/v8/src/debug-agent.cc -> deps/v8/src/debug-agent.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "323:                                            const char* embedding_host) {",
          "324:   static const int kBufferSize = 80;",
          "325:   char buffer[kBufferSize];  // Sending buffer.",
          "327:   int len;",
          "330:   len = OS::SNPrintF(Vector<char>(buffer, kBufferSize),",
          "331:                      \"Type: connect\\r\\n\");",
          "335:   len = OS::SNPrintF(Vector<char>(buffer, kBufferSize),",
          "336:                      \"V8-Version: %s\\r\\n\", v8::V8::GetVersion());",
          "340:   len = OS::SNPrintF(Vector<char>(buffer, kBufferSize),",
          "341:                      \"Protocol-Version: 1\\r\\n\");",
          "345:   if (embedding_host != NULL) {",
          "346:     len = OS::SNPrintF(Vector<char>(buffer, kBufferSize),",
          "347:                        \"Embedding-Host: %s\\r\\n\", embedding_host);",
          "350:   }",
          "352:   len = OS::SNPrintF(Vector<char>(buffer, kBufferSize),",
          "353:                      \"%s: 0\\r\\n\", kContentLength);",
          "358:   len = OS::SNPrintF(Vector<char>(buffer, kBufferSize), \"\\r\\n\");",
          "",
          "[Removed Lines]",
          "326:   bool ok;",
          "332:   ok = conn->Send(buffer, len);",
          "333:   if (!ok) return false;",
          "337:   ok = conn->Send(buffer, len);",
          "338:   if (!ok) return false;",
          "342:   ok = conn->Send(buffer, len);",
          "343:   if (!ok) return false;",
          "348:     ok = conn->Send(buffer, len);",
          "349:     if (!ok) return false;",
          "354:   ok = conn->Send(buffer, len);",
          "355:   if (!ok) return false;",
          "359:   ok = conn->Send(buffer, len);",
          "360:   if (!ok) return false;",
          "",
          "[Added Lines]",
          "327:   int r;",
          "332:   r = conn->Send(buffer, len);",
          "333:   if (r != len) return false;",
          "337:   r = conn->Send(buffer, len);",
          "338:   if (r != len) return false;",
          "342:   r = conn->Send(buffer, len);",
          "343:   if (r != len) return false;",
          "348:     r = conn->Send(buffer, len);",
          "349:     if (r != len) return false;",
          "354:   r = conn->Send(buffer, len);",
          "355:   if (r != len) return false;",
          "359:   r = conn->Send(buffer, len);",
          "360:   if (r != len) return false;",
          "",
          "---------------"
        ],
        "deps/v8/src/platform-posix.cc||deps/v8/src/platform-posix.cc": [
          "File: deps/v8/src/platform-posix.cc -> deps/v8/src/platform-posix.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "421:     return NULL;",
          "422:   }",
          "425:   if (socket == -1) {",
          "426:     return NULL;",
          "427:   } else {",
          "",
          "[Removed Lines]",
          "424:   int socket = accept(socket_, NULL, NULL);",
          "",
          "[Added Lines]",
          "424:   int socket;",
          "425:   do",
          "426:     socket = accept(socket_, NULL, NULL);",
          "427:   while (socket == -1 && errno == EINTR);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "448:   }",
          "452:   freeaddrinfo(result);",
          "453:   return status == 0;",
          "454: }",
          "",
          "[Removed Lines]",
          "451:   status = connect(socket_, result->ai_addr, result->ai_addrlen);",
          "",
          "[Added Lines]",
          "455:   do",
          "456:     status = connect(socket_, result->ai_addr, result->ai_addrlen);",
          "457:   while (status == -1 && errno == EINTR);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "469: int POSIXSocket::Send(const char* data, int len) const {",
          "472: }",
          "475: int POSIXSocket::Receive(char* data, int len) const {",
          "477:   return status;",
          "478: }",
          "",
          "[Removed Lines]",
          "470:   int status = send(socket_, data, len, 0);",
          "471:   return status;",
          "476:   int status = recv(socket_, data, len, 0);",
          "",
          "[Added Lines]",
          "477:   int written;",
          "479:   for (written = 0; written < len; /* empty */) {",
          "480:     int status = send(socket_, data + written, len - written, 0);",
          "481:     if (status == 0) {",
          "482:       break;",
          "483:     } else if (status > 0) {",
          "484:       written += status;",
          "485:     } else if (errno == EINTR) {",
          "487:     } else {",
          "488:       return -1;",
          "489:     }",
          "490:   }",
          "492:   return written;",
          "497:   int status;",
          "499:   do",
          "500:     status = recv(socket_, data, len, 0);",
          "501:   while (status == -1 && errno == EINTR);",
          "",
          "---------------"
        ]
      }
    }
  ]
}