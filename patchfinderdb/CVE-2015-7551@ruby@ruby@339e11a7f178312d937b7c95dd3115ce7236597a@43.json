{
  "cve_id": "CVE-2015-7551",
  "cve_desc": "The Fiddle::Handle implementation in ext/fiddle/handle.c in Ruby before 2.0.0-p648, 2.1 before 2.1.8, and 2.2 before 2.2.4, as distributed in Apple OS X before 10.11.4 and other products, mishandles tainting, which allows context-dependent attackers to execute arbitrary code or cause a denial of service (application crash) via a crafted string, related to the DL module and the libffi library.  NOTE: this vulnerability exists because of a CVE-2009-5147 regression.",
  "repo": "ruby/ruby",
  "patch_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
  "patch_info": {
    "commit_hash": "339e11a7f178312d937b7c95dd3115ce7236597a",
    "repo": "ruby/ruby",
    "commit_url": "https://github.com/ruby/ruby/commit/339e11a7f178312d937b7c95dd3115ce7236597a",
    "files": [
      "ChangeLog",
      "ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb",
      "version.h"
    ],
    "message": "merge revision(s): 53153 and 23405@ruby_1_9_1\n\n\t* ext/fiddle/handle.c: check tainted string arguments.\n\t  Patch provided by tenderlove and nobu.\n\n\t* test/fiddle/test_handle.rb (class TestHandle): add test for above.\n\n\t* ext/dl/handle.c (rb_dlhandle_initialize): prohibits DL::dlopen\n\t  with a tainted name of library.\n\t  Patch by sheepman <sheepman AT sheepman.sakura.ne.jp>.\n\n\t* ext/dl/handle.c (rb_dlhandle_sym): ditto\n\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@53156 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
    "before_after_code_files": [
      "ext/fiddle/handle.c||ext/fiddle/handle.c",
      "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb",
      "version.h||version.h"
    ]
  },
  "patch_diff": {
    "ext/fiddle/handle.c||ext/fiddle/handle.c": [
      "File: ext/fiddle/handle.c -> ext/fiddle/handle.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #include <ruby.h>",
      "2: #include <fiddle.h>",
      "4: VALUE rb_cHandle;",
      "6: struct dl_handle {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4: #define SafeStringValueCStr(v) (rb_check_safe_obj(rb_string_value(&v)), StringValueCStr(v))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "143:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "144:  break;",
      "145:       case 1:",
      "147:  cflag = RTLD_LAZY | RTLD_GLOBAL;",
      "148:  break;",
      "149:       case 2:",
      "151:  cflag = NUM2INT(flag);",
      "152:  break;",
      "153:       default:",
      "",
      "[Removed Lines]",
      "146:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "150:  clib = NIL_P(lib) ? NULL : StringValuePtr(lib);",
      "",
      "[Added Lines]",
      "148:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "152:  clib = NIL_P(lib) ? NULL : SafeStringValueCStr(lib);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "263:     return PTR2NUM(fiddle_handle);",
      "264: }",
      "",
      "[Removed Lines]",
      "266: static VALUE fiddle_handle_sym(void *handle, const char *symbol);",
      "",
      "[Added Lines]",
      "268: static VALUE fiddle_handle_sym(void *handle, VALUE symbol);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "282:  rb_raise(rb_eFiddleError, \"closed handle\");",
      "283:     }",
      "286: }",
      "288: #ifndef RTLD_NEXT",
      "",
      "[Removed Lines]",
      "285:     return fiddle_handle_sym(fiddle_handle->ptr, StringValueCStr(sym));",
      "",
      "[Added Lines]",
      "287:     return fiddle_handle_sym(fiddle_handle->ptr, sym);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "305: static VALUE",
      "306: rb_fiddle_handle_s_sym(VALUE self, VALUE sym)",
      "307: {",
      "309: }",
      "311: static VALUE",
      "313: {",
      "314: #if defined(HAVE_DLERROR)",
      "315:     const char *err;",
      "",
      "[Removed Lines]",
      "308:     return fiddle_handle_sym(RTLD_NEXT, StringValueCStr(sym));",
      "312: fiddle_handle_sym(void *handle, const char *name)",
      "",
      "[Added Lines]",
      "310:     return fiddle_handle_sym(RTLD_NEXT, sym);",
      "314: fiddle_handle_sym(void *handle, VALUE symbol)",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "318: # define CHECK_DLERROR",
      "319: #endif",
      "320:     void (*func)();",
      "322:     rb_secure(2);",
      "323: #ifdef HAVE_DLERROR",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "323:     const char *name = SafeStringValueCStr(symbol);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "367:     }",
      "368: #endif",
      "369:     if( !func ){",
      "371:     }",
      "373:     return PTR2NUM(func);",
      "",
      "[Removed Lines]",
      "370:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%s\\\"\", name);",
      "",
      "[Added Lines]",
      "373:  rb_raise(rb_eFiddleError, \"unknown symbol \\\"%\"PRIsVALUE\"\\\"\", symbol);",
      "",
      "---------------"
    ],
    "test/fiddle/test_handle.rb||test/fiddle/test_handle.rb": [
      "File: test/fiddle/test_handle.rb -> test/fiddle/test_handle.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "11:     include Test::Unit::Assertions",
      "13:     def test_to_i",
      "14:       handle = Fiddle::Handle.new(LIBC_SO)",
      "15:       assert_kind_of Integer, handle.to_i",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "13:     def test_safe_handle_open",
      "14:       t = Thread.new do",
      "15:         $SAFE = 1",
      "16:         Fiddle::Handle.new(LIBC_SO.taint)",
      "17:       end",
      "18:       assert_raise(SecurityError) { t.value }",
      "19:     end",
      "21:     def test_safe_function_lookup",
      "22:       t = Thread.new do",
      "23:         h = Fiddle::Handle.new(LIBC_SO)",
      "24:         $SAFE = 1",
      "25:         h[\"qsort\".taint]",
      "26:       end",
      "27:       assert_raise(SecurityError) { t.value }",
      "28:     end",
      "",
      "---------------"
    ],
    "version.h||version.h": [
      "File: version.h -> version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #define RUBY_VERSION \"2.1.8\"",
      "2: #define RUBY_RELEASE_DATE \"2015-12-16\"",
      "5: #define RUBY_RELEASE_YEAR 2015",
      "6: #define RUBY_RELEASE_MONTH 12",
      "",
      "[Removed Lines]",
      "3: #define RUBY_PATCHLEVEL 438",
      "",
      "[Added Lines]",
      "3: #define RUBY_PATCHLEVEL 439",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "089dbf1edd726b4871a6370ba85dedc2e0285a5e",
      "candidate_info": {
        "commit_hash": "089dbf1edd726b4871a6370ba85dedc2e0285a5e",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/089dbf1edd726b4871a6370ba85dedc2e0285a5e",
        "files": [
          "ChangeLog",
          "ext/zlib/zlib.c",
          "version.h"
        ],
        "message": "merge revision(s) r49202: [Backport #10668]\n\n\t* ext/zlib/zlib.c: fix document of method signatures.\n\t  [Bug #10668][ruby-core:67186][ci skip]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@49783 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "ext/zlib/zlib.c||ext/zlib/zlib.c",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "ext/zlib/zlib.c||ext/zlib/zlib.c": [
          "File: ext/zlib/zlib.c -> ext/zlib/zlib.c"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.5\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "9: #include \"ruby/version.h\"",
          "",
          "[Removed Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-02-28\"",
          "3: #define RUBY_PATCHLEVEL 300",
          "6: #define RUBY_RELEASE_MONTH 2",
          "7: #define RUBY_RELEASE_DAY 28",
          "",
          "[Added Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-03-01\"",
          "3: #define RUBY_PATCHLEVEL 301",
          "6: #define RUBY_RELEASE_MONTH 3",
          "7: #define RUBY_RELEASE_DAY 1",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fd87a8aebba9f0f7ec4afc2bf7aba5b9d623a23b",
      "candidate_info": {
        "commit_hash": "fd87a8aebba9f0f7ec4afc2bf7aba5b9d623a23b",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/fd87a8aebba9f0f7ec4afc2bf7aba5b9d623a23b",
        "files": [
          "ChangeLog",
          "lib/net/http.rb",
          "test/net/http/test_https.rb",
          "version.h"
        ],
        "message": "merge revision(s) r48563,r46261,r48581: [Backport #10533]\n\n\t* lib/net/http.rb:  Do not attempt SSL session resumption when the\n\t  session is expired.  [Bug #10533]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@49631 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "lib/net/http.rb||lib/net/http.rb",
          "test/net/http/test_https.rb||test/net/http/test_https.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "lib/net/http.rb||lib/net/http.rb": [
          "File: lib/net/http.rb -> lib/net/http.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "914:             @socket.write(buf)",
          "915:             HTTPResponse.read_new(@socket).value",
          "916:           end",
          "918:           # Server Name Indication (SNI) RFC 3546",
          "919:           s.hostname = @address if s.respond_to? :hostname=",
          "920:           Timeout.timeout(@open_timeout, Net::OpenTimeout) { s.connect }",
          "",
          "[Removed Lines]",
          "917:           s.session = @ssl_session if @ssl_session",
          "",
          "[Added Lines]",
          "917:           if @ssl_session and",
          "918:              Time.now < @ssl_session.time + @ssl_session.timeout",
          "919:             s.session = @ssl_session if @ssl_session",
          "920:           end",
          "",
          "---------------"
        ],
        "test/net/http/test_https.rb||test/net/http/test_https.rb": [
          "File: test/net/http/test_https.rb -> test/net/http/test_https.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:     http.get(\"/\")",
          "74:     http.finish # three times due to possible bug in OpenSSL 0.9.8",
          "76:     http.start",
          "77:     http.get(\"/\")",
          "79:     socket = http.instance_variable_get(:@socket).io",
          "81:     assert socket.session_reused?",
          "82:   rescue SystemCallError",
          "83:     skip $!",
          "84:   end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76:     sid = http.instance_variable_get(:@ssl_session).id",
          "85:     assert_equal sid, http.instance_variable_get(:@ssl_session).id",
          "87:     http.finish",
          "88:   rescue SystemCallError",
          "89:     skip $!",
          "90:   end",
          "92:   def test_session_reuse_but_expire",
          "93:     http = Net::HTTP.new(\"localhost\", config(\"port\"))",
          "94:     http.use_ssl = true",
          "95:     http.verify_callback = Proc.new do |preverify_ok, store_ctx|",
          "96:       store_ctx.current_cert.to_der == config('ssl_certificate').to_der",
          "97:     end",
          "99:     http.ssl_timeout = -1",
          "100:     http.start",
          "101:     http.get(\"/\")",
          "102:     http.finish",
          "104:     sid = http.instance_variable_get(:@ssl_session).id",
          "106:     http.start",
          "107:     http.get(\"/\")",
          "109:     socket = http.instance_variable_get(:@socket).io",
          "110:     assert_equal false, socket.session_reused?",
          "112:     assert_not_equal sid, http.instance_variable_get(:@ssl_session).id",
          "114:     http.finish",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.5\"",
          "2: #define RUBY_RELEASE_DATE \"2015-02-18\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 2",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 296",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 297",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6602bc193b378f832e52f446df8804efafd5dfb8",
      "candidate_info": {
        "commit_hash": "6602bc193b378f832e52f446df8804efafd5dfb8",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/6602bc193b378f832e52f446df8804efafd5dfb8",
        "files": [
          "ChangeLog",
          "io.c",
          "test/ruby/test_argf.rb",
          "version.h"
        ],
        "message": "merge revision(s) 52745: [Backport #11738]\n\n\t* io.c (argf_getpartial): should not resize str if the second\n\t  argument is not given.\n\t  [ruby-core:71668] [Bug #11738]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@52800 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "io.c||io.c",
          "test/ruby/test_argf.rb||test/ruby/test_argf.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "io.c||io.c": [
          "File: io.c -> io.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "10967:     }",
          "10969:     if (!next_argv()) {",
          "10971:         rb_eof_error();",
          "10972:     }",
          "10973:     if (ARGF_GENERIC_INPUT_P()) {",
          "",
          "[Removed Lines]",
          "10970:         rb_str_resize(str, 0);",
          "",
          "[Added Lines]",
          "10970:  if (!NIL_P(str)) {",
          "10971:      rb_str_resize(str, 0);",
          "10972:  }",
          "",
          "---------------"
        ],
        "test/ruby/test_argf.rb||test/ruby/test_argf.rb": [
          "File: test/ruby/test_argf.rb -> test/ruby/test_argf.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "504:     end",
          "505:   end",
          "507:   def test_getc",
          "508:     ruby('-e', <<-SRC, @t1.path, @t2.path, @t3.path) do |f|",
          "509:       s = \"\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "507:   def test_readpartial_eof_twice",
          "508:     ruby('-W1', '-e', <<-SRC, @t1.path) do |f|",
          "509:       $stderr = $stdout",
          "510:       print ARGF.readpartial(256)",
          "511:       ARGF.readpartial(256) rescue p($!.class)",
          "512:       ARGF.readpartial(256) rescue p($!.class)",
          "513:     SRC",
          "514:       assert_equal(\"1\\n2\\nEOFError\\nEOFError\\n\", f.read)",
          "515:     end",
          "516:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.8\"",
          "2: #define RUBY_RELEASE_DATE \"2015-11-30\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "6: #define RUBY_RELEASE_MONTH 11",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 425",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 426",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dffe87c72014a4732282126acc87c898fddb0d81",
      "candidate_info": {
        "commit_hash": "dffe87c72014a4732282126acc87c898fddb0d81",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/dffe87c72014a4732282126acc87c898fddb0d81",
        "files": [
          "ChangeLog",
          "common.mk",
          "file.c",
          "test/ruby/test_require.rb",
          "version.h",
          "win32/file.c"
        ],
        "message": "merge revision(s) 50887,50896,50902: [Backport #11060]\n\n\t* file.c (rb_file_load_ok): try opening file without gvl not to\n\t  lock entire process.  [Bug #11060]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@51118 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "common.mk||common.mk",
          "file.c||file.c",
          "test/ruby/test_require.rb||test/ruby/test_require.rb",
          "version.h||version.h",
          "win32/file.c||win32/file.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "common.mk||common.mk": [
          "File: common.mk -> common.mk",
          "--- Hunk 1 ---",
          "[Context before]",
          "678:   {$(VPATH)}dln.h {$(VPATH)}internal.h $(PROBES_H_INCLUDES) {$(VPATH)}vm_opts.h",
          "679: file.$(OBJEXT): {$(VPATH)}file.c $(RUBY_H_INCLUDES) {$(VPATH)}io.h \\",
          "680:   $(ENCODING_H_INCLUDES) {$(VPATH)}util.h {$(VPATH)}dln.h \\",
          "682: gc.$(OBJEXT): {$(VPATH)}gc.c $(RUBY_H_INCLUDES) {$(VPATH)}re.h \\",
          "683:   {$(VPATH)}regex.h $(ENCODING_H_INCLUDES) $(VM_CORE_H_INCLUDES) \\",
          "684:   {$(VPATH)}gc.h {$(VPATH)}io.h {$(VPATH)}eval_intern.h {$(VPATH)}util.h \\",
          "",
          "[Removed Lines]",
          "681:   {$(VPATH)}internal.h",
          "",
          "[Added Lines]",
          "681:   {$(VPATH)}internal.h {$(VPATH)}thread.h",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "836: win32/win32.$(OBJEXT): {$(VPATH)}win32/win32.c {$(VPATH)}dln.h {$(VPATH)}dln_find.c \\",
          "837:   {$(VPATH)}internal.h $(RUBY_H_INCLUDES) $(PLATFORM_D)",
          "840: $(NEWLINE_C): $(srcdir)/enc/trans/newline.trans $(srcdir)/tool/transcode-tblgen.rb",
          "841:  $(Q) $(BASERUBY) \"$(srcdir)/tool/transcode-tblgen.rb\" -vo $@ $(srcdir)/enc/trans/newline.trans",
          "",
          "[Removed Lines]",
          "838: win32/file.$(OBJEXT): {$(VPATH)}win32/file.c $(RUBY_H_INCLUDES) $(PLATFORM_D)",
          "",
          "[Added Lines]",
          "838: win32/file.$(OBJEXT): {$(VPATH)}win32/file.c {$(VPATH)}thread.h \\",
          "839:   $(RUBY_H_INCLUDES) $(PLATFORM_D)",
          "",
          "---------------"
        ],
        "file.c||file.c": [
          "File: file.c -> file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: #include \"ruby/ruby.h\"",
          "27: #include \"ruby/io.h\"",
          "28: #include \"ruby/util.h\"",
          "29: #include \"dln.h\"",
          "30: #include \"internal.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: #include \"ruby/thread.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5384: }",
          "5386: #ifndef _WIN32",
          "5387: #ifdef __native_client__",
          "5388: __attribute__((noinline))",
          "5389: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5388: static void *",
          "5389: loadopen_func(void *arg)",
          "5390: {",
          "5391:     return (void *)(VALUE)rb_cloexec_open((const char *)arg, O_RDONLY, 0);",
          "5392: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5391: rb_file_load_ok(const char *path)",
          "5392: {",
          "5393:     int ret = 1;",
          "5395:     if (fd == -1) return 0;",
          "5396:     rb_update_max_fd(fd);",
          "5397: #if !defined DOSISH",
          "",
          "[Removed Lines]",
          "5394:     int fd = rb_cloexec_open(path, O_RDONLY, 0);",
          "",
          "[Added Lines]",
          "5401:     int fd;",
          "5403:     fd = (int)(VALUE)rb_thread_call_without_gvl(loadopen_func, (void *)path, RUBY_UBF_IO, 0);",
          "",
          "---------------"
        ],
        "test/ruby/test_require.rb||test/ruby/test_require.rb": [
          "File: test/ruby/test_require.rb -> test/ruby/test_require.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "687:       INPUT",
          "688:     }",
          "689:   end",
          "690: end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "691:   def test_loading_fifo_threading",
          "692:     Tempfile.create(%w'fifo .rb') {|f|",
          "693:       f.close",
          "694:       File.unlink(f.path)",
          "695:       File.mkfifo(f.path)",
          "696:       assert_separately([\"-\", f.path], <<-END, timeout: 3)",
          "697:       th = Thread.current",
          "698:       Thread.start {begin sleep(0.001) end until th.stop?; th.raise(IOError)}",
          "699:       assert_raise(IOError) {load(ARGV[0])}",
          "700:       END",
          "701:     }",
          "702:   end unless /mswin|mingw/ =~ RUBY_PLATFORM",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.7\"",
          "5: #define RUBY_RELEASE_YEAR 2015",
          "9: #include \"ruby/version.h\"",
          "",
          "[Removed Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-06-30\"",
          "3: #define RUBY_PATCHLEVEL 369",
          "6: #define RUBY_RELEASE_MONTH 6",
          "7: #define RUBY_RELEASE_DAY 30",
          "",
          "[Added Lines]",
          "2: #define RUBY_RELEASE_DATE \"2015-07-03\"",
          "3: #define RUBY_PATCHLEVEL 370",
          "6: #define RUBY_RELEASE_MONTH 7",
          "7: #define RUBY_RELEASE_DAY 3",
          "",
          "---------------"
        ],
        "win32/file.c||win32/file.c": [
          "File: win32/file.c -> win32/file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #include \"ruby/ruby.h\"",
          "2: #include \"ruby/encoding.h\"",
          "3: #include \"internal.h\"",
          "4: #include <winbase.h>",
          "5: #include <wchar.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: #include \"ruby/thread.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "670:     return result;",
          "671: }",
          "673: int",
          "674: rb_file_load_ok(const char *path)",
          "675: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "674: static void *",
          "675: loadopen_func(void *wpath)",
          "676: {",
          "677:     return (void *)CreateFileW(wpath, GENERIC_READ,",
          "678:           FILE_SHARE_READ | FILE_SHARE_WRITE,",
          "679:           NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL);",
          "680: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "686:  ret = 0;",
          "687:     }",
          "688:     else {",
          "692:  if (h != INVALID_HANDLE_VALUE) {",
          "693:      CloseHandle(h);",
          "694:  }",
          "",
          "[Removed Lines]",
          "689:  HANDLE h = CreateFileW(wpath, GENERIC_READ,",
          "690:           FILE_SHARE_READ | FILE_SHARE_WRITE,",
          "691:           NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL);",
          "",
          "[Added Lines]",
          "698:  HANDLE h = (HANDLE)rb_thread_call_without_gvl(loadopen_func, (void *)wpath,",
          "699:             RUBY_UBF_IO, 0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "734ac67206cf8ed0205ecb3c4f35410722228697",
      "candidate_info": {
        "commit_hash": "734ac67206cf8ed0205ecb3c4f35410722228697",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/734ac67206cf8ed0205ecb3c4f35410722228697",
        "files": [
          "ChangeLog",
          "cont.c",
          "version.h"
        ],
        "message": "merge revision(s) 53023: [Backport #11313]\n\n\t* cont.c: fix a double word typo.\n\t  [Bug #11313][ruby-core:69749]\n\n\ngit-svn-id: svn+ssh://ci.ruby-lang.org/ruby/branches/ruby_2_1@53922 b2dd03c8-39d4-4d8f-98ff-823fe69b080e",
        "before_after_code_files": [
          "cont.c||cont.c",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "cont.c||cont.c": [
          "File: cont.c -> cont.c"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #define RUBY_VERSION \"2.1.9\"",
          "2: #define RUBY_RELEASE_DATE \"2016-02-25\"",
          "5: #define RUBY_RELEASE_YEAR 2016",
          "6: #define RUBY_RELEASE_MONTH 2",
          "",
          "[Removed Lines]",
          "3: #define RUBY_PATCHLEVEL 443",
          "",
          "[Added Lines]",
          "3: #define RUBY_PATCHLEVEL 444",
          "",
          "---------------"
        ]
      }
    }
  ]
}