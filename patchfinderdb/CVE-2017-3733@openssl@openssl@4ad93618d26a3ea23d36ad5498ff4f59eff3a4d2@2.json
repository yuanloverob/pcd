{
  "cve_id": "CVE-2017-3733",
  "cve_desc": "During a renegotiation handshake if the Encrypt-Then-Mac extension is negotiated where it was not in the original handshake (or vice-versa) then this can cause OpenSSL 1.1.0 before 1.1.0e to crash (dependent on ciphersuite). Both clients and servers are affected.",
  "repo": "openssl/openssl",
  "patch_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
  "patch_info": {
    "commit_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "files": [
      "include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h",
      "ssl/t1_enc.c",
      "ssl/t1_lib.c"
    ],
    "message": "Don't change the state of the ETM flags until CCS processing\n\nChanging the ciphersuite during a renegotiation can result in a crash\nleading to a DoS attack. ETM has not been implemented in 1.1.0 for DTLS\nso this is TLS only.\n\nThe problem is caused by changing the flag indicating whether to use ETM\nor not immediately on negotiation of ETM, rather than at CCS. Therefore,\nduring a renegotiation, if the ETM state is changing (usually due to a\nchange of ciphersuite), then an error/crash will occur.\n\nDue to the fact that there are separate CCS messages for read and write\nwe actually now need two flags to determine whether to use ETM or not.\n\nCVE-2017-3733\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
    "before_after_code_files": [
      "include/openssl/ssl3.h||include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h||ssl/ssl_locl.h",
      "ssl/t1_enc.c||ssl/t1_enc.c",
      "ssl/t1_lib.c||ssl/t1_lib.c"
    ]
  },
  "patch_diff": {
    "include/openssl/ssl3.h||include/openssl/ssl3.h": [
      "File: include/openssl/ssl3.h -> include/openssl/ssl3.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "264: # define TLS1_FLAGS_SKIP_CERT_VERIFY             0x0010",
      "270: # define TLS1_FLAGS_RECEIVED_EXTMS               0x0200",
      "272: # define SSL3_MT_HELLO_REQUEST                   0",
      "273: # define SSL3_MT_CLIENT_HELLO                    1",
      "274: # define SSL3_MT_SERVER_HELLO                    2",
      "",
      "[Removed Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             0x0100",
      "",
      "[Added Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_READ        0x0100",
      "268: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             TLS1_FLAGS_ENCRYPT_THEN_MAC_READ",
      "273: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE       0x0400",
      "",
      "---------------"
    ],
    "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
      "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:     if (type == SSL3_RT_APPLICATION_DATA &&",
      "396:         u_len >= 4 * (max_send_fragment = s->max_send_fragment) &&",
      "397:         s->compress == NULL && s->msg_callback == NULL &&",
      "399:         EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(s->enc_write_ctx)) &",
      "400:         EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK) {",
      "401:         unsigned char aad[13];",
      "",
      "[Removed Lines]",
      "398:         !SSL_USE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "[Added Lines]",
      "398:         !SSL_WRITE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "795:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "796:                                          &(outbuf[j][wr[j].length + eivlen]),",
      "797:                                          1) < 0)",
      "",
      "[Removed Lines]",
      "794:         if (!SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "794:         if (!SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "814:         goto err;",
      "816:     for (j = 0; j < numpipes; j++) {",
      "818:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "819:                                          outbuf[j] + wr[j].length, 1) < 0)",
      "820:                 goto err;",
      "",
      "[Removed Lines]",
      "817:         if (SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "817:         if (SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------"
    ],
    "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c": [
      "File: ssl/record/ssl3_record.c -> ssl/record/ssl3_record.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "350:         unsigned char *mac;",
      "351:         mac_size = EVP_MD_CTX_size(s->read_hash);",
      "352:         OPENSSL_assert(mac_size <= EVP_MAX_MD_SIZE);",
      "",
      "[Removed Lines]",
      "349:     if (SSL_USE_ETM(s) && s->read_hash) {",
      "",
      "[Added Lines]",
      "349:     if (SSL_READ_ETM(s) && s->read_hash) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "394:     if ((sess != NULL) &&",
      "395:         (s->enc_read_ctx != NULL) &&",
      "398:         unsigned char *mac = NULL;",
      "399:         unsigned char mac_tmp[EVP_MAX_MD_SIZE];",
      "",
      "[Removed Lines]",
      "396:         (EVP_MD_CTX_md(s->read_hash) != NULL) && !SSL_USE_ETM(s)) {",
      "",
      "[Added Lines]",
      "396:         (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "823:         }",
      "825:         ret = 1;",
      "827:             mac_size = EVP_MD_CTX_size(s->read_hash);",
      "828:         if ((bs != 1) && !send) {",
      "829:             int tmpret;",
      "",
      "[Removed Lines]",
      "826:         if (!SSL_USE_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "[Added Lines]",
      "826:         if (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "997:     header[11] = (rec->length) >> 8;",
      "998:     header[12] = (rec->length) & 0xff;",
      "1001:         EVP_CIPHER_CTX_mode(ssl->enc_read_ctx) == EVP_CIPH_CBC_MODE &&",
      "1002:         ssl3_cbc_record_digest_supported(mac_ctx)) {",
      "",
      "[Removed Lines]",
      "1000:     if (!send && !SSL_USE_ETM(ssl) &&",
      "",
      "[Added Lines]",
      "1000:     if (!send && !SSL_READ_ETM(ssl) &&",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1022:             EVP_MD_CTX_free(hmac);",
      "1023:             return -1;",
      "1024:         }",
      "1026:             if (!tls_fips_digest_extra(ssl->enc_read_ctx,",
      "1027:                                        mac_ctx, rec->input,",
      "1028:                                        rec->length, rec->orig_len)) {",
      "",
      "[Removed Lines]",
      "1025:         if (!send && !SSL_USE_ETM(ssl) && FIPS_mode())",
      "",
      "[Added Lines]",
      "1025:         if (!send && !SSL_READ_ETM(ssl) && FIPS_mode())",
      "",
      "---------------"
    ],
    "ssl/ssl_locl.h||ssl/ssl_locl.h": [
      "File: ssl/ssl_locl.h -> ssl/ssl_locl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "378: # define SSL_CLIENT_USE_SIGALGS(s)        \\",
      "379:     SSL_CLIENT_USE_TLS1_2_CIPHERS(s)",
      "384: # define SSL_PKEY_RSA_ENC        0",
      "",
      "[Removed Lines]",
      "381: # define SSL_USE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC)",
      "",
      "[Added Lines]",
      "381: # define SSL_READ_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_READ)",
      "382: # define SSL_WRITE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1111:     unsigned char *alpn_client_proto_list;",
      "1112:     unsigned alpn_client_proto_list_len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1116:     int tlsext_use_etm;",
      "",
      "---------------"
    ],
    "ssl/t1_enc.c||ssl/t1_enc.c": [
      "File: ssl/t1_enc.c -> ssl/t1_enc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "130: #endif",
      "132:     if (which & SSL3_CC_READ) {",
      "133:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "134:             s->mac_flags |= SSL_MAC_FLAG_READ_MAC_STREAM;",
      "135:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "133:         if (s->tlsext_use_etm)",
      "134:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "135:         else",
      "136:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "168:         mac_secret = &(s->s3->read_mac_secret[0]);",
      "169:         mac_secret_size = &(s->s3->read_mac_secret_size);",
      "170:     } else {",
      "171:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "172:             s->mac_flags |= SSL_MAC_FLAG_WRITE_MAC_STREAM;",
      "173:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "176:         if (s->tlsext_use_etm)",
      "177:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "178:         else",
      "179:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "367:     if (s->s3->tmp.key_block_length != 0)",
      "368:         return (1);",
      "373:         SSLerr(SSL_F_TLS1_SETUP_KEY_BLOCK, SSL_R_CIPHER_OR_HASH_UNAVAILABLE);",
      "374:         return (0);",
      "375:     }",
      "",
      "[Removed Lines]",
      "370:     if (!ssl_cipher_get_evp",
      "371:         (s->session, &c, &hash, &mac_type, &mac_secret_size, &comp,",
      "372:          SSL_USE_ETM(s))) {",
      "",
      "[Added Lines]",
      "380:     if (!ssl_cipher_get_evp(s->session, &c, &hash, &mac_type, &mac_secret_size,",
      "381:                             &comp, s->tlsext_use_etm)) {",
      "",
      "---------------"
    ],
    "ssl/t1_lib.c||ssl/t1_lib.c": [
      "File: ssl/t1_lib.c -> ssl/t1_lib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674: #endif",
      "1675:     if (!custom_ext_add(s, 1, &ret, limit, al))",
      "1676:         return NULL;",
      "",
      "[Removed Lines]",
      "1677:     if (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC) {",
      "",
      "[Added Lines]",
      "1677:     if (s->tlsext_use_etm) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1683:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_RC4",
      "1684:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT",
      "1685:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT12)",
      "1687:         else {",
      "",
      "[Removed Lines]",
      "1686:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1686:             s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1917:     OPENSSL_free(s->s3->tmp.peer_sigalgs);",
      "1918:     s->s3->tmp.peer_sigalgs = NULL;",
      "1921: #ifndef OPENSSL_NO_SRP",
      "1922:     OPENSSL_free(s->srp_ctx.login);",
      "",
      "[Removed Lines]",
      "1919:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1919:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2264:         }",
      "2265: #endif",
      "2266:         else if (type == TLSEXT_TYPE_encrypt_then_mac)",
      "",
      "[Removed Lines]",
      "2267:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2267:             s->tlsext_use_etm = 1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2366:                              SSL_DTLSEXT_HB_DONT_SEND_REQUESTS);",
      "2367: #endif",
      "2371:     s->s3->flags &= ~TLS1_FLAGS_RECEIVED_EXTMS;",
      "",
      "[Removed Lines]",
      "2369:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2369:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2586:             if (s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD",
      "2587:                 && s->s3->tmp.new_cipher->algorithm_enc != SSL_RC4)",
      "2589:         } else if (type == TLSEXT_TYPE_extended_master_secret) {",
      "2590:             s->s3->flags |= TLS1_FLAGS_RECEIVED_EXTMS;",
      "2591:             if (!s->hit)",
      "",
      "[Removed Lines]",
      "2588:                 s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2588:                 s->tlsext_use_etm = 1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "03f3575c39cfc81552ee05a93b856d3b69048114",
      "candidate_info": {
        "commit_hash": "03f3575c39cfc81552ee05a93b856d3b69048114",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/03f3575c39cfc81552ee05a93b856d3b69048114",
        "files": [
          "crypto/rand/rand_egd.c"
        ],
        "message": "Fixed the return code for RAND_egd_bytes.\n\nAccording to the documentation, the return code should be -1 when\nRAND_status does not return 1.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1886)\n(cherry picked from commit 3ed93c863374125296954edcbc595599adbd07ea)",
        "before_after_code_files": [
          "crypto/rand/rand_egd.c||crypto/rand/rand_egd.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/rand/rand_egd.c||crypto/rand/rand_egd.c": [
          "File: crypto/rand/rand_egd.c -> crypto/rand/rand_egd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "229: int RAND_egd_bytes(const char *path, int bytes)",
          "230: {",
          "233:     num = RAND_query_egd_bytes(path, NULL, bytes);",
          "235:         ret = num;",
          "236:  err:",
          "237:     return (ret);",
          "",
          "[Removed Lines]",
          "231:     int num, ret = 0;",
          "234:     if (num < 1 || RAND_status() == 1)",
          "",
          "[Added Lines]",
          "231:     int num, ret = -1;",
          "234:     if (RAND_status() == 1)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a7aadf8b878501b512127200443041bba8361bbf",
      "candidate_info": {
        "commit_hash": "a7aadf8b878501b512127200443041bba8361bbf",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/a7aadf8b878501b512127200443041bba8361bbf",
        "files": [
          "doc/apps/CA.pl.pod",
          "doc/apps/ca.pod",
          "doc/apps/ciphers.pod",
          "doc/apps/cms.pod",
          "doc/apps/crl.pod",
          "doc/apps/crl2pkcs7.pod",
          "doc/apps/dsa.pod",
          "doc/apps/ec.pod",
          "doc/apps/errstr.pod",
          "doc/apps/nseq.pod",
          "doc/apps/ocsp.pod",
          "doc/apps/openssl.pod",
          "doc/apps/pkcs12.pod",
          "doc/apps/pkcs7.pod",
          "doc/apps/pkcs8.pod",
          "doc/apps/pkey.pod",
          "doc/apps/pkeyparam.pod",
          "doc/apps/pkeyutl.pod",
          "doc/apps/req.pod",
          "doc/apps/rsa.pod",
          "doc/apps/rsautl.pod",
          "doc/apps/sess_id.pod",
          "doc/apps/smime.pod",
          "doc/apps/spkac.pod",
          "doc/apps/verify.pod",
          "doc/crypto/ERR_GET_LIB.pod",
          "doc/crypto/EVP_EncryptInit.pod",
          "doc/crypto/SSL_set_bio.pod",
          "util/find-doc-nits.pl"
        ],
        "message": "Fix various doc nits.\n\nDon't use regexps for section names, just strings:  More consistency.\nRename \"COMMAND OPTIONS\" to OPTIONS.\nFix a couple of other nit-level things.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2076)\n(cherry picked from commit 3dfda1a6363c0cf4efee94754a36c2d86be190c3)",
        "before_after_code_files": [
          "util/find-doc-nits.pl||util/find-doc-nits.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "util/find-doc-nits.pl||util/find-doc-nits.pl": [
          "File: util/find-doc-nits.pl -> util/find-doc-nits.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: my %mandatory_sections =",
          "24:     ( '*'    => [ 'NAME', 'DESCRIPTION', 'COPYRIGHT' ],",
          "27:       5      => [ ],",
          "28:       7      => [ ] );",
          "29: my %default_sections =",
          "",
          "[Removed Lines]",
          "25:       1      => [ 'SYNOPSIS', '(COMMAND\\s+)?OPTIONS' ],",
          "26:       3      => [ 'SYNOPSIS', 'RETURN\\s+VALUES' ],",
          "",
          "[Added Lines]",
          "25:       1      => [ 'SYNOPSIS', 'OPTIONS' ],",
          "26:       3      => [ 'SYNOPSIS', 'RETURN VALUES' ],",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "162:     }",
          "164:     foreach ((@{$mandatory_sections{'*'}}, @{$mandatory_sections{$section}})) {",
          "166:             if $contents !~ /^=head1\\s+${_}\\s*$/m;",
          "167:     }",
          "",
          "[Removed Lines]",
          "165:         print \"$id doesn't have a head1 section matching $_\\n\"",
          "",
          "[Added Lines]",
          "165:         print \"$id: missing $_ head1 section\\n\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "654f7f6be617d2be316b3d60f593767105a9859a",
      "candidate_info": {
        "commit_hash": "654f7f6be617d2be316b3d60f593767105a9859a",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/654f7f6be617d2be316b3d60f593767105a9859a",
        "files": [
          "crypto/bio/b_addr.c"
        ],
        "message": "bio/b_addr.c: omit private hstrerror.\n\nPrivate hstrerror was introduced to address linking problem on HP-UX,\nbut truth be told conemporary systems, HP-UX included, wouldn't come\nto that call, they would use getaddrinfo and gai_strerror, while\ngethostbyname and h_errno are there to serve legacy systems. Since\nlegacy systems are naturally disappearing breed, we can as well just\nlet user interpret number.\n\nGH#2816\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(cherry picked from commit 3e49ee23eab5c3fa57d14dc5f82f50cbea718322)",
        "before_after_code_files": [
          "crypto/bio/b_addr.c||crypto/bio/b_addr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/bio/b_addr.c||crypto/bio/b_addr.c": [
          "File: crypto/bio/b_addr.c -> crypto/bio/b_addr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: #include <internal/thread_once.h>",
          "19: #include <ctype.h>",
          "45: CRYPTO_RWLOCK *bio_lookup_lock;",
          "46: static CRYPTO_ONCE bio_lookup_init = CRYPTO_ONCE_STATIC_INIT;",
          "",
          "[Removed Lines]",
          "21: #ifdef _HPUX_SOURCE",
          "22: static const char *ossl_hstrerror(int herr)",
          "23: {",
          "24:     switch (herr) {",
          "25:     case -1:",
          "26:         return strerror(errno);",
          "27:     case 0:",
          "28:         return \"No error\";",
          "29:     case HOST_NOT_FOUND:",
          "30:         return \"Host not found\";",
          "32:         return \"No data\";",
          "33:     case NO_RECOVERY:",
          "34:         return \"Non recoverable error\";",
          "35:     case TRY_AGAIN:",
          "36:         return \"Try again\";",
          "37:     default:",
          "38:         break;",
          "39:     }",
          "40:     return \"unknown error\";",
          "41: }",
          "42: # define hstrerror(e) ossl_hstrerror(e)",
          "43: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "688:         return 0;",
          "690:     if (1) {",
          "692: #ifdef AI_PASSIVE",
          "693:         struct addrinfo hints;",
          "694:         memset(&hints, 0, sizeof hints);",
          "696:         hints.ai_family = family;",
          "",
          "[Removed Lines]",
          "691:         int gai_ret = 0;",
          "",
          "[Added Lines]",
          "668:         int gai_ret = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "781:             if (he == NULL) {",
          "782: #ifndef OPENSSL_SYS_WINDOWS",
          "785: #else",
          "786:                 SYSerr(SYS_F_GETHOSTBYNAME, WSAGetLastError());",
          "787: #endif",
          "",
          "[Removed Lines]",
          "783:                 BIOerr(BIO_F_BIO_LOOKUP, ERR_R_SYS_LIB);",
          "784:                 ERR_add_error_data(1, hstrerror(h_errno));",
          "",
          "[Added Lines]",
          "771:                 SYSerr(SYS_F_GETHOSTBYNAME, 1000 + h_errno);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "831:                 if (se == NULL) {",
          "832: #ifndef OPENSSL_SYS_WINDOWS",
          "835: #else",
          "836:                     SYSerr(SYS_F_GETSERVBYNAME, WSAGetLastError());",
          "837: #endif",
          "",
          "[Removed Lines]",
          "833:                     BIOerr(BIO_F_BIO_LOOKUP, ERR_R_SYS_LIB);",
          "834:                     ERR_add_error_data(1, hstrerror(h_errno));",
          "",
          "[Added Lines]",
          "820:                     SYSerr(SYS_F_GETSERVBYNAME, errno);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dd512a93902379364276588deb30ba03bf7f3b2d",
      "candidate_info": {
        "commit_hash": "dd512a93902379364276588deb30ba03bf7f3b2d",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/dd512a93902379364276588deb30ba03bf7f3b2d",
        "files": [
          "Configurations/10-main.conf"
        ],
        "message": "Configurations/10-main.conf: document GCC for Solaris config constraint.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit fe9e5b9ccce175d296c904486a29218c879adb73)",
        "before_after_code_files": [
          "Configurations/10-main.conf||Configurations/10-main.conf"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Configurations/10-main.conf||Configurations/10-main.conf": [
          "File: Configurations/10-main.conf -> Configurations/10-main.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "187:     },",
          "188: #### Solaris x86 with GNU C setups",
          "189:     \"solaris-x86-gcc\" => {",
          "190:         # -DOPENSSL_NO_INLINE_ASM switches off inline assembler. We have",
          "191:         # to do it here because whenever GNU C instantiates an assembler",
          "192:         # template it surrounds it with #APP #NO_APP comment pair which",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "190:         # NB. GNU C has to be configured to use GNU assembler, and not",
          "191:         # /usr/ccs/bin/as. Failure to comply will result in compile",
          "192:         # failures [at least] in 32-bit build.",
          "193:         # [Above statement is in direct contradition with one below.",
          "194:         #  Latter is kept, because it's formally inappropriate to",
          "195:         #  modify compile flags in letter release.]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "37e4be4a8612958848c1cbe2e6c2f9d97aaa4cca",
      "candidate_info": {
        "commit_hash": "37e4be4a8612958848c1cbe2e6c2f9d97aaa4cca",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/37e4be4a8612958848c1cbe2e6c2f9d97aaa4cca",
        "files": [
          "e_os.h",
          "include/openssl/e_os2.h",
          "test/build.info",
          "test/ssltestlib.c"
        ],
        "message": "Move PRIu64 to e_os.h\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3061)",
        "before_after_code_files": [
          "e_os.h||e_os.h",
          "include/openssl/e_os2.h||include/openssl/e_os2.h",
          "test/build.info||test/build.info",
          "test/ssltestlib.c||test/ssltestlib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "e_os.h||e_os.h": [
          "File: e_os.h -> e_os.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: #  endif",
          "30: # endif",
          "32: # if !defined(NDEBUG) && !defined(OPENSSL_NO_STDIO)",
          "33: #  define REF_ASSERT_ISNT(test) \\",
          "34:     (void)((test) ? (OPENSSL_die(\"refcount error\", __FILE__, __LINE__), 1) : 0)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36: # if defined(OPENSSL_SYS_UEFI)",
          "37: #  define PRIu64 \"Lu\"",
          "38: # endif",
          "39: # ifndef PRIu64",
          "40: #  ifdef SIXTY_FOUR_BIT_LONG",
          "41: #   define PRIu64 \"lu\"",
          "42: #  else",
          "43: #   define PRIu64 \"llu\"",
          "44: #  endif",
          "45: # endif",
          "",
          "---------------"
        ],
        "include/openssl/e_os2.h||include/openssl/e_os2.h": [
          "File: include/openssl/e_os2.h -> include/openssl/e_os2.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "242: typedef UINT32 uint32_t;",
          "243: typedef INT64 int64_t;",
          "244: typedef UINT64 uint64_t;",
          "246: # elif (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || \\",
          "247:      defined(__osf__) || defined(__sgi) || defined(__hpux) || \\",
          "248:      defined(OPENSSL_SYS_VMS) || defined (__OpenBSD__)",
          "",
          "[Removed Lines]",
          "245: #  define PRIu64 \"%Lu\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "264: #  include <stdint.h>",
          "265: # endif",
          "280: # if !defined(inline) && !defined(__cplusplus)",
          "281: #  if defined(__STDC_VERSION__) && __STDC_VERSION__>=199901L",
          "",
          "[Removed Lines]",
          "271: # ifndef PRIu64",
          "272: #  ifdef SIXTY_FOUR_BIT_LONG",
          "273: #   define PRIu64 \"lu\"",
          "274: #  else",
          "275: #   define PRIu64 \"llu\"",
          "276: #  endif",
          "277: # endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/build.info||test/build.info": [
          "File: test/build.info -> test/build.info",
          "--- Hunk 1 ---",
          "[Context before]",
          "257:   INCLUDE[testutil.o]=..",
          "258:   INCLUDE[ssl_test_ctx.o]=../include",
          "259:   INCLUDE[handshake_helper.o]=../include",
          "262:   SOURCE[x509aux]=x509aux.c",
          "263:   INCLUDE[x509aux]=../include",
          "",
          "[Removed Lines]",
          "260:   INCLUDE[ssltestlib.o]=../include",
          "",
          "[Added Lines]",
          "260:   INCLUDE[ssltestlib.o]=.. ../include",
          "",
          "---------------"
        ],
        "test/ssltestlib.c||test/ssltestlib.c": [
          "File: test/ssltestlib.c -> test/ssltestlib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #include <string.h>",
          "12: #include \"ssltestlib.h\"",
          "14: static int tls_dump_new(BIO *bi);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12: #include \"e_os.h\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}