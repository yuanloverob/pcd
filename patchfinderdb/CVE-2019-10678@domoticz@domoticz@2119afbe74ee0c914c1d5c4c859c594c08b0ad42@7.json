{
  "cve_id": "CVE-2019-10678",
  "cve_desc": "Domoticz before 4.10579 neglects to categorize \\n and \\r as insecure argument options.",
  "repo": "domoticz/domoticz",
  "patch_hash": "2119afbe74ee0c914c1d5c4c859c594c08b0ad42",
  "patch_info": {
    "commit_hash": "2119afbe74ee0c914c1d5c4c859c594c08b0ad42",
    "repo": "domoticz/domoticz",
    "commit_url": "https://github.com/domoticz/domoticz/commit/2119afbe74ee0c914c1d5c4c859c594c08b0ad42",
    "files": [
      "main/Helper.cpp"
    ],
    "message": "Do not allow enters/returns in arguments (thanks to Fabio Carretto)",
    "before_after_code_files": [
      "main/Helper.cpp||main/Helper.cpp"
    ]
  },
  "patch_diff": {
    "main/Helper.cpp||main/Helper.cpp": [
      "File: main/Helper.cpp -> main/Helper.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "1014:  \"$\",",
      "1015:  \"<\",",
      "1016:  \">\",",
      "1017:  NULL",
      "1018: };",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1017:  \"\\n\",",
      "1018:  \"\\r\",",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8b4174ca19ea322b16bcbc75b2bcf4c1ffe7cb4b",
      "candidate_info": {
        "commit_hash": "8b4174ca19ea322b16bcbc75b2bcf4c1ffe7cb4b",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/8b4174ca19ea322b16bcbc75b2bcf4c1ffe7cb4b",
        "files": [
          "hardware/Tellstick.cpp"
        ],
        "message": "Fixed compile warnings",
        "before_after_code_files": [
          "hardware/Tellstick.cpp||hardware/Tellstick.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "hardware/Tellstick.cpp||hardware/Tellstick.cpp": [
          "File: hardware/Tellstick.cpp -> hardware/Tellstick.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:     switch (dataType)",
          "67:     {",
          "68:     case TELLSTICK_TEMPERATURE:",
          "70:         break;",
          "71:     case TELLSTICK_HUMIDITY:",
          "73:         break;",
          "74:     case TELLSTICK_RAINRATE:",
          "76:         break;",
          "77:     case TELLSTICK_RAINTOTAL:",
          "78:     case TELLSTICK_WINDDIRECTION:",
          "",
          "[Removed Lines]",
          "69:         SendTempSensor(deviceId, 255, atof(value), \"Temp\");",
          "72:         SendHumiditySensor(deviceId, 255, atof(value), \"Humid\");",
          "75:         SendRainSensor(deviceId, 255, atof(value), \"Rain\");",
          "",
          "[Added Lines]",
          "69:         SendTempSensor(deviceId, 255, static_cast<float>(atof(value)), \"Temp\");",
          "72:         SendHumiditySensor(deviceId, 255, atoi(value), \"Humidity\");",
          "75:         SendRainSensor(deviceId, 255, static_cast<float>(atof(value)), \"Rain\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "149:         pos = message.find(\";\", pos+1);",
          "150:     }",
          "151:     if (!deviceId.empty() && !winddirection.empty() && ! windaverage.empty() && ! windgust.empty()) {",
          "153:     }",
          "154: }",
          "",
          "[Removed Lines]",
          "152:         SendWind(atoi(deviceId.c_str()), 255, atoi(winddirection.c_str()), atof(windaverage.c_str()), atof(windgust.c_str()), 0, 0, false, \"Wind\");",
          "",
          "[Added Lines]",
          "152:         SendWind(atoi(deviceId.c_str()), 255, atoi(winddirection.c_str()), static_cast<float>(atof(windaverage.c_str())), static_cast<float>(atof(windgust.c_str())), 0, 0, false, \"Wind\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3b90ce8abaa7d044670f1beb584a0a03404b95b8",
      "candidate_info": {
        "commit_hash": "3b90ce8abaa7d044670f1beb584a0a03404b95b8",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/3b90ce8abaa7d044670f1beb584a0a03404b95b8",
        "files": [
          "main/EventSystem.cpp",
          "main/EventSystem.h"
        ],
        "message": "Setting _tActionParseResults repeat to 1 as default",
        "before_after_code_files": [
          "main/EventSystem.cpp||main/EventSystem.cpp",
          "main/EventSystem.h||main/EventSystem.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "main/EventSystem.cpp||main/EventSystem.cpp": [
          "File: main/EventSystem.cpp -> main/EventSystem.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "3898:  devicestatesMutexLock.unlock();",
          "3900:  _tActionParseResults oParseResults;",
          "3901:  ParseActionString(Action, oParseResults);",
          "3903:  if (oParseResults.sCommand.substr(0, 9) == \"Set Level\") {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3901:  oParseResults.bEventTrigger = true;",
          "",
          "---------------"
        ],
        "main/EventSystem.h||main/EventSystem.h": [
          "File: main/EventSystem.h -> main/EventSystem.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:   float fForSec = 0;",
          "46:   float fAfterSec = 0;",
          "47:   float fRandomSec = 0;",
          "49:   float fRepeatSec = 0;",
          "50:   bool bEventTrigger = false;",
          "51:  };",
          "",
          "[Removed Lines]",
          "48:   int iRepeat = 0;",
          "",
          "[Added Lines]",
          "48:   int iRepeat = 1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a8cb8b272900d70364616269cefb55cb41c1bad0",
      "candidate_info": {
        "commit_hash": "a8cb8b272900d70364616269cefb55cb41c1bad0",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/a8cb8b272900d70364616269cefb55cb41c1bad0",
        "files": [
          "main/WebServer.cpp",
          "www/app/SetupController.js"
        ],
        "message": "Always displaying a password field",
        "before_after_code_files": [
          "main/WebServer.cpp||main/WebServer.cpp",
          "www/app/SetupController.js||www/app/SetupController.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "main/WebServer.cpp||main/WebServer.cpp": [
          "File: main/WebServer.cpp -> main/WebServer.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "12742:     {",
          "12743:      root[\"WebUserName\"] = base64_decode(sValue);",
          "12744:     }",
          "12749:     else if (Key == \"SecPassword\")",
          "12750:     {",
          "12751:      root[\"SecPassword\"] = sValue;",
          "",
          "[Removed Lines]",
          "12745:     else if (Key == \"WebPassword\")",
          "12746:     {",
          "12747:      root[\"WebPassword\"] = \"\";// sValue;",
          "12748:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "www/app/SetupController.js||www/app/SetupController.js": [
          "File: www/app/SetupController.js -> www/app/SetupController.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "413:       $scope.OldAdminUser=data.WebUserName;",
          "414:       $(\"#webtable #WebUserName\").val(data.WebUserName);",
          "415:      }",
          "419:      if (typeof data.SecPassword != 'undefined') {",
          "420:       $(\"#sectable #SecPassword\").val(data.SecPassword);",
          "421:      }",
          "",
          "[Removed Lines]",
          "416:      if (typeof data.WebPassword != 'undefined') {",
          "417:       $(\"#webtable #WebPassword\").val(data.WebPassword);",
          "418:      }",
          "",
          "[Added Lines]",
          "416:      $(\"#webtable #WebPassword\").val(md5.createHash(\"bogus\"));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "684:    var adminuser = $(\"#webtable #WebUserName\").val();",
          "685:    var adminpwd = $(\"#webtable #WebPassword\").val();",
          "686:    if ((adminuser!=\"\")&&($scope.OldAdminUser!=adminuser)) {",
          "687:     if (adminpwd==\"\") {",
          "688:      ShowNotify($.t('Please enter a Admin password!'), 2000, true);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "684:    if (adminpwd == md5.createHash(\"bogus\")) {",
          "685:     $(\"#webtable #WebPassword\").val(\"\");",
          "686:     adminpwd = \"\";",
          "687:    }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ebcdbe89e74e23242d3e02585656a830a9318ca4",
      "candidate_info": {
        "commit_hash": "ebcdbe89e74e23242d3e02585656a830a9318ca4",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/ebcdbe89e74e23242d3e02585656a830a9318ca4",
        "files": [
          "www/views/setup.html"
        ],
        "message": "Fixed Kodi Notification setup display (hops)",
        "before_after_code_files": [
          "www/views/setup.html||www/views/setup.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "www/views/setup.html||www/views/setup.html": [
          "File: www/views/setup.html -> www/views/setup.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "599:            </td>",
          "600:            <td>",
          "601:             <input type=\"input\" id=\"KodiPort\" name=\"KodiPort\" style=\"width: 50px; padding: .2em;\" class=\"text ui-widget-content ui-corner-all\" />",
          "602:             <label for=\"KodiTimeToLive\"><span data-i18n=\"Hops\"></span>: </label>",
          "603:             <input type=\"input\" id=\"KodiTimeToLive\" name=\"KodiTimeToLive\" style=\"width: 50px; padding: .2em;\" class=\"text ui-widget-content ui-corner-all\" />",
          "604:            </td>",
          "605:           </tr>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "602:            </td>",
          "603:           </tr>",
          "604:           <tr>",
          "605:            <td align=\"right\" style=\"width:80px\">",
          "607:            </td>",
          "608:            <td>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fbd1529eac3f3ca84d84f72a57ad9552b3d2967b",
      "candidate_info": {
        "commit_hash": "fbd1529eac3f3ca84d84f72a57ad9552b3d2967b",
        "repo": "domoticz/domoticz",
        "commit_url": "https://github.com/domoticz/domoticz/commit/fbd1529eac3f3ca84d84f72a57ad9552b3d2967b",
        "files": [
          "hardware/RFXBase.cpp",
          "hardware/RFXBase.h",
          "main/WebServer.cpp",
          "main/mainworker.cpp",
          "www/app/HardwareController.js"
        ],
        "message": "RFXCom: implemented Noise Level for Pro firmware",
        "before_after_code_files": [
          "hardware/RFXBase.cpp||hardware/RFXBase.cpp",
          "hardware/RFXBase.h||hardware/RFXBase.h",
          "main/WebServer.cpp||main/WebServer.cpp",
          "main/mainworker.cpp||main/mainworker.cpp",
          "www/app/HardwareController.js||www/app/HardwareController.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/domoticz/domoticz/pull/3180"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "hardware/RFXBase.cpp||hardware/RFXBase.cpp": [
          "File: hardware/RFXBase.cpp -> hardware/RFXBase.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: CRFXBase::CRFXBase()",
          "9: {",
          "10: }",
          "12: CRFXBase::~CRFXBase()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10:  m_NoiseLevel = 0;",
          "",
          "---------------"
        ],
        "hardware/RFXBase.h||hardware/RFXBase.h": [
          "File: hardware/RFXBase.h -> hardware/RFXBase.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:  CRFXBase();",
          "15:     ~CRFXBase();",
          "16:  std::string m_Version;",
          "17:  bool SetRFXCOMHardwaremodes(const unsigned char Mode1, const unsigned char Mode2, const unsigned char Mode3, const unsigned char Mode4, const unsigned char Mode5, const unsigned char Mode6);",
          "18:  void SendResetCommand();",
          "19: private:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17:  uint8_t m_NoiseLevel;",
          "",
          "---------------"
        ],
        "main/WebServer.cpp||main/WebServer.cpp": [
          "File: main/WebServer.cpp -> main/WebServer.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "11358:         root[\"result\"][ii][\"version\"] = pMyHardware->m_Version;",
          "11359:        else",
          "11360:         root[\"result\"][ii][\"version\"] = sd[11];",
          "11361:       }",
          "11362:       else if ((pHardware->HwdType == HTYPE_MySensorsUSB) || (pHardware->HwdType == HTYPE_MySensorsTCP) || (pHardware->HwdType == HTYPE_MySensorsMQTT))",
          "11363:       {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11361:        root[\"result\"][ii][\"noiselvl\"] = pMyHardware->m_NoiseLevel;",
          "",
          "---------------"
        ],
        "main/mainworker.cpp||main/mainworker.cpp": [
          "File: main/mainworker.cpp -> main/mainworker.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "2578:     std::stringstream sstr;",
          "2579:     sstr << szTmp << \"/\" << FWVersion;",
          "2580:     pMyHardware->m_Version = sstr.str();",
          "2581:    }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2582:     if (FWType == FWtypePro1)",
          "2583:     {",
          "2584:      pMyHardware->m_NoiseLevel = pResponse->IRESPONSE.msg11;",
          "2585:     }",
          "",
          "---------------"
        ],
        "www/app/HardwareController.js||www/app/HardwareController.js": [
          "File: www/app/HardwareController.js -> www/app/HardwareController.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "5086:        }",
          "5087:        if (HwTypeStr.indexOf(\"RFXCOM\") >= 0) {",
          "5088:         HwTypeStr += '<br>Version: ' + item.version;",
          "5089:         if (HwTypeStr.indexOf(\"868\") >= 0) {",
          "5090:          HwTypeStr += ' <span class=\"label label-info lcursor\" onclick=\"EditRFXCOMMode868(' + item.idx + ',\\'' + item.Name + '\\',' + item.Mode1 + ',' + item.Mode2 + ',' + item.Mode3 + ',' + item.Mode4 + ',' + item.Mode5 + ',' + item.Mode6 + ');\">' + $.t(\"Set Mode\") + '</span>';",
          "5091:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5089:         if (item.noiselvl != 0) {",
          "5090:          HwTypeStr += ', Noise: ' + item.noiselvl + ' dB';",
          "5091:         }",
          "",
          "---------------"
        ]
      }
    }
  ]
}