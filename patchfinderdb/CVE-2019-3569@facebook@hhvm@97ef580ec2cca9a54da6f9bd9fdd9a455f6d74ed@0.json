{
  "cve_id": "CVE-2019-3569",
  "cve_desc": "HHVM, when used with FastCGI, would bind by default to all available interfaces. This behavior could allow a malicious individual unintended direct access to the application, which could result in information disclosure. This issue affects versions 4.3.0, 4.4.0, 4.5.0, 4.6.0, 4.7.0, 4.8.0, versions 3.30.5 and below, and all versions in the 4.0, 4.1, and 4.2 series.",
  "repo": "facebook/hhvm",
  "patch_hash": "97ef580ec2cca9a54da6f9bd9fdd9a455f6d74ed",
  "patch_info": {
    "commit_hash": "97ef580ec2cca9a54da6f9bd9fdd9a455f6d74ed",
    "repo": "facebook/hhvm",
    "commit_url": "https://github.com/facebook/hhvm/commit/97ef580ec2cca9a54da6f9bd9fdd9a455f6d74ed",
    "files": [
      "hphp/runtime/server/fastcgi/fastcgi-server.cpp",
      "hphp/test/server/debugger/tests/runTest1.php",
      "hphp/test/server/fastcgi/tests/authDigestTest.php",
      "hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php",
      "hphp/test/server/fastcgi/tests/global_variables_server.php",
      "hphp/test/server/fastcgi/tests/headerTest.php",
      "hphp/test/server/fastcgi/tests/httpsTest.php",
      "hphp/test/server/fastcgi/tests/invalid.php",
      "hphp/test/server/util/server_tests.inc"
    ],
    "message": "Fix default FastCGI interface\n\nReviewed By: alexeyt\n\nDifferential Revision: D15567393\n\nfbshipit-source-id: ffab228f689d4ddca9ea4835c70aecf16da2aa9f",
    "before_after_code_files": [
      "hphp/runtime/server/fastcgi/fastcgi-server.cpp||hphp/runtime/server/fastcgi/fastcgi-server.cpp",
      "hphp/test/server/debugger/tests/runTest1.php||hphp/test/server/debugger/tests/runTest1.php",
      "hphp/test/server/fastcgi/tests/authDigestTest.php||hphp/test/server/fastcgi/tests/authDigestTest.php",
      "hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php||hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php",
      "hphp/test/server/fastcgi/tests/global_variables_server.php||hphp/test/server/fastcgi/tests/global_variables_server.php",
      "hphp/test/server/fastcgi/tests/headerTest.php||hphp/test/server/fastcgi/tests/headerTest.php",
      "hphp/test/server/fastcgi/tests/httpsTest.php||hphp/test/server/fastcgi/tests/httpsTest.php",
      "hphp/test/server/fastcgi/tests/invalid.php||hphp/test/server/fastcgi/tests/invalid.php",
      "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc"
    ]
  },
  "patch_diff": {
    "hphp/runtime/server/fastcgi/fastcgi-server.cpp||hphp/runtime/server/fastcgi/fastcgi-server.cpp": [
      "File: hphp/runtime/server/fastcgi/fastcgi-server.cpp -> hphp/runtime/server/fastcgi/fastcgi-server.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "80:   if (useFileSocket) {",
      "81:     sock_addr.setFromPath(address);",
      "82:   } else if (address.empty()) {",
      "84:   } else {",
      "85:     sock_addr.setFromHostPort(address, port);",
      "86:   }",
      "",
      "[Removed Lines]",
      "83:     sock_addr.setFromLocalPort(port);",
      "",
      "[Added Lines]",
      "83:     sock_addr.setFromHostPort(\"localhost\", port);",
      "84:     assert(sock_addr.isLoopbackAddress());",
      "",
      "---------------"
    ],
    "hphp/test/server/debugger/tests/runTest1.php||hphp/test/server/debugger/tests/runTest1.php": [
      "File: hphp/test/server/debugger/tests/runTest1.php -> hphp/test/server/debugger/tests/runTest1.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "5: function test1Controller($hphpdOutput, $hphpdProcessId, $serverPort) {",
      "7:   waitForClientToOutput($hphpdOutput, \"Waiting for server response\");",
      "9:   echo \"Requesting test1.php\\n\";",
      "13:   waitForClientToOutput($hphpdOutput, \"quit\");",
      "",
      "[Removed Lines]",
      "8:   $url = \"http://\".php_uname('n').':'.$serverPort.'/test1.php';",
      "10:   request(php_uname('n'), $serverPort, 'test1.php', 10); // ignore response",
      "",
      "[Added Lines]",
      "9:   request('localhost', $serverPort, 'test1.php', 10); // ignore response",
      "",
      "---------------"
    ],
    "hphp/test/server/fastcgi/tests/authDigestTest.php||hphp/test/server/fastcgi/tests/authDigestTest.php": [
      "File: hphp/test/server/fastcgi/tests/authDigestTest.php -> hphp/test/server/fastcgi/tests/authDigestTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "8:     'uri=\"/test_auth_digest.php\", cnonce=\"MjIyMTg2\", nc=00000001, ' .",
      "9:     'qop=\"auth\", response=\"6dfbea52fbf13016476c1879e6436004\", ' .",
      "10:     'opaque=\"cdce8a5c95a1427d74df7acbf41c9ce0\"');",
      "12:                   [], [], $args));",
      "13: }",
      "",
      "[Removed Lines]",
      "11:   var_dump(request(php_uname('n'), $serverPort, \"test_auth_digest.php\",",
      "",
      "[Added Lines]",
      "11:   var_dump(request('localhost', $serverPort, \"test_auth_digest.php\",",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "18:     'uri=\"/test_auth_digest.php\", cnonce=\"MjIyMTg1\", nc=00000001, ' .",
      "19:     'qop=\"auth\", response=\"e544aaed06917adea3e5c74dd49f0e32\", ' .",
      "20:     'opaque=\"cdce8a5c95a1427d74df7acbf41c9ce0\"');",
      "22:                   [], [], $args));",
      "23: }",
      "",
      "[Removed Lines]",
      "21:   var_dump(request(php_uname('n'), $serverPort, \"test_auth_digest.php\",",
      "",
      "[Added Lines]",
      "21:   var_dump(request('localhost', $serverPort, \"test_auth_digest.php\",",
      "",
      "---------------"
    ],
    "hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php||hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php": [
      "File: hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php -> hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "6: require_once('test_base.inc');",
      "8: function disableIniZendCompatController($port) {",
      "10: }",
      "12: echo \"---Enable Ini Zend Compat ON---\\n\";",
      "",
      "[Removed Lines]",
      "9:   echo request(php_uname('n'), $port, 'test_disable_ini_zend_compat.php');",
      "",
      "[Added Lines]",
      "9:   echo request('localhost', $port, 'test_disable_ini_zend_compat.php');",
      "",
      "---------------"
    ],
    "hphp/test/server/fastcgi/tests/global_variables_server.php||hphp/test/server/fastcgi/tests/global_variables_server.php": [
      "File: hphp/test/server/fastcgi/tests/global_variables_server.php -> hphp/test/server/fastcgi/tests/global_variables_server.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "23:     $path = 'global_variables.php?var=GET&get=1';",
      "24:     $post = array('var' => 'POST', 'post' => 2);",
      "25:     $headers = array('Cookie' => 'var=COOKIE;cookie=3;');",
      "27:   }, $request[0]);",
      "28: }",
      "",
      "[Removed Lines]",
      "26:     echo request(php_uname('n'), $port, $path, $post, $headers, $extra) . \"\\n\";",
      "",
      "[Added Lines]",
      "26:     echo request('localhost', $port, $path, $post, $headers, $extra) . \"\\n\";",
      "",
      "---------------"
    ],
    "hphp/test/server/fastcgi/tests/headerTest.php||hphp/test/server/fastcgi/tests/headerTest.php": [
      "File: hphp/test/server/fastcgi/tests/headerTest.php -> hphp/test/server/fastcgi/tests/headerTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "5: function headerTestController($serverPort) {",
      "6:   $args = array('Authorization' => 'foo');",
      "8:                   [], ['PROXY' => 'foobar'], $args));",
      "9: }",
      "",
      "[Removed Lines]",
      "7:   var_dump(request(php_uname('n'), $serverPort, \"test_headers.php\",",
      "",
      "[Added Lines]",
      "7:   var_dump(request('localhost', $serverPort, \"test_headers.php\",",
      "",
      "---------------"
    ],
    "hphp/test/server/fastcgi/tests/httpsTest.php||hphp/test/server/fastcgi/tests/httpsTest.php": [
      "File: hphp/test/server/fastcgi/tests/httpsTest.php -> hphp/test/server/fastcgi/tests/httpsTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "5: function httpsTestController($serverPort) {",
      "6:   $args = array('HTTPS' => '');",
      "8:                   [], [], $args));",
      "9: }",
      "",
      "[Removed Lines]",
      "7:   var_dump(request(php_uname('n'), $serverPort, \"test_https.php\",",
      "",
      "[Added Lines]",
      "7:   var_dump(request('localhost', $serverPort, \"test_https.php\",",
      "",
      "---------------"
    ],
    "hphp/test/server/fastcgi/tests/invalid.php||hphp/test/server/fastcgi/tests/invalid.php": [
      "File: hphp/test/server/fastcgi/tests/invalid.php -> hphp/test/server/fastcgi/tests/invalid.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "3: require_once('test_base.inc');",
      "5: function invalidTestController($port) {",
      "8:   $filename = __DIR__.'/request-doesnotexist.dat';",
      "9:   $file = fopen($filename, 'rb');",
      "",
      "[Removed Lines]",
      "6:   $host = php_uname('n');",
      "",
      "[Added Lines]",
      "6:   $host = 'localhost';",
      "",
      "---------------"
    ],
    "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc": [
      "File: hphp/test/server/util/server_tests.inc -> hphp/test/server/util/server_tests.inc",
      "--- Hunk 1 ---",
      "[Context before]",
      "181: function checkServerId($serverPort, $expectedIds) {",
      "183:   $r = request($host, $serverPort, \"hello.php\");",
      "184:   if (preg_match('/Hello, World!(.*+)/', $r ?? '', &$matches)) {",
      "185:     foreach ((array)$expectedIds as $id) {",
      "",
      "[Removed Lines]",
      "182:   $host = php_uname('n');",
      "",
      "[Added Lines]",
      "182:   $host = 'localhost';",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "218:   $r = \"\";",
      "219:   for ($i = 1; $i <= 10; $i++) {",
      "221:     if ($r === \"OK\") break;",
      "222:     usleep(100000);",
      "223:   }",
      "",
      "[Removed Lines]",
      "220:     $r = request(php_uname('n'), $adminPort, 'stop?instance-id='.$test_run_id);",
      "",
      "[Added Lines]",
      "220:     $r = request('localhost', $adminPort, 'stop?instance-id='.$test_run_id);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "286:     $headers = implode(\" \", $s);",
      "287:   }",
      "288:   $url = \"http://$host:$port/$path\";",
      "291:   $LOG_ROOT = ServerUtilServerTests::$LOG_ROOT;",
      "292:   $test_run_id = ServerUtilServerTests::$test_run_id;",
      "",
      "[Removed Lines]",
      "289:   $host_name = \"hphpd.debugger.\".php_uname('n');",
      "",
      "[Added Lines]",
      "289:   $host_name = \"hphpd.debugger.\".\\php_uname('n');",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "304:       foreach ($requests as $request) {",
      "305:         $r = is_array($request) ? $request[0] : $request;",
      "306:         echo \"Requesting '$r'\\n\";",
      "308:       }",
      "309:     },",
      "310:     $customArgs,",
      "",
      "[Removed Lines]",
      "307:         var_dump(request(php_uname('n'), $serverPort, $request));",
      "",
      "[Added Lines]",
      "307:         var_dump(request('localhost', $serverPort, $request));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d4d55789ac16e7b2d323a5cd13415efa6e71a046",
      "candidate_info": {
        "commit_hash": "d4d55789ac16e7b2d323a5cd13415efa6e71a046",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/d4d55789ac16e7b2d323a5cd13415efa6e71a046",
        "files": [
          "hphp/test/server/debugger/tests/test_base.inc",
          "hphp/test/server/fastcgi/tests/test_base.inc",
          "hphp/test/server/http/tests/takeoverTest.php",
          "hphp/test/server/util/server_tests.inc"
        ],
        "message": "global statement removal: hphp/test/server [4/x]\n\nReviewed By: jano\n\nDifferential Revision: D14407848\n\nfbshipit-source-id: 4fb0de206dc77c44c33b234ce139bc35c6b5c127",
        "before_after_code_files": [
          "hphp/test/server/debugger/tests/test_base.inc||hphp/test/server/debugger/tests/test_base.inc",
          "hphp/test/server/fastcgi/tests/test_base.inc||hphp/test/server/fastcgi/tests/test_base.inc",
          "hphp/test/server/http/tests/takeoverTest.php||hphp/test/server/http/tests/takeoverTest.php",
          "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc"
          ],
          "candidate": [
            "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc"
          ]
        }
      },
      "candidate_diff": {
        "hphp/test/server/debugger/tests/test_base.inc||hphp/test/server/debugger/tests/test_base.inc": [
          "File: hphp/test/server/debugger/tests/test_base.inc -> hphp/test/server/debugger/tests/test_base.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?hh",
          "4: require __DIR__ . '/../../util/server_tests.inc';",
          "6: function startDebuggerClient($debugPort, $input_path, &$pipes) {",
          "9:   $home = hphp_home().'/hphp/test/server/debugger';",
          "10:   $hhvm = PHP_BINARY;",
          "",
          "[Removed Lines]",
          "3: $LOG_ROOT = '/tmp/hphpd';",
          "7:   global $test_run_id, $LOG_ROOT;",
          "",
          "[Added Lines]",
          "4: ServerUtilServerTests::$LOG_ROOT = '/tmp/hphpd';",
          "8:   $LOG_ROOT = ServerUtilServerTests::$LOG_ROOT;",
          "9:   $test_run_id = ServerUtilServerTests::$test_run_id;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "81: }",
          "83: function waitForClientToOutput($pipe, $string1, $retryCount = 20) {",
          "86:   tlog(\"reading client output\");",
          "87:   $rc = $retryCount;",
          "",
          "[Removed Lines]",
          "84:   global $test_run_id;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "hphp/test/server/fastcgi/tests/test_base.inc||hphp/test/server/fastcgi/tests/test_base.inc": [
          "File: hphp/test/server/fastcgi/tests/test_base.inc -> hphp/test/server/fastcgi/tests/test_base.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?hh",
          "4: require __DIR__ . '/../../util/server_tests.inc';",
          "5: require __DIR__ . '/../Adoy/Client.php';",
          "9: function runTest($testController, $customArgs = '') {",
          "11:   $pid = posix_getpid();",
          "12:   try {",
          "13:     $serverProc = $serverPort = $adminPort = null;",
          "14:     $debugPort = false;",
          "15:     $serverProc = startServer(&$serverPort, &$adminPort, &$debugPort,",
          "17:     $testController($serverPort);",
          "18:     stopServer($adminPort, $serverProc);",
          "19:   } catch (Exception $e) {",
          "",
          "[Removed Lines]",
          "3: $LOG_ROOT = '/tmp/hhvm_server';",
          "7: $DOC_ROOT = dirname(__DIR__).'/server_root';",
          "10:   global $DOC_ROOT;",
          "16:                               dirname(__DIR__), $DOC_ROOT, $customArgs);",
          "",
          "[Added Lines]",
          "4: ServerUtilServerTests::$LOG_ROOT = '/tmp/hhvm_server';",
          "7: ServerUtilServerTests::$DOC_ROOT = dirname(__DIR__).'/server_root';",
          "16:                               dirname(__DIR__), ServerUtilServerTests::$DOC_ROOT, $customArgs);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "25: }",
          "27: function request($host, $port, $path, $post = [], $headers = [], $extra_args = []) {",
          "30:   try {",
          "31:     $client = new \\Adoy\\FastCGI\\Client($host, $port);",
          "",
          "[Removed Lines]",
          "28:   global $test_run_id, $LOG_ROOT, $DOC_ROOT;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "46:       $args['QUERY_STRING'] = substr($path, $pos + 1);",
          "47:       $path = substr($path, 0, $pos);",
          "48:     }",
          "50:     $pos = strpos($path, '//');",
          "51:     if ($pos) {",
          "52:       $doc_root .= '/' . substr($path, 0, $pos);",
          "",
          "[Removed Lines]",
          "49:     $doc_root = $DOC_ROOT;",
          "",
          "[Added Lines]",
          "49:     $doc_root = ServerUtilServerTests::$DOC_ROOT;",
          "",
          "---------------"
        ],
        "hphp/test/server/http/tests/takeoverTest.php||hphp/test/server/http/tests/takeoverTest.php": [
          "File: hphp/test/server/http/tests/takeoverTest.php -> hphp/test/server/http/tests/takeoverTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?hh",
          "4: require __DIR__ . '/../../util/server_tests.inc';",
          "6: function runTakeoverTest() {",
          "8:   $pid = posix_getpid();",
          "10:   $serverProc = $serverPort = $adminPort = null;",
          "11:   $debugPort = false;",
          "12:   $serverHome = __DIR__.'/..';",
          "",
          "[Removed Lines]",
          "3: $LOG_ROOT = '/tmp/hhvm_server';",
          "7:   global $test_run_id;",
          "9:   $takeoverFile = '/tmp/takeover.'.$test_run_id;",
          "",
          "[Added Lines]",
          "4: ServerUtilServerTests::$LOG_ROOT = '/tmp/hhvm_server';",
          "9:   $takeoverFile = '/tmp/takeover.'.ServerUtilServerTests::$test_run_id;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "21:       echo('failed to start first server');",
          "22:       return;",
          "23:     }",
          "25:     $customArgs = '';",
          "26:     $newServerProc = takeoverOldServer($serverPort, $adminPort,",
          "27:                                        $serverHome, $serverRoot,",
          "",
          "[Removed Lines]",
          "24:     $takeoverid = 'new'.$test_run_id;",
          "",
          "[Added Lines]",
          "24:     $takeoverid = 'new'.ServerUtilServerTests::$test_run_id;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "38:     for ($i = 1; ; $i++) {",
          "39:       if (!checkServerId($serverPort, $testids)) {",
          "40:         return;",
          "",
          "[Removed Lines]",
          "37:     $testids = array($test_run_id, $takeoverid);",
          "",
          "[Added Lines]",
          "37:     $testids = array(ServerUtilServerTests::$test_run_id, $takeoverid);",
          "",
          "---------------"
        ],
        "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc": [
          "File: hphp/test/server/util/server_tests.inc -> hphp/test/server/util/server_tests.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <?hh",
          "7: function tlog($str) {",
          "14: }",
          "16: function dumpLogFilesToStdoutAndDie() {",
          "21:   sleep(1);",
          "22:   error_log('-------------------------------------------');",
          "",
          "[Removed Lines]",
          "3: $test_run_id = posix_getpid();",
          "4: $next_instance_id = 0;",
          "5: $error_log_file = fopen(\"${LOG_ROOT}_test$test_run_id.log\", 'w');",
          "8:   global $error_log_file;",
          "10:   fwrite($error_log_file, $str);",
          "11:   fwrite($error_log_file, \"\\n\");",
          "12:   fflush($error_log_file);",
          "17:   global $error_log_file;",
          "18:   global $test_run_id;",
          "19:   global $LOG_ROOT;",
          "",
          "[Added Lines]",
          "4: abstract final class ServerUtilServerTests {",
          "5:   public static $error_log_file;",
          "6:   public static $test_run_id = 0;",
          "7:   public static $LOG_ROOT;",
          "8:   public static $DOC_ROOT;",
          "9:   public static $next_instance_id = 0;",
          "10:   public static $repo_builds = dict[];",
          "11: }",
          "13: ServerUtilServerTests::$test_run_id = posix_getpid();",
          "14: ServerUtilServerTests::$error_log_file = fopen(ServerUtilServerTests::$LOG_ROOT.'_test'.ServerUtilServerTests::$test_run_id.\".log\", 'w');",
          "19:   fwrite(ServerUtilServerTests::$error_log_file, $str);",
          "20:   fwrite(ServerUtilServerTests::$error_log_file, \"\\n\");",
          "21:   fflush(ServerUtilServerTests::$error_log_file);",
          "26:   $LOG_ROOT = ServerUtilServerTests::$LOG_ROOT;",
          "27:   $test_run_id = ServerUtilServerTests::$test_run_id;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "56:   return realpath(__DIR__.'/../../../..');",
          "57: }",
          "67: function get_random_port($exclude1, $exclude2) {",
          "68:   $BasePort = 20000;",
          "69:   $PortRange = 3000;",
          "",
          "[Removed Lines]",
          "59: function bin_root() {",
          "60:   $dir = hphp_home() . '/' . '_bin';",
          "61:   return is_dir($dir) ?",
          "62:     $dir :      # fbmake",
          "63:     hphp_home() # github",
          "64:   ;",
          "65: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "76: # Return the command line to start the server with the specified options",
          "77: function getServerCmd($serverPort, $adminPort, $debugPort, $home, $root,",
          "78:                       $customArgs = '', $serverId = null, $repoArgs = '') {",
          "82:   $portConfig = ' -vServer.Port='.$serverPort;",
          "83:   $serverConfig = ' --config='.$home.'/config/server.ini';",
          "",
          "[Removed Lines]",
          "79:   global $test_run_id, $LOG_ROOT, $next_instance_id, $repo_builds;",
          "80:   $instance_id = $next_instance_id++;",
          "",
          "[Added Lines]",
          "79:   $LOG_ROOT = ServerUtilServerTests::$LOG_ROOT;",
          "80:   $test_run_id = ServerUtilServerTests::$test_run_id;",
          "82:   $instance_id = ServerUtilServerTests::$next_instance_id;",
          "83:   ++ServerUtilServerTests::$next_instance_id;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "97:   $sandboxHomeConfig = ' -vSandbox.Home='.$home;",
          "100:   $hhvm = PHP_BINARY;",
          "102:   if (ini_get('hhvm.repo.authoritative')) {",
          "106:          function() {",
          "109:              @unlink($dir . \"/hhvm.hhbc\");",
          "110:              @rmdir($dir);",
          "111:            }",
          "",
          "[Removed Lines]",
          "98:   if ($serverId === null) $serverId = $test_run_id;",
          "103:     if (!isset($repo_builds)) {",
          "104:        $repo_builds=dict[];",
          "105:        register_shutdown_function(",
          "107:            global $repo_builds;",
          "108:            foreach ($repo_builds as $dir) {",
          "",
          "[Added Lines]",
          "101:   $serverId ??= $test_run_id;",
          "106:     if (count(ServerUtilServerTests::$repo_builds) === 0) {",
          "107:       register_shutdown_function(",
          "109:            foreach (ServerUtilServerTests::$repo_builds as $dir) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "113:        );",
          "114:     }",
          "115:     $repoKey = 'x'.$root.':'.$repoArgs;",
          "118:         \"${LOG_ROOT}_bytecode{$test_run_id}_{$instance_id}\";",
          "120:         \" --input-dir $root $repoArgs\";",
          "122:       tlog('Building repo with command: '.$cmd);",
          "123:       tlog(exec($cmd));",
          "124:     }",
          "125:     $repoConfig .=",
          "127:       \" -vRepo.Authoritative=true\";",
          "128:   }",
          "",
          "[Removed Lines]",
          "116:     if (!isset($repo_builds[$repoKey])) {",
          "117:       $repo_builds[$repoKey] =",
          "119:       $cmd = \"$hhvm --hphp -k1 -l2 -t hhbc -o \" . $repo_builds[$repoKey] .",
          "126:       \" -vRepo.Local.Path=\".$repo_builds[$repoKey].\"/hhvm.hhbc\".",
          "",
          "[Added Lines]",
          "117:     if (!isset(ServerUtilServerTests::$repo_builds[$repoKey])) {",
          "118:       ServerUtilServerTests::$repo_builds[$repoKey] =",
          "120:       $cmd = \"$hhvm --hphp -k1 -l2 -t hhbc -o \" . ServerUtilServerTests::$repo_builds[$repoKey] .",
          "127:       \" -vRepo.Local.Path=\".ServerUtilServerTests::$repo_builds[$repoKey].\"/hhvm.hhbc\".",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "145: function startServer(&$serverPort, &$adminPort, &$debugPort, $home, $root,",
          "146:                      $customArgs = '', $serverId = null, $repoArgs = '') {",
          "149:   $chooseServer = $serverPort === null;",
          "150:   $chooseAdmin = $adminPort === null;",
          "",
          "[Removed Lines]",
          "147:   global $test_run_id, $LOG_ROOT;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "189: }",
          "191: function waitForServerToGetGoing($serverPort, $serverProc, $serverId = null) {",
          "194:   for ($i = 1; $i <= 20; $i++) {",
          "195:     $status = proc_get_status($serverProc);",
          "196:     if ($status === false || !$status['running']) {",
          "",
          "[Removed Lines]",
          "192:   global $test_run_id;",
          "193:   if ($serverId === null) $serverId = $test_run_id;",
          "",
          "[Added Lines]",
          "194:   $serverId ??= ServerUtilServerTests::$test_run_id;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "207: }",
          "209: function stopServer($adminPort, $serverProc) {",
          "212:   $r = \"\";",
          "213:   for ($i = 1; $i <= 10; $i++) {",
          "217:     usleep(100000);",
          "218:   }",
          "219:   if ($r != \"OK\") {",
          "",
          "[Removed Lines]",
          "210:   global $test_run_id, $LOG_ROOT, $next_instance_id;",
          "214:     $r = request(php_uname('n'), $adminPort,",
          "215:                  'stop?instance-id=' . $test_run_id);",
          "216:     if ($r == \"OK\") break;",
          "",
          "[Added Lines]",
          "211:   $LOG_ROOT = ServerUtilServerTests::$LOG_ROOT;",
          "212:   $test_run_id = ServerUtilServerTests::$test_run_id;",
          "217:     $r = request(php_uname('n'), $adminPort, 'stop?instance-id='.$test_run_id);",
          "218:     if ($r === \"OK\") break;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "231:   @unlink(\"${LOG_ROOT}_curl$test_run_id.log\");",
          "232:   @unlink(\"${LOG_ROOT}_access_log$test_run_id.log\");",
          "234:   for ($instance_id = 0; $instance_id < $next_instance_id; $instance_id++) {",
          "235:     @unlink(\"${LOG_ROOT}_server{$test_run_id}_{$instance_id}.hhbc\");",
          "236:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "236:   $next_instance_id = ServerUtilServerTests::$next_instance_id;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "259: }",
          "261: function http_request($host, $port, $path, $timeout = 1200, $curl_opts = '') {",
          "264:   @list($path, $post, $headers) = (array)$path;",
          "265:   if ($post) {",
          "266:     $post = http_build_query($post);",
          "",
          "[Removed Lines]",
          "262:   global $test_run_id, $LOG_ROOT;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "274:   }",
          "275:   $url = \"http://$host:$port/$path\";",
          "276:   $host_name = \"hphpd.debugger.\".php_uname('n');",
          "277:   $cmd = \"curl $post --trace-ascii ${LOG_ROOT}_curl$test_run_id.log \".",
          "278:     \"--silent $curl_opts --connect-timeout $timeout \".",
          "279:     \"-H 'Host: $host_name' $headers --url \\\"$url\\\"\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "281:   $LOG_ROOT = ServerUtilServerTests::$LOG_ROOT;",
          "282:   $test_run_id = ServerUtilServerTests::$test_run_id;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0aafeb437984ca94f941b408c1a63385b3814f8a",
      "candidate_info": {
        "commit_hash": "0aafeb437984ca94f941b408c1a63385b3814f8a",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/0aafeb437984ca94f941b408c1a63385b3814f8a",
        "files": [
          "hphp/runtime/server/fastcgi/fastcgi-server.cpp",
          "hphp/test/server/debugger/tests/runTest1.php",
          "hphp/test/server/fastcgi/tests/authDigestTest.php",
          "hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php",
          "hphp/test/server/fastcgi/tests/global_variables_server.php",
          "hphp/test/server/fastcgi/tests/headerTest.php",
          "hphp/test/server/fastcgi/tests/httpsTest.php",
          "hphp/test/server/fastcgi/tests/invalid.php",
          "hphp/test/server/util/server_tests.inc"
        ],
        "message": "Fix default FastCGI interface\n\nReviewed By: alexeyt\n\nDifferential Revision: D15567393",
        "before_after_code_files": [
          "hphp/runtime/server/fastcgi/fastcgi-server.cpp||hphp/runtime/server/fastcgi/fastcgi-server.cpp",
          "hphp/test/server/debugger/tests/runTest1.php||hphp/test/server/debugger/tests/runTest1.php",
          "hphp/test/server/fastcgi/tests/authDigestTest.php||hphp/test/server/fastcgi/tests/authDigestTest.php",
          "hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php||hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php",
          "hphp/test/server/fastcgi/tests/global_variables_server.php||hphp/test/server/fastcgi/tests/global_variables_server.php",
          "hphp/test/server/fastcgi/tests/headerTest.php||hphp/test/server/fastcgi/tests/headerTest.php",
          "hphp/test/server/fastcgi/tests/httpsTest.php||hphp/test/server/fastcgi/tests/httpsTest.php",
          "hphp/test/server/fastcgi/tests/invalid.php||hphp/test/server/fastcgi/tests/invalid.php",
          "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "hphp/runtime/server/fastcgi/fastcgi-server.cpp||hphp/runtime/server/fastcgi/fastcgi-server.cpp",
            "hphp/test/server/debugger/tests/runTest1.php||hphp/test/server/debugger/tests/runTest1.php",
            "hphp/test/server/fastcgi/tests/authDigestTest.php||hphp/test/server/fastcgi/tests/authDigestTest.php",
            "hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php||hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php",
            "hphp/test/server/fastcgi/tests/global_variables_server.php||hphp/test/server/fastcgi/tests/global_variables_server.php",
            "hphp/test/server/fastcgi/tests/headerTest.php||hphp/test/server/fastcgi/tests/headerTest.php",
            "hphp/test/server/fastcgi/tests/httpsTest.php||hphp/test/server/fastcgi/tests/httpsTest.php",
            "hphp/test/server/fastcgi/tests/invalid.php||hphp/test/server/fastcgi/tests/invalid.php",
            "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc"
          ],
          "candidate": [
            "hphp/runtime/server/fastcgi/fastcgi-server.cpp||hphp/runtime/server/fastcgi/fastcgi-server.cpp",
            "hphp/test/server/debugger/tests/runTest1.php||hphp/test/server/debugger/tests/runTest1.php",
            "hphp/test/server/fastcgi/tests/authDigestTest.php||hphp/test/server/fastcgi/tests/authDigestTest.php",
            "hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php||hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php",
            "hphp/test/server/fastcgi/tests/global_variables_server.php||hphp/test/server/fastcgi/tests/global_variables_server.php",
            "hphp/test/server/fastcgi/tests/headerTest.php||hphp/test/server/fastcgi/tests/headerTest.php",
            "hphp/test/server/fastcgi/tests/httpsTest.php||hphp/test/server/fastcgi/tests/httpsTest.php",
            "hphp/test/server/fastcgi/tests/invalid.php||hphp/test/server/fastcgi/tests/invalid.php",
            "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc"
          ]
        }
      },
      "candidate_diff": {
        "hphp/runtime/server/fastcgi/fastcgi-server.cpp||hphp/runtime/server/fastcgi/fastcgi-server.cpp": [
          "File: hphp/runtime/server/fastcgi/fastcgi-server.cpp -> hphp/runtime/server/fastcgi/fastcgi-server.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:   if (useFileSocket) {",
          "81:     sock_addr.setFromPath(address);",
          "82:   } else if (address.empty()) {",
          "84:   } else {",
          "85:     sock_addr.setFromHostPort(address, port);",
          "86:   }",
          "",
          "[Removed Lines]",
          "83:     sock_addr.setFromLocalPort(port);",
          "",
          "[Added Lines]",
          "83:     sock_addr.setFromHostPort(\"localhost\", port);",
          "84:     assert(sock_addr.isLoopbackAddress());",
          "",
          "---------------"
        ],
        "hphp/test/server/debugger/tests/runTest1.php||hphp/test/server/debugger/tests/runTest1.php": [
          "File: hphp/test/server/debugger/tests/runTest1.php -> hphp/test/server/debugger/tests/runTest1.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: function test1Controller($hphpdOutput, $hphpdProcessId, $serverPort) {",
          "7:   waitForClientToOutput($hphpdOutput, \"Waiting for server response\");",
          "9:   echo \"Requesting test1.php\\n\";",
          "13:   waitForClientToOutput($hphpdOutput, \"quit\");",
          "",
          "[Removed Lines]",
          "8:   $url = \"http://\".php_uname('n').':'.$serverPort.'/test1.php';",
          "10:   request(php_uname('n'), $serverPort, 'test1.php', 10); // ignore response",
          "",
          "[Added Lines]",
          "9:   request('localhost', $serverPort, 'test1.php', 10); // ignore response",
          "",
          "---------------"
        ],
        "hphp/test/server/fastcgi/tests/authDigestTest.php||hphp/test/server/fastcgi/tests/authDigestTest.php": [
          "File: hphp/test/server/fastcgi/tests/authDigestTest.php -> hphp/test/server/fastcgi/tests/authDigestTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:     'uri=\"/test_auth_digest.php\", cnonce=\"MjIyMTg2\", nc=00000001, ' .",
          "9:     'qop=\"auth\", response=\"6dfbea52fbf13016476c1879e6436004\", ' .",
          "10:     'opaque=\"cdce8a5c95a1427d74df7acbf41c9ce0\"');",
          "12:                   [], [], $args));",
          "13: }",
          "",
          "[Removed Lines]",
          "11:   var_dump(request(php_uname('n'), $serverPort, \"test_auth_digest.php\",",
          "",
          "[Added Lines]",
          "11:   var_dump(request('localhost', $serverPort, \"test_auth_digest.php\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "18:     'uri=\"/test_auth_digest.php\", cnonce=\"MjIyMTg1\", nc=00000001, ' .",
          "19:     'qop=\"auth\", response=\"e544aaed06917adea3e5c74dd49f0e32\", ' .",
          "20:     'opaque=\"cdce8a5c95a1427d74df7acbf41c9ce0\"');",
          "22:                   [], [], $args));",
          "23: }",
          "",
          "[Removed Lines]",
          "21:   var_dump(request(php_uname('n'), $serverPort, \"test_auth_digest.php\",",
          "",
          "[Added Lines]",
          "21:   var_dump(request('localhost', $serverPort, \"test_auth_digest.php\",",
          "",
          "---------------"
        ],
        "hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php||hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php": [
          "File: hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php -> hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: require_once('test_base.inc');",
          "8: function disableIniZendCompatController($port) {",
          "10: }",
          "12: echo \"---Enable Ini Zend Compat ON---\\n\";",
          "",
          "[Removed Lines]",
          "9:   echo request(php_uname('n'), $port, 'test_disable_ini_zend_compat.php');",
          "",
          "[Added Lines]",
          "9:   echo request('localhost', $port, 'test_disable_ini_zend_compat.php');",
          "",
          "---------------"
        ],
        "hphp/test/server/fastcgi/tests/global_variables_server.php||hphp/test/server/fastcgi/tests/global_variables_server.php": [
          "File: hphp/test/server/fastcgi/tests/global_variables_server.php -> hphp/test/server/fastcgi/tests/global_variables_server.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:     $path = 'global_variables.php?var=GET&get=1';",
          "24:     $post = array('var' => 'POST', 'post' => 2);",
          "25:     $headers = array('Cookie' => 'var=COOKIE;cookie=3;');",
          "27:   }, $request[0]);",
          "28: }",
          "",
          "[Removed Lines]",
          "26:     echo request(php_uname('n'), $port, $path, $post, $headers, $extra) . \"\\n\";",
          "",
          "[Added Lines]",
          "26:     echo request('localhost', $port, $path, $post, $headers, $extra) . \"\\n\";",
          "",
          "---------------"
        ],
        "hphp/test/server/fastcgi/tests/headerTest.php||hphp/test/server/fastcgi/tests/headerTest.php": [
          "File: hphp/test/server/fastcgi/tests/headerTest.php -> hphp/test/server/fastcgi/tests/headerTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: function headerTestController($serverPort) {",
          "6:   $args = array('Authorization' => 'foo');",
          "8:                   [], ['PROXY' => 'foobar'], $args));",
          "9: }",
          "",
          "[Removed Lines]",
          "7:   var_dump(request(php_uname('n'), $serverPort, \"test_headers.php\",",
          "",
          "[Added Lines]",
          "7:   var_dump(request('localhost', $serverPort, \"test_headers.php\",",
          "",
          "---------------"
        ],
        "hphp/test/server/fastcgi/tests/httpsTest.php||hphp/test/server/fastcgi/tests/httpsTest.php": [
          "File: hphp/test/server/fastcgi/tests/httpsTest.php -> hphp/test/server/fastcgi/tests/httpsTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: function httpsTestController($serverPort) {",
          "6:   $args = array('HTTPS' => '');",
          "8:                   [], [], $args));",
          "9: }",
          "",
          "[Removed Lines]",
          "7:   var_dump(request(php_uname('n'), $serverPort, \"test_https.php\",",
          "",
          "[Added Lines]",
          "7:   var_dump(request('localhost', $serverPort, \"test_https.php\",",
          "",
          "---------------"
        ],
        "hphp/test/server/fastcgi/tests/invalid.php||hphp/test/server/fastcgi/tests/invalid.php": [
          "File: hphp/test/server/fastcgi/tests/invalid.php -> hphp/test/server/fastcgi/tests/invalid.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: require_once('test_base.inc');",
          "5: function invalidTestController($port) {",
          "8:   $filename = __DIR__.'/request-doesnotexist.dat';",
          "9:   $file = fopen($filename, 'rb');",
          "",
          "[Removed Lines]",
          "6:   $host = php_uname('n');",
          "",
          "[Added Lines]",
          "6:   $host = 'localhost';",
          "",
          "---------------"
        ],
        "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc": [
          "File: hphp/test/server/util/server_tests.inc -> hphp/test/server/util/server_tests.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "181: function checkServerId($serverPort, $expectedIds) {",
          "183:   $r = request($host, $serverPort, \"hello.php\");",
          "184:   if (preg_match('/Hello, World!(.*+)/', $r ?? '', &$matches)) {",
          "185:     foreach ((array)$expectedIds as $id) {",
          "",
          "[Removed Lines]",
          "182:   $host = php_uname('n');",
          "",
          "[Added Lines]",
          "182:   $host = 'localhost';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "218:   $r = \"\";",
          "219:   for ($i = 1; $i <= 10; $i++) {",
          "221:     if ($r === \"OK\") break;",
          "222:     usleep(100000);",
          "223:   }",
          "",
          "[Removed Lines]",
          "220:     $r = request(php_uname('n'), $adminPort, 'stop?instance-id='.$test_run_id);",
          "",
          "[Added Lines]",
          "220:     $r = request('localhost', $adminPort, 'stop?instance-id='.$test_run_id);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "286:     $headers = implode(\" \", $s);",
          "287:   }",
          "288:   $url = \"http://$host:$port/$path\";",
          "291:   $LOG_ROOT = ServerUtilServerTests::$LOG_ROOT;",
          "292:   $test_run_id = ServerUtilServerTests::$test_run_id;",
          "",
          "[Removed Lines]",
          "289:   $host_name = \"hphpd.debugger.\".php_uname('n');",
          "",
          "[Added Lines]",
          "289:   $host_name = \"hphpd.debugger.\".\\php_uname('n');",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "304:       foreach ($requests as $request) {",
          "305:         $r = is_array($request) ? $request[0] : $request;",
          "306:         echo \"Requesting '$r'\\n\";",
          "308:       }",
          "309:     },",
          "310:     $customArgs,",
          "",
          "[Removed Lines]",
          "307:         var_dump(request(php_uname('n'), $serverPort, $request));",
          "",
          "[Added Lines]",
          "307:         var_dump(request('localhost', $serverPort, $request));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0943f91334fbeb048cf8e4e773b68e6b9202da4f",
      "candidate_info": {
        "commit_hash": "0943f91334fbeb048cf8e4e773b68e6b9202da4f",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/0943f91334fbeb048cf8e4e773b68e6b9202da4f",
        "files": [
          "hphp/test/server/util/server_tests.inc"
        ],
        "message": "Fix default FastCGI interface\n\nReviewed By: alexeyt\n\nDifferential Revision: D15567393",
        "before_after_code_files": [
          "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc"
          ],
          "candidate": [
            "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc"
          ]
        }
      },
      "candidate_diff": {
        "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc": [
          "File: hphp/test/server/util/server_tests.inc -> hphp/test/server/util/server_tests.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "181: function checkServerId($serverPort, $expectedIds) {",
          "183:   $r = request($host, $serverPort, \"hello.php\");",
          "184:   if (preg_match('/Hello, World!(.*+)/', $r ?? '', &$matches)) {",
          "185:     foreach ((array)$expectedIds as $id) {",
          "",
          "[Removed Lines]",
          "182:   $host = php_uname('n');",
          "",
          "[Added Lines]",
          "182:   $host = 'localhost';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "218:   $r = \"\";",
          "219:   for ($i = 1; $i <= 10; $i++) {",
          "221:     if ($r === \"OK\") break;",
          "222:     usleep(100000);",
          "223:   }",
          "",
          "[Removed Lines]",
          "220:     $r = request(php_uname('n'), $adminPort, 'stop?instance-id='.$test_run_id);",
          "",
          "[Added Lines]",
          "220:     $r = request('localhost', $adminPort, 'stop?instance-id='.$test_run_id);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "298:       foreach ($requests as $request) {",
          "299:         list($r) = (array)$request;",
          "300:         echo \"Requesting '$r'\\n\";",
          "302:       }",
          "303:     },",
          "304:     $customArgs,",
          "",
          "[Removed Lines]",
          "301:         var_dump(request(php_uname('n'), $serverPort, $request));",
          "",
          "[Added Lines]",
          "301:         var_dump(request('localhost', $serverPort, $request));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ed67a9a3cade6cad73f88f9f76d9d6e981bcc85a",
      "candidate_info": {
        "commit_hash": "ed67a9a3cade6cad73f88f9f76d9d6e981bcc85a",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/ed67a9a3cade6cad73f88f9f76d9d6e981bcc85a",
        "files": [
          "hphp/runtime/server/fastcgi/fastcgi-server.cpp",
          "hphp/test/server/debugger/tests/runTest1.php",
          "hphp/test/server/fastcgi/tests/authDigestTest.php",
          "hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php",
          "hphp/test/server/fastcgi/tests/global_variables_server.php",
          "hphp/test/server/fastcgi/tests/headerTest.php",
          "hphp/test/server/fastcgi/tests/httpsTest.php",
          "hphp/test/server/fastcgi/tests/invalid.php",
          "hphp/test/server/util/server_tests.inc"
        ],
        "message": "Fix default FastCGI interface\n\nReviewed By: alexeyt\n\nDifferential Revision: D15567393",
        "before_after_code_files": [
          "hphp/runtime/server/fastcgi/fastcgi-server.cpp||hphp/runtime/server/fastcgi/fastcgi-server.cpp",
          "hphp/test/server/debugger/tests/runTest1.php||hphp/test/server/debugger/tests/runTest1.php",
          "hphp/test/server/fastcgi/tests/authDigestTest.php||hphp/test/server/fastcgi/tests/authDigestTest.php",
          "hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php||hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php",
          "hphp/test/server/fastcgi/tests/global_variables_server.php||hphp/test/server/fastcgi/tests/global_variables_server.php",
          "hphp/test/server/fastcgi/tests/headerTest.php||hphp/test/server/fastcgi/tests/headerTest.php",
          "hphp/test/server/fastcgi/tests/httpsTest.php||hphp/test/server/fastcgi/tests/httpsTest.php",
          "hphp/test/server/fastcgi/tests/invalid.php||hphp/test/server/fastcgi/tests/invalid.php",
          "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "hphp/runtime/server/fastcgi/fastcgi-server.cpp||hphp/runtime/server/fastcgi/fastcgi-server.cpp",
            "hphp/test/server/debugger/tests/runTest1.php||hphp/test/server/debugger/tests/runTest1.php",
            "hphp/test/server/fastcgi/tests/authDigestTest.php||hphp/test/server/fastcgi/tests/authDigestTest.php",
            "hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php||hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php",
            "hphp/test/server/fastcgi/tests/global_variables_server.php||hphp/test/server/fastcgi/tests/global_variables_server.php",
            "hphp/test/server/fastcgi/tests/headerTest.php||hphp/test/server/fastcgi/tests/headerTest.php",
            "hphp/test/server/fastcgi/tests/httpsTest.php||hphp/test/server/fastcgi/tests/httpsTest.php",
            "hphp/test/server/fastcgi/tests/invalid.php||hphp/test/server/fastcgi/tests/invalid.php",
            "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc"
          ],
          "candidate": [
            "hphp/runtime/server/fastcgi/fastcgi-server.cpp||hphp/runtime/server/fastcgi/fastcgi-server.cpp",
            "hphp/test/server/debugger/tests/runTest1.php||hphp/test/server/debugger/tests/runTest1.php",
            "hphp/test/server/fastcgi/tests/authDigestTest.php||hphp/test/server/fastcgi/tests/authDigestTest.php",
            "hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php||hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php",
            "hphp/test/server/fastcgi/tests/global_variables_server.php||hphp/test/server/fastcgi/tests/global_variables_server.php",
            "hphp/test/server/fastcgi/tests/headerTest.php||hphp/test/server/fastcgi/tests/headerTest.php",
            "hphp/test/server/fastcgi/tests/httpsTest.php||hphp/test/server/fastcgi/tests/httpsTest.php",
            "hphp/test/server/fastcgi/tests/invalid.php||hphp/test/server/fastcgi/tests/invalid.php",
            "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc"
          ]
        }
      },
      "candidate_diff": {
        "hphp/runtime/server/fastcgi/fastcgi-server.cpp||hphp/runtime/server/fastcgi/fastcgi-server.cpp": [
          "File: hphp/runtime/server/fastcgi/fastcgi-server.cpp -> hphp/runtime/server/fastcgi/fastcgi-server.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:   if (useFileSocket) {",
          "81:     sock_addr.setFromPath(address);",
          "82:   } else if (address.empty()) {",
          "84:   } else {",
          "85:     sock_addr.setFromHostPort(address, port);",
          "86:   }",
          "",
          "[Removed Lines]",
          "83:     sock_addr.setFromLocalPort(port);",
          "",
          "[Added Lines]",
          "83:     sock_addr.setFromHostPort(\"localhost\", port);",
          "84:     assert(sock_addr.isLoopbackAddress());",
          "",
          "---------------"
        ],
        "hphp/test/server/debugger/tests/runTest1.php||hphp/test/server/debugger/tests/runTest1.php": [
          "File: hphp/test/server/debugger/tests/runTest1.php -> hphp/test/server/debugger/tests/runTest1.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: function test1Controller($hphpdOutput, $hphpdProcessId, $serverPort) {",
          "7:   waitForClientToOutput($hphpdOutput, \"Waiting for server response\");",
          "9:   echo \"Requesting test1.php\\n\";",
          "13:   waitForClientToOutput($hphpdOutput, \"quit\");",
          "",
          "[Removed Lines]",
          "8:   $url = \"http://\".php_uname('n').':'.$serverPort.'/test1.php';",
          "10:   request(php_uname('n'), $serverPort, 'test1.php', 10); // ignore response",
          "",
          "[Added Lines]",
          "9:   request('localhost', $serverPort, 'test1.php', 10); // ignore response",
          "",
          "---------------"
        ],
        "hphp/test/server/fastcgi/tests/authDigestTest.php||hphp/test/server/fastcgi/tests/authDigestTest.php": [
          "File: hphp/test/server/fastcgi/tests/authDigestTest.php -> hphp/test/server/fastcgi/tests/authDigestTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:     'uri=\"/test_auth_digest.php\", cnonce=\"MjIyMTg2\", nc=00000001, ' .",
          "9:     'qop=\"auth\", response=\"6dfbea52fbf13016476c1879e6436004\", ' .",
          "10:     'opaque=\"cdce8a5c95a1427d74df7acbf41c9ce0\"');",
          "12:                   [], [], $args));",
          "13: }",
          "",
          "[Removed Lines]",
          "11:   var_dump(request(php_uname('n'), $serverPort, \"test_auth_digest.php\",",
          "",
          "[Added Lines]",
          "11:   var_dump(request('localhost', $serverPort, \"test_auth_digest.php\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "18:     'uri=\"/test_auth_digest.php\", cnonce=\"MjIyMTg1\", nc=00000001, ' .",
          "19:     'qop=\"auth\", response=\"e544aaed06917adea3e5c74dd49f0e32\", ' .",
          "20:     'opaque=\"cdce8a5c95a1427d74df7acbf41c9ce0\"');",
          "22:                   [], [], $args));",
          "23: }",
          "",
          "[Removed Lines]",
          "21:   var_dump(request(php_uname('n'), $serverPort, \"test_auth_digest.php\",",
          "",
          "[Added Lines]",
          "21:   var_dump(request('localhost', $serverPort, \"test_auth_digest.php\",",
          "",
          "---------------"
        ],
        "hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php||hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php": [
          "File: hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php -> hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: require_once('test_base.inc');",
          "8: function disableIniZendCompatController($port) {",
          "10: }",
          "12: echo \"---Enable Ini Zend Compat ON---\\n\";",
          "",
          "[Removed Lines]",
          "9:   echo request(php_uname('n'), $port, 'test_disable_ini_zend_compat.php');",
          "",
          "[Added Lines]",
          "9:   echo request('localhost', $port, 'test_disable_ini_zend_compat.php');",
          "",
          "---------------"
        ],
        "hphp/test/server/fastcgi/tests/global_variables_server.php||hphp/test/server/fastcgi/tests/global_variables_server.php": [
          "File: hphp/test/server/fastcgi/tests/global_variables_server.php -> hphp/test/server/fastcgi/tests/global_variables_server.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:     $path = 'global_variables.php?var=GET&get=1';",
          "24:     $post = array('var' => 'POST', 'post' => 2);",
          "25:     $headers = array('Cookie' => 'var=COOKIE;cookie=3;');",
          "27:   }, $request[0]);",
          "28: }",
          "",
          "[Removed Lines]",
          "26:     echo request(php_uname('n'), $port, $path, $post, $headers, $extra) . \"\\n\";",
          "",
          "[Added Lines]",
          "26:     echo request('localhost', $port, $path, $post, $headers, $extra) . \"\\n\";",
          "",
          "---------------"
        ],
        "hphp/test/server/fastcgi/tests/headerTest.php||hphp/test/server/fastcgi/tests/headerTest.php": [
          "File: hphp/test/server/fastcgi/tests/headerTest.php -> hphp/test/server/fastcgi/tests/headerTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: function headerTestController($serverPort) {",
          "6:   $args = array('Authorization' => 'foo');",
          "8:                   [], ['PROXY' => 'foobar'], $args));",
          "9: }",
          "",
          "[Removed Lines]",
          "7:   var_dump(request(php_uname('n'), $serverPort, \"test_headers.php\",",
          "",
          "[Added Lines]",
          "7:   var_dump(request('localhost', $serverPort, \"test_headers.php\",",
          "",
          "---------------"
        ],
        "hphp/test/server/fastcgi/tests/httpsTest.php||hphp/test/server/fastcgi/tests/httpsTest.php": [
          "File: hphp/test/server/fastcgi/tests/httpsTest.php -> hphp/test/server/fastcgi/tests/httpsTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: function httpsTestController($serverPort) {",
          "6:   $args = array('HTTPS' => '');",
          "8:                   [], [], $args));",
          "9: }",
          "",
          "[Removed Lines]",
          "7:   var_dump(request(php_uname('n'), $serverPort, \"test_https.php\",",
          "",
          "[Added Lines]",
          "7:   var_dump(request('localhost', $serverPort, \"test_https.php\",",
          "",
          "---------------"
        ],
        "hphp/test/server/fastcgi/tests/invalid.php||hphp/test/server/fastcgi/tests/invalid.php": [
          "File: hphp/test/server/fastcgi/tests/invalid.php -> hphp/test/server/fastcgi/tests/invalid.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: require_once('test_base.inc');",
          "5: function invalidTestController($port) {",
          "8:   $filename = __DIR__.'/request-doesnotexist.dat';",
          "9:   $file = fopen($filename, 'rb');",
          "",
          "[Removed Lines]",
          "6:   $host = php_uname('n');",
          "",
          "[Added Lines]",
          "6:   $host = 'localhost';",
          "",
          "---------------"
        ],
        "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc": [
          "File: hphp/test/server/util/server_tests.inc -> hphp/test/server/util/server_tests.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "181: function checkServerId($serverPort, $expectedIds) {",
          "183:   $r = request($host, $serverPort, \"hello.php\");",
          "184:   if (preg_match('/Hello, World!(.*+)/', $r ?? '', &$matches)) {",
          "185:     foreach ((array)$expectedIds as $id) {",
          "",
          "[Removed Lines]",
          "182:   $host = php_uname('n');",
          "",
          "[Added Lines]",
          "182:   $host = 'localhost';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "218:   $r = \"\";",
          "219:   for ($i = 1; $i <= 10; $i++) {",
          "221:     if ($r === \"OK\") break;",
          "222:     usleep(100000);",
          "223:   }",
          "",
          "[Removed Lines]",
          "220:     $r = request(php_uname('n'), $adminPort, 'stop?instance-id='.$test_run_id);",
          "",
          "[Added Lines]",
          "220:     $r = request('localhost', $adminPort, 'stop?instance-id='.$test_run_id);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "286:     $headers = implode(\" \", $s);",
          "287:   }",
          "288:   $url = \"http://$host:$port/$path\";",
          "291:   $LOG_ROOT = ServerUtilServerTests::$LOG_ROOT;",
          "292:   $test_run_id = ServerUtilServerTests::$test_run_id;",
          "",
          "[Removed Lines]",
          "289:   $host_name = \"hphpd.debugger.\".php_uname('n');",
          "",
          "[Added Lines]",
          "289:   $host_name = \"hphpd.debugger.\".\\php_uname('n');",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "304:       foreach ($requests as $request) {",
          "305:         $r = is_array($request) ? $request[0] : $request;",
          "306:         echo \"Requesting '$r'\\n\";",
          "308:       }",
          "309:     },",
          "310:     $customArgs,",
          "",
          "[Removed Lines]",
          "307:         var_dump(request(php_uname('n'), $serverPort, $request));",
          "",
          "[Added Lines]",
          "307:         var_dump(request('localhost', $serverPort, $request));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "87c4486bb5aadf28f6c2a9f566f65699cbc66c18",
      "candidate_info": {
        "commit_hash": "87c4486bb5aadf28f6c2a9f566f65699cbc66c18",
        "repo": "facebook/hhvm",
        "commit_url": "https://github.com/facebook/hhvm/commit/87c4486bb5aadf28f6c2a9f566f65699cbc66c18",
        "files": [
          "hphp/runtime/server/fastcgi/fastcgi-server.cpp",
          "hphp/test/server/debugger/tests/runTest1.php",
          "hphp/test/server/fastcgi/tests/authDigestTest.php",
          "hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php",
          "hphp/test/server/fastcgi/tests/global_variables_server.php",
          "hphp/test/server/fastcgi/tests/headerTest.php",
          "hphp/test/server/fastcgi/tests/httpsTest.php",
          "hphp/test/server/fastcgi/tests/invalid.php",
          "hphp/test/server/util/server_tests.inc"
        ],
        "message": "Fix default FastCGI interface\n\nReviewed By: alexeyt\n\nDifferential Revision: D15567393",
        "before_after_code_files": [
          "hphp/runtime/server/fastcgi/fastcgi-server.cpp||hphp/runtime/server/fastcgi/fastcgi-server.cpp",
          "hphp/test/server/debugger/tests/runTest1.php||hphp/test/server/debugger/tests/runTest1.php",
          "hphp/test/server/fastcgi/tests/authDigestTest.php||hphp/test/server/fastcgi/tests/authDigestTest.php",
          "hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php||hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php",
          "hphp/test/server/fastcgi/tests/global_variables_server.php||hphp/test/server/fastcgi/tests/global_variables_server.php",
          "hphp/test/server/fastcgi/tests/headerTest.php||hphp/test/server/fastcgi/tests/headerTest.php",
          "hphp/test/server/fastcgi/tests/httpsTest.php||hphp/test/server/fastcgi/tests/httpsTest.php",
          "hphp/test/server/fastcgi/tests/invalid.php||hphp/test/server/fastcgi/tests/invalid.php",
          "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "hphp/runtime/server/fastcgi/fastcgi-server.cpp||hphp/runtime/server/fastcgi/fastcgi-server.cpp",
            "hphp/test/server/debugger/tests/runTest1.php||hphp/test/server/debugger/tests/runTest1.php",
            "hphp/test/server/fastcgi/tests/authDigestTest.php||hphp/test/server/fastcgi/tests/authDigestTest.php",
            "hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php||hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php",
            "hphp/test/server/fastcgi/tests/global_variables_server.php||hphp/test/server/fastcgi/tests/global_variables_server.php",
            "hphp/test/server/fastcgi/tests/headerTest.php||hphp/test/server/fastcgi/tests/headerTest.php",
            "hphp/test/server/fastcgi/tests/httpsTest.php||hphp/test/server/fastcgi/tests/httpsTest.php",
            "hphp/test/server/fastcgi/tests/invalid.php||hphp/test/server/fastcgi/tests/invalid.php",
            "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc"
          ],
          "candidate": [
            "hphp/runtime/server/fastcgi/fastcgi-server.cpp||hphp/runtime/server/fastcgi/fastcgi-server.cpp",
            "hphp/test/server/debugger/tests/runTest1.php||hphp/test/server/debugger/tests/runTest1.php",
            "hphp/test/server/fastcgi/tests/authDigestTest.php||hphp/test/server/fastcgi/tests/authDigestTest.php",
            "hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php||hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php",
            "hphp/test/server/fastcgi/tests/global_variables_server.php||hphp/test/server/fastcgi/tests/global_variables_server.php",
            "hphp/test/server/fastcgi/tests/headerTest.php||hphp/test/server/fastcgi/tests/headerTest.php",
            "hphp/test/server/fastcgi/tests/httpsTest.php||hphp/test/server/fastcgi/tests/httpsTest.php",
            "hphp/test/server/fastcgi/tests/invalid.php||hphp/test/server/fastcgi/tests/invalid.php",
            "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc"
          ]
        }
      },
      "candidate_diff": {
        "hphp/runtime/server/fastcgi/fastcgi-server.cpp||hphp/runtime/server/fastcgi/fastcgi-server.cpp": [
          "File: hphp/runtime/server/fastcgi/fastcgi-server.cpp -> hphp/runtime/server/fastcgi/fastcgi-server.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:   if (useFileSocket) {",
          "81:     sock_addr.setFromPath(address);",
          "82:   } else if (address.empty()) {",
          "84:   } else {",
          "85:     sock_addr.setFromHostPort(address, port);",
          "86:   }",
          "",
          "[Removed Lines]",
          "83:     sock_addr.setFromLocalPort(port);",
          "",
          "[Added Lines]",
          "83:     sock_addr.setFromHostPort(\"localhost\", port);",
          "84:     assert(sock_addr.isLoopbackAddress());",
          "",
          "---------------"
        ],
        "hphp/test/server/debugger/tests/runTest1.php||hphp/test/server/debugger/tests/runTest1.php": [
          "File: hphp/test/server/debugger/tests/runTest1.php -> hphp/test/server/debugger/tests/runTest1.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: function test1Controller($hphpdOutput, $hphpdProcessId, $serverPort) {",
          "7:   waitForClientToOutput($hphpdOutput, \"Waiting for server response\");",
          "9:   echo \"Requesting test1.php\\n\";",
          "13:   waitForClientToOutput($hphpdOutput, \"quit\");",
          "",
          "[Removed Lines]",
          "8:   $url = \"http://\".php_uname('n').':'.$serverPort.'/test1.php';",
          "10:   request(php_uname('n'), $serverPort, 'test1.php', 10); // ignore response",
          "",
          "[Added Lines]",
          "9:   request('localhost', $serverPort, 'test1.php', 10); // ignore response",
          "",
          "---------------"
        ],
        "hphp/test/server/fastcgi/tests/authDigestTest.php||hphp/test/server/fastcgi/tests/authDigestTest.php": [
          "File: hphp/test/server/fastcgi/tests/authDigestTest.php -> hphp/test/server/fastcgi/tests/authDigestTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:     'uri=\"/test_auth_digest.php\", cnonce=\"MjIyMTg2\", nc=00000001, ' .",
          "9:     'qop=\"auth\", response=\"6dfbea52fbf13016476c1879e6436004\", ' .",
          "10:     'opaque=\"cdce8a5c95a1427d74df7acbf41c9ce0\"');",
          "12:                   [], [], $args));",
          "13: }",
          "",
          "[Removed Lines]",
          "11:   var_dump(request(php_uname('n'), $serverPort, \"test_auth_digest.php\",",
          "",
          "[Added Lines]",
          "11:   var_dump(request('localhost', $serverPort, \"test_auth_digest.php\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "18:     'uri=\"/test_auth_digest.php\", cnonce=\"MjIyMTg1\", nc=00000001, ' .",
          "19:     'qop=\"auth\", response=\"e544aaed06917adea3e5c74dd49f0e32\", ' .",
          "20:     'opaque=\"cdce8a5c95a1427d74df7acbf41c9ce0\"');",
          "22:                   [], [], $args));",
          "23: }",
          "",
          "[Removed Lines]",
          "21:   var_dump(request(php_uname('n'), $serverPort, \"test_auth_digest.php\",",
          "",
          "[Added Lines]",
          "21:   var_dump(request('localhost', $serverPort, \"test_auth_digest.php\",",
          "",
          "---------------"
        ],
        "hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php||hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php": [
          "File: hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php -> hphp/test/server/fastcgi/tests/disable_ini_zend_compat.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: require_once('test_base.inc');",
          "8: function disableIniZendCompatController($port) {",
          "10: }",
          "12: echo \"---Enable Ini Zend Compat ON---\\n\";",
          "",
          "[Removed Lines]",
          "9:   echo request(php_uname('n'), $port, 'test_disable_ini_zend_compat.php');",
          "",
          "[Added Lines]",
          "9:   echo request('localhost', $port, 'test_disable_ini_zend_compat.php');",
          "",
          "---------------"
        ],
        "hphp/test/server/fastcgi/tests/global_variables_server.php||hphp/test/server/fastcgi/tests/global_variables_server.php": [
          "File: hphp/test/server/fastcgi/tests/global_variables_server.php -> hphp/test/server/fastcgi/tests/global_variables_server.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:     $path = 'global_variables.php?var=GET&get=1';",
          "24:     $post = array('var' => 'POST', 'post' => 2);",
          "25:     $headers = array('Cookie' => 'var=COOKIE;cookie=3;');",
          "27:   }, $request[0]);",
          "28: }",
          "",
          "[Removed Lines]",
          "26:     echo request(php_uname('n'), $port, $path, $post, $headers, $extra) . \"\\n\";",
          "",
          "[Added Lines]",
          "26:     echo request('localhost', $port, $path, $post, $headers, $extra) . \"\\n\";",
          "",
          "---------------"
        ],
        "hphp/test/server/fastcgi/tests/headerTest.php||hphp/test/server/fastcgi/tests/headerTest.php": [
          "File: hphp/test/server/fastcgi/tests/headerTest.php -> hphp/test/server/fastcgi/tests/headerTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: function headerTestController($serverPort) {",
          "6:   $args = array('Authorization' => 'foo');",
          "8:                   [], ['PROXY' => 'foobar'], $args));",
          "9: }",
          "",
          "[Removed Lines]",
          "7:   var_dump(request(php_uname('n'), $serverPort, \"test_headers.php\",",
          "",
          "[Added Lines]",
          "7:   var_dump(request('localhost', $serverPort, \"test_headers.php\",",
          "",
          "---------------"
        ],
        "hphp/test/server/fastcgi/tests/httpsTest.php||hphp/test/server/fastcgi/tests/httpsTest.php": [
          "File: hphp/test/server/fastcgi/tests/httpsTest.php -> hphp/test/server/fastcgi/tests/httpsTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: function httpsTestController($serverPort) {",
          "6:   $args = array('HTTPS' => '');",
          "8:                   [], [], $args));",
          "9: }",
          "",
          "[Removed Lines]",
          "7:   var_dump(request(php_uname('n'), $serverPort, \"test_https.php\",",
          "",
          "[Added Lines]",
          "7:   var_dump(request('localhost', $serverPort, \"test_https.php\",",
          "",
          "---------------"
        ],
        "hphp/test/server/fastcgi/tests/invalid.php||hphp/test/server/fastcgi/tests/invalid.php": [
          "File: hphp/test/server/fastcgi/tests/invalid.php -> hphp/test/server/fastcgi/tests/invalid.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: require_once('test_base.inc');",
          "5: function invalidTestController($port) {",
          "8:   $filename = __DIR__.'/request-doesnotexist.dat';",
          "9:   $file = fopen($filename, 'rb');",
          "",
          "[Removed Lines]",
          "6:   $host = php_uname('n');",
          "",
          "[Added Lines]",
          "6:   $host = 'localhost';",
          "",
          "---------------"
        ],
        "hphp/test/server/util/server_tests.inc||hphp/test/server/util/server_tests.inc": [
          "File: hphp/test/server/util/server_tests.inc -> hphp/test/server/util/server_tests.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "181: function checkServerId($serverPort, $expectedIds) {",
          "183:   $r = request($host, $serverPort, \"hello.php\");",
          "184:   if (preg_match('/Hello, World!(.*+)/', $r ?? '', &$matches)) {",
          "185:     foreach ((array)$expectedIds as $id) {",
          "",
          "[Removed Lines]",
          "182:   $host = php_uname('n');",
          "",
          "[Added Lines]",
          "182:   $host = 'localhost';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "218:   $r = \"\";",
          "219:   for ($i = 1; $i <= 10; $i++) {",
          "221:     if ($r === \"OK\") break;",
          "222:     usleep(100000);",
          "223:   }",
          "",
          "[Removed Lines]",
          "220:     $r = request(php_uname('n'), $adminPort, 'stop?instance-id='.$test_run_id);",
          "",
          "[Added Lines]",
          "220:     $r = request('localhost', $adminPort, 'stop?instance-id='.$test_run_id);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "286:     $headers = implode(\" \", $s);",
          "287:   }",
          "288:   $url = \"http://$host:$port/$path\";",
          "291:   $LOG_ROOT = ServerUtilServerTests::$LOG_ROOT;",
          "292:   $test_run_id = ServerUtilServerTests::$test_run_id;",
          "",
          "[Removed Lines]",
          "289:   $host_name = \"hphpd.debugger.\".php_uname('n');",
          "",
          "[Added Lines]",
          "289:   $host_name = \"hphpd.debugger.\".\\php_uname('n');",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "304:       foreach ($requests as $request) {",
          "305:         $r = is_array($request) ? $request[0] : $request;",
          "306:         echo \"Requesting '$r'\\n\";",
          "308:       }",
          "309:     },",
          "310:     $customArgs,",
          "",
          "[Removed Lines]",
          "307:         var_dump(request(php_uname('n'), $serverPort, $request));",
          "",
          "[Added Lines]",
          "307:         var_dump(request('localhost', $serverPort, $request));",
          "",
          "---------------"
        ]
      }
    }
  ]
}