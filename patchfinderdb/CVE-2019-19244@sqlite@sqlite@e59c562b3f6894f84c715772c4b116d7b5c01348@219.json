{
  "cve_id": "CVE-2019-19244",
  "cve_desc": "sqlite3Select in select.c in SQLite 3.30.1 allows a crash if a sub-select uses both DISTINCT and window functions, and also has certain ORDER BY usage.",
  "repo": "sqlite/sqlite",
  "patch_hash": "e59c562b3f6894f84c715772c4b116d7b5c01348",
  "patch_info": {
    "commit_hash": "e59c562b3f6894f84c715772c4b116d7b5c01348",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/e59c562b3f6894f84c715772c4b116d7b5c01348",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/window1.test"
    ],
    "message": "Fix a crash that could occur if a sub-select that uses both DISTINCT and window functions also used an ORDER BY that is the same as its select list.\n\nFossilOrigin-Name: bcdd66c1691955c697f3d756c2b035acfe98f6aad72e90b0021bab6e9023b3ba",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/window1.test||test/window1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 6a64fb6a2da6c98f1e87b55ad5689967e1db4eae2e08345471d95e28cd567e0f",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "6065:   if( (p->selFlags & (SF_Distinct|SF_Aggregate))==SF_Distinct",
      "6066:    && sqlite3ExprListCompare(sSort.pOrderBy, pEList, -1)==0",
      "6067:   ){",
      "6068:     p->selFlags &= ~SF_Distinct;",
      "6069:     pGroupBy = p->pGroupBy = sqlite3ExprListDup(db, pEList, 0);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6067:    && p->pWin==0",
      "",
      "---------------"
    ],
    "test/window1.test||test/window1.test": [
      "File: test/window1.test -> test/window1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "1243:   ALTER TABLE a0 RENAME TO S;",
      "1244: } {1 {error in view a: 1st ORDER BY term does not match any column in the result set}}",
      "1246: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1246: reset_db",
      "1247: do_execsql_test 33.1 {",
      "1248:   CREATE TABLE t1(aa, bb);",
      "1249:   INSERT INTO t1 VALUES(1, 2);",
      "1250:   INSERT INTO t1 VALUES(5, 6);",
      "1251:   CREATE TABLE t2(x);",
      "1252:   INSERT INTO t2 VALUES(1);",
      "1253: }",
      "1254: do_execsql_test 33.2 {",
      "1255:   SELECT (SELECT DISTINCT sum(aa) OVER() FROM t1 ORDER BY 1), x FROM t2",
      "1256:   ORDER BY 1;",
      "1257: } {6 1}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3756d59bc3bc788b5c5c5c1ca5463b883a5150d6",
      "candidate_info": {
        "commit_hash": "3756d59bc3bc788b5c5c5c1ca5463b883a5150d6",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/3756d59bc3bc788b5c5c5c1ca5463b883a5150d6",
        "files": [
          "README.md",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Update the README.md file at the top level to talk about how to deal with version names and how to verify the code in Git mirrors.\n\nFossilOrigin-Name: e8c87a0ac1bf434c12a8ab602e7913a89a51898e818f30fa541a9b5708864212",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 1d801a3b2c48dc8a918d6da047bc877acf033d5f5c4e1d4b412ba7678ed6f8b3",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5e970a8f40b1923558fc86cfe21b1bcc9a0064c2",
      "candidate_info": {
        "commit_hash": "5e970a8f40b1923558fc86cfe21b1bcc9a0064c2",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/5e970a8f40b1923558fc86cfe21b1bcc9a0064c2",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/resolve.c",
          "test/altertab2.test"
        ],
        "message": "Fix a problem with renaming a column that is used as part of an ORDER BY on a compound SELECT within a database view or trigger.\n\nFossilOrigin-Name: b4b5741366578b25ec6e4c415ab8239215e53b1c900be613575f40a826cfccc9",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/resolve.c||src/resolve.c",
          "test/altertab2.test||test/altertab2.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: d45bee36f2c1091a2d32c16ca8921bf4e7c9e40c46d0a36fbcb179ecfafcfbf0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/resolve.c||src/resolve.c": [
          "File: src/resolve.c -> src/resolve.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1138:       }else{",
          "1139:         iCol = resolveAsName(pParse, pEList, pE);",
          "1140:         if( iCol==0 ){",
          "1142:           if( !db->mallocFailed ){",
          "1143:             assert(pDup);",
          "1144:             iCol = resolveOrderByTermToExprList(pParse, pSelect, pDup);",
          "1145:           }",
          "1147:         }",
          "1148:       }",
          "1149:       if( iCol>0 ){",
          "",
          "[Removed Lines]",
          "1141:           pDup = sqlite3ExprDup(db, pE, 0);",
          "1146:           sqlite3ExprDelete(db, pDup);",
          "",
          "[Added Lines]",
          "1154:           if( IN_RENAME_OBJECT ){",
          "1155:             pDup = pE;",
          "1156:           }else{",
          "1157:             pDup = sqlite3ExprDup(db, pE, 0);",
          "1158:           }",
          "1163:           if( IN_RENAME_OBJECT ){",
          "1164:             if( iCol>0 ){",
          "1165:               pItem->done = 1;",
          "1166:               break;",
          "1167:             }",
          "1168:           }else{",
          "1169:             sqlite3ExprDelete(db, pDup);",
          "1170:           }",
          "",
          "---------------"
        ],
        "test/altertab2.test||test/altertab2.test": [
          "File: test/altertab2.test -> test/altertab2.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "233:   INSERT INTO t2x VALUES(1);",
          "234: } {1 {no such column: b}}",
          "236: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "236: #-------------------------------------------------------------------------",
          "238: do_execsql_test 6.0 {",
          "239:   CREATE TABLE t3(a,b,c,d);",
          "240:   CREATE TRIGGER r3 AFTER INSERT ON t3 WHEN new.a NOT NULL BEGIN",
          "241:     SELECT a,b,c FROM t3 EXCEPT SELECT a,b,c FROM t3 ORDER BY a;",
          "242:     SELECT rowid, * FROM t3;",
          "243:   END;",
          "244: } {}",
          "246: do_execsql_test 6.1 {",
          "247:   ALTER TABLE t3 RENAME TO t3x;",
          "248:   SELECT sql FROM sqlite_master WHERE name = 'r3';",
          "249: } {",
          "250:   {CREATE TRIGGER r3 AFTER INSERT ON \"t3x\" WHEN new.a NOT NULL BEGIN",
          "251:     SELECT a,b,c FROM \"t3x\" EXCEPT SELECT a,b,c FROM \"t3x\" ORDER BY a;",
          "252:     SELECT rowid, * FROM \"t3x\";",
          "253:   END}",
          "254: }",
          "256: do_execsql_test 6.2 {",
          "257:   ALTER TABLE t3x RENAME a TO abcd;",
          "258:   SELECT sql FROM sqlite_master WHERE name = 'r3';",
          "259: } {",
          "260:   {CREATE TRIGGER r3 AFTER INSERT ON \"t3x\" WHEN new.abcd NOT NULL BEGIN",
          "261:     SELECT abcd,b,c FROM \"t3x\" EXCEPT SELECT abcd,b,c FROM \"t3x\" ORDER BY abcd;",
          "262:     SELECT rowid, * FROM \"t3x\";",
          "263:   END}",
          "264: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f116ad8527ccbe57356d5ba95a94a4fa711621e7",
      "candidate_info": {
        "commit_hash": "f116ad8527ccbe57356d5ba95a94a4fa711621e7",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/f116ad8527ccbe57356d5ba95a94a4fa711621e7",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbeaux.c",
          "test/fkey7.test"
        ],
        "message": "Do not commit an \"OR FAIL\" statement that causes foriegn key constraint violations.\n\nFossilOrigin-Name: 659c551dcc374a0d349ba9419f692e3363839e11d791a17cc35fa1854a674a51",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbeaux.c||src/vdbeaux.c",
          "test/fkey7.test||test/fkey7.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 8b6691f619ed9a56f6aecbd878ebb447c40984f8767508b248494fd9ec68fbaa",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbeaux.c||src/vdbeaux.c": [
          "File: src/vdbeaux.c -> src/vdbeaux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2896:     }",
          "2900:       sqlite3VdbeCheckFk(p, 0);",
          "2901:     }",
          "",
          "[Removed Lines]",
          "2899:     if( p->rc==SQLITE_OK ){",
          "",
          "[Added Lines]",
          "2899:     if( p->rc==SQLITE_OK || (p->errorAction==OE_Fail && !isSpecialError) ){",
          "",
          "---------------"
        ],
        "test/fkey7.test||test/fkey7.test": [
          "File: test/fkey7.test -> test/fkey7.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "82:   }",
          "83: }",
          "85: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "86: do_execsql_test 4.0 {",
          "87:   PRAGMA foreign_keys = true;",
          "88:   CREATE TABLE parent(",
          "89:     p PRIMARY KEY",
          "90:   );",
          "91:   CREATE TABLE child(",
          "92:     c UNIQUE REFERENCES parent(p)",
          "93:   );",
          "94: }",
          "96: do_catchsql_test 4.1 {",
          "97:   INSERT OR FAIL INTO child VALUES(123), (123);",
          "98: } {1 {FOREIGN KEY constraint failed}}",
          "100: do_execsql_test 4.2 {",
          "101:   SELECT * FROM child;",
          "102: } {}",
          "104: do_execsql_test 4.3 {",
          "105:   PRAGMA foreign_key_check;",
          "106: } {}",
          "108: do_catchsql_test 4.4 {",
          "109:   INSERT INTO parent VALUES(123);",
          "110:   INSERT OR FAIL INTO child VALUES(123), (123);",
          "111: } {1 {UNIQUE constraint failed: child.c}}",
          "113: do_execsql_test 4.5 {",
          "114:   SELECT * FROM child;",
          "115: } {123}",
          "117: do_execsql_test 4.6 {",
          "118:   PRAGMA foreign_key_check;",
          "119: } {}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4a254f98e3fc2b214127f1714d27a2eccc4f7fda",
      "candidate_info": {
        "commit_hash": "4a254f98e3fc2b214127f1714d27a2eccc4f7fda",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/4a254f98e3fc2b214127f1714d27a2eccc4f7fda",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c"
        ],
        "message": "Improvements to the LEFT JOIN strength reduction optimization.\n\nFossilOrigin-Name: 548082dfab5d9484279ccc11cd2833ac131b54b7481372b576d7c28bbb3294ea",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 4ed905b18847d4dbf5a2570052abced338065f824137b90300f62d77b3159d80",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5231: int sqlite3ExprImpliesNonNullRow(Expr *p, int iTab){",
          "5232:   Walker w;",
          "5233:   p = sqlite3ExprSkipCollateAndLikely(p);",
          "5235:     p = p->pLeft;",
          "5236:   }",
          "5237:   w.xExprCallback = impliesNotNullRow;",
          "5238:   w.xSelectCallback = 0;",
          "",
          "[Removed Lines]",
          "5234:   if( p && p->op==TK_NOTNULL ){",
          "",
          "[Added Lines]",
          "5234:   if( p==0 ) return 0;",
          "5235:   if( p->op==TK_NOTNULL ){",
          "5237:   }else if( p->op==TK_AND ){",
          "5238:     if( sqlite3ExprImpliesNonNullRow(p->pLeft, iTab) ) return 1;",
          "5239:     p = p->pRight;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8cd2e4ae0370efc24aad29f6e2581ef650ca17c5",
      "candidate_info": {
        "commit_hash": "8cd2e4ae0370efc24aad29f6e2581ef650ca17c5",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/8cd2e4ae0370efc24aad29f6e2581ef650ca17c5",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/resolve.c",
          "test/altertab2.test",
          "test/altertab3.test",
          "test/autoindex5.test"
        ],
        "message": "Build and test fixes for SQLITE_OMIT_WINDOWFUNC builds.\n\nFossilOrigin-Name: 8824115a9776e876a3677f0cb479e311ee65584d43872b37766a146afec72d8f",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/resolve.c||src/resolve.c",
          "test/altertab2.test||test/altertab2.test",
          "test/altertab3.test||test/altertab3.test",
          "test/autoindex5.test||test/autoindex5.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 4a4952d38e8177ed8d59aaa575410bebf76787dd6d801fdbdb809d4f8c670da0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/resolve.c||src/resolve.c": [
          "File: src/resolve.c -> src/resolve.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1533:       }",
          "1534:     }",
          "1536:     if( IN_RENAME_OBJECT ){",
          "1537:       Window *pWin;",
          "1538:       for(pWin=p->pWinDefn; pWin; pWin=pWin->pNextWin){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1536: #ifndef SQLITE_OMIT_WINDOWFUNC",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1543:         }",
          "1544:       }",
          "1545:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1547: #endif",
          "",
          "---------------"
        ],
        "test/altertab2.test||test/altertab2.test": [
          "File: test/altertab2.test -> test/altertab2.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "179: }",
          "181: #-------------------------------------------------------------------------",
          "182: do_execsql_test 5.0 {",
          "183:   CREATE TABLE t2(a);",
          "184:   CREATE TRIGGER r2 AFTER INSERT ON t2 WHEN new.a NOT NULL BEGIN",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "182: ifcapable windowfunc {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "235: do_execsql_test 5.3 {",
          "236:   INSERT INTO t2x VALUES(1);",
          "237: } {}",
          "239: #-------------------------------------------------------------------------",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "239: } ;# windowfunc",
          "",
          "---------------"
        ],
        "test/altertab3.test||test/altertab3.test": [
          "File: test/altertab3.test -> test/altertab3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:   return",
          "21: }",
          "23: do_execsql_test 1.0 {",
          "24:   CREATE TABLE t1(a, b);",
          "25:   CREATE TRIGGER tr1 AFTER INSERT ON t1 BEGIN",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: ifcapable windowfunc {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40: do_execsql_test 1.3 {",
          "41:   INSERT INTO t1 VALUES(1, 2);",
          "42: }",
          "44: #-------------------------------------------------------------------------",
          "45: reset_db",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44: } ;# windowfunc",
          "",
          "---------------"
        ],
        "test/autoindex5.test||test/autoindex5.test": [
          "File: test/autoindex5.test -> test/autoindex5.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "128: # Segfault due to multiple uses of the same subquery where the",
          "129: # subquery is implemented via coroutine.",
          "130: #",
          "131: sqlite3 db :memory:",
          "132: do_execsql_test 3.0 {",
          "133:   -- This is the original test case reported on the mailing list",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "131: ifcapable windowfunc {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "166:       AND (albums.id IN (1, 2)))",
          "167:   ));",
          "168: } {1 Ar}",
          "169: # The remaining test cases were discovered (by Dan) during trouble-shooting",
          "170: sqlite3 db :memory:",
          "171: do_execsql_test 3.1 {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "170: } ;# windowfunc",
          "",
          "---------------"
        ]
      }
    }
  ]
}