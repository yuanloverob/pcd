{
  "cve_id": "CVE-2017-13083",
  "cve_desc": "Akeo Consulting Rufus prior to version 2.17.1187 does not adequately validate the integrity of updates downloaded over HTTP, allowing an attacker to easily convince a user to execute arbitrary code",
  "repo": "pbatard/rufus",
  "patch_hash": "c3c39f7f8a11f612c4ebf7affce25ec6928eb1cb",
  "patch_info": {
    "commit_hash": "c3c39f7f8a11f612c4ebf7affce25ec6928eb1cb",
    "repo": "pbatard/rufus",
    "commit_url": "https://github.com/pbatard/rufus/commit/c3c39f7f8a11f612c4ebf7affce25ec6928eb1cb",
    "files": [
      "res/localization/rufus.loc",
      "src/pki.c",
      "src/rufus.rc",
      "src/stdlg.c"
    ],
    "message": "[pki] fix https://www.kb.cert.org/vuls/id/403768\n\n* This commit effectively fixes https://www.kb.cert.org/vuls/id/403768 (CVE-2017-13083) as\n  it is described per its revision 11, which is the latest revision at the time of this commit,\n  by disabling Windows prompts, enacted during signature validation, that allow the user to\n  bypass the intended signature verification checks.\n* It needs to be pointed out that the vulnerability (\"allow(ing) the use of a self-signed\n  certificate\"), which relies on the end-user actively ignoring a Windows prompt that tells\n  them that the update failed the signature validation whilst also advising against running it,\n  is being fully addressed, even as the update protocol remains HTTP.\n* It also need to be pointed out that the extended delay (48 hours) between the time the\n  vulnerability was reported and the moment it is fixed in our codebase has to do with\n  the fact that the reporter chose to deviate from standard security practices by not\n  disclosing the details of the vulnerability with us, be it publicly or privately,\n  before creating the cert.org report. The only advance notification we received was a\n  generic note about the use of HTTP vs HTTPS, which, as have established, is not\n  immediately relevant to addressing the reported vulnerability.\n* Closes #1009\n* Note: The other vulnerability scenario described towards the end of #1009, which\n  doesn't have to do with the \"lack of CA checking\", will be addressed separately.",
    "before_after_code_files": [
      "res/localization/rufus.loc||res/localization/rufus.loc",
      "src/pki.c||src/pki.c",
      "src/rufus.rc||src/rufus.rc",
      "src/stdlg.c||src/stdlg.c"
    ]
  },
  "patch_diff": {
    "res/localization/rufus.loc||res/localization/rufus.loc": [
      "File: res/localization/rufus.loc -> res/localization/rufus.loc",
      "--- Hunk 1 ---",
      "[Context before]",
      "487: # eg. \"Partitioning (MBR)...\"",
      "488: t MSG_238 \"Partitioning (%s)...\"",
      "489: t MSG_239 \"Deleting partitions...\"",
      "490: t MSG_241 \"Downloading: %0.1f%%\"",
      "491: t MSG_242 \"Failed to download file.\"",
      "492: t MSG_243 \"Checking for Rufus updates...\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "490: t MSG_240 \"The signature for the downloaded update can not be validated. This could mean that your \"",
      "491:  \"system is improperly configured for signature validation or indicate a malicious download.\\n\\n\"",
      "492:  \"The download will be deleted. Please check the log for more details.\"",
      "",
      "---------------"
    ],
    "src/pki.c||src/pki.c": [
      "File: src/pki.c -> src/pki.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "53:  static char error_string[64];",
      "54:  DWORD error_code = GetLastError();",
      "57:   return WindowsErrorString();",
      "59:  switch (error_code) {",
      "",
      "[Removed Lines]",
      "56:  if ((error_code >> 16) != 0x8009)",
      "",
      "[Added Lines]",
      "56:  if (((error_code >> 16) != 0x8009) && ((error_code >> 16) != 0x800B))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "113:   return \"Cannot complete usage check.\";",
      "114:  case CRYPT_E_NO_TRUSTED_SIGNER:",
      "115:   return \"None of the signers of the cryptographic message or certificate trust list is trusted.\";",
      "116:  default:",
      "117:   static_sprintf(error_string, \"Unknown PKI error 0x%08lX\", error_code);",
      "118:   return error_string;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "116:  case CERT_E_UNTRUSTEDROOT:",
      "117:   return \"The root certificate is not trusted.\";",
      "118:  case TRUST_E_NOSIGNATURE:",
      "119:   return \"Not digitally signed.\";",
      "120:  case TRUST_E_EXPLICIT_DISTRUST:",
      "121:   return \"One of the certificates used was marked as untrusted by the user.\";",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "268:  }",
      "270:  trust_data.cbStruct = sizeof(trust_data);",
      "273:  trust_data.fdwRevocationChecks = WTD_REVOKE_WHOLECHAIN;",
      "",
      "[Removed Lines]",
      "271:  trust_data.dwUIChoice = WTD_UI_ALL;",
      "",
      "[Added Lines]",
      "283:  trust_data.dwUIChoice = WTD_UI_NONE;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "279:  r = WinVerifyTrust(NULL, &guid_generic_verify, &trust_data);",
      "280:  safe_free(trust_file.pcwszFilePath);",
      "282:  return r;",
      "283: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "293:  switch (r) {",
      "294:  case ERROR_SUCCESS:",
      "295:   break;",
      "296:  case TRUST_E_NOSIGNATURE:",
      "298:   uprintf(\"PKI: File does not appear to be signed: %s\", WinPKIErrorString());",
      "299:   MessageBoxExU(hDlg, lmprintf(MSG_284), lmprintf(MSG_283), MB_OK | MB_ICONERROR | MB_IS_RTL, selected_langid);",
      "300:   break;",
      "301:  default:",
      "302:   uprintf(\"PKI: Failed to validate signature: %s\", WinPKIErrorString());",
      "303:   MessageBoxExU(hDlg, lmprintf(MSG_240), lmprintf(MSG_283), MB_OK | MB_ICONERROR | MB_IS_RTL, selected_langid);",
      "304:   break;",
      "305:  }",
      "",
      "---------------"
    ],
    "src/rufus.rc||src/rufus.rc": [
      "File: src/rufus.rc -> src/rufus.rc",
      "--- Hunk 1 ---",
      "[Context before]",
      "33: IDD_DIALOG DIALOGEX 12, 12, 242, 376",
      "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
      "35: EXSTYLE WS_EX_ACCEPTFILES",
      "37: FONT 8, \"Segoe UI Symbol\", 400, 0, 0x0",
      "38: BEGIN",
      "39:     LTEXT           \"Device\",IDS_DEVICE_TXT,9,6,200,8",
      "",
      "[Removed Lines]",
      "36: CAPTION \"Rufus 2.17.1186\"",
      "",
      "[Added Lines]",
      "36: CAPTION \"Rufus 2.17.1187\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "368: VS_VERSION_INFO VERSIONINFO",
      "371:  FILEFLAGSMASK 0x3fL",
      "372: #ifdef _DEBUG",
      "373:  FILEFLAGS 0x1L",
      "",
      "[Removed Lines]",
      "369:  FILEVERSION 2,17,1186,0",
      "370:  PRODUCTVERSION 2,17,1186,0",
      "",
      "[Added Lines]",
      "369:  FILEVERSION 2,17,1187,0",
      "370:  PRODUCTVERSION 2,17,1187,0",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "384:         BEGIN",
      "385:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
      "386:             VALUE \"FileDescription\", \"Rufus\"",
      "388:             VALUE \"InternalName\", \"Rufus\"",
      "389:             VALUE \"LegalCopyright\", \"\ufffd 2011-2017 Pete Batard (GPL v3)\"",
      "390:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
      "391:             VALUE \"OriginalFilename\", \"rufus.exe\"",
      "392:             VALUE \"ProductName\", \"Rufus\"",
      "394:         END",
      "395:     END",
      "396:     BLOCK \"VarFileInfo\"",
      "",
      "[Removed Lines]",
      "387:             VALUE \"FileVersion\", \"2.17.1186\"",
      "393:             VALUE \"ProductVersion\", \"2.17.1186\"",
      "",
      "[Added Lines]",
      "387:             VALUE \"FileVersion\", \"2.17.1187\"",
      "393:             VALUE \"ProductVersion\", \"2.17.1187\"",
      "",
      "---------------"
    ],
    "src/stdlg.c||src/stdlg.c": [
      "File: src/stdlg.c -> src/stdlg.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674:    case 2:  // Launch newer version and close this one",
      "1675:     Sleep(1000); // Add a delay on account of antivirus scanners",
      "1678:      break;",
      "1680:     memset(&si, 0, sizeof(si));",
      "1681:     memset(&pi, 0, sizeof(pi));",
      "",
      "[Removed Lines]",
      "1677:     if (ValidateSignature(hDlg, filepath) != NO_ERROR)",
      "",
      "[Added Lines]",
      "1677:     if (ValidateSignature(hDlg, filepath) != NO_ERROR) {",
      "1679:      _unlinkU(filepath);",
      "1680:      EnableWindow(GetDlgItem(hDlg, IDC_DOWNLOAD), FALSE);",
      "1682:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "61f46f7cdc1a5792e39068dc5b96520c7fb5f58d",
      "candidate_info": {
        "commit_hash": "61f46f7cdc1a5792e39068dc5b96520c7fb5f58d",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/61f46f7cdc1a5792e39068dc5b96520c7fb5f58d",
        "files": [
          "res/localization/ChangeLog.txt",
          "res/localization/rufus.loc",
          "src/rufus.rc"
        ],
        "message": "[loc] more translation updates for 3.0",
        "before_after_code_files": [
          "res/localization/rufus.loc||res/localization/rufus.loc",
          "src/rufus.rc||src/rufus.rc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "res/localization/rufus.loc||res/localization/rufus.loc",
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "res/localization/rufus.loc||res/localization/rufus.loc",
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "res/localization/rufus.loc||res/localization/rufus.loc": [
          "File: res/localization/rufus.loc -> res/localization/rufus.loc",
          "--- Hunk 1 ---",
          "[Context before]",
          "361: t MSG_150 \"Type of computer you plan to use this bootable drive with. It is up to YOU to find whether your target is of BIOS or UEFI type.\\n\"",
          "362:  \"Be mindful that CSM, which can be enabled or disabled on UEFI computers, means 'BIOS emulation', and is not really UEFI.\"",
          "363: # Note: You shouldn't translate 'Legacy Mode' below, as this is an option that usually appears in English in the UEFI settings.",
          "366: t MSG_153 \"Test pattern: 0x%02X\"",
          "367: t MSG_154 \"Test pattern: 0x%02X, 0x%02X\"",
          "368: t MSG_155 \"Test pattern: 0x%02X, 0x%02X, 0x%02X\"",
          "",
          "[Removed Lines]",
          "364: t MSG_151 \"Note: 'UEFI-CSM' means that the device will only boot in BIOS emulation mode (also known as 'Legacy Mode') under UEFI, and not in native UEFI mode.\"",
          "365: t MSG_152 \"Note: 'non CSM' means that the device will only boot in native UEFI mode, and not in BIOS emulation mode (also known as 'Legacy Mode').\"",
          "",
          "[Added Lines]",
          "364: t MSG_151 \"'UEFI-CSM' means that the device will only boot in BIOS emulation mode (also known as 'Legacy Mode') under UEFI, and not in native UEFI mode.\"",
          "365: t MSG_152 \"'non CSM' means that the device will only boot in native UEFI mode, and not in BIOS emulation mode (also known as 'Legacy Mode').\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5122: # Tooltips",
          "5123: t MSG_150 \"Type d'ordinateur avec lequel vous comptez utiliser ce disque d\u00e9marrable. Il est de VOTRE responsabilit\u00e9 de d\u00e9terminer s'il s'agit d'un type BIOS ou UEFI.\\n\"",
          "5124:  \"Veuillez noter que CSM, qui peut \u00eatre activ\u00e9 ou d\u00e9sactiv\u00e9 sur les machines de type UEFI, signifie '\u00e9mulation BIOS', et n'est pas vraiment UEFI.\"",
          "5127: t MSG_153 \"Motif de test : 0x%02X\"",
          "5128: t MSG_154 \"Motif de test : 0x%02X, 0x%02X\"",
          "5129: t MSG_155 \"Motif de test : 0x%02X, 0x%02X, 0x%02X\"",
          "",
          "[Removed Lines]",
          "5125: t MSG_151 \"Note: 'UEFI-CSM' signifie que le p\u00e9riph\u00e9rique d\u00e9marrera seulement en mode \u00e9mulation BIOS (i.e. 'Legacy Mode') sous UEFI, et non pas en mode UEFI natif.\"",
          "5126: t MSG_152 \"Note: 'non CSM' signifie que le p\u00e9riph\u00e9rique d\u00e9marrera seulement en mode UEFI natif, et non pas en mode \u00e9mulation BIOS (i.e. 'Legacy Mode').\"",
          "",
          "[Added Lines]",
          "5125: t MSG_151 \"'UEFI-CSM' signifie que le p\u00e9riph\u00e9rique d\u00e9marrera seulement en mode \u00e9mulation BIOS (i.e. 'Legacy Mode') sous UEFI, et non pas en mode UEFI natif.\"",
          "5126: t MSG_152 \"'non CSM' signifie que le p\u00e9riph\u00e9rique d\u00e9marrera seulement en mode UEFI natif, et non pas en mode \u00e9mulation BIOS (i.e. 'Legacy Mode').\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5270:  \"Veuillez s\u00e9lectionner le mode que vous souhaitez utiliser pour \u00e9crire cette image :\"",
          "5271: t MSG_276 \"Ecrire en mode %s (Recommand\u00e9)\"",
          "5272: t MSG_277 \"Ecrire en mode %s\"",
          "5274: t MSG_279 \"Non d\u00e9marrable\"",
          "5275: t MSG_280 \"Image disque ou ISO\"",
          "5276: t MSG_281 \"%s (Veuillez s\u00e9lectioner)\"",
          "",
          "[Removed Lines]",
          "5273: t MSG_278 \"Type de d\u00e9marrage\"",
          "",
          "[Added Lines]",
          "5273: t MSG_278 \"Recherche de processus en conflit...\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5300:  \"l'ex\u00e9cutable en cours.\\n\\nAfin de mitiger des scenarios d'attaque potentiels, le processus de mise \u00e0 jour a \u00e9t\u00e9 interrompu \"",
          "5301:  \"et le t\u00e9l\u00e9chargement va \u00eatre supprim\u00e9. Pour plus de d\u00e9tails, veuillez consulter le log.\"",
          "5302: t MSG_301 \"Affiche les param\u00e8tres de l'application\"",
          "5304: t MSG_303 \"Affiche le log\"",
          "5305: t MSG_304 \"Cr\u00e9e une image disque \u00e0 partir du p\u00e9riph\u00e9rique s\u00e9lectionn\u00e9\"",
          "5306: t MSG_305 \"Utilisez cette option pour indiquer si vous voulez utiliser ce p\u00e9riph\u00e9rique pour installer Windows sur un autre disque, \"",
          "",
          "[Removed Lines]",
          "5303: t MSG_302 \"Affiche les informations \u00e0 propos de cette application\"",
          "",
          "[Added Lines]",
          "5303: t MSG_302 \"Affiche des informations \u00e0 propos de cette application\"",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 232, 326",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 9, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Drive Properties\",IDS_DRIVE_PROPERTIES_TXT,8,6,53,12,NOT WS_GROUP",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 3.0.1222\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 3.0.1223\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "373: VS_VERSION_INFO VERSIONINFO",
          "376:  FILEFLAGSMASK 0x3fL",
          "377: #ifdef _DEBUG",
          "378:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "374:  FILEVERSION 2,18,1222,0",
          "375:  PRODUCTVERSION 2,18,1222,0",
          "",
          "[Added Lines]",
          "374:  FILEVERSION 2,18,1223,0",
          "375:  PRODUCTVERSION 2,18,1223,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "389:         BEGIN",
          "390:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
          "391:             VALUE \"FileDescription\", \"Rufus\"",
          "393:             VALUE \"InternalName\", \"Rufus\"",
          "394:             VALUE \"LegalCopyright\", \"\ufffd 2011-2018 Pete Batard (GPL v3)\"",
          "395:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
          "396:             VALUE \"OriginalFilename\", \"rufus.exe\"",
          "397:             VALUE \"ProductName\", \"Rufus\"",
          "399:         END",
          "400:     END",
          "401:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "392:             VALUE \"FileVersion\", \"2.18.1222\"",
          "398:             VALUE \"ProductVersion\", \"2.18.1222\"",
          "",
          "[Added Lines]",
          "392:             VALUE \"FileVersion\", \"2.18.1223\"",
          "398:             VALUE \"ProductVersion\", \"2.18.1223\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "be2f7342f70b64c59c1710e0d033f5b28650eaf9",
      "candidate_info": {
        "commit_hash": "be2f7342f70b64c59c1710e0d033f5b28650eaf9",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/be2f7342f70b64c59c1710e0d033f5b28650eaf9",
        "files": [
          "src/net.c",
          "src/pki.c",
          "src/rufus.rc"
        ],
        "message": "[net] force a disk flush after downloading a file\n\n* Also add a retry in PKI's GetSignatureName()\n* This should help with getting a \"The downloaded executable is\n  missing a digital signature\" message when launching an update.\n* Closes #1130",
        "before_after_code_files": [
          "src/net.c||src/net.c",
          "src/pki.c||src/pki.c",
          "src/rufus.rc||src/rufus.rc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/pki.c||src/pki.c",
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "src/pki.c||src/pki.c",
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "src/net.c||src/net.c": [
          "File: src/net.c -> src/net.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "221: {",
          "222:  HWND hProgressBar = NULL;",
          "223:  BOOL r = FALSE;",
          "226:  const char* accept_types[] = {\"*/*\\0\", NULL};",
          "227:  unsigned char buf[DOWNLOAD_BUFFER_SIZE];",
          "228:  char agent[64], hostname[64], urlpath[128];",
          "",
          "[Removed Lines]",
          "224:  DWORD dwFlags, dwSize, dwDownloaded, dwTotalSize;",
          "225:  FILE* fd = NULL;",
          "",
          "[Added Lines]",
          "224:  DWORD dwFlags, dwSize, dwWritten, dwDownloaded, dwTotalSize;",
          "225:  HANDLE hFile = INVALID_HANDLE_VALUE;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "318:  }",
          "319:  uprintf(\"File length: %d bytes\\n\", dwTotalSize);",
          "323:   uprintf(\"Unable to create file '%s': %s\\n\", &file[last_slash], WinInetErrorString());",
          "324:   goto out;",
          "325:  }",
          "",
          "[Removed Lines]",
          "321:  fd = fopenU(file, \"wb\");",
          "322:  if (fd == NULL) {",
          "",
          "[Added Lines]",
          "321:  hFile = CreateFileU(file, GENERIC_READ | GENERIC_WRITE, FILE_SHARE_READ, NULL, CREATE_ALWAYS, FILE_ATTRIBUTE_NORMAL, NULL);",
          "322:  if (hFile == INVALID_HANDLE_VALUE) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "335:   dwSize += dwDownloaded;",
          "336:   SendMessage(hProgressBar, PBM_SETPOS, (WPARAM)(MAX_PROGRESS*((1.0f*dwSize)/(1.0f*dwTotalSize))), 0);",
          "337:   PrintInfo(0, MSG_241, (100.0f*dwSize)/(1.0f*dwTotalSize));",
          "339:    uprintf(\"Error writing file '%s': %s\\n\", &file[last_slash], WinInetErrorString());",
          "340:    goto out;",
          "341:   }",
          "342:  }",
          "",
          "[Removed Lines]",
          "338:   if (fwrite(buf, 1, dwDownloaded, fd) != dwDownloaded) {",
          "",
          "[Added Lines]",
          "338:   if (!WriteFile(hFile, buf, dwDownloaded, &dwWritten, NULL)) {",
          "341:   } else if (dwDownloaded != dwWritten) {",
          "342:    uprintf(\"Error writing file '%s': Only %d/%d bytes written\\n\", dwWritten, dwDownloaded);",
          "343:    goto out;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "353: out:",
          "354:  if (hProgressDialog != NULL)",
          "355:   SendMessage(hProgressDialog, UM_PROGRESS_EXIT, (WPARAM)r, 0);",
          "357:  if (!r) {",
          "358:   if (file != NULL)",
          "359:    _unlinkU(file);",
          "",
          "[Removed Lines]",
          "356:  if (fd != NULL) fclose(fd);",
          "",
          "[Added Lines]",
          "359:  if (hFile != INVALID_HANDLE_VALUE) {",
          "361:   FlushFileBuffers(hFile);",
          "362:   CloseHandle(hFile);",
          "363:  }",
          "",
          "---------------"
        ],
        "src/pki.c||src/pki.c": [
          "File: src/pki.c -> src/pki.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "141:  static char szSubjectName[128];",
          "142:  char szCountry[3] = \"__\";",
          "143:  char *p = NULL, *mpath = NULL;",
          "144:  BOOL r;",
          "145:  HMODULE hm;",
          "146:  HCERTSTORE hStore = NULL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "144:  int i;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "174:  }",
          "183:  }",
          "186:  r = CryptMsgGetParam(hMsg, CMSG_SIGNER_INFO_PARAM, 0, NULL, &dwSignerInfo);",
          "",
          "[Removed Lines]",
          "177:  r = CryptQueryObject(CERT_QUERY_OBJECT_FILE, szFileName,",
          "178:   CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED_EMBED, CERT_QUERY_FORMAT_FLAG_BINARY,",
          "179:   0, &dwEncoding, &dwContentType, &dwFormatType, &hStore, &hMsg, NULL);",
          "180:  if (!r) {",
          "181:   uprintf(\"PKI: Failed to get signature for '%s': %s\", (path==NULL)?mpath:path, WinPKIErrorString());",
          "182:   goto out;",
          "",
          "[Added Lines]",
          "178:  for (i = 0; i < 5; i++) {",
          "179:   r = CryptQueryObject(CERT_QUERY_OBJECT_FILE, szFileName,",
          "180:    CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED_EMBED, CERT_QUERY_FORMAT_FLAG_BINARY,",
          "181:    0, &dwEncoding, &dwContentType, &dwFormatType, &hStore, &hMsg, NULL);",
          "182:   if (r)",
          "183:    break;",
          "184:   if (i == 0)",
          "185:    uprintf(\"PKI: Failed to get signature for '%s': %s\", (path==NULL)?mpath:path, WinPKIErrorString());",
          "186:   if (path == NULL)",
          "187:    break;",
          "188:   uprintf(\"PKI: Retrying...\");",
          "189:   Sleep(2000);",
          "191:  if (!r)",
          "192:   goto out;",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 232, 326",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 9, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Drive Properties\",IDS_DRIVE_PROPERTIES_TXT,8,6,53,12,NOT WS_GROUP",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 3.0.1278\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 3.0.1279\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "391: VS_VERSION_INFO VERSIONINFO",
          "394:  FILEFLAGSMASK 0x3fL",
          "395: #ifdef _DEBUG",
          "396:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "392:  FILEVERSION 3,0,1278,0",
          "393:  PRODUCTVERSION 3,0,1278,0",
          "",
          "[Added Lines]",
          "392:  FILEVERSION 3,0,1279,0",
          "393:  PRODUCTVERSION 3,0,1279,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "407:         BEGIN",
          "408:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
          "409:             VALUE \"FileDescription\", \"Rufus\"",
          "411:             VALUE \"InternalName\", \"Rufus\"",
          "412:             VALUE \"LegalCopyright\", \"\ufffd 2011-2018 Pete Batard (GPL v3)\"",
          "413:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
          "414:             VALUE \"OriginalFilename\", \"rufus.exe\"",
          "415:             VALUE \"ProductName\", \"Rufus\"",
          "417:         END",
          "418:     END",
          "419:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "410:             VALUE \"FileVersion\", \"3.0.1278\"",
          "416:             VALUE \"ProductVersion\", \"3.0.1278\"",
          "",
          "[Added Lines]",
          "410:             VALUE \"FileVersion\", \"3.0.1279\"",
          "416:             VALUE \"ProductVersion\", \"3.0.1279\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "90761165dec2aa5085ed7e338dc6c9babbb6365d",
      "candidate_info": {
        "commit_hash": "90761165dec2aa5085ed7e338dc6c9babbb6365d",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/90761165dec2aa5085ed7e338dc6c9babbb6365d",
        "files": [
          "res/localization/rufus.loc",
          "src/rufus.rc"
        ],
        "message": "[loc] update Polish translation to latest",
        "before_after_code_files": [
          "res/localization/rufus.loc||res/localization/rufus.loc",
          "src/rufus.rc||src/rufus.rc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "res/localization/rufus.loc||res/localization/rufus.loc",
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "res/localization/rufus.loc||res/localization/rufus.loc",
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "res/localization/rufus.loc||res/localization/rufus.loc": [
          "File: res/localization/rufus.loc -> res/localization/rufus.loc",
          "--- Hunk 1 ---",
          "[Context before]",
          "11779: ################################################################################",
          "11780: l \"pl-PL\" \"Polish (Polski)\" 0x0415",
          "11782: b \"en-US\"",
          "11783: # my info: 6.9.2015,22:39",
          "",
          "[Removed Lines]",
          "11781: v 1.0.21",
          "",
          "[Added Lines]",
          "11781: v 1.0.22",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "12259: t MSG_292 \"Prosz\u0119 wybra\u0107 wersj\u0119 Windowsa kt\u00f3r\u0105 chcesz zainstalowa\u0107:\"",
          "12260: t MSG_293 \"Niewspierana wersja Windowsa\"",
          "12261: t MSG_294 \"Ta wersja Windowsa nie jest ju\u017c wspierana przez Rufusa.\"",
          "12263: ################################################################################",
          "12264: l \"pt-BR\" \"Portuguese Brazilian (Portugu\u00eas do Brasil)\" 0x0416",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12262: t MSG_295 \"Uwaga: Nieoficjalna wersja\"",
          "12263: t MSG_296 \"Ta wersja Rufusa nie zosta\u0142a stworzona przez oficjalnego dewelopera(\u00f3w).\\n\\nCzy na pewno chcesz j\u0105 uruchomi\u0107?\"",
          "12264: t MSG_297 \"Wykryto obci\u0119te ISO\"",
          "12265: t MSG_298 \"Rozmiar pliku ISO kt\u00f3ry wybra\u0142e\u015b nie zgadza si\u0119 z jego deklarowanym rozmiarem: brakuje %s danych!\\n\\nJe\u017celi uzyska\u0142e\u015b ten plik \"",
          "12266:  \"z internetu, powiniene\u015b spr\u00f3bowa\u0107 pobra\u0107 now\u0105 kopi\u0119 oraz zweryfikowa\u0107, \u017ce sumy kontrolne MD5 lub SHA zgadzaj\u0105 si\u0119 \"",
          "12267:  \"z oficjalnymi.\\n\\nZauwa\u017c, \u017ce mo\u017cesz obliczy\u0107 sumy MD5 lub SHA w Rufusie klikaj\u0105c przycisk '#'.\"",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 242, 376",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 8, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Device\",IDS_DEVICE_TXT,9,6,200,8",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 2.16.1136\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 2.16.1137\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "368: VS_VERSION_INFO VERSIONINFO",
          "371:  FILEFLAGSMASK 0x3fL",
          "372: #ifdef _DEBUG",
          "373:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "369:  FILEVERSION 2,16,1136,0",
          "370:  PRODUCTVERSION 2,16,1136,0",
          "",
          "[Added Lines]",
          "369:  FILEVERSION 2,16,1137,0",
          "370:  PRODUCTVERSION 2,16,1137,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "384:         BEGIN",
          "385:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
          "386:             VALUE \"FileDescription\", \"Rufus\"",
          "388:             VALUE \"InternalName\", \"Rufus\"",
          "389:             VALUE \"LegalCopyright\", \"\ufffd 2011-2017 Pete Batard (GPL v3)\"",
          "390:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
          "391:             VALUE \"OriginalFilename\", \"rufus.exe\"",
          "392:             VALUE \"ProductName\", \"Rufus\"",
          "394:         END",
          "395:     END",
          "396:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "387:             VALUE \"FileVersion\", \"2.16.1136\"",
          "393:             VALUE \"ProductVersion\", \"2.16.1136\"",
          "",
          "[Added Lines]",
          "387:             VALUE \"FileVersion\", \"2.16.1137\"",
          "393:             VALUE \"ProductVersion\", \"2.16.1137\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "edcfd43ed550b17f23f9534f4b3b5cdd7fffdefc",
      "candidate_info": {
        "commit_hash": "edcfd43ed550b17f23f9534f4b3b5cdd7fffdefc",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/edcfd43ed550b17f23f9534f4b3b5cdd7fffdefc",
        "files": [
          "src/format.c",
          "src/libcdio/driver/_cdio_stdio.c",
          "src/libcdio/driver/_cdio_stream.c",
          "src/libcdio/driver/ds.c",
          "src/libcdio/driver/utf8.c",
          "src/libcdio/driver/util.c",
          "src/libcdio/iso9660/iso9660_fs.c",
          "src/libcdio/udf/udf_fs.c",
          "src/parser.c",
          "src/rufus.h",
          "src/rufus.rc",
          "src/stdlg.c",
          "src/syslinux/win/ntfssect.c"
        ],
        "message": "[misc] fix multiple VS Code Analysis warnings",
        "before_after_code_files": [
          "src/format.c||src/format.c",
          "src/libcdio/driver/_cdio_stdio.c||src/libcdio/driver/_cdio_stdio.c",
          "src/libcdio/driver/_cdio_stream.c||src/libcdio/driver/_cdio_stream.c",
          "src/libcdio/driver/ds.c||src/libcdio/driver/ds.c",
          "src/libcdio/driver/utf8.c||src/libcdio/driver/utf8.c",
          "src/libcdio/driver/util.c||src/libcdio/driver/util.c",
          "src/libcdio/iso9660/iso9660_fs.c||src/libcdio/iso9660/iso9660_fs.c",
          "src/libcdio/udf/udf_fs.c||src/libcdio/udf/udf_fs.c",
          "src/parser.c||src/parser.c",
          "src/rufus.h||src/rufus.h",
          "src/rufus.rc||src/rufus.rc",
          "src/stdlg.c||src/stdlg.c",
          "src/syslinux/win/ntfssect.c||src/syslinux/win/ntfssect.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/rufus.rc||src/rufus.rc",
            "src/stdlg.c||src/stdlg.c"
          ],
          "candidate": [
            "src/rufus.rc||src/rufus.rc",
            "src/stdlg.c||src/stdlg.c"
          ]
        }
      },
      "candidate_diff": {
        "src/format.c||src/format.c": [
          "File: src/format.c -> src/format.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "866:  AnalyzeMBR(hPhysicalDrive, \"Drive\");",
          "870:  buffer = (unsigned char*)_mm_malloc(SelectedDrive.SectorSize, 16);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "868:  if (SelectedDrive.SectorSize < 512)",
          "869:   goto out;",
          "",
          "---------------"
        ],
        "src/libcdio/driver/_cdio_stdio.c||src/libcdio/driver/_cdio_stdio.c": [
          "File: src/libcdio/driver/_cdio_stdio.c -> src/libcdio/driver/_cdio_stdio.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: #include <cdio/logging.h>",
          "46: #include <cdio/util.h>",
          "47: #include \"_cdio_stream.h\"",
          "48: #include \"_cdio_stdio.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48: #include \"_cdio_stdio.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "265:       return NULL;",
          "266:     }",
          "268:   ud = calloc (1, sizeof (_UserData));",
          "270:   ud->pathname = pathdup;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "269:   ud = calloc (1, sizeof (_UserData));",
          "",
          "---------------"
        ],
        "src/libcdio/driver/_cdio_stream.c||src/libcdio/driver/_cdio_stream.c": [
          "File: src/libcdio/driver/_cdio_stream.c -> src/libcdio/driver/_cdio_stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "99: {",
          "100:   CdioDataSource_t *new_obj;",
          "102:   new_obj = calloc (1, sizeof (CdioDataSource_t));",
          "104:   new_obj->user_data = user_data;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "102:   new_obj = calloc (1, sizeof (CdioDataSource_t));",
          "",
          "---------------"
        ],
        "src/libcdio/driver/ds.c||src/libcdio/driver/ds.c": [
          "File: src/libcdio/driver/ds.c -> src/libcdio/driver/ds.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "86:   cdio_assert (p_list != NULL);",
          "88:   p_new_node = calloc (1, sizeof (CdioListNode_t));",
          "90:   p_new_node->list = p_list;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "88:   p_new_node = calloc (1, sizeof (CdioListNode_t));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "109:     }",
          "110:   else",
          "111:     {",
          "112:       CdioListNode_t *p_new_node = calloc (1, sizeof (CdioListNode_t));",
          "114:       p_new_node->list = p_list;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "113:       CdioListNode_t *p_new_node = calloc (1, sizeof (CdioListNode_t));",
          "",
          "---------------"
        ],
        "src/libcdio/driver/utf8.c||src/libcdio/driver/utf8.c": [
          "File: src/libcdio/driver/utf8.c -> src/libcdio/driver/utf8.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: #include <cdio/utf8.h>",
          "44: #include <cdio/logging.h>",
          "45: #include <cdio/memory.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45: #include <cdio/memory.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "302:   len = wcslen(le_dst);",
          "304:   for (i=0; i<2*len; i++) {",
          "305:     (*dst)[i] = ((char*)le_dst)[i+1];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "333:   }",
          "336:   le_src = (wchar_t*)malloc(2*src_len+2);",
          "337:   for (i=0; i<src_len; i++) {",
          "338:     ((char*)le_src)[2*i] = src[2*i+1];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "338:   le_src = (wchar_t*)malloc(2*src_len+2);",
          "",
          "---------------"
        ],
        "src/libcdio/driver/util.c||src/libcdio/driver/util.c": [
          "File: src/libcdio/driver/util.c -> src/libcdio/driver/util.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "88:   cdio_assert (_str != NULL);",
          "90:   n = 1;",
          "92:   while(*p)",
          "93:     if (*(p++) == delim)",
          "94:       n++;",
          "99:   while((p = strtok(n ? NULL : _str, _delim)) != NULL)",
          "100:     strv[n++] = strdup(p);",
          "",
          "[Removed Lines]",
          "91:   p = _str;",
          "96:   strv = calloc (1, sizeof (char *) * (n+1));",
          "98:   n = 0;",
          "",
          "[Added Lines]",
          "91:   p = _str;",
          "96:   strv = calloc (n+1, sizeof (char *));",
          "97:   cdio_assert (strv != NULL);",
          "99:   n = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "112:   if (mem)",
          "113:     {",
          "114:       new_mem = calloc (1, count);",
          "115:       memcpy (new_mem, mem, count);",
          "116:     }",
          "118:   return new_mem;",
          "119: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "115:       new_mem = calloc (1, count);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "143:    so that they can be used with fopen(), stat(), etc.",
          "145: char *",
          "146: _cdio_strdup_fixpath (const char path[])",
          "147: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/libcdio/iso9660/iso9660_fs.c||src/libcdio/iso9660/iso9660_fs.c": [
          "File: src/libcdio/iso9660/iso9660_fs.c -> src/libcdio/iso9660/iso9660_fs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "960:   if (!splitpath[0])",
          "961:     {",
          "962:       unsigned int len=sizeof(iso9660_stat_t) + strlen(_root->filename)+1;",
          "963:       p_stat = calloc(1, len);",
          "964:       memcpy(p_stat, _root, len);",
          "965:       p_stat->rr.psz_symlink = calloc(1, p_stat->rr.i_symlink_max);",
          "966:       memcpy(p_stat->rr.psz_symlink, _root->rr.psz_symlink,",
          "967:       p_stat->rr.i_symlink_max);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "963:       p_stat = calloc(1, len);",
          "966:       p_stat->rr.psz_symlink = calloc(1, p_stat->rr.i_symlink_max);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1055:     {",
          "1056:       iso9660_stat_t *p_stat;",
          "1057:       unsigned int len=sizeof(iso9660_stat_t) + strlen(_root->filename)+1;",
          "1063:         }",
          "1064:       memcpy(p_stat, _root, len);",
          "1065:       p_stat->rr.psz_symlink = calloc(1, p_stat->rr.i_symlink_max);",
          "1066:       memcpy(p_stat->rr.psz_symlink, _root->rr.psz_symlink,",
          "1067:       p_stat->rr.i_symlink_max);",
          "",
          "[Removed Lines]",
          "1058:       p_stat = calloc(1, len);",
          "1059:       if (!p_stat)",
          "1060:         {",
          "1061:         cdio_warn(\"Couldn't calloc(1, %d)\", len);",
          "1062:         return NULL;",
          "",
          "[Added Lines]",
          "1060:       p_stat = calloc(1, len);",
          "1063:       p_stat->rr.psz_symlink = calloc(1, p_stat->rr.i_symlink_max);",
          "",
          "---------------"
        ],
        "src/libcdio/udf/udf_fs.c||src/libcdio/udf/udf_fs.c": [
          "File: src/libcdio/udf/udf_fs.c -> src/libcdio/udf/udf_fs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "256:     p_udf_root->p_udf->i_position = 0;",
          "258:     tokenline[udf_MAX_PATHLEN-1] = '\\0';",
          "259:     strncpy(tokenline, psz_name, udf_MAX_PATHLEN-1);",
          "260:     psz_token = strtok(tokenline, udf_PATH_DELIMITERS);",
          "261:     if (psz_token) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "258:     strncpy(tokenline, psz_name, udf_MAX_PATHLEN-1);",
          "",
          "---------------"
        ],
        "src/parser.c||src/parser.c": [
          "File: src/parser.c -> src/parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1256:    for(k=0; k<rep_len; k++)",
          "1257:     res[j++] = rep[k];",
          "1258:   } else {",
          "1259:    res[j++] = src[i];",
          "1260:   }",
          "1261:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1260: #if defined(_MSC_VER)",
          "1261: #pragma warning(suppress: 6386)",
          "1262: #endif",
          "",
          "---------------"
        ],
        "src/rufus.h||src/rufus.h": [
          "File: src/rufus.h -> src/rufus.h"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 242, 376",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 8, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Device\",IDS_DEVICE_TXT,9,6,200,8",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 2.13.1070\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 2.13.1071\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "336: VS_VERSION_INFO VERSIONINFO",
          "339:  FILEFLAGSMASK 0x3fL",
          "340: #ifdef _DEBUG",
          "341:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "337:  FILEVERSION 2,13,1070,0",
          "338:  PRODUCTVERSION 2,13,1070,0",
          "",
          "[Added Lines]",
          "337:  FILEVERSION 2,13,1071,0",
          "338:  PRODUCTVERSION 2,13,1071,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "352:         BEGIN",
          "353:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
          "354:             VALUE \"FileDescription\", \"Rufus\"",
          "356:             VALUE \"InternalName\", \"Rufus\"",
          "357:             VALUE \"LegalCopyright\", \"\ufffd 2011-2017 Pete Batard (GPL v3)\"",
          "358:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
          "359:             VALUE \"OriginalFilename\", \"rufus.exe\"",
          "360:             VALUE \"ProductName\", \"Rufus\"",
          "362:         END",
          "363:     END",
          "364:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "355:             VALUE \"FileVersion\", \"2.13.1070\"",
          "361:             VALUE \"ProductVersion\", \"2.13.1070\"",
          "",
          "[Added Lines]",
          "355:             VALUE \"FileVersion\", \"2.13.1071\"",
          "361:             VALUE \"ProductVersion\", \"2.13.1071\"",
          "",
          "---------------"
        ],
        "src/stdlg.c||src/stdlg.c": [
          "File: src/stdlg.c -> src/stdlg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "373:  j = _snprintf(&ext_string[j], ext_strlen-j, \"%s (*.*)\\r*.*\\r\", all_files);",
          "375:  for (i=0; i<ext_strlen; i++) {",
          "376:   if (ext_string[i] == '\\r') {",
          "377:    ext_string[i] = 0;",
          "378:   }",
          "379:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "377: #if defined(_MSC_VER)",
          "378: #pragma warning(suppress: 6385)",
          "379: #endif",
          "381: #if defined(_MSC_VER)",
          "382: #pragma warning(suppress: 6386)",
          "383: #endif",
          "",
          "---------------"
        ],
        "src/syslinux/win/ntfssect.c||src/syslinux/win/ntfssect.c": [
          "File: src/syslinux/win/ntfssect.c -> src/syslinux/win/ntfssect.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "151:       rc = NtfsSectGetVolumeHandle(VolumeName, VolumeInfo);",
          "152:       if (rc != ERROR_SUCCESS)",
          "153:         goto err_handle;",
          "154:     }",
          "156:     rc = NtfsSectLoadXpFuncs(&xp_funcs);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "154:       if ((VolumeInfo->Handle == NULL) || (VolumeInfo->Handle == INVALID_HANDLE_VALUE))",
          "155:         return ERROR_INVALID_HANDLE;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9815a180098cb850e74ce1f02dec4891dcce6ab1",
      "candidate_info": {
        "commit_hash": "9815a180098cb850e74ce1f02dec4891dcce6ab1",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/9815a180098cb850e74ce1f02dec4891dcce6ab1",
        "files": [
          "ChangeLog.txt",
          "src/rufus.c",
          "src/rufus.rc",
          "src/stdlg.c",
          "src/ui.h"
        ],
        "message": "[ui] fix tabbing order for the new UI design\n\n* Accessibility *IS* a thankless job...",
        "before_after_code_files": [
          "src/rufus.c||src/rufus.c",
          "src/rufus.rc||src/rufus.rc",
          "src/stdlg.c||src/stdlg.c",
          "src/ui.h||src/ui.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/rufus.rc||src/rufus.rc",
            "src/stdlg.c||src/stdlg.c"
          ],
          "candidate": [
            "src/rufus.rc||src/rufus.rc",
            "src/stdlg.c||src/stdlg.c"
          ]
        }
      },
      "candidate_diff": {
        "src/rufus.c||src/rufus.c": [
          "File: src/rufus.c -> src/rufus.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "784:  SendMessage(hMultiToolbar, TB_ENABLEBUTTON, (WPARAM)IDC_SETTINGS, (LPARAM)bEnable);",
          "791:  SetDlgItemTextU(hMainDialog, IDCANCEL, bEnable ? uppercase_close : uppercase_cancel);",
          "",
          "[Removed Lines]",
          "787:  SendMessage(hHashToolbar, TB_ENABLEBUTTON, (WPARAM)IDC_HASH,",
          "788:   (LPARAM)(bEnable && (bt == BT_IMAGE) && (image_path != NULL)));",
          "",
          "[Added Lines]",
          "787:  EnableWindow(hHashToolbar, bEnable && (bt == BT_IMAGE) && (image_path != NULL));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "794:  bEnable = (ComboBox_GetCurSel(hDeviceList) < 0) ? FALSE : bEnable;",
          "795:  EnableWindow(GetDlgItem(hMainDialog, IDC_IMAGE_OPTION), bEnable);",
          "799:  bEnable = ((bt == BT_IMAGE) && (image_path == NULL)) ? FALSE : bEnable;",
          "",
          "[Removed Lines]",
          "796:  SendMessage(hSaveToolbar, TB_ENABLEBUTTON, (WPARAM)IDC_SAVE, (LPARAM)bEnable);",
          "",
          "[Added Lines]",
          "795:  EnableWindow(hSaveToolbar, bEnable);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1213:  GetWindowRect(hAdvancedDeviceToolbar, &rc);",
          "1214:  MapWindowPoints(NULL, hMainDialog, (POINT*)&rc, 2);",
          "1215:  SendMessage(hAdvancedDeviceToolbar, TB_GETIDEALSIZE, (WPARAM)FALSE, (LPARAM)&sz);",
          "1219:  for (i = 0; i<ARRAYSIZE(advanced_device_move_ids); i++)",
          "",
          "[Removed Lines]",
          "1216:  SetWindowPos(hAdvancedDeviceToolbar, HWND_TOP, rc.left, rc.top, sz.cx, rc.bottom - rc.top, 0);",
          "",
          "[Added Lines]",
          "1215:  SetWindowPos(hAdvancedDeviceToolbar, hTargetSystem, rc.left, rc.top, sz.cx, rc.bottom - rc.top, 0);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1226:  GetWindowRect(hDeviceList, &rc);",
          "1227:  MapWindowPoints(NULL, hMainDialog, (POINT*)&rc, 2);",
          "1232:  ResizeDialogs(shift);",
          "",
          "[Removed Lines]",
          "1228:  SetWindowPos(hDeviceList, HWND_TOP, rc.left, rc.top,",
          "1229:   enable ? fw - ssw - sbw : fw, rc.bottom - rc.top, 0);",
          "",
          "[Added Lines]",
          "1227:  SetWindowPos(hDeviceList, HWND_TOP, rc.left, rc.top, enable ? fw - ssw - sbw : fw, rc.bottom - rc.top, 0);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1256:  GetWindowRect(hAdvancedFormatToolbar, &rc);",
          "1257:  MapWindowPoints(NULL, hMainDialog, (POINT*)&rc, 2);",
          "1258:  SendMessage(hAdvancedFormatToolbar, TB_GETIDEALSIZE, (WPARAM)FALSE, (LPARAM)&sz);",
          "1262:  for (i = 0; i<ARRAYSIZE(advanced_format_move_ids); i++)",
          "",
          "[Removed Lines]",
          "1259:  SetWindowPos(hAdvancedFormatToolbar, HWND_TOP, rc.left, rc.top, sz.cx, rc.bottom - rc.top, 0);",
          "",
          "[Added Lines]",
          "1257:  SetWindowPos(hAdvancedFormatToolbar, hClusterSize, rc.left, rc.top, sz.cx, rc.bottom - rc.top, 0);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1927:  else if (i16 >= 20)",
          "1928:   icon_offset = 10;",
          "1933:   0, 0, 0, 0, hMainDialog, (HMENU)IDC_SAVE_TOOLBAR, hMainInstance, NULL);",
          "1934:  hImageList = ImageList_Create(i16, i16, ILC_COLOR32 | ILC_HIGHQUALITYSCALE | ILC_MIRROR, 1, 0);",
          "1935:  buffer = GetResource(hMainInstance, MAKEINTRESOURCEA(IDI_SAVE_16 + icon_offset), _RT_RCDATA, \"save icon\", &bufsize, FALSE);",
          "",
          "[Removed Lines]",
          "1930:  hSaveToolbar = CreateWindowExW(0, TOOLBARCLASSNAME, NULL,",
          "1931:   WS_CHILD | WS_TABSTOP | WS_VISIBLE | WS_CLIPSIBLINGS | WS_CLIPCHILDREN | CCS_NOPARENTALIGN |",
          "1932:   CCS_NODIVIDER | TBSTYLE_BUTTON | TBSTYLE_TOOLTIPS | TBSTYLE_AUTOSIZE,",
          "",
          "[Added Lines]",
          "1928:  hSaveToolbar = CreateWindowEx(0, TOOLBARCLASSNAME, NULL, TOOLBAR_STYLE,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1945:  tbToolbarButtons[0].iBitmap = 0;",
          "1946:  SendMessage(hSaveToolbar, TB_ADDBUTTONS, (WPARAM)1, (LPARAM)&tbToolbarButtons);",
          "1951:   0, 0, 0, 0, hMainDialog, (HMENU)IDC_HASH_TOOLBAR, hMainInstance, NULL);",
          "1952:  hImageList = ImageList_Create(i16, i16, ILC_COLOR32 | ILC_HIGHQUALITYSCALE | ILC_MIRROR, 1, 0);",
          "1953:  buffer = GetResource(hMainInstance, MAKEINTRESOURCEA(IDI_HASH_16 + icon_offset), _RT_RCDATA, \"hash icon\", &bufsize, FALSE);",
          "",
          "[Removed Lines]",
          "1948:  hHashToolbar = CreateWindowExW(0, TOOLBARCLASSNAME, NULL,",
          "1949:   WS_CHILD | WS_TABSTOP | WS_VISIBLE | WS_CLIPSIBLINGS | WS_CLIPCHILDREN | CCS_NOPARENTALIGN |",
          "1950:   CCS_NODIVIDER | TBSTYLE_BUTTON | TBSTYLE_TOOLTIPS | TBSTYLE_AUTOSIZE,",
          "",
          "[Added Lines]",
          "1944:  hHashToolbar = CreateWindowEx(0, TOOLBARCLASSNAME, NULL, TOOLBAR_STYLE,",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2009:  memset(wtbtext, 0, sizeof(wtbtext));",
          "2010:  utf8_to_wchar_no_alloc(lmprintf((advanced_mode_device) ? MSG_122 : MSG_121, lmprintf(MSG_119)), wtbtext[0], ARRAYSIZE(wtbtext[0]));",
          "2014:   0, 0, 0, 0, hMainDialog, (HMENU)IDC_ADVANCED_DEVICE_TOOLBAR, hMainInstance, NULL);",
          "2015:  SendMessage(hAdvancedDeviceToolbar, CCM_SETVERSION, (WPARAM)6, 0);",
          "2016:  memset(tbToolbarButtons, 0, sizeof(TBBUTTON));",
          "",
          "[Removed Lines]",
          "2011:  hAdvancedDeviceToolbar = CreateWindowExW(0, TOOLBARCLASSNAME, NULL,",
          "2012:   WS_CHILD | WS_TABSTOP | WS_VISIBLE | WS_CLIPSIBLINGS | WS_CLIPCHILDREN | CCS_NOPARENTALIGN |",
          "2013:   CCS_NODIVIDER | TBSTYLE_FLAT | TBSTYLE_LIST | TBSTYLE_TRANSPARENT | TBSTYLE_TOOLTIPS | TBSTYLE_AUTOSIZE,",
          "",
          "[Added Lines]",
          "2005:  hAdvancedDeviceToolbar = CreateWindowEx(0, TOOLBARCLASSNAME, NULL, TOOLBAR_STYLE,",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2029:  if (sz.cx < 16)",
          "2030:   sz.cx = fw;",
          "2033:  utf8_to_wchar_no_alloc(lmprintf((advanced_mode_format) ? MSG_122 : MSG_121, lmprintf(MSG_120)), wtbtext[1], ARRAYSIZE(wtbtext[1]));",
          "2037:   0, 0, 0, 0, hMainDialog, (HMENU)IDC_ADVANCED_FORMAT_TOOLBAR, hMainInstance, NULL);",
          "2038:  SendMessage(hAdvancedFormatToolbar, CCM_SETVERSION, (WPARAM)6, 0);",
          "2039:  memset(tbToolbarButtons, 0, sizeof(TBBUTTON));",
          "",
          "[Removed Lines]",
          "2031:  SetWindowPos(hAdvancedDeviceToolbar, HWND_TOP, rc.left + toolbar_dx, rc.top, sz.cx, rc.bottom - rc.top, 0);",
          "2034:  hAdvancedFormatToolbar = CreateWindowExW(0, TOOLBARCLASSNAME, NULL,",
          "2035:   WS_CHILD | WS_TABSTOP | WS_VISIBLE | WS_CLIPSIBLINGS | WS_CLIPCHILDREN  | CCS_NOPARENTALIGN |",
          "2036:   CCS_NODIVIDER | TBSTYLE_FLAT | TBSTYLE_LIST | TBSTYLE_TRANSPARENT | TBSTYLE_TOOLTIPS | TBSTYLE_AUTOSIZE,",
          "",
          "[Added Lines]",
          "2023:  SetWindowPos(hAdvancedDeviceToolbar, hTargetSystem, rc.left + toolbar_dx, rc.top, sz.cx, rc.bottom - rc.top, 0);",
          "2026:  hAdvancedFormatToolbar = CreateWindowEx(0, TOOLBARCLASSNAME, NULL, TOOLBAR_STYLE,",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2050:  SendMessage(hAdvancedFormatToolbar, TB_GETIDEALSIZE, (WPARAM)FALSE, (LPARAM)&sz);",
          "2051:  if (sz.cx < 16)",
          "2052:   sz.cx = fw;",
          "2059:   0, 0, 0, 0, hMainDialog, (HMENU)IDC_MULTI_TOOLBAR, hMainInstance, NULL);",
          "2060:  hToolbarImageList = ImageList_Create(i16, i16, ILC_COLOR32 | ILC_HIGHQUALITYSCALE, 8, 0);",
          "2061:  for (i = 0; i < ARRAYSIZE(multitoolbar_icons); i++) {",
          "",
          "[Removed Lines]",
          "2053:  SetWindowPos(hAdvancedFormatToolbar, HWND_TOP, rc.left + toolbar_dx, rc.top, sz.cx, rc.bottom - rc.top, 0);",
          "2056:  hMultiToolbar = CreateWindowExW(0, TOOLBARCLASSNAME, NULL,",
          "2057:   WS_CHILD | WS_TABSTOP | WS_VISIBLE | WS_CLIPSIBLINGS | WS_CLIPCHILDREN | CCS_NOPARENTALIGN |",
          "2058:   CCS_NODIVIDER | TBSTYLE_FLAT | TBSTYLE_LIST | TBSTYLE_TRANSPARENT | TBSTYLE_TOOLTIPS | TBSTYLE_AUTOSIZE,",
          "",
          "[Added Lines]",
          "2043:  SetWindowPos(hAdvancedFormatToolbar, hClusterSize, rc.left + toolbar_dx, rc.top, sz.cx, rc.bottom - rc.top, 0);",
          "2046:  hMultiToolbar = CreateWindowEx(0, TOOLBARCLASSNAME, NULL, TOOLBAR_STYLE,",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2294: static void PositionControls(HWND hDlg)",
          "2295: {",
          "2296:  RECT rc;",
          "2298:  SIZE sz;",
          "2299:  int i, x, button_fudge = 2;",
          "",
          "[Removed Lines]",
          "2297:  HWND hCtrl;",
          "",
          "[Added Lines]",
          "2285:  HWND hCtrl, hPrevCtrl;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2313:  hCtrl = GetDlgItem(hDlg, IDC_LABEL);",
          "2314:  GetWindowRect(hCtrl, &rc);",
          "2315:  MapWindowPoints(NULL, hDlg, (POINT*)&rc, 2);",
          "2317:  GetWindowRect(hProgress, &rc);",
          "2318:  MapWindowPoints(NULL, hDlg, (POINT*)&rc, 2);",
          "2322:  hCtrl = GetDlgItem(hDlg, IDS_BOOT_SELECTION_TXT);",
          "",
          "[Removed Lines]",
          "2316:  SetWindowPos(hCtrl, NULL, rc.left, rc.top, rc.right - rc.left, ddh, SWP_NOZORDER);",
          "2319:  SetWindowPos(hProgress, NULL, rc.left, rc.top, rc.right - rc.left, ddh, SWP_NOZORDER);",
          "",
          "[Added Lines]",
          "2304:  SetWindowPos(hCtrl, hAdvancedFormatToolbar, rc.left, rc.top, rc.right - rc.left, ddh, SWP_NOZORDER);",
          "2307:  SetWindowPos(hProgress, hNBPasses, rc.left, rc.top, rc.right - rc.left, ddh, SWP_NOZORDER);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2369:  SendMessage(hMultiToolbar, TB_GETIDEALSIZE, (WPARAM)FALSE, (LPARAM)&sz);",
          "2370:  GetWindowRect(GetDlgItem(hDlg, IDC_ABOUT), &rc);",
          "2371:  MapWindowPoints(NULL, hDlg, (POINT*)&rc, 2);",
          "2375:  for (i = 0; i < ARRAYSIZE(main_button_ids); i++) {",
          "",
          "[Removed Lines]",
          "2372:  SetWindowPos(hMultiToolbar, HWND_TOP, rc.left, rc.top, sz.cx, ddbh, 0);",
          "",
          "[Added Lines]",
          "2360:  SetWindowPos(hMultiToolbar, hProgress, rc.left, rc.top, sz.cx, ddbh, 0);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2379:   x = mw + fw - bw;",
          "2380:   if (i % 2 == 1)",
          "2381:    x -= bw + ssw;",
          "2383:  }",
          "",
          "[Removed Lines]",
          "2382:   SetWindowPos(hCtrl, HWND_TOP, x, rc.top, bw, ddbh, 0);",
          "",
          "[Added Lines]",
          "2370:   hPrevCtrl = GetNextWindow(hCtrl, GW_HWNDPREV);",
          "2371:   SetWindowPos(hCtrl, hPrevCtrl, x, rc.top, bw, ddbh, 0);",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2388:  MapWindowPoints(NULL, hDlg, (POINT*)&rc, 2);",
          "2389:  SendMessage(hSaveToolbar, TB_GETIDEALSIZE, (WPARAM)FALSE, (LPARAM)&sz);",
          "2390:  SendMessage(hSaveToolbar, TB_SETBUTTONSIZE, 0, MAKELPARAM(sz.cx, ddbh));",
          "2394:  hCtrl = GetDlgItem(hDlg, IDC_HASH);",
          "",
          "[Removed Lines]",
          "2391:  SetWindowPos(hSaveToolbar, HWND_TOP, mw + fw - sbw, rc.top, sbw, ddbh, 0);",
          "",
          "[Added Lines]",
          "2380:  SetWindowPos(hSaveToolbar, hDeviceList, mw + fw - sbw, rc.top, sbw, ddbh, 0);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "2396:  MapWindowPoints(NULL, hDlg, (POINT*)&rc, 2);",
          "2397:  SendMessage(hHashToolbar, TB_GETIDEALSIZE, (WPARAM)FALSE, (LPARAM)&sz);",
          "2398:  SendMessage(hHashToolbar, TB_SETBUTTONSIZE, 0, MAKELPARAM(sz.cx, ddbh));",
          "2402:  hCtrl = GetDlgItem(hDlg, IDS_CSM_HELP_TXT);",
          "2403:  GetWindowRect(hCtrl, &rc);",
          "2404:  MapWindowPoints(NULL, hDlg, (POINT*)&rc, 2);",
          "2407:  if (advanced_mode_device) {",
          "",
          "[Removed Lines]",
          "2399:  SetWindowPos(hHashToolbar, HWND_TOP, mw + bsw + ssw, rc.top, sz.cx, ddbh, 0);",
          "2405:  SetWindowPos(hCtrl, HWND_TOP, mw + fw + tw, rc.top, sbw, rc.bottom - rc.top, 0);",
          "",
          "[Added Lines]",
          "2388:  SetWindowPos(hHashToolbar, hBootType, mw + bsw + ssw, rc.top, sz.cx, ddbh, 0);",
          "2394:  SetWindowPos(hCtrl, hTargetSystem, mw + fw + tw, rc.top, sbw, rc.bottom - rc.top, 0);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2416:   hCtrl = GetDlgItem(hDlg, full_width_controls[i]);",
          "2417:   GetWindowRect(hCtrl, &rc);",
          "2418:   MapWindowPoints(NULL, hDlg, (POINT*)&rc, 2);",
          "2420:  }",
          "",
          "[Removed Lines]",
          "2419:   SetWindowPos(hCtrl, HWND_TOP, rc.left, rc.top, fw, rc.bottom - rc.top, 0);",
          "",
          "[Added Lines]",
          "2408:   hPrevCtrl = GetNextWindow(hCtrl, GW_HWNDPREV);",
          "2409:   SetWindowPos(hCtrl, hPrevCtrl, rc.left, rc.top, fw, rc.bottom - rc.top, 0);",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "2426:   MapWindowPoints(NULL, hDlg, (POINT*)&rc, 2);",
          "2430:    (i <2) ? hw + sw : hw, rc.bottom - rc.top, 0);",
          "2431:  }",
          "",
          "[Removed Lines]",
          "2429:   SetWindowPos(hCtrl, HWND_TOP, (i < 5) ? rc.left : mw + hw + sw, rc.top,",
          "",
          "[Added Lines]",
          "2419:   hPrevCtrl = GetNextWindow(hCtrl, GW_HWNDPREV);",
          "2420:   SetWindowPos(hCtrl, hPrevCtrl, (i < 5) ? rc.left : mw + hw + sw, rc.top,",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "2434:  hCtrl = GetDlgItem(hDlg, IDC_BOOT_SELECTION);",
          "2435:  GetWindowRect(hCtrl, &rc);",
          "2436:  MapWindowPoints(NULL, hDlg, (POINT*)&rc, 2);",
          "2438: }",
          "",
          "[Removed Lines]",
          "2437:  SetWindowPos(hCtrl, HWND_TOP, rc.left, rc.top, bsw, rc.bottom - rc.top, 0);",
          "",
          "[Added Lines]",
          "2428:  hPrevCtrl = GetNextWindow(hCtrl, GW_HWNDPREV);",
          "2429:  SetWindowPos(hCtrl, hPrevCtrl, rc.left, rc.top, bsw, rc.bottom - rc.top, 0);",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "2443:  static int ddy = 4;",
          "2444:  int i, j;",
          "2445:  RECT rc;",
          "2447:  int dy = 0;",
          "2449:  if (fScale >= 1.3f)",
          "",
          "[Removed Lines]",
          "2446:  HWND hCtrl;",
          "",
          "[Added Lines]",
          "2438:  HWND hCtrl, hPrevCtrl;",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "2462:    hCtrl = GetDlgItem(hDlg, adjust_dpi_ids[i][j]);",
          "2463:    GetWindowRect(hCtrl, &rc);",
          "2464:    MapWindowPoints(NULL, hDlg, (POINT*)&rc, 2);",
          "2466:     rc.right - rc.left, rc.bottom - rc.top, 0);",
          "2467:   }",
          "2468:  }",
          "",
          "[Removed Lines]",
          "2465:    SetWindowPos(hCtrl, HWND_TOP, rc.left, rc.top + dy,",
          "",
          "[Added Lines]",
          "2457:    hPrevCtrl = GetNextWindow(hCtrl, GW_HWNDPREV);",
          "2458:    SetWindowPos(hCtrl, hPrevCtrl, rc.left, rc.top + dy,",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 232, 326",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 9, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Drive Properties\",IDS_DRIVE_PROPERTIES_TXT,8,6,53,12,NOT WS_GROUP",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 3.0.1275\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 3.0.1276\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "391: VS_VERSION_INFO VERSIONINFO",
          "394:  FILEFLAGSMASK 0x3fL",
          "395: #ifdef _DEBUG",
          "396:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "392:  FILEVERSION 3,0,1275,0",
          "393:  PRODUCTVERSION 3,0,1275,0",
          "",
          "[Added Lines]",
          "392:  FILEVERSION 3,0,1276,0",
          "393:  PRODUCTVERSION 3,0,1276,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "407:         BEGIN",
          "408:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
          "409:             VALUE \"FileDescription\", \"Rufus\"",
          "411:             VALUE \"InternalName\", \"Rufus\"",
          "412:             VALUE \"LegalCopyright\", \"\ufffd 2011-2018 Pete Batard (GPL v3)\"",
          "413:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
          "414:             VALUE \"OriginalFilename\", \"rufus.exe\"",
          "415:             VALUE \"ProductName\", \"Rufus\"",
          "417:         END",
          "418:     END",
          "419:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "410:             VALUE \"FileVersion\", \"3.0.1275\"",
          "416:             VALUE \"ProductVersion\", \"3.0.1275\"",
          "",
          "[Added Lines]",
          "410:             VALUE \"FileVersion\", \"3.0.1276\"",
          "416:             VALUE \"ProductVersion\", \"3.0.1276\"",
          "",
          "---------------"
        ],
        "src/stdlg.c||src/stdlg.c": [
          "File: src/stdlg.c -> src/stdlg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "407:  HFONT hFont;",
          "411:   CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, hMainDialog,",
          "412:   (HMENU)IDC_STATUS, hMainInstance, NULL);",
          "",
          "[Removed Lines]",
          "410:  hStatus = CreateWindowExW(0, STATUSCLASSNAME, NULL, WS_CHILD | WS_VISIBLE | SBARS_TOOLTIPS,",
          "",
          "[Added Lines]",
          "410:  hStatus = CreateWindowEx(0, STATUSCLASSNAME, NULL, WS_CHILD | WS_VISIBLE | SBARS_TOOLTIPS,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "491: void ResizeButtonHeight(HWND hDlg, int id)",
          "492: {",
          "494:  RECT rc;",
          "495:  int dy = 0;",
          "",
          "[Removed Lines]",
          "493:  HWND hCtrl;",
          "",
          "[Added Lines]",
          "493:  HWND hCtrl, hPrevCtrl;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "499:  MapWindowPoints(NULL, hDlg, (POINT*)&rc, 2);",
          "500:  if (rc.bottom - rc.top < bh)",
          "501:   dy = (bh - (rc.bottom - rc.top)) / 2;",
          "503: }",
          "",
          "[Removed Lines]",
          "502:  SetWindowPos(hCtrl, HWND_TOP, rc.left, rc.top - dy, rc.right - rc.left, bh, 0);",
          "",
          "[Added Lines]",
          "502:  hPrevCtrl = GetNextWindow(hCtrl, GW_HWNDPREV);",
          "503:  SetWindowPos(hCtrl, hPrevCtrl, rc.left, rc.top - dy, rc.right - rc.left, bh, 0);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1112:  }",
          "1116:   TOOLTIPS_CLASS, NULL, WS_POPUP | TTS_NOPREFIX | TTS_ALWAYSTIP,",
          "1117:   CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, hMainDialog, NULL,",
          "1118:   hMainInstance, NULL);",
          "",
          "[Removed Lines]",
          "1115:  ttlist[i].hTip = CreateWindowExW(right_to_left_mode ? WS_EX_LAYOUTRTL : 0,",
          "",
          "[Added Lines]",
          "1116:  ttlist[i].hTip = CreateWindowEx(right_to_left_mode ? WS_EX_LAYOUTRTL : 0,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1265: static void PositionControls(HWND hDlg)",
          "1266: {",
          "1267:  RECT rc;",
          "1269:  int i, ow, dw; // original width, delta",
          "",
          "[Removed Lines]",
          "1268:  HWND hCtrl;",
          "",
          "[Added Lines]",
          "1269:  HWND hCtrl, hPrevCtrl;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1320:  hCtrl = GetDlgItem(hDlg, IDC_CHECK_NOW);",
          "1321:  GetWindowRect(hCtrl, &rc);",
          "1322:  MapWindowPoints(NULL, hDlg, (POINT*)&rc, 2);",
          "1324:  hCtrl = GetDlgItem(hDlg, IDCANCEL);",
          "1325:  GetWindowRect(hCtrl, &rc);",
          "1326:  MapWindowPoints(NULL, hDlg, (POINT*)&rc, 2);",
          "1328: }",
          "",
          "[Removed Lines]",
          "1323:  SetWindowPos(hCtrl, HWND_TOP, rc.left, rc.top, rc.right - rc.left, ddbh, 0);",
          "1327:  SetWindowPos(hCtrl, HWND_TOP, rc.left, rc.top, rc.right - rc.left, ddbh, 0);",
          "",
          "[Added Lines]",
          "1324:  hPrevCtrl = GetNextWindow(hCtrl, GW_HWNDPREV);",
          "1325:  SetWindowPos(hCtrl, hPrevCtrl, rc.left, rc.top, rc.right - rc.left, ddbh, 0);",
          "1329:  hPrevCtrl = GetNextWindow(hCtrl, GW_HWNDPREV);",
          "1330:  SetWindowPos(hCtrl, hPrevCtrl, rc.left, rc.top, rc.right - rc.left, ddbh, 0);",
          "",
          "---------------"
        ],
        "src/ui.h||src/ui.h": [
          "File: src/ui.h -> src/ui.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #define TOOLBAR_ICON_COLOR     RGB(0x29, 0x80, 0xB9)",
          "37: static int section_control_ids[] = {",
          "38:  IDS_DRIVE_PROPERTIES_TXT,",
          "39:  IDS_FORMAT_OPTIONS_TXT,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38: #define TOOLBAR_STYLE      ( WS_CHILD | WS_TABSTOP | WS_VISIBLE | \\",
          "39:              WS_CLIPSIBLINGS | WS_CLIPCHILDREN  | \\",
          "40:              CCS_NOPARENTALIGN | CCS_NODIVIDER  | \\",
          "41:              TBSTYLE_FLAT | TBSTYLE_BUTTON      | \\",
          "42:              TBSTYLE_AUTOSIZE | TBSTYLE_LIST    | \\",
          "43:              TBSTYLE_TOOLTIPS )",
          "",
          "---------------"
        ]
      }
    }
  ]
}