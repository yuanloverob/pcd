{
  "cve_id": "CVE-2015-8733",
  "cve_desc": "The ngsniffer_process_record function in wiretap/ngsniffer.c in the Sniffer file parser in Wireshark 1.12.x before 1.12.9 and 2.0.x before 2.0.1 does not validate the relationships between record lengths and record header lengths, which allows remote attackers to cause a denial of service (out-of-bounds read and application crash) via a crafted file.",
  "repo": "wireshark/wireshark",
  "patch_hash": "53a3e53fce30523d11ab3df319fba7b75d63076f",
  "patch_info": {
    "commit_hash": "53a3e53fce30523d11ab3df319fba7b75d63076f",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/53a3e53fce30523d11ab3df319fba7b75d63076f",
    "files": [
      "wiretap/ngsniffer.c"
    ],
    "message": "Add bounds checks and fix a length argument.\n\nBefore reading the record header of a REC_FRAME{2,4,6} record, make sure\nthe record length is >= the length of that header.\n\nWhe calling fix_pseudo_header(), pass the actual length of the packet\ndata, not the remaining length of the record (which may include\npadding), so we don't read past the end of the packet data.\n\nBug: 11827\nChange-Id: I1c63a4cb014c4616ffdd202660e68c576f266872\nReviewed-on: https://code.wireshark.org/review/12756\nReviewed-by: Guy Harris <guy@alum.mit.edu>",
    "before_after_code_files": [
      "wiretap/ngsniffer.c||wiretap/ngsniffer.c"
    ]
  },
  "patch_diff": {
    "wiretap/ngsniffer.c||wiretap/ngsniffer.c": [
      "File: wiretap/ngsniffer.c -> wiretap/ngsniffer.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1130:  ngsniffer_t *ngsniffer;",
      "1131:  char record_type[2];",
      "1134:  struct frame2_rec frame2;",
      "1135:  struct frame4_rec frame4;",
      "1136:  struct frame6_rec frame6;",
      "",
      "[Removed Lines]",
      "1133:  guint16 type, length;",
      "",
      "[Added Lines]",
      "1133:  guint type, length;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1166:    return -1;",
      "1167:   }",
      "1170:   if (!ng_read_bytes(wth, &frame2, (unsigned int)sizeof frame2,",
      "1171:      is_random, err, err_info))",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1170:   if (length < sizeof frame2) {",
      "1173:    return -1;",
      "1174:   }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1193:    return -1;",
      "1194:   }",
      "1197:   if (!ng_read_bytes(wth, &frame4, (unsigned int)sizeof frame4,",
      "1198:       is_random, err, err_info))",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1210:   if (ngsniffer->maj_vers < 5 && ngsniffer->min_vers >= 95)",
      "1211:    length += sizeof frame4 - sizeof frame2;",
      "1214:   if (length < sizeof frame4) {",
      "1217:    return -1;",
      "1218:   }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1204:   size = pletoh16(&frame4.size);",
      "1205:   true_size = pletoh16(&frame4.true_size);",
      "1221:   set_pseudo_header_frame4(&phdr->pseudo_header, &frame4);",
      "1222:   break;",
      "1224:  case REC_FRAME6:",
      "1226:   if (!ng_read_bytes(wth, &frame6, (unsigned int)sizeof frame6,",
      "1227:       is_random, err, err_info))",
      "",
      "[Removed Lines]",
      "1212:   if (ngsniffer->maj_vers >= 5)",
      "1214:   else {",
      "1215:    if (ngsniffer->min_vers >= 95)",
      "1216:     length -= sizeof frame2;",
      "1217:    else",
      "1218:     length -= sizeof frame4;",
      "1219:   }",
      "",
      "[Added Lines]",
      "1238:   if (length < sizeof frame6) {",
      "1241:    return -1;",
      "1242:   }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1297:   return -1;",
      "1299:  phdr->pkt_encap = fix_pseudo_header(wth->file_encap,",
      "",
      "[Removed Lines]",
      "1300:      buf, length, &phdr->pseudo_header);",
      "",
      "[Added Lines]",
      "1319:      buf, size, &phdr->pseudo_header);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3a3ddbd43eaa5ac3b90d938a641f02cd2266bdf4",
      "candidate_info": {
        "commit_hash": "3a3ddbd43eaa5ac3b90d938a641f02cd2266bdf4",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/3a3ddbd43eaa5ac3b90d938a641f02cd2266bdf4",
        "files": [
          "wiretap/ngsniffer.c"
        ],
        "message": "Add bounds checks and fix a length argument.\n\nBefore reading the record header of a REC_FRAME{2,4,6} record, make sure\nthe record length is >= the length of that header.\n\nWhe calling fix_pseudo_header(), pass the actual length of the packet\ndata, not the remaining length of the record (which may include\npadding), so we don't read past the end of the packet data.\n\nBug: 11827\nChange-Id: I1c63a4cb014c4616ffdd202660e68c576f266872\nReviewed-on: https://code.wireshark.org/review/12756\nReviewed-by: Guy Harris <guy@alum.mit.edu>\n(cherry picked from commit 53a3e53fce30523d11ab3df319fba7b75d63076f)\nReviewed-on: https://code.wireshark.org/review/12758",
        "before_after_code_files": [
          "wiretap/ngsniffer.c||wiretap/ngsniffer.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "wiretap/ngsniffer.c||wiretap/ngsniffer.c"
          ],
          "candidate": [
            "wiretap/ngsniffer.c||wiretap/ngsniffer.c"
          ]
        }
      },
      "candidate_diff": {
        "wiretap/ngsniffer.c||wiretap/ngsniffer.c": [
          "File: wiretap/ngsniffer.c -> wiretap/ngsniffer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1170:  gint64 bytes_read;",
          "1171:  char record_type[2];",
          "1174:  struct frame2_rec frame2;",
          "1175:  struct frame4_rec frame4;",
          "1176:  struct frame6_rec frame6;",
          "",
          "[Removed Lines]",
          "1173:  guint16 type, length;",
          "",
          "[Added Lines]",
          "1173:  guint type, length;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1217:    return -1;",
          "1218:   }",
          "1221:   bytes_read = ng_file_read(&frame2, (unsigned int)sizeof frame2,",
          "1222:      wth, is_random, err, err_info);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1221:   if (length < sizeof frame2) {",
          "1224:    return -1;",
          "1225:   }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1248:    return -1;",
          "1249:   }",
          "1252:   bytes_read = ng_file_read(&frame4, (unsigned int)sizeof frame4,",
          "1253:       wth, is_random, err, err_info);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1265:   if (ngsniffer->maj_vers < 5 && ngsniffer->min_vers >= 95)",
          "1266:    length += sizeof frame4 - sizeof frame2;",
          "1269:   if (length < sizeof frame4) {",
          "1272:    return -1;",
          "1273:   }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1263:   size = pletoh16(&frame4.size);",
          "1264:   true_size = pletoh16(&frame4.true_size);",
          "1280:   set_pseudo_header_frame4(&phdr->pseudo_header, &frame4);",
          "1281:   break;",
          "1283:  case REC_FRAME6:",
          "1285:   bytes_read = ng_file_read(&frame6, (unsigned int)sizeof frame6,",
          "1286:       wth, is_random, err, err_info);",
          "",
          "[Removed Lines]",
          "1271:   if (ngsniffer->maj_vers >= 5)",
          "1273:   else {",
          "1274:    if (ngsniffer->min_vers >= 95)",
          "1275:     length -= sizeof frame2;",
          "1276:    else",
          "1277:     length -= sizeof frame4;",
          "1278:   }",
          "",
          "[Added Lines]",
          "1297:   if (length < sizeof frame6) {",
          "1300:    return -1;",
          "1301:   }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1364:  }",
          "1366:  phdr->pkt_encap = fix_pseudo_header(wth->file_encap,",
          "",
          "[Removed Lines]",
          "1367:      buf, length, &phdr->pseudo_header);",
          "",
          "[Added Lines]",
          "1386:      buf, size, &phdr->pseudo_header);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "51e6114bc224953db555957a6c8c446eb3b1913d",
      "candidate_info": {
        "commit_hash": "51e6114bc224953db555957a6c8c446eb3b1913d",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/51e6114bc224953db555957a6c8c446eb3b1913d",
        "files": [
          "wiretap/ngsniffer.c"
        ],
        "message": "Add bounds checks and fix a length argument.\n\nBefore reading the record header of a REC_FRAME{2,4,6} record, make sure\nthe record length is >= the length of that header.\n\nWhe calling fix_pseudo_header(), pass the actual length of the packet\ndata, not the remaining length of the record (which may include\npadding), so we don't read past the end of the packet data.\n\nBug: 11827\nChange-Id: I1c63a4cb014c4616ffdd202660e68c576f266872\nReviewed-on: https://code.wireshark.org/review/12756\nReviewed-by: Guy Harris <guy@alum.mit.edu>\n(cherry picked from commit 53a3e53fce30523d11ab3df319fba7b75d63076f)\nReviewed-on: https://code.wireshark.org/review/12758\n(cherry picked from commit 3a3ddbd43eaa5ac3b90d938a641f02cd2266bdf4)\nReviewed-on: https://code.wireshark.org/review/13774\nReviewed-by: Balint Reczey <balint@balintreczey.hu>",
        "before_after_code_files": [
          "wiretap/ngsniffer.c||wiretap/ngsniffer.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "wiretap/ngsniffer.c||wiretap/ngsniffer.c"
          ],
          "candidate": [
            "wiretap/ngsniffer.c||wiretap/ngsniffer.c"
          ]
        }
      },
      "candidate_diff": {
        "wiretap/ngsniffer.c||wiretap/ngsniffer.c": [
          "File: wiretap/ngsniffer.c -> wiretap/ngsniffer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1171:  gint64 bytes_read;",
          "1172:  char record_type[2];",
          "1175:  struct frame2_rec frame2;",
          "1176:  struct frame4_rec frame4;",
          "1177:  struct frame6_rec frame6;",
          "",
          "[Removed Lines]",
          "1174:  guint16 type, length;",
          "",
          "[Added Lines]",
          "1174:  guint type, length;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1218:    return -1;",
          "1219:   }",
          "1222:   bytes_read = ng_file_read(&frame2, (unsigned int)sizeof frame2,",
          "1223:      wth, is_random, err, err_info);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1222:   if (length < sizeof frame2) {",
          "1225:    return -1;",
          "1226:   }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1249:    return -1;",
          "1250:   }",
          "1253:   bytes_read = ng_file_read(&frame4, (unsigned int)sizeof frame4,",
          "1254:       wth, is_random, err, err_info);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1266:   if (ngsniffer->maj_vers < 5 && ngsniffer->min_vers >= 95)",
          "1267:    length += sizeof frame4 - sizeof frame2;",
          "1270:   if (length < sizeof frame4) {",
          "1273:    return -1;",
          "1274:   }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1264:   size = pletoh16(&frame4.size);",
          "1265:   true_size = pletoh16(&frame4.true_size);",
          "1281:   set_pseudo_header_frame4(&phdr->pseudo_header, &frame4);",
          "1282:   break;",
          "1284:  case REC_FRAME6:",
          "1286:   bytes_read = ng_file_read(&frame6, (unsigned int)sizeof frame6,",
          "1287:       wth, is_random, err, err_info);",
          "",
          "[Removed Lines]",
          "1272:   if (ngsniffer->maj_vers >= 5)",
          "1274:   else {",
          "1275:    if (ngsniffer->min_vers >= 95)",
          "1276:     length -= sizeof frame2;",
          "1277:    else",
          "1278:     length -= sizeof frame4;",
          "1279:   }",
          "",
          "[Added Lines]",
          "1298:   if (length < sizeof frame6) {",
          "1301:    return -1;",
          "1302:   }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1365:  }",
          "1367:  phdr->pkt_encap = fix_pseudo_header(wth->file_encap,",
          "",
          "[Removed Lines]",
          "1368:      buf, length, &phdr->pseudo_header);",
          "",
          "[Added Lines]",
          "1387:      buf, size, &phdr->pseudo_header);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dcba2505150748c43d4a6551f32d178ec65e1512",
      "candidate_info": {
        "commit_hash": "dcba2505150748c43d4a6551f32d178ec65e1512",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/dcba2505150748c43d4a6551f32d178ec65e1512",
        "files": [
          "wiretap/ngsniffer.c"
        ],
        "message": "Add bounds checks and fix a length argument.\n\nBefore reading the record header of a REC_FRAME{2,4,6} record, make sure\nthe record length is >= the length of that header.\n\nWhe calling fix_pseudo_header(), pass the actual length of the packet\ndata, not the remaining length of the record (which may include\npadding), so we don't read past the end of the packet data.\n\nBug: 11827\nChange-Id: I1c63a4cb014c4616ffdd202660e68c576f266872\nReviewed-on: https://code.wireshark.org/review/12756\nReviewed-by: Guy Harris <guy@alum.mit.edu>\n(cherry picked from commit 53a3e53fce30523d11ab3df319fba7b75d63076f)\nReviewed-on: https://code.wireshark.org/review/12757",
        "before_after_code_files": [
          "wiretap/ngsniffer.c||wiretap/ngsniffer.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "wiretap/ngsniffer.c||wiretap/ngsniffer.c"
          ],
          "candidate": [
            "wiretap/ngsniffer.c||wiretap/ngsniffer.c"
          ]
        }
      },
      "candidate_diff": {
        "wiretap/ngsniffer.c||wiretap/ngsniffer.c": [
          "File: wiretap/ngsniffer.c -> wiretap/ngsniffer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1130:  ngsniffer_t *ngsniffer;",
          "1131:  char record_type[2];",
          "1134:  struct frame2_rec frame2;",
          "1135:  struct frame4_rec frame4;",
          "1136:  struct frame6_rec frame6;",
          "",
          "[Removed Lines]",
          "1133:  guint16 type, length;",
          "",
          "[Added Lines]",
          "1133:  guint type, length;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1166:    return -1;",
          "1167:   }",
          "1170:   if (!ng_read_bytes(wth, &frame2, (unsigned int)sizeof frame2,",
          "1171:      is_random, err, err_info))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1170:   if (length < sizeof frame2) {",
          "1173:    return -1;",
          "1174:   }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1193:    return -1;",
          "1194:   }",
          "1197:   if (!ng_read_bytes(wth, &frame4, (unsigned int)sizeof frame4,",
          "1198:       is_random, err, err_info))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1210:   if (ngsniffer->maj_vers < 5 && ngsniffer->min_vers >= 95)",
          "1211:    length += sizeof frame4 - sizeof frame2;",
          "1214:   if (length < sizeof frame4) {",
          "1217:    return -1;",
          "1218:   }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1204:   size = pletoh16(&frame4.size);",
          "1205:   true_size = pletoh16(&frame4.true_size);",
          "1221:   set_pseudo_header_frame4(&phdr->pseudo_header, &frame4);",
          "1222:   break;",
          "1224:  case REC_FRAME6:",
          "1226:   if (!ng_read_bytes(wth, &frame6, (unsigned int)sizeof frame6,",
          "1227:       is_random, err, err_info))",
          "",
          "[Removed Lines]",
          "1212:   if (ngsniffer->maj_vers >= 5)",
          "1214:   else {",
          "1215:    if (ngsniffer->min_vers >= 95)",
          "1216:     length -= sizeof frame2;",
          "1217:    else",
          "1218:     length -= sizeof frame4;",
          "1219:   }",
          "",
          "[Added Lines]",
          "1238:   if (length < sizeof frame6) {",
          "1241:    return -1;",
          "1242:   }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1297:   return -1;",
          "1299:  phdr->pkt_encap = fix_pseudo_header(wth->file_encap,",
          "",
          "[Removed Lines]",
          "1300:      buf, length, &phdr->pseudo_header);",
          "",
          "[Added Lines]",
          "1319:      buf, size, &phdr->pseudo_header);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1a5ed10bad99a96389d0ccbee5d7804c8cf98a0a",
      "candidate_info": {
        "commit_hash": "1a5ed10bad99a96389d0ccbee5d7804c8cf98a0a",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/1a5ed10bad99a96389d0ccbee5d7804c8cf98a0a",
        "files": [
          "wiretap/ngsniffer.c"
        ],
        "message": "Rename some variables to make it a bit clearer what they are.\n\nrec_length_remaining is the amount of data we haven't already read from\nthe record; it starts out as the record length and gets decreased.  It\nis not the length of data in the packet.\n\nChange-Id: I46cd78e29aee13a686f1f6c8efbe258277e15686\nReviewed-on: https://code.wireshark.org/review/12759\nReviewed-by: Guy Harris <guy@alum.mit.edu>",
        "before_after_code_files": [
          "wiretap/ngsniffer.c||wiretap/ngsniffer.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "wiretap/ngsniffer.c||wiretap/ngsniffer.c"
          ],
          "candidate": [
            "wiretap/ngsniffer.c||wiretap/ngsniffer.c"
          ]
        }
      },
      "candidate_diff": {
        "wiretap/ngsniffer.c||wiretap/ngsniffer.c": [
          "File: wiretap/ngsniffer.c -> wiretap/ngsniffer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "780:  char record_type[2];",
          "781:  char record_length[4]; /* only the first 2 bytes are length,",
          "784:  int bytes_to_read;",
          "785:  unsigned char buffer[256];",
          "",
          "[Removed Lines]",
          "783:  guint16 type, length;",
          "",
          "[Added Lines]",
          "783:  guint16 rec_type, rec_length_remaining;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "792:   }",
          "",
          "[Removed Lines]",
          "794:   type = pletoh16(record_type);",
          "795:   if ((type != REC_HEADER1) && (type != REC_HEADER2)",
          "796:    && (type != REC_HEADER3) && (type != REC_HEADER4)",
          "797:    && (type != REC_HEADER5) && (type != REC_HEADER6)",
          "798:    && (type != REC_HEADER7)",
          "799:    && ((type != REC_V2DESC) || (maj_vers > 2)) ) {",
          "",
          "[Added Lines]",
          "794:   rec_type = pletoh16(record_type);",
          "795:   if ((rec_type != REC_HEADER1) && (rec_type != REC_HEADER2)",
          "796:    && (rec_type != REC_HEADER3) && (rec_type != REC_HEADER4)",
          "797:    && (rec_type != REC_HEADER5) && (rec_type != REC_HEADER6)",
          "798:    && (rec_type != REC_HEADER7)",
          "799:    && ((rec_type != REC_V2DESC) || (maj_vers > 2)) ) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "813:       err, err_info))",
          "814:    return -1;",
          "",
          "[Removed Lines]",
          "816:   length = pletoh16(record_length);",
          "",
          "[Added Lines]",
          "816:   rec_length_remaining = pletoh16(record_length);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "828:   if ((network == NETWORK_SYNCHRO || network == NETWORK_ASYNC) &&",
          "835:    if (!wtap_read_bytes(wth->fh, buffer,",
          "836:        bytes_to_read, err, err_info))",
          "837:     return -1;",
          "",
          "[Removed Lines]",
          "829:       type == REC_HEADER2) {",
          "834:    bytes_to_read = MIN(length, (int)sizeof buffer);",
          "",
          "[Added Lines]",
          "829:       rec_type == REC_HEADER2) {",
          "834:    bytes_to_read = MIN(rec_length_remaining, (int)sizeof buffer);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "841:    case 2:",
          "842:     if (process_rec_header2_v2(wth, buffer,",
          "844:      return -1;",
          "845:     break;",
          "",
          "[Removed Lines]",
          "843:         length, err, err_info) < 0)",
          "",
          "[Added Lines]",
          "843:         rec_length_remaining, err, err_info) < 0)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "848:    case 4:",
          "849:    case 5:",
          "850:     if (process_rec_header2_v145(wth, buffer,",
          "852:      return -1;",
          "853:     break;",
          "854:    }",
          "",
          "[Removed Lines]",
          "851:         length, maj_vers, err, err_info) < 0)",
          "",
          "[Added Lines]",
          "851:         rec_length_remaining, maj_vers, err, err_info) < 0)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "861:         SEEK_CUR, err) == -1)",
          "862:      return -1;",
          "863:    }",
          "864:   } else {",
          "867:     return -1;",
          "868:   }",
          "869:  }",
          "",
          "[Removed Lines]",
          "859:    if (length > sizeof buffer) {",
          "860:     if (file_seek(wth->fh, length - sizeof buffer,",
          "866:    if (file_seek(wth->fh, length, SEEK_CUR, err) == -1)",
          "",
          "[Added Lines]",
          "859:    if (rec_length_remaining > sizeof buffer) {",
          "860:     if (file_seek(wth->fh, rec_length_remaining - sizeof buffer,",
          "866:    if (file_seek(wth->fh, rec_length_remaining, SEEK_CUR, err) == -1)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1130:  ngsniffer_t *ngsniffer;",
          "1131:  char record_type[2];",
          "1134:  struct frame2_rec frame2;",
          "1135:  struct frame4_rec frame4;",
          "1136:  struct frame6_rec frame6;",
          "",
          "[Removed Lines]",
          "1133:  guint type, length;",
          "",
          "[Added Lines]",
          "1133:  guint rec_type, rec_length_remaining;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1149:  if (!ng_read_bytes(wth, record_length, 4, is_random, err, err_info))",
          "1150:   return -1;",
          "1155:  ngsniffer = (ngsniffer_t *)wth->priv;",
          "1158:  case REC_FRAME2:",
          "1159:   if (ngsniffer->network == NETWORK_ATM) {",
          "",
          "[Removed Lines]",
          "1152:  type = pletoh16(record_type);",
          "1153:  length = pletoh16(record_length);",
          "1156:  switch (type) {",
          "",
          "[Added Lines]",
          "1152:  rec_type = pletoh16(record_type);",
          "1153:  rec_length_remaining = pletoh16(record_length);",
          "1156:  switch (rec_type) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1167:   }",
          "1173:    return -1;",
          "",
          "[Removed Lines]",
          "1170:   if (length < sizeof frame2) {",
          "",
          "[Added Lines]",
          "1170:   if (rec_length_remaining < sizeof frame2) {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1210:   if (ngsniffer->maj_vers < 5 && ngsniffer->min_vers >= 95)",
          "1217:    return -1;",
          "",
          "[Removed Lines]",
          "1211:    length += sizeof frame4 - sizeof frame2;",
          "1214:   if (length < sizeof frame4) {",
          "",
          "[Added Lines]",
          "1211:    rec_length_remaining += sizeof frame4 - sizeof frame2;",
          "1214:   if (rec_length_remaining < sizeof frame4) {",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1228:   size = pletoh16(&frame4.size);",
          "1229:   true_size = pletoh16(&frame4.true_size);",
          "1233:   set_pseudo_header_frame4(&phdr->pseudo_header, &frame4);",
          "1234:   break;",
          "1236:  case REC_FRAME6:",
          "1241:    return -1;",
          "",
          "[Removed Lines]",
          "1238:   if (length < sizeof frame6) {",
          "",
          "[Added Lines]",
          "1238:   if (rec_length_remaining < sizeof frame6) {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1288:  if (size > length) {",
          "",
          "[Added Lines]",
          "1288:  if (size > rec_length_remaining) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c9670e334c38f98da485b53bbd09571047836064",
      "candidate_info": {
        "commit_hash": "c9670e334c38f98da485b53bbd09571047836064",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/c9670e334c38f98da485b53bbd09571047836064",
        "files": [
          "wiretap/ngsniffer.c"
        ],
        "message": "Squelch another warning.\n\nChange-Id: I7340954d9ca2fd11a6db2aa7cd5493d870181e23\nReviewed-on: https://code.wireshark.org/review/12765\nReviewed-by: Guy Harris <guy@alum.mit.edu>",
        "before_after_code_files": [
          "wiretap/ngsniffer.c||wiretap/ngsniffer.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "wiretap/ngsniffer.c||wiretap/ngsniffer.c"
          ],
          "candidate": [
            "wiretap/ngsniffer.c||wiretap/ngsniffer.c"
          ]
        }
      },
      "candidate_diff": {
        "wiretap/ngsniffer.c||wiretap/ngsniffer.c": [
          "File: wiretap/ngsniffer.c -> wiretap/ngsniffer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1210:   if (ngsniffer->maj_vers < 5 && ngsniffer->min_vers >= 95)",
          "1214:   if (rec_length_remaining < sizeof frame4) {",
          "",
          "[Removed Lines]",
          "1211:    rec_length_remaining += sizeof frame4 - sizeof frame2;",
          "",
          "[Added Lines]",
          "1211:    rec_length_remaining += (guint)(sizeof frame4 - sizeof frame2);",
          "",
          "---------------"
        ]
      }
    }
  ]
}