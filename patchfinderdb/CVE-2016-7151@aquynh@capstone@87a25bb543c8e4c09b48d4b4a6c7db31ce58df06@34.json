{
  "cve_id": "CVE-2016-7151",
  "cve_desc": "Capstone 3.0.4 has an out-of-bounds vulnerability (SEGV caused by a read memory access) in X86_insn_reg_intel in arch/X86/X86Mapping.c.",
  "repo": "aquynh/capstone",
  "patch_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
  "patch_info": {
    "commit_hash": "87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/87a25bb543c8e4c09b48d4b4a6c7db31ce58df06",
    "files": [
      "arch/X86/X86Mapping.c"
    ],
    "message": "x86: fast path checking for X86_insn_reg_intel()",
    "before_after_code_files": [
      "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
    ]
  },
  "patch_diff": {
    "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
      "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2930:  return (l - r);",
      "2931: }",
      "2937: x86_reg X86_insn_reg_intel(unsigned int id, enum cs_ac_type *access)",
      "2938: {",
      "2939:  unsigned int first = 0;",
      "2940:  unsigned int last = ARR_SIZE(insn_regs_intel) - 1;",
      "2943:  if (!intel_regs_sorted) {",
      "2944:   memcpy(insn_regs_intel_sorted, insn_regs_intel,",
      "",
      "[Removed Lines]",
      "2933: static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid = ARR_SIZE(insn_regs_intel) / 2;",
      "",
      "[Added Lines]",
      "2938:  static bool intel_regs_sorted = false;",
      "2941:  unsigned int mid;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2949:   intel_regs_sorted = true;",
      "2950:  }",
      "2952:  while (first <= last) {",
      "2953:   if (insn_regs_intel_sorted[mid].insn < id) {",
      "2954:    first = mid + 1;",
      "2955:   } else if (insn_regs_intel_sorted[mid].insn == id) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2952:  if (insn_regs_intel_sorted[0].insn > id ||",
      "2953:    insn_regs_intel_sorted[last].insn < id) {",
      "2954:   return 0;",
      "2955:  }",
      "2958:   mid = (first + last) / 2;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2962:     break;",
      "2963:    last = mid - 1;",
      "2964:   }",
      "2966:  }",
      "",
      "[Removed Lines]",
      "2965:   mid = (first + last) / 2;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "64e56f46c42cf3d6f19ee13080642df10159f74c",
      "candidate_info": {
        "commit_hash": "64e56f46c42cf3d6f19ee13080642df10159f74c",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/64e56f46c42cf3d6f19ee13080642df10159f74c",
        "files": [
          "include/arm.h",
          "include/arm64.h",
          "include/capstone.h",
          "include/mips.h",
          "include/ppc.h",
          "include/sparc.h",
          "include/systemz.h",
          "include/x86.h",
          "include/xcore.h"
        ],
        "message": "skip stdint.h when not available",
        "before_after_code_files": [
          "include/arm.h||include/arm.h",
          "include/arm64.h||include/arm64.h",
          "include/capstone.h||include/capstone.h",
          "include/mips.h||include/mips.h",
          "include/ppc.h||include/ppc.h",
          "include/sparc.h||include/sparc.h",
          "include/systemz.h||include/systemz.h",
          "include/x86.h||include/x86.h",
          "include/xcore.h||include/xcore.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/arm.h||include/arm.h": [
          "File: include/arm.h -> include/arm.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: extern \"C\" {",
          "9: #endif",
          "11: #include <stdint.h>",
          "12: #include \"platform.h\"",
          "14: #ifdef _MSC_VER",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: #if !defined(_MSC_VER) || !defined(_KERNEL_MODE)",
          "13: #endif",
          "",
          "---------------"
        ],
        "include/arm64.h||include/arm64.h": [
          "File: include/arm64.h -> include/arm64.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: extern \"C\" {",
          "9: #endif",
          "11: #include <stdint.h>",
          "12: #include \"platform.h\"",
          "14: #ifdef _MSC_VER",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: #if !defined(_MSC_VER) || !defined(_KERNEL_MODE)",
          "13: #endif",
          "",
          "---------------"
        ],
        "include/capstone.h||include/capstone.h": [
          "File: include/capstone.h -> include/capstone.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: extern \"C\" {",
          "9: #endif",
          "11: #include <stdint.h>",
          "12: #include <stdarg.h>",
          "14: #if defined(CAPSTONE_HAS_OSXKERNEL)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: #if !defined(_MSC_VER) || !defined(_KERNEL_MODE)",
          "13: #endif",
          "",
          "---------------"
        ],
        "include/mips.h||include/mips.h": [
          "File: include/mips.h -> include/mips.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: extern \"C\" {",
          "9: #endif",
          "11: #include <stdint.h>",
          "12: #include \"platform.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: #if !defined(_MSC_VER) || !defined(_KERNEL_MODE)",
          "13: #endif",
          "",
          "---------------"
        ],
        "include/ppc.h||include/ppc.h": [
          "File: include/ppc.h -> include/ppc.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: extern \"C\" {",
          "9: #endif",
          "11: #include <stdint.h>",
          "12: #include \"platform.h\"",
          "14: #ifdef _MSC_VER",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: #if !defined(_MSC_VER) || !defined(_KERNEL_MODE)",
          "13: #endif",
          "",
          "---------------"
        ],
        "include/sparc.h||include/sparc.h": [
          "File: include/sparc.h -> include/sparc.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: extern \"C\" {",
          "9: #endif",
          "11: #include <stdint.h>",
          "12: #include \"platform.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: #if !defined(_MSC_VER) || !defined(_KERNEL_MODE)",
          "13: #endif",
          "",
          "---------------"
        ],
        "include/systemz.h||include/systemz.h": [
          "File: include/systemz.h -> include/systemz.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: extern \"C\" {",
          "9: #endif",
          "11: #include <stdint.h>",
          "12: #include \"platform.h\"",
          "14: #ifdef _MSC_VER",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: #if !defined(_MSC_VER) || !defined(_KERNEL_MODE)",
          "13: #endif",
          "",
          "---------------"
        ],
        "include/x86.h||include/x86.h": [
          "File: include/x86.h -> include/x86.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: extern \"C\" {",
          "9: #endif",
          "11: #include <stdint.h>",
          "14: #define X86_REL_ADDR(insn) (insn.address + insn.size + insn.detail->x86.disp)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: #if !defined(_MSC_VER) || !defined(_KERNEL_MODE)",
          "13: #endif",
          "",
          "---------------"
        ],
        "include/xcore.h||include/xcore.h": [
          "File: include/xcore.h -> include/xcore.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: extern \"C\" {",
          "9: #endif",
          "11: #include <stdint.h>",
          "12: #include \"platform.h\"",
          "14: #ifdef _MSC_VER",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: #if !defined(_MSC_VER) || !defined(_KERNEL_MODE)",
          "13: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "44c419a64c8fd01be5d491d2a1f389fcd742beab",
      "candidate_info": {
        "commit_hash": "44c419a64c8fd01be5d491d2a1f389fcd742beab",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/44c419a64c8fd01be5d491d2a1f389fcd742beab",
        "files": [
          "arch/X86/X86Mapping.c"
        ],
        "message": "x86: indentation",
        "before_after_code_files": [
          "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [
            "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
          ],
          "candidate": [
            "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c"
          ]
        }
      },
      "candidate_diff": {
        "arch/X86/X86Mapping.c||arch/X86/X86Mapping.c": [
          "File: arch/X86/X86Mapping.c -> arch/X86/X86Mapping.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "47622:     return false;",
          "47624:    case X86_INS_JAE:",
          "47650:     return true;",
          "47651:   }",
          "47652:  }",
          "",
          "[Removed Lines]",
          "47625:             case X86_INS_JA:",
          "47626:             case X86_INS_JBE:",
          "47627:             case X86_INS_JB:",
          "47628:             case X86_INS_JCXZ:",
          "47629:             case X86_INS_JECXZ:",
          "47630:             case X86_INS_JE:",
          "47631:             case X86_INS_JGE:",
          "47632:             case X86_INS_JG:",
          "47633:             case X86_INS_JLE:",
          "47634:             case X86_INS_JL:",
          "47635:             case X86_INS_JMP:",
          "47636:             case X86_INS_JNE:",
          "47637:             case X86_INS_JNO:",
          "47638:             case X86_INS_JNP:",
          "47639:             case X86_INS_JNS:",
          "47640:             case X86_INS_JO:",
          "47641:             case X86_INS_JP:",
          "47642:             case X86_INS_JRCXZ:",
          "47643:             case X86_INS_JS:",
          "47645:             case X86_INS_CALL:",
          "47646:             case X86_INS_RET:",
          "47647:             case X86_INS_RETF:",
          "47648:             case X86_INS_RETFQ:",
          "",
          "[Added Lines]",
          "47625:    case X86_INS_JA:",
          "47626:    case X86_INS_JBE:",
          "47627:    case X86_INS_JB:",
          "47628:    case X86_INS_JCXZ:",
          "47629:    case X86_INS_JECXZ:",
          "47630:    case X86_INS_JE:",
          "47631:    case X86_INS_JGE:",
          "47632:    case X86_INS_JG:",
          "47633:    case X86_INS_JLE:",
          "47634:    case X86_INS_JL:",
          "47635:    case X86_INS_JMP:",
          "47636:    case X86_INS_JNE:",
          "47637:    case X86_INS_JNO:",
          "47638:    case X86_INS_JNP:",
          "47639:    case X86_INS_JNS:",
          "47640:    case X86_INS_JO:",
          "47641:    case X86_INS_JP:",
          "47642:    case X86_INS_JRCXZ:",
          "47643:    case X86_INS_JS:",
          "47645:    case X86_INS_CALL:",
          "47646:    case X86_INS_RET:",
          "47647:    case X86_INS_RETF:",
          "47648:    case X86_INS_RETFQ:",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e147e3a051a281f64a685e2acb993a6fb48ae906",
      "candidate_info": {
        "commit_hash": "e147e3a051a281f64a685e2acb993a6fb48ae906",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/e147e3a051a281f64a685e2acb993a6fb48ae906",
        "files": [
          "arch/AArch64/AArch64Mapping.c",
          "bindings/java/capstone/Arm64_const.java",
          "bindings/ocaml/arm64_const.ml",
          "bindings/python/capstone/arm64_const.py",
          "include/capstone/arm64.h"
        ],
        "message": "arm64: add NEGS & NGCS alias instructions. this fixes issue #752",
        "before_after_code_files": [
          "arch/AArch64/AArch64Mapping.c||arch/AArch64/AArch64Mapping.c",
          "bindings/javcapstone/Arm64_const.java||bindings/java/capstone/Arm64_const.java",
          "bindings/ocaml/arm64_const.ml||bindings/ocaml/arm64_const.ml",
          "bindings/python/capstone/arm64_const.py||bindings/python/capstone/arm64_const.py",
          "include/capstone/arm64.h||include/capstone/arm64.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/AArch64/AArch64Mapping.c||arch/AArch64/AArch64Mapping.c": [
          "File: arch/AArch64/AArch64Mapping.c -> arch/AArch64/AArch64Mapping.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "304: #include \"AArch64MappingInsn.inc\"",
          "305: };",
          "314: void AArch64_get_insn_id(cs_struct *h, cs_insn *insn, unsigned int id)",
          "315: {",
          "",
          "[Removed Lines]",
          "310: #define ARM64_INS_NEGS (unsigned short)-1",
          "311: #define ARM64_INS_NGCS (unsigned short)-2",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "bindings/javcapstone/Arm64_const.java||bindings/java/capstone/Arm64_const.java": [
          "File: bindings/javcapstone/Arm64_const.java -> bindings/java/capstone/Arm64_const.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1032:  public static final int ARM64_INS_NEGS = 452;",
          "1033:  public static final int ARM64_INS_NGCS = 453;",
          "1034:  public static final int ARM64_INS_ENDING = 454;",
          "",
          "---------------"
        ],
        "bindings/ocaml/arm64_const.ml||bindings/ocaml/arm64_const.ml": [
          "File: bindings/ocaml/arm64_const.ml -> bindings/ocaml/arm64_const.ml",
          "--- Hunk 1 ---",
          "[Context before]",
          "1026: let _ARM64_INS_DC = 449;;",
          "1027: let _ARM64_INS_AT = 450;;",
          "1028: let _ARM64_INS_TLBI = 451;;",
          "1031: (* Group of ARM64 instructions *)",
          "",
          "[Removed Lines]",
          "1029: let _ARM64_INS_ENDING = 452;;",
          "",
          "[Added Lines]",
          "1029: let _ARM64_INS_NEGS = 452;;",
          "1030: let _ARM64_INS_NGCS = 453;;",
          "1031: let _ARM64_INS_ENDING = 454;;",
          "",
          "---------------"
        ],
        "bindings/python/capstone/arm64_const.py||bindings/python/capstone/arm64_const.py": [
          "File: bindings/python/capstone/arm64_const.py -> bindings/python/capstone/arm64_const.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1026: ARM64_INS_DC = 449",
          "1027: ARM64_INS_AT = 450",
          "1028: ARM64_INS_TLBI = 451",
          "1031: # Group of ARM64 instructions",
          "",
          "[Removed Lines]",
          "1029: ARM64_INS_ENDING = 452",
          "",
          "[Added Lines]",
          "1029: ARM64_INS_NEGS = 452",
          "1030: ARM64_INS_NGCS = 453",
          "1031: ARM64_INS_ENDING = 454",
          "",
          "---------------"
        ],
        "include/capstone/arm64.h||include/capstone/arm64.h": [
          "File: include/capstone/arm64.h -> include/capstone/arm64.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1129:  ARM64_INS_AT,",
          "1130:  ARM64_INS_TLBI,",
          "1132:  ARM64_INS_ENDING,  // <-- mark the end of the list of insn",
          "1133: } arm64_insn;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1132:  ARM64_INS_NEGS,",
          "1133:  ARM64_INS_NGCS,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ed1dab25165b8ecf9c2663d0a61b2bdc575d8bec",
      "candidate_info": {
        "commit_hash": "ed1dab25165b8ecf9c2663d0a61b2bdc575d8bec",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/ed1dab25165b8ecf9c2663d0a61b2bdc575d8bec",
        "files": [
          "arch/ARM/ARMInstPrinter.c"
        ],
        "message": "arm: another fix for #913",
        "before_after_code_files": [
          "arch/ARM/ARMInstPrinter.c||arch/ARM/ARMInstPrinter.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/ARM/ARMInstPrinter.c||arch/ARM/ARMInstPrinter.c": [
          "File: arch/ARM/ARMInstPrinter.c -> arch/ARM/ARMInstPrinter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "688:         if (MI->csh->detail) {",
          "689:          MI->flat_insn->detail->arm.operands[MI->flat_insn->detail->arm.op_count].type = ARM_OP_REG;",
          "690:          MI->flat_insn->detail->arm.operands[MI->flat_insn->detail->arm.op_count].reg = MCOperand_getReg(MCInst_getOperand(MI, 0));",
          "692:          MI->flat_insn->detail->arm.op_count++;",
          "694:                                     MI->flat_insn->detail->regs_read[MI->flat_insn->detail->regs_read_count] = ARM_REG_SP;",
          "",
          "[Removed Lines]",
          "691:          MI->flat_insn->detail->arm.operands[MI->flat_insn->detail->arm.op_count].access = CS_AC_READ;",
          "",
          "[Added Lines]",
          "691:          MI->flat_insn->detail->arm.operands[MI->flat_insn->detail->arm.op_count].access = CS_AC_WRITE;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7ee458116022fda3fc30299fa51a9fee56dc6e5d",
      "candidate_info": {
        "commit_hash": "7ee458116022fda3fc30299fa51a9fee56dc6e5d",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/7ee458116022fda3fc30299fa51a9fee56dc6e5d",
        "files": [
          "arch/X86/X86Disassembler.c"
        ],
        "message": "x86: LDS is invalid in x64. see #904",
        "before_after_code_files": [
          "arch/X86/X86Disassembler.c||arch/X86/X86Disassembler.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86Disassembler.c||arch/X86/X86Disassembler.c": [
          "File: arch/X86/X86Disassembler.c -> arch/X86/X86Disassembler.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "973:   result = (!translateInstruction(instr, &insn)) ?  true : false;",
          "974:   if (result) {",
          "981:    instr->imm_size = insn.immSize;",
          "982:    if (handle->detail) {",
          "",
          "[Removed Lines]",
          "976:    if (handle->mode & CS_MODE_64 &&",
          "977:     (instr->Opcode == X86_LES16rm || instr->Opcode == X86_LES32rm))",
          "979:     return false;",
          "",
          "[Added Lines]",
          "976:    if (handle->mode & CS_MODE_64) {",
          "977:     if (instr->Opcode == X86_LES16rm || instr->Opcode == X86_LES32rm)",
          "979:      return false;",
          "980:     if (instr->Opcode == X86_LDS16rm || instr->Opcode == X86_LDS32rm)",
          "982:      return false;",
          "983:    }",
          "",
          "---------------"
        ]
      }
    }
  ]
}