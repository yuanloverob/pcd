{
  "cve_id": "CVE-2020-15205",
  "cve_desc": "In Tensorflow before versions 1.15.4, 2.0.3, 2.1.2, 2.2.1 and 2.3.1, the `data_splits` argument of `tf.raw_ops.StringNGrams` lacks validation. This allows a user to pass values that can cause heap overflow errors and even leak contents of memory In the linked code snippet, all the binary strings after `ee ff` are contents from the memory stack. Since these can contain return addresses, this data leak can be used to defeat ASLR. The issue is patched in commit 0462de5b544ed4731aa2fb23946ac22c01856b80, and is released in TensorFlow versions 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "0462de5b544ed4731aa2fb23946ac22c01856b80",
  "patch_info": {
    "commit_hash": "0462de5b544ed4731aa2fb23946ac22c01856b80",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/0462de5b544ed4731aa2fb23946ac22c01856b80",
    "files": [
      "tensorflow/core/kernels/string_ngrams_op.cc",
      "tensorflow/python/ops/raw_ops_test.py"
    ],
    "message": "Validate `data_splits` for `tf.StringNGrams`.\n\nWithout validation, we can cause a heap buffer overflow which results in data leakage and/or segfaults.\n\nPiperOrigin-RevId: 332543478\nChange-Id: Iee5bda24497a195d09d122355502480830b1b317",
    "before_after_code_files": [
      "tensorflow/core/kernels/string_ngrams_op.cc||tensorflow/core/kernels/string_ngrams_op.cc",
      "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/string_ngrams_op.cc||tensorflow/core/kernels/string_ngrams_op.cc": [
      "File: tensorflow/core/kernels/string_ngrams_op.cc -> tensorflow/core/kernels/string_ngrams_op.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: #include \"absl/strings/ascii.h\"",
      "20: #include \"absl/strings/str_cat.h\"",
      "21: #include \"tensorflow/core/framework/op_kernel.h\"",
      "23: namespace tensorflow {",
      "24: namespace text {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: #include \"tensorflow/core/platform/errors.h\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "60:     OP_REQUIRES_OK(context, context->input(\"data_splits\", &splits));",
      "61:     const auto& splits_vec = splits->flat<SPLITS_TYPE>();",
      "63:     int num_batch_items = splits_vec.size() - 1;",
      "64:     tensorflow::Tensor* ngrams_splits;",
      "65:     OP_REQUIRES_OK(",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "65:     const int input_data_size = data->flat<tstring>().size();",
      "66:     const int splits_vec_size = splits_vec.size();",
      "67:     for (int i = 0; i < splits_vec_size; ++i) {",
      "68:       bool valid_splits = splits_vec(i) >= 0;",
      "69:       valid_splits = valid_splits && (splits_vec(i) <= input_data_size);",
      "70:       OP_REQUIRES(",
      "71:           context, valid_splits,",
      "72:           errors::InvalidArgument(\"Invalid split value \", splits_vec(i),",
      "73:                                   \", must be in [0,\", input_data_size, \"]\"));",
      "74:     }",
      "",
      "---------------"
    ],
    "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py": [
      "File: tensorflow/python/ops/raw_ops_test.py -> tensorflow/python/ops/raw_ops_test.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "18: from __future__ import division",
      "19: from __future__ import print_function",
      "21: from tensorflow.python.eager import context",
      "22: from tensorflow.python.framework import constant_op",
      "23: from tensorflow.python.framework import ops",
      "24: from tensorflow.python.framework import test_util",
      "25: from tensorflow.python.ops import gen_math_ops",
      "26: from tensorflow.python.platform import test",
      "29: @test_util.run_all_in_graph_and_eager_modes",
      "32:   def testSimple(self):",
      "33:     x = constant_op.constant(1)",
      "",
      "[Removed Lines]",
      "30: class RawOpsTest(test.TestCase):",
      "",
      "[Added Lines]",
      "21: from absl.testing import parameterized",
      "25: from tensorflow.python.framework import errors",
      "29: from tensorflow.python.ops import gen_string_ops",
      "34: @test_util.disable_tfrt",
      "35: class RawOpsTest(test.TestCase, parameterized.TestCase):",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "58:         gen_math_ops.Any(input=x, axis=0),",
      "59:         gen_math_ops.Any(input=x, axis=0, keep_dims=False))",
      "62: if __name__ == \"__main__\":",
      "63:   ops.enable_eager_execution()",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "66:   @parameterized.parameters([[0, 8]], [[-1, 6]])",
      "67:   def testStringNGramsBadDataSplits(self, splits):",
      "68:     data = [\"aa\", \"bb\", \"cc\", \"dd\", \"ee\", \"ff\"]",
      "69:     with self.assertRaisesRegex(errors.InvalidArgumentError,",
      "70:                                 \"Invalid split value\"):",
      "71:       self.evaluate(",
      "72:           gen_string_ops.string_n_grams(",
      "73:               data=data,",
      "74:               data_splits=splits,",
      "75:               separator=\"\",",
      "76:               ngram_widths=[2],",
      "77:               left_pad=\"\",",
      "78:               right_pad=\"\",",
      "79:               pad_width=0,",
      "80:               preserve_short_sequences=False))",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "503d7d1cca9da3b721964f087c6c8b6132e3c06d",
      "candidate_info": {
        "commit_hash": "503d7d1cca9da3b721964f087c6c8b6132e3c06d",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/503d7d1cca9da3b721964f087c6c8b6132e3c06d",
        "files": [
          "tensorflow/core/kernels/string_ngrams_op.cc",
          "tensorflow/python/ops/raw_ops_test.py"
        ],
        "message": "Validate `data_splits` for `tf.StringNGrams`.\n\nWithout validation, we can cause a heap buffer overflow which results in data leakage and/or segfaults.\n\nPiperOrigin-RevId: 332543478\nChange-Id: Iee5bda24497a195d09d122355502480830b1b317",
        "before_after_code_files": [
          "tensorflow/core/kernels/string_ngrams_op.cc||tensorflow/core/kernels/string_ngrams_op.cc",
          "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/string_ngrams_op.cc||tensorflow/core/kernels/string_ngrams_op.cc",
            "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/string_ngrams_op.cc||tensorflow/core/kernels/string_ngrams_op.cc",
            "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/string_ngrams_op.cc||tensorflow/core/kernels/string_ngrams_op.cc": [
          "File: tensorflow/core/kernels/string_ngrams_op.cc -> tensorflow/core/kernels/string_ngrams_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: #include \"absl/strings/ascii.h\"",
          "20: #include \"absl/strings/str_cat.h\"",
          "21: #include \"tensorflow/core/framework/op_kernel.h\"",
          "23: namespace tensorflow {",
          "24: namespace text {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: #include \"tensorflow/core/platform/errors.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "60:     OP_REQUIRES_OK(context, context->input(\"data_splits\", &splits));",
          "61:     const auto& splits_vec = splits->flat<SPLITS_TYPE>();",
          "64:     if (data->flat<tstring>().size() == 0 || splits_vec.size() == 0) {",
          "65:       tensorflow::Tensor* empty;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:     const int input_data_size = data->flat<tstring>().size();",
          "66:     const int splits_vec_size = splits_vec.size();",
          "67:     for (int i = 0; i < splits_vec_size; ++i) {",
          "68:       bool valid_splits = splits_vec(i) >= 0;",
          "69:       valid_splits = valid_splits && (splits_vec(i) <= input_data_size);",
          "70:       OP_REQUIRES(",
          "71:           context, valid_splits,",
          "72:           errors::InvalidArgument(\"Invalid split value \", splits_vec(i),",
          "73:                                   \", must be in [0,\", input_data_size, \"]\"));",
          "74:     }",
          "",
          "---------------"
        ],
        "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py": [
          "File: tensorflow/python/ops/raw_ops_test.py -> tensorflow/python/ops/raw_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: from __future__ import division",
          "19: from __future__ import print_function",
          "21: from tensorflow.python.eager import context",
          "22: from tensorflow.python.framework import constant_op",
          "23: from tensorflow.python.framework import ops",
          "24: from tensorflow.python.framework import test_util",
          "25: from tensorflow.python.ops import gen_math_ops",
          "26: from tensorflow.python.platform import test",
          "29: @test_util.run_all_in_graph_and_eager_modes",
          "32:   def testSimple(self):",
          "33:     x = constant_op.constant(1)",
          "",
          "[Removed Lines]",
          "30: class RawOpsTest(test.TestCase):",
          "",
          "[Added Lines]",
          "21: from absl.testing import parameterized",
          "25: from tensorflow.python.framework import errors",
          "29: from tensorflow.python.ops import gen_string_ops",
          "34: @test_util.disable_tfrt",
          "35: class RawOpsTest(test.TestCase, parameterized.TestCase):",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "58:         gen_math_ops.Any(input=x, axis=0),",
          "59:         gen_math_ops.Any(input=x, axis=0, keep_dims=False))",
          "62: if __name__ == \"__main__\":",
          "63:   ops.enable_eager_execution()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "66:   @parameterized.parameters([[0, 8]], [[-1, 6]])",
          "67:   def testStringNGramsBadDataSplits(self, splits):",
          "68:     data = [\"aa\", \"bb\", \"cc\", \"dd\", \"ee\", \"ff\"]",
          "69:     with self.assertRaisesRegex(errors.InvalidArgumentError,",
          "70:                                 \"Invalid split value\"):",
          "71:       self.evaluate(",
          "72:           gen_string_ops.string_n_grams(",
          "73:               data=data,",
          "74:               data_splits=splits,",
          "75:               separator=\"\",",
          "76:               ngram_widths=[2],",
          "77:               left_pad=\"\",",
          "78:               right_pad=\"\",",
          "79:               pad_width=0,",
          "80:               preserve_short_sequences=False))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f95fa5faf4ad243918c7d9508d7d8cfbab9e1b3a",
      "candidate_info": {
        "commit_hash": "f95fa5faf4ad243918c7d9508d7d8cfbab9e1b3a",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/f95fa5faf4ad243918c7d9508d7d8cfbab9e1b3a",
        "files": [
          "tensorflow/core/kernels/string_ngrams_op.cc",
          "tensorflow/python/ops/raw_ops_test.py"
        ],
        "message": "Validate `data_splits` for `tf.StringNGrams`.\n\nWithout validation, we can cause a heap buffer overflow which results in data leakage and/or segfaults.\n\nPiperOrigin-RevId: 332543478\nChange-Id: Iee5bda24497a195d09d122355502480830b1b317",
        "before_after_code_files": [
          "tensorflow/core/kernels/string_ngrams_op.cc||tensorflow/core/kernels/string_ngrams_op.cc",
          "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/string_ngrams_op.cc||tensorflow/core/kernels/string_ngrams_op.cc",
            "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/string_ngrams_op.cc||tensorflow/core/kernels/string_ngrams_op.cc",
            "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/string_ngrams_op.cc||tensorflow/core/kernels/string_ngrams_op.cc": [
          "File: tensorflow/core/kernels/string_ngrams_op.cc -> tensorflow/core/kernels/string_ngrams_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: #include \"absl/strings/ascii.h\"",
          "20: #include \"absl/strings/str_cat.h\"",
          "21: #include \"tensorflow/core/framework/op_kernel.h\"",
          "23: namespace tensorflow {",
          "24: namespace text {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: #include \"tensorflow/core/platform/errors.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "60:     OP_REQUIRES_OK(context, context->input(\"data_splits\", &splits));",
          "61:     const auto& splits_vec = splits->flat<SPLITS_TYPE>();",
          "64:     if (data->flat<string>().size() == 0 || splits_vec.size() == 0) {",
          "65:       tensorflow::Tensor* empty;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:     const int input_data_size = data->flat<tstring>().size();",
          "66:     const int splits_vec_size = splits_vec.size();",
          "67:     for (int i = 0; i < splits_vec_size; ++i) {",
          "68:       bool valid_splits = splits_vec(i) >= 0;",
          "69:       valid_splits = valid_splits && (splits_vec(i) <= input_data_size);",
          "70:       OP_REQUIRES(",
          "71:           context, valid_splits,",
          "72:           errors::InvalidArgument(\"Invalid split value \", splits_vec(i),",
          "73:                                   \", must be in [0,\", input_data_size, \"]\"));",
          "74:     }",
          "",
          "---------------"
        ],
        "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py": [
          "File: tensorflow/python/ops/raw_ops_test.py -> tensorflow/python/ops/raw_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: from __future__ import division",
          "19: from __future__ import print_function",
          "21: from tensorflow.python.eager import context",
          "22: from tensorflow.python.framework import constant_op",
          "23: from tensorflow.python.framework import ops",
          "24: from tensorflow.python.framework import test_util",
          "25: from tensorflow.python.ops import gen_math_ops",
          "26: from tensorflow.python.platform import test",
          "29: @test_util.run_all_in_graph_and_eager_modes",
          "32:   def testSimple(self):",
          "33:     x = constant_op.constant(1)",
          "",
          "[Removed Lines]",
          "30: class RawOpsTest(test.TestCase):",
          "",
          "[Added Lines]",
          "21: from absl.testing import parameterized",
          "25: from tensorflow.python.framework import errors",
          "29: from tensorflow.python.ops import gen_string_ops",
          "34: @test_util.disable_tfrt",
          "35: class RawOpsTest(test.TestCase, parameterized.TestCase):",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "58:         gen_math_ops.Any(input=x, axis=0),",
          "59:         gen_math_ops.Any(input=x, axis=0, keep_dims=False))",
          "62: if __name__ == \"__main__\":",
          "63:   ops.enable_eager_execution()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "66:   @parameterized.parameters([[0, 8]], [[-1, 6]])",
          "67:   def testStringNGramsBadDataSplits(self, splits):",
          "68:     data = [\"aa\", \"bb\", \"cc\", \"dd\", \"ee\", \"ff\"]",
          "69:     with self.assertRaisesRegex(errors.InvalidArgumentError,",
          "70:                                 \"Invalid split value\"):",
          "71:       self.evaluate(",
          "72:           gen_string_ops.string_n_grams(",
          "73:               data=data,",
          "74:               data_splits=splits,",
          "75:               separator=\"\",",
          "76:               ngram_widths=[2],",
          "77:               left_pad=\"\",",
          "78:               right_pad=\"\",",
          "79:               pad_width=0,",
          "80:               preserve_short_sequences=False))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "318cd87c606e39ee469de078b1df38fcdad8ecf8",
      "candidate_info": {
        "commit_hash": "318cd87c606e39ee469de078b1df38fcdad8ecf8",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/318cd87c606e39ee469de078b1df38fcdad8ecf8",
        "files": [
          "tensorflow/core/kernels/string_ngrams_op.cc",
          "tensorflow/python/ops/raw_ops_test.py"
        ],
        "message": "Validate `data_splits` for `tf.StringNGrams`.\n\nWithout validation, we can cause a heap buffer overflow which results in data leakage and/or segfaults.\n\nPiperOrigin-RevId: 332543478\nChange-Id: Iee5bda24497a195d09d122355502480830b1b317",
        "before_after_code_files": [
          "tensorflow/core/kernels/string_ngrams_op.cc||tensorflow/core/kernels/string_ngrams_op.cc",
          "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/string_ngrams_op.cc||tensorflow/core/kernels/string_ngrams_op.cc",
            "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/string_ngrams_op.cc||tensorflow/core/kernels/string_ngrams_op.cc",
            "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/string_ngrams_op.cc||tensorflow/core/kernels/string_ngrams_op.cc": [
          "File: tensorflow/core/kernels/string_ngrams_op.cc -> tensorflow/core/kernels/string_ngrams_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: #include \"absl/strings/ascii.h\"",
          "20: #include \"absl/strings/str_cat.h\"",
          "21: #include \"tensorflow/core/framework/op_kernel.h\"",
          "23: namespace tensorflow {",
          "24: namespace text {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: #include \"tensorflow/core/platform/errors.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "60:     OP_REQUIRES_OK(context, context->input(\"data_splits\", &splits));",
          "61:     const auto& splits_vec = splits->flat<SPLITS_TYPE>();",
          "63:     int num_batch_items = splits_vec.size() - 1;",
          "64:     tensorflow::Tensor* ngrams_splits;",
          "65:     OP_REQUIRES_OK(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:     const int input_data_size = data->flat<tstring>().size();",
          "66:     const int splits_vec_size = splits_vec.size();",
          "67:     for (int i = 0; i < splits_vec_size; ++i) {",
          "68:       bool valid_splits = splits_vec(i) >= 0;",
          "69:       valid_splits = valid_splits && (splits_vec(i) <= input_data_size);",
          "70:       OP_REQUIRES(",
          "71:           context, valid_splits,",
          "72:           errors::InvalidArgument(\"Invalid split value \", splits_vec(i),",
          "73:                                   \", must be in [0,\", input_data_size, \"]\"));",
          "74:     }",
          "",
          "---------------"
        ],
        "tensorflow/python/ops/raw_ops_test.py||tensorflow/python/ops/raw_ops_test.py": [
          "File: tensorflow/python/ops/raw_ops_test.py -> tensorflow/python/ops/raw_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: from __future__ import division",
          "19: from __future__ import print_function",
          "21: from tensorflow.python.eager import context",
          "22: from tensorflow.python.framework import constant_op",
          "23: from tensorflow.python.framework import ops",
          "24: from tensorflow.python.framework import test_util",
          "25: from tensorflow.python.ops import gen_math_ops",
          "26: from tensorflow.python.platform import test",
          "29: @test_util.run_all_in_graph_and_eager_modes",
          "32:   def testSimple(self):",
          "33:     x = constant_op.constant(1)",
          "",
          "[Removed Lines]",
          "30: class RawOpsTest(test.TestCase):",
          "",
          "[Added Lines]",
          "21: from absl.testing import parameterized",
          "25: from tensorflow.python.framework import errors",
          "29: from tensorflow.python.ops import gen_string_ops",
          "34: @test_util.disable_tfrt",
          "35: class RawOpsTest(test.TestCase, parameterized.TestCase):",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "58:         gen_math_ops.Any(input=x, axis=0),",
          "59:         gen_math_ops.Any(input=x, axis=0, keep_dims=False))",
          "62: if __name__ == \"__main__\":",
          "63:   ops.enable_eager_execution()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "66:   @parameterized.parameters([[0, 8]], [[-1, 6]])",
          "67:   def testStringNGramsBadDataSplits(self, splits):",
          "68:     data = [\"aa\", \"bb\", \"cc\", \"dd\", \"ee\", \"ff\"]",
          "69:     with self.assertRaisesRegex(errors.InvalidArgumentError,",
          "70:                                 \"Invalid split value\"):",
          "71:       self.evaluate(",
          "72:           gen_string_ops.string_n_grams(",
          "73:               data=data,",
          "74:               data_splits=splits,",
          "75:               separator=\"\",",
          "76:               ngram_widths=[2],",
          "77:               left_pad=\"\",",
          "78:               right_pad=\"\",",
          "79:               pad_width=0,",
          "80:               preserve_short_sequences=False))",
          "",
          "---------------"
        ]
      }
    }
  ]
}