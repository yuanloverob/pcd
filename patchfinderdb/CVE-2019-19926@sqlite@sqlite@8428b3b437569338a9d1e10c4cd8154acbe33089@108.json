{
  "cve_id": "CVE-2019-19926",
  "cve_desc": "multiSelect in select.c in SQLite 3.30.1 mishandles certain errors during parsing, as demonstrated by errors from sqlite3WindowRewrite() calls. NOTE: this vulnerability exists because of an incomplete fix for CVE-2019-19880.",
  "repo": "sqlite/sqlite",
  "patch_hash": "8428b3b437569338a9d1e10c4cd8154acbe33089",
  "patch_info": {
    "commit_hash": "8428b3b437569338a9d1e10c4cd8154acbe33089",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/8428b3b437569338a9d1e10c4cd8154acbe33089",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c"
    ],
    "message": "Continuation of [e2bddcd4c55ba3cb]: Add another spot where it is necessary to abort early due to prior errors in sqlite3WindowRewrite().\n\nFossilOrigin-Name: cba2a2a44cdf138a629109bb0ad088ed4ef67fc66bed3e0373554681a39615d2",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 3d4c0bf8904135fa68c75801bfa738715cacc3b19dc8ad6ef550b11798d4b121",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2809:     }",
      "2810:   #endif",
      "2811:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2812:   if( pParse->nErr ) goto multi_select_end;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3c1970fceeecef6da620c37cdd0755f31af646a7",
      "candidate_info": {
        "commit_hash": "3c1970fceeecef6da620c37cdd0755f31af646a7",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/3c1970fceeecef6da620c37cdd0755f31af646a7",
        "files": [
          "ext/rtree/rtreefuzz001.test",
          "manifest",
          "manifest.uuid",
          "test/fts3corrupt4.test"
        ],
        "message": "Update some corruption test cases to take [724f4df9c] into account.\n\nFossilOrigin-Name: 927cd7b4c52fae665e57fb6039c6829e339cff5ad5c405800cac3ee149ef5be1",
        "before_after_code_files": [
          "ext/rtree/rtreefuzz001.test||ext/rtree/rtreefuzz001.test",
          "manifest.uuid||manifest.uuid",
          "test/fts3corrupt4.test||test/fts3corrupt4.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/rtree/rtreefuzz001.test||ext/rtree/rtreefuzz001.test": [
          "File: ext/rtree/rtreefuzz001.test -> ext/rtree/rtreefuzz001.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "465: | end c1b.db",
          "466:   }]",
          "467:   catchsql {",
          "468:      SELECT rtreecheck('t1');",
          "469:   }",
          "470: } {1 {SQL logic error}}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "468:      PRAGMA writable_schema = 1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1040: |   2880: ff ff ff 06 00 00 00 0c 00 00 00 01 00 00 00 0b   ................",
          "1041: |   2896: 00 00 00 00 00 00 00 02 40 00 00 00 00 00 00 00   ........@.......",
          "1042: | end crash-2e81f5dce5cbd4.db}]",
          "1043:   catchsql {UPDATE t1 SET ex= ex ISNULL}",
          "1044: } {1 {database disk image is malformed}}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1044:   execsql { PRAGMA writable_schema = 1;}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 8c44b02f1479cec61554800702a3c1d806e4ee64b41ba2af17320f62794a02fe",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/fts3corrupt4.test||test/fts3corrupt4.test": [
          "File: test/fts3corrupt4.test -> test/fts3corrupt4.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "2147: }]} {}",
          "2149: do_execsql_test 14.1 {",
          "2150:   WITH RECURSIVE c(x) AS (VALUES(1) UNION ALL SELECT x+1 FROM c WHERE x<10)",
          "2151:     INSERT INTO t1(a) SELECT randomblob(3000) FROM c;",
          "2152: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2150:   PRAGMA writable_schema = 1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3049: }]} {}",
          "3051: do_catchsql_test 19.1 {",
          "3052:   SELECT rowid,a,c,snippet(t1,85101090932165,-1,10) FROM t1 WHERE a MATCH 'rtree';",
          "3053: } {1 {database disk image is malformed}}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3053:   PRAGMA writable_schema = 1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3250: }]} {}",
          "3252: do_execsql_test 20.1 {",
          "3253:   BEGIN;",
          "3254:   WITH RECURSIVE c(x) AS (VALUES(1) UNION ALL SELECT x+1 FROM c WHERE x<10)",
          "3255:     INSERT INTO t1(a) SELECT randomblob(3000) FROM c;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3255:   PRAGMA writable_schema = 1;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3472: | end crash-18cc014e42e828.db",
          "3473: }]} {}",
          "3476: do_catchsql_test 21.1 {",
          "3477:   SELECT offsets(t1) FROM t1 WHERE t1 MATCH 'R*';",
          "3478: } {1 {database disk image is malformed}}",
          "",
          "[Removed Lines]",
          "3475: breakpoint",
          "",
          "[Added Lines]",
          "3479:   PRAGMA writable_schema = 1;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3694: }]} {}",
          "3696: do_catchsql_test 22.1 {",
          "3697:   SELECT snippet(t1,'', '', '--',-1,01)==0",
          "3698:     FROM t1 WHERE a MATCH 'rtree OR json1rtree OR json1';",
          "3699: } {0 {0 0 0 0 0 0 0}}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3700:   PRAGMA writable_schema = 1;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3913: }]} {}",
          "3915: do_catchsql_test 23.1 {",
          "3916:   SELECT 'FyzLy'FROM t1 WHERE t1 MATCH 'j';",
          "3917: } {1 {database disk image is malformed}}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3920:   PRAGMA writable_schema = 1;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "4131: }]} {}",
          "4133: do_catchsql_test 24.1 {",
          "4134:   WITH RECURSIVE c(x) AS (VALUES(1) UNION ALL SELECT '4hE'+x FROM c WHERE x<72)",
          "4135:     INSERT INTO t1(a) SELECT randomblob(2829) FROM c;",
          "4136: } {0 {}}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4139:   PRAGMA writable_schema = 1;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "4374: }]} {}",
          "4376: do_catchsql_test 25.1 {",
          "4377:   WITH RECURSIVE c(x) AS (VALUES(1) UNION ALL SELECT x%1 FROM c WHERE x<599237)",
          "4378:     INSERT INTO t1( a ) SELECT randomblob(3000) FROM t2 ;",
          "4379: } {0 {}}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4383:   PRAGMA writable_schema = 1;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "4608: }]} {}",
          "4610: do_execsql_test 26.1 {",
          "4611:   SELECT count(*) FROM (",
          "4612:     SELECT t1, (t1) FROM t1 WHERE b MATCH 'x'",
          "4613:   )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4618:   PRAGMA writable_schema = 1;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "4826: }]} {}",
          "4828: do_catchsql_test 27.2 {",
          "4829:   WITH RECURSIVE c(x) AS (VALUES(1) UNION ALL SELECT x GLOB 2.16770 FROM x)",
          "4830:     INSERT INTO t1(a) SELECT randomblob(3000) FROM t2 ;",
          "4831: } {0 {}}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4837:   PRAGMA writable_schema = 1;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "5058: }]} {}",
          "5060: do_catchsql_test 28.1 {",
          "5061:   WITH RECURSIVE c(x) AS (VALUES(1) UNION ALL SELECT 3+x FROM c WHERE x<72)",
          "5062:     INSERT INTO t1(a) SELECT randomblob(2829) FROM c;",
          "5063: } {0 {}}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5070:   PRAGMA writable_schema = 1;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "5312: }]} {}",
          "5314: do_catchsql_test 29.1 {",
          "5315:   INSERT INTO t1(a) SELECT X'819192E578DE3F';",
          "5316:   UPDATE t1 SET b=quote(zeroblob(current_date)) WHERE t1 MATCH 't*';",
          "5317:   INSERT INTO t1(b) VALUES(x'78');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5325:   PRAGMA writable_schema = 1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "00c12a51e3f69ca8f1a01447bfae8216a3039a53",
      "candidate_info": {
        "commit_hash": "00c12a51e3f69ca8f1a01447bfae8216a3039a53",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/00c12a51e3f69ca8f1a01447bfae8216a3039a53",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/select.c",
          "test/select1.test"
        ],
        "message": "Fix faulty asserts in the code generator. Ticket [c52b09c7f38903b1]\n\nFossilOrigin-Name: 01cdc590f7894ea23ee0d674747d7ebf8196efbef3c87d47e72dbc1ab6ae2883",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/select.c||src/select.c",
          "test/select1.test||test/select1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/select.c||src/select.c"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/select.c||src/select.c"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 9c458acba5a100a76148a3efb78ea9f57b85751e80788e4532694bd8976608a0",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/select.c||src/select.c": [
          "File: src/select.c -> src/select.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "5873:     assert( pItem->addrFillSub==0 );",
          "",
          "[Added Lines]",
          "5880:     testcase( pItem->addrFillSub!=0 );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5944:       int retAddr;",
          "5945:       struct SrcList_item *pPrior;",
          "5948:       pItem->regReturn = ++pParse->nMem;",
          "5949:       topAddr = sqlite3VdbeAddOp2(v, OP_Integer, 0, pItem->regReturn);",
          "5950:       pItem->addrFillSub = topAddr+1;",
          "",
          "[Removed Lines]",
          "5947:       assert( pItem->addrFillSub==0 );",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/select1.test||test/select1.test": [
          "File: test/select1.test -> test/select1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "1100:          UNION ALL SELECT * FROM t2 WHERE y=3 ORDER BY y,z LIMIT 4);",
          "1101: } {1 2 3}",
          "1103: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1103: # 2019-07-24 Ticket https://sqlite.org/src/tktview/c52b09c7f38903b1311",
          "1104: #",
          "1105: do_execsql_test select1-18.1 {",
          "1106:   DROP TABLE IF EXISTS t1;",
          "1107:   DROP TABLE IF EXISTS t2;",
          "1108:   CREATE TABLE t1(c);",
          "1109:   CREATE TABLE t2(x PRIMARY KEY, y);",
          "1110:   INSERT INTO t1(c) VALUES(123);",
          "1111:   INSERT INTO t2(x) VALUES(123);",
          "1112:   SELECT x FROM t2, t1 WHERE x BETWEEN c AND null OR x AND",
          "1113:   x IN ((SELECT x FROM (SELECT x FROM t2, t1",
          "1114:   WHERE x BETWEEN (SELECT x FROM (SELECT x COLLATE rtrim",
          "1115:   FROM t2, t1 WHERE x BETWEEN c AND null",
          "1116:   OR x AND x IN (c)), t1 WHERE x BETWEEN c AND null",
          "1117:   OR x AND x IN (c)) AND null",
          "1118:   OR NOT EXISTS(SELECT -4.81 FROM t1, t2 WHERE x BETWEEN c AND null",
          "1119:   OR x AND x IN ((SELECT x FROM (SELECT x FROM t2, t1",
          "1120:   WHERE x BETWEEN (SELECT x FROM (SELECT x BETWEEN c AND null",
          "1121:   OR x AND x IN (c)), t1 WHERE x BETWEEN c AND null",
          "1122:   OR x AND x IN (c)) AND null",
          "1123:   OR x AND x IN (c)), t1 WHERE x BETWEEN c AND null",
          "1124:   OR x AND x IN (c)))) AND x IN (c)",
          "1125:   ), t1 WHERE x BETWEEN c AND null",
          "1126:   OR x AND x IN (c)));",
          "1127: } {}",
          "1128: do_execsql_test select1-18.2 {",
          "1129:   DROP TABLE IF EXISTS t1;",
          "1130:   DROP TABLE IF EXISTS t2;",
          "1131:   CREATE TABLE t1(c);",
          "1132:   CREATE TABLE t2(x PRIMARY KEY, y);",
          "1133:   INSERT INTO t1(c) VALUES(123);",
          "1134:   INSERT INTO t2(x) VALUES(123);",
          "1135:   SELECT x FROM t2, t1 WHERE x BETWEEN c AND (c+1) OR x AND",
          "1136:   x IN ((SELECT x FROM (SELECT x FROM t2, t1",
          "1137:   WHERE x BETWEEN (SELECT x FROM (SELECT x COLLATE rtrim",
          "1138:   FROM t2, t1 WHERE x BETWEEN c AND (c+1)",
          "1139:   OR x AND x IN (c)), t1 WHERE x BETWEEN c AND (c+1)",
          "1140:   OR x AND x IN (c)) AND (c+1)",
          "1141:   OR NOT EXISTS(SELECT -4.81 FROM t1, t2 WHERE x BETWEEN c AND (c+1)",
          "1142:   OR x AND x IN ((SELECT x FROM (SELECT x FROM t2, t1",
          "1143:   WHERE x BETWEEN (SELECT x FROM (SELECT x BETWEEN c AND (c+1)",
          "1144:   OR x AND x IN (c)), t1 WHERE x BETWEEN c AND (c+1)",
          "1145:   OR x AND x IN (c)) AND (c+1)",
          "1146:   OR x AND x IN (c)), t1 WHERE x BETWEEN c AND (c+1)",
          "1147:   OR x AND x IN (c)))) AND x IN (c)",
          "1148:   ), t1 WHERE x BETWEEN c AND (c+1)",
          "1149:   OR x AND x IN (c)));",
          "1150: } {123}",
          "1151: do_execsql_test select1-18.3 {",
          "1152:   SELECT 1 FROM t1 WHERE (",
          "1153:     SELECT 2 FROM t2 WHERE (",
          "1154:       SELECT 3 FROM (",
          "1155:         SELECT x FROM t2 WHERE x=c OR x=(SELECT x FROM (VALUES(0)))",
          "1156:       ) WHERE x>c OR x=c",
          "1157:     )",
          "1158:   );",
          "1159: } {1}",
          "1160: do_execsql_test select1-18.4 {",
          "1161:   SELECT 1 FROM t1, t2 WHERE (",
          "1162:     SELECT 3 FROM (",
          "1163:       SELECT x FROM t2 WHERE x=c OR x=(SELECT x FROM (VALUES(0)))",
          "1164:     ) WHERE x>c OR x=c",
          "1165:   );",
          "1166: } {1}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bfa70de11729499021b5cf91e78fd49fa1784d43",
      "candidate_info": {
        "commit_hash": "bfa70de11729499021b5cf91e78fd49fa1784d43",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/bfa70de11729499021b5cf91e78fd49fa1784d43",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/fuzzdata8.db"
        ],
        "message": "New test cases added to test/fuzzdata8.db.\n\nFossilOrigin-Name: 61fdfc57b9539cb6da5fc24653da2c8fb7c041a7409df911df11b987ed479a3a",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e7aca0714bc475e04b16e9db78722ce025d2a1382f80cfc0a49cff2af904eae5",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "579d41dc8d938a936e3e8f19a114ed351b724dd0",
      "candidate_info": {
        "commit_hash": "579d41dc8d938a936e3e8f19a114ed351b724dd0",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/579d41dc8d938a936e3e8f19a114ed351b724dd0",
        "files": [
          "Makefile.in",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix the checksymbols target in Makefile.in.\n\nFossilOrigin-Name: 1956eb348170a9a873878b522f377fa7303cdb3beca41f5515b6b9da1b1f544d",
        "before_after_code_files": [
          "Makefile.in||Makefile.in",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "Makefile.in||Makefile.in": [
          "File: Makefile.in -> Makefile.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "1372: # releasetest.tcl script.",
          "1373: #",
          "1374: VALIDIDS=' sqlite3(changeset|changegroup|session)?_'",
          "1377:  echo '0 errors out of 1 tests'",
          "1379: # Build the amalgamation-autoconf package.  The amalamgation-tarball target builds",
          "",
          "[Removed Lines]",
          "1375: checksymbols: sqlite3.lo",
          "1376:  nm -g --defined-only sqlite3.lo | egrep -v $(VALIDIDS); test $$? -ne 0",
          "",
          "[Added Lines]",
          "1375: checksymbols: sqlite3.o",
          "1376:  nm -g --defined-only sqlite3.o",
          "1377:  nm -g --defined-only sqlite3.o | egrep -v $(VALIDIDS); test $$? -ne 0",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: c47e53b4d0f29628bd20ba3daf7e759c4bfed07710d982c095445c01376d57f5",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "acf6e08d20a663de5d4012effba666675bd23fe9",
      "candidate_info": {
        "commit_hash": "acf6e08d20a663de5d4012effba666675bd23fe9",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/acf6e08d20a663de5d4012effba666675bd23fe9",
        "files": [
          "manifest",
          "manifest.uuid",
          "tool/lemon.c"
        ],
        "message": "Fix typo for one instance of line number handling in the Lemon tool.\n\nFossilOrigin-Name: 980be1730dc1239c63a107923bf2e32b4ec7d4bc31b9190e711cc35f18cc2bb4",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "tool/lemon.c||tool/lemon.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: a97804620a27acc30bebd2aaa04e38f2f36de48b0931038ca8bdc9cb0c36b8f4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tool/lemon.c||tool/lemon.c": [
          "File: tool/lemon.c -> tool/lemon.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4426:     }",
          "4427:     i++;",
          "4428:   }",
          "4430:   fprintf(out, \"};\\n\"); lineno++;",
          "",
          "[Removed Lines]",
          "4429:   if( j>0 ) fprintf(out, \"\\n\"); lineno++;",
          "",
          "[Added Lines]",
          "4429:   if( j>0 ){ fprintf(out, \"\\n\"); lineno++; }",
          "",
          "---------------"
        ]
      }
    }
  ]
}