{
  "cve_id": "CVE-2019-14763",
  "cve_desc": "In the Linux kernel before 4.16.4, a double-locking error in drivers/usb/dwc3/gadget.c may potentially cause a deadlock with f_hid.",
  "repo": "torvalds/linux",
  "patch_hash": "c91815b596245fd7da349ecc43c8def670d2269e",
  "patch_info": {
    "commit_hash": "c91815b596245fd7da349ecc43c8def670d2269e",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/c91815b596245fd7da349ecc43c8def670d2269e",
    "files": [
      "drivers/usb/dwc3/gadget.c"
    ],
    "message": "usb: dwc3: gadget: never call ->complete() from ->ep_queue()\n\nThis is a requirement which has always existed but, somehow, wasn't\nreflected in the documentation and problems weren't found until now\nwhen Tuba Yavuz found a possible deadlock happening between dwc3 and\nf_hid. She described the situation as follows:\n\nspin_lock_irqsave(&hidg->write_spinlock, flags); // first acquire\n/* we our function has been disabled by host */\nif (!hidg->req) {\n\tfree_ep_req(hidg->in_ep, hidg->req);\n\tgoto try_again;\n}\n\n[...]\n\nstatus = usb_ep_queue(hidg->in_ep, hidg->req, GFP_ATOMIC);\n=>\n\t[...]\n\t=> usb_gadget_giveback_request\n\t\t=>\n\t\tf_hidg_req_complete\n\t\t\t=>\n\t\t\tspin_lock_irqsave(&hidg->write_spinlock, flags); // second acquire\n\nNote that this happens because dwc3 would call ->complete() on a\nfailed usb_ep_queue() due to failed Start Transfer command. This is,\nanyway, a theoretical situation because dwc3 currently uses \"No\nResponse Update Transfer\" command for Bulk and Interrupt endpoints.\n\nIt's still good to make this case impossible to happen even if the \"No\nReponse Update Transfer\" command is changed.\n\nReported-by: Tuba Yavuz <tuba@ece.ufl.edu>\nSigned-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>\nCc: stable <stable@vger.kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
    "before_after_code_files": [
      "drivers/usb/dwc3/gadget.c||drivers/usb/dwc3/gadget.c"
    ]
  },
  "patch_diff": {
    "drivers/usb/dwc3/gadget.c||drivers/usb/dwc3/gadget.c": [
      "File: drivers/usb/dwc3/gadget.c -> drivers/usb/dwc3/gadget.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "166:  dwc3_ep_inc_trb(&dep->trb_dequeue);",
      "167: }",
      "181: {",
      "182:  struct dwc3   *dwc = dep->dwc;",
      "",
      "[Removed Lines]",
      "179: void dwc3_gadget_giveback(struct dwc3_ep *dep, struct dwc3_request *req,",
      "180:   int status)",
      "",
      "[Added Lines]",
      "169: void dwc3_gadget_del_and_unmap_request(struct dwc3_ep *dep,",
      "170:   struct dwc3_request *req, int status)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "191:  if (req->trb)",
      "192:   usb_gadget_unmap_request_by_dev(dwc->sysdev,",
      "195:  req->trb = NULL;",
      "197:  trace_dwc3_gadget_giveback(req);",
      "199:  spin_unlock(&dwc->lock);",
      "200:  usb_gadget_giveback_request(&dep->endpoint, &req->request);",
      "201:  spin_lock(&dwc->lock);",
      "205: }",
      "",
      "[Removed Lines]",
      "193:       &req->request, req->direction);",
      "203:  if (dep->number > 1)",
      "204:   pm_runtime_put(dwc->dev);",
      "",
      "[Added Lines]",
      "183:     &req->request, req->direction);",
      "188:  if (dep->number > 1)",
      "189:   pm_runtime_put(dwc->dev);",
      "190: }",
      "202: void dwc3_gadget_giveback(struct dwc3_ep *dep, struct dwc3_request *req,",
      "203:   int status)",
      "204: {",
      "205:  struct dwc3   *dwc = dep->dwc;",
      "207:  dwc3_gadget_del_and_unmap_request(dep, req, status);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1227:   if (req->trb)",
      "1228:    memset(req->trb, 0, sizeof(struct dwc3_trb));",
      "1229:   dep->queued_requests--;",
      "1231:   return ret;",
      "1232:  }",
      "",
      "[Removed Lines]",
      "1230:   dwc3_gadget_giveback(dep, req, ret);",
      "",
      "[Added Lines]",
      "1237:   dwc3_gadget_del_and_unmap_request(dep, req, ret);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "691025107eb7544fdd25f836c8c6e857a344828b",
      "candidate_info": {
        "commit_hash": "691025107eb7544fdd25f836c8c6e857a344828b",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/691025107eb7544fdd25f836c8c6e857a344828b",
        "files": [
          "drivers/usb/dwc3/gadget.c"
        ],
        "message": "usb: dwc3: gadget: dwc3_gadget_del_and_unmap_request() can be static\n\nFixes the following sparse warning:\n\ndrivers/usb/dwc3/gadget.c:169:6: warning:\n symbol 'dwc3_gadget_del_and_unmap_request' was not declared. Should it be static?\n\nSigned-off-by: Wei Yongjun <weiyongjun1@huawei.com>\nSigned-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>",
        "before_after_code_files": [
          "drivers/usb/dwc3/gadget.c||drivers/usb/dwc3/gadget.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "drivers/usb/dwc3/gadget.c||drivers/usb/dwc3/gadget.c"
          ],
          "candidate": [
            "drivers/usb/dwc3/gadget.c||drivers/usb/dwc3/gadget.c"
          ]
        }
      },
      "candidate_diff": {
        "drivers/usb/dwc3/gadget.c||drivers/usb/dwc3/gadget.c": [
          "File: drivers/usb/dwc3/gadget.c -> drivers/usb/dwc3/gadget.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "169:  dwc3_ep_inc_trb(&dep->trb_dequeue);",
          "170: }",
          "173:   struct dwc3_request *req, int status)",
          "174: {",
          "175:  struct dwc3   *dwc = dep->dwc;",
          "",
          "[Removed Lines]",
          "172: void dwc3_gadget_del_and_unmap_request(struct dwc3_ep *dep,",
          "",
          "[Added Lines]",
          "172: static void dwc3_gadget_del_and_unmap_request(struct dwc3_ep *dep,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9cffd15de0c322c574085759793dbbcfafa91746",
      "candidate_info": {
        "commit_hash": "9cffd15de0c322c574085759793dbbcfafa91746",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/9cffd15de0c322c574085759793dbbcfafa91746",
        "files": [
          "drivers/usb/dwc3/gadget.c"
        ],
        "message": "usb: dwc3: gadget: dwc3_gadget_del_and_unmap_request() can be static\n\nFixes the following sparse warning:\n\ndrivers/usb/dwc3/gadget.c:169:6: warning:\n symbol 'dwc3_gadget_del_and_unmap_request' was not declared. Should it be static?\n\nSigned-off-by: Wei Yongjun <weiyongjun1@huawei.com>\nSigned-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>",
        "before_after_code_files": [
          "drivers/usb/dwc3/gadget.c||drivers/usb/dwc3/gadget.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "drivers/usb/dwc3/gadget.c||drivers/usb/dwc3/gadget.c"
          ],
          "candidate": [
            "drivers/usb/dwc3/gadget.c||drivers/usb/dwc3/gadget.c"
          ]
        }
      },
      "candidate_diff": {
        "drivers/usb/dwc3/gadget.c||drivers/usb/dwc3/gadget.c": [
          "File: drivers/usb/dwc3/gadget.c -> drivers/usb/dwc3/gadget.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "166:  dwc3_ep_inc_trb(&dep->trb_dequeue);",
          "167: }",
          "170:   struct dwc3_request *req, int status)",
          "171: {",
          "172:  struct dwc3   *dwc = dep->dwc;",
          "",
          "[Removed Lines]",
          "169: void dwc3_gadget_del_and_unmap_request(struct dwc3_ep *dep,",
          "",
          "[Added Lines]",
          "169: static void dwc3_gadget_del_and_unmap_request(struct dwc3_ep *dep,",
          "",
          "---------------"
        ]
      }
    }
  ]
}