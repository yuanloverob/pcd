{
  "cve_id": "CVE-2016-10009",
  "cve_desc": "Untrusted search path vulnerability in ssh-agent.c in ssh-agent in OpenSSH before 7.4 allows remote attackers to execute arbitrary local PKCS#11 modules by leveraging control over a forwarded agent-socket.",
  "repo": "openbsd/src",
  "patch_hash": "9476ce1dd37d3c3218d5640b74c34c65e5f4efe5",
  "patch_info": {
    "commit_hash": "9476ce1dd37d3c3218d5640b74c34c65e5f4efe5",
    "repo": "openbsd/src",
    "commit_url": "https://github.com/openbsd/src/commit/9476ce1dd37d3c3218d5640b74c34c65e5f4efe5",
    "files": [
      "usr.bin/ssh/ssh-agent.1",
      "usr.bin/ssh/ssh-agent.c"
    ],
    "message": "add a whitelist of paths from which ssh-agent will load (via ssh-pkcs11-helper) a PKCS#11 module; ok markus@",
    "before_after_code_files": [
      "usr.bin/ssh/ssh-agent.1||usr.bin/ssh/ssh-agent.1",
      "usr.bin/ssh/ssh-agent.c||usr.bin/ssh/ssh-agent.c"
    ]
  },
  "patch_diff": {
    "usr.bin/ssh/ssh-agent.1||usr.bin/ssh/ssh-agent.1": [
      "File: usr.bin/ssh/ssh-agent.1 -> usr.bin/ssh/ssh-agent.1",
      "--- Hunk 1 ---",
      "[Context before]",
      "2: .\\\"",
      "3: .\\\" Author: Tatu Ylonen <ylo@cs.hut.fi>",
      "4: .\\\" Copyright (c) 1995 Tatu Ylonen <ylo@cs.hut.fi>, Espoo, Finland",
      "",
      "[Removed Lines]",
      "1: .\\\" $OpenBSD: ssh-agent.1,v 1.62 2015/11/15 23:54:15 jmc Exp $",
      "",
      "[Added Lines]",
      "1: .\\\" $OpenBSD: ssh-agent.1,v 1.63 2016/11/30 03:07:37 djm Exp $",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "34: .\\\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF",
      "35: .\\\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
      "36: .\\\"",
      "38: .Dt SSH-AGENT 1",
      "39: .Os",
      "40: .Sh NAME",
      "",
      "[Removed Lines]",
      "37: .Dd $Mdocdate: November 15 2015 $",
      "",
      "[Added Lines]",
      "37: .Dd $Mdocdate: November 30 2016 $",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "47: .Op Fl a Ar bind_address",
      "48: .Op Fl E Ar fingerprint_hash",
      "49: .Op Fl t Ar life",
      "50: .Op Ar command Op Ar arg ...",
      "51: .Nm ssh-agent",
      "52: .Op Fl c | s",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "50: .Op Fl P Ar pkcs11_whitelist",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "121: Kill the current agent (given by the",
      "122: .Ev SSH_AGENT_PID",
      "123: environment variable).",
      "124: .It Fl s",
      "125: Generate Bourne shell commands on",
      "126: .Dv stdout .",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "125: .It Fl P",
      "126: Specify a pattern-list of acceptable paths for PKCS#11 shared libraries",
      "127: that may be added using the",
      "128: .Fl s",
      "129: option to",
      "130: .Xr ssh-add 1 .",
      "131: The default is to allow loading PKCS#11 libraries from",
      "132: .Dq /usr/lib/*,/usr/local/lib/* .",
      "133: PKCS#11 libraries that do not match the whitelist will be refused.",
      "134: See PATTERNS in",
      "135: .Xr ssh_config 5",
      "136: for a description of pattern-list syntax.",
      "",
      "---------------"
    ],
    "usr.bin/ssh/ssh-agent.c||usr.bin/ssh/ssh-agent.c": [
      "File: usr.bin/ssh/ssh-agent.c -> usr.bin/ssh/ssh-agent.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "69: #include \"misc.h\"",
      "70: #include \"digest.h\"",
      "71: #include \"ssherr.h\"",
      "73: #ifdef ENABLE_PKCS11",
      "74: #include \"ssh-pkcs11.h\"",
      "75: #endif",
      "77: typedef enum {",
      "78:  AUTH_UNUSED,",
      "79:  AUTH_SOCKET,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "72: #include \"match.h\"",
      "78: #ifndef DEFAULT_PKCS11_WHITELIST",
      "79: # define DEFAULT_PKCS11_WHITELIST \"/usr/lib/*,/usr/local/lib/*\"",
      "80: #endif",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "121: char socket_name[PATH_MAX];",
      "122: char socket_dir[PATH_MAX];",
      "125: #define LOCK_SIZE 32",
      "126: #define LOCK_SALT_SIZE 16",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "130: static char *pkcs11_whitelist;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "724: static void",
      "725: process_add_smartcard_key(SocketEntry *e)",
      "726: {",
      "728:  int r, i, version, count = 0, success = 0, confirm = 0;",
      "729:  u_int seconds;",
      "730:  time_t death = 0;",
      "",
      "[Removed Lines]",
      "727:  char *provider = NULL, *pin;",
      "",
      "[Added Lines]",
      "735:  char *provider = NULL, *pin, canonical_provider[PATH_MAX];",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "756:    goto send;",
      "757:   }",
      "758:  }",
      "759:  if (lifetime && !death)",
      "760:   death = monotime() + lifetime;",
      "763:  for (i = 0; i < count; i++) {",
      "764:   k = keys[i];",
      "765:   version = k->type == KEY_RSA1 ? 1 : 2;",
      "",
      "[Removed Lines]",
      "762:  count = pkcs11_add_provider(provider, pin, &keys);",
      "",
      "[Added Lines]",
      "767:  if (realpath(provider, canonical_provider) == NULL) {",
      "768:   verbose(\"failed PKCS#11 add of \\\"%.100s\\\": realpath: %s\",",
      "769:       provider, strerror(errno));",
      "770:   goto send;",
      "771:  }",
      "772:  if (match_pattern_list(canonical_provider, pkcs11_whitelist, 0) != 1) {",
      "773:   verbose(\"refusing PKCS#11 add of \\\"%.100s\\\": \"",
      "774:       \"provider not whitelisted\", canonical_provider);",
      "775:   goto send;",
      "776:  }",
      "777:  debug(\"%s: add %.100s\", __func__, canonical_provider);",
      "781:  count = pkcs11_add_provider(canonical_provider, pin, &keys);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "767:   if (lookup_identity(k, version) == NULL) {",
      "768:    id = xcalloc(1, sizeof(Identity));",
      "769:    id->key = k;",
      "772:    id->death = death;",
      "773:    id->confirm = confirm;",
      "774:    TAILQ_INSERT_TAIL(&tab->idlist, id, next);",
      "",
      "[Removed Lines]",
      "770:    id->provider = xstrdup(provider);",
      "",
      "[Added Lines]",
      "789:    id->provider = xstrdup(canonical_provider);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1157: {",
      "1158:  fprintf(stderr,",
      "1159:      \"usage: ssh-agent [-c | -s] [-Dd] [-a bind_address] [-E fingerprint_hash]\\n\"",
      "1161:      \"       ssh-agent [-c | -s] -k\\n\");",
      "1162:  exit(1);",
      "1163: }",
      "",
      "[Removed Lines]",
      "1160:      \"                 [-t life] [command [arg ...]]\\n\"",
      "",
      "[Added Lines]",
      "1179:      \"                 [-P pkcs11_whitelist] [-t life] [command [arg ...]]\\n\"",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1191:  OpenSSL_add_all_algorithms();",
      "1192: #endif",
      "1195:   switch (ch) {",
      "1196:   case 'E':",
      "1197:    fingerprint_hash = ssh_digest_alg_by_name(optarg);",
      "",
      "[Removed Lines]",
      "1194:  while ((ch = getopt(ac, av, \"cDdksE:a:t:\")) != -1) {",
      "",
      "[Added Lines]",
      "1213:  while ((ch = getopt(ac, av, \"cDdksE:a:P:t:\")) != -1) {",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1206:   case 'k':",
      "1207:    k_flag++;",
      "1208:    break;",
      "1209:   case 's':",
      "1210:    if (c_flag)",
      "1211:     usage();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1228:   case 'P':",
      "1229:    if (pkcs11_whitelist != NULL)",
      "1230:     fatal(\"-P option already specified\");",
      "1231:    pkcs11_whitelist = xstrdup(optarg);",
      "1232:    break;",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1240:  if (ac > 0 && (c_flag || k_flag || s_flag || d_flag || D_flag))",
      "1241:   usage();",
      "1243:  if (ac == 0 && !c_flag && !s_flag) {",
      "1244:   shell = getenv(\"SHELL\");",
      "1245:   if (shell != NULL && (len = strlen(shell)) > 2 &&",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1267:  if (pkcs11_whitelist == NULL)",
      "1268:   pkcs11_whitelist = xstrdup(DEFAULT_PKCS11_WHITELIST);",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "1385:  signal(SIGTERM, cleanup_handler);",
      "1386:  nalloc = 0;",
      "1389:   fatal(\"%s: pledge: %s\", __progname, strerror(errno));",
      "1391:  while (1) {",
      "",
      "[Removed Lines]",
      "1388:  if (pledge(\"stdio cpath unix id proc exec\", NULL) == -1)",
      "",
      "[Added Lines]",
      "1415:  if (pledge(\"stdio rpath cpath unix id proc exec\", NULL) == -1)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3c54a32f53d81cd66eac58b8caeeb2bc14c76a90",
      "candidate_info": {
        "commit_hash": "3c54a32f53d81cd66eac58b8caeeb2bc14c76a90",
        "repo": "openbsd/src",
        "commit_url": "https://github.com/openbsd/src/commit/3c54a32f53d81cd66eac58b8caeeb2bc14c76a90",
        "files": [
          "usr.bin/ssh/ssh-pkcs11.c"
        ],
        "message": "Improve pkcs11_add_provider() logging: demote some excessively verbose error()s to debug()s, include PKCS#11 provider name and slot in log messages where possible. bz#2610, based on patch from Jakub Jelen",
        "before_after_code_files": [
          "usr.bin/ssh/ssh-pkcs11.c||usr.bin/ssh/ssh-pkcs11.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "usr.bin/ssh/ssh-pkcs11.c||usr.bin/ssh/ssh-pkcs11.c": [
          "File: usr.bin/ssh/ssh-pkcs11.c -> usr.bin/ssh/ssh-pkcs11.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "569:  if (pkcs11_provider_lookup(provider_id) != NULL) {",
          "571:   goto fail;",
          "572:  }",
          "",
          "[Removed Lines]",
          "570:   error(\"provider already registered: %s\", provider_id);",
          "",
          "[Added Lines]",
          "570:   debug(\"%s: provider already registered: %s\",",
          "571:       __func__, provider_id);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "584:  p->handle = handle;",
          "586:  if ((rv = (*getfunctionlist)(&f)) != CKR_OK) {",
          "588:   goto fail;",
          "589:  }",
          "590:  p->function_list = f;",
          "591:  if ((rv = f->C_Initialize(NULL)) != CKR_OK) {",
          "593:   goto fail;",
          "594:  }",
          "595:  need_finalize = 1;",
          "596:  if ((rv = f->C_GetInfo(&p->info)) != CKR_OK) {",
          "598:   goto fail;",
          "599:  }",
          "600:  rmspace(p->info.manufacturerID, sizeof(p->info.manufacturerID));",
          "601:  rmspace(p->info.libraryDescription, sizeof(p->info.libraryDescription));",
          "603:      \" libraryDescription <%s> libraryVersion %d.%d\",",
          "604:      p->info.manufacturerID,",
          "605:      p->info.cryptokiVersion.major,",
          "606:      p->info.cryptokiVersion.minor,",
          "",
          "[Removed Lines]",
          "587:   error(\"C_GetFunctionList failed: %lu\", rv);",
          "592:   error(\"C_Initialize failed: %lu\", rv);",
          "597:   error(\"C_GetInfo failed: %lu\", rv);",
          "602:  debug(\"manufacturerID <%s> cryptokiVersion %d.%d\"",
          "",
          "[Added Lines]",
          "588:   error(\"C_GetFunctionList for provider %s failed: %lu\",",
          "589:       provider_id, rv);",
          "594:   error(\"C_Initialize for provider %s failed: %lu\",",
          "595:       provider_id, rv);",
          "600:   error(\"C_GetInfo for provider %s failed: %lu\",",
          "601:       provider_id, rv);",
          "606:  debug(\"provider %s: manufacturerID <%s> cryptokiVersion %d.%d\"",
          "608:      provider_id,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "612:   goto fail;",
          "613:  }",
          "614:  if (p->nslots == 0) {",
          "616:   goto fail;",
          "617:  }",
          "618:  p->slotlist = xcalloc(p->nslots, sizeof(CK_SLOT_ID));",
          "619:  if ((rv = f->C_GetSlotList(CK_TRUE, p->slotlist, &p->nslots))",
          "620:      != CKR_OK) {",
          "622:   goto fail;",
          "623:  }",
          "624:  p->slotinfo = xcalloc(p->nslots, sizeof(struct pkcs11_slotinfo));",
          "",
          "[Removed Lines]",
          "615:   error(\"no slots\");",
          "621:   error(\"C_GetSlotList failed: %lu\", rv);",
          "",
          "[Added Lines]",
          "620:   debug(\"%s: provider %s returned no slots\", __func__,",
          "621:       provider_id);",
          "627:   error(\"C_GetSlotList for provider %s failed: %lu\",",
          "628:       provider_id, rv);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "628:   token = &p->slotinfo[i].token;",
          "629:   if ((rv = f->C_GetTokenInfo(p->slotlist[i], token))",
          "630:       != CKR_OK) {",
          "632:    continue;",
          "633:   }",
          "634:   if ((token->flags & CKF_TOKEN_INITIALIZED) == 0) {",
          "637:    continue;",
          "638:   }",
          "639:   rmspace(token->label, sizeof(token->label));",
          "640:   rmspace(token->manufacturerID, sizeof(token->manufacturerID));",
          "641:   rmspace(token->model, sizeof(token->model));",
          "642:   rmspace(token->serialNumber, sizeof(token->serialNumber));",
          "645:       token->label, token->manufacturerID, token->model,",
          "646:       token->serialNumber, token->flags);",
          "",
          "[Removed Lines]",
          "631:    error(\"C_GetTokenInfo failed: %lu\", rv);",
          "635:    debug2(\"%s: ignoring uninitialised token in slot %lu\",",
          "636:        __func__, (unsigned long)i);",
          "643:   debug(\"label <%s> manufacturerID <%s> model <%s> serial <%s>\"",
          "644:       \" flags 0x%lx\",",
          "",
          "[Added Lines]",
          "638:    error(\"C_GetTokenInfo for provider %s slot %lu \"",
          "639:        \"failed: %lu\", provider_id, (unsigned long)i, rv);",
          "643:    debug2(\"%s: ignoring uninitialised token in \"",
          "644:        \"provider %s slot %lu\", __func__,",
          "645:        provider_id, (unsigned long)i);",
          "652:   debug(\"provider %s slot %lu: label <%s> manufacturerID <%s> \"",
          "653:       \"model <%s> serial <%s> flags 0x%lx\",",
          "654:       provider_id, (unsigned long)i,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "654:   return (nkeys);",
          "655:  }",
          "658: fail:",
          "659:  if (need_finalize && (rv = f->C_Finalize(NULL)) != CKR_OK)",
          "661:  if (p) {",
          "662:   free(p->slotlist);",
          "663:   free(p->slotinfo);",
          "",
          "[Removed Lines]",
          "656:  error(\"no keys\");",
          "660:   error(\"C_Finalize failed: %lu\", rv);",
          "",
          "[Added Lines]",
          "666:  debug(\"%s: provider %s returned no keys\", __func__, provider_id);",
          "670:   error(\"C_Finalize for provider %s failed: %lu\",",
          "671:       provider_id, rv);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ad5db46ccfde5f483613ce24881d23dfccaf4cd3",
      "candidate_info": {
        "commit_hash": "ad5db46ccfde5f483613ce24881d23dfccaf4cd3",
        "repo": "openbsd/src",
        "commit_url": "https://github.com/openbsd/src/commit/ad5db46ccfde5f483613ce24881d23dfccaf4cd3",
        "files": [
          "usr.bin/ssh/ssh-agent.c"
        ],
        "message": "downgrade a couple more request parsing errors from process-fatal to just returning failure, making them consistent with the others that were already like that.",
        "before_after_code_files": [
          "usr.bin/ssh/ssh-agent.c||usr.bin/ssh/ssh-agent.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "usr.bin/ssh/ssh-agent.c||usr.bin/ssh/ssh-agent.c"
          ],
          "candidate": [
            "usr.bin/ssh/ssh-agent.c||usr.bin/ssh/ssh-agent.c"
          ]
        }
      },
      "candidate_diff": {
        "usr.bin/ssh/ssh-agent.c||usr.bin/ssh/ssh-agent.c": [
          "File: usr.bin/ssh/ssh-agent.c -> usr.bin/ssh/ssh-agent.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "517: static void",
          "518: process_add_smartcard_key(SocketEntry *e)",
          "519: {",
          "521:  int r, i, count = 0, success = 0, confirm = 0;",
          "522:  u_int seconds;",
          "523:  time_t death = 0;",
          "",
          "[Removed Lines]",
          "520:  char *provider = NULL, *pin, canonical_provider[PATH_MAX];",
          "",
          "[Added Lines]",
          "525:  char *provider = NULL, *pin = NULL, canonical_provider[PATH_MAX];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "526:  Identity *id;",
          "528:  if ((r = sshbuf_get_cstring(e->request, &provider, NULL)) != 0 ||",
          "532:  while (sshbuf_len(e->request)) {",
          "535:   switch (type) {",
          "536:   case SSH_AGENT_CONSTRAIN_LIFETIME:",
          "539:         __func__, ssh_err(r));",
          "540:    death = monotime() + seconds;",
          "541:    break;",
          "542:   case SSH_AGENT_CONSTRAIN_CONFIRM:",
          "",
          "[Removed Lines]",
          "529:      (r = sshbuf_get_cstring(e->request, &pin, NULL)) != 0)",
          "530:   fatal(\"%s: buffer error: %s\", __func__, ssh_err(r));",
          "533:   if ((r = sshbuf_get_u8(e->request, &type)) != 0)",
          "534:    fatal(\"%s: buffer error: %s\", __func__, ssh_err(r));",
          "537:    if ((r = sshbuf_get_u32(e->request, &seconds)) != 0)",
          "538:     fatal(\"%s: buffer error: %s\",",
          "",
          "[Added Lines]",
          "534:      (r = sshbuf_get_cstring(e->request, &pin, NULL)) != 0) {",
          "535:   error(\"%s: buffer error: %s\", __func__, ssh_err(r));",
          "536:   goto send;",
          "537:  }",
          "540:   if ((r = sshbuf_get_u8(e->request, &type)) != 0) {",
          "541:    error(\"%s: buffer error: %s\", __func__, ssh_err(r));",
          "542:    goto send;",
          "543:   }",
          "546:    if ((r = sshbuf_get_u32(e->request, &seconds)) != 0) {",
          "547:     error(\"%s: buffer error: %s\",",
          "549:     goto send;",
          "550:    }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "594:  Identity *id, *nxt;",
          "596:  if ((r = sshbuf_get_cstring(e->request, &provider, NULL)) != 0 ||",
          "599:  free(pin);",
          "601:  if (realpath(provider, canonical_provider) == NULL) {",
          "",
          "[Removed Lines]",
          "597:      (r = sshbuf_get_cstring(e->request, &pin, NULL)) != 0)",
          "598:   fatal(\"%s: buffer error: %s\", __func__, ssh_err(r));",
          "",
          "[Added Lines]",
          "608:      (r = sshbuf_get_cstring(e->request, &pin, NULL)) != 0) {",
          "609:   error(\"%s: buffer error: %s\", __func__, ssh_err(r));",
          "610:   goto send;",
          "611:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "582ea5aed1a077bd03363a2fc9d1c7b447e5139e",
      "candidate_info": {
        "commit_hash": "582ea5aed1a077bd03363a2fc9d1c7b447e5139e",
        "repo": "openbsd/src",
        "commit_url": "https://github.com/openbsd/src/commit/582ea5aed1a077bd03363a2fc9d1c7b447e5139e",
        "files": [
          "usr.bin/ssh/ssh-agent.c"
        ],
        "message": "relax PKCS#11 whitelist a bit to allow libexec as well as lib directories.",
        "before_after_code_files": [
          "usr.bin/ssh/ssh-agent.c||usr.bin/ssh/ssh-agent.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "usr.bin/ssh/ssh-agent.c||usr.bin/ssh/ssh-agent.c"
          ],
          "candidate": [
            "usr.bin/ssh/ssh-agent.c||usr.bin/ssh/ssh-agent.c"
          ]
        }
      },
      "candidate_diff": {
        "usr.bin/ssh/ssh-agent.c||usr.bin/ssh/ssh-agent.c": [
          "File: usr.bin/ssh/ssh-agent.c -> usr.bin/ssh/ssh-agent.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "76: #endif",
          "78: #ifndef DEFAULT_PKCS11_WHITELIST",
          "80: #endif",
          "82: typedef enum {",
          "",
          "[Removed Lines]",
          "79: # define DEFAULT_PKCS11_WHITELIST \"/usr/lib/*,/usr/local/lib/*\"",
          "",
          "[Added Lines]",
          "79: # define DEFAULT_PKCS11_WHITELIST \"/usr/lib*/*,/usr/local/lib*/*\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e724098537df91e837728edb862a97f2acfeda6b",
      "candidate_info": {
        "commit_hash": "e724098537df91e837728edb862a97f2acfeda6b",
        "repo": "openbsd/src",
        "commit_url": "https://github.com/openbsd/src/commit/e724098537df91e837728edb862a97f2acfeda6b",
        "files": [
          "usr.bin/ssh/ssh-agent.1"
        ],
        "message": "tweak previous; while here fix up FILES and AUTHORS;",
        "before_after_code_files": [
          "usr.bin/ssh/ssh-agent.1||usr.bin/ssh/ssh-agent.1"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "usr.bin/ssh/ssh-agent.1||usr.bin/ssh/ssh-agent.1"
          ],
          "candidate": [
            "usr.bin/ssh/ssh-agent.1||usr.bin/ssh/ssh-agent.1"
          ]
        }
      },
      "candidate_diff": {
        "usr.bin/ssh/ssh-agent.1||usr.bin/ssh/ssh-agent.1": [
          "File: usr.bin/ssh/ssh-agent.1 -> usr.bin/ssh/ssh-agent.1",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: .\\\"",
          "3: .\\\" Author: Tatu Ylonen <ylo@cs.hut.fi>",
          "4: .\\\" Copyright (c) 1995 Tatu Ylonen <ylo@cs.hut.fi>, Espoo, Finland",
          "",
          "[Removed Lines]",
          "1: .\\\" $OpenBSD: ssh-agent.1,v 1.63 2016/11/30 03:07:37 djm Exp $",
          "",
          "[Added Lines]",
          "1: .\\\" $OpenBSD: ssh-agent.1,v 1.64 2016/11/30 06:54:26 jmc Exp $",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46: .Op Fl \\&Dd",
          "47: .Op Fl a Ar bind_address",
          "48: .Op Fl E Ar fingerprint_hash",
          "50: .Op Fl P Ar pkcs11_whitelist",
          "51: .Op Ar command Op Ar arg ...",
          "52: .Nm ssh-agent",
          "53: .Op Fl c | s",
          "",
          "[Removed Lines]",
          "49: .Op Fl t Ar life",
          "",
          "[Added Lines]",
          "50: .Op Fl t Ar life",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "122: Kill the current agent (given by the",
          "123: .Ev SSH_AGENT_PID",
          "124: environment variable).",
          "126: Specify a pattern-list of acceptable paths for PKCS#11 shared libraries",
          "127: that may be added using the",
          "128: .Fl s",
          "",
          "[Removed Lines]",
          "125: .It Fl P",
          "",
          "[Added Lines]",
          "125: .It Fl P Ar pkcs11_whitelist",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "208: line terminates.",
          "209: .Sh FILES",
          "210: .Bl -tag -width Ds",
          "212: .Ux Ns -domain",
          "213: sockets used to contain the connection to the authentication agent.",
          "214: These sockets should only be readable by the owner.",
          "",
          "[Removed Lines]",
          "211: .It Pa $TMPDIR/ssh-XXXXXXXXXX/agent.\\*(Ltppid\\*(Gt",
          "",
          "[Added Lines]",
          "211: .It Pa $TMPDIR/ssh-XXXXXXXXXX/agent.<ppid>",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "220: .Xr ssh-keygen 1 ,",
          "221: .Xr sshd 8",
          "222: .Sh AUTHORS",
          "",
          "[Removed Lines]",
          "223: OpenSSH is a derivative of the original and free",
          "224: ssh 1.2.12 release by Tatu Ylonen.",
          "225: Aaron Campbell, Bob Beck, Markus Friedl, Niels Provos,",
          "226: Theo de Raadt and Dug Song",
          "227: removed many bugs, re-added newer features and",
          "228: created OpenSSH.",
          "229: Markus Friedl contributed the support for SSH",
          "230: protocol versions 1.5 and 2.0.",
          "",
          "[Added Lines]",
          "223: .An -nosplit",
          "224: OpenSSH is a derivative of the original and free ssh 1.2.12 release by",
          "225: .An Tatu Ylonen .",
          "226: .An Aaron Campbell , Bob Beck , Markus Friedl , Niels Provos , Theo de Raadt",
          "227: and",
          "228: .An Dug Song",
          "229: removed many bugs, re-added newer features and created OpenSSH.",
          "230: .An Markus Friedl",
          "231: contributed the support for SSH protocol versions 1.5 and 2.0.",
          "",
          "---------------"
        ]
      }
    }
  ]
}