{
  "cve_id": "CVE-2022-0521",
  "cve_desc": "Access of Memory Location After End of Buffer in GitHub repository radareorg/radare2 prior to 5.6.2.",
  "repo": "radareorg/radare2",
  "patch_hash": "6c4428f018d385fc80a33ecddcb37becea685dd5",
  "patch_info": {
    "commit_hash": "6c4428f018d385fc80a33ecddcb37becea685dd5",
    "repo": "radareorg/radare2",
    "commit_url": "https://github.com/radareorg/radare2/commit/6c4428f018d385fc80a33ecddcb37becea685dd5",
    "files": [
      "shlr/java/class.c"
    ],
    "message": "Improve boundary checks to fix oobread segfaults ##crash\n\n* Reported by Cen Zhang via huntr.dev\n* Reproducer: bins/fuzzed/javaoob-havoc.class",
    "before_after_code_files": [
      "shlr/java/class.c||shlr/java/class.c"
    ]
  },
  "patch_diff": {
    "shlr/java/class.c||shlr/java/class.c": [
      "File: shlr/java/class.c -> shlr/java/class.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3628: R_API RBinJavaAttrInfo *r_bin_java_enclosing_methods_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {",
      "3629:  ut64 offset = 6;",
      "3630:  RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
      "3631:  if (!attr || sz < 10) {",
      "3632:   free (attr);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3630:  if (sz < 8) {",
      "3631:   return NULL;",
      "3632:  }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "3716: R_API RBinJavaAttrInfo *r_bin_java_inner_classes_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {",
      "3717:  RBinJavaClassesAttribute *icattr;",
      "3719:  RBinJavaCPTypeObj *obj;",
      "3720:  ut32 i = 0;",
      "3721:  ut64 offset = 0, curpos;",
      "3726:   return NULL;",
      "3727:  }",
      "3731:  }",
      "3732:  attr->type = R_BIN_JAVA_ATTR_TYPE_INNER_CLASSES_ATTR;",
      "3733:  attr->info.inner_classes_attr.number_of_classes = R_BIN_JAVA_USHORT (buffer, offset);",
      "3734:  offset += 2;",
      "3735:  attr->info.inner_classes_attr.classes = r_list_newf (r_bin_java_inner_classes_attr_entry_free);",
      "3736:  for (i = 0; i < attr->info.inner_classes_attr.number_of_classes; i++) {",
      "3737:   curpos = buf_offset + offset;",
      "3739:    eprintf (\"Invalid amount of inner classes\\n\");",
      "3740:    break;",
      "3741:   }",
      "",
      "[Removed Lines]",
      "3718:  RBinJavaAttrInfo *attr = NULL;",
      "3722:  attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
      "3723:  offset += 6;",
      "3724:  if (buf_offset + offset + 8 > sz) {",
      "3725:   eprintf (\"Invalid amount of inner classes\\n\");",
      "3728:  if (attr == NULL) {",
      "3730:   return attr;",
      "3738:   if (buf_offset + offset + 8 > sz) {",
      "",
      "[Added Lines]",
      "3724:  if (sz < 8) {",
      "3727:  RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
      "3728:  if (!attr) {",
      "3729:   return NULL;",
      "3731:  offset += 6;",
      "3738:   if (offset + 8 > sz) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "3874: R_API RBinJavaAttrInfo *r_bin_java_source_debug_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {",
      "3875:  ut64 offset = 6;",
      "3876:  RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
      "3877:  if (!attr) {",
      "3878:   return NULL;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3876:  if (sz < 8) {",
      "3877:   return NULL;",
      "3878:  }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "3940: R_API RBinJavaAttrInfo *r_bin_java_local_variable_table_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {",
      "3941:  RBinJavaLocalVariableAttribute *lvattr;",
      "3942:  ut64 curpos = 0, offset = 6;",
      "3944:  ut32 i = 0;",
      "3946:   return NULL;",
      "3947:  }",
      "3949:  if (!attr) {",
      "3950:   return NULL;",
      "3951:  }",
      "",
      "[Removed Lines]",
      "3943:  RBinJavaAttrInfo *attr;",
      "3945:  if (!buffer || sz < 1) {",
      "3948:  attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
      "",
      "[Added Lines]",
      "3947:  if (!bin || !buffer || sz < 8) {",
      "3950:  RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "4019: }",
      "4021: R_API RBinJavaAttrInfo *r_bin_java_local_variable_type_table_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {",
      "4022:  RBinJavaLocalVariableTypeAttribute *lvattr;",
      "4023:  ut64 offset = 6;",
      "4024:  ut32 i = 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4024:  if (sz < 8) {",
      "4025:   return NULL;",
      "4026:  }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "4072: }",
      "4074: R_API RBinJavaAttrInfo *r_bin_java_source_code_file_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {",
      "4076:   return NULL;",
      "4077:  }",
      "4078:  ut64 offset = 0;",
      "4079:  RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
      "4080:  offset += 6;",
      "4083:  }",
      "4090:  return attr;",
      "4091: }",
      "",
      "[Removed Lines]",
      "4075:  if (!sz) {",
      "4081:  if (!attr) {",
      "4082:   return NULL;",
      "4084:  attr->type = R_BIN_JAVA_ATTR_TYPE_SOURCE_FILE_ATTR;",
      "4086:  attr->info.source_file_attr.sourcefile_idx = R_BIN_JAVA_USHORT (buffer, offset);",
      "4087:  offset += 2;",
      "4088:  attr->size = offset;",
      "",
      "[Added Lines]",
      "4080:  if (!sz || sz == UT64_MAX) {",
      "4083: #if 0",
      "4085:  if (sz < 8) {",
      "4086:   return NULL;",
      "4087:  }",
      "4088: #endif",
      "4092:  if (attr) {",
      "4093:   attr->type = R_BIN_JAVA_ATTR_TYPE_SOURCE_FILE_ATTR;",
      "4094:   attr->info.source_file_attr.sourcefile_idx = R_BIN_JAVA_USHORT (buffer, offset);",
      "4095:   offset += 2;",
      "4096:   attr->size = offset;",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "4095: }",
      "4097: R_API RBinJavaAttrInfo *r_bin_java_synthetic_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {",
      "4099:  RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
      "4100:  if (!attr) {",
      "4101:   return NULL;",
      "4102:  }",
      "4104:  attr->type = R_BIN_JAVA_ATTR_TYPE_SYNTHETIC_ATTR;",
      "4106:  return attr;",
      "4107: }",
      "",
      "[Removed Lines]",
      "4098:  ut64 offset = 0;",
      "4103:  offset += 6;",
      "4105:  attr->size = offset;",
      "",
      "[Added Lines]",
      "4107:  if (sz < 8) {",
      "4108:   return NULL;",
      "4109:  }",
      "4115:  attr->size = 6;",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "4134: R_API RBinJavaVerificationObj *r_bin_java_verification_info_from_type(RBinJavaObj *bin, R_BIN_JAVA_STACKMAP_TYPE type, ut32 value) {",
      "4135:  RBinJavaVerificationObj *se = R_NEW0 (RBinJavaVerificationObj);",
      "4149:  }",
      "4150:  return se;",
      "4151: }",
      "4153: R_API RBinJavaVerificationObj *r_bin_java_read_from_buffer_verification_info_new(ut8 *buffer, ut64 sz, ut64 buf_offset) {",
      "4154:  ut64 offset = 0;",
      "4155:  RBinJavaVerificationObj *se = R_NEW0 (RBinJavaVerificationObj);",
      "4156:  if (!se) {",
      "",
      "[Removed Lines]",
      "4136:  if (!se) {",
      "4137:   return NULL;",
      "4138:  }",
      "4139:  se->tag = type;",
      "4140:  if (se->tag == R_BIN_JAVA_STACKMAP_OBJECT) {",
      "4141:   se->info.obj_val_cp_idx = (ut16) value;",
      "4142:  } else if (se->tag == R_BIN_JAVA_STACKMAP_UNINIT) {",
      "4144:   se->info.uninit_offset = value;",
      "4145:   } else {",
      "4146:   se->info.uninit_offset = (ut16) value;",
      "4148:   se->info.uninit_offset = (ut16) value;",
      "",
      "[Added Lines]",
      "4146:  if (se) {",
      "4147:   se->tag = type;",
      "4148:   if (se->tag == R_BIN_JAVA_STACKMAP_OBJECT) {",
      "4149:    se->info.obj_val_cp_idx = (ut16) value;",
      "4150:   } else if (se->tag == R_BIN_JAVA_STACKMAP_UNINIT) {",
      "4151:    se->info.uninit_offset = (ut16) value;",
      "4152:   }",
      "4158:  if (sz < 8) {",
      "4159:   return NULL;",
      "4160:  }",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "4270: }",
      "4272: R_API RBinJavaStackMapFrame *r_bin_java_stack_map_frame_new(ut8 *buffer, ut64 sz, RBinJavaStackMapFrame *p_frame, ut64 buf_offset) {",
      "4273:  RBinJavaStackMapFrame *stack_frame = r_bin_java_default_stack_frame ();",
      "4274:  RBinJavaVerificationObj *se = NULL;",
      "4275:  ut64 offset = 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4280:  if (sz < 8) {",
      "4281:   return NULL;",
      "4282:  }",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "4573: R_API RBinJavaAttrInfo *r_bin_java_stack_map_table_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {",
      "4574:  ut32 i = 0;",
      "4575:  ut64 offset = 0;",
      "4576:  RBinJavaStackMapFrame *stack_frame = NULL, *new_stack_frame = NULL;",
      "4577:  if (sz < 10) {",
      "4578:   return NULL;",
      "4579:  }",
      "4580:  RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
      "4581:  offset += 6;",
      "4583:  if (!attr) {",
      "4584:   return NULL;",
      "4585:  }",
      "",
      "[Removed Lines]",
      "4582:  IFDBG eprintf(\"r_bin_java_stack_map_table_attr_new: New stack map allocated.\\n\");",
      "",
      "[Added Lines]",
      "4586:  if (sz < 8) {",
      "4587:   return NULL;",
      "4588:  }",
      "4595:  IFDBG eprintf (\"r_bin_java_stack_map_table_attr_new: New stack map allocated.\\n\");",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "6355: R_API RBinJavaAttrInfo *r_bin_java_annotation_default_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {",
      "6356:  ut64 offset = 0;",
      "6359:  offset += 6;",
      "6360:  if (attr && sz >= offset) {",
      "6361:   attr->type = R_BIN_JAVA_ATTR_TYPE_ANNOTATION_DEFAULT_ATTR;",
      "",
      "[Removed Lines]",
      "6357:  RBinJavaAttrInfo *attr = NULL;",
      "6358:  attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
      "",
      "[Added Lines]",
      "6370:  if (sz < 8) {",
      "6371:   return NULL;",
      "6372:  }",
      "6373:  RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "6436: R_API RBinJavaAnnotation *r_bin_java_annotation_new(ut8 *buffer, ut64 sz, ut64 buf_offset) {",
      "6437:  ut32 i = 0;",
      "6439:  RBinJavaElementValuePair *evps = NULL;",
      "6440:  ut64 offset = 0;",
      "6442:  if (!annotation) {",
      "6443:   return NULL;",
      "6444:  }",
      "",
      "[Removed Lines]",
      "6438:  RBinJavaAnnotation *annotation = NULL;",
      "6441:  annotation = R_NEW0 (RBinJavaAnnotation);",
      "",
      "[Added Lines]",
      "6455:  if (sz < 8) {",
      "6456:   return NULL;",
      "6457:  }",
      "6458:  RBinJavaAnnotation *annotation = R_NEW0 (RBinJavaAnnotation);",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "6510: }",
      "6512: R_API ut64 r_bin_java_element_pair_calc_size(RBinJavaElementValuePair *evp) {",
      "6521:   sz += r_bin_java_element_value_calc_size (evp->value);",
      "6522:  }",
      "6523:  return sz;",
      "",
      "[Removed Lines]",
      "6513:  ut64 sz = 0;",
      "6514:  if (evp == NULL) {",
      "6515:   return sz;",
      "6516:  }",
      "6518:  sz += 2;",
      "6520:  if (evp->value) {",
      "",
      "[Added Lines]",
      "6530:  ut64 sz = 2;",
      "6531:  if (evp && evp->value) {",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "6596: R_API RBinJavaElementValue *r_bin_java_element_value_new(ut8 *buffer, ut64 sz, ut64 buf_offset) {",
      "6597:  ut32 i = 0;",
      "6598:  ut64 offset = 0;",
      "6599:  RBinJavaElementValue *element_value = R_NEW0 (RBinJavaElementValue);",
      "6600:  if (!element_value) {",
      "6601:   return NULL;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6612:  if (sz < 8) {",
      "6613:   return NULL;",
      "6614:  }",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "7011: R_API RBinJavaAttrInfo *r_bin_java_rtv_annotations_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {",
      "7012:  ut32 i = 0;",
      "7013:  ut64 offset = 0;",
      "7015:   return NULL;",
      "7016:  }",
      "7017:  RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
      "",
      "[Removed Lines]",
      "7014:  if (buf_offset + 8 > sz) {",
      "",
      "[Added Lines]",
      "7030:  if (sz < 8) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b19ad118a5e3d0ba488e3dbb4a4e213155664103",
      "candidate_info": {
        "commit_hash": "b19ad118a5e3d0ba488e3dbb4a4e213155664103",
        "repo": "radareorg/radare2",
        "commit_url": "https://github.com/radareorg/radare2/commit/b19ad118a5e3d0ba488e3dbb4a4e213155664103",
        "files": [
          "shlr/java/class.c"
        ],
        "message": "Move java globals into the tls",
        "before_after_code_files": [
          "shlr/java/class.c||shlr/java/class.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/radareorg/radare2/pull/19671"
        ],
        "olp_code_files": {
          "patch": [
            "shlr/java/class.c||shlr/java/class.c"
          ],
          "candidate": [
            "shlr/java/class.c||shlr/java/class.c"
          ]
        }
      },
      "candidate_diff": {
        "shlr/java/class.c||shlr/java/class.c": [
          "File: shlr/java/class.c -> shlr/java/class.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: #include \"class.h\"",
          "14: #include \"dsojson.h\"",
          "17: #ifdef IFDBG",
          "18: #undef IFDBG",
          "19: #endif",
          "",
          "[Removed Lines]",
          "16: static PrintfCallback Eprintf =(PrintfCallback) printf;",
          "",
          "[Added Lines]",
          "16: static R_TH_LOCAL PrintfCallback Eprintf =(PrintfCallback) printf;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "301:  return (Byte0 << 24) | (Byte1 << 8) | (Byte2 >> 8) | (Byte3 >> 24);",
          "302: }",
          "308: static RBinJavaAccessFlags FIELD_ACCESS_FLAGS[] = {",
          "309:  { \"public\", R_BIN_JAVA_FIELD_ACC_PUBLIC, 6 },",
          "310:  { \"private\", R_BIN_JAVA_FIELD_ACC_PRIVATE, 7 },",
          "",
          "[Removed Lines]",
          "304: static bool R_BIN_JAVA_NULL_TYPE_INITTED = false;",
          "307: static RBinJavaObj *R_BIN_JAVA_GLOBAL_BIN = NULL;",
          "",
          "[Added Lines]",
          "304: static R_TH_LOCAL bool R_BIN_JAVA_NULL_TYPE_INITTED = false;",
          "307: static R_TH_LOCAL RBinJavaObj *R_BIN_JAVA_GLOBAL_BIN = NULL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a638f6a073629bf711779cdba83f39bbf2f14c42",
      "candidate_info": {
        "commit_hash": "a638f6a073629bf711779cdba83f39bbf2f14c42",
        "repo": "radareorg/radare2",
        "commit_url": "https://github.com/radareorg/radare2/commit/a638f6a073629bf711779cdba83f39bbf2f14c42",
        "files": [
          "shlr/java/class.c"
        ],
        "message": "Code cleanup in shlr/java",
        "before_after_code_files": [
          "shlr/java/class.c||shlr/java/class.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "shlr/java/class.c||shlr/java/class.c"
          ],
          "candidate": [
            "shlr/java/class.c||shlr/java/class.c"
          ]
        }
      },
      "candidate_diff": {
        "shlr/java/class.c||shlr/java/class.c": [
          "File: shlr/java/class.c -> shlr/java/class.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: #include \"class.h\"",
          "14: #include \"dsojson.h\"",
          "17: #ifdef IFDBG",
          "18: #undef IFDBG",
          "19: #endif",
          "20: #define DO_THE_DBG 0",
          "21: #define IFDBG  if (DO_THE_DBG)",
          "22: #define IFINT  if (0)",
          "",
          "[Removed Lines]",
          "16: static R_TH_LOCAL PrintfCallback Eprintf =(PrintfCallback) printf;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "108: R_API RBinJavaStackMapFrame *r_bin_java_build_stack_frame_from_local_variable_table(RBinJavaObj *bin, RBinJavaAttrInfo *attr);",
          "109: R_API void U(r_bin_java_print_stack_map_append_frame_summary)(RBinJavaStackMapFrame * obj);",
          "110: R_API void U(r_bin_java_stack_frame_default_free)(void /*RBinJavaStackMapFrame*/ *stack_frame);",
          "113: R_API RBinJavaStackMapFrame *r_bin_java_stack_map_frame_new(ut8 *buffer, ut64 sz, RBinJavaStackMapFrame *p_frame, ut64 buf_offset);",
          "115: R_API RBinJavaElementValue *r_bin_java_element_value_new(ut8 *buffer, ut64 sz, ut64 buf_offset);",
          "",
          "[Removed Lines]",
          "111: R_API void U(r_bin_java_stack_frame_do_nothing_free)(void /*RBinJavaStackMapFrame*/ *stack_frame);",
          "112: R_API void U(r_bin_java_stack_frame_do_nothing_new)(RBinJavaObj * bin, RBinJavaStackMapFrame * stack_frame, ut64 offset);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "301:  return (Byte0 << 24) | (Byte1 << 8) | (Byte2 >> 8) | (Byte3 >> 24);",
          "302: }",
          "308: static RBinJavaAccessFlags FIELD_ACCESS_FLAGS[] = {",
          "309:  { \"public\", R_BIN_JAVA_FIELD_ACC_PUBLIC, 6 },",
          "310:  { \"private\", R_BIN_JAVA_FIELD_ACC_PRIVATE, 7 },",
          "",
          "[Removed Lines]",
          "304: static R_TH_LOCAL bool R_BIN_JAVA_NULL_TYPE_INITTED = false;",
          "307: static R_TH_LOCAL RBinJavaObj *R_BIN_JAVA_GLOBAL_BIN = NULL;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "375:  { \"NewInvokeSpecial\", R_BIN_JAVA_REF_NEWINVOKESPECIAL },",
          "376:  { \"InvokeInterface\", R_BIN_JAVA_REF_INVOKEINTERFACE }",
          "377: };",
          "379: static RBinJavaElementValueMetas R_BIN_JAVA_ELEMENT_VALUE_METAS[] = {",
          "380:  { \"Byte\", R_BIN_JAVA_EV_TAG_BYTE, NULL },",
          "381:  { \"Char\", R_BIN_JAVA_EV_TAG_CHAR, NULL },",
          "",
          "[Removed Lines]",
          "378: static ut16 R_BIN_JAVA_ELEMENT_VALUE_METAS_SZ = 14;",
          "",
          "[Added Lines]",
          "374: static const ut16 R_BIN_JAVA_ELEMENT_VALUE_METAS_SZ = 14;",
          "375: static R_TH_LOCAL bool R_BIN_JAVA_NULL_TYPE_INITTED = false;",
          "376: static R_TH_LOCAL RBinJavaObj *R_BIN_JAVA_GLOBAL_BIN = NULL;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "524:  r_list_free (bin->cp_list);",
          "525:  r_list_free (bin->interfaces_list);",
          "526:  r_str_constpool_fini (&bin->constpool);",
          "528:  r_str_constpool_init (&bin->constpool);",
          "529:  bin->cf2.flags_str = strdup (\"unknown\");",
          "530:  bin->cf2.this_class_name = strdup (\"unknown\");",
          "",
          "[Removed Lines]",
          "527:  memset (bin, 0, sizeof (RBinJavaObj));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1233: }",
          "1235: R_API char *r_bin_java_build_obj_key(RBinJavaObj *bin) {",
          "1237:  char *cname = r_bin_java_get_this_class_name (bin);",
          "1246:  return jvcname;",
          "1247: }",
          "",
          "[Removed Lines]",
          "1236:  char *jvcname = NULL;",
          "1238:  ut32 class_name_len = cname ? strlen (cname) : strlen (\"_unknown_\");",
          "1239:  jvcname = malloc (class_name_len + 8 + 30);",
          "1240:  if (cname) {",
          "1241:   snprintf (jvcname, class_name_len + 30, \"%d.%s.class\", bin->id, cname);",
          "1242:   free (cname);",
          "1243:  } else {",
          "1244:   snprintf (jvcname, class_name_len + 30, \"%d._unknown_.class\", bin->id);",
          "1245:  }",
          "",
          "[Added Lines]",
          "1235:  char *jvcname = cname?",
          "1236:   r_str_newf (\"%d.%s.class\", bin->id, cname)",
          "1237:   : r_str_newf (\"%d._unknown_.class\", bin->id);",
          "1238:  free (cname);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1250:  RList *bin_objs_list = (RList *) user;",
          "1251:  size_t value = (size_t) sdb_atoi (v);",
          "1252:  RBinJavaObj *bin_obj = NULL;",
          "1254:  if (value != 0 && value != (size_t) -1) {",
          "1255:   bin_obj = (RBinJavaObj *) value;",
          "1256:   r_list_append (bin_objs_list, bin_obj);",
          "",
          "[Removed Lines]",
          "1253:  IFDBG eprintf(\"Found %s == %\"PFMT64x \" bin_objs db\\n\", k, (ut64) value);",
          "",
          "[Added Lines]",
          "1246:  IFDBG eprintf (\"Found %s == %\"PFMT64x \" bin_objs db\\n\", k, (ut64) value);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1322:   }",
          "1323:   exp >>= 1;",
          "1324:   base *= base;",
          "1326:  }",
          "1327:  if (flag == 0) {",
          "1328:   return 1.0 * res;",
          "",
          "[Removed Lines]",
          "1325:   IFDBG eprintf(\"Result: %\"PFMT64d \", base: %\"PFMT64d \", exp: %d\\n\", res, base, exp);",
          "",
          "[Added Lines]",
          "1318:   IFDBG eprintf (\"Result: %\"PFMT64d \", base: %\"PFMT64d \", exp: %d\\n\", res, base, exp);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1338:  (bits & 0xfffffffffffffLL) << 1 :",
          "1339:  (bits & 0xfffffffffffffLL) | 0x10000000000000LL;",
          "1340:  double res = 0.0;",
          "1342:  if (bits == 0x7ff0000000000000LL) {",
          "1343:   return INFINITY;",
          "1344:  }",
          "",
          "[Removed Lines]",
          "1341:  IFDBG eprintf(\"Convert Long to Double: %08\"PFMT64x \"\\n\", bits);",
          "",
          "[Added Lines]",
          "1334:  IFDBG eprintf (\"Convert Long to Double: %08\"PFMT64x \"\\n\", bits);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1352:   return NAN;",
          "1353:  }",
          "1354:  res = s * m * my_pow (2, e - 1075);// XXXX TODO Get double to work correctly here",
          "1358:  return res;",
          "1359: }",
          "",
          "[Removed Lines]",
          "1355:  IFDBG eprintf(\" High-bytes = %02x %02x %02x %02x\\n\", raw[0], raw[1], raw[2], raw[3]);",
          "1356:  IFDBG eprintf(\" Low-bytes = %02x %02x %02x %02x\\n\", raw[4], raw[5], raw[6], raw[7]);",
          "1357:  IFDBG eprintf(\"Convert Long to Double s: %d, m: 0x%08lx, e: 0x%08x, res: %f\\n\", s, m, e, res);",
          "",
          "[Added Lines]",
          "1348:  IFDBG eprintf (\" High-bytes = %02x %02x %02x %02x\\n\", raw[0], raw[1], raw[2], raw[3]);",
          "1349:  IFDBG eprintf (\" Low-bytes = %02x %02x %02x %02x\\n\", raw[4], raw[5], raw[6], raw[7]);",
          "1350:  IFDBG eprintf (\"Convert Long to Double s: %d, m: 0x%08lx, e: 0x%08x, res: %f\\n\", s, m, e, res);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1391:  idx = method->name_idx;",
          "1392:  item = r_bin_java_get_item_from_bin_cp_list (bin, idx);",
          "1393:  method->name = r_bin_java_get_utf8_from_bin_cp_list (bin, (ut32) (method->name_idx));",
          "1395:  if (!method->name) {",
          "1396:   method->name = (char *) malloc (21);",
          "1397:   snprintf ((char *) method->name, 20, \"sym.method_%08x\", method->metas->ord);",
          "1399:  }",
          "1400:  idx = method->descriptor_idx;",
          "1401:  item = r_bin_java_get_item_from_bin_cp_list (bin, idx);",
          "1402:  method->descriptor = r_bin_java_get_utf8_from_bin_cp_list (bin, (ut32) method->descriptor_idx);",
          "1404:  if (!method->descriptor) {",
          "1405:   method->descriptor = r_str_dup (NULL, \"NULL\");",
          "1407:  }",
          "1409:  method->field_ref_cp_obj = r_bin_java_find_cp_ref_info_from_name_and_type (bin, method->name_idx, method->descriptor_idx);",
          "1410:  if (method->field_ref_cp_obj) {",
          "1412:   item = r_bin_java_get_item_from_bin_cp_list (bin, method->field_ref_cp_obj->info.cp_method.class_idx);",
          "1414:   method->class_name = r_bin_java_get_item_name_from_bin_cp_list (bin, item);",
          "1417:   if (!method->class_name) {",
          "1418:    method->class_name = r_str_dup (NULL, \"NULL\");",
          "1419:   }",
          "",
          "[Removed Lines]",
          "1394:  IFDBG eprintf(\"Method name_idx: %d, which is: ord: %d, name: %s, value: %s\\n\", idx, item->metas->ord, ((RBinJavaCPTypeMetas *)item->metas->type_info)->name, method->name);",
          "1398:   IFDBG eprintf(\"r_bin_java_read_next_method: Unable to find the name for 0x%02x index.\\n\", method->name_idx);",
          "1403:  IFDBG eprintf(\"Method descriptor_idx: %d, which is: ord: %d, name: %s, value: %s\\n\", idx, item->metas->ord, ((RBinJavaCPTypeMetas *)item->metas->type_info)->name, method->descriptor);",
          "1406:   IFDBG eprintf(\"r_bin_java_read_next_method: Unable to find the descriptor for 0x%02x index.\\n\", method->descriptor_idx);",
          "1408:  IFDBG eprintf(\"Looking for a NameAndType CP with name_idx: %d descriptor_idx: %d\\n\", method->name_idx, method->descriptor_idx);",
          "1411:   IFDBG eprintf(\"Found the obj.\\n\");",
          "1413:   IFDBG eprintf(\"Method class reference value: %d, which is: ord: %d, name: %s\\n\", method->field_ref_cp_obj->info.cp_method.class_idx, item->metas->ord, ((RBinJavaCPTypeMetas *)item->metas->type_info)->name);",
          "1415:   IFDBG eprintf(\"Method requesting ref_cp_obj the following which is: ord: %d, name: %s\\n\", method->field_ref_cp_obj->metas->ord, ((RBinJavaCPTypeMetas *)method->field_ref_cp_obj->metas->type_info)->name);",
          "1416:   IFDBG eprintf(\"MethodRef class name resolves to: %s\\n\", method->class_name);",
          "",
          "[Added Lines]",
          "1387:  IFDBG eprintf (\"Method name_idx: %d, which is: ord: %d, name: %s, value: %s\\n\", idx, item->metas->ord, ((RBinJavaCPTypeMetas *)item->metas->type_info)->name, method->name);",
          "1391:   IFDBG eprintf (\"r_bin_java_read_next_method: Unable to find the name for 0x%02x index.\\n\", method->name_idx);",
          "1396:  IFDBG eprintf (\"Method descriptor_idx: %d, which is: ord: %d, name: %s, value: %s\\n\", idx, item->metas->ord, ((RBinJavaCPTypeMetas *)item->metas->type_info)->name, method->descriptor);",
          "1399:   IFDBG eprintf (\"r_bin_java_read_next_method: Unable to find the descriptor for 0x%02x index.\\n\", method->descriptor_idx);",
          "1401:  IFDBG eprintf (\"Looking for a NameAndType CP with name_idx: %d descriptor_idx: %d\\n\", method->name_idx, method->descriptor_idx);",
          "1404:   IFDBG eprintf (\"Found the obj.\\n\");",
          "1406:   IFDBG eprintf (\"Method class reference value: %d, which is: ord: %d, name: %s\\n\", method->field_ref_cp_obj->info.cp_method.class_idx, item->metas->ord, ((RBinJavaCPTypeMetas *)item->metas->type_info)->name);",
          "1408:   IFDBG eprintf (\"Method requesting ref_cp_obj the following which is: ord: %d, name: %s\\n\", method->field_ref_cp_obj->metas->ord, ((RBinJavaCPTypeMetas *)method->field_ref_cp_obj->metas->type_info)->name);",
          "1409:   IFDBG eprintf (\"MethodRef class name resolves to: %s\\n\", method->class_name);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1422:   method->field_ref_cp_obj = r_bin_java_get_item_from_bin_cp_list (bin, bin->cf2.this_class);",
          "1423:   method->class_name = r_bin_java_get_item_name_from_bin_cp_list (bin, method->field_ref_cp_obj);",
          "1424:  }",
          "1426:  if (method->attr_count > 0) {",
          "1427:   method->attr_offset = adv + offset;",
          "1428:   RBinJavaAttrInfo *attr = NULL;",
          "",
          "[Removed Lines]",
          "1425:  IFDBG eprintf(\"Parsing %s(%s)\\n\", method->name, method->descriptor);",
          "",
          "[Added Lines]",
          "1418:  IFDBG eprintf (\"Parsing %s(%s)\\n\", method->name, method->descriptor);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1440:     bin->ustack_sz = 2;// (attr->info.code_attr.max_stack > 65535) ? 4 : 2;",
          "1441:     bin->ulocalvar_sz = 2;// (attr->info.code_attr.max_locals > 65535) ? 4 : 2;",
          "1442:    }",
          "1444:    r_list_append (method->attributes, attr);",
          "1445:    adv += attr->size;",
          "1446:    if (adv + offset >= len) {",
          "",
          "[Removed Lines]",
          "1443:    IFDBG eprintf(\"Parsing @ 0x%\"PFMT64x \" (%s) = 0x%\"PFMT64x \" bytes\\n\", attr->file_offset, attr->name, attr->size);",
          "",
          "[Added Lines]",
          "1436:    IFDBG eprintf (\"Parsing @ 0x%\"PFMT64x \" (%s) = 0x%\"PFMT64x \" bytes\\n\", attr->file_offset, attr->name, attr->size);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1451:  }",
          "1452:  method->size = adv;",
          "1455:  return method;",
          "1456: }",
          "",
          "[Removed Lines]",
          "1454:  IFDBG eprintf(\"Parsing @ 0x%\"PFMT64x \" %s(%s) = 0x%\"PFMT64x \" bytes\\n\", method->file_offset, method->name, method->descriptor, method->size);",
          "",
          "[Added Lines]",
          "1447:  IFDBG eprintf (\"Parsing @ 0x%\"PFMT64x \" %s(%s) = 0x%\"PFMT64x \" bytes\\n\", method->file_offset, method->name, method->descriptor, method->size);",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1491:  idx = field->name_idx;",
          "1492:  item = r_bin_java_get_item_from_bin_cp_list (bin, idx);",
          "1493:  field->name = r_bin_java_get_utf8_from_bin_cp_list (bin, (ut32) (field->name_idx));",
          "1495:  if (!field->name) {",
          "1496:   field->name = (char *) malloc (21);",
          "1497:   snprintf ((char *) field->name, 20, \"sym.field_%08x\", field->metas->ord);",
          "1499:  }",
          "1500:  idx = field->descriptor_idx;",
          "1501:  item = r_bin_java_get_item_from_bin_cp_list (bin, idx);",
          "1502:  field->descriptor = r_bin_java_get_utf8_from_bin_cp_list (bin, (ut32) field->descriptor_idx);",
          "1504:  if (!field->descriptor) {",
          "1505:   field->descriptor = r_str_dup (NULL, \"NULL\");",
          "1507:  }",
          "1509:  field->field_ref_cp_obj = r_bin_java_find_cp_ref_info_from_name_and_type (bin, field->name_idx, field->descriptor_idx);",
          "1510:  if (field->field_ref_cp_obj) {",
          "1512:   item = r_bin_java_get_item_from_bin_cp_list (bin, field->field_ref_cp_obj->info.cp_field.class_idx);",
          "1514:   field->class_name = r_bin_java_get_item_name_from_bin_cp_list (bin, item);",
          "1517:   if (!field->class_name) {",
          "1518:    field->class_name = r_str_dup (NULL, \"NULL\");",
          "1519:   }",
          "",
          "[Removed Lines]",
          "1494:  IFDBG eprintf(\"Field name_idx: %d, which is: ord: %d, name: %s, value: %s\\n\", idx, item->metas->ord, ((RBinJavaCPTypeMetas *)item->metas->type_info)->name, field->name);",
          "1498:   IFDBG eprintf(\"r_bin_java_read_next_field: Unable to find the name for 0x%02x index.\\n\", field->name_idx);",
          "1503:  IFDBG eprintf(\"Field descriptor_idx: %d, which is: ord: %d, name: %s, value: %s\\n\", idx, item->metas->ord, ((RBinJavaCPTypeMetas *)item->metas->type_info)->name, field->descriptor);",
          "1506:   IFDBG eprintf(\"r_bin_java_read_next_field: Unable to find the descriptor for 0x%02x index.\\n\", field->descriptor_idx);",
          "1508:  IFDBG eprintf(\"Looking for a NameAndType CP with name_idx: %d descriptor_idx: %d\\n\", field->name_idx, field->descriptor_idx);",
          "1511:   IFDBG eprintf(\"Found the obj.\\n\");",
          "1513:   IFDBG eprintf(\"Field class reference value: %d, which is: ord: %d, name: %s\\n\", field->field_ref_cp_obj->info.cp_field.class_idx, item->metas->ord, ((RBinJavaCPTypeMetas *)item->metas->type_info)->name);",
          "1515:   IFDBG eprintf(\"Field requesting ref_cp_obj the following which is: ord: %d, name: %s\\n\", field->field_ref_cp_obj->metas->ord, ((RBinJavaCPTypeMetas *)field->field_ref_cp_obj->metas->type_info)->name);",
          "1516:   IFDBG eprintf(\"FieldRef class name resolves to: %s\\n\", field->class_name);",
          "",
          "[Added Lines]",
          "1487:  IFDBG eprintf (\"Field name_idx: %d, which is: ord: %d, name: %s, value: %s\\n\", idx, item->metas->ord, ((RBinJavaCPTypeMetas *)item->metas->type_info)->name, field->name);",
          "1491:   IFDBG eprintf (\"r_bin_java_read_next_field: Unable to find the name for 0x%02x index.\\n\", field->name_idx);",
          "1496:  IFDBG eprintf (\"Field descriptor_idx: %d, which is: ord: %d, name: %s, value: %s\\n\", idx, item->metas->ord, ((RBinJavaCPTypeMetas *)item->metas->type_info)->name, field->descriptor);",
          "1499:   IFDBG eprintf (\"r_bin_java_read_next_field: Unable to find the descriptor for 0x%02x index.\\n\", field->descriptor_idx);",
          "1501:  IFDBG eprintf (\"Looking for a NameAndType CP with name_idx: %d descriptor_idx: %d\\n\", field->name_idx, field->descriptor_idx);",
          "1504:   IFDBG eprintf (\"Found the obj.\\n\");",
          "1506:   IFDBG eprintf (\"Field class reference value: %d, which is: ord: %d, name: %s\\n\", field->field_ref_cp_obj->info.cp_field.class_idx, item->metas->ord, ((RBinJavaCPTypeMetas *)item->metas->type_info)->name);",
          "1508:   IFDBG eprintf (\"Field requesting ref_cp_obj the following which is: ord: %d, name: %s\\n\", field->field_ref_cp_obj->metas->ord, ((RBinJavaCPTypeMetas *)field->field_ref_cp_obj->metas->type_info)->name);",
          "1509:   IFDBG eprintf (\"FieldRef class name resolves to: %s\\n\", field->class_name);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1522:   field->field_ref_cp_obj = r_bin_java_get_item_from_bin_cp_list (bin, bin->cf2.this_class);",
          "1523:   field->class_name = r_bin_java_get_item_name_from_bin_cp_list (bin, field->field_ref_cp_obj);",
          "1524:  }",
          "1526:  if (field->attr_count > 0) {",
          "1527:   field->attr_offset = adv + offset;",
          "1528:   for (i = 0; i < field->attr_count && offset + adv < len; i++) {",
          "",
          "[Removed Lines]",
          "1525:  IFDBG eprintf(\"Parsing %s(%s)\", field->name, field->descriptor);",
          "",
          "[Added Lines]",
          "1518:  IFDBG eprintf (\"Parsing %s(%s)\", field->name, field->descriptor);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1565: R_API RBinJavaCPTypeObj *r_bin_java_clone_cp_item(RBinJavaCPTypeObj *obj) {",
          "1566:  RBinJavaCPTypeObj *clone_obj = NULL;",
          "1568:   return clone_obj;",
          "1569:  }",
          "1570:  clone_obj = R_NEW0 (RBinJavaCPTypeObj);",
          "",
          "[Removed Lines]",
          "1567:  if (obj == NULL) {",
          "",
          "[Added Lines]",
          "1560:  if (!obj) {",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1625:  }",
          "1626:  if (offset + buf_sz < len) {",
          "1627:   memcpy (cp_buf, (ut8 *) buf + offset, buf_sz);",
          "1629:   java_obj = (*java_constant_info->allocs->new_obj)(bin, cp_buf, buf_sz);",
          "1630:   if (java_obj != NULL && java_obj->metas != NULL) {",
          "1631:    java_obj->file_offset = offset;",
          "",
          "[Removed Lines]",
          "1628:   IFDBG eprintf(\"Parsed the tag '%d':%s and create object from offset 0x%08\"PFMT64x \".\\n\", tag, R_BIN_JAVA_CP_METAS[tag].name, offset);",
          "",
          "[Added Lines]",
          "1621:   IFDBG eprintf (\"Parsed the tag '%d':%s and create object from offset 0x%08\"PFMT64x \".\\n\", tag, R_BIN_JAVA_CP_METAS[tag].name, offset);",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1840:  @param obj object to look up the name for",
          "1841:  @rvalue ut8* (user frees) or NULL",
          "1844:   return NULL;",
          "1845:  }",
          "1846:  switch (obj->tag) {",
          "",
          "[Removed Lines]",
          "1843:  if (obj == NULL || cp_list == NULL || depth < 0) {",
          "",
          "[Added Lines]",
          "1836:  if (!obj || !cp_list || depth < 0) {",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1861:  default:",
          "1862:   return NULL;",
          "1863:  case 0:",
          "1865:   return NULL;",
          "1866:  }",
          "1867:  return NULL;",
          "",
          "[Removed Lines]",
          "1864:   IFDBG eprintf(\"Invalid 0 tag in the constant pool\\n\");",
          "",
          "[Added Lines]",
          "1857:   IFDBG eprintf (\"Invalid 0 tag in the constant pool\\n\");",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1918:  @rvalue ut8* (user frees) or NULL",
          "1920:  RBinJavaCPTypeObj *obj = r_bin_java_get_item_from_cp_item_list (cp_list, idx);",
          "1922:   return NULL;",
          "1923:  }",
          "1924:  return r_bin_java_get_item_desc_from_cp_item_list (cp_list, obj, MAX_CPITEMS);",
          "",
          "[Removed Lines]",
          "1921:  if (cp_list == NULL) {",
          "",
          "[Added Lines]",
          "1914:  if (!cp_list) {",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1969:  int pending = len - offset;",
          "1970:  const ut8 *a_buf = offset + buf;",
          "1971:  attr_buf = (ut8 *) calloc (pending + 1, 1);",
          "1973:   eprintf (\"Unable to allocate enough bytes (0x%04\"PFMT64x",
          "1974:    \") to read in the attribute.\\n\", sz);",
          "1975:   return attr_buf;",
          "",
          "[Removed Lines]",
          "1972:  if (attr_buf == NULL) {",
          "",
          "[Added Lines]",
          "1965:  if (!attr_buf) {",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1990:  }",
          "1991:  RBinJavaAttrMetas *type_info = NULL;",
          "1992:  attr->metas = R_NEW0 (RBinJavaMetaInfo);",
          "1994:   free (attr);",
          "1995:   return NULL;",
          "1996:  }",
          "",
          "[Removed Lines]",
          "1993:  if (attr->metas == NULL) {",
          "",
          "[Added Lines]",
          "1986:  if (!attr->metas) {",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "2000:  attr->length = R_BIN_JAVA_UINT (buffer, 2);",
          "2001:  attr->size = R_BIN_JAVA_UINT (buffer, 2) + 6;",
          "2002:  attr->name = r_bin_java_get_utf8_from_bin_cp_list (R_BIN_JAVA_GLOBAL_BIN, attr->name_idx);",
          "2005:   attr->name = r_str_dup (NULL, \"NULL\");",
          "2006:   eprintf (\"r_bin_java_default_attr_new: Unable to find the name for %d index.\\n\", attr->name_idx);",
          "",
          "[Removed Lines]",
          "2003:  if (attr->name == NULL) {",
          "",
          "[Added Lines]",
          "1996:  if (!attr->name) {",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "2024: }",
          "2026: R_API RBinJavaAttrInfo *r_bin_java_read_next_attr(RBinJavaObj *bin, const ut64 offset, const ut8 *buf, const ut64 buf_len) {",
          "2030:  const ut8 *a_buf = offset + buf;",
          "2031:  ut8 attr_idx_len = 6;",
          "2032:  if (offset + 6 > buf_len) {",
          "",
          "[Removed Lines]",
          "2027:  RBinJavaAttrInfo *attr = NULL;",
          "2028:  ut32 sz = 0;",
          "2029:  ut8 *buffer = NULL;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "2035:   return NULL;",
          "2036:  }",
          "2039:  if (sz + offset > buf_len) {",
          "2040:   eprintf (\"[X] r_bin_java: Error unable to parse remainder of classfile in Attribute len \"",
          "2041:    \"(0x%x) + offset (0x%\"PFMT64x \") exceeds length of buffer (0x%\"PFMT64x \").\\n\",",
          "",
          "[Removed Lines]",
          "2038:  sz = R_BIN_JAVA_UINT (a_buf, 2) + attr_idx_len; // r_bin_java_read_int (bin, buf_offset+2) + attr_idx_len;",
          "",
          "[Added Lines]",
          "2028:  ut32 sz = R_BIN_JAVA_UINT (a_buf, 2) + attr_idx_len; // r_bin_java_read_int (bin, buf_offset+2) + attr_idx_len;",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "2052:  if (offset < buf_len) {",
          "2053:   attr = r_bin_java_read_next_attr_from_buffer (bin, buffer, buf_len - offset, offset);",
          "2054:   free (buffer);",
          "2056:   if (!attr) {",
          "2057:    return NULL;",
          "2058:   }",
          "",
          "[Removed Lines]",
          "2050:  buffer = r_bin_java_get_attr_buf (bin, sz, offset, buf, buf_len);",
          "",
          "[Added Lines]",
          "2040:  ut8 *buffer = r_bin_java_get_attr_buf (bin, sz, offset, buf, buf_len);",
          "2041:  RBinJavaAttrInfo *attr = NULL;",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "2067: R_API RBinJavaAttrInfo *r_bin_java_read_next_attr_from_buffer(RBinJavaObj *bin, ut8 *buffer, st64 sz, st64 buf_offset) {",
          "2068:  RBinJavaAttrInfo *attr = NULL;",
          "2071:  st64 nsz;",
          "2073:  if (!buffer || ((int) sz) < 4 || buf_offset < 0) {",
          "2074:   eprintf (\"r_bin_Java_read_next_attr_from_buffer: invalid buffer size %d\\n\", (int) sz);",
          "2075:   return NULL;",
          "2076:  }",
          "2079:  nsz = R_BIN_JAVA_UINT (buffer, offset);",
          "",
          "[Removed Lines]",
          "2069:  ut64 offset = 0;",
          "2070:  ut16 name_idx;",
          "2077:  name_idx = R_BIN_JAVA_USHORT (buffer, offset);",
          "2078:  offset += 2;",
          "",
          "[Added Lines]",
          "2065:  ut16 name_idx = R_BIN_JAVA_USHORT (buffer, 0);",
          "2066:  ut64 offset = 2;",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "2083:  if (!name) {",
          "2084:   name = strdup (\"unknown\");",
          "2085:  }",
          "2087:  RBinJavaAttrMetas *type_info = r_bin_java_get_attr_type_by_name (name);",
          "2088:  if (type_info) {",
          "2091:   if (nsz > sz) {",
          "2092:    free (name);",
          "",
          "[Removed Lines]",
          "2086:  IFDBG eprintf(\"r_bin_java_read_next_attr: name_idx = %d is %s\\n\", name_idx, name);",
          "2089:   IFDBG eprintf(\"Typeinfo: %s, was %s\\n\", type_info->name, name);",
          "",
          "[Added Lines]",
          "2074:  IFDBG eprintf (\"r_bin_java_read_next_attr: name_idx = %d is %s\\n\", name_idx, name);",
          "2077:   IFDBG eprintf (\"Typeinfo: %s, was %s\\n\", type_info->name, name);",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "2105: R_API ut64 r_bin_java_read_class_file2(RBinJavaObj *bin, const ut64 offset, const ut8 *obuf, ut64 len) {",
          "2106:  const ut8 *cf2_buf = obuf + offset;",
          "2107:  RBinJavaCPTypeObj *this_class_cp_obj = NULL;",
          "2110:  Reading the following fields:",
          "2111:  ut16 access_flags;",
          "",
          "[Removed Lines]",
          "2108:  IFDBG eprintf(\"\\n0x%\"PFMT64x \" Offset before reading the cf2 structure\\n\", offset);",
          "",
          "[Added Lines]",
          "2096:  IFDBG eprintf (\"\\n0x%\"PFMT64x \" Offset before reading the cf2 structure\\n\", offset);",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "2124:  bin->cf2.flags_str = retrieve_class_method_access_string (bin->cf2.access_flags);",
          "2125:  this_class_cp_obj = r_bin_java_get_item_from_bin_cp_list (bin, bin->cf2.this_class);",
          "2126:  bin->cf2.this_class_name = r_bin_java_get_item_name_from_bin_cp_list (bin, this_class_cp_obj);",
          "2128:  return bin->cf2.cf2_size;",
          "2129: }",
          "",
          "[Removed Lines]",
          "2127:  IFDBG eprintf(\"This class flags are: %s\\n\", bin->cf2.flags_str);",
          "",
          "[Added Lines]",
          "2115:  IFDBG eprintf (\"This class flags are: %s\\n\", bin->cf2.flags_str);",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "2139:  memcpy ((char *) &bin->cp_count, cp_buf, 2);",
          "2140:  bin->cp_count = R_BIN_JAVA_USHORT (cp_buf, 0) - 1;",
          "2141:  adv += 2;",
          "2143:  r_list_append (bin->cp_list, r_bin_java_get_java_null_cp ());",
          "2144:  for (ord = 1, bin->cp_idx = 0; bin->cp_idx < bin->cp_count && adv < len; ord++, bin->cp_idx++) {",
          "2145:   obj = r_bin_java_read_next_constant_pool_item (bin, offset + adv, buf, len);",
          "",
          "[Removed Lines]",
          "2142:  IFDBG eprintf(\"ConstantPoolCount %d\\n\", bin->cp_count);",
          "",
          "[Added Lines]",
          "2130:  IFDBG eprintf (\"ConstantPoolCount %d\\n\", bin->cp_count);",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "2162:     break;",
          "2163:    }",
          "2164:   } else {",
          "2166:    break;",
          "2167:   }",
          "2168:  }",
          "",
          "[Removed Lines]",
          "2165:    IFDBG eprintf(\"Failed to read ConstantPoolItem %d\\n\", bin->cp_idx);",
          "",
          "[Added Lines]",
          "2153:    IFDBG eprintf (\"Failed to read ConstantPoolItem %d\\n\", bin->cp_idx);",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "2187:  }",
          "2188:  bin->interfaces_count = R_BIN_JAVA_USHORT (if_buf, 0);",
          "2189:  adv += 2;",
          "2191:  if (bin->interfaces_count > 0) {",
          "2192:   for (i = 0; i < bin->interfaces_count; i++) {",
          "2193:    interfaces_obj = r_bin_java_read_next_interface_item (bin, offset + adv, buf, len);",
          "",
          "[Removed Lines]",
          "2190:  IFDBG eprintf(\"Interfaces count: %d\\n\", bin->interfaces_count);",
          "",
          "[Added Lines]",
          "2178:  IFDBG eprintf (\"Interfaces count: %d\\n\", bin->interfaces_count);",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "2220:  }",
          "2221:  bin->fields_count = R_BIN_JAVA_USHORT (fm_buf, 0);",
          "2222:  adv += 2;",
          "2224:  if (bin->fields_count > 0) {",
          "2225:   for (i = 0; i < bin->fields_count; i++, bin->field_idx++) {",
          "2226:    field = r_bin_java_read_next_field (bin, offset + adv, buf, len);",
          "",
          "[Removed Lines]",
          "2223:  IFDBG eprintf(\"Fields count: %d 0x%\"PFMT64x \"\\n\", bin->fields_count, bin->fields_offset);",
          "",
          "[Added Lines]",
          "2211:  IFDBG eprintf (\"Fields count: %d 0x%\"PFMT64x \"\\n\", bin->fields_count, bin->fields_offset);",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "2233:      break;",
          "2234:     }",
          "2235:    } else {",
          "2237:     break;",
          "2238:    }",
          "2239:   }",
          "",
          "[Removed Lines]",
          "2236:     IFDBG eprintf(\"Failed to read Field %d\\n\", i);",
          "",
          "[Added Lines]",
          "2224:     IFDBG eprintf (\"Failed to read Field %d\\n\", i);",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "2288:  bin->methods_offset = offset;",
          "2289:  bin->methods_count = R_BIN_JAVA_USHORT (fm_buf, 0);",
          "2290:  adv += 2;",
          "2292:  bin->main = NULL;",
          "2293:  bin->entrypoint = NULL;",
          "2294:  bin->main_code_attr = NULL;",
          "",
          "[Removed Lines]",
          "2291:  IFDBG eprintf(\"Methods count: %d 0x%\"PFMT64x \"\\n\", bin->methods_count, bin->methods_offset);",
          "",
          "[Added Lines]",
          "2279:  IFDBG eprintf (\"Methods count: %d 0x%\"PFMT64x \"\\n\", bin->methods_count, bin->methods_offset);",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "2306:    bin->main_code_attr = r_bin_java_get_attr_from_field (method, R_BIN_JAVA_ATTR_TYPE_CODE_ATTR, 0);",
          "2307:   } else if (method && (!strcmp ((const char *) method->name, \"<init>\") || !strcmp ((const char *) method->name, \"init\")))   {",
          "2309:    bin->entrypoint = method;",
          "2310:    bin->entrypoint_code_attr = r_bin_java_get_attr_from_field (method, R_BIN_JAVA_ATTR_TYPE_CODE_ATTR, 0);",
          "2311:   } else if (method && (!strcmp ((const char *) method->name, \"<cinit>\") || !strcmp ((const char *) method->name, \"cinit\")))   {",
          "",
          "[Removed Lines]",
          "2308:    IFDBG eprintf(\"Found an init function.\\n\");",
          "",
          "[Added Lines]",
          "2296:    IFDBG eprintf (\"Found an init function.\\n\");",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "2366:   eprintf (\"[X] r_bin_java: Error unable to parse remainder of classfile after class file info.\\n\");",
          "2367:   return true;",
          "2368:  }",
          "2371:  adv += r_bin_java_parse_interfaces (bin, adv, buf, buf_sz);",
          "2372:  if (adv > buf_sz) {",
          "2373:   eprintf (\"[X] r_bin_java: Error unable to parse remainder of classfile after Interfaces.\\n\");",
          "",
          "[Removed Lines]",
          "2369:  IFDBG eprintf(\"This class: %d %s\\n\", bin->cf2.this_class, bin->cf2.this_class_name);",
          "2370:  IFDBG eprintf(\"0x%\"PFMT64x \" Access flags: 0x%04x\\n\", adv, bin->cf2.access_flags);",
          "",
          "[Added Lines]",
          "2357:  IFDBG eprintf (\"This class: %d %s\\n\", bin->cf2.this_class, bin->cf2.this_class_name);",
          "2358:  IFDBG eprintf (\"0x%\"PFMT64x \" Access flags: 0x%04x\\n\", adv, bin->cf2.access_flags);",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "2429: R_API RBinJavaField *r_bin_java_get_method_code_attribute_with_addr(RBinJavaObj *bin, ut64 addr) {",
          "2430:  RListIter *iter = NULL, *iter_tmp = NULL;",
          "2431:  RBinJavaField *fm_type, *res = NULL;",
          "2433:   bin = R_BIN_JAVA_GLOBAL_BIN;",
          "2435:   eprintf (\"Attempting to analyse function when the R_BIN_JAVA_GLOBAL_BIN has not been set.\\n\");",
          "2436:   return NULL;",
          "2437:  }",
          "",
          "[Removed Lines]",
          "2432:  if (bin == NULL && R_BIN_JAVA_GLOBAL_BIN) {",
          "2434:  } else if (bin == NULL) {",
          "",
          "[Added Lines]",
          "2420:  if (!bin && R_BIN_JAVA_GLOBAL_BIN) {",
          "2422:  }",
          "2423:  if (!bin) {",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "2535: R_API RBinSymbol *r_bin_java_create_new_symbol_from_field(RBinJavaField *fm_type, ut64 baddr) {",
          "2536:  RBinSymbol *sym = R_NEW0 (RBinSymbol);",
          "2538:   R_FREE (sym);",
          "2539:  }",
          "2540:  if (sym) {",
          "",
          "[Removed Lines]",
          "2537:  if (fm_type == NULL || fm_type->field_ref_cp_obj == NULL || fm_type->field_ref_cp_obj == &R_BIN_JAVA_NULL_TYPE) {",
          "",
          "[Added Lines]",
          "2526:  if (!fm_type || !fm_type->field_ref_cp_obj || fm_type->field_ref_cp_obj == &R_BIN_JAVA_NULL_TYPE) {",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "2617:   return NULL;",
          "2618:  }",
          "2619:  char *class_name, *name, *type_name;",
          "2621:  obj->tag != R_BIN_JAVA_CP_INTERFACEMETHOD_REF &&",
          "2622:  obj->tag != R_BIN_JAVA_CP_FIELDREF)) {",
          "2623:   R_FREE (sym);",
          "",
          "[Removed Lines]",
          "2620:  if (obj == NULL || (obj->tag != R_BIN_JAVA_CP_METHODREF &&",
          "",
          "[Added Lines]",
          "2609:  if (!obj || (obj->tag != R_BIN_JAVA_CP_METHODREF &&",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "3163: R_API void r_bin_java_attribute_free(void /*RBinJavaAttrInfo*/ *a) {",
          "3164:  RBinJavaAttrInfo *attr = a;",
          "3165:  if (attr) {",
          "3167:   if (attr && attr->metas && attr->metas->type_info) {",
          "3168:    RBinJavaAttrMetas *a = attr->metas->type_info;",
          "3169:    if (a && a->allocs && a->allocs->delete_obj) {",
          "",
          "[Removed Lines]",
          "3166:   IFDBG eprintf(\"Deleting attr %s, %p\\n\", attr->name, attr);",
          "",
          "[Added Lines]",
          "3155:   IFDBG eprintf (\"Deleting attr %s, %p\\n\", attr->name, attr);",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "3461: }",
          "3463: R_API RBinJavaAttrInfo *r_bin_java_code_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {",
          "3465:  ut32 k = 0, curpos;",
          "3466:  ut64 offset = 0;",
          "3468:  if (!attr) {",
          "3469:   return NULL;",
          "3470:  }",
          "",
          "[Removed Lines]",
          "3464:  RBinJavaAttrInfo *attr = NULL, *_attr = NULL;",
          "3467:  attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
          "",
          "[Added Lines]",
          "3453:  RBinJavaAttrInfo *_attr = NULL;",
          "3456:  RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "3539:     eprintf (\"[X] r_bin_java_code_attr_new: Error unable to parse remainder of classfile after Method's Code Attribute: %d.\\n\", k);",
          "3540:     break;",
          "3541:    }",
          "3543:    offset += _attr->size;",
          "3544:    r_list_append (attr->info.code_attr.attributes, _attr);",
          "3545:    if (_attr->type == R_BIN_JAVA_ATTR_TYPE_LOCAL_VARIABLE_TABLE_ATTR) {",
          "3548:     attr->info.code_attr.implicit_frame = r_bin_java_build_stack_frame_from_local_variable_table (R_BIN_JAVA_GLOBAL_BIN, _attr);",
          "3549:     attr->info.code_attr.implicit_frame->file_offset = buf_offset;",
          "",
          "[Removed Lines]",
          "3542:    IFDBG eprintf(\"Parsing @ 0x%\"PFMT64x \" (%s) = 0x%\"PFMT64x \" bytes, %p\\n\", _attr->file_offset, _attr->name, _attr->size, _attr);",
          "3546:     IFDBG eprintf(\"Parsed the LocalVariableTable, preparing the implicit mthod frame.\\n\");",
          "",
          "[Added Lines]",
          "3531:    IFDBG eprintf (\"Parsing @ 0x%\"PFMT64x \" (%s) = 0x%\"PFMT64x \" bytes, %p\\n\", _attr->file_offset, _attr->name, _attr->size, _attr);",
          "3535:     IFDBG eprintf (\"Parsed the LocalVariableTable, preparing the implicit mthod frame.\\n\");",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "3584: }",
          "3586: R_API RBinJavaAttrInfo *r_bin_java_deprecated_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {",
          "3591:  if (attr) {",
          "3592:   attr->type = R_BIN_JAVA_ATTR_TYPE_DEPRECATED_ATTR;",
          "3594:  }",
          "3596:  return attr;",
          "",
          "[Removed Lines]",
          "3587:  RBinJavaAttrInfo *attr = NULL;",
          "3588:  ut64 offset = 0;",
          "3589:  attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
          "3590:  offset += 6;",
          "3593:   attr->size = offset;",
          "",
          "[Added Lines]",
          "3576:  RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
          "3579:   attr->size = 6;",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "3601: }",
          "3603: R_API RBinJavaAttrInfo *r_bin_java_signature_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {",
          "3605:  RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
          "3606:  if (!attr) {",
          "3607:   return NULL;",
          "3608:  }",
          "3609:  attr->type = R_BIN_JAVA_ATTR_TYPE_SIGNATURE_ATTR;",
          "",
          "[Removed Lines]",
          "3604:  ut64 offset = 6;",
          "",
          "[Added Lines]",
          "3590:  if (sz < 8) {",
          "3591:   return NULL;",
          "3592:  }",
          "3597:  ut64 offset = 6;",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "3679: R_API RBinJavaAttrInfo *r_bin_java_exceptions_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {",
          "3680:  ut32 i = 0, offset = 0;",
          "3681:  ut64 size;",
          "3683:  if (sz < 8) {",
          "3684:   return NULL;",
          "3685:  }",
          "3687:  offset += 6;",
          "3688:  if (!attr) {",
          "3689:   return attr;",
          "",
          "[Removed Lines]",
          "3682:  RBinJavaAttrInfo *attr = NULL;",
          "3686:  attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
          "",
          "[Added Lines]",
          "3674:  RBinJavaAttrInfo *attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "3768:   icattr->size = 8;",
          "3770:   obj = r_bin_java_get_item_from_bin_cp_list (R_BIN_JAVA_GLOBAL_BIN, icattr->inner_name_idx);",
          "3772:    eprintf (\"BINCPLIS IS HULL %d\\n\", icattr->inner_name_idx);",
          "3773:   }",
          "3774:   icattr->name = r_bin_java_get_item_name_from_bin_cp_list (R_BIN_JAVA_GLOBAL_BIN, obj);",
          "",
          "[Removed Lines]",
          "3771:   if (obj == NULL) {",
          "",
          "[Added Lines]",
          "3759:   if (!obj) {",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "3786:    }",
          "3787:   }",
          "3790:   r_list_append (attr->info.inner_classes_attr.classes, (void *) icattr);",
          "3791:  }",
          "3792:  attr->size = offset;",
          "",
          "[Removed Lines]",
          "3789:   IFDBG eprintf(\"r_bin_java_inner_classes_attr: Inner class name %d is %s.\\n\", icattr->inner_name_idx, icattr->name);",
          "",
          "[Added Lines]",
          "3777:   IFDBG eprintf (\"r_bin_java_inner_classes_attr: Inner class name %d is %s.\\n\", icattr->inner_name_idx, icattr->name);",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "3825: R_API RBinJavaAttrInfo *r_bin_java_line_number_table_attr_new(RBinJavaObj *bin, ut8 *buffer, ut64 sz, ut64 buf_offset) {",
          "3826:  ut32 i = 0;",
          "3827:  ut64 curpos, offset = 0;",
          "3829:  if (sz < 6) {",
          "3830:   return NULL;",
          "3831:  }",
          "",
          "[Removed Lines]",
          "3828:  RBinJavaLineNumberAttribute *lnattr;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "3845:   curpos = buf_offset + offset;",
          "3849:   if (!lnattr) {",
          "3850:    break;",
          "3851:   }",
          "",
          "[Removed Lines]",
          "3848:   lnattr = R_NEW0 (RBinJavaLineNumberAttribute);",
          "",
          "[Added Lines]",
          "3835:   RBinJavaLineNumberAttribute *lnattr = R_NEW0 (RBinJavaLineNumberAttribute);",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "3973:   }",
          "3974:   curpos = buf_offset + offset;",
          "3975:   lvattr = R_NEW0 (RBinJavaLocalVariableAttribute);",
          "3976:   lvattr->start_pc = R_BIN_JAVA_USHORT (buffer, offset);",
          "3977:   offset += 2;",
          "3978:   lvattr->length = R_BIN_JAVA_USHORT (buffer, offset);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3963:   if (!lvattr) {",
          "3964:    break;",
          "3965:   }",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "4121: }",
          "4123: R_API RBinJavaInterfaceInfo *r_bin_java_interface_new(RBinJavaObj *bin, const ut8 *buffer, ut64 sz) {",
          "4127:  if (ifobj) {",
          "4128:   if (buffer) {",
          "4129:    ifobj->class_info_idx = R_BIN_JAVA_USHORT (buffer, 0);",
          "",
          "[Removed Lines]",
          "4124:  RBinJavaInterfaceInfo *ifobj = NULL;",
          "4125:  ifobj = R_NEW0 (RBinJavaInterfaceInfo);",
          "4126:  IFDBG eprintf(\"Parsing RBinJavaInterfaceInfo\\n\");",
          "",
          "[Added Lines]",
          "4114:  IFDBG eprintf (\"Parsing RBinJavaInterfaceInfo\\n\");",
          "4115:  RBinJavaInterfaceInfo *ifobj = R_NEW0 (RBinJavaInterfaceInfo);",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "4300:   if (p_frame) {",
          "4301:    stack_frame->number_of_locals = p_frame->number_of_locals;",
          "4302:   } else {",
          "4305:   }",
          "4307:   break;",
          "4308:  case R_BIN_JAVA_STACK_FRAME_SAME_LOCALS_1:",
          "4310:   stack_frame->number_of_stack_items = 1;",
          "4315:   se = r_bin_java_read_from_buffer_verification_info_new (buffer + offset, sz - offset, buf_offset + offset);",
          "4317:   if (se) {",
          "4318:    offset += se->size;",
          "4319:   } else {",
          "",
          "[Removed Lines]",
          "4303:    IFINT eprintf(\"><?><\\n\");",
          "4304:    IFDBG eprintf(\"Unable to set previous stackframe with the number of locals (current info.code_attr.implicit_frame was probably not set :/)\");",
          "4306:   IFDBG eprintf(\"r_bin_java_stack_map_frame_new: TODO Stack Frame Same Locals Condition is untested, so there may be issues.\\n\");",
          "4311:   if (offset > sz) {",
          "4312:    r_bin_java_stack_frame_free (stack_frame);",
          "4313:    return NULL;",
          "4314:   }",
          "4316:   IFDBG eprintf(\"r_bin_java_stack_map_frame_new: Parsed R_BIN_JAVA_STACK_FRAME_SAME_LOCALS_1.\\n\");",
          "",
          "[Added Lines]",
          "4292:    IFINT eprintf (\"><?><\\n\");",
          "4293:    IFDBG eprintf (\"Unable to set previous stackframe with the number of locals (current info.code_attr.implicit_frame was probably not set :/)\");",
          "4295:   IFDBG eprintf (\"r_bin_java_stack_map_frame_new: TODO Stack Frame Same Locals Condition is untested, so there may be issues.\\n\");",
          "4301:   IFDBG eprintf (\"r_bin_java_stack_map_frame_new: Parsed R_BIN_JAVA_STACK_FRAME_SAME_LOCALS_1.\\n\");",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "4327:   if (p_frame) {",
          "4328:    stack_frame->number_of_locals = p_frame->number_of_locals;",
          "4329:   } else {",
          "4331:   }",
          "4333:   break;",
          "4334:  case R_BIN_JAVA_STACK_FRAME_CHOP:",
          "4340:   idx = p_frame->number_of_locals - k;",
          "",
          "[Removed Lines]",
          "4330:    IFDBG eprintf(\"Unable to set previous stackframe with the number of locals (current info.code_attr.implicit_frame was probably not set :/)\");",
          "4332:   IFDBG eprintf(\"r_bin_java_stack_map_frame_new: TODO Stack Frame Same Locals 1 Stack Element Condition is untested, so there may be issues.\\n\");",
          "4337:   IFDBG eprintf(\"r_bin_java_stack_map_frame_new: Parsing R_BIN_JAVA_STACK_FRAME_CHOP.\\n\");",
          "",
          "[Added Lines]",
          "4315:    IFDBG eprintf (\"Unable to set previous stackframe with the number of locals (current info.code_attr.implicit_frame was probably not set :/)\");",
          "4317:   IFDBG eprintf (\"r_bin_java_stack_map_frame_new: TODO Stack Frame Same Locals 1 Stack Element Condition is untested, so there may be issues.\\n\");",
          "4322:   IFDBG eprintf (\"r_bin_java_stack_map_frame_new: Parsing R_BIN_JAVA_STACK_FRAME_CHOP.\\n\");",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "4347:   if (p_frame) {",
          "4348:    stack_frame->number_of_locals = p_frame->number_of_locals;",
          "4349:   } else {",
          "4352:   }",
          "4354:   break;",
          "4355:  case R_BIN_JAVA_STACK_FRAME_SAME_FRAME_EXTENDED:",
          "4358:   stack_frame->offset_delta = R_BIN_JAVA_USHORT (buffer, offset);",
          "4359:   offset += 2;",
          "",
          "[Removed Lines]",
          "4350:    IFINT eprintf(\"><?><\\n\");",
          "4351:    IFDBG eprintf(\"Unable to set previous stackframe with the number of locals (current info.code_attr.implicit_frame was probably not set :/)\");",
          "4353:   IFDBG eprintf(\"r_bin_java_stack_map_frame_new: TODO Stack Frame Chop Condition is untested, so there may be issues.\\n\");",
          "4356:   IFDBG eprintf(\"r_bin_java_stack_map_frame_new: Parsing R_BIN_JAVA_STACK_FRAME_SAME_FRAME_EXTENDED.\\n\");",
          "",
          "[Added Lines]",
          "4335:    IFINT eprintf (\"><?><\\n\");",
          "4336:    IFDBG eprintf (\"Unable to set previous stackframe with the number of locals (current info.code_attr.implicit_frame was probably not set :/)\");",
          "4338:   IFDBG eprintf (\"r_bin_java_stack_map_frame_new: TODO Stack Frame Chop Condition is untested, so there may be issues.\\n\");",
          "4341:   IFDBG eprintf (\"r_bin_java_stack_map_frame_new: Parsing R_BIN_JAVA_STACK_FRAME_SAME_FRAME_EXTENDED.\\n\");",
          "",
          "---------------",
          "--- Hunk 58 ---",
          "[Context before]",
          "4373:   if (p_frame) {",
          "4374:    stack_frame->number_of_locals = p_frame->number_of_locals;",
          "4375:   } else {",
          "4378:   }",
          "4380:   break;",
          "4381:  case R_BIN_JAVA_STACK_FRAME_APPEND:",
          "4385:   ut16 k = stack_frame->tag - 251;",
          "",
          "[Removed Lines]",
          "4376:    IFINT eprintf(\"><?><\\n\");",
          "4377:    IFDBG eprintf(\"Unable to set previous stackframe with the number of locals (current info.code_attr.implicit_frame was probably not set :/)\");",
          "4379:   IFDBG eprintf(\"r_bin_java_stack_map_frame_new: TODO Stack Frame Same Locals Frame Stack 1 Extended Condition is untested, so there may be issues.\\n\");",
          "4382:   IFDBG eprintf(\"r_bin_java_stack_map_frame_new: Parsing R_BIN_JAVA_STACK_FRAME_APPEND.\\n\");",
          "",
          "[Added Lines]",
          "4361:    IFINT eprintf (\"><?><\\n\");",
          "4362:    IFDBG eprintf (\"Unable to set previous stackframe with the number of locals (current info.code_attr.implicit_frame was probably not set :/)\");",
          "4364:   IFDBG eprintf (\"r_bin_java_stack_map_frame_new: TODO Stack Frame Same Locals Frame Stack 1 Extended Condition is untested, so there may be issues.\\n\");",
          "4367:   IFDBG eprintf (\"r_bin_java_stack_map_frame_new: Parsing R_BIN_JAVA_STACK_FRAME_APPEND.\\n\");",
          "",
          "---------------",
          "--- Hunk 59 ---",
          "[Context before]",
          "4394:    if (offset >= sz) {",
          "4395:     break;",
          "4396:    }",
          "4398:    se = r_bin_java_read_from_buffer_verification_info_new (buffer + offset, sz - offset, buf_offset + offset);",
          "4400:    if (se) {",
          "4401:     offset += se->size;",
          "4402:    } else {",
          "",
          "[Removed Lines]",
          "4397:    IFDBG eprintf(\"r_bin_java_stack_map_frame_new: Parsing verifying the k'th frame: %d of %d.\\n\", i, k);",
          "4399:    IFDBG eprintf(\"r_bin_java_stack_map_frame_new: Completed Parsing\\n\");",
          "",
          "[Added Lines]",
          "4382:    IFDBG eprintf (\"r_bin_java_stack_map_frame_new: Parsing verifying the k'th frame: %d of %d.\\n\", i, k);",
          "4384:    IFDBG eprintf (\"r_bin_java_stack_map_frame_new: Completed Parsing\\n\");",
          "",
          "---------------",
          "--- Hunk 60 ---",
          "[Context before]",
          "4406:    }",
          "4407:    r_list_append (stack_frame->local_items, (void *) se);",
          "4408:   }",
          "4411:   if (p_frame) {",
          "4412:    stack_frame->number_of_locals = p_frame->number_of_locals + k;",
          "4413:   } else {",
          "4416:   }",
          "4418:   break;",
          "4419:  case R_BIN_JAVA_STACK_FRAME_FULL_FRAME:",
          "4421:   stack_frame->offset_delta = R_BIN_JAVA_USHORT (buffer, offset);",
          "4422:   offset += 2;",
          "",
          "[Removed Lines]",
          "4409:   IFDBG eprintf(\"r_bin_java_stack_map_frame_new: Breaking out of loop\");",
          "4410:   IFDBG eprintf(\"p_frame: %p\\n\", p_frame);",
          "4414:    IFINT eprintf(\"><?><\\n\");",
          "4415:    IFDBG eprintf(\"Unable to set previous stackframe with the number of locals (current info.code_attr.implicit_frame was probably not set :/)\");",
          "4417:   IFDBG eprintf(\"r_bin_java_stack_map_frame_new: TODO Stack Frame Same Locals Frame Stack 1 Extended Condition is untested, so there may be issues.\\n\");",
          "4420:   IFDBG eprintf(\"r_bin_java_stack_map_frame_new: Parsing R_BIN_JAVA_STACK_FRAME_FULL_FRAME.\\n\");",
          "",
          "[Added Lines]",
          "4394:   IFDBG eprintf (\"r_bin_java_stack_map_frame_new: Breaking out of loop\");",
          "4395:   IFDBG eprintf (\"p_frame: %p\\n\", p_frame);",
          "4399:    IFINT eprintf (\"><?><\\n\");",
          "4400:    IFDBG eprintf (\"Unable to set previous stackframe with the number of locals (current info.code_attr.implicit_frame was probably not set :/)\");",
          "4402:   IFDBG eprintf (\"r_bin_java_stack_map_frame_new: TODO Stack Frame Same Locals Frame Stack 1 Extended Condition is untested, so there may be issues.\\n\");",
          "4405:   IFDBG eprintf (\"r_bin_java_stack_map_frame_new: Parsing R_BIN_JAVA_STACK_FRAME_FULL_FRAME.\\n\");",
          "",
          "---------------",
          "--- Hunk 61 ---",
          "[Context before]",
          "4560:   value_cnt++;",
          "4561:  }",
          "4562:  if (value_cnt != attr->info.local_variable_table_attr.table_length) {",
          "4564:   \"Number of locals not accurate.  Expected %d but got %d\",",
          "4565:   attr->info.local_variable_table_attr.table_length, value_cnt);",
          "4566:  }",
          "",
          "[Removed Lines]",
          "4563:   IFDBG eprintf(\"r_bin_java_build_stack_frame_from_local_variable_table: \"",
          "",
          "[Added Lines]",
          "4548:   IFDBG eprintf (\"r_bin_java_build_stack_frame_from_local_variable_table: \"",
          "",
          "---------------",
          "--- Hunk 62 ---",
          "[Context before]",
          "4604:  attr->info.stack_map_table_attr.number_of_entries = R_BIN_JAVA_USHORT (buffer, offset);",
          "4605:  offset += 2;",
          "4607:  IFDBG r_bin_java_print_stack_map_table_attr_summary(attr);",
          "4608:  for (i = 0; i < attr->info.stack_map_table_attr.number_of_entries; i++) {",
          "4611:   if (stack_frame == NULL && R_BIN_JAVA_GLOBAL_BIN && R_BIN_JAVA_GLOBAL_BIN->current_code_attr) {",
          "4613:    stack_frame = R_BIN_JAVA_GLOBAL_BIN->current_code_attr->info.code_attr.implicit_frame;",
          "4614:   }",
          "4616:   if (offset >= sz) {",
          "4617:    r_bin_java_stack_map_table_attr_free (attr);",
          "4618:    return NULL;",
          "",
          "[Removed Lines]",
          "4606:  IFDBG eprintf(\"r_bin_java_stack_map_table_attr_new: Processing stack map, summary is:\\n\");",
          "4610:   IFDBG eprintf(\"Reading StackMap Entry #%d @ 0x%08\"PFMT64x \"\\n\", i, buf_offset + offset);",
          "4612:    IFDBG eprintf(\"Setting an implicit frame at #%d @ 0x%08\"PFMT64x \"\\n\", i, buf_offset + offset);",
          "4615:   IFDBG eprintf(\"Reading StackMap Entry #%d @ 0x%08\"PFMT64x \", current stack_frame: %p\\n\", i, buf_offset + offset, stack_frame);",
          "",
          "[Added Lines]",
          "4591:  IFDBG eprintf (\"r_bin_java_stack_map_table_attr_new: Processing stack map, summary is:\\n\");",
          "4595:   IFDBG eprintf (\"Reading StackMap Entry #%d @ 0x%08\"PFMT64x \"\\n\", i, buf_offset + offset);",
          "4597:    IFDBG eprintf (\"Setting an implicit frame at #%d @ 0x%08\"PFMT64x \"\\n\", i, buf_offset + offset);",
          "4600:   IFDBG eprintf (\"Reading StackMap Entry #%d @ 0x%08\"PFMT64x \", current stack_frame: %p\\n\", i, buf_offset + offset, stack_frame);",
          "",
          "---------------",
          "--- Hunk 63 ---",
          "[Context before]",
          "5319:   eprintf (\"Attempting to print an invalid RBinJavaSourceDebugExtensionAttr *.\\n\");",
          "5320:   return;",
          "5321:  }",
          "5327:  for (i = 0; i < attr->length; i++) {",
          "5329:  }",
          "5331: }",
          "5333: R_API void r_bin_java_print_unknown_attr_summary(RBinJavaAttrInfo *attr) {",
          "",
          "[Removed Lines]",
          "5322:  Eprintf (\"Source Debug Extension Attribute Information:\\n\");",
          "5323:  Eprintf (\"  Attribute Offset: 0x%08\"PFMT64x \"\\n\", attr->file_offset);",
          "5324:  Eprintf (\"  Attribute Name Index: %d (%s)\\n\", attr->name_idx, attr->name);",
          "5325:  Eprintf (\"  Extension Length: %d\\n\", attr->length);",
          "5326:  Eprintf (\"  Source Debug Extension value: \\n\");",
          "5328:   Eprintf (\"%c\", attr->info.debug_extensions.debug_extension[i]);",
          "5330:  Eprintf (\"\\n  Source Debug Extension End\\n\");",
          "",
          "[Added Lines]",
          "5307:  printf (\"Source Debug Extension Attribute Information:\\n\");",
          "5308:  printf (\"  Attribute Offset: 0x%08\"PFMT64x \"\\n\", attr->file_offset);",
          "5309:  printf (\"  Attribute Name Index: %d (%s)\\n\", attr->name_idx, attr->name);",
          "5310:  printf (\"  Extension Length: %d\\n\", attr->length);",
          "5311:  printf (\"  Source Debug Extension value: \\n\");",
          "5313:   printf (\"%c\", attr->info.debug_extensions.debug_extension[i]);",
          "5315:  printf (\"\\n  Source Debug Extension End\\n\");",
          "",
          "---------------",
          "--- Hunk 64 ---",
          "[Context before]",
          "5335:   eprintf (\"Attempting to print an invalid RBinJavaAttrInfo *Unknown.\\n\");",
          "5336:   return;",
          "5337:  }",
          "5342: }",
          "5344: R_API void r_bin_java_print_code_exceptions_attr_summary(RBinJavaExceptionEntry *exc_entry) {",
          "",
          "[Removed Lines]",
          "5338:  Eprintf (\"Unknown Attribute Information:\\n\");",
          "5339:  Eprintf (\"  Attribute Offset: 0x%08\"PFMT64x \"\\n\", attr->file_offset);",
          "5340:  Eprintf (\"  Attribute Name Index: %d (%s)\\n\", attr->name_idx, attr->name);",
          "5341:  Eprintf (\"  Attribute Length: %d\\n\", attr->length);",
          "",
          "[Added Lines]",
          "5323:  printf (\"Unknown Attribute Information:\\n\");",
          "5324:  printf (\"  Attribute Offset: 0x%08\"PFMT64x \"\\n\", attr->file_offset);",
          "5325:  printf (\"  Attribute Name Index: %d (%s)\\n\", attr->name_idx, attr->name);",
          "5326:  printf (\"  Attribute Length: %d\\n\", attr->length);",
          "",
          "---------------",
          "--- Hunk 65 ---",
          "[Context before]",
          "5346:   eprintf (\"Attempting to print an invalid RBinJavaExceptionEntry *.\\n\");",
          "5347:   return;",
          "5348:  }",
          "5355: }",
          "5357: R_API void r_bin_java_print_code_attr_summary(RBinJavaAttrInfo *attr) {",
          "",
          "[Removed Lines]",
          "5349:  Eprintf (\"  Exception Table Entry Information\\n\");",
          "5350:  Eprintf (\"    offset: 0x%08\"PFMT64x\"\\n\", exc_entry->file_offset);",
          "5351:  Eprintf (\"    catch_type: %d\\n\", exc_entry->catch_type);",
          "5352:  Eprintf (\"    start_pc:   0x%04x\\n\", exc_entry->start_pc);",
          "5353:  Eprintf (\"    end_pc: 0x%04x\\n\", exc_entry->end_pc);",
          "5354:  Eprintf (\"    handler_pc: 0x%04x\\n\", exc_entry->handler_pc);",
          "",
          "[Added Lines]",
          "5334:  printf (\"  Exception Table Entry Information\\n\");",
          "5335:  printf (\"    offset: 0x%08\"PFMT64x\"\\n\", exc_entry->file_offset);",
          "5336:  printf (\"    catch_type: %d\\n\", exc_entry->catch_type);",
          "5337:  printf (\"    start_pc:   0x%04x\\n\", exc_entry->start_pc);",
          "5338:  printf (\"    end_pc: 0x%04x\\n\", exc_entry->end_pc);",
          "5339:  printf (\"    handler_pc: 0x%04x\\n\", exc_entry->handler_pc);",
          "",
          "---------------",
          "--- Hunk 66 ---",
          "[Context before]",
          "5362:   eprintf (\"Attempting to print an invalid RBinJavaAttrInfo *Code.\\n\");",
          "5363:   return;",
          "5364:  }",
          "5375:  if (attr->info.code_attr.exception_table) {",
          "5377:   r_list_foreach_safe (attr->info.code_attr.exception_table, iter, iter_tmp, exc_entry) {",
          "5378:    r_bin_java_print_code_exceptions_attr_summary (exc_entry);",
          "5379:   }",
          "5380:  }",
          "5382:  r_bin_java_print_stack_map_frame_summary (attr->info.code_attr.implicit_frame);",
          "5384:  if (attr->info.code_attr.attributes && attr->info.code_attr.attributes_count > 0) {",
          "5386:   r_list_foreach_safe (attr->info.code_attr.attributes, iter, iter_tmp, _attr) {",
          "5387:    r_bin_java_print_attr_summary (_attr);",
          "5388:   }",
          "",
          "[Removed Lines]",
          "5365:  Eprintf (\"Code Attribute Information:\\n\");",
          "5366:  Eprintf (\"  Attribute Offset: 0x%08\"PFMT64x \"\\n\", attr->file_offset);",
          "5367:  Eprintf (\"  Attribute Name Index: %d (%s)\\n\", attr->name_idx, attr->name);",
          "5368:  Eprintf (\"  Attribute Length: %d, Attribute Count: %d\\n\", attr->length, attr->info.code_attr.attributes_count);",
          "5369:  Eprintf (\"    Max Stack: %d\\n\", attr->info.code_attr.max_stack);",
          "5370:  Eprintf (\"    Max Locals: %d\\n\", attr->info.code_attr.max_locals);",
          "5371:  Eprintf (\"    Code Length: %d\\n\", attr->info.code_attr.code_length);",
          "5372:  Eprintf (\"    Code At Offset: 0x%08\"PFMT64x \"\\n\", (ut64) attr->info.code_attr.code_offset);",
          "5373:  Eprintf (\"Code Attribute Exception Table Information:\\n\");",
          "5374:  Eprintf (\"  Exception Table Length: %d\\n\", attr->info.code_attr.exception_table_length);",
          "5381:  Eprintf (\"  Implicit Method Stack Frame:\\n\");",
          "5383:  Eprintf (\"Code Attribute Attributes Information:\\n\");",
          "5385:   Eprintf (\"  Code Attribute Attributes Count: %d\\n\", attr->info.code_attr.attributes_count);",
          "",
          "[Added Lines]",
          "5350:  printf (\"Code Attribute Information:\\n\");",
          "5351:  printf (\"  Attribute Offset: 0x%08\"PFMT64x \"\\n\", attr->file_offset);",
          "5352:  printf (\"  Attribute Name Index: %d (%s)\\n\", attr->name_idx, attr->name);",
          "5353:  printf (\"  Attribute Length: %d, Attribute Count: %d\\n\", attr->length, attr->info.code_attr.attributes_count);",
          "5354:  printf (\"    Max Stack: %d\\n\", attr->info.code_attr.max_stack);",
          "5355:  printf (\"    Max Locals: %d\\n\", attr->info.code_attr.max_locals);",
          "5356:  printf (\"    Code Length: %d\\n\", attr->info.code_attr.code_length);",
          "5357:  printf (\"    Code At Offset: 0x%08\"PFMT64x \"\\n\", (ut64) attr->info.code_attr.code_offset);",
          "5358:  printf (\"Code Attribute Exception Table Information:\\n\");",
          "5359:  printf (\"  Exception Table Length: %d\\n\", attr->info.code_attr.exception_table_length);",
          "5366:  printf (\"  Implicit Method Stack Frame:\\n\");",
          "5368:  printf (\"Code Attribute Attributes Information:\\n\");",
          "5370:   printf (\"  Code Attribute Attributes Count: %d\\n\", attr->info.code_attr.attributes_count);",
          "",
          "---------------",
          "--- Hunk 67 ---",
          "[Context before]",
          "5394:   eprintf (\"Attempting to print an invalid RBinJavaAttrInfo *ConstantValue.\\n\");",
          "5395:   return;",
          "5396:  }",
          "5402: }",
          "5404: R_API void r_bin_java_print_deprecated_attr_summary(RBinJavaAttrInfo *attr) {",
          "",
          "[Removed Lines]",
          "5397:  Eprintf (\"Constant Value Attribute Information:\\n\");",
          "5398:  Eprintf (\"  Attribute Offset: 0x%08\"PFMT64x \"\\n\", attr->file_offset);",
          "5399:  Eprintf (\"  Attribute Name Index: %d (%s)\\n\", attr->name_idx, attr->name);",
          "5400:  Eprintf (\"  Attribute Length: %d\\n\", attr->length);",
          "5401:  Eprintf (\"  ConstantValue Index: %d\\n\", attr->info.constant_value_attr.constantvalue_idx);",
          "",
          "[Added Lines]",
          "5382:  printf (\"Constant Value Attribute Information:\\n\");",
          "5383:  printf (\"  Attribute Offset: 0x%08\"PFMT64x \"\\n\", attr->file_offset);",
          "5384:  printf (\"  Attribute Name Index: %d (%s)\\n\", attr->name_idx, attr->name);",
          "5385:  printf (\"  Attribute Length: %d\\n\", attr->length);",
          "5386:  printf (\"  ConstantValue Index: %d\\n\", attr->info.constant_value_attr.constantvalue_idx);",
          "",
          "---------------",
          "--- Hunk 68 ---",
          "[Context before]",
          "5406:   eprintf (\"Attempting to print an invalid RBinJavaAttrInfo *Deperecated.\\n\");",
          "5407:   return;",
          "5408:  }",
          "5413: }",
          "5415: R_API void r_bin_java_print_enclosing_methods_attr_summary(RBinJavaAttrInfo *attr) {",
          "",
          "[Removed Lines]",
          "5409:  Eprintf (\"Deperecated Attribute Information:\\n\");",
          "5410:  Eprintf (\"  Attribute Offset: 0x%08\"PFMT64x \"\\n\", attr->file_offset);",
          "5411:  Eprintf (\"  Attribute Name Index: %d (%s)\\n\", attr->name_idx, attr->name);",
          "5412:  Eprintf (\"  Attribute Length: %d\\n\", attr->length);",
          "",
          "[Added Lines]",
          "5394:  printf (\"Deperecated Attribute Information:\\n\");",
          "5395:  printf (\"  Attribute Offset: 0x%08\"PFMT64x \"\\n\", attr->file_offset);",
          "5396:  printf (\"  Attribute Name Index: %d (%s)\\n\", attr->name_idx, attr->name);",
          "5397:  printf (\"  Attribute Length: %d\\n\", attr->length);",
          "",
          "---------------",
          "--- Hunk 69 ---",
          "[Context before]",
          "5417:   eprintf (\"Attempting to print an invalid RBinJavaAttrInfo *Deperecated.\\n\");",
          "5418:   return;",
          "5419:  }",
          "5428: }",
          "5430: R_API void r_bin_java_print_exceptions_attr_summary(RBinJavaAttrInfo *attr) {",
          "",
          "[Removed Lines]",
          "5420:  Eprintf (\"Enclosing Method Attribute Information:\\n\");",
          "5421:  Eprintf (\"  Attribute Offset: 0x%08\"PFMT64x \"\\n\", attr->file_offset);",
          "5422:  Eprintf (\"  Attribute Name Index: %d (%s)\\n\", attr->name_idx, attr->name);",
          "5423:  Eprintf (\"  Attribute Length: %d\\n\", attr->length);",
          "5424:  Eprintf (\"  Class Info Index : 0x%02x\\n\", attr->info.enclosing_method_attr.class_idx);",
          "5425:  Eprintf (\"  Method Name and Type Index : 0x%02x\\n\", attr->info.enclosing_method_attr.method_idx);",
          "5426:  Eprintf (\"  Class Name : %s\\n\", attr->info.enclosing_method_attr.class_name);",
          "5427:  Eprintf (\"  Method Name and Desc : %s %s\\n\", attr->info.enclosing_method_attr.method_name, attr->info.enclosing_method_attr.method_descriptor);",
          "",
          "[Added Lines]",
          "5405:  printf (\"Enclosing Method Attribute Information:\\n\");",
          "5406:  printf (\"  Attribute Offset: 0x%08\"PFMT64x \"\\n\", attr->file_offset);",
          "5407:  printf (\"  Attribute Name Index: %d (%s)\\n\", attr->name_idx, attr->name);",
          "5408:  printf (\"  Attribute Length: %d\\n\", attr->length);",
          "5409:  printf (\"  Class Info Index : 0x%02x\\n\", attr->info.enclosing_method_attr.class_idx);",
          "5410:  printf (\"  Method Name and Type Index : 0x%02x\\n\", attr->info.enclosing_method_attr.method_idx);",
          "5411:  printf (\"  Class Name : %s\\n\", attr->info.enclosing_method_attr.class_name);",
          "5412:  printf (\"  Method Name and Desc : %s %s\\n\", attr->info.enclosing_method_attr.method_name, attr->info.enclosing_method_attr.method_descriptor);",
          "",
          "---------------",
          "--- Hunk 70 ---",
          "[Context before]",
          "5433:   eprintf (\"Attempting to print an invalid RBinJavaAttrInfo *Exceptions.\\n\");",
          "5434:   return;",
          "5435:  }",
          "5440:  for (i = 0; i < attr->info.exceptions_attr.number_of_exceptions; i++) {",
          "5442:  }",
          "5443: }",
          "",
          "[Removed Lines]",
          "5436:  Eprintf (\"Exceptions Attribute Information:\\n\");",
          "5437:  Eprintf (\"  Attribute Offset: 0x%08\"PFMT64x \"\\n\", attr->file_offset);",
          "5438:  Eprintf (\"  Attribute Name Index: %d (%s)\\n\", attr->name_idx, attr->name);",
          "5439:  Eprintf (\"  Attribute Length: %d\\n\", attr->length);",
          "5441:   Eprintf (\"  Exceptions Attribute Index[%d]: %d\\n\", i, attr->info.exceptions_attr.exception_idx_table[i]);",
          "",
          "[Added Lines]",
          "5421:  printf (\"Exceptions Attribute Information:\\n\");",
          "5422:  printf (\"  Attribute Offset: 0x%08\"PFMT64x \"\\n\", attr->file_offset);",
          "5423:  printf (\"  Attribute Name Index: %d (%s)\\n\", attr->name_idx, attr->name);",
          "5424:  printf (\"  Attribute Length: %d\\n\", attr->length);",
          "5426:   printf (\"  Exceptions Attribute Index[%d]: %d\\n\", i, attr->info.exceptions_attr.exception_idx_table[i]);",
          "",
          "---------------",
          "--- Hunk 71 ---",
          "[Context before]",
          "5467:   eprintf (\"Attempting to print an invalid RBinJavaAttrInfo *InnerClasses.\\n\");",
          "5468:   return;",
          "5469:  }",
          "5474:  r_list_foreach_safe (attr->info.inner_classes_attr.classes, iter, iter_tmp, icattr) {",
          "5475:   r_bin_java_print_classes_attr_summary (icattr);",
          "5476:  }",
          "",
          "[Removed Lines]",
          "5470:  Eprintf (\"Inner Classes Attribute Information:\\n\");",
          "5471:  Eprintf (\"  Attribute Offset: 0x%08\"PFMT64x \"\\n\", attr->file_offset);",
          "5472:  Eprintf (\"  Attribute Name Index: %d (%s)\\n\", attr->name_idx, attr->name);",
          "5473:  Eprintf (\"  Attribute Length: %d\\n\", attr->length);",
          "",
          "[Added Lines]",
          "5455:  printf (\"Inner Classes Attribute Information:\\n\");",
          "5456:  printf (\"  Attribute Offset: 0x%08\"PFMT64x \"\\n\", attr->file_offset);",
          "5457:  printf (\"  Attribute Name Index: %d (%s)\\n\", attr->name_idx, attr->name);",
          "5458:  printf (\"  Attribute Length: %d\\n\", attr->length);",
          "",
          "---------------",
          "--- Hunk 72 ---",
          "[Context before]",
          "5481:   eprintf (\"Attempting to print an invalid RBinJavaLineNumberAttribute *.\\n\");",
          "5482:   return;",
          "5483:  }",
          "5487: }",
          "5489: R_API void r_bin_java_print_line_number_table_attr_summary(RBinJavaAttrInfo *attr) {",
          "",
          "[Removed Lines]",
          "5484:  Eprintf (\"  Line Number Attribute Offset: 0x%08\"PFMT64x \"\\n\", lnattr->file_offset);",
          "5485:  Eprintf (\"  Line Number Attribute StartPC: %d\\n\", lnattr->start_pc);",
          "5486:  Eprintf (\"  Line Number Attribute LineNumber: %d\\n\", lnattr->line_number);",
          "",
          "[Added Lines]",
          "5469:  printf (\"  Line Number Attribute Offset: 0x%08\"PFMT64x \"\\n\", lnattr->file_offset);",
          "5470:  printf (\"  Line Number Attribute StartPC: %d\\n\", lnattr->start_pc);",
          "5471:  printf (\"  Line Number Attribute LineNumber: %d\\n\", lnattr->line_number);",
          "",
          "---------------",
          "--- Hunk 73 ---",
          "[Context before]",
          "5493:   eprintf (\"Attempting to print an invalid RBinJavaAttrInfo *LineNumberTable.\\n\");",
          "5494:   return;",
          "5495:  }",
          "5500:  r_list_foreach_safe (attr->info.line_number_table_attr.line_number_table, iter, iter_tmp, lnattr) {",
          "5501:   r_bin_java_print_line_number_attr_summary (lnattr);",
          "5502:  }",
          "",
          "[Removed Lines]",
          "5496:  Eprintf (\"Line Number Table Attribute Information:\\n\");",
          "5497:  Eprintf (\"  Attribute Offset: 0x%08\"PFMT64x \"\\n\", attr->file_offset);",
          "5498:  Eprintf (\"  Attribute Name Index: %d (%s)\\n\", attr->name_idx, attr->name);",
          "5499:  Eprintf (\"  Attribute Length: %d\\n\", attr->length);",
          "",
          "[Added Lines]",
          "5481:  printf (\"Line Number Table Attribute Information:\\n\");",
          "5482:  printf (\"  Attribute Offset: 0x%08\"PFMT64x \"\\n\", attr->file_offset);",
          "5483:  printf (\"  Attribute Name Index: %d (%s)\\n\", attr->name_idx, attr->name);",
          "5484:  printf (\"  Attribute Length: %d\\n\", attr->length);",
          "",
          "---------------",
          "--- Hunk 74 ---",
          "[Context before]",
          "5507:   eprintf (\"Attempting to print an invalid RBinJavaLocalVariableAttribute *.\\n\");",
          "5508:   return;",
          "5509:  }",
          "5518: }",
          "5520: R_API void r_bin_java_print_local_variable_table_attr_summary(RBinJavaAttrInfo *attr) {",
          "",
          "[Removed Lines]",
          "5510:  Eprintf (\"  Local Variable Attribute offset: 0x%08\"PFMT64x \"\\n\", lvattr->file_offset);",
          "5511:  Eprintf (\"  Local Variable Attribute start_pc: %d\\n\", lvattr->start_pc);",
          "5512:  Eprintf (\"  Local Variable Attribute Length: %d\\n\", lvattr->length);",
          "5513:  Eprintf (\"  Local Variable Attribute name_idx: %d\\n\", lvattr->name_idx);",
          "5514:  Eprintf (\"  Local Variable Attribute name: %s\\n\", lvattr->name);",
          "5515:  Eprintf (\"  Local Variable Attribute descriptor_idx: %d\\n\", lvattr->descriptor_idx);",
          "5516:  Eprintf (\"  Local Variable Attribute descriptor: %s\\n\", lvattr->descriptor);",
          "5517:  Eprintf (\"  Local Variable Attribute index: %d\\n\", lvattr->index);",
          "",
          "[Added Lines]",
          "5495:  printf (\"  Local Variable Attribute offset: 0x%08\"PFMT64x \"\\n\", lvattr->file_offset);",
          "5496:  printf (\"  Local Variable Attribute start_pc: %d\\n\", lvattr->start_pc);",
          "5497:  printf (\"  Local Variable Attribute Length: %d\\n\", lvattr->length);",
          "5498:  printf (\"  Local Variable Attribute name_idx: %d\\n\", lvattr->name_idx);",
          "5499:  printf (\"  Local Variable Attribute name: %s\\n\", lvattr->name);",
          "5500:  printf (\"  Local Variable Attribute descriptor_idx: %d\\n\", lvattr->descriptor_idx);",
          "5501:  printf (\"  Local Variable Attribute descriptor: %s\\n\", lvattr->descriptor);",
          "5502:  printf (\"  Local Variable Attribute index: %d\\n\", lvattr->index);",
          "",
          "---------------",
          "--- Hunk 75 ---",
          "[Context before]",
          "5524:   eprintf (\"Attempting to print an invalid RBinJavaAttrInfo *LocalVariableTable.\\n\");",
          "5525:   return;",
          "5526:  }",
          "5531:  r_list_foreach_safe (attr->info.local_variable_table_attr.local_variable_table, iter, iter_tmp, lvattr) {",
          "5532:   r_bin_java_print_local_variable_attr_summary (lvattr);",
          "5533:  }",
          "",
          "[Removed Lines]",
          "5527:  Eprintf (\"Local Variable Table Attribute Information:\\n\");",
          "5528:  Eprintf (\"  Attribute Offset: 0x%08\"PFMT64x \"\\n\", attr->file_offset);",
          "5529:  Eprintf (\"  Attribute Name Index: %d (%s)\\n\", attr->name_idx, attr->name);",
          "5530:  Eprintf (\"  Attribute Length: %d\\n\", attr->length);",
          "",
          "[Added Lines]",
          "5512:  printf (\"Local Variable Table Attribute Information:\\n\");",
          "5513:  printf (\"  Attribute Offset: 0x%08\"PFMT64x \"\\n\", attr->file_offset);",
          "5514:  printf (\"  Attribute Name Index: %d (%s)\\n\", attr->name_idx, attr->name);",
          "5515:  printf (\"  Attribute Length: %d\\n\", attr->length);",
          "",
          "---------------",
          "--- Hunk 76 ---",
          "[Context before]",
          "5569:   eprintf (\"Attempting to print an invalid RBinJavaAttrInfo *SignatureAttr.\\n\");",
          "5570:   return;",
          "5571:  }",
          "5578: }",
          "5580: R_API void r_bin_java_print_source_code_file_attr_summary(RBinJavaAttrInfo *attr) {",
          "",
          "[Removed Lines]",
          "5572:  Eprintf (\"Signature Attribute Information:\\n\");",
          "5573:  Eprintf (\"  Attribute Offset: 0x%08\"PFMT64x \"\\n\", attr->file_offset);",
          "5574:  Eprintf (\"  Attribute Name Index: %d (%s)\\n\", attr->name_idx, attr->name);",
          "5575:  Eprintf (\"  Attribute Length: %d\\n\", attr->length);",
          "5576:  Eprintf (\"  Signature UTF8 Index: %d\\n\", attr->info.signature_attr.signature_idx);",
          "5577:  Eprintf (\"  Signature string: %s\\n\", attr->info.signature_attr.signature);",
          "",
          "[Added Lines]",
          "5557:  printf (\"Signature Attribute Information:\\n\");",
          "5558:  printf (\"  Attribute Offset: 0x%08\"PFMT64x \"\\n\", attr->file_offset);",
          "5559:  printf (\"  Attribute Name Index: %d (%s)\\n\", attr->name_idx, attr->name);",
          "5560:  printf (\"  Attribute Length: %d\\n\", attr->length);",
          "5561:  printf (\"  Signature UTF8 Index: %d\\n\", attr->info.signature_attr.signature_idx);",
          "5562:  printf (\"  Signature string: %s\\n\", attr->info.signature_attr.signature);",
          "",
          "---------------",
          "--- Hunk 77 ---",
          "[Context before]",
          "5582:   eprintf (\"Attempting to print an invalid RBinJavaAttrInfo *SourceFile.\\n\");",
          "5583:   return;",
          "5584:  }",
          "5590: }",
          "5592: R_API void r_bin_java_print_synthetic_attr_summary(RBinJavaAttrInfo *attr) {",
          "",
          "[Removed Lines]",
          "5585:  Eprintf (\"Source File Attribute Information:\\n\");",
          "5586:  Eprintf (\"  Attribute Offset: 0x%08\"PFMT64x \"\\n\", attr->file_offset);",
          "5587:  Eprintf (\"  Attribute Name Index: %d (%s)\\n\", attr->name_idx, attr->name);",
          "5588:  Eprintf (\"  Attribute Length: %d\\n\", attr->length);",
          "5589:  Eprintf (\"  Source File Index: %d\\n\", attr->info.source_file_attr.sourcefile_idx);",
          "",
          "[Added Lines]",
          "5570:  printf (\"Source File Attribute Information:\\n\");",
          "5571:  printf (\"  Attribute Offset: 0x%08\"PFMT64x \"\\n\", attr->file_offset);",
          "5572:  printf (\"  Attribute Name Index: %d (%s)\\n\", attr->name_idx, attr->name);",
          "5573:  printf (\"  Attribute Length: %d\\n\", attr->length);",
          "5574:  printf (\"  Source File Index: %d\\n\", attr->info.source_file_attr.sourcefile_idx);",
          "",
          "---------------",
          "--- Hunk 78 ---",
          "[Context before]",
          "5594:   eprintf (\"Attempting to print an invalid RBinJavaAttrInfo *Synthetic.\\n\");",
          "5595:   return;",
          "5596:  }",
          "5602: }",
          "5604: R_API void r_bin_java_print_stack_map_table_attr_summary(RBinJavaAttrInfo *attr) {",
          "5605:  RListIter *iter, *iter_tmp;",
          "5607:  RBinJavaStackMapFrame *frame;",
          "5609:   eprintf (\"Attempting to print an invalid RBinJavaStackMapTableAttr*  .\\n\");",
          "5610:   return;",
          "5611:  }",
          "5620:  if (ptrList) {",
          "5621:   r_list_foreach_safe (ptrList, iter, iter_tmp, frame) {",
          "5622:    r_bin_java_print_stack_map_frame_summary (frame);",
          "",
          "[Removed Lines]",
          "5597:  Eprintf (\"Synthetic Attribute Information:\\n\");",
          "5598:  Eprintf (\"  Attribute Offset: 0x%08\"PFMT64x \"\\n\", attr->file_offset);",
          "5599:  Eprintf (\"  Attribute Name Index: %d (%s)\\n\", attr->name_idx, attr->name);",
          "5600:  Eprintf (\"  Attribute Length: %d\\n\", attr->length);",
          "5601:  Eprintf (\"  Attribute Index: %d\\n\", attr->info.source_file_attr.sourcefile_idx);",
          "5606:  RList *ptrList;",
          "5608:  if (attr == NULL) {",
          "5612:  Eprintf (\"StackMapTable Attribute Information:\\n\");",
          "5613:  Eprintf (\"  Attribute Offset: 0x%08\"PFMT64x \"\\n\", attr->file_offset);",
          "5614:  Eprintf (\"  Attribute Name Index: %d (%s)\\n\", attr->name_idx, attr->name);",
          "5615:  Eprintf (\"  Attribute Length: %d\\n\", attr->length);",
          "5616:  Eprintf (\"  StackMapTable Method Code Size: 0x%08x\\n\", attr->info.stack_map_table_attr.code_size);",
          "5617:  Eprintf (\"  StackMapTable Frame Entries: 0x%08x\\n\", attr->info.stack_map_table_attr.number_of_entries);",
          "5618:  Eprintf (\"  StackMapTable Frames:\\n\");",
          "5619:  ptrList = attr->info.stack_map_table_attr.stack_map_frame_entries;",
          "",
          "[Added Lines]",
          "5582:  printf (\"Synthetic Attribute Information:\\n\");",
          "5583:  printf (\"  Attribute Offset: 0x%08\"PFMT64x \"\\n\", attr->file_offset);",
          "5584:  printf (\"  Attribute Name Index: %d (%s)\\n\", attr->name_idx, attr->name);",
          "5585:  printf (\"  Attribute Length: %d\\n\", attr->length);",
          "5586:  printf (\"  Attribute Index: %d\\n\", attr->info.source_file_attr.sourcefile_idx);",
          "5592:  if (!attr) {",
          "5596:  printf (\"StackMapTable Attribute Information:\\n\");",
          "5597:  printf (\"  Attribute Offset: 0x%08\"PFMT64x \"\\n\", attr->file_offset);",
          "5598:  printf (\"  Attribute Name Index: %d (%s)\\n\", attr->name_idx, attr->name);",
          "5599:  printf (\"  Attribute Length: %d\\n\", attr->length);",
          "5600:  printf (\"  StackMapTable Method Code Size: 0x%08x\\n\", attr->info.stack_map_table_attr.code_size);",
          "5601:  printf (\"  StackMapTable Frame Entries: 0x%08x\\n\", attr->info.stack_map_table_attr.number_of_entries);",
          "5602:  printf (\"  StackMapTable Frames:\\n\");",
          "5603:  RList *ptrList = attr->info.stack_map_table_attr.stack_map_frame_entries;",
          "",
          "---------------",
          "--- Hunk 79 ---",
          "[Context before]",
          "5627: R_API void r_bin_java_print_stack_map_frame_summary(RBinJavaStackMapFrame *obj) {",
          "5628:  RListIter *iter, *iter_tmp;",
          "5630:  RBinJavaVerificationObj *ver_obj;",
          "5632:   eprintf (\"Attempting to print an invalid RBinJavaStackMapFrame*  .\\n\");",
          "5633:   return;",
          "5634:  }",
          "5642:  r_list_foreach_safe (ptrList, iter, iter_tmp, ver_obj) {",
          "5643:   r_bin_java_print_verification_info_summary (ver_obj);",
          "5644:  }",
          "5646:  ptrList = obj->stack_items;",
          "5647:  r_list_foreach_safe (ptrList, iter, iter_tmp, ver_obj) {",
          "5648:   r_bin_java_print_verification_info_summary (ver_obj);",
          "",
          "[Removed Lines]",
          "5629:  RList *ptrList;",
          "5631:  if (obj == NULL) {",
          "5635:  Eprintf (\"Stack Map Frame Information\\n\");",
          "5636:  Eprintf (\"  Tag Value = 0x%02x Name: %s\\n\", obj->tag, ((RBinJavaStackMapFrameMetas *) obj->metas->type_info)->name);",
          "5637:  Eprintf (\"  Offset: 0x%08\"PFMT64x \"\\n\", obj->file_offset);",
          "5638:  Eprintf (\"  Local Variable Count = 0x%04x\\n\", obj->number_of_locals);",
          "5639:  Eprintf (\"  Stack Items Count = 0x%04x\\n\", obj->number_of_stack_items);",
          "5640:  Eprintf (\"  Local Variables:\\n\");",
          "5641:  ptrList = obj->local_items;",
          "5645:  Eprintf (\"  Stack Items:\\n\");",
          "",
          "[Added Lines]",
          "5614:  if (!obj) {",
          "5618:  printf (\"Stack Map Frame Information\\n\");",
          "5619:  printf (\"  Tag Value = 0x%02x Name: %s\\n\", obj->tag, ((RBinJavaStackMapFrameMetas *) obj->metas->type_info)->name);",
          "5620:  printf (\"  Offset: 0x%08\"PFMT64x \"\\n\", obj->file_offset);",
          "5621:  printf (\"  Local Variable Count = 0x%04x\\n\", obj->number_of_locals);",
          "5622:  printf (\"  Stack Items Count = 0x%04x\\n\", obj->number_of_stack_items);",
          "5623:  printf (\"  Local Variables:\\n\");",
          "5624:  RList *ptrList = obj->local_items;",
          "5628:  printf (\"  Stack Items:\\n\");",
          "",
          "---------------",
          "--- Hunk 80 ---",
          "[Context before]",
          "5652: R_API void r_bin_java_print_verification_info_summary(RBinJavaVerificationObj *obj) {",
          "5653:  ut8 tag_value = R_BIN_JAVA_STACKMAP_UNKNOWN;",
          "5655:   eprintf (\"Attempting to print an invalid RBinJavaVerificationObj*  .\\n\");",
          "5656:   return;",
          "5657:  }",
          "5658:  if (obj->tag < R_BIN_JAVA_STACKMAP_UNKNOWN) {",
          "5659:   tag_value = obj->tag;",
          "5660:  }",
          "5665:  if (obj->tag == R_BIN_JAVA_STACKMAP_OBJECT) {",
          "5667:  } else if (obj->tag == R_BIN_JAVA_STACKMAP_UNINIT) {",
          "5669:  }",
          "5670: }",
          "",
          "[Removed Lines]",
          "5654:  if (obj == NULL) {",
          "5661:  Eprintf (\"Verification Information\\n\");",
          "5662:  Eprintf (\"  Offset: 0x%08\"PFMT64x \"\", obj->file_offset);",
          "5663:  Eprintf (\"  Tag Value = 0x%02x\\n\", obj->tag);",
          "5664:  Eprintf (\"  Name = %s\\n\", R_BIN_JAVA_VERIFICATION_METAS[tag_value].name);",
          "5666:   Eprintf (\"  Object Constant Pool Index = 0x%x\\n\", obj->info.obj_val_cp_idx);",
          "5668:   Eprintf (\"  Uninitialized Object offset in code = 0x%x\\n\", obj->info.uninit_offset);",
          "",
          "[Added Lines]",
          "5637:  if (!obj) {",
          "5644:  printf (\"Verification Information\\n\");",
          "5645:  printf (\"  Offset: 0x%08\"PFMT64x \"\", obj->file_offset);",
          "5646:  printf (\"  Tag Value = 0x%02x\\n\", obj->tag);",
          "5647:  printf (\"  Name = %s\\n\", R_BIN_JAVA_VERIFICATION_METAS[tag_value].name);",
          "5649:   printf (\"  Object Constant Pool Index = 0x%x\\n\", obj->info.obj_val_cp_idx);",
          "5651:   printf (\"  Uninitialized Object offset in code = 0x%x\\n\", obj->info.uninit_offset);",
          "",
          "---------------",
          "--- Hunk 81 ---",
          "[Context before]",
          "5678:   } else {",
          "5679: #if 0",
          "5680:    r_bin_java_print_interface_summary (field);",
          "5691:    r_list_foreach_safe (field->attributes, iter, iter_tmp, attr) {",
          "5692:     r_bin_java_print_attr_summary (attr);",
          "5693:    }",
          "5694:   }",
          "5695:  } else {",
          "5696:   eprintf (\"Attempting to print an invalid RBinJavaField* Field.\\n\");",
          "",
          "[Removed Lines]",
          "5681:    return;",
          "5682:   } * /",
          "5683: #endif",
          "5684:    Eprintf (\"Field Summary Information:\\n\");",
          "5685:    Eprintf (\"  File Offset: 0x%08\"PFMT64x \"\\n\", field->file_offset);",
          "5686:    Eprintf (\"  Name Index: %d (%s)\\n\", field->name_idx, field->name);",
          "5687:    Eprintf (\"  Descriptor Index: %d (%s)\\n\", field->descriptor_idx, field->descriptor);",
          "5688:    Eprintf (\"  Access Flags: 0x%02x (%s)\\n\", field->flags, field->flags_str);",
          "5689:    Eprintf (\"  Field Attributes Count: %d\\n\", field->attr_count);",
          "5690:    Eprintf (\"  Field Attributes:\\n\");",
          "",
          "[Added Lines]",
          "5664: #else",
          "5665:    printf (\"Field Summary Information:\\n\");",
          "5666:    printf (\"  File Offset: 0x%08\"PFMT64x \"\\n\", field->file_offset);",
          "5667:    printf (\"  Name Index: %d (%s)\\n\", field->name_idx, field->name);",
          "5668:    printf (\"  Descriptor Index: %d (%s)\\n\", field->descriptor_idx, field->descriptor);",
          "5669:    printf (\"  Access Flags: 0x%02x (%s)\\n\", field->flags, field->flags_str);",
          "5670:    printf (\"  Field Attributes Count: %d\\n\", field->attr_count);",
          "5671:    printf (\"  Field Attributes:\\n\");",
          "5675: #endif",
          "",
          "---------------",
          "--- Hunk 82 ---",
          "[Context before]",
          "5704:   eprintf (\"Attempting to print an invalid RBinJavaField* Method.\\n\");",
          "5705:   return;",
          "5706:  }",
          "5714:  r_list_foreach_safe (field->attributes, iter, iter_tmp, attr) {",
          "5715:   r_bin_java_print_attr_summary (attr);",
          "5716:  }",
          "",
          "[Removed Lines]",
          "5707:  Eprintf (\"Method Summary Information:\\n\");",
          "5708:  Eprintf (\"  File Offset: 0x%08\"PFMT64x \"\\n\", field->file_offset);",
          "5709:  Eprintf (\"  Name Index: %d (%s)\\n\", field->name_idx, field->name);",
          "5710:  Eprintf (\"  Descriptor Index: %d (%s)\\n\", field->descriptor_idx, field->descriptor);",
          "5711:  Eprintf (\"  Access Flags: 0x%02x (%s)\\n\", field->flags, field->flags_str);",
          "5712:  Eprintf (\"  Method Attributes Count: %d\\n\", field->attr_count);",
          "5713:  Eprintf (\"  Method Attributes:\\n\");",
          "",
          "[Added Lines]",
          "5689:  printf (\"Method Summary Information:\\n\");",
          "5690:  printf (\"  File Offset: 0x%08\"PFMT64x \"\\n\", field->file_offset);",
          "5691:  printf (\"  Name Index: %d (%s)\\n\", field->name_idx, field->name);",
          "5692:  printf (\"  Descriptor Index: %d (%s)\\n\", field->descriptor_idx, field->descriptor);",
          "5693:  printf (\"  Access Flags: 0x%02x (%s)\\n\", field->flags, field->flags_str);",
          "5694:  printf (\"  Method Attributes Count: %d\\n\", field->attr_count);",
          "5695:  printf (\"  Method Attributes:\\n\");",
          "",
          "---------------",
          "--- Hunk 83 ---",
          "[Context before]",
          "5737:    }",
          "5739: R_API void r_bin_java_print_interfacemethodref_cp_summary(RBinJavaCPTypeObj *obj) {",
          "5741:   eprintf (\"Attempting to print an invalid RBinJavaCPTypeObj*  InterfaceMethodRef.\\n\");",
          "5742:   return;",
          "5743:  }",
          "",
          "[Removed Lines]",
          "5740:  if (obj == NULL) {",
          "",
          "[Added Lines]",
          "5722:  if (!obj) {",
          "",
          "---------------",
          "--- Hunk 84 ---",
          "[Context before]",
          "5748: }",
          "5750: R_API char *r_bin_java_print_interfacemethodref_cp_stringify(RBinJavaCPTypeObj *obj) {",
          "5756:    obj->metas->ord, obj->file_offset + obj->loadaddr, ((RBinJavaCPTypeMetas *) obj->metas->type_info)->name,",
          "5757:    obj->info.cp_interface.class_idx, obj->info.cp_interface.name_and_type_idx);",
          "5771: }",
          "5773: R_API void r_bin_java_print_methodhandle_cp_summary(RBinJavaCPTypeObj *obj) {",
          "5774:  ut8 ref_kind;",
          "5776:   eprintf (\"Attempting to print an invalid RBinJavaCPTypeObj*  RBinJavaCPTypeMethodHandle.\\n\");",
          "5777:   return;",
          "5778:  }",
          "",
          "[Removed Lines]",
          "5751:  ut32 size = 255, consumed = 0;",
          "5752:  char *value = malloc (size);",
          "5753:  if (value) {",
          "5754:   memset (value, 0, size);",
          "5755:   consumed = snprintf (value, size, \"%d.0x%04\"PFMT64x \".%s.%d.%d\",",
          "5758:   if (consumed >= size - 1) {",
          "5759:    free (value);",
          "5760:    size += size >> 1;",
          "5761:    value = malloc (size);",
          "5762:    if (value) {",
          "5763:     memset (value, 0, size);",
          "5764:     (void)snprintf (value, size, \"%d.0x%04\"PFMT64x \".%s.%d.%d\",",
          "5765:      obj->metas->ord, obj->file_offset + obj->loadaddr, ((RBinJavaCPTypeMetas *) obj->metas->type_info)->name,",
          "5766:      obj->info.cp_interface.class_idx, obj->info.cp_interface.name_and_type_idx);",
          "5767:    }",
          "5768:   }",
          "5769:  }",
          "5770:  return value;",
          "5775:  if (obj == NULL) {",
          "",
          "[Added Lines]",
          "5733:  return r_str_newf (\"%d.0x%04\"PFMT64x \".%s.%d.%d\",",
          "5740:  if (!obj) {",
          "",
          "---------------",
          "--- Hunk 85 ---",
          "[Context before]",
          "5784: }",
          "5786: R_API char *r_bin_java_print_methodhandle_cp_stringify(RBinJavaCPTypeObj *obj) {",
          "5789:  ut8 ref_kind = obj->info.cp_method_handle.reference_kind;",
          "5793:    obj->metas->ord, obj->file_offset + obj->loadaddr, ((RBinJavaCPTypeMetas *) obj->metas->type_info)->name,",
          "5794:    R_BIN_JAVA_REF_METAS[ref_kind].name, obj->info.cp_method_handle.reference_index);",
          "5808: }",
          "5810: R_API void r_bin_java_print_methodtype_cp_summary(RBinJavaCPTypeObj *obj) {",
          "5812:   eprintf (\"Attempting to print an invalid RBinJavaCPTypeObj*  RBinJavaCPTypeMethodType.\\n\");",
          "5813:   return;",
          "5814:  }",
          "5818: }",
          "5820: R_API char *r_bin_java_print_methodtype_cp_stringify(RBinJavaCPTypeObj *obj) {",
          "5826:    obj->metas->ord, obj->file_offset + obj->loadaddr, ((RBinJavaCPTypeMetas *) obj->metas->type_info)->name,",
          "5827:    obj->info.cp_method_type.descriptor_index);",
          "5841: }",
          "5843: R_API void r_bin_java_print_invokedynamic_cp_summary(RBinJavaCPTypeObj *obj) {",
          "5845:   eprintf (\"Attempting to print an invalid RBinJavaCPTypeObj*  RBinJavaCPTypeInvokeDynamic.\\n\");",
          "5846:   return;",
          "5847:  }",
          "",
          "[Removed Lines]",
          "5787:  ut32 size = 255, consumed = 0;",
          "5788:  char *value = malloc (size);",
          "5790:  if (value) {",
          "5791:   memset (value, 0, size);",
          "5792:   consumed = snprintf (value, size, \"%d.0x%04\"PFMT64x \".%s.%s.%d\",",
          "5795:   if (consumed >= size - 1) {",
          "5796:    free (value);",
          "5797:    size += size >> 1;",
          "5798:    value = malloc (size);",
          "5799:    if (value) {",
          "5800:     memset (value, 0, size);",
          "5801:     (void)snprintf (value, size, \"%d.0x%04\"PFMT64x \".%s.%s.%d\",",
          "5802:      obj->metas->ord, obj->file_offset + obj->loadaddr, ((RBinJavaCPTypeMetas *) obj->metas->type_info)->name,",
          "5803:      R_BIN_JAVA_REF_METAS[ref_kind].name, obj->info.cp_method_handle.reference_index);",
          "5804:    }",
          "5805:   }",
          "5806:  }",
          "5807:  return value;",
          "5811:  if (obj == NULL) {",
          "5815:  Eprintf (\"MethodType ConstantPool Type (%d) \", obj->metas->ord);",
          "5816:  Eprintf (\"  Offset: 0x%08\"PFMT64x \"\", obj->file_offset);",
          "5817:  Eprintf (\"  Descriptor Index = 0x%02x\\n\", obj->info.cp_method_type.descriptor_index);",
          "5821:  ut32 size = 255, consumed = 0;",
          "5822:  char *value = malloc (size);",
          "5823:  if (value) {",
          "5824:   memset (value, 0, size);",
          "5825:   consumed = snprintf (value, size, \"%d.0x%04\"PFMT64x \".%s.%d\",",
          "5828:   if (consumed >= size - 1) {",
          "5829:    free (value);",
          "5830:    size += size >> 1;",
          "5831:    value = malloc (size);",
          "5832:    if (value) {",
          "5833:     memset (value, 0, size);",
          "5834:     (void)snprintf (value, size, \"%d.0x%04\"PFMT64x \".%s.%d\",",
          "5835:      obj->metas->ord, obj->file_offset + obj->loadaddr, ((RBinJavaCPTypeMetas *) obj->metas->type_info)->name,",
          "5836:      obj->info.cp_method_type.descriptor_index);",
          "5837:    }",
          "5838:   }",
          "5839:  }",
          "5840:  return value;",
          "5844:  if (obj == NULL) {",
          "",
          "[Added Lines]",
          "5753:  return r_str_newf (\"%d.0x%04\"PFMT64x \".%s.%s.%d\",",
          "5759:  if (!obj) {",
          "5763:  printf (\"MethodType ConstantPool Type (%d) \", obj->metas->ord);",
          "5764:  printf (\"  Offset: 0x%08\"PFMT64x \"\", obj->file_offset);",
          "5765:  printf (\"  Descriptor Index = 0x%02x\\n\", obj->info.cp_method_type.descriptor_index);",
          "5769:  return r_str_newf (\"%d.0x%04\"PFMT64x \".%s.%d\",",
          "5775:  if (!obj) {",
          "",
          "---------------",
          "--- Hunk 86 ---",
          "[Context before]",
          "5852: }",
          "5854: R_API char *r_bin_java_print_invokedynamic_cp_stringify(RBinJavaCPTypeObj *obj) {",
          "5860:    obj->metas->ord, obj->file_offset + obj->loadaddr, ((RBinJavaCPTypeMetas *) obj->metas->type_info)->name,",
          "5861:    obj->info.cp_invoke_dynamic.bootstrap_method_attr_index,",
          "5862:    obj->info.cp_invoke_dynamic.name_and_type_index);",
          "5877: }",
          "5879: R_API void r_bin_java_print_methodref_cp_summary(RBinJavaCPTypeObj *obj) {",
          "5881:   eprintf (\"Attempting to print an invalid RBinJavaCPTypeObj*  MethodRef.\\n\");",
          "5882:   return;",
          "5883:  }",
          "",
          "[Removed Lines]",
          "5855:  ut32 size = 255, consumed = 0;",
          "5856:  char *value = malloc (size);",
          "5857:  if (value) {",
          "5858:   memset (value, 0, size);",
          "5859:   consumed = snprintf (value, size, \"%d.0x%04\"PFMT64x \".%s.%d.%d\",",
          "5863:   if (consumed >= size - 1) {",
          "5864:    free (value);",
          "5865:    size += size >> 1;",
          "5866:    value = malloc (size);",
          "5867:    if (value) {",
          "5868:     memset (value, 0, size);",
          "5869:     (void)snprintf (value, size, \"%d.0x%04\"PFMT64x \".%s.%d.%d\",",
          "5870:      obj->metas->ord, obj->file_offset + obj->loadaddr, ((RBinJavaCPTypeMetas *) obj->metas->type_info)->name,",
          "5871:      obj->info.cp_invoke_dynamic.bootstrap_method_attr_index,",
          "5872:      obj->info.cp_invoke_dynamic.name_and_type_index);",
          "5873:    }",
          "5874:   }",
          "5875:  }",
          "5876:  return value;",
          "5880:  if (obj == NULL) {",
          "",
          "[Added Lines]",
          "5786:  return r_str_newf (\"%d.0x%04\"PFMT64x \".%s.%d.%d\",",
          "5793:  if (!obj) {",
          "",
          "---------------",
          "--- Hunk 87 ---",
          "[Context before]",
          "5888: }",
          "5890: R_API char *r_bin_java_print_methodref_cp_stringify(RBinJavaCPTypeObj *obj) {",
          "5896:    obj->metas->ord, obj->file_offset + obj->loadaddr, ((RBinJavaCPTypeMetas *) obj->metas->type_info)->name,",
          "5897:    obj->info.cp_method.class_idx,",
          "5898:    obj->info.cp_method.name_and_type_idx);",
          "5913: }",
          "5915: R_API void r_bin_java_print_fieldref_cp_summary(RBinJavaCPTypeObj *obj) {",
          "5917:   eprintf (\"Attempting to print an invalid RBinJavaCPTypeObj*  FieldRef.\\n\");",
          "5918:   return;",
          "5919:  }",
          "",
          "[Removed Lines]",
          "5891:  ut32 size = 255, consumed = 0;",
          "5892:  char *value = malloc (size);",
          "5893:  if (value) {",
          "5894:   memset (value, 0, size);",
          "5895:   consumed = snprintf (value, size, \"%d.0x%04\"PFMT64x \".%s.%d.%d\",",
          "5899:   if (consumed >= size - 1) {",
          "5900:    free (value);",
          "5901:    size += size >> 1;",
          "5902:    value = malloc (size);",
          "5903:    if (value) {",
          "5904:     memset (value, 0, size);",
          "5905:     (void)snprintf (value, size, \"%d.0x%04\"PFMT64x \".%s.%d.%d\",",
          "5906:      obj->metas->ord, obj->file_offset + obj->loadaddr, ((RBinJavaCPTypeMetas *) obj->metas->type_info)->name,",
          "5907:      obj->info.cp_method.class_idx,",
          "5908:      obj->info.cp_method.name_and_type_idx);",
          "5909:    }",
          "5910:   }",
          "5911:  }",
          "5912:  return value;",
          "5916:  if (obj == NULL) {",
          "",
          "[Added Lines]",
          "5804:  return r_str_newf (\"%d.0x%04\"PFMT64x \".%s.%d.%d\",",
          "5811:  if (!obj) {",
          "",
          "---------------",
          "--- Hunk 88 ---",
          "[Context before]",
          "5949: }",
          "5951: R_API void r_bin_java_print_classref_cp_summary(RBinJavaCPTypeObj *obj) {",
          "5953:   eprintf (\"Attempting to print an invalid RBinJavaCPTypeObj*  ClassRef.\\n\");",
          "5954:   return;",
          "5955:  }",
          "",
          "[Removed Lines]",
          "5952:  if (obj == NULL) {",
          "",
          "[Added Lines]",
          "5847:  if (!obj) {",
          "",
          "---------------",
          "--- Hunk 89 ---",
          "[Context before]",
          "5986:   eprintf (\"Attempting to print an invalid RBinJavaCPTypeObj*  String.\\n\");",
          "5987:   return;",
          "5988:  }",
          "5992: }",
          "5994: R_API char *r_bin_java_print_string_cp_stringify(RBinJavaCPTypeObj *obj) {",
          "",
          "[Removed Lines]",
          "5989:  Eprintf (\"String ConstantPool Type (%d) \", obj->metas->ord);",
          "5990:  Eprintf (\"  Offset: 0x%08\"PFMT64x \"\", obj->file_offset);",
          "5991:  Eprintf (\"  String Index = %d\\n\", obj->info.cp_string.string_idx);",
          "",
          "[Added Lines]",
          "5884:  printf (\"String ConstantPool Type (%d) \", obj->metas->ord);",
          "5885:  printf (\"  Offset: 0x%08\"PFMT64x \"\", obj->file_offset);",
          "5886:  printf (\"  String Index = %d\\n\", obj->info.cp_string.string_idx);",
          "",
          "---------------",
          "--- Hunk 90 ---",
          "[Context before]",
          "6018: R_API void r_bin_java_print_integer_cp_summary(RBinJavaCPTypeObj *obj) {",
          "6019:  ut8 *b = NULL;",
          "6021:   eprintf (\"Attempting to print an invalid RBinJavaCPTypeObj*  Integer.\\n\");",
          "6022:   return;",
          "6023:  }",
          "",
          "[Removed Lines]",
          "6020:  if (obj == NULL) {",
          "",
          "[Added Lines]",
          "5915:  if (!obj) {",
          "",
          "---------------",
          "--- Hunk 91 ---",
          "[Context before]",
          "6054: R_API void r_bin_java_print_float_cp_summary(RBinJavaCPTypeObj *obj) {",
          "6055:  ut8 *b = NULL;",
          "6057:   eprintf (\"Attempting to print an invalid RBinJavaCPTypeObj*  Double.\\n\");",
          "6058:   return;",
          "6059:  }",
          "6060:  b = obj->info.cp_float.bytes.raw;",
          "6065: }",
          "6067: R_API char *r_bin_java_print_float_cp_stringify(RBinJavaCPTypeObj *obj) {",
          "",
          "[Removed Lines]",
          "6056:  if (obj == NULL) {",
          "6061:  Eprintf (\"Float ConstantPool Type (%d) \", obj->metas->ord);",
          "6062:  Eprintf (\"  Offset: 0x%08\"PFMT64x \"\", obj->file_offset);",
          "6063:  Eprintf (\"  Bytes = %02x %02x %02x %02x\\n\", b[0], b[1], b[2], b[3]);",
          "6064:  Eprintf (\"  Float = %f\\n\", R_BIN_JAVA_FLOAT (obj->info.cp_float.bytes.raw, 0));",
          "",
          "[Added Lines]",
          "5951:  if (!obj) {",
          "5956:  printf (\"Float ConstantPool Type (%d) \", obj->metas->ord);",
          "5957:  printf (\"  Offset: 0x%08\"PFMT64x \"\", obj->file_offset);",
          "5958:  printf (\"  Bytes = %02x %02x %02x %02x\\n\", b[0], b[1], b[2], b[3]);",
          "5959:  printf (\"  Float = %f\\n\", R_BIN_JAVA_FLOAT (obj->info.cp_float.bytes.raw, 0));",
          "",
          "---------------",
          "--- Hunk 92 ---",
          "[Context before]",
          "6090: R_API void r_bin_java_print_long_cp_summary(RBinJavaCPTypeObj *obj) {",
          "6091:  ut8 *b = NULL;",
          "6093:   eprintf (\"Attempting to print an invalid RBinJavaCPTypeObj*  Long.\\n\");",
          "6094:   return;",
          "6095:  }",
          "6096:  b = obj->info.cp_long.bytes.raw;",
          "6102: }",
          "6104: R_API char *r_bin_java_print_long_cp_stringify(RBinJavaCPTypeObj *obj) {",
          "",
          "[Removed Lines]",
          "6092:  if (obj == NULL) {",
          "6097:  Eprintf (\"Long ConstantPool Type (%d) \", obj->metas->ord);",
          "6098:  Eprintf (\"  Offset: 0x%08\"PFMT64x \"\", obj->file_offset);",
          "6099:  Eprintf (\"  High-Bytes = %02x %02x %02x %02x\\n\", b[0], b[1], b[2], b[3]);",
          "6100:  Eprintf (\"  Low-Bytes = %02x %02x %02x %02x\\n\", b[4], b[5], b[6], b[7]);",
          "6101:  Eprintf (\"  Long = %08\"PFMT64x \"\\n\", r_bin_java_raw_to_long (obj->info.cp_long.bytes.raw, 0));",
          "",
          "[Added Lines]",
          "5987:  if (!obj) {",
          "5992:  printf (\"Long ConstantPool Type (%d) \", obj->metas->ord);",
          "5993:  printf (\"  Offset: 0x%08\"PFMT64x \"\", obj->file_offset);",
          "5994:  printf (\"  High-Bytes = %02x %02x %02x %02x\\n\", b[0], b[1], b[2], b[3]);",
          "5995:  printf (\"  Low-Bytes = %02x %02x %02x %02x\\n\", b[4], b[5], b[6], b[7]);",
          "5996:  printf (\"  Long = %08\"PFMT64x \"\\n\", r_bin_java_raw_to_long (obj->info.cp_long.bytes.raw, 0));",
          "",
          "---------------",
          "--- Hunk 93 ---",
          "[Context before]",
          "6135:   return;",
          "6136:  }",
          "6137:  b = obj->info.cp_double.bytes.raw;",
          "6143: }",
          "6145: R_API char *r_bin_java_print_double_cp_stringify(RBinJavaCPTypeObj *obj) {",
          "",
          "[Removed Lines]",
          "6138:  Eprintf (\"Double ConstantPool Type (%d) \", obj->metas->ord);",
          "6139:  Eprintf (\"  Offset: 0x%08\"PFMT64x \"\", obj->file_offset);",
          "6140:  Eprintf (\"  High-Bytes = %02x %02x %02x %02x\\n\", b[0], b[1], b[2], b[3]);",
          "6141:  Eprintf (\"  Low-Bytes = %02x %02x %02x %02x\\n\", b[4], b[5], b[6], b[7]);",
          "6142:  Eprintf (\"  Double = %f\\n\", r_bin_java_raw_to_double (obj->info.cp_double.bytes.raw, 0));",
          "",
          "[Added Lines]",
          "6033:  printf (\"Double ConstantPool Type (%d) \", obj->metas->ord);",
          "6034:  printf (\"  Offset: 0x%08\"PFMT64x \"\", obj->file_offset);",
          "6035:  printf (\"  High-Bytes = %02x %02x %02x %02x\\n\", b[0], b[1], b[2], b[3]);",
          "6036:  printf (\"  Low-Bytes = %02x %02x %02x %02x\\n\", b[4], b[5], b[6], b[7]);",
          "6037:  printf (\"  Double = %f\\n\", r_bin_java_raw_to_double (obj->info.cp_double.bytes.raw, 0));",
          "",
          "---------------",
          "--- Hunk 94 ---",
          "[Context before]",
          "6170: }",
          "6172: R_API void r_bin_java_print_name_and_type_cp_summary(RBinJavaCPTypeObj *obj) {",
          "6174:   eprintf (\"Attempting to print an invalid RBinJavaCPTypeObj*  Name_And_Type.\\n\");",
          "6175:   return;",
          "6176:  }",
          "6181: }",
          "6183: R_API char *r_bin_java_print_name_and_type_cp_stringify(RBinJavaCPTypeObj *obj) {",
          "",
          "[Removed Lines]",
          "6173:  if (obj == NULL) {",
          "6177:  Eprintf (\"Name_And_Type ConstantPool Type (%d) \", obj->metas->ord);",
          "6178:  Eprintf (\"  Offset: 0x%08\"PFMT64x \"\", obj->file_offset);",
          "6179:  Eprintf (\"  name_idx = (%d)\\n\", obj->info.cp_name_and_type.name_idx);",
          "6180:  Eprintf (\"  descriptor_idx = (%d)\\n\", obj->info.cp_name_and_type.descriptor_idx);",
          "",
          "[Added Lines]",
          "6068:  if (!obj) {",
          "6072:  printf (\"Name_And_Type ConstantPool Type (%d) \", obj->metas->ord);",
          "6073:  printf (\"  Offset: 0x%08\"PFMT64x \"\", obj->file_offset);",
          "6074:  printf (\"  name_idx = (%d)\\n\", obj->info.cp_name_and_type.name_idx);",
          "6075:  printf (\"  descriptor_idx = (%d)\\n\", obj->info.cp_name_and_type.descriptor_idx);",
          "",
          "---------------",
          "--- Hunk 95 ---",
          "[Context before]",
          "6206: }",
          "6208: R_API void r_bin_java_print_utf8_cp_summary(RBinJavaCPTypeObj *obj) {",
          "6210:   eprintf (\"Attempting to print an invalid RBinJavaCPTypeObj*  Utf8.\\n\");",
          "6211:   return;",
          "6212:  }",
          "",
          "[Removed Lines]",
          "6209:  if (obj == NULL) {",
          "",
          "[Added Lines]",
          "6104:  if (!obj) {",
          "",
          "---------------",
          "--- Hunk 96 ---",
          "[Context before]",
          "6219: }",
          "6221: R_API char *r_bin_java_print_utf8_cp_stringify(RBinJavaCPTypeObj *obj) {",
          "6223:  char *utf8_str = r_hex_bin2strdup (obj->info.cp_utf8.bytes, obj->info.cp_utf8.length);",
          "6228:    obj->metas->ord, obj->file_offset + obj->loadaddr, ((RBinJavaCPTypeMetas *) obj->metas->type_info)->name,",
          "6244:  free (utf8_str);",
          "6246: }",
          "6248: R_API void r_bin_java_print_null_cp_summary(RBinJavaCPTypeObj *obj) {",
          "",
          "[Removed Lines]",
          "6222:  ut32 size = 255, consumed = 0;",
          "6224:  char *value = malloc (size + strlen (utf8_str));",
          "6225:  if (value) {",
          "6226:   memset (value, 0, size);",
          "6227:   consumed = snprintf (value, size, \"%d.0x%04\"PFMT64x \".%s.%d.%s\",",
          "6229:    obj->info.cp_utf8.length,",
          "6230:    utf8_str);",
          "6231:   if (consumed >= size - 1) {",
          "6232:    free (value);",
          "6233:    size += size >> 1;",
          "6234:    value = malloc (size + strlen (utf8_str));",
          "6235:    if (value) {",
          "6236:     memset (value, 0, size);",
          "6237:     (void)snprintf (value, size, \"%d.0x%04\"PFMT64x \".%s.%d.%s\",",
          "6238:      obj->metas->ord, obj->file_offset + obj->loadaddr, ((RBinJavaCPTypeMetas *) obj->metas->type_info)->name,",
          "6239:      obj->info.cp_utf8.length,",
          "6240:      utf8_str);",
          "6241:    }",
          "6242:   }",
          "6243:  }",
          "6245:  return value;",
          "",
          "[Added Lines]",
          "6118:  char *res = r_str_newf (\"%d.0x%04\"PFMT64x \".%s.%d.%s\",",
          "6120:    obj->info.cp_utf8.length, utf8_str);",
          "6122:  return res;",
          "",
          "---------------",
          "--- Hunk 97 ---",
          "[Context before]",
          "6250: }",
          "6252: R_API char *r_bin_java_print_null_cp_stringify(RBinJavaCPTypeObj *obj) {",
          "6272: }",
          "6274: R_API void r_bin_java_print_unknown_cp_summary(RBinJavaCPTypeObj *obj) {",
          "",
          "[Removed Lines]",
          "6253:  ut32 size = 255, consumed = 0;",
          "6254:  char *value = malloc (size);",
          "6255:  if (value) {",
          "6256:   memset (value, 0, size);",
          "6257:   consumed = snprintf (value, size, \"%d.0x%04\"PFMT64x \".%s\",",
          "6258:    obj->metas->ord, obj->file_offset + obj->loadaddr, ((RBinJavaCPTypeMetas *) obj->metas->type_info)->name);",
          "6259:   if (consumed >= size - 1) {",
          "6260:    free (value);",
          "6261:    size += size >> 1;",
          "6262:    value = malloc (size);",
          "6263:    if (value) {",
          "6264:     memset (value, 0, size);",
          "6265:     (void)snprintf (value, size, \"%d.0x%04\"PFMT64x \".%s\",",
          "6266:      obj->metas->ord, obj->file_offset,",
          "6267:      ((RBinJavaCPTypeMetas *) obj->metas->type_info)->name);",
          "6268:    }",
          "6269:   }",
          "6270:  }",
          "6271:  return value;",
          "",
          "[Added Lines]",
          "6130:  return r_str_newf (\"%d.0x%04\"PFMT64x \".%s\",",
          "6131:   obj->metas->ord,",
          "6132:   obj->file_offset + obj->loadaddr,",
          "6133:   ((RBinJavaCPTypeMetas *) obj->metas->type_info)->name);",
          "",
          "---------------",
          "--- Hunk 98 ---",
          "[Context before]",
          "6276: }",
          "6278: R_API char *r_bin_java_print_unknown_cp_stringify(RBinJavaCPTypeObj *obj) {",
          "6287: }",
          "6289: R_API RBinJavaElementValuePair *r_bin_java_element_pair_new(ut8 *buffer, ut64 sz, ut64 buf_offset) {",
          "6291:   return NULL;",
          "6292:  }",
          "6293:  RBinJavaElementValuePair *evp = R_NEW0 (RBinJavaElementValuePair);",
          "",
          "[Removed Lines]",
          "6279:  ut32 size = 255;",
          "6280:  char *value = malloc (size);",
          "6281:  if (value) {",
          "6282:   memset (value, 0, size);",
          "6283:   snprintf (value, size, \"%d.0x%04\"PFMT64x \".%s\",",
          "6284:    obj->metas->ord, obj->file_offset + obj->loadaddr, ((RBinJavaCPTypeMetas *) obj->metas->type_info)->name);",
          "6285:  }",
          "6286:  return value;",
          "6290:  if (!buffer || sz < 4) {",
          "",
          "[Added Lines]",
          "6141:  return r_str_newf (\"%d.0x%04\"PFMT64x \".%s\", obj->metas->ord,",
          "6142:   obj->file_offset + obj->loadaddr, ((RBinJavaCPTypeMetas *) obj->metas->type_info)->name);",
          "6146:  if (!buffer || sz < 8) {",
          "",
          "---------------",
          "--- Hunk 99 ---",
          "[Context before]",
          "6309:   return NULL;",
          "6310:  }",
          "6311:  evp->value = r_bin_java_element_value_new (buffer + offset, sz - offset, buf_offset + offset);",
          "6317:  }",
          "6318:  evp->size = offset;",
          "6319:  return evp;",
          "",
          "[Removed Lines]",
          "6312:  offset += evp->value->size;",
          "6313:  if (offset >= sz) {",
          "6314:   free (evp->value);",
          "6315:   free (evp);",
          "6316:   return NULL;",
          "",
          "[Added Lines]",
          "6168:  if (evp->value) {",
          "6169:   offset += evp->value->size;",
          "6170:   if (offset >= sz) {",
          "6171:    free (evp->value);",
          "6172:    free (evp);",
          "6173:    return NULL;",
          "6174:   }",
          "",
          "---------------",
          "--- Hunk 100 ---",
          "[Context before]",
          "6324:   eprintf (\"Attempting to print an invalid RBinJavaElementValuePair *pair.\\n\");",
          "6325:   return;",
          "6326:  }",
          "6332:  r_bin_java_print_element_value_summary (evp->value);",
          "6333: }",
          "",
          "[Removed Lines]",
          "6327:  Eprintf (\"Element Value Pair information:\\n\");",
          "6328:  Eprintf (\"  EV Pair File Offset: 0x%08\"PFMT64x \"\\n\", evp->file_offset);",
          "6329:  Eprintf (\"  EV Pair Element Name index: 0x%02x\\n\", evp->element_name_idx);",
          "6330:  Eprintf (\"  EV Pair Element Name: %s\\n\", evp->name);",
          "6331:  Eprintf (\"  EV Pair Element Value:\\n\");",
          "",
          "[Added Lines]",
          "6185:  printf (\"Element Value Pair information:\\n\");",
          "6186:  printf (\"  EV Pair File Offset: 0x%08\"PFMT64x \"\\n\", evp->file_offset);",
          "6187:  printf (\"  EV Pair Element Name index: 0x%02x\\n\", evp->element_name_idx);",
          "6188:  printf (\"  EV Pair Element Name: %s\\n\", evp->name);",
          "6189:  printf (\"  EV Pair Element Value:\\n\");",
          "",
          "---------------",
          "--- Hunk 101 ---",
          "[Context before]",
          "6642:   return;",
          "6643:  }",
          "6647:  if (annotation->element_value_pairs) {",
          "6648:   r_list_foreach_safe (annotation->element_value_pairs, iter, iter_tmp, evp) {",
          "6649:    r_bin_java_print_element_pair_summary (evp);",
          "",
          "[Removed Lines]",
          "6644:  Eprintf (\"  Annotation Type Index: 0x%02x\\n\", annotation->type_idx);",
          "6645:  Eprintf (\"  Annotation Number of EV Pairs: 0x%04x\\n\", annotation->num_element_value_pairs);",
          "6646:  Eprintf (\"  Annotation EV Pair Values:\\n\");",
          "",
          "[Added Lines]",
          "6502:  printf (\"  Annotation Type Index: 0x%02x\\n\", annotation->type_idx);",
          "6503:  printf (\"  Annotation Number of EV Pairs: 0x%04x\\n\", annotation->num_element_value_pairs);",
          "6504:  printf (\"  Annotation EV Pair Values:\\n\");",
          "",
          "---------------",
          "--- Hunk 102 ---",
          "[Context before]",
          "6670:  RBinJavaElementValue *ev_element;",
          "6671:  RBinJavaElementValuePair *evps;",
          "6672:  ut64 sz = 0;",
          "6674:   return sz;",
          "6675:  }",
          "",
          "[Removed Lines]",
          "6673:  if (element_value == NULL) {",
          "",
          "[Added Lines]",
          "6531:  if (!element_value) {",
          "",
          "---------------",
          "--- Hunk 103 ---",
          "[Context before]",
          "7263: R_API void r_bin_java_print_rtv_annotations_attr_summary(RBinJavaAttrInfo *attr) {",
          "7264:  if (attr && attr->type == R_BIN_JAVA_ATTR_TYPE_RUNTIME_VISIBLE_ANNOTATION_ATTR) {",
          "7269:   r_bin_java_print_annotation_array_summary (&attr->info.annotation_array);",
          "7270:  }",
          "7271: }",
          "7273: R_API void r_bin_java_print_rti_annotations_attr_summary(RBinJavaAttrInfo *attr) {",
          "7274:  if (attr && attr->type == R_BIN_JAVA_ATTR_TYPE_RUNTIME_INVISIBLE_ANNOTATION_ATTR) {",
          "7279:   r_bin_java_print_annotation_array_summary (&attr->info.annotation_array);",
          "7280:  }",
          "7281: }",
          "",
          "[Removed Lines]",
          "7265:   Eprintf (\"Runtime Visible Annotations Attribute Information:\\n\");",
          "7266:   Eprintf (\"   Attribute Offset: 0x%08\"PFMT64x \"\\n\", attr->file_offset);",
          "7267:   Eprintf (\"   Attribute Name Index: %d (%s)\\n\", attr->name_idx, attr->name);",
          "7268:   Eprintf (\"   Attribute Length: %d\\n\", attr->length);",
          "7275:   Eprintf (\"Runtime Invisible Annotations Attribute Information:\\n\");",
          "7276:   Eprintf (\"   Attribute Offset: 0x%08\"PFMT64x \"\\n\", attr->file_offset);",
          "7277:   Eprintf (\"   Attribute Name Index: %d (%s)\\n\", attr->name_idx, attr->name);",
          "7278:   Eprintf (\"   Attribute Length: %d\\n\", attr->length);",
          "",
          "[Added Lines]",
          "7123:   printf (\"Runtime Visible Annotations Attribute Information:\\n\");",
          "7124:   printf (\"   Attribute Offset: 0x%08\"PFMT64x \"\\n\", attr->file_offset);",
          "7125:   printf (\"   Attribute Name Index: %d (%s)\\n\", attr->name_idx, attr->name);",
          "7126:   printf (\"   Attribute Length: %d\\n\", attr->length);",
          "7133:   printf (\"Runtime Invisible Annotations Attribute Information:\\n\");",
          "7134:   printf (\"   Attribute Offset: 0x%08\"PFMT64x \"\\n\", attr->file_offset);",
          "7135:   printf (\"   Attribute Name Index: %d (%s)\\n\", attr->name_idx, attr->name);",
          "7136:   printf (\"   Attribute Length: %d\\n\", attr->length);",
          "",
          "---------------",
          "--- Hunk 104 ---",
          "[Context before]",
          "7425: R_API RBinJavaCPTypeObj *r_bin_java_find_cp_name_and_type_info(RBinJavaObj *bin, ut16 name_idx, ut16 descriptor_idx) {",
          "7426:  RListIter *iter, *iter_tmp;",
          "7427:  RBinJavaCPTypeObj *res = NULL, *obj = NULL;",
          "7429:  r_list_foreach_safe (bin->cp_list, iter, iter_tmp, obj) {",
          "7430:   if (obj && obj->tag == R_BIN_JAVA_CP_NAMEANDTYPE) {",
          "7432:    obj->info.cp_name_and_type.name_idx, obj->info.cp_name_and_type.descriptor_idx);",
          "7433:    if (obj->info.cp_name_and_type.name_idx == name_idx &&",
          "7434:    obj->info.cp_name_and_type.descriptor_idx == descriptor_idx) {",
          "",
          "[Removed Lines]",
          "7428:  IFDBG eprintf(\"Looking for name_idx: %d and descriptor_idx: %d\\n\", name_idx, descriptor_idx);",
          "7431:    IFDBG eprintf(\"RBinJavaCPTypeNameAndType has name_idx: %d and descriptor_idx: %d\\n\",",
          "",
          "[Added Lines]",
          "7286:  IFDBG eprintf (\"Looking for name_idx: %d and descriptor_idx: %d\\n\", name_idx, descriptor_idx);",
          "7289:    IFDBG eprintf (\"RBinJavaCPTypeNameAndType has name_idx: %d and descriptor_idx: %d\\n\",",
          "",
          "---------------",
          "--- Hunk 105 ---",
          "[Context before]",
          "7498:  item = (RBinJavaCPTypeObj *) r_bin_java_get_item_from_bin_cp_list (BIN_OBJ, idx);",
          "7499:  if (item) {",
          "7500:   cp_name = ((RBinJavaCPTypeMetas *) item->metas->type_info)->name;",
          "7502:  } else {",
          "7503:   str = malloc (512);",
          "7504:   if (str) {",
          "",
          "[Removed Lines]",
          "7501:   IFDBG eprintf(\"java_resolve Resolved: (%d) %s\\n\", idx, cp_name);",
          "",
          "[Added Lines]",
          "7359:   IFDBG eprintf (\"java_resolve Resolved: (%d) %s\\n\", idx, cp_name);",
          "",
          "---------------",
          "--- Hunk 106 ---",
          "[Context before]",
          "7564:  } else if (!strcmp (cp_name, \"String\")) {",
          "7565:   string_str = r_bin_java_get_utf8_from_bin_cp_list (BIN_OBJ, item->info.cp_string.string_idx);",
          "7566:   str = NULL;",
          "7568:   if (!string_str) {",
          "7569:    string_str = empty;",
          "7570:   }",
          "7571:   str = r_str_newf (\"\\\"%s\\\"\", string_str);",
          "7573:   if (string_str != empty) {",
          "7574:    free (string_str);",
          "7575:   }",
          "",
          "[Removed Lines]",
          "7567:   IFDBG eprintf(\"java_resolve String got: (%d) %s\\n\", item->info.cp_string.string_idx, string_str);",
          "7572:   IFDBG eprintf(\"java_resolve String return: %s\\n\", str);",
          "",
          "[Added Lines]",
          "7425:   IFDBG eprintf (\"java_resolve String got: (%d) %s\\n\", item->info.cp_string.string_idx, string_str);",
          "7430:   IFDBG eprintf (\"java_resolve String return: %s\\n\", str);",
          "",
          "---------------",
          "--- Hunk 107 ---",
          "[Context before]",
          "7650: R_API RList *r_bin_java_get_method_num_name(RBinJavaObj *bin_obj) {",
          "7651:  ut32 i = 0;",
          "7653:  RBinJavaField *fm_type;",
          "7654:  RList *res = r_list_newf (free);",
          "7655:  r_list_foreach (bin_obj->methods_list, iter, fm_type) {",
          "7660:   r_list_append (res, str);",
          "7661:  }",
          "7662:  return res;",
          "7663: }",
          "",
          "[Removed Lines]",
          "7652:  RListIter *iter = NULL;",
          "7656:   ut32 len = strlen (fm_type->name) + 30;",
          "7657:   char *str = malloc (len);",
          "7658:   snprintf (str, len, \"%d %s\", i, fm_type->name);",
          "7659:   ++i;",
          "",
          "[Added Lines]",
          "7510:  RListIter *iter;",
          "7514:   char *str = r_str_newf (\"%d %s\", i, fm_type->name);",
          "7516:   i++;",
          "",
          "---------------",
          "--- Hunk 108 ---",
          "[Context before]",
          "7814:  key_buf_size = strlen (class_name) + 4 + 8 + 1;",
          "7815:  key = malloc (key_buf_size);",
          "7817:   if (class_name_inheap) {",
          "7818:    free (class_name);",
          "7819:   }",
          "",
          "[Removed Lines]",
          "7816:  if (key == NULL) {",
          "",
          "[Added Lines]",
          "7668:  if (!key) {",
          "",
          "---------------",
          "--- Hunk 109 ---",
          "[Context before]",
          "7829:   snprintf (key, key_buf_size - 1, \"%s.cp.%d\", class_name, idx);",
          "7830:   key[key_buf_size - 1] = 0;",
          "7831:   cp_obj = (RBinJavaCPTypeObj *) r_bin_java_get_item_from_bin_cp_list (bin, idx);",
          "7833:   if (cp_obj) {",
          "7834:    value = ((RBinJavaCPTypeMetas *)",
          "7835:    cp_obj->metas->type_info)->",
          "",
          "[Removed Lines]",
          "7832:   IFDBG eprintf(\"Adding %s to the sdb.\\n\", key);",
          "",
          "[Added Lines]",
          "7684:   IFDBG eprintf (\"Adding %s to the sdb.\\n\", key);",
          "",
          "---------------",
          "--- Hunk 110 ---",
          "[Context before]",
          "7880:   char number_buffer[80];",
          "7881:   ut64 file_offset = fm_type->file_offset + bin->loadaddr;",
          "7882:   snprintf (number_buffer, sizeof (number_buffer), \"0x%04\"PFMT64x, file_offset);",
          "7884:   sdb_array_push (bin->kv, field_key, number_buffer, 0);",
          "7885:  }",
          "7886:  r_list_foreach_safe (bin->fields_list, iter, iter_tmp, fm_type) {",
          "",
          "[Removed Lines]",
          "7883:   IFDBG eprintf(\"Inserting: []%s = %s\\n\", field_key, number_buffer);",
          "",
          "[Added Lines]",
          "7735:   IFDBG eprintf (\"Inserting: []%s = %s\\n\", field_key, number_buffer);",
          "",
          "---------------",
          "--- Hunk 111 ---",
          "[Context before]",
          "7891:   snprintf (field_key_value, key_size, \"%s.0x%04\"PFMT64x \".field\", class_name, field_offset);",
          "7892:   field_key_value[key_size - 1] = 0;",
          "7893:   sdb_set (bin->kv, field_key, field_key_value, 0);",
          "7896:   snprintf (field_key, key_size, \"%s.info\", field_key_value);",
          "7897:   field_key[key_size - 1] = 0;",
          "7898:   snprintf (value_buffer, value_buffer_size, \"%s\", fm_type->flags_str);",
          "7899:   value_buffer[value_buffer_size - 1] = 0;",
          "7900:   sdb_array_push (bin->kv, field_key, value_buffer, 0);",
          "7902:   snprintf (value_buffer, value_buffer_size, \"%s\", fm_type->class_name);",
          "7903:   value_buffer[value_buffer_size - 1] = 0;",
          "7904:   sdb_array_push (bin->kv, field_key, value_buffer, 0);",
          "7906:   snprintf (value_buffer, value_buffer_size, \"%s\", fm_type->name);",
          "7907:   value_buffer[value_buffer_size - 1] = 0;",
          "7908:   sdb_array_push (bin->kv, field_key, value_buffer, 0);",
          "7910:   snprintf (value_buffer, value_buffer_size, \"%s\", fm_type->descriptor);",
          "7911:   value_buffer[value_buffer_size - 1] = 0;",
          "7912:   sdb_array_push (bin->kv, field_key, value_buffer, 0);",
          "7914:  }",
          "7915:  free (field_key);",
          "7916:  free (field_key_value);",
          "",
          "[Removed Lines]",
          "7894:   IFDBG eprintf(\"Inserting: %s = %s\\n\", field_key, field_key_value);",
          "7901:   IFDBG eprintf(\"Inserting: []%s = %s\\n\", field_key, value_buffer);",
          "7905:   IFDBG eprintf(\"Inserting: []%s = %s\\n\", field_key, value_buffer);",
          "7909:   IFDBG eprintf(\"Inserting: []%s = %s\\n\", field_key, value_buffer);",
          "7913:   IFDBG eprintf(\"Inserting: []%s = %s\\n\", field_key, value_buffer);",
          "",
          "[Added Lines]",
          "7746:   IFDBG eprintf (\"Inserting: %s = %s\\n\", field_key, field_key_value);",
          "7753:   IFDBG eprintf (\"Inserting: []%s = %s\\n\", field_key, value_buffer);",
          "7757:   IFDBG eprintf (\"Inserting: []%s = %s\\n\", field_key, value_buffer);",
          "7761:   IFDBG eprintf (\"Inserting: []%s = %s\\n\", field_key, value_buffer);",
          "7765:   IFDBG eprintf (\"Inserting: []%s = %s\\n\", field_key, value_buffer);",
          "",
          "---------------",
          "--- Hunk 112 ---",
          "[Context before]",
          "7975:   method_key[key_size - 1] = 0;",
          "7976:   snprintf (method_key_value, key_size, \"%s.0x%04\"PFMT64x \".method\", class_name, method_offset);",
          "7977:   method_key_value[key_size - 1] = 0;",
          "7979:   sdb_set (bin->kv, method_key, method_key_value, 0);",
          "7981:   snprintf (method_key, key_size, \"%s.code\", method_key_value);",
          "",
          "[Removed Lines]",
          "7978:   IFDBG eprintf(\"Adding %s to sdb_array: %s\\n\", method_key_value, method_key);",
          "",
          "[Added Lines]",
          "7830:   IFDBG eprintf (\"Adding %s to sdb_array: %s\\n\", method_key_value, method_key);",
          "",
          "---------------",
          "--- Hunk 113 ---",
          "[Context before]",
          "7991:   method_key[key_size - 1] = 0;",
          "7992:   snprintf (value_buffer, value_buffer_size, \"%s\", fm_type->flags_str);",
          "7993:   value_buffer[value_buffer_size - 1] = 0;",
          "7995:   sdb_array_push (bin->kv, method_key, value_buffer, 0);",
          "7996:   snprintf (value_buffer, value_buffer_size, \"%s\", fm_type->class_name);",
          "7997:   value_buffer[value_buffer_size - 1] = 0;",
          "7999:   sdb_array_push (bin->kv, method_key, value_buffer, 0);",
          "8000:   snprintf (value_buffer, value_buffer_size, \"%s\", fm_type->name);",
          "8001:   value_buffer[value_buffer_size - 1] = 0;",
          "8003:   sdb_array_push (bin->kv, method_key, value_buffer, 0);",
          "8004:   snprintf (value_buffer, value_buffer_size, \"%s\", fm_type->descriptor);",
          "8005:   value_buffer[value_buffer_size - 1] = 0;",
          "8007:   sdb_array_push (bin->kv, method_key, value_buffer, 0);",
          "8008:  }",
          "8009:  free (method_key);",
          "",
          "[Removed Lines]",
          "7994:   IFDBG eprintf(\"Adding %s to sdb_array: %s\\n\", value_buffer, method_key);",
          "7998:   IFDBG eprintf(\"Adding %s to sdb_array: %s\\n\", value_buffer, method_key);",
          "8002:   IFDBG eprintf(\"Adding %s to sdb_array: %s\\n\", value_buffer, method_key);",
          "8006:   IFDBG eprintf(\"Adding %s to sdb_array: %s\\n\", value_buffer, method_key);",
          "",
          "[Added Lines]",
          "7846:   IFDBG eprintf (\"Adding %s to sdb_array: %s\\n\", value_buffer, method_key);",
          "7850:   IFDBG eprintf (\"Adding %s to sdb_array: %s\\n\", value_buffer, method_key);",
          "7854:   IFDBG eprintf (\"Adding %s to sdb_array: %s\\n\", value_buffer, method_key);",
          "7858:   IFDBG eprintf (\"Adding %s to sdb_array: %s\\n\", value_buffer, method_key);",
          "",
          "---------------",
          "--- Hunk 114 ---",
          "[Context before]",
          "8165:   if (!extract_type_value (fm_type->descriptor, &desc)) {",
          "8166:    return NULL;",
          "8167:   }",
          "8169:   r_list_append (all_types, desc);",
          "8170:  }",
          "",
          "[Removed Lines]",
          "8168:   IFDBG eprintf(\"Adding field type: %s\\n\", desc);",
          "",
          "[Added Lines]",
          "8020:   IFDBG eprintf (\"Adding field type: %s\\n\", desc);",
          "",
          "---------------",
          "--- Hunk 115 ---",
          "[Context before]",
          "8176:   r_list_foreach (the_list, desc_iter, str) {",
          "8177:    if (str && *str != '(' && *str != ')') {",
          "8178:     r_list_append (all_types, strdup (str));",
          "8180:    }",
          "8181:   }",
          "8182:   r_list_free (the_list);",
          "",
          "[Removed Lines]",
          "8179:     IFDBG eprintf(\"Adding method type: %s\\n\", str);",
          "",
          "[Added Lines]",
          "8031:     IFDBG eprintf (\"Adding method type: %s\\n\", str);",
          "",
          "---------------",
          "--- Hunk 116 ---",
          "[Context before]",
          "8329:  item = (RBinJavaCPTypeObj *) r_bin_java_get_item_from_bin_cp_list (BIN_OBJ, idx);",
          "8330:  if (item) {",
          "8331:   cp_name = ((RBinJavaCPTypeMetas *) item->metas->type_info)->name;",
          "8333:  } else {",
          "8334:   return NULL;",
          "8335:  }",
          "",
          "[Removed Lines]",
          "8332:   IFDBG eprintf(\"java_resolve Resolved: (%d) %s\\n\", idx, cp_name);",
          "",
          "[Added Lines]",
          "8184:   IFDBG eprintf (\"java_resolve Resolved: (%d) %s\\n\", idx, cp_name);",
          "",
          "---------------",
          "--- Hunk 117 ---",
          "[Context before]",
          "8408:   ut32 length = r_bin_java_get_utf8_len_from_bin_cp_list (BIN_OBJ, item->info.cp_string.string_idx);",
          "8409:   string_str = r_bin_java_get_utf8_from_bin_cp_list (BIN_OBJ, item->info.cp_string.string_idx);",
          "8410:   str = NULL;",
          "8412:   if (!string_str) {",
          "8413:    string_str = empty;",
          "8414:    length = strlen (empty);",
          "",
          "[Removed Lines]",
          "8411:   IFDBG eprintf(\"java_resolve String got: (%d) %s\\n\", item->info.cp_string.string_idx, string_str);",
          "",
          "[Added Lines]",
          "8263:   IFDBG eprintf (\"java_resolve String got: (%d) %s\\n\", item->info.cp_string.string_idx, string_str);",
          "",
          "---------------",
          "--- Hunk 118 ---",
          "[Context before]",
          "8423:     str = out;",
          "8424:    }",
          "8425:   }",
          "8427:   if (string_str != empty) {",
          "8428:    free (string_str);",
          "8429:   }",
          "",
          "[Removed Lines]",
          "8426:   IFDBG eprintf(\"java_resolve String return: %s\\n\", str);",
          "",
          "[Added Lines]",
          "8278:   IFDBG eprintf (\"java_resolve String return: %s\\n\", str);",
          "",
          "---------------",
          "--- Hunk 119 ---",
          "[Context before]",
          "8564:   return result;",
          "8565:  }",
          "8566:  cp_name = ((RBinJavaCPTypeMetas *) item->metas->type_info)->name;",
          "8568:  if (strcmp (cp_name, \"Class\") == 0) {",
          "8569:   item2 = (RBinJavaCPTypeObj *) r_bin_java_get_item_from_bin_cp_list (BIN_OBJ, idx);",
          "",
          "[Removed Lines]",
          "8567:  IFDBG eprintf(\"java_resolve Resolved: (%d) %s\\n\", idx, cp_name);",
          "",
          "[Added Lines]",
          "8419:  IFDBG eprintf (\"java_resolve Resolved: (%d) %s\\n\", idx, cp_name);",
          "",
          "---------------",
          "--- Hunk 120 ---",
          "[Context before]",
          "8629:  } else if (strcmp (cp_name, \"String\") == 0) {",
          "8630:   ut32 length = r_bin_java_get_utf8_len_from_bin_cp_list (BIN_OBJ, item->info.cp_string.string_idx);",
          "8631:   string_str = r_bin_java_get_utf8_from_bin_cp_list (BIN_OBJ, item->info.cp_string.string_idx);",
          "8633:   if (!string_str) {",
          "8634:    string_str = empty;",
          "8635:    length = strlen (empty);",
          "",
          "[Removed Lines]",
          "8632:   IFDBG eprintf(\"java_resolve String got: (%d) %s\\n\", item->info.cp_string.string_idx, string_str);",
          "",
          "[Added Lines]",
          "8484:   IFDBG eprintf (\"java_resolve String got: (%d) %s\\n\", item->info.cp_string.string_idx, string_str);",
          "",
          "---------------",
          "--- Hunk 121 ---",
          "[Context before]",
          "8755:  ut32 *v = NULL;",
          "8756:  RListIter *iter;",
          "8757:  RBinJavaCPTypeObj *cp_obj;",
          "8759:  r_list_foreach (bin_obj->cp_list, iter, cp_obj) {",
          "8760:   if (cp_obj->tag == R_BIN_JAVA_CP_UTF8) {",
          "8763:    if (len == cp_obj->info.cp_utf8.length && !memcmp (bytes, cp_obj->info.cp_utf8.bytes, len)) {",
          "8764:     v = malloc (sizeof (ut32));",
          "8765:     if (!v) {",
          "",
          "[Removed Lines]",
          "8758:  IFDBG eprintf(\"In UTF-8 Looking for %s\\n\", bytes);",
          "8761:    IFDBG eprintf(\"In UTF-8 Looking @ %s\\n\", cp_obj->info.cp_utf8.bytes);",
          "8762:    IFDBG eprintf(\"UTF-8 len = %d and memcmp = %d\\n\", cp_obj->info.cp_utf8.length, memcmp (bytes, cp_obj->info.cp_utf8.bytes, len));",
          "",
          "[Added Lines]",
          "8610:  IFDBG eprintf (\"In UTF-8 Looking for %s\\n\", bytes);",
          "8613:    IFDBG eprintf (\"In UTF-8 Looking @ %s\\n\", cp_obj->info.cp_utf8.bytes);",
          "8614:    IFDBG eprintf (\"UTF-8 len = %d and memcmp = %d\\n\", cp_obj->info.cp_utf8.length, memcmp (bytes, cp_obj->info.cp_utf8.bytes, len));",
          "",
          "---------------",
          "--- Hunk 122 ---",
          "[Context before]",
          "8767:      return NULL;",
          "8768:     }",
          "8771:     r_list_append (res, v);",
          "8772:    }",
          "8773:   }",
          "",
          "[Removed Lines]",
          "8770:     IFDBG eprintf(\"Found a match adding idx: %d\\n\", *v);",
          "",
          "[Added Lines]",
          "8622:     IFDBG eprintf (\"Found a match adding idx: %d\\n\", *v);",
          "",
          "---------------",
          "--- Hunk 123 ---",
          "[Context before]",
          "8975:  RListIter *iter, *iter_tmp;",
          "8976:  RList *ptrList;",
          "8977:  RBinJavaVerificationObj *ver_obj;",
          "8983:  ptrList = obj->local_items;",
          "8984:  r_list_foreach_safe (ptrList, iter, iter_tmp, ver_obj) {",
          "8985:   r_bin_java_print_verification_info_summary (ver_obj);",
          "8986:  }",
          "8989:  ptrList = obj->stack_items;",
          "8990:  r_list_foreach_safe (ptrList, iter, iter_tmp, ver_obj) {",
          "8991:   r_bin_java_print_verification_info_summary (ver_obj);",
          "",
          "[Removed Lines]",
          "8978:  Eprintf (\"Stack Map Frame Information\\n\");",
          "8979:  Eprintf (\"  Tag Value = 0x%02x Name: %s\\n\", obj->tag, ((RBinJavaStackMapFrameMetas *) obj->metas->type_info)->name);",
          "8980:  Eprintf (\"  Offset: 0x%08\"PFMT64x \"\\n\", obj->file_offset);",
          "8981:  Eprintf (\"  Local Variable Count = 0x%04x\\n\", obj->number_of_locals);",
          "8982:  Eprintf (\"  Local Variables:\\n\");",
          "8987:  Eprintf (\"  Stack Items Count = 0x%04x\\n\", obj->number_of_stack_items);",
          "8988:  Eprintf (\"  Stack Items:\\n\");",
          "",
          "[Added Lines]",
          "8830:  printf (\"Stack Map Frame Information\\n\");",
          "8831:  printf (\"  Tag Value = 0x%02x Name: %s\\n\", obj->tag, ((RBinJavaStackMapFrameMetas *) obj->metas->type_info)->name);",
          "8832:  printf (\"  Offset: 0x%08\"PFMT64x \"\\n\", obj->file_offset);",
          "8833:  printf (\"  Local Variable Count = 0x%04x\\n\", obj->number_of_locals);",
          "8834:  printf (\"  Local Variables:\\n\");",
          "8839:  printf (\"  Stack Items Count = 0x%04x\\n\", obj->number_of_stack_items);",
          "8840:  printf (\"  Stack Items:\\n\");",
          "",
          "---------------",
          "--- Hunk 124 ---",
          "[Context before]",
          "8999:   free (stack_frame);",
          "9000:  }",
          "9001: }",
          "9004: R_API RBinJavaCPTypeMetas *U(r_bin_java_get_cp_meta_from_tag)(ut8 tag) {",
          "9005:  ut16 i = 0;",
          "",
          "[Removed Lines]",
          "9002: R_API void U(r_bin_java_stack_frame_do_nothing_free)(void /*RBinJavaStackMapFrame*/ *stack_frame) {}",
          "9003: R_API void U(r_bin_java_stack_frame_do_nothing_new)(RBinJavaObj * bin, RBinJavaStackMapFrame * stack_frame, ut64 offset) {}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 125 ---",
          "[Context before]",
          "9222:  }",
          "9223:  return 0;",
          "9224: }",
          "",
          "[Removed Lines]",
          "9226: R_API void r_bin_java_external_printf(PrintfCallback cb) {",
          "9227:  Eprintf = cb ? cb : (PrintfCallback) printf;",
          "9228: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9650e3c352f675687bf6c6f65ff2c4a3d0e288fa",
      "candidate_info": {
        "commit_hash": "9650e3c352f675687bf6c6f65ff2c4a3d0e288fa",
        "repo": "radareorg/radare2",
        "commit_url": "https://github.com/radareorg/radare2/commit/9650e3c352f675687bf6c6f65ff2c4a3d0e288fa",
        "files": [
          "shlr/java/class.c"
        ],
        "message": "Fix oobread segfault in java arith8.class ##crash\n\n* Reported by Cen Zhang via huntr.dev",
        "before_after_code_files": [
          "shlr/java/class.c||shlr/java/class.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "shlr/java/class.c||shlr/java/class.c"
          ],
          "candidate": [
            "shlr/java/class.c||shlr/java/class.c"
          ]
        }
      },
      "candidate_diff": {
        "shlr/java/class.c||shlr/java/class.c": [
          "File: shlr/java/class.c -> shlr/java/class.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3733:  ut64 offset = 0, curpos;",
          "3734:  attr = r_bin_java_default_attr_new (bin, buffer, sz, buf_offset);",
          "3735:  offset += 6;",
          "3736:  if (attr == NULL) {",
          "3738:   return attr;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3736:  if (buf_offset + offset + 8 > sz) {",
          "3737:   eprintf (\"Invalid amount of inner classes\\n\");",
          "3738:   return NULL;",
          "3739:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3743:  attr->info.inner_classes_attr.classes = r_list_newf (r_bin_java_inner_classes_attr_entry_free);",
          "3744:  for (i = 0; i < attr->info.inner_classes_attr.number_of_classes; i++) {",
          "3745:   curpos = buf_offset + offset;",
          "3747:    eprintf (\"Invalid amount of inner classes\\n\");",
          "3748:    break;",
          "3749:   }",
          "",
          "[Removed Lines]",
          "3746:   if (offset + 8 > sz) {",
          "",
          "[Added Lines]",
          "3750:   if (buf_offset + offset + 8 > sz) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}