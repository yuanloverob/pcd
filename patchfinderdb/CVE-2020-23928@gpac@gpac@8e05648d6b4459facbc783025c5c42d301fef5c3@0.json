{
  "cve_id": "CVE-2020-23928",
  "cve_desc": "An issue was discovered in gpac before 1.0.1. The abst_box_read function in box_code_adobe.c has a heap-based buffer over-read.",
  "repo": "gpac/gpac",
  "patch_hash": "8e05648d6b4459facbc783025c5c42d301fef5c3",
  "patch_info": {
    "commit_hash": "8e05648d6b4459facbc783025c5c42d301fef5c3",
    "repo": "gpac/gpac",
    "commit_url": "https://github.com/gpac/gpac/commit/8e05648d6b4459facbc783025c5c42d301fef5c3",
    "files": [
      "src/isomedia/box_code_adobe.c"
    ],
    "message": "fixed #1568",
    "before_after_code_files": [
      "src/isomedia/box_code_adobe.c||src/isomedia/box_code_adobe.c"
    ]
  },
  "patch_diff": {
    "src/isomedia/box_code_adobe.c||src/isomedia/box_code_adobe.c": [
      "File: src/isomedia/box_code_adobe.c -> src/isomedia/box_code_adobe.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "94:  i=0;",
      "95:  if (ptr->size<8) return GF_ISOM_INVALID_FILE;",
      "97:  tmp_str = gf_malloc(sizeof(char)*tmp_strsize);",
      "98:  if (!tmp_str) return GF_OUT_OF_MEM;",
      "99:  memset(tmp_str, 0, sizeof(char)*tmp_strsize);",
      "",
      "[Removed Lines]",
      "96:  tmp_strsize =(u32)ptr->size-8;",
      "",
      "[Added Lines]",
      "96:  tmp_strsize =(u32)ptr->size;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2bcca3f1d4605100bb27d3ed7be25b53cddbc75c",
      "candidate_info": {
        "commit_hash": "2bcca3f1d4605100bb27d3ed7be25b53cddbc75c",
        "repo": "gpac/gpac",
        "commit_url": "https://github.com/gpac/gpac/commit/2bcca3f1d4605100bb27d3ed7be25b53cddbc75c",
        "files": [
          "src/isomedia/box_code_adobe.c"
        ],
        "message": "abst_Read: force last char of string to 0 for strdup (#1337)",
        "before_after_code_files": [
          "src/isomedia/box_code_adobe.c||src/isomedia/box_code_adobe.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/isomedia/box_code_adobe.c||src/isomedia/box_code_adobe.c"
          ],
          "candidate": [
            "src/isomedia/box_code_adobe.c||src/isomedia/box_code_adobe.c"
          ]
        }
      },
      "candidate_diff": {
        "src/isomedia/box_code_adobe.c||src/isomedia/box_code_adobe.c": [
          "File: src/isomedia/box_code_adobe.c -> src/isomedia/box_code_adobe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "76: {",
          "77:  GF_AdobeBootstrapInfoBox *ptr = (GF_AdobeBootstrapInfoBox *)s;",
          "78:  int i;",
          "80:  char *tmp_str;",
          "81:  GF_Err e;",
          "",
          "[Removed Lines]",
          "79:  u32 tmp_strsize;",
          "",
          "[Added Lines]",
          "79:  u32 tmp_strsize, strsize;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "92:  i=0;",
          "93:  if (ptr->size<8) return GF_ISOM_INVALID_FILE;",
          "95:  tmp_str = gf_malloc(sizeof(char)*tmp_strsize);",
          "97:  while (tmp_strsize) {",
          "",
          "[Removed Lines]",
          "94:  tmp_strsize=(u32)ptr->size-8;",
          "",
          "[Added Lines]",
          "94:  strsize = tmp_strsize=(u32)ptr->size-8;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "101:    break;",
          "102:   i++;",
          "103:  }",
          "105:   ptr->movie_identifier = gf_strdup(tmp_str);",
          "107:  ptr->server_entry_count = gf_bs_read_u8(bs);",
          "108:  for (i=0; i<ptr->server_entry_count; i++) {",
          "",
          "[Removed Lines]",
          "104:  if (i)",
          "",
          "[Added Lines]",
          "104:  if (i) {",
          "105:   tmp_str[strsize-1] = 0;",
          "107:  }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "115:     break;",
          "116:    j++;",
          "117:   }",
          "118:   gf_list_insert(ptr->server_entry_table, gf_strdup(tmp_str), i);",
          "119:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "120:   tmp_str[strsize-1] = 0;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "129:     break;",
          "130:    j++;",
          "131:   }",
          "132:   gf_list_insert(ptr->quality_entry_table, gf_strdup(tmp_str), i);",
          "133:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "135:   tmp_str[strsize-1] = 0;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "141:    break;",
          "142:   i++;",
          "143:  }",
          "145:   ptr->drm_data = gf_strdup(tmp_str);",
          "147:  i=0;",
          "148:  tmp_strsize=(u32)ptr->size-8;",
          "",
          "[Removed Lines]",
          "144:  if (i)",
          "",
          "[Added Lines]",
          "148:  if (i) {",
          "149:   tmp_str[strsize-1] = 0;",
          "151:  }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "153:    break;",
          "154:   i++;",
          "155:  }",
          "157:   ptr->meta_data = gf_strdup(tmp_str);",
          "159:  ptr->segment_run_table_count = gf_bs_read_u8(bs);",
          "160:  for (i=0; i<ptr->segment_run_table_count; i++) {",
          "",
          "[Removed Lines]",
          "156:  if (i)",
          "",
          "[Added Lines]",
          "162:  if (i) {",
          "163:   tmp_str[strsize-1] = 0;",
          "165:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "973828cb48d03312d1ee8fcecacd082fb1258fe8",
      "candidate_info": {
        "commit_hash": "973828cb48d03312d1ee8fcecacd082fb1258fe8",
        "repo": "gpac/gpac",
        "commit_url": "https://github.com/gpac/gpac/commit/973828cb48d03312d1ee8fcecacd082fb1258fe8",
        "files": [
          "src/isomedia/box_code_adobe.c",
          "src/quickjs/libbf.c"
        ],
        "message": "fixed gcc warnings",
        "before_after_code_files": [
          "src/isomedia/box_code_adobe.c||src/isomedia/box_code_adobe.c",
          "src/quickjs/libbf.c||src/quickjs/libbf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/isomedia/box_code_adobe.c||src/isomedia/box_code_adobe.c"
          ],
          "candidate": [
            "src/isomedia/box_code_adobe.c||src/isomedia/box_code_adobe.c"
          ]
        }
      },
      "candidate_diff": {
        "src/isomedia/box_code_adobe.c||src/isomedia/box_code_adobe.c": [
          "File: src/isomedia/box_code_adobe.c -> src/isomedia/box_code_adobe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "77: {",
          "78:  GF_AdobeBootstrapInfoBox *ptr = (GF_AdobeBootstrapInfoBox *)s;",
          "79:  int i;",
          "81:  char *tmp_str;",
          "82:  GF_Err e;",
          "",
          "[Removed Lines]",
          "80:  u32 tmp_strsize, strsize;",
          "",
          "[Added Lines]",
          "80:  u32 tmp_strsize;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "93:  i=0;",
          "94:  if (ptr->size<8) return GF_ISOM_INVALID_FILE;",
          "96:  tmp_str = gf_malloc(sizeof(char)*tmp_strsize);",
          "97:  memset(tmp_str, 0, sizeof(char)*tmp_strsize);",
          "",
          "[Removed Lines]",
          "95:  strsize = tmp_strsize=(u32)ptr->size-8;",
          "",
          "[Added Lines]",
          "95:  tmp_strsize =(u32)ptr->size-8;",
          "",
          "---------------"
        ],
        "src/quickjs/libbf.c||src/quickjs/libbf.c": [
          "File: src/quickjs/libbf.c -> src/quickjs/libbf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7855: {",
          "7856:     const limb_t *mods = ntt_mods + NB_MODS - nb_mods;",
          "7857:     const limb_t *mods_cr, *mods_cr_inv;",
          "7859:     slimb_t i, len, pos;",
          "7860:     int j, k, l, shift, n_limb1;",
          "7861:     dlimb_t t;",
          "",
          "[Removed Lines]",
          "7858:     limb_t y[NB_MODS], u[NB_MODS], carry[NB_MODS], fft_len, base_mask1, r;",
          "",
          "[Added Lines]",
          "7858:     limb_t y[NB_MODS], u[NB_MODS+2], carry[NB_MODS], fft_len, base_mask1, r;",
          "",
          "---------------"
        ]
      }
    }
  ]
}