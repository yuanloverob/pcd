{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4822d780bb913c9ef7c2301a181a5834887cddb4",
      "candidate_info": {
        "commit_hash": "4822d780bb913c9ef7c2301a181a5834887cddb4",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/4822d780bb913c9ef7c2301a181a5834887cddb4",
        "files": [
          "deps/uv/include/uv-private/uv-win.h",
          "deps/uv/include/uv.h",
          "deps/uv/src/fs-poll.c",
          "deps/uv/src/unix/async.c",
          "deps/uv/src/unix/error.c",
          "deps/uv/src/unix/linux/linux-core.c",
          "deps/uv/src/unix/stream.c",
          "deps/uv/src/unix/thread.c",
          "deps/uv/src/unix/udp.c",
          "deps/uv/src/uv-common.h",
          "deps/uv/src/win/async.c",
          "deps/uv/src/win/fs-event.c",
          "deps/uv/src/win/handle-inl.h",
          "deps/uv/src/win/handle.c",
          "deps/uv/src/win/loop-watcher.c",
          "deps/uv/src/win/pipe.c",
          "deps/uv/src/win/poll.c",
          "deps/uv/src/win/process.c",
          "deps/uv/src/win/signal.c",
          "deps/uv/src/win/tcp.c",
          "deps/uv/src/win/timer.c",
          "deps/uv/src/win/tty.c",
          "deps/uv/src/win/udp.c",
          "deps/uv/test/benchmark-list.h",
          "deps/uv/test/benchmark-udp-packet-storm.c",
          "deps/uv/test/benchmark-udp-pummel.c",
          "deps/uv/test/test-active.c",
          "deps/uv/test/test-list.h",
          "deps/uv/uv.gyp"
        ],
        "message": "uv: upgrade to 621a4e3",
        "before_after_code_files": [
          "deps/uv/include/uv-private/uv-win.h||deps/uv/include/uv-private/uv-win.h",
          "deps/uv/include/uv.h||deps/uv/include/uv.h",
          "deps/uv/src/fs-poll.c||deps/uv/src/fs-poll.c",
          "deps/uv/src/unix/async.c||deps/uv/src/unix/async.c",
          "deps/uv/src/unix/error.c||deps/uv/src/unix/error.c",
          "deps/uv/src/unix/linux/linux-core.c||deps/uv/src/unix/linux/linux-core.c",
          "deps/uv/src/unix/stream.c||deps/uv/src/unix/stream.c",
          "deps/uv/src/unix/thread.c||deps/uv/src/unix/thread.c",
          "deps/uv/src/unix/udp.c||deps/uv/src/unix/udp.c",
          "deps/uv/src/uv-common.h||deps/uv/src/uv-common.h",
          "deps/uv/src/win/async.c||deps/uv/src/win/async.c",
          "deps/uv/src/win/fs-event.c||deps/uv/src/win/fs-event.c",
          "deps/uv/src/win/handle-inl.h||deps/uv/src/win/handle-inl.h",
          "deps/uv/src/win/handle.c||deps/uv/src/win/handle.c",
          "deps/uv/src/win/loop-watcher.c||deps/uv/src/win/loop-watcher.c",
          "deps/uv/src/win/pipe.c||deps/uv/src/win/pipe.c",
          "deps/uv/src/win/poll.c||deps/uv/src/win/poll.c",
          "deps/uv/src/win/process.c||deps/uv/src/win/process.c",
          "deps/uv/src/win/signal.c||deps/uv/src/win/signal.c",
          "deps/uv/src/win/tcp.c||deps/uv/src/win/tcp.c",
          "deps/uv/src/win/timer.c||deps/uv/src/win/timer.c",
          "deps/uv/src/win/tty.c||deps/uv/src/win/tty.c",
          "deps/uv/src/win/udp.c||deps/uv/src/win/udp.c",
          "deps/uv/test/benchmark-list.h||deps/uv/test/benchmark-list.h",
          "deps/uv/test/benchmark-udp-packet-storm.c||deps/uv/test/benchmark-udp-packet-storm.c",
          "deps/uv/test/benchmark-udp-pummel.c||deps/uv/test/benchmark-udp-pummel.c",
          "deps/uv/test/test-active.c||deps/uv/test/test-active.c",
          "deps/uv/test/test-list.h||deps/uv/test/test-list.h",
          "deps/uv/uv.gyp||deps/uv/uv.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/uv/include/uv-private/uv-win.h||deps/uv/include/uv-private/uv-win.h": [
          "File: deps/uv/include/uv-private/uv-win.h -> deps/uv/include/uv-private/uv-win.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "67: #define SIGKILL               9",
          "68: #define SIGWINCH             28",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "72: #ifndef SIGABRT_COMPAT",
          "73: # define SIGABRT_COMPAT       6",
          "74: #endif",
          "",
          "---------------"
        ],
        "deps/uv/include/uv.h||deps/uv/include/uv.h": [
          "File: deps/uv/include/uv.h -> deps/uv/include/uv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:   XX( 53, ENOTEMPTY, \"directory not empty\")                                   \\",
          "121:   XX( 54, ENOSPC, \"no space left on device\")                                  \\",
          "122:   XX( 55, EIO, \"i/o error\")                                                   \\",
          "128: #define UV_ERRNO_GEN(val, name, s) UV_##name = val,",
          "",
          "[Removed Lines]",
          "123:   XX( 56, EROFS, \"read-only file system\" )                                    \\",
          "124:   XX( 57, ENODEV, \"no such device\" )                                          \\",
          "125:   XX( 58, ECANCELED, \"operation canceled\" )",
          "",
          "[Added Lines]",
          "123:   XX( 56, EROFS, \"read-only file system\")                                     \\",
          "124:   XX( 57, ENODEV, \"no such device\")                                           \\",
          "125:   XX( 58, ESPIPE, \"invalid seek\")                                             \\",
          "126:   XX( 59, ECANCELED, \"operation canceled\")                                    \\",
          "",
          "---------------"
        ],
        "deps/uv/src/fs-poll.c||deps/uv/src/fs-poll.c": [
          "File: deps/uv/src/fs-poll.c -> deps/uv/src/fs-poll.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "238: void uv__fs_poll_endgame(uv_loop_t* loop, uv_fs_poll_t* handle) {",
          "239:   assert(handle->flags & UV_HANDLE_CLOSING);",
          "240:   assert(!(handle->flags & UV_HANDLE_CLOSED));",
          "242:   uv__handle_close(handle);",
          "243: }",
          "",
          "[Removed Lines]",
          "241:   uv__handle_stop(handle);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/async.c||deps/uv/src/unix/async.c": [
          "File: deps/uv/src/unix/async.c -> deps/uv/src/unix/async.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:   return __sync_val_compare_and_swap(ptr, 0, 1) != 0;",
          "56: #else",
          "59: #endif",
          "60: }",
          "",
          "[Removed Lines]",
          "58:   return 1;",
          "",
          "[Added Lines]",
          "58:   return 0;",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/error.c||deps/uv/src/unix/error.c": [
          "File: deps/uv/src/unix/error.c -> deps/uv/src/unix/error.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:     case EAFNOSUPPORT: return UV_EAFNOSUPPORT;",
          "69:     case EBADF: return UV_EBADF;",
          "70:     case EPIPE: return UV_EPIPE;",
          "71:     case EAGAIN: return UV_EAGAIN;",
          "72: #if EWOULDBLOCK != EAGAIN",
          "73:     case EWOULDBLOCK: return UV_EAGAIN;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71:     case ESPIPE: return UV_ESPIPE;",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/linux/linux-core.c||deps/uv/src/unix/linux/linux-core.c": [
          "File: deps/uv/src/unix/linux/linux-core.c -> deps/uv/src/unix/linux/linux-core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "469:   if (fp == NULL)",
          "470:     return 0;",
          "474:   fclose(fp);",
          "476:   return val;",
          "",
          "[Removed Lines]",
          "472:   val = 0;",
          "473:   fscanf(fp, \"%lu\", &val);",
          "",
          "[Added Lines]",
          "472:   if (fscanf(fp, \"%lu\", &val) != 1)",
          "473:     val = 0;",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/stream.c||deps/uv/src/unix/stream.c": [
          "File: deps/uv/src/unix/stream.c -> deps/uv/src/unix/stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "655:     cmsg->cmsg_level = SOL_SOCKET;",
          "656:     cmsg->cmsg_type = SCM_RIGHTS;",
          "657:     cmsg->cmsg_len = msg.msg_controllen;",
          "660:     do {",
          "661:       n = sendmsg(stream->fd, &msg, 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "660:     {",
          "661:       void* pv = CMSG_DATA(cmsg);",
          "662:       int* pi = pv;",
          "664:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "909:               fprintf(stderr, \"(libuv) ignoring extra FD received\\n\");",
          "910:             }",
          "914:           } else {",
          "915:             fprintf(stderr, \"ignoring non-SCM_RIGHTS ancillary data: %d\\n\",",
          "",
          "[Removed Lines]",
          "912:             stream->accepted_fd = *(int *) CMSG_DATA(cmsg);",
          "",
          "[Added Lines]",
          "919:             {",
          "920:               void* pv = CMSG_DATA(cmsg);",
          "921:               int* pi = pv;",
          "922:               stream->accepted_fd = *pi;",
          "923:             }",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/thread.c||deps/uv/src/unix/thread.c": [
          "File: deps/uv/src/unix/thread.c -> deps/uv/src/unix/thread.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "170: #if defined(__APPLE__) && defined(__MACH__)",
          "172: int uv_sem_init(uv_sem_t* sem, unsigned int value) {",
          "174: }",
          "",
          "[Removed Lines]",
          "173:   return semaphore_create(mach_task_self(), sem, SYNC_POLICY_FIFO, value);",
          "",
          "[Added Lines]",
          "173:   if (semaphore_create(mach_task_self(), sem, SYNC_POLICY_FIFO, value))",
          "174:     return -1;",
          "175:   else",
          "176:     return 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "189: void uv_sem_wait(uv_sem_t* sem) {",
          "191:     abort();",
          "192: }",
          "",
          "[Removed Lines]",
          "190:   if (semaphore_wait(*sem))",
          "",
          "[Added Lines]",
          "193:   int r;",
          "195:   do",
          "196:     r = semaphore_wait(*sem);",
          "197:   while (r == KERN_ABORTED);",
          "199:   if (r != KERN_SUCCESS)",
          "",
          "---------------"
        ],
        "deps/uv/src/unix/udp.c||deps/uv/src/unix/udp.c": [
          "File: deps/uv/src/unix/udp.c -> deps/uv/src/unix/udp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "86:     req = ngx_queue_data(q, uv_udp_send_t, queue);",
          "87:     uv__req_unregister(handle->loop, req);",
          "89:     if (req->send_cb) {",
          "91:       uv__set_artificial_error(handle->loop, UV_EINTR);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "89:     if (req->bufs != req->bufsml)",
          "90:       free(req->bufs);",
          "91:     req->bufs = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "172:     if (req->bufs != req->bufsml)",
          "173:       free(req->bufs);",
          "175:     if (req->send_cb == NULL)",
          "176:       continue;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "178:     req->bufs = NULL;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "377: static int uv__udp_maybe_deferred_bind(uv_udp_t* handle, int domain) {",
          "379:   socklen_t addrlen;",
          "381:   assert(domain == AF_INET || domain == AF_INET6);",
          "",
          "[Removed Lines]",
          "378:   struct sockaddr_storage taddr;",
          "",
          "[Added Lines]",
          "383:   unsigned char taddr[sizeof(struct sockaddr_in6)];",
          "",
          "---------------"
        ],
        "deps/uv/src/uv-common.h||deps/uv/src/uv-common.h": [
          "File: deps/uv/src/uv-common.h -> deps/uv/src/uv-common.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "53: enum {",
          "54:   UV__HANDLE_INTERNAL = 0x8000,",
          "55:   UV__HANDLE_ACTIVE   = 0x4000,",
          "57: };",
          "58: #else",
          "59: # define UV__HANDLE_INTERNAL  0x80",
          "60: # define UV__HANDLE_ACTIVE    0x40",
          "61: # define UV__HANDLE_REF       0x20",
          "62: #endif",
          "64: extern const uv_err_t uv_ok_;",
          "",
          "[Removed Lines]",
          "56:   UV__HANDLE_REF      = 0x2000",
          "",
          "[Added Lines]",
          "56:   UV__HANDLE_REF      = 0x2000,",
          "63: # define UV__HANDLE_CLOSING   0x01",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "130: UNUSED static void uv__handle_start(uv_handle_t* h) {",
          "131:   if (h->flags & UV__HANDLE_ACTIVE) return;",
          "133:   h->flags |= UV__HANDLE_ACTIVE;",
          "134: }",
          "135: #define uv__handle_start(h) uv__handle_start((uv_handle_t*)(h))",
          "137: UNUSED static void uv__handle_stop(uv_handle_t* h) {",
          "138:   if (!(h->flags & UV__HANDLE_ACTIVE)) return;",
          "140:   h->flags &= ~UV__HANDLE_ACTIVE;",
          "141: }",
          "142: #define uv__handle_stop(h) uv__handle_stop((uv_handle_t*)(h))",
          "144: UNUSED static void uv__handle_ref(uv_handle_t* h) {",
          "145:   if (h->flags & UV__HANDLE_REF) return;",
          "147:   h->flags |= UV__HANDLE_REF;",
          "148: }",
          "149: #define uv__handle_ref(h) uv__handle_ref((uv_handle_t*)(h))",
          "151: UNUSED static void uv__handle_unref(uv_handle_t* h) {",
          "152:   if (!(h->flags & UV__HANDLE_REF)) return;",
          "154:   h->flags &= ~UV__HANDLE_REF;",
          "155: }",
          "156: #define uv__handle_unref(h) uv__handle_unref((uv_handle_t*)(h))",
          "",
          "[Removed Lines]",
          "132:   if (h->flags & UV__HANDLE_REF) uv__active_handle_add(h);",
          "139:   if (h->flags & UV__HANDLE_REF) uv__active_handle_rm(h);",
          "146:   if (h->flags & UV__HANDLE_ACTIVE) uv__active_handle_add(h);",
          "153:   if (h->flags & UV__HANDLE_ACTIVE) uv__active_handle_rm(h);",
          "",
          "[Added Lines]",
          "135:   if (h->flags & UV__HANDLE_CLOSING) return;",
          "136:   if (h->flags & UV__HANDLE_REF) uv__active_handle_add(h);",
          "143:   if (h->flags & UV__HANDLE_CLOSING) return;",
          "144:   if (h->flags & UV__HANDLE_REF) uv__active_handle_rm(h);",
          "150:   if (h->flags & (UV__HANDLE_ACTIVE | UV__HANDLE_CLOSING))",
          "151:     uv__active_handle_add(h);",
          "158:   if (h->flags & (UV__HANDLE_ACTIVE | UV__HANDLE_CLOSING))",
          "159:     uv__active_handle_rm(h);",
          "",
          "---------------"
        ],
        "deps/uv/src/win/async.c||deps/uv/src/win/async.c": [
          "File: deps/uv/src/win/async.c -> deps/uv/src/win/async.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:   if (handle->flags & UV_HANDLE_CLOSING &&",
          "33:       !handle->async_sent) {",
          "34:     assert(!(handle->flags & UV_HANDLE_CLOSED));",
          "36:     uv__handle_close(handle);",
          "37:   }",
          "38: }",
          "",
          "[Removed Lines]",
          "35:     uv__handle_stop(handle);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "61:     uv_want_endgame(loop, (uv_handle_t*) handle);",
          "62:   }",
          "65: }",
          "",
          "[Removed Lines]",
          "64:   uv__handle_start(handle);",
          "",
          "[Added Lines]",
          "63:   uv__handle_closing(handle);",
          "",
          "---------------"
        ],
        "deps/uv/src/win/fs-event.c||deps/uv/src/win/fs-event.c": [
          "File: deps/uv/src/win/fs-event.c -> deps/uv/src/win/fs-event.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "470:     uv_want_endgame(loop, (uv_handle_t*)handle);",
          "471:   }",
          "474: }",
          "",
          "[Removed Lines]",
          "473:   uv__handle_start(handle);",
          "",
          "[Added Lines]",
          "473:   uv__handle_closing(handle);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "478:   if (handle->flags & UV_HANDLE_CLOSING &&",
          "479:       !handle->req_pending) {",
          "480:     assert(!(handle->flags & UV_HANDLE_CLOSED));",
          "483:     if (handle->buffer) {",
          "484:       _aligned_free(handle->buffer);",
          "",
          "[Removed Lines]",
          "481:     uv__handle_stop(handle);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/uv/src/win/handle-inl.h||deps/uv/src/win/handle-inl.h": [
          "File: deps/uv/src/win/handle-inl.h -> deps/uv/src/win/handle-inl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "59:   } while (0)",
          "62: #define uv__handle_close(handle)                                        \\",
          "63:   do {                                                                  \\",
          "64:     ngx_queue_remove(&(handle)->handle_queue);                          \\",
          "65:     (handle)->flags |= UV_HANDLE_CLOSED;                                \\",
          "66:     if ((handle)->close_cb) {                                           \\",
          "68:     }                                                                   \\",
          "69:   } while (0)",
          "",
          "[Removed Lines]",
          "67:       (handle)->close_cb((uv_handle_t*)(handle));                       \\",
          "",
          "[Added Lines]",
          "62: #define uv__handle_closing(handle)                                      \\",
          "63:   do {                                                                  \\",
          "64:     assert(!((handle)->flags & UV__HANDLE_CLOSING));                    \\",
          "65:     (handle)->flags |= UV__HANDLE_CLOSING;                              \\",
          "66:     if ((handle)->flags & UV__HANDLE_ACTIVE) {                          \\",
          "67:       (handle)->flags &= ~UV__HANDLE_ACTIVE;                            \\",
          "68:     } else if ((handle)->flags & UV__HANDLE_REF) {                      \\",
          "69:       uv__active_handle_add((uv_handle_t*) (handle));                   \\",
          "70:     }                                                                   \\",
          "71:   } while (0)",
          "78:     if (handle->flags & UV__HANDLE_REF) {                               \\",
          "79:       uv__active_handle_rm((uv_handle_t*) (handle));                    \\",
          "80:     }                                                                   \\",
          "82:       (handle)->close_cb((uv_handle_t*) (handle));                      \\",
          "",
          "---------------"
        ],
        "deps/uv/src/win/handle.c||deps/uv/src/win/handle.c": [
          "File: deps/uv/src/win/handle.c -> deps/uv/src/win/handle.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "71:     return;",
          "72:   }",
          "75:   handle->close_cb = cb;",
          "",
          "[Removed Lines]",
          "74:   handle->flags |= UV_HANDLE_CLOSING;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "99:     case UV_TIMER:",
          "100:       uv_timer_stop((uv_timer_t*)handle);",
          "102:       uv_want_endgame(loop, handle);",
          "103:       return;",
          "105:     case UV_PREPARE:",
          "106:       uv_prepare_stop((uv_prepare_t*)handle);",
          "108:       uv_want_endgame(loop, handle);",
          "109:       return;",
          "111:     case UV_CHECK:",
          "112:       uv_check_stop((uv_check_t*)handle);",
          "114:       uv_want_endgame(loop, handle);",
          "115:       return;",
          "117:     case UV_IDLE:",
          "118:       uv_idle_stop((uv_idle_t*)handle);",
          "120:       uv_want_endgame(loop, handle);",
          "121:       return;",
          "",
          "[Removed Lines]",
          "101:       uv__handle_start(handle);",
          "107:       uv__handle_start(handle);",
          "113:       uv__handle_start(handle);",
          "119:       uv__handle_start(handle);",
          "",
          "[Added Lines]",
          "100:       uv__handle_closing(handle);",
          "106:       uv__handle_closing(handle);",
          "112:       uv__handle_closing(handle);",
          "118:       uv__handle_closing(handle);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "139:     case UV_FS_POLL:",
          "140:       uv__fs_poll_close((uv_fs_poll_t*) handle);",
          "142:       uv_want_endgame(loop, handle);",
          "143:       return;",
          "",
          "[Removed Lines]",
          "141:       uv__handle_start(handle);",
          "",
          "[Added Lines]",
          "140:       uv__handle_closing(handle);",
          "",
          "---------------"
        ],
        "deps/uv/src/win/loop-watcher.c||deps/uv/src/win/loop-watcher.c": [
          "File: deps/uv/src/win/loop-watcher.c -> deps/uv/src/win/loop-watcher.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:   if (handle->flags & UV_HANDLE_CLOSING) {",
          "31:     assert(!(handle->flags & UV_HANDLE_CLOSED));",
          "32:     handle->flags |= UV_HANDLE_CLOSED;",
          "34:     uv__handle_close(handle);",
          "35:   }",
          "36: }",
          "",
          "[Removed Lines]",
          "33:     uv__handle_stop(handle);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/uv/src/win/pipe.c||deps/uv/src/win/pipe.c": [
          "File: deps/uv/src/win/pipe.c -> deps/uv/src/win/pipe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "357:   if (handle->flags & UV_HANDLE_CLOSING &&",
          "358:       handle->reqs_pending == 0) {",
          "359:     assert(!(handle->flags & UV_HANDLE_CLOSED));",
          "362:     if (handle->flags & UV_HANDLE_CONNECTION) {",
          "363:       if (handle->pending_ipc_info.socket_info) {",
          "",
          "[Removed Lines]",
          "360:     uv__handle_stop(handle);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "660:     uv_want_endgame(loop, (uv_handle_t*) handle);",
          "661:   }",
          "664: }",
          "",
          "[Removed Lines]",
          "663:   uv__handle_start(handle);",
          "",
          "[Added Lines]",
          "662:   uv__handle_closing(handle);",
          "",
          "---------------"
        ],
        "deps/uv/src/win/poll.c||deps/uv/src/win/poll.c": [
          "File: deps/uv/src/win/poll.c -> deps/uv/src/win/poll.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "231: static void uv__fast_poll_close(uv_loop_t* loop, uv_poll_t* handle) {",
          "232:   handle->events = 0;",
          "235:   if (handle->submitted_events_1 == 0 &&",
          "236:       handle->submitted_events_2 == 0) {",
          "",
          "[Removed Lines]",
          "233:   uv__handle_start(handle);",
          "",
          "[Added Lines]",
          "233:   uv__handle_closing(handle);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "478: static void uv__slow_poll_close(uv_loop_t* loop, uv_poll_t* handle) {",
          "479:   handle->events = 0;",
          "482:   if (handle->submitted_events_1 == 0 &&",
          "483:       handle->submitted_events_2 == 0) {",
          "",
          "[Removed Lines]",
          "480:   uv__handle_start(handle);",
          "",
          "[Added Lines]",
          "480:   uv__handle_closing(handle);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "611:   assert(handle->submitted_events_1 == 0);",
          "612:   assert(handle->submitted_events_2 == 0);",
          "615:   uv__handle_close(handle);",
          "616: }",
          "",
          "[Removed Lines]",
          "614:   uv__handle_stop(handle);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/uv/src/win/process.c||deps/uv/src/win/process.c": [
          "File: deps/uv/src/win/process.c -> deps/uv/src/win/process.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "702: void uv_process_close(uv_loop_t* loop, uv_process_t* handle) {",
          "705:   if (handle->wait_handle != INVALID_HANDLE_VALUE) {",
          "",
          "[Removed Lines]",
          "703:   uv__handle_start(handle);",
          "",
          "[Added Lines]",
          "703:   uv__handle_closing(handle);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "725:   assert(handle->flags & UV_HANDLE_CLOSING);",
          "726:   assert(!(handle->flags & UV_HANDLE_CLOSED));",
          "731:   CloseHandle(handle->process_handle);",
          "",
          "[Removed Lines]",
          "728:   uv__handle_stop(handle);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/uv/src/win/signal.c||deps/uv/src/win/signal.c": [
          "File: deps/uv/src/win/signal.c -> deps/uv/src/win/signal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "231:   req->type = UV_SIGNAL_REQ;",
          "232:   req->data = handle;",
          "236:   return 0;",
          "237: }",
          "",
          "[Removed Lines]",
          "234:   uv__handle_start(handle);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "336: void uv_signal_close(uv_loop_t* loop, uv_signal_t* handle) {",
          "337:   uv_signal_stop(handle);",
          "339:   if (handle->pending_signum == 0) {",
          "341:     uv_want_endgame(loop, (uv_handle_t*) handle);",
          "342:   }",
          "343: }",
          "",
          "[Removed Lines]",
          "340:     uv__handle_start(handle);",
          "",
          "[Added Lines]",
          "336:   uv__handle_closing(handle);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "353:   handle->flags |= UV_HANDLE_CLOSED;",
          "356:   uv__handle_close(handle);",
          "357: }",
          "",
          "[Removed Lines]",
          "355:   uv__handle_stop(handle);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/uv/src/win/tcp.c||deps/uv/src/win/tcp.c": [
          "File: deps/uv/src/win/tcp.c -> deps/uv/src/win/tcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "187:   if (handle->flags & UV_HANDLE_CLOSING &&",
          "188:       handle->reqs_pending == 0) {",
          "189:     assert(!(handle->flags & UV_HANDLE_CLOSED));",
          "192:     if (!(handle->flags & UV_HANDLE_TCP_SOCKET_CLOSED)) {",
          "193:       closesocket(handle->socket);",
          "",
          "[Removed Lines]",
          "190:     uv__handle_stop(handle);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1386:     tcp->flags |= UV_HANDLE_TCP_SOCKET_CLOSED;",
          "1387:   }",
          "1391:   if (tcp->reqs_pending == 0) {",
          "1392:     uv_want_endgame(tcp->loop, (uv_handle_t*)tcp);",
          "",
          "[Removed Lines]",
          "1389:   uv__handle_start(tcp);",
          "",
          "[Added Lines]",
          "1388:   uv__handle_closing(tcp);",
          "",
          "---------------"
        ],
        "deps/uv/src/win/timer.c||deps/uv/src/win/timer.c": [
          "File: deps/uv/src/win/timer.c -> deps/uv/src/win/timer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "78: void uv_timer_endgame(uv_loop_t* loop, uv_timer_t* handle) {",
          "79:   if (handle->flags & UV_HANDLE_CLOSING) {",
          "80:     assert(!(handle->flags & UV_HANDLE_CLOSED));",
          "82:     uv__handle_close(handle);",
          "83:   }",
          "84: }",
          "",
          "[Removed Lines]",
          "81:     uv__handle_stop(handle);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/uv/src/win/tty.c||deps/uv/src/win/tty.c": [
          "File: deps/uv/src/win/tty.c -> deps/uv/src/win/tty.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "528:       if (handle->last_input_record.EventType == WINDOW_BUFFER_SIZE_EVENT) {",
          "529:         CONSOLE_SCREEN_BUFFER_INFO info;",
          "535:         continue;",
          "536:       }",
          "",
          "[Removed Lines]",
          "530:         if (uv_tty_output_handle == INVALID_HANDLE_VALUE)",
          "531:           continue;",
          "532:         if (!GetConsoleScreenBufferInfo(uv_tty_output_handle, &info))",
          "533:           continue;",
          "534:         uv_tty_update_virtual_window(&info);",
          "",
          "[Added Lines]",
          "531:         EnterCriticalSection(&uv_tty_output_lock);",
          "533:         if (uv_tty_output_handle != INVALID_HANDLE_VALUE &&",
          "534:             GetConsoleScreenBufferInfo(uv_tty_output_handle, &info)) {",
          "535:           uv_tty_update_virtual_window(&info);",
          "536:         }",
          "538:         LeaveCriticalSection(&uv_tty_output_lock);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1811:     handle->flags |= UV_HANDLE_SHUTTING;",
          "1812:   }",
          "1816:   if (handle->reqs_pending == 0) {",
          "1817:     uv_want_endgame(handle->loop, (uv_handle_t*) handle);",
          "",
          "[Removed Lines]",
          "1814:   uv__handle_start(handle);",
          "",
          "[Added Lines]",
          "1819:   uv__handle_closing(handle);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1854:            handle->read_raw_wait == NULL);",
          "1856:     assert(!(handle->flags & UV_HANDLE_CLOSED));",
          "1858:     uv__handle_close(handle);",
          "1859:   }",
          "1860: }",
          "",
          "[Removed Lines]",
          "1857:     uv__handle_stop(handle);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/uv/src/win/udp.c||deps/uv/src/win/udp.c": [
          "File: deps/uv/src/win/udp.c -> deps/uv/src/win/udp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "143:   uv_udp_recv_stop(handle);",
          "144:   closesocket(handle->socket);",
          "148:   if (handle->reqs_pending == 0) {",
          "149:     uv_want_endgame(loop, (uv_handle_t*) handle);",
          "",
          "[Removed Lines]",
          "146:   uv__handle_start(handle);",
          "",
          "[Added Lines]",
          "146:   uv__handle_closing(handle);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "155:   if (handle->flags & UV_HANDLE_CLOSING &&",
          "156:       handle->reqs_pending == 0) {",
          "157:     assert(!(handle->flags & UV_HANDLE_CLOSED));",
          "159:     uv__handle_close(handle);",
          "160:   }",
          "161: }",
          "",
          "[Removed Lines]",
          "158:     uv__handle_stop(handle);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/uv/test/benchmark-list.h||deps/uv/test/benchmark-list.h": [
          "File: deps/uv/test/benchmark-list.h -> deps/uv/test/benchmark-list.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: BENCHMARK_DECLARE (tcp_pump1_client)",
          "33: BENCHMARK_DECLARE (pipe_pump100_client)",
          "34: BENCHMARK_DECLARE (pipe_pump1_client)",
          "45: BENCHMARK_DECLARE (getaddrinfo)",
          "46: BENCHMARK_DECLARE (fs_stat)",
          "47: BENCHMARK_DECLARE (async1)",
          "",
          "[Removed Lines]",
          "35: BENCHMARK_DECLARE (udp_packet_storm_1v1)",
          "36: BENCHMARK_DECLARE (udp_packet_storm_1v10)",
          "37: BENCHMARK_DECLARE (udp_packet_storm_1v100)",
          "38: BENCHMARK_DECLARE (udp_packet_storm_1v1000)",
          "39: BENCHMARK_DECLARE (udp_packet_storm_10v10)",
          "40: BENCHMARK_DECLARE (udp_packet_storm_10v100)",
          "41: BENCHMARK_DECLARE (udp_packet_storm_10v1000)",
          "42: BENCHMARK_DECLARE (udp_packet_storm_100v100)",
          "43: BENCHMARK_DECLARE (udp_packet_storm_100v1000)",
          "44: BENCHMARK_DECLARE (udp_packet_storm_1000v1000)",
          "",
          "[Added Lines]",
          "37: BENCHMARK_DECLARE (udp_pummel_1v1)",
          "38: BENCHMARK_DECLARE (udp_pummel_1v10)",
          "39: BENCHMARK_DECLARE (udp_pummel_1v100)",
          "40: BENCHMARK_DECLARE (udp_pummel_1v1000)",
          "41: BENCHMARK_DECLARE (udp_pummel_10v10)",
          "42: BENCHMARK_DECLARE (udp_pummel_10v100)",
          "43: BENCHMARK_DECLARE (udp_pummel_10v1000)",
          "44: BENCHMARK_DECLARE (udp_pummel_100v100)",
          "45: BENCHMARK_DECLARE (udp_pummel_100v1000)",
          "46: BENCHMARK_DECLARE (udp_pummel_1000v1000)",
          "49: BENCHMARK_DECLARE (udp_timed_pummel_1v1)",
          "50: BENCHMARK_DECLARE (udp_timed_pummel_1v10)",
          "51: BENCHMARK_DECLARE (udp_timed_pummel_1v100)",
          "52: BENCHMARK_DECLARE (udp_timed_pummel_1v1000)",
          "53: BENCHMARK_DECLARE (udp_timed_pummel_10v10)",
          "54: BENCHMARK_DECLARE (udp_timed_pummel_10v100)",
          "55: BENCHMARK_DECLARE (udp_timed_pummel_10v1000)",
          "56: BENCHMARK_DECLARE (udp_timed_pummel_100v100)",
          "57: BENCHMARK_DECLARE (udp_timed_pummel_100v1000)",
          "58: BENCHMARK_DECLARE (udp_timed_pummel_1000v1000)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "97:   BENCHMARK_ENTRY  (pipe_pound_1000)",
          "98:   BENCHMARK_HELPER (pipe_pound_1000, pipe_echo_server)",
          "111:   BENCHMARK_ENTRY  (getaddrinfo)",
          "",
          "[Removed Lines]",
          "100:   BENCHMARK_ENTRY  (udp_packet_storm_1v1)",
          "101:   BENCHMARK_ENTRY  (udp_packet_storm_1v10)",
          "102:   BENCHMARK_ENTRY  (udp_packet_storm_1v100)",
          "103:   BENCHMARK_ENTRY  (udp_packet_storm_1v1000)",
          "104:   BENCHMARK_ENTRY  (udp_packet_storm_10v10)",
          "105:   BENCHMARK_ENTRY  (udp_packet_storm_10v100)",
          "106:   BENCHMARK_ENTRY  (udp_packet_storm_10v1000)",
          "107:   BENCHMARK_ENTRY  (udp_packet_storm_100v100)",
          "108:   BENCHMARK_ENTRY  (udp_packet_storm_100v1000)",
          "109:   BENCHMARK_ENTRY  (udp_packet_storm_1000v1000)",
          "",
          "[Added Lines]",
          "115:   BENCHMARK_ENTRY  (udp_pummel_1v1)",
          "116:   BENCHMARK_ENTRY  (udp_pummel_1v10)",
          "117:   BENCHMARK_ENTRY  (udp_pummel_1v100)",
          "118:   BENCHMARK_ENTRY  (udp_pummel_1v1000)",
          "119:   BENCHMARK_ENTRY  (udp_pummel_10v10)",
          "120:   BENCHMARK_ENTRY  (udp_pummel_10v100)",
          "121:   BENCHMARK_ENTRY  (udp_pummel_10v1000)",
          "122:   BENCHMARK_ENTRY  (udp_pummel_100v100)",
          "123:   BENCHMARK_ENTRY  (udp_pummel_100v1000)",
          "124:   BENCHMARK_ENTRY  (udp_pummel_1000v1000)",
          "126:   BENCHMARK_ENTRY  (udp_timed_pummel_1v1)",
          "127:   BENCHMARK_ENTRY  (udp_timed_pummel_1v10)",
          "128:   BENCHMARK_ENTRY  (udp_timed_pummel_1v100)",
          "129:   BENCHMARK_ENTRY  (udp_timed_pummel_1v1000)",
          "130:   BENCHMARK_ENTRY  (udp_timed_pummel_10v10)",
          "131:   BENCHMARK_ENTRY  (udp_timed_pummel_10v100)",
          "132:   BENCHMARK_ENTRY  (udp_timed_pummel_10v1000)",
          "133:   BENCHMARK_ENTRY  (udp_timed_pummel_100v100)",
          "134:   BENCHMARK_ENTRY  (udp_timed_pummel_100v1000)",
          "135:   BENCHMARK_ENTRY  (udp_timed_pummel_1000v1000)",
          "",
          "---------------"
        ],
        "deps/uv/test/benchmark-udp-packet-storm.c||deps/uv/test/benchmark-udp-packet-storm.c": [
          "File: deps/uv/test/benchmark-udp-packet-storm.c -> deps/uv/test/benchmark-udp-packet-storm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "deps/uv/test/benchmark-udp-pummel.c||deps/uv/test/benchmark-udp-pummel.c": [
          "File: deps/uv/test/benchmark-udp-pummel.c -> deps/uv/test/benchmark-udp-pummel.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: #include \"task.h\"",
          "23: #include \"uv.h\"",
          "25: #include <stdio.h>",
          "26: #include <stdlib.h>",
          "27: #include <string.h>",
          "33: #define BASE_PORT 12345",
          "35: struct sender_state {",
          "36:   struct sockaddr_in addr;",
          "37:   uv_udp_send_t send_req;",
          "38:   uv_udp_t udp_handle;",
          "39: };",
          "41: struct receiver_state {",
          "42:   struct sockaddr_in addr;",
          "43:   uv_udp_t udp_handle;",
          "44: };",
          "48: static int n_senders_;",
          "49: static int n_receivers_;",
          "50: static uv_buf_t bufs[5];",
          "51: static struct sender_state senders[1024];",
          "52: static struct receiver_state receivers[1024];",
          "54: static unsigned int send_cb_called;",
          "55: static unsigned int recv_cb_called;",
          "56: static unsigned int close_cb_called;",
          "57: static int timed;",
          "60: static uv_buf_t alloc_cb(uv_handle_t* handle, size_t suggested_size) {",
          "61:   static char slab[65536];",
          "62:   ASSERT(suggested_size <= sizeof slab);",
          "63:   return uv_buf_init(slab, sizeof slab);",
          "64: }",
          "67: static void send_cb(uv_udp_send_t* req, int status) {",
          "68:   struct sender_state* s;",
          "70:   ASSERT(req != NULL);",
          "72:   if (status != 0) {",
          "73:     ASSERT(status == -1);",
          "74:     ASSERT(uv_last_error(req->handle->loop).code == UV_EINTR);",
          "75:     return;",
          "76:   }",
          "78:   s = container_of(req, struct sender_state, send_req);",
          "79:   ASSERT(req->handle == &s->udp_handle);",
          "81:   if (timed)",
          "82:     goto send;",
          "84:   if (packet_counter == 0) {",
          "85:     uv_close((uv_handle_t*)&s->udp_handle, NULL);",
          "86:     return;",
          "87:   }",
          "89:   packet_counter--;",
          "91: send:",
          "92:   ASSERT(0 == uv_udp_send(&s->send_req,",
          "93:                           &s->udp_handle,",
          "94:                           bufs,",
          "95:                           ARRAY_SIZE(bufs),",
          "96:                           s->addr,",
          "97:                           send_cb));",
          "98:   send_cb_called++;",
          "99: }",
          "102: static void recv_cb(uv_udp_t* handle,",
          "103:                     ssize_t nread,",
          "104:                     uv_buf_t buf,",
          "105:                     struct sockaddr* addr,",
          "106:                     unsigned flags) {",
          "107:   if (nread == 0)",
          "108:     return;",
          "110:   if (nread == -1) {",
          "111:     ASSERT(uv_last_error(handle->loop).code == UV_ECANCELED);",
          "112:     return;",
          "113:   }",
          "115:   ASSERT(addr->sa_family == AF_INET);",
          "116:   ASSERT(!memcmp(buf.base, EXPECTED, nread));",
          "118:   recv_cb_called++;",
          "119: }",
          "122: static void close_cb(uv_handle_t* handle) {",
          "123:   ASSERT(handle != NULL);",
          "124:   close_cb_called++;",
          "125: }",
          "128: static void timeout_cb(uv_timer_t* timer, int status) {",
          "129:   int i;",
          "131:   for (i = 0; i < n_senders_; i++)",
          "132:     uv_close((uv_handle_t*)&senders[i].udp_handle, close_cb);",
          "134:   for (i = 0; i < n_receivers_; i++)",
          "135:     uv_close((uv_handle_t*)&receivers[i].udp_handle, close_cb);",
          "136: }",
          "139: static int do_packet_storm(int n_senders,",
          "140:                            int n_receivers,",
          "141:                            unsigned long timeout) {",
          "142:   uv_timer_t timer_handle;",
          "143:   uint64_t duration;",
          "144:   uv_loop_t* loop;",
          "145:   int i;",
          "147:   ASSERT(n_senders <= ARRAY_SIZE(senders));",
          "148:   ASSERT(n_receivers <= ARRAY_SIZE(receivers));",
          "150:   loop = uv_default_loop();",
          "152:   n_senders_ = n_senders;",
          "153:   n_receivers_ = n_receivers;",
          "155:   if (timeout) {",
          "156:     ASSERT(0 == uv_timer_init(loop, &timer_handle));",
          "157:     ASSERT(0 == uv_timer_start(&timer_handle, timeout_cb, timeout, 0));",
          "159:     uv_unref((uv_handle_t*)&timer_handle);",
          "160:     timed = 1;",
          "161:   }",
          "163:   for (i = 0; i < n_receivers; i++) {",
          "164:     struct receiver_state* s = receivers + i;",
          "165:     struct sockaddr_in addr = uv_ip4_addr(\"0.0.0.0\", BASE_PORT + i);",
          "166:     ASSERT(0 == uv_udp_init(loop, &s->udp_handle));",
          "167:     ASSERT(0 == uv_udp_bind(&s->udp_handle, addr, 0));",
          "168:     ASSERT(0 == uv_udp_recv_start(&s->udp_handle, alloc_cb, recv_cb));",
          "169:     uv_unref((uv_handle_t*)&s->udp_handle);",
          "170:   }",
          "172:   bufs[0] = uv_buf_init(EXPECTED + 0,  10);",
          "173:   bufs[1] = uv_buf_init(EXPECTED + 10, 10);",
          "174:   bufs[2] = uv_buf_init(EXPECTED + 20, 10);",
          "175:   bufs[3] = uv_buf_init(EXPECTED + 30, 10);",
          "176:   bufs[4] = uv_buf_init(EXPECTED + 40, 5);",
          "178:   for (i = 0; i < n_senders; i++) {",
          "179:     struct sender_state* s = senders + i;",
          "180:     s->addr = uv_ip4_addr(\"127.0.0.1\", BASE_PORT + (i % n_receivers));",
          "181:     ASSERT(0 == uv_udp_init(loop, &s->udp_handle));",
          "182:     ASSERT(0 == uv_udp_send(&s->send_req,",
          "183:                             &s->udp_handle,",
          "184:                             bufs,",
          "185:                             ARRAY_SIZE(bufs),",
          "186:                             s->addr,",
          "187:                             send_cb));",
          "188:   }",
          "190:   duration = uv_hrtime();",
          "191:   ASSERT(0 == uv_run(loop));",
          "192:   duration = uv_hrtime() - duration;",
          "195:   printf(\"udp_packet_storm_%dv%d: %.0f/s received, %.0f/s sent. \"",
          "196:          \"%u received, %u sent in %.1f seconds.\\n\",",
          "197:          n_receivers,",
          "198:          n_senders,",
          "199:          recv_cb_called / (duration / 1000.0),",
          "200:          send_cb_called / (duration / 1000.0),",
          "201:          recv_cb_called,",
          "202:          send_cb_called,",
          "203:          duration / 1000.0);",
          "205:   return 0;",
          "206: }",
          "209: #define X(a, b)                                                               \\",
          "210:   BENCHMARK_IMPL(udp_pummel_##a##v##b) {                                      \\",
          "211:     return do_packet_storm(a, b, 0);                                          \\",
          "212:   }                                                                           \\",
          "213:   BENCHMARK_IMPL(udp_timed_pummel_##a##v##b) {                                \\",
          "214:     return do_packet_storm(a, b, TEST_DURATION);                              \\",
          "215:   }",
          "217: X(1, 1)",
          "218: X(1, 10)",
          "219: X(1, 100)",
          "220: X(1, 1000)",
          "221: X(10, 10)",
          "222: X(10, 100)",
          "223: X(10, 1000)",
          "224: X(100, 10)",
          "225: X(100, 100)",
          "226: X(100, 1000)",
          "227: X(1000, 1000)",
          "229: #undef X",
          "",
          "---------------"
        ],
        "deps/uv/test/test-active.c||deps/uv/test/test-active.c": [
          "File: deps/uv/test/test-active.c -> deps/uv/test/test-active.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: #include \"uv.h\"",
          "23: #include \"task.h\"",
          "25: #include <stdio.h>",
          "26: #include <stdlib.h>",
          "29: static int close_cb_called = 0;",
          "32: static void close_cb(uv_handle_t* handle) {",
          "33:   ASSERT(handle != NULL);",
          "34:   close_cb_called++;",
          "35: }",
          "38: static void timer_cb(uv_timer_t* handle, int status) {",
          "39:   ASSERT(0 && \"timer_cb should not have been called\");",
          "40: }",
          "43: TEST_IMPL(active) {",
          "44:   int r;",
          "45:   uv_timer_t timer;",
          "47:   r = uv_timer_init(uv_default_loop(), &timer);",
          "48:   ASSERT(r == 0);",
          "50:   ASSERT(!uv_is_active((uv_handle_t*) &timer));",
          "51:   ASSERT(!uv_is_closing((uv_handle_t*) &timer));",
          "53:   r = uv_timer_start(&timer, timer_cb, 1000, 0);",
          "54:   ASSERT(r == 0);",
          "56:   ASSERT(uv_is_active((uv_handle_t*) &timer));",
          "57:   ASSERT(!uv_is_closing((uv_handle_t*) &timer));",
          "59:   r = uv_timer_stop(&timer);",
          "60:   ASSERT(r == 0);",
          "62:   ASSERT(!uv_is_active((uv_handle_t*) &timer));",
          "63:   ASSERT(!uv_is_closing((uv_handle_t*) &timer));",
          "65:   r = uv_timer_start(&timer, timer_cb, 1000, 0);",
          "66:   ASSERT(r == 0);",
          "68:   ASSERT(uv_is_active((uv_handle_t*) &timer));",
          "69:   ASSERT(!uv_is_closing((uv_handle_t*) &timer));",
          "71:   uv_close((uv_handle_t*) &timer, close_cb);",
          "73:   ASSERT(!uv_is_active((uv_handle_t*) &timer));",
          "74:   ASSERT(uv_is_closing((uv_handle_t*) &timer));",
          "76:   r = uv_run(uv_default_loop());",
          "77:   ASSERT(r == 0);",
          "79:   ASSERT(close_cb_called == 1);",
          "81:   return 0;",
          "82: }",
          "",
          "---------------"
        ],
        "deps/uv/test/test-list.h||deps/uv/test/test-list.h": [
          "File: deps/uv/test/test-list.h -> deps/uv/test/test-list.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "111: TEST_DECLARE   (pipe_ref3)",
          "112: TEST_DECLARE   (pipe_ref4)",
          "113: TEST_DECLARE   (process_ref)",
          "114: TEST_DECLARE   (async)",
          "115: TEST_DECLARE   (get_currentexe)",
          "116: TEST_DECLARE   (process_title)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "114: TEST_DECLARE   (active)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "328:   TEST_ENTRY  (loop_handles)",
          "329:   TEST_ENTRY  (walk_handles)",
          "331:   TEST_ENTRY  (async)",
          "333:   TEST_ENTRY  (get_currentexe)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "332:   TEST_ENTRY  (active)",
          "",
          "---------------"
        ],
        "deps/uv/uv.gyp||deps/uv/uv.gyp": [
          "File: deps/uv/uv.gyp -> deps/uv/uv.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "228:         'test/test-get-loadavg.c',",
          "229:         'test/task.h',",
          "230:         'test/test-util.c',",
          "231:         'test/test-async.c',",
          "233:         'test/test-callback-stack.c',",
          "234:         'test/test-callback-order.c',",
          "235:         'test/test-connection-fail.c',",
          "236:         'test/test-cwd-and-chdir.c',",
          "237:         'test/test-delayed-accept.c',",
          "238:         'test/test-fail-always.c',",
          "239:         'test/test-fs.c',",
          "240:         'test/test-fs-event.c',",
          "",
          "[Removed Lines]",
          "232:         'test/test-error.c',",
          "",
          "[Added Lines]",
          "231:         'test/test-active.c',",
          "238:         'test/test-error.c',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "343:         'test/benchmark-spawn.c',",
          "344:         'test/benchmark-thread.c',",
          "345:         'test/benchmark-tcp-write-batch.c',",
          "347:         'test/dns-server.c',",
          "348:         'test/echo-server.c',",
          "349:         'test/blackhole-server.c',",
          "",
          "[Removed Lines]",
          "346:         'test/benchmark-udp-packet-storm.c',",
          "",
          "[Added Lines]",
          "347:         'test/benchmark-udp-pummel.c',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8ba189b8d32e3c6489e142101d3e37dcbc551179",
      "candidate_info": {
        "commit_hash": "8ba189b8d32e3c6489e142101d3e37dcbc551179",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/8ba189b8d32e3c6489e142101d3e37dcbc551179",
        "files": [
          "lib/http.js",
          "lib/tls.js",
          "src/node_crypto.cc",
          "test/simple/test-tls-check-server-identity.js"
        ],
        "message": "tls: veryify server's identity",
        "before_after_code_files": [
          "lib/http.js||lihttp.js",
          "lib/tls.js||litls.js",
          "src/node_crypto.cc||src/node_crypto.cc",
          "test/simple/test-tls-check-server-identity.js||test/simple/test-tls-check-server-identity.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/http.js||lihttp.js": [
          "File: lib/http.js -> lihttp.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1123:   }",
          "1124:   if (this.requests[name] && this.requests[name].length) {",
          "1133:   }",
          "1134: };",
          "",
          "[Removed Lines]",
          "1126:     this.createSocket(",
          "1127:       name,",
          "1128:       host,",
          "1129:       port,",
          "1130:       localAddress,",
          "1131:       this.requests[name][0]",
          "1132:     ).emit('free');",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1141:   var self = this;",
          "1142:   OutgoingMessage.call(self);",
          "1145:   self.agent = options.agent === undefined ? globalAgent : options.agent;",
          "1147:   var defaultPort = options.defaultPort || 80;",
          "",
          "[Removed Lines]",
          "1144:   this.options = options;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/tls.js||litls.js": [
          "File: lib/tls.js -> litls.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: var crypto = require('crypto');",
          "23: var util = require('util');",
          "24: var net = require('net');",
          "25: var events = require('events');",
          "26: var Stream = require('stream');",
          "27: var END_OF_FILE = 42;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "78: }",
          "81: function SlabBuffer() {",
          "82:   this.create();",
          "83: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1149:   var sslcontext = crypto.createCredentials(options);",
          "1151:   convertNPNProtocols(options.NPNProtocols, this);",
          "1153:                             options.rejectUnauthorized === true ? true : false,",
          "1154:                             {",
          "1155:                               NPNProtocols: this.NPNProtocols,",
          "1157:                             });",
          "1159:   if (options.session) {",
          "",
          "[Removed Lines]",
          "1152:   var pair = new SecurePair(sslcontext, false, true,",
          "1156:                               servername: options.servername || options.host",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1179:     cleartext.npnProtocol = pair.npnProtocol;",
          "1181:     if (verifyError) {",
          "1182:       cleartext.authorized = false;",
          "1185:       if (pair._rejectUnauthorized) {",
          "1186:         cleartext.emit('error', verifyError);",
          "",
          "[Removed Lines]",
          "1183:       cleartext.authorizationError = verifyError;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/node_crypto.cc||src/node_crypto.cc": [
          "File: src/node_crypto.cc -> src/node_crypto.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1551:   }",
          "1552:   X509_free(peer_cert);",
          "",
          "[Removed Lines]",
          "1550:     return scope.Close(String::New(\"UNABLE_TO_GET_ISSUER_CERT\"));",
          "",
          "[Added Lines]",
          "1550:     return scope.Close(Exception::Error(",
          "1551:           String::New(\"UNABLE_TO_GET_ISSUER_CERT\")));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1673:       break;",
          "1674:   }",
          "1677: }",
          "",
          "[Removed Lines]",
          "1676:   return scope.Close(s);",
          "",
          "[Added Lines]",
          "1677:   return scope.Close(Exception::Error(s));",
          "",
          "---------------"
        ],
        "test/simple/test-tls-check-server-identity.js||test/simple/test-tls-check-server-identity.js": [
          "File: test/simple/test-tls-check-server-identity.js -> test/simple/test-tls-check-server-identity.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var common = require('../common');",
          "23: var assert = require('assert');",
          "24: var util = require('util');",
          "25: var tls = require('tls');",
          "27: var tests = [",
          "29:   { host: 'a.com', cert: { subject: { CN: 'a.com' } }, result: true },",
          "30:   { host: 'a.com', cert: { subject: { CN: 'A.COM' } }, result: true },",
          "31:   { host: 'a.com', cert: { subject: { CN: 'b.com' } }, result: false },",
          "32:   { host: 'a.com', cert: { subject: { CN: 'a.com.' } }, result: true },",
          "35:   { host: 'b.a.com', cert: { subject: { CN: '*.a.com' } }, result: false },",
          "38:   {",
          "39:     host: 'a.com', cert: {",
          "40:       subjectaltname: 'DNS:*',",
          "41:       subject: { CN: 'b.com' }",
          "42:     },",
          "43:     result: false",
          "44:   },",
          "45:   {",
          "46:     host: 'a.com', cert: {",
          "47:       subjectaltname: 'DNS:*.com',",
          "48:       subject: { CN: 'b.com' }",
          "49:     },",
          "50:     result: false",
          "51:   },",
          "52:   {",
          "53:     host: 'a.co.uk', cert: {",
          "54:       subjectaltname: 'DNS:*.co.uk',",
          "55:       subject: { CN: 'b.com' }",
          "56:     },",
          "57:     result: true",
          "58:   },",
          "59:   {",
          "60:     host: 'a.com', cert: {",
          "61:       subjectaltname: 'DNS:*.a.com',",
          "62:       subject: { CN: 'a.com' }",
          "63:     },",
          "64:     result: true",
          "65:   },",
          "66:   {",
          "67:     host: 'a.com', cert: {",
          "68:       subjectaltname: 'DNS:*.a.com',",
          "69:       subject: { CN: 'b.com' }",
          "70:     },",
          "71:     result: false",
          "72:   },",
          "73:   {",
          "74:     host: 'a.com', cert: {",
          "75:       subjectaltname: 'DNS:a.com',",
          "76:       subject: { CN: 'b.com' }",
          "77:     },",
          "78:     result: true",
          "79:   },",
          "80:   {",
          "81:     host: 'a.com', cert: {",
          "82:       subjectaltname: 'DNS:A.COM',",
          "83:       subject: { CN: 'b.com' }",
          "84:     },",
          "85:     result: true",
          "86:   },",
          "89:   {",
          "90:     host: 'a.com', cert: {",
          "91:       subjectaltname: 'DNS:*.a.com',",
          "92:       subject: {}",
          "93:     },",
          "94:     result: false",
          "95:   },",
          "96:   {",
          "97:     host: 'b.a.com', cert: {",
          "98:       subjectaltname: 'DNS:*.a.com',",
          "99:       subject: {}",
          "100:     },",
          "101:     result: true",
          "102:   },",
          "103:   {",
          "104:     host: 'c.b.a.com', cert: {",
          "105:       subjectaltname: 'DNS:*.a.com',",
          "106:       subject: {}",
          "107:     },",
          "108:     result: false",
          "109:   },",
          "110:   {",
          "111:     host: 'b.a.com', cert: {",
          "112:       subjectaltname: 'DNS:*b.a.com',",
          "113:       subject: {}",
          "114:     },",
          "115:     result: true",
          "116:   },",
          "117:   {",
          "118:     host: 'a-cb.a.com', cert: {",
          "119:       subjectaltname: 'DNS:*b.a.com',",
          "120:       subject: {}",
          "121:     },",
          "122:     result: true",
          "123:   },",
          "124:   {",
          "125:     host: 'a.b.a.com', cert: {",
          "126:       subjectaltname: 'DNS:*b.a.com',",
          "127:       subject: {}",
          "128:     },",
          "129:     result: false",
          "130:   },",
          "132:   {",
          "133:     host: 'a.b.a.com', cert: {",
          "134:       subjectaltname: 'DNS:*b.a.com, DNS:a.b.a.com',",
          "135:       subject: {}",
          "136:     },",
          "137:     result: true",
          "138:   },",
          "140:   {",
          "141:     host: 'a.b.a.com', cert: {",
          "142:       subjectaltname: 'URI:http://a.b.a.com/',",
          "143:       subject: {}",
          "144:     },",
          "145:     result: true",
          "146:   },",
          "147:   {",
          "148:     host: 'a.b.a.com', cert: {",
          "149:       subjectaltname: 'URI:http://*.b.a.com/',",
          "150:       subject: {}",
          "151:     },",
          "152:     result: false",
          "153:   },",
          "155:   {",
          "156:     host: 'a.b.a.com', cert: {",
          "157:       subjectaltname: 'IP Address:127.0.0.1',",
          "158:       subject: {}",
          "159:     },",
          "160:     result: false",
          "161:   },",
          "162:   {",
          "163:     host: '127.0.0.1', cert: {",
          "164:       subjectaltname: 'IP Address:127.0.0.1',",
          "165:       subject: {}",
          "166:     },",
          "167:     result: true",
          "168:   },",
          "169:   {",
          "170:     host: '127.0.0.2', cert: {",
          "171:       subjectaltname: 'IP Address:127.0.0.1',",
          "172:       subject: {}",
          "173:     },",
          "174:     result: false",
          "175:   },",
          "176:   {",
          "177:     host: '127.0.0.1', cert: {",
          "178:       subjectaltname: 'DNS:a.com',",
          "179:       subject: {}",
          "180:     },",
          "181:     result: false",
          "182:   },",
          "183: ];",
          "185: tests.forEach(function(test, i) {",
          "186:   assert.equal(tls.checkServerIdentity(test.host, test.cert),",
          "187:                test.result,",
          "188:                'Test#' + i + ' failed: ' + util.inspect(test));",
          "189: });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7535e3930a6d78674fb163d62ab818f8cb924df1",
      "candidate_info": {
        "commit_hash": "7535e3930a6d78674fb163d62ab818f8cb924df1",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/7535e3930a6d78674fb163d62ab818f8cb924df1",
        "files": [
          "benchmark/http_simple_auto.js"
        ],
        "message": "bench: add http_simple_auto benchmark\n\nStarts a server and benchmarks it with ab.",
        "before_after_code_files": [
          "benchmark/http_simple_auto.js||benchmark/http_simple_auto.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "benchmark/http_simple_auto.js||benchmark/http_simple_auto.js": [
          "File: benchmark/http_simple_auto.js -> benchmark/http_simple_auto.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10: var path = require(\"path\");",
          "11: var http = require(\"http\");",
          "12: var spawn = require(\"child_process\").spawn;",
          "14: var port = parseInt(process.env.PORT || 8000);",
          "16: var fixed = \"\"",
          "17: for (var i = 0; i < 20*1024; i++) {",
          "18:   fixed += \"C\";",
          "19: }",
          "21: var stored = {};",
          "22: var storedBuffer = {};",
          "24: var server = http.createServer(function (req, res) {",
          "25:   var commands = req.url.split(\"/\");",
          "26:   var command = commands[1];",
          "27:   var body = \"\";",
          "28:   var arg = commands[2];",
          "29:   var n_chunks = parseInt(commands[3], 10);",
          "30:   var status = 200;",
          "32:   if (command == \"bytes\") {",
          "33:     var n = parseInt(arg, 10)",
          "34:     if (n <= 0)",
          "35:       throw \"bytes called with n <= 0\"",
          "36:     if (stored[n] === undefined) {",
          "37:       stored[n] = \"\";",
          "38:       for (var i = 0; i < n; i++) {",
          "39:         stored[n] += \"C\"",
          "40:       }",
          "41:     }",
          "42:     body = stored[n];",
          "44:   } else if (command == \"buffer\") {",
          "45:     var n = parseInt(arg, 10)",
          "46:     if (n <= 0) throw new Error(\"bytes called with n <= 0\");",
          "47:     if (storedBuffer[n] === undefined) {",
          "48:       storedBuffer[n] = new Buffer(n);",
          "49:       for (var i = 0; i < n; i++) {",
          "50:         storedBuffer[n][i] = \"C\".charCodeAt(0);",
          "51:       }",
          "52:     }",
          "53:     body = storedBuffer[n];",
          "55:   } else if (command == \"quit\") {",
          "56:     res.connection.server.close();",
          "57:     body = \"quitting\";",
          "59:   } else if (command == \"fixed\") {",
          "60:     body = fixed;",
          "62:   } else if (command == \"echo\") {",
          "63:     res.writeHead(200, { \"Content-Type\": \"text/plain\",",
          "64:                          \"Transfer-Encoding\": \"chunked\" });",
          "65:     req.pipe(res);",
          "66:     return;",
          "68:   } else {",
          "69:     status = 404;",
          "70:     body = \"not found\\n\";",
          "71:   }",
          "75:   if (n_chunks > 0) {",
          "76:     res.writeHead(status, { \"Content-Type\": \"text/plain\",",
          "77:                             \"Transfer-Encoding\": \"chunked\" });",
          "79:     var len = body.length;",
          "80:     var step = ~~(len / n_chunks) || len;",
          "82:     for (var i = 0; i < len; i += step) {",
          "83:       res.write(body.slice(i, i + step));",
          "84:     }",
          "86:     res.end();",
          "87:   } else {",
          "88:     var content_length = body.length.toString();",
          "90:     res.writeHead(status, { \"Content-Type\": \"text/plain\",",
          "91:                             \"Content-Length\": content_length });",
          "92:     res.end(body);",
          "93:   }",
          "95: });",
          "97: server.listen(port, function () {",
          "98:   var url = 'http://127.0.0.1:' + port + '/';",
          "100:   var n = process.argv.length - 1;",
          "101:   process.argv[n] = url + process.argv[n];",
          "103:   var cp = spawn('ab', process.argv.slice(2));",
          "104:   cp.stdout.pipe(process.stdout);",
          "105:   cp.stderr.pipe(process.stderr);",
          "106:   cp.on('exit', function() {",
          "107:     server.close();",
          "108:   });",
          "109: });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "963459d736d6594de641aff4d8767da113359457",
      "candidate_info": {
        "commit_hash": "963459d736d6594de641aff4d8767da113359457",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/963459d736d6594de641aff4d8767da113359457",
        "files": [
          "doc/api/_toc.markdown",
          "doc/api/all.markdown",
          "doc/api/domain.markdown",
          "lib/domain.js",
          "lib/events.js",
          "lib/timers.js",
          "node.gyp",
          "src/node.js",
          "test/simple/test-domain-http-server.js",
          "test/simple/test-domain-multi.js",
          "test/simple/test-domain.js"
        ],
        "message": "Domain feature\n\nThis is a squashed commit of the main work done on the domains-wip branch.\n\nThe original commit messages are preserved for posterity:\n\n* Implicitly add EventEmitters to active domain\n* Implicitly add timers to active domain\n* domain: add members, remove ctor cb\n* Don't hijack bound callbacks for Domain error events\n* Add dispose method\n* Add domain.remove(ee) method\n* A test of multiple domains in process at once\n* Put the active domain on the process object\n* Only intercept error arg if explicitly requested\n* Typo\n* Don't auto-add new domains to the current domain\n\n    While an automatic parent/child relationship is sort of neat,\n    and leads to some nice error-bubbling characteristics, it also\n    results in keeping a reference to every EE and timer created,\n    unless domains are explicitly disposed of.\n\n* Explicitly adding one domain to another is still fine, of course.\n* Don't allow circular domain->domain memberships\n* Disposing of a domain removes it from its parent\n* Domain disposal turns functions into no-ops\n* More documentation of domains\n* More thorough dispose() semantics\n* An example using domains in an HTTP server\n* Don't handle errors on a disposed domain\n* Need to push, even if the same domain is entered multiple times\n* Array.push is too slow for the EE Ctor\n* lint domain\n* domain: docs\n* Also call abort and destroySoon to clean up event emitters\n* domain: Wrap destroy methods in a try/catch\n* Attach tick callbacks to active domain\n* domain: Only implicitly bind timers, not explicitly\n* domain: Don't fire timers when disposed.\n* domain: Simplify naming so that MakeCallback works on Timers\n* Add setInterval and nextTick to domain test\n* domain: Make stack private",
        "before_after_code_files": [
          "lib/domain.js||lidomain.js",
          "lib/events.js||lievents.js",
          "lib/timers.js||litimers.js",
          "node.gyp||node.gyp",
          "src/node.js||src/node.js",
          "test/simple/test-domain-http-server.js||test/simple/test-domain-http-server.js",
          "test/simple/test-domain-multi.js||test/simple/test-domain-multi.js",
          "test/simple/test-domain.js||test/simple/test-domain.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/domain.js||lidomain.js": [
          "File: lib/domain.js -> lidomain.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/events.js||lievents.js": [
          "File: lib/events.js -> lievents.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: var isArray = Array.isArray;",
          "25: exports.EventEmitter = EventEmitter;",
          "",
          "[Removed Lines]",
          "24: function EventEmitter() { }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "44:     if (!this._events || !this._events.error ||",
          "45:         (isArray(this._events.error) && !this._events.error.length))",
          "46:     {",
          "47:       if (arguments[1] instanceof Error) {",
          "48:         throw arguments[1]; // Unhandled 'error' event",
          "49:       } else {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "58:   if (!handler) return false;",
          "60:   if (typeof handler == 'function') {",
          "61:     switch (arguments.length) {",
          "63:       case 1:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "76:         for (var i = 1; i < l; i++) args[i - 1] = arguments[i];",
          "77:         handler.apply(this, args);",
          "78:     }",
          "79:     return true;",
          "81:   } else if (isArray(handler)) {",
          "82:     var l = arguments.length;",
          "83:     var args = new Array(l - 1);",
          "84:     for (var i = 1; i < l; i++) args[i - 1] = arguments[i];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "87:     for (var i = 0, l = listeners.length; i < l; i++) {",
          "88:       listeners[i].apply(this, args);",
          "89:     }",
          "90:     return true;",
          "92:   } else {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/timers.js||litimers.js": [
          "File: lib/timers.js -> litimers.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "96:           try {",
          "97:             first._onTimeout();",
          "98:           } catch (e) {",
          "99:             if (!process.listeners('uncaughtException').length) throw e;",
          "100:             process.emit('uncaughtException', e);",
          "101:           }",
          "102:         }",
          "103:       }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "192:     }",
          "193:   }",
          "195:   exports.active(timer);",
          "197:   return timer;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "213: exports.setInterval = function(callback, repeat) {",
          "214:   var timer = new Timer();",
          "216:   repeat = ~~repeat;",
          "217:   if (repeat < 1 || repeat > TIMEOUT_MAX) {",
          "218:     repeat = 1; // schedule on next tick, follows browser behaviour",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "node.gyp||node.gyp": [
          "File: node.gyp -> node.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:       'lib/cluster.js',",
          "24:       'lib/dgram.js',",
          "25:       'lib/dns.js',",
          "26:       'lib/events.js',",
          "27:       'lib/freelist.js',",
          "28:       'lib/fs.js',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26:       'lib/domain.js',",
          "",
          "---------------"
        ],
        "src/node.js||src/node.js": [
          "File: src/node.js -> src/node.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "235:       nextTickQueue = [];",
          "237:       try {",
          "239:       }",
          "240:       catch (e) {",
          "241:         if (i + 1 < l) {",
          "",
          "[Removed Lines]",
          "238:         for (var i = 0; i < l; i++) q[i]();",
          "",
          "[Added Lines]",
          "238:         for (var i = 0; i < l; i++) {",
          "239:           var tock = q[i];",
          "240:           var callback = tock.callback;",
          "241:           if (tock.domain) tock.domain.enter();",
          "242:           callback();",
          "243:           if (tock.domain) tock.domain.exit();",
          "244:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "249:     };",
          "251:     process.nextTick = function(callback) {",
          "253:       process._needTickCallback();",
          "254:     };",
          "255:   };",
          "",
          "[Removed Lines]",
          "252:       nextTickQueue.push(callback);",
          "",
          "[Added Lines]",
          "258:       var tock = { callback: callback };",
          "259:       if (process.domain) tock.domain = process.domain;",
          "260:       nextTickQueue.push(tock);",
          "",
          "---------------"
        ],
        "test/simple/test-domain-http-server.js||test/simple/test-domain-http-server.js": [
          "File: test/simple/test-domain-http-server.js -> test/simple/test-domain-http-server.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var domain = require('domain');",
          "23: var http = require('http');",
          "24: var assert = require('assert');",
          "25: var common = require('../common.js');",
          "27: var objects = { foo: 'bar', baz: {}, num: 42, arr: [1,2,3] };",
          "28: objects.baz.asdf = objects;",
          "30: var serverCaught = 0;",
          "31: var clientCaught = 0",
          "33: var server = http.createServer(function(req, res) {",
          "34:   var dom = domain.create();",
          "35:   dom.add(req);",
          "36:   dom.add(res);",
          "38:   dom.on('error', function(er) {",
          "39:     serverCaught++;",
          "40:     console.log('server error', er);",
          "42:     res.writeHead(500, {'content-type':'text/plain'});",
          "43:     res.end(er.stack || er.message || 'Unknown error');",
          "44:   });",
          "46:   var data;",
          "47:   dom.run(function() {",
          "50:     data = JSON.stringify(objects[req.url.replace(/[^a-z]/g, '')]);",
          "53:     assert(data !== undefined, 'Data should not be undefined');",
          "55:     res.writeHead(200);",
          "56:     res.end(data);",
          "57:   });",
          "58: });",
          "60: server.listen(common.PORT, next);",
          "62: function next() {",
          "63:   console.log('listening on localhost:%d', common.PORT);",
          "66:   var dom = domain.create();",
          "67:   var requests = 0;",
          "68:   var responses = 0;",
          "70:   makeReq('/');",
          "71:   makeReq('/foo');",
          "72:   makeReq('/arr');",
          "73:   makeReq('/baz');",
          "74:   makeReq('/num');",
          "76:   function makeReq(p) {",
          "77:     requests++;",
          "79:     var dom = domain.create();",
          "80:     dom.on('error', function(er) {",
          "81:       clientCaught++;",
          "82:       console.log('client error', er);",
          "84:       dom.dispose();",
          "85:     });",
          "87:     var req = http.get({ host: 'localhost', port: common.PORT, path: p });",
          "88:     dom.add(req);",
          "89:     req.on('response', function(res) {",
          "90:       responses++;",
          "91:       console.error('requests=%d responses=%d', requests, responses);",
          "92:       if (responses === requests) {",
          "93:         console.error('done, closing server');",
          "95:         server.close();",
          "96:       }",
          "98:       dom.add(res);",
          "99:       var d = '';",
          "100:       res.on('data', function(c) {",
          "101:         d += c;",
          "102:       });",
          "103:       res.on('end', function() {",
          "104:         d = JSON.parse(d);",
          "105:         console.log('json!', d);",
          "106:       });",
          "107:     });",
          "108:   }",
          "109: }",
          "111: process.on('exit', function() {",
          "112:   assert.equal(serverCaught, 2);",
          "113:   assert.equal(clientCaught, 2);",
          "114:   console.log('ok');",
          "115: });",
          "",
          "---------------"
        ],
        "test/simple/test-domain-multi.js||test/simple/test-domain-multi.js": [
          "File: test/simple/test-domain-multi.js -> test/simple/test-domain-multi.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: var common = require('../common');",
          "26: var assert = require('assert');",
          "27: var domain = require('domain');",
          "28: var events = require('events');",
          "30: var caughtA = false;",
          "31: var caughtB = false;",
          "32: var caughtC = false;",
          "35: var a = domain.create();",
          "36: a.enter(); // this will be our \"root\" domain",
          "37: a.on('error', function(er) {",
          "38:   caughtA = true;",
          "39:   console.log('This should not happen');",
          "40:   throw er;",
          "41: });",
          "44: var http = require('http');",
          "45: var server = http.createServer(function (req, res) {",
          "49:   var b = domain.create();",
          "54:   b.add(req);",
          "55:   b.add(res);",
          "57:   b.on('error', function (er) {",
          "58:     caughtB = true;",
          "59:     console.error('Error encountered', er)",
          "60:     if (res) {",
          "61:       res.writeHead(500);",
          "62:       res.end('An error occurred');",
          "63:     }",
          "65:     server.close();",
          "66:   });",
          "71:   res.write('HELLO\\n', b.bind(function() {",
          "72:     throw new Error('this kills domain B, not A');",
          "73:   }));",
          "75: }).listen(common.PORT);",
          "77: var c = domain.create();",
          "78: var req = http.get({ host: 'localhost', port: common.PORT })",
          "81: c.add(req);",
          "83: req.on('response', function(res) {",
          "84:   console.error('got response');",
          "86:   c.add(res);",
          "87:   res.pipe(process.stdout);",
          "88: });",
          "90: c.on('error', function(er) {",
          "91:   caughtC = true;",
          "92:   console.error('Error on c', er.message);",
          "93: });",
          "95: process.on('exit', function() {",
          "96:   assert.equal(caughtA, false);",
          "97:   assert.equal(caughtB, true)",
          "98:   assert.equal(caughtC, true)",
          "99:   console.log('ok - Errors went where they were supposed to go');",
          "100: });",
          "",
          "---------------"
        ],
        "test/simple/test-domain.js||test/simple/test-domain.js": [
          "File: test/simple/test-domain.js -> test/simple/test-domain.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: var common = require('../common');",
          "26: var assert = require('assert');",
          "27: var domain = require('domain');",
          "28: var events = require('events');",
          "29: var caught = 0;",
          "30: var expectCaught = 8;",
          "32: var d = new domain.Domain();",
          "33: var e = new events.EventEmitter();",
          "35: d.on('error', function(er) {",
          "36:   console.error('caught', er);",
          "37:   switch (er.message) {",
          "38:     case 'emitted':",
          "39:       assert.equal(er.domain, d);",
          "40:       assert.equal(er.domain_emitter, e);",
          "41:       assert.equal(er.domain_thrown, false);",
          "42:       break;",
          "44:     case 'bound':",
          "45:       assert.ok(!er.domain_emitter);",
          "46:       assert.equal(er.domain, d);",
          "47:       assert.equal(er.domain_bound, fn);",
          "48:       assert.equal(er.domain_thrown, false);",
          "49:       break;",
          "51:     case 'thrown':",
          "52:       assert.ok(!er.domain_emitter);",
          "53:       assert.equal(er.domain, d);",
          "54:       assert.equal(er.domain_thrown, true);",
          "55:       break;",
          "57:     case \"ENOENT, open 'this file does not exist'\":",
          "58:       assert.equal(er.domain, d);",
          "59:       assert.equal(er.domain_thrown, false);",
          "60:       assert.equal(typeof er.domain_bound, 'function');",
          "61:       assert.ok(!er.domain_emitter);",
          "62:       assert.equal(er.code, 'ENOENT');",
          "63:       assert.equal(er.path, 'this file does not exist');",
          "64:       assert.equal(typeof er.errno, 'number');",
          "65:       break;",
          "67:     case \"ENOENT, open 'stream for nonexistent file'\":",
          "68:       assert.equal(typeof er.errno, 'number');",
          "69:       assert.equal(er.code, 'ENOENT');",
          "70:       assert.equal(er.path, 'stream for nonexistent file');",
          "71:       assert.equal(er.domain, d);",
          "72:       assert.equal(er.domain_emitter, fst);",
          "73:       assert.ok(!er.domain_bound);",
          "74:       assert.equal(er.domain_thrown, false);",
          "75:       break;",
          "77:     case 'implicit':",
          "78:       assert.equal(er.domain_emitter, implicit);",
          "79:       assert.equal(er.domain, d);",
          "80:       assert.equal(er.domain_thrown, false);",
          "81:       assert.ok(!er.domain_bound);",
          "82:       break;",
          "84:     case 'implicit timer':",
          "85:       assert.equal(er.domain, d);",
          "86:       assert.equal(er.domain_thrown, true);",
          "87:       assert.ok(!er.domain_emitter);",
          "88:       assert.ok(!er.domain_bound);",
          "89:       break;",
          "91:     case 'Cannot call method \\'isDirectory\\' of undefined':",
          "92:       assert.equal(er.domain, d);",
          "93:       assert.ok(!er.domain_emitter);",
          "94:       assert.ok(!er.domain_bound);",
          "95:       break;",
          "97:     default:",
          "98:       console.error('unexpected error, throwing %j', er.message);",
          "99:       throw er;",
          "100:   }",
          "102:   caught++;",
          "103: });",
          "105: process.on('exit', function() {",
          "106:   console.error('exit');",
          "107:   assert.equal(caught, expectCaught);",
          "108:   console.log('ok');",
          "109: });",
          "114: d.add(e);",
          "115: e.emit('error', new Error('emitted'));",
          "122: function fn(er) {",
          "123:   throw new Error('This function should never be called!');",
          "124:   process.exit(1);",
          "125: }",
          "127: var bound = d.intercept(fn);",
          "128: bound(new Error('bound'));",
          "137: function thrower() {",
          "138:   throw new Error('thrown');",
          "139: }",
          "140: setTimeout(d.bind(thrower), 100);",
          "145: var fs = require('fs');",
          "146: fs.open('this file does not exist', 'r', d.intercept(function(er) {",
          "147:   console.error('should not get here!', er);",
          "148:   throw new Error('should not get here!');",
          "149: }, true));",
          "157: d.run(function() {",
          "158:   process.nextTick(function() {",
          "159:     var i = setInterval(function () {",
          "160:       clearInterval(i);",
          "161:       setTimeout(function() {",
          "162:         fs.stat('this file does not exist', function(er, stat) {",
          "165:           console.log(stat.isDirectory());",
          "166:         });",
          "167:       });",
          "168:     });",
          "169:   });",
          "170: });",
          "175: var implicit;",
          "177: d.run(function() {",
          "178:   implicit = new events.EventEmitter;",
          "179: });",
          "181: setTimeout(function() {",
          "183:   implicit.emit('error', new Error('implicit'));",
          "184: }, 10);",
          "189: d.run(function() {",
          "190:   setTimeout(function() {",
          "191:     throw new Error('implicit timer');",
          "192:   });",
          "193: });",
          "197: var fst = fs.createReadStream('stream for nonexistent file')",
          "198: d.add(fst)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8c97ad4c30e8e3f97c90dbc964478614db1fcd94",
      "candidate_info": {
        "commit_hash": "8c97ad4c30e8e3f97c90dbc964478614db1fcd94",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/8c97ad4c30e8e3f97c90dbc964478614db1fcd94",
        "files": [
          "src/node.cc"
        ],
        "message": "node: fix signedness compiler warnings",
        "before_after_code_files": [
          "src/node.cc||src/node.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.cc||src/node.cc": [
          "File: src/node.cc -> src/node.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1670:   r = snprintf(symbol, sizeof symbol, \"%s_module\", base);",
          "1672:     Local<Value> exception =",
          "1673:         Exception::Error(String::New(\"Out of memory.\"));",
          "1674:     return ThrowException(exception);",
          "",
          "[Removed Lines]",
          "1671:   if (r <= 0 || r >= sizeof symbol) {",
          "",
          "[Added Lines]",
          "1671:   if (r <= 0 || static_cast<size_t>(r) >= sizeof symbol) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}