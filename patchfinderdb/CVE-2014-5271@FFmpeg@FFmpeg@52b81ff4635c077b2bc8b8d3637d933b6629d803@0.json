{
  "cve_id": "CVE-2014-5271",
  "cve_desc": "Heap-based buffer overflow in the encode_slice function in libavcodec/proresenc_kostya.c in FFMpeg before 1.1.14, 1.2.x before 1.2.8, 2.x before 2.2.7, and 2.3.x before 2.3.3 and Libav before 10.5 allows remote attackers to cause a denial of service (crash) or possibly execute arbitrary code via unspecified vectors.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "52b81ff4635c077b2bc8b8d3637d933b6629d803",
  "patch_info": {
    "commit_hash": "52b81ff4635c077b2bc8b8d3637d933b6629d803",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/52b81ff4635c077b2bc8b8d3637d933b6629d803",
    "files": [
      "libavcodec/proresenc_kostya.c"
    ],
    "message": "proresenc_kostya: report buffer overflow\n\nIf the allocated size, despite best efforts, is too small, exit\nwith the appropriate error.\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
    "before_after_code_files": [
      "libavcodec/proresenc_kostya.c||libavcodec/proresenc_kostya.c"
    ]
  },
  "patch_diff": {
    "libavcodec/proresenc_kostya.c||libavcodec/proresenc_kostya.c": [
      "File: libavcodec/proresenc_kostya.c -> libavcodec/proresenc_kostya.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "570:                                           quant);",
      "571:         }",
      "572:         total_size += sizes[i];",
      "573:     }",
      "574:     return total_size;",
      "575: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "573:         if (put_bits_left(pb) < 0) {",
      "574:             av_log(avctx, AV_LOG_ERROR, \"Serious underevaluation of\"",
      "575:                    \"required buffer size\");",
      "576:             return AVERROR_BUFFER_TOO_SMALL;",
      "577:         }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "940:     avctx->coded_frame->pict_type = AV_PICTURE_TYPE_I;",
      "941:     avctx->coded_frame->key_frame = 1;",
      "946:         return ret;",
      "948:     orig_buf = pkt->data;",
      "",
      "[Removed Lines]",
      "943:     pkt_size = ctx->frame_size_upper_bound + FF_MIN_BUFFER_SIZE;",
      "945:     if ((ret = ff_alloc_packet2(avctx, pkt, pkt_size)) < 0)",
      "",
      "[Added Lines]",
      "948:     pkt_size = ctx->frame_size_upper_bound;",
      "950:     if ((ret = ff_alloc_packet2(avctx, pkt, pkt_size + FF_MIN_BUFFER_SIZE)) < 0)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1019:                 slice_hdr = buf;",
      "1020:                 buf += slice_hdr_size - 1;",
      "1021:                 init_put_bits(&pb, buf, (pkt_size - (buf - orig_buf)) * 8);",
      "1024:                 bytestream_put_byte(&slice_hdr, q);",
      "1025:                 slice_size = slice_hdr_size + sizes[ctx->num_planes - 1];",
      "",
      "[Removed Lines]",
      "1022:                 encode_slice(avctx, pic, &pb, sizes, x, y, q, mbs_per_slice);",
      "",
      "[Added Lines]",
      "1027:                 ret = encode_slice(avctx, pic, &pb, sizes, x, y, q, mbs_per_slice);",
      "1028:                 if (ret < 0)",
      "1029:                     return ret;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "18342848f7fa0c98f81049495adaf3d528b325f5",
      "candidate_info": {
        "commit_hash": "18342848f7fa0c98f81049495adaf3d528b325f5",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/18342848f7fa0c98f81049495adaf3d528b325f5",
        "files": [
          "libavcodec/proresenc_kostya.c"
        ],
        "message": "proresenc_kostya: report buffer overflow\n\nIf the allocated size, despite best efforts, is too small, exit\nwith the appropriate error.\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit 52b81ff4635c077b2bc8b8d3637d933b6629d803)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/proresenc_kostya.c||libavcodec/proresenc_kostya.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/proresenc_kostya.c||libavcodec/proresenc_kostya.c"
          ],
          "candidate": [
            "libavcodec/proresenc_kostya.c||libavcodec/proresenc_kostya.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/proresenc_kostya.c||libavcodec/proresenc_kostya.c": [
          "File: libavcodec/proresenc_kostya.c -> libavcodec/proresenc_kostya.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "456:                                       num_cblocks, plane_factor,",
          "457:                                       qmat);",
          "458:         total_size += sizes[i];",
          "459:     }",
          "460:     return total_size;",
          "461: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "459:         if (put_bits_left(pb) < 0) {",
          "460:             av_log(avctx, AV_LOG_ERROR, \"Serious underevaluation of\"",
          "461:                    \"required buffer size\");",
          "462:             return AVERROR_BUFFER_TOO_SMALL;",
          "463:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "754:     avctx->coded_frame->pict_type = AV_PICTURE_TYPE_I;",
          "755:     avctx->coded_frame->key_frame = 1;",
          "760:         return ret;",
          "762:     orig_buf = pkt->data;",
          "",
          "[Removed Lines]",
          "757:     pkt_size = ctx->frame_size_upper_bound + FF_MIN_BUFFER_SIZE;",
          "759:     if ((ret = ff_alloc_packet2(avctx, pkt, pkt_size)) < 0)",
          "",
          "[Added Lines]",
          "762:     pkt_size = ctx->frame_size_upper_bound;",
          "764:     if ((ret = ff_alloc_packet2(avctx, pkt, pkt_size + FF_MIN_BUFFER_SIZE)) < 0)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "833:                 slice_hdr = buf;",
          "834:                 buf += slice_hdr_size - 1;",
          "835:                 init_put_bits(&pb, buf, (pkt_size - (buf - orig_buf)) * 8);",
          "838:                 bytestream_put_byte(&slice_hdr, q);",
          "839:                 slice_size = slice_hdr_size + sizes[ctx->num_planes - 1];",
          "",
          "[Removed Lines]",
          "836:                 encode_slice(avctx, pic, &pb, sizes, x, y, q, mbs_per_slice);",
          "",
          "[Added Lines]",
          "841:                 ret = encode_slice(avctx, pic, &pb, sizes, x, y, q, mbs_per_slice);",
          "842:                 if (ret < 0)",
          "843:                     return ret;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "11a61dd0e2b51bdb610a80e322667c3284f6d761",
      "candidate_info": {
        "commit_hash": "11a61dd0e2b51bdb610a80e322667c3284f6d761",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/11a61dd0e2b51bdb610a80e322667c3284f6d761",
        "files": [
          "libavcodec/proresenc_kostya.c"
        ],
        "message": "proresenc_kostya: report buffer overflow\n\nIf the allocated size, despite best efforts, is too small, exit\nwith the appropriate error.\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit 52b81ff4635c077b2bc8b8d3637d933b6629d803)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/proresenc_kostya.c||libavcodec/proresenc_kostya.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/proresenc_kostya.c||libavcodec/proresenc_kostya.c"
          ],
          "candidate": [
            "libavcodec/proresenc_kostya.c||libavcodec/proresenc_kostya.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/proresenc_kostya.c||libavcodec/proresenc_kostya.c": [
          "File: libavcodec/proresenc_kostya.c -> libavcodec/proresenc_kostya.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "455:                                       num_cblocks, plane_factor,",
          "456:                                       qmat);",
          "457:         total_size += sizes[i];",
          "458:     }",
          "459:     return total_size;",
          "460: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "458:         if (put_bits_left(pb) < 0) {",
          "459:             av_log(avctx, AV_LOG_ERROR, \"Serious underevaluation of\"",
          "460:                    \"required buffer size\");",
          "461:             return AVERROR_BUFFER_TOO_SMALL;",
          "462:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "753:     avctx->coded_frame->pict_type = AV_PICTURE_TYPE_I;",
          "754:     avctx->coded_frame->key_frame = 1;",
          "759:         return ret;",
          "761:     orig_buf = pkt->data;",
          "",
          "[Removed Lines]",
          "756:     pkt_size = ctx->frame_size_upper_bound + FF_MIN_BUFFER_SIZE;",
          "758:     if ((ret = ff_alloc_packet2(avctx, pkt, pkt_size)) < 0)",
          "",
          "[Added Lines]",
          "761:     pkt_size = ctx->frame_size_upper_bound;",
          "763:     if ((ret = ff_alloc_packet2(avctx, pkt, pkt_size + FF_MIN_BUFFER_SIZE)) < 0)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "832:                 slice_hdr = buf;",
          "833:                 buf += slice_hdr_size - 1;",
          "834:                 init_put_bits(&pb, buf, (pkt_size - (buf - orig_buf)) * 8);",
          "837:                 bytestream_put_byte(&slice_hdr, q);",
          "838:                 slice_size = slice_hdr_size + sizes[ctx->num_planes - 1];",
          "",
          "[Removed Lines]",
          "835:                 encode_slice(avctx, pic, &pb, sizes, x, y, q, mbs_per_slice);",
          "",
          "[Added Lines]",
          "840:                 ret = encode_slice(avctx, pic, &pb, sizes, x, y, q, mbs_per_slice);",
          "841:                 if (ret < 0)",
          "842:                     return ret;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "60bfa9154d0084bc8b007b984051a6bb82d9652c",
      "candidate_info": {
        "commit_hash": "60bfa9154d0084bc8b007b984051a6bb82d9652c",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/60bfa9154d0084bc8b007b984051a6bb82d9652c",
        "files": [
          "libavcodec/proresenc_kostya.c"
        ],
        "message": "proresenc_kostya: report buffer overflow\n\nIf the allocated size, despite best efforts, is too small, exit\nwith the appropriate error.\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit 52b81ff4635c077b2bc8b8d3637d933b6629d803)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/proresenc_kostya.c||libavcodec/proresenc_kostya.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/proresenc_kostya.c||libavcodec/proresenc_kostya.c"
          ],
          "candidate": [
            "libavcodec/proresenc_kostya.c||libavcodec/proresenc_kostya.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/proresenc_kostya.c||libavcodec/proresenc_kostya.c": [
          "File: libavcodec/proresenc_kostya.c -> libavcodec/proresenc_kostya.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "570:                                           quant);",
          "571:         }",
          "572:         total_size += sizes[i];",
          "573:     }",
          "574:     return total_size;",
          "575: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "573:         if (put_bits_left(pb) < 0) {",
          "574:             av_log(avctx, AV_LOG_ERROR, \"Serious underevaluation of\"",
          "575:                    \"required buffer size\");",
          "576:             return AVERROR_BUFFER_TOO_SMALL;",
          "577:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "940:     avctx->coded_frame->pict_type = AV_PICTURE_TYPE_I;",
          "941:     avctx->coded_frame->key_frame = 1;",
          "946:         return ret;",
          "948:     orig_buf = pkt->data;",
          "",
          "[Removed Lines]",
          "943:     pkt_size = ctx->frame_size_upper_bound + FF_MIN_BUFFER_SIZE;",
          "945:     if ((ret = ff_alloc_packet2(avctx, pkt, pkt_size)) < 0)",
          "",
          "[Added Lines]",
          "948:     pkt_size = ctx->frame_size_upper_bound;",
          "950:     if ((ret = ff_alloc_packet2(avctx, pkt, pkt_size + FF_MIN_BUFFER_SIZE)) < 0)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1019:                 slice_hdr = buf;",
          "1020:                 buf += slice_hdr_size - 1;",
          "1021:                 init_put_bits(&pb, buf, (pkt_size - (buf - orig_buf)) * 8);",
          "1024:                 bytestream_put_byte(&slice_hdr, q);",
          "1025:                 slice_size = slice_hdr_size + sizes[ctx->num_planes - 1];",
          "",
          "[Removed Lines]",
          "1022:                 encode_slice(avctx, pic, &pb, sizes, x, y, q, mbs_per_slice);",
          "",
          "[Added Lines]",
          "1027:                 ret = encode_slice(avctx, pic, &pb, sizes, x, y, q, mbs_per_slice);",
          "1028:                 if (ret < 0)",
          "1029:                     return ret;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "92096acc0a04c108f0393c78592269b748170d0a",
      "candidate_info": {
        "commit_hash": "92096acc0a04c108f0393c78592269b748170d0a",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/92096acc0a04c108f0393c78592269b748170d0a",
        "files": [
          "libavcodec/proresenc_kostya.c"
        ],
        "message": "proresenc_kostya: report buffer overflow\n\nIf the allocated size, despite best efforts, is too small, exit\nwith the appropriate error.\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit 52b81ff4635c077b2bc8b8d3637d933b6629d803)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/proresenc_kostya.c||libavcodec/proresenc_kostya.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/proresenc_kostya.c||libavcodec/proresenc_kostya.c"
          ],
          "candidate": [
            "libavcodec/proresenc_kostya.c||libavcodec/proresenc_kostya.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/proresenc_kostya.c||libavcodec/proresenc_kostya.c": [
          "File: libavcodec/proresenc_kostya.c -> libavcodec/proresenc_kostya.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "569:                                           quant);",
          "570:         }",
          "571:         total_size += sizes[i];",
          "572:     }",
          "573:     return total_size;",
          "574: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "572:         if (put_bits_left(pb) < 0) {",
          "573:             av_log(avctx, AV_LOG_ERROR, \"Serious underevaluation of\"",
          "574:                    \"required buffer size\");",
          "575:             return AVERROR_BUFFER_TOO_SMALL;",
          "576:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "939:     avctx->coded_frame->pict_type = AV_PICTURE_TYPE_I;",
          "940:     avctx->coded_frame->key_frame = 1;",
          "945:         return ret;",
          "947:     orig_buf = pkt->data;",
          "",
          "[Removed Lines]",
          "942:     pkt_size = ctx->frame_size_upper_bound + FF_MIN_BUFFER_SIZE;",
          "944:     if ((ret = ff_alloc_packet2(avctx, pkt, pkt_size)) < 0)",
          "",
          "[Added Lines]",
          "947:     pkt_size = ctx->frame_size_upper_bound;",
          "949:     if ((ret = ff_alloc_packet2(avctx, pkt, pkt_size + FF_MIN_BUFFER_SIZE)) < 0)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1018:                 slice_hdr = buf;",
          "1019:                 buf += slice_hdr_size - 1;",
          "1020:                 init_put_bits(&pb, buf, (pkt_size - (buf - orig_buf)) * 8);",
          "1023:                 bytestream_put_byte(&slice_hdr, q);",
          "1024:                 slice_size = slice_hdr_size + sizes[ctx->num_planes - 1];",
          "",
          "[Removed Lines]",
          "1021:                 encode_slice(avctx, pic, &pb, sizes, x, y, q, mbs_per_slice);",
          "",
          "[Added Lines]",
          "1026:                 ret = encode_slice(avctx, pic, &pb, sizes, x, y, q, mbs_per_slice);",
          "1027:                 if (ret < 0)",
          "1028:                     return ret;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "57a6cd8ab1c221cad1c2c49ff02216d752684651",
      "candidate_info": {
        "commit_hash": "57a6cd8ab1c221cad1c2c49ff02216d752684651",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/57a6cd8ab1c221cad1c2c49ff02216d752684651",
        "files": [
          "libavcodec/proresenc_kostya.c"
        ],
        "message": "proresenc_kostya: report buffer overflow\n\nIf the allocated size, despite best efforts, is too small, exit\nwith the appropriate error.\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit 52b81ff4635c077b2bc8b8d3637d933b6629d803)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/proresenc_kostya.c||libavcodec/proresenc_kostya.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/proresenc_kostya.c||libavcodec/proresenc_kostya.c"
          ],
          "candidate": [
            "libavcodec/proresenc_kostya.c||libavcodec/proresenc_kostya.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/proresenc_kostya.c||libavcodec/proresenc_kostya.c": [
          "File: libavcodec/proresenc_kostya.c -> libavcodec/proresenc_kostya.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "569:                                           quant);",
          "570:         }",
          "571:         total_size += sizes[i];",
          "572:     }",
          "573:     return total_size;",
          "574: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "572:         if (put_bits_left(pb) < 0) {",
          "573:             av_log(avctx, AV_LOG_ERROR, \"Serious underevaluation of\"",
          "574:                    \"required buffer size\");",
          "575:             return AVERROR_BUFFER_TOO_SMALL;",
          "576:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "939:     avctx->coded_frame->pict_type = AV_PICTURE_TYPE_I;",
          "940:     avctx->coded_frame->key_frame = 1;",
          "945:         return ret;",
          "947:     orig_buf = pkt->data;",
          "",
          "[Removed Lines]",
          "942:     pkt_size = ctx->frame_size_upper_bound + FF_MIN_BUFFER_SIZE;",
          "944:     if ((ret = ff_alloc_packet2(avctx, pkt, pkt_size)) < 0)",
          "",
          "[Added Lines]",
          "947:     pkt_size = ctx->frame_size_upper_bound;",
          "949:     if ((ret = ff_alloc_packet2(avctx, pkt, pkt_size + FF_MIN_BUFFER_SIZE)) < 0)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1018:                 slice_hdr = buf;",
          "1019:                 buf += slice_hdr_size - 1;",
          "1020:                 init_put_bits(&pb, buf, (pkt_size - (buf - orig_buf)) * 8);",
          "1023:                 bytestream_put_byte(&slice_hdr, q);",
          "1024:                 slice_size = slice_hdr_size + sizes[ctx->num_planes - 1];",
          "",
          "[Removed Lines]",
          "1021:                 encode_slice(avctx, pic, &pb, sizes, x, y, q, mbs_per_slice);",
          "",
          "[Added Lines]",
          "1026:                 ret = encode_slice(avctx, pic, &pb, sizes, x, y, q, mbs_per_slice);",
          "1027:                 if (ret < 0)",
          "1028:                     return ret;",
          "",
          "---------------"
        ]
      }
    }
  ]
}