{
  "cve_id": "CVE-2015-8723",
  "cve_desc": "The AirPDcapPacketProcess function in epan/crypt/airpdcap.c in the 802.11 dissector in Wireshark 1.12.x before 1.12.9 and 2.0.x before 2.0.1 does not validate the relationship between the total length and the capture length, which allows remote attackers to cause a denial of service (stack-based buffer overflow and application crash) via a crafted packet.",
  "repo": "wireshark/wireshark",
  "patch_hash": "40b283181c63cb28bc6f58d80315eccca6650da0",
  "patch_info": {
    "commit_hash": "40b283181c63cb28bc6f58d80315eccca6650da0",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/40b283181c63cb28bc6f58d80315eccca6650da0",
    "files": [
      "epan/crypt/airpdcap.c",
      "epan/crypt/airpdcap_system.h"
    ],
    "message": "Add boundary check for 802.11 decryption\n\nFixed stack-based buffer overflow when the frame length exceeds 8KB.\n\nBug: 11790\nChange-Id: I20db8901765a7660e587057e955d4fb5a8645574\nReviewed-on: https://code.wireshark.org/review/12237\nPetri-Dish: Anders Broman <a.broman58@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Peter Wu <peter@lekensteyn.nl>",
    "before_after_code_files": [
      "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c",
      "epan/crypt/airpdcap_system.h||epan/crypt/airpdcap_system.h"
    ]
  },
  "patch_diff": {
    "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c": [
      "File: epan/crypt/airpdcap.c -> epan/crypt/airpdcap.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "663:         return AIRPDCAP_RET_WRONG_DATA_SIZE;",
      "664:     }",
      "667:     if ( (addr=AirPDcapGetBssidAddress((const AIRPDCAP_MAC_FRAME_ADDR4 *)(data))) != NULL) {",
      "668:         memcpy(id.bssid, addr, AIRPDCAP_MAC_LEN);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "667:     if (tot_len > AIRPDCAP_MAX_CAPLEN) {",
      "668:         AIRPDCAP_DEBUG_PRINT_LINE(\"AirPDcapPacketProcess\", \"length too large\", AIRPDCAP_DEBUG_LEVEL_3);",
      "669:         return AIRPDCAP_RET_UNSUCCESS;",
      "670:     }",
      "",
      "---------------"
    ],
    "epan/crypt/airpdcap_system.h||epan/crypt/airpdcap_system.h": [
      "File: epan/crypt/airpdcap_system.h -> epan/crypt/airpdcap_system.h"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1d9c54c2dd366d2c9ba1026fe2e877b794aa13dd",
      "candidate_info": {
        "commit_hash": "1d9c54c2dd366d2c9ba1026fe2e877b794aa13dd",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/1d9c54c2dd366d2c9ba1026fe2e877b794aa13dd",
        "files": [
          "epan/crypt/airpdcap.c",
          "epan/crypt/airpdcap_system.h"
        ],
        "message": "Add boundary check for 802.11 decryption\n\nFixed stack-based buffer overflow when the frame length exceeds 8KB.\n\nBug: 11790\nChange-Id: I20db8901765a7660e587057e955d4fb5a8645574\nReviewed-on: https://code.wireshark.org/review/12237\nPetri-Dish: Anders Broman <a.broman58@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Peter Wu <peter@lekensteyn.nl>\n(cherry picked from commit 40b283181c63cb28bc6f58d80315eccca6650da0)\n[resolved conflict by accepting comments from v2.1.0rc0-764-g9cd66b2]\nReviewed-on: https://code.wireshark.org/review/12247\n(cherry picked from commit a6e8fc8c9af56124d44423c3a85c695ac01c70e7)\nReviewed-on: https://code.wireshark.org/review/13761\nReviewed-by: Balint Reczey <balint@balintreczey.hu>",
        "before_after_code_files": [
          "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c",
          "epan/crypt/airpdcap_system.h||epan/crypt/airpdcap_system.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c",
            "epan/crypt/airpdcap_system.h||epan/crypt/airpdcap_system.h"
          ],
          "candidate": [
            "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c",
            "epan/crypt/airpdcap_system.h||epan/crypt/airpdcap_system.h"
          ]
        }
      },
      "candidate_diff": {
        "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c": [
          "File: epan/crypt/airpdcap.c -> epan/crypt/airpdcap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "688:         return AIRPDCAP_RET_WRONG_DATA_SIZE;",
          "689:     }",
          "692:     if ( (addr=AirPDcapGetBssidAddress((const AIRPDCAP_MAC_FRAME_ADDR4 *)(data))) != NULL) {",
          "693:         memcpy(id.bssid, addr, AIRPDCAP_MAC_LEN);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "692:     if (tot_len > AIRPDCAP_MAX_CAPLEN) {",
          "693:         AIRPDCAP_DEBUG_PRINT_LINE(\"AirPDcapPacketProcess\", \"length too large\", AIRPDCAP_DEBUG_LEVEL_3);",
          "694:         return AIRPDCAP_RET_UNSUCCESS;",
          "695:     }",
          "",
          "---------------"
        ],
        "epan/crypt/airpdcap_system.h||epan/crypt/airpdcap_system.h": [
          "File: epan/crypt/airpdcap_system.h -> epan/crypt/airpdcap_system.h"
        ]
      }
    },
    {
      "candidate_hash": "a6e8fc8c9af56124d44423c3a85c695ac01c70e7",
      "candidate_info": {
        "commit_hash": "a6e8fc8c9af56124d44423c3a85c695ac01c70e7",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/a6e8fc8c9af56124d44423c3a85c695ac01c70e7",
        "files": [
          "epan/crypt/airpdcap.c",
          "epan/crypt/airpdcap_system.h"
        ],
        "message": "Add boundary check for 802.11 decryption\n\nFixed stack-based buffer overflow when the frame length exceeds 8KB.\n\nBug: 11790\nChange-Id: I20db8901765a7660e587057e955d4fb5a8645574\nReviewed-on: https://code.wireshark.org/review/12237\nPetri-Dish: Anders Broman <a.broman58@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Peter Wu <peter@lekensteyn.nl>\n(cherry picked from commit 40b283181c63cb28bc6f58d80315eccca6650da0)\n[resolved conflict by accepting comments from v2.1.0rc0-764-g9cd66b2]\nReviewed-on: https://code.wireshark.org/review/12247",
        "before_after_code_files": [
          "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c",
          "epan/crypt/airpdcap_system.h||epan/crypt/airpdcap_system.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c",
            "epan/crypt/airpdcap_system.h||epan/crypt/airpdcap_system.h"
          ],
          "candidate": [
            "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c",
            "epan/crypt/airpdcap_system.h||epan/crypt/airpdcap_system.h"
          ]
        }
      },
      "candidate_diff": {
        "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c": [
          "File: epan/crypt/airpdcap.c -> epan/crypt/airpdcap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "693:         return AIRPDCAP_RET_WRONG_DATA_SIZE;",
          "694:     }",
          "697:     if ( (addr=AirPDcapGetBssidAddress((const AIRPDCAP_MAC_FRAME_ADDR4 *)(data))) != NULL) {",
          "698:         memcpy(id.bssid, addr, AIRPDCAP_MAC_LEN);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "697:     if (tot_len > AIRPDCAP_MAX_CAPLEN) {",
          "698:         AIRPDCAP_DEBUG_PRINT_LINE(\"AirPDcapPacketProcess\", \"length too large\", AIRPDCAP_DEBUG_LEVEL_3);",
          "699:         return AIRPDCAP_RET_UNSUCCESS;",
          "700:     }",
          "",
          "---------------"
        ],
        "epan/crypt/airpdcap_system.h||epan/crypt/airpdcap_system.h": [
          "File: epan/crypt/airpdcap_system.h -> epan/crypt/airpdcap_system.h"
        ]
      }
    },
    {
      "candidate_hash": "bf1fa88dee15366037f1caeb71ffe70ee870ea35",
      "candidate_info": {
        "commit_hash": "bf1fa88dee15366037f1caeb71ffe70ee870ea35",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/bf1fa88dee15366037f1caeb71ffe70ee870ea35",
        "files": [
          "epan/crypt/airpdcap.c",
          "epan/crypt/airpdcap_system.h"
        ],
        "message": "Add boundary check for 802.11 decryption\n\nFixed stack-based buffer overflow when the frame length exceeds 8KB.\n\nBug: 11790\nChange-Id: I20db8901765a7660e587057e955d4fb5a8645574\nReviewed-on: https://code.wireshark.org/review/12237\nPetri-Dish: Anders Broman <a.broman58@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Peter Wu <peter@lekensteyn.nl>\n(cherry picked from commit 40b283181c63cb28bc6f58d80315eccca6650da0)\n[resolved conflict by accepting comments from v2.1.0rc0-764-g9cd66b2]\nReviewed-on: https://code.wireshark.org/review/12246",
        "before_after_code_files": [
          "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c",
          "epan/crypt/airpdcap_system.h||epan/crypt/airpdcap_system.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c",
            "epan/crypt/airpdcap_system.h||epan/crypt/airpdcap_system.h"
          ],
          "candidate": [
            "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c",
            "epan/crypt/airpdcap_system.h||epan/crypt/airpdcap_system.h"
          ]
        }
      },
      "candidate_diff": {
        "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c": [
          "File: epan/crypt/airpdcap.c -> epan/crypt/airpdcap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "654:         return AIRPDCAP_RET_WRONG_DATA_SIZE;",
          "655:     }",
          "658:     if ( (addr=AirPDcapGetBssidAddress((const AIRPDCAP_MAC_FRAME_ADDR4 *)(data))) != NULL) {",
          "659:         memcpy(id.bssid, addr, AIRPDCAP_MAC_LEN);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "658:     if (tot_len > AIRPDCAP_MAX_CAPLEN) {",
          "659:         AIRPDCAP_DEBUG_PRINT_LINE(\"AirPDcapPacketProcess\", \"length too large\", AIRPDCAP_DEBUG_LEVEL_3);",
          "660:         return AIRPDCAP_RET_UNSUCCESS;",
          "661:     }",
          "",
          "---------------"
        ],
        "epan/crypt/airpdcap_system.h||epan/crypt/airpdcap_system.h": [
          "File: epan/crypt/airpdcap_system.h -> epan/crypt/airpdcap_system.h"
        ]
      }
    },
    {
      "candidate_hash": "512f778110d8d698c803c4cb7fcc0d6622d34eaf",
      "candidate_info": {
        "commit_hash": "512f778110d8d698c803c4cb7fcc0d6622d34eaf",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/512f778110d8d698c803c4cb7fcc0d6622d34eaf",
        "files": [
          "epan/crypt/airpdcap.c",
          "epan/crypt/airpdcap_system.h"
        ],
        "message": "Add boundary check for 802.11 decryption\n\nFixed stack-based buffer overflow when the frame length exceeds 8KB.\n\nBug: 11790\nChange-Id: I20db8901765a7660e587057e955d4fb5a8645574\nReviewed-on: https://code.wireshark.org/review/12237\nPetri-Dish: Anders Broman <a.broman58@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Peter Wu <peter@lekensteyn.nl>\n(cherry picked from commit 40b283181c63cb28bc6f58d80315eccca6650da0)\n[resolved conflict by accepting comments from v2.1.0rc0-764-g9cd66b2]\nReviewed-on: https://code.wireshark.org/review/12247\n(cherry picked from commit a6e8fc8c9af56124d44423c3a85c695ac01c70e7)\nReviewed-on: https://code.wireshark.org/review/13761\nReviewed-by: Balint Reczey <balint@balintreczey.hu>\n(cherry picked from commit 1d9c54c2dd366d2c9ba1026fe2e877b794aa13dd)\nReviewed-on: https://code.wireshark.org/review/14375",
        "before_after_code_files": [
          "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c",
          "epan/crypt/airpdcap_system.h||epan/crypt/airpdcap_system.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c",
            "epan/crypt/airpdcap_system.h||epan/crypt/airpdcap_system.h"
          ],
          "candidate": [
            "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c",
            "epan/crypt/airpdcap_system.h||epan/crypt/airpdcap_system.h"
          ]
        }
      },
      "candidate_diff": {
        "epan/crypt/airpdcap.c||epan/crypt/airpdcap.c": [
          "File: epan/crypt/airpdcap.c -> epan/crypt/airpdcap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "649:         return AIRPDCAP_RET_WRONG_DATA_SIZE;",
          "650:     }",
          "653:     if ( (address=AirPDcapGetBssidAddress((const AIRPDCAP_MAC_FRAME_ADDR4 *)(data))) != NULL) {",
          "654:         memcpy(id.bssid, address, AIRPDCAP_MAC_LEN);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "653:     if (tot_len > AIRPDCAP_MAX_CAPLEN) {",
          "654:         AIRPDCAP_DEBUG_PRINT_LINE(\"AirPDcapPacketProcess\", \"length too large\", AIRPDCAP_DEBUG_LEVEL_3);",
          "655:         return AIRPDCAP_RET_UNSUCCESS;",
          "656:     }",
          "",
          "---------------"
        ],
        "epan/crypt/airpdcap_system.h||epan/crypt/airpdcap_system.h": [
          "File: epan/crypt/airpdcap_system.h -> epan/crypt/airpdcap_system.h"
        ]
      }
    }
  ]
}