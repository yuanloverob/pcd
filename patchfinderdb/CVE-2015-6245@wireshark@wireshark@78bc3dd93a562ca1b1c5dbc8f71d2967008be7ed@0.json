{
  "cve_id": "CVE-2015-6245",
  "cve_desc": "epan/dissectors/packet-gsm_rlcmac.c in the GSM RLC/MAC dissector in Wireshark 1.12.x before 1.12.7 uses incorrect integer data types, which allows remote attackers to cause a denial of service (infinite loop) via a crafted packet.",
  "repo": "wireshark/wireshark",
  "patch_hash": "78bc3dd93a562ca1b1c5dbc8f71d2967008be7ed",
  "patch_info": {
    "commit_hash": "78bc3dd93a562ca1b1c5dbc8f71d2967008be7ed",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/78bc3dd93a562ca1b1c5dbc8f71d2967008be7ed",
    "files": [
      "epan/dissectors/packet-gsm_rlcmac.c"
    ],
    "message": "GSM RLC/MAC: fix an infinite loop when analyzing (E)GPRS header\n\nChange-Id: Ibba32a2860f80979ee9df3caeeaeda14fde7e7d0\nPing-Bug: 11358\nReviewed-on: https://code.wireshark.org/review/9649\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>",
    "before_after_code_files": [
      "epan/dissectors/packet-gsm_rlcmac.c||epan/dissectors/packet-gsm_rlcmac.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-gsm_rlcmac.c||epan/dissectors/packet-gsm_rlcmac.c": [
      "File: epan/dissectors/packet-gsm_rlcmac.c -> epan/dissectors/packet-gsm_rlcmac.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "62: typedef struct",
      "63: {",
      "65:   guint8 li;",
      "66: } length_indicator_t;",
      "",
      "[Removed Lines]",
      "64:   guint8 offset;",
      "",
      "[Added Lines]",
      "64:   gint   offset;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "6899:   { 0, NULL}",
      "6900: };",
      "6903: {",
      "6905:   proto_item *item;",
      "",
      "[Removed Lines]",
      "6902: static guint8 construct_gprs_data_segment_li_array(tvbuff_t *tvb, proto_tree *tree, packet_info *pinfo, guint8 initial_offset, guint8 *li_count, length_indicator_t *li_array, guint64 *e)",
      "6904:   guint8      offset = initial_offset, li_array_size = *li_count;",
      "",
      "[Added Lines]",
      "6902: static gint construct_gprs_data_segment_li_array(tvbuff_t *tvb, proto_tree *tree, packet_info *pinfo, guint8 initial_offset, guint8 *li_count, length_indicator_t *li_array, guint64 *e)",
      "6904:   gint        offset = initial_offset;",
      "6905:   guint8      li_array_size = *li_count;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "6925:   return (offset - initial_offset);",
      "6926: }",
      "6929: {",
      "6931:   proto_item *item;",
      "6934:   while (*e == 0)",
      "6935:   {",
      "6937:     item = proto_tree_add_bits_item(tree, hf_li, tvb, offset * 8, 7, ENC_BIG_ENDIAN);",
      "6938:     proto_tree_add_bits_ret_val(tree, hf_e, tvb, (offset * 8) + 7, 1, e, ENC_BIG_ENDIAN);",
      "6939:     if (*li_count < li_array_size)",
      "",
      "[Removed Lines]",
      "6928: static guint8 construct_egprs_data_segment_li_array(tvbuff_t *tvb, proto_tree *tree, packet_info *pinfo, guint8 initial_offset, guint8 *li_count, length_indicator_t *li_array, guint64 *e)",
      "6930:   guint8      offset = initial_offset, li_array_size = *li_count;",
      "6936:     DISSECTOR_ASSERT(*li_count < li_array_size);",
      "",
      "[Added Lines]",
      "6929: static gint construct_egprs_data_segment_li_array(tvbuff_t *tvb, proto_tree *tree, packet_info *pinfo, guint8 initial_offset, guint8 *li_count, length_indicator_t *li_array, guint64 *e)",
      "6931:   gint        offset = initial_offset;",
      "6932:   guint8      li_array_size = *li_count;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "7626:   csnStream_t ar;",
      "7627:   guint8      payload_type = tvb_get_bits8(tvb, 0, 2);",
      "7628:   guint16     bit_length   = tvb_reported_length(tvb) * 8;",
      "7631:   col_set_str(pinfo->cinfo, COL_PROTOCOL, \"GSM RLC/MAC\");",
      "7632:   col_append_sep_str(pinfo->cinfo, COL_INFO, \":\", \"GPRS UL\");",
      "",
      "[Removed Lines]",
      "7629:   guint16     bit_offset   = 0;",
      "",
      "[Added Lines]",
      "7630:   gint        bit_offset   = 0;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "7756: {",
      "7757:   proto_item         *ti;",
      "7758:   proto_tree         *data_tree;",
      "7760:   length_indicator_t  li_array[20];",
      "7761:   guint8              li_count = array_length(li_array);",
      "7762:   guint64             e, tlli_i;",
      "",
      "[Removed Lines]",
      "7759:   guint8              offset   = 0;",
      "",
      "[Added Lines]",
      "7760:   gint                offset   = 0;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "7816: {",
      "7817:   proto_item         *ti;",
      "7818:   proto_tree         *data_tree;",
      "7820:   guint16             block_number;",
      "7821:   length_indicator_t  li_array[20];",
      "7822:   guint8              li_count = array_length(li_array);",
      "",
      "[Removed Lines]",
      "7819:   guint16             offset   = 0;",
      "",
      "[Added Lines]",
      "7820:   gint                offset   = 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6be36c11d0553d8fe63b663ae539a9910bebfc68",
      "candidate_info": {
        "commit_hash": "6be36c11d0553d8fe63b663ae539a9910bebfc68",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/6be36c11d0553d8fe63b663ae539a9910bebfc68",
        "files": [
          "epan/dissectors/packet-gsm_rlcmac.c"
        ],
        "message": "GSM RLC/MAC: fix an infinite loop when analyzing (E)GPRS header\n\nChange-Id: Ibba32a2860f80979ee9df3caeeaeda14fde7e7d0\nPing-Bug: 11358\nReviewed-on: https://code.wireshark.org/review/9649\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>\n(cherry picked from commit 78bc3dd93a562ca1b1c5dbc8f71d2967008be7ed)\nConflicts:\n\tepan/dissectors/packet-gsm_rlcmac.c\nReviewed-on: https://code.wireshark.org/review/9656",
        "before_after_code_files": [
          "epan/dissectors/packet-gsm_rlcmac.c||epan/dissectors/packet-gsm_rlcmac.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-gsm_rlcmac.c||epan/dissectors/packet-gsm_rlcmac.c"
          ],
          "candidate": [
            "epan/dissectors/packet-gsm_rlcmac.c||epan/dissectors/packet-gsm_rlcmac.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-gsm_rlcmac.c||epan/dissectors/packet-gsm_rlcmac.c": [
          "File: epan/dissectors/packet-gsm_rlcmac.c -> epan/dissectors/packet-gsm_rlcmac.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "65: typedef struct",
          "66: {",
          "68:   guint8 li;",
          "69: } length_indicator_t;",
          "",
          "[Removed Lines]",
          "67:   guint8 offset;",
          "",
          "[Added Lines]",
          "67:   gint   offset;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6906:   { 0, NULL}",
          "6907: };",
          "6910: {",
          "6912:   proto_item *item;",
          "",
          "[Removed Lines]",
          "6909: static guint8 construct_gprs_data_segment_li_array(tvbuff_t *tvb, proto_tree *tree, packet_info *pinfo, guint8 initial_offset, guint8 *li_count, length_indicator_t *li_array, guint64 *e)",
          "6911:   guint8      offset = initial_offset, li_array_size = *li_count;",
          "",
          "[Added Lines]",
          "6909: static gint construct_gprs_data_segment_li_array(tvbuff_t *tvb, proto_tree *tree, packet_info *pinfo, guint8 initial_offset, guint8 *li_count, length_indicator_t *li_array, guint64 *e)",
          "6911:   gint        offset = initial_offset;",
          "6912:   guint8      li_array_size = *li_count;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "6932:   return (offset - initial_offset);",
          "6933: }",
          "6936: {",
          "6938:   proto_item *item;",
          "6941:   while (*e == 0)",
          "6942:   {",
          "6944:     item = proto_tree_add_bits_item(tree, hf_li, tvb, offset * 8, 7, ENC_BIG_ENDIAN);",
          "6945:     proto_tree_add_bits_ret_val(tree, hf_e, tvb, (offset * 8) + 7, 1, e, ENC_BIG_ENDIAN);",
          "6946:     if (*li_count < li_array_size)",
          "",
          "[Removed Lines]",
          "6935: static guint8 construct_egprs_data_segment_li_array(tvbuff_t *tvb, proto_tree *tree, packet_info *pinfo, guint8 initial_offset, guint8 *li_count, length_indicator_t *li_array, guint64 *e)",
          "6937:   guint8      offset = initial_offset, li_array_size = *li_count;",
          "6943:     DISSECTOR_ASSERT(*li_count < li_array_size);",
          "",
          "[Added Lines]",
          "6936: static gint construct_egprs_data_segment_li_array(tvbuff_t *tvb, proto_tree *tree, packet_info *pinfo, guint8 initial_offset, guint8 *li_count, length_indicator_t *li_array, guint64 *e)",
          "6938:   gint        offset = initial_offset;",
          "6939:   guint8      li_array_size = *li_count;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "7633:   csnStream_t ar;",
          "7634:   guint8      payload_type = tvb_get_bits8(tvb, 0, 2);",
          "7635:   guint16     bit_length   = tvb_length(tvb) * 8;",
          "7638:   col_set_str(pinfo->cinfo, COL_PROTOCOL, \"GSM RLC/MAC\");",
          "7639:   col_append_sep_str(pinfo->cinfo, COL_INFO, \":\", \"GPRS UL\");",
          "",
          "[Removed Lines]",
          "7636:   guint16     bit_offset   = 0;",
          "",
          "[Added Lines]",
          "7637:   gint        bit_offset   = 0;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "7763: {",
          "7764:   proto_item         *ti;",
          "7765:   proto_tree         *data_tree;",
          "7767:   length_indicator_t  li_array[20];",
          "7768:   guint8              li_count = array_length(li_array);",
          "7769:   guint64             e, tlli_i;",
          "",
          "[Removed Lines]",
          "7766:   guint8              offset   = 0;",
          "",
          "[Added Lines]",
          "7767:   gint                offset   = 0;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "7823: {",
          "7824:   proto_item         *ti;",
          "7825:   proto_tree         *data_tree;",
          "7827:   guint16             block_number;",
          "7828:   length_indicator_t  li_array[20];",
          "7829:   guint8              li_count = array_length(li_array);",
          "",
          "[Removed Lines]",
          "7826:   guint16             offset   = 0;",
          "",
          "[Added Lines]",
          "7827:   gint                offset   = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "725310e96a9c7df8878d8ebb07b9bd20c485cca6",
      "candidate_info": {
        "commit_hash": "725310e96a9c7df8878d8ebb07b9bd20c485cca6",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/725310e96a9c7df8878d8ebb07b9bd20c485cca6",
        "files": [
          "epan/dissectors/packet-gsm_rlcmac.c"
        ],
        "message": "GSM RLC/MAC: fix an infinite loop when analyzing (E)GPRS header\n\nChange-Id: Ibba32a2860f80979ee9df3caeeaeda14fde7e7d0\nPing-Bug: 11358\nReviewed-on: https://code.wireshark.org/review/9649\nPetri-Dish: Pascal Quantin <pascal.quantin@gmail.com>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>\n(cherry picked from commit 78bc3dd93a562ca1b1c5dbc8f71d2967008be7ed)\nConflicts:\n\tepan/dissectors/packet-gsm_rlcmac.c\nReviewed-on: https://code.wireshark.org/review/9656\n(cherry picked from commit 6be36c11d0553d8fe63b663ae539a9910bebfc68)\nReviewed-on: https://code.wireshark.org/review/10585\nReviewed-by: Balint Reczey <balint@balintreczey.hu>",
        "before_after_code_files": [
          "epan/dissectors/packet-gsm_rlcmac.c||epan/dissectors/packet-gsm_rlcmac.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-gsm_rlcmac.c||epan/dissectors/packet-gsm_rlcmac.c"
          ],
          "candidate": [
            "epan/dissectors/packet-gsm_rlcmac.c||epan/dissectors/packet-gsm_rlcmac.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-gsm_rlcmac.c||epan/dissectors/packet-gsm_rlcmac.c": [
          "File: epan/dissectors/packet-gsm_rlcmac.c -> epan/dissectors/packet-gsm_rlcmac.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "65: typedef struct",
          "66: {",
          "68:   guint8 li;",
          "69: } length_indicator_t;",
          "",
          "[Removed Lines]",
          "67:   guint8 offset;",
          "",
          "[Added Lines]",
          "67:   gint   offset;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6906:   { 0, NULL}",
          "6907: };",
          "6910: {",
          "6912:   proto_item *item;",
          "",
          "[Removed Lines]",
          "6909: static guint8 construct_gprs_data_segment_li_array(tvbuff_t *tvb, proto_tree *tree, packet_info *pinfo, guint8 initial_offset, guint8 *li_count, length_indicator_t *li_array, guint64 *e)",
          "6911:   guint8      offset = initial_offset, li_array_size = *li_count;",
          "",
          "[Added Lines]",
          "6909: static gint construct_gprs_data_segment_li_array(tvbuff_t *tvb, proto_tree *tree, packet_info *pinfo, guint8 initial_offset, guint8 *li_count, length_indicator_t *li_array, guint64 *e)",
          "6911:   gint        offset = initial_offset;",
          "6912:   guint8      li_array_size = *li_count;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "6932:   return (offset - initial_offset);",
          "6933: }",
          "6936: {",
          "6938:   proto_item *item;",
          "6941:   while (*e == 0)",
          "6942:   {",
          "6944:     item = proto_tree_add_bits_item(tree, hf_li, tvb, offset * 8, 7, ENC_BIG_ENDIAN);",
          "6945:     proto_tree_add_bits_ret_val(tree, hf_e, tvb, (offset * 8) + 7, 1, e, ENC_BIG_ENDIAN);",
          "6946:     if (*li_count < li_array_size)",
          "",
          "[Removed Lines]",
          "6935: static guint8 construct_egprs_data_segment_li_array(tvbuff_t *tvb, proto_tree *tree, packet_info *pinfo, guint8 initial_offset, guint8 *li_count, length_indicator_t *li_array, guint64 *e)",
          "6937:   guint8      offset = initial_offset, li_array_size = *li_count;",
          "6943:     DISSECTOR_ASSERT(*li_count < li_array_size);",
          "",
          "[Added Lines]",
          "6936: static gint construct_egprs_data_segment_li_array(tvbuff_t *tvb, proto_tree *tree, packet_info *pinfo, guint8 initial_offset, guint8 *li_count, length_indicator_t *li_array, guint64 *e)",
          "6938:   gint        offset = initial_offset;",
          "6939:   guint8      li_array_size = *li_count;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "7633:   csnStream_t ar;",
          "7634:   guint8      payload_type = tvb_get_bits8(tvb, 0, 2);",
          "7635:   guint16     bit_length   = tvb_length(tvb) * 8;",
          "7638:   col_set_str(pinfo->cinfo, COL_PROTOCOL, \"GSM RLC/MAC\");",
          "7639:   col_append_sep_str(pinfo->cinfo, COL_INFO, \":\", \"GPRS UL\");",
          "",
          "[Removed Lines]",
          "7636:   guint16     bit_offset   = 0;",
          "",
          "[Added Lines]",
          "7637:   gint        bit_offset   = 0;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "7763: {",
          "7764:   proto_item         *ti;",
          "7765:   proto_tree         *data_tree;",
          "7767:   length_indicator_t  li_array[20];",
          "7768:   guint8              li_count = array_length(li_array);",
          "7769:   guint64             e, tlli_i;",
          "",
          "[Removed Lines]",
          "7766:   guint8              offset   = 0;",
          "",
          "[Added Lines]",
          "7767:   gint                offset   = 0;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "7823: {",
          "7824:   proto_item         *ti;",
          "7825:   proto_tree         *data_tree;",
          "7827:   guint16             block_number;",
          "7828:   length_indicator_t  li_array[20];",
          "7829:   guint8              li_count = array_length(li_array);",
          "",
          "[Removed Lines]",
          "7826:   guint16             offset   = 0;",
          "",
          "[Added Lines]",
          "7827:   gint                offset   = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9611e751aed1b1358d4f7028572004af11878469",
      "candidate_info": {
        "commit_hash": "9611e751aed1b1358d4f7028572004af11878469",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/9611e751aed1b1358d4f7028572004af11878469",
        "files": [
          "epan/dissectors/packet-bssgp.c",
          "epan/dissectors/packet-dpnss-link.c",
          "epan/dissectors/packet-dpnss.c",
          "epan/dissectors/packet-gsm_a_rr.c",
          "epan/dissectors/packet-gsm_bsslap.c",
          "epan/dissectors/packet-gsm_rlcmac.c",
          "epan/dissectors/packet-l2tp.c",
          "epan/dissectors/packet-lapd.c",
          "epan/dissectors/packet-lapdm.c"
        ],
        "message": "Replace tvb_length...() calls.\n\nChange-Id: Idda7cd56a12b36d18774a1fe324c69eb8f5e4330\nReviewed-on: https://code.wireshark.org/review/5412\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
        "before_after_code_files": [
          "epan/dissectors/packet-bssgp.c||epan/dissectors/packet-bssgp.c",
          "epan/dissectors/packet-dpnss-link.c||epan/dissectors/packet-dpnss-link.c",
          "epan/dissectors/packet-dpnss.c||epan/dissectors/packet-dpnss.c",
          "epan/dissectors/packet-gsm_a_rr.c||epan/dissectors/packet-gsm_a_rr.c",
          "epan/dissectors/packet-gsm_bsslap.c||epan/dissectors/packet-gsm_bsslap.c",
          "epan/dissectors/packet-gsm_rlcmac.c||epan/dissectors/packet-gsm_rlcmac.c",
          "epan/dissectors/packet-l2tp.c||epan/dissectors/packet-l2tp.c",
          "epan/dissectors/packet-lapd.c||epan/dissectors/packet-lapd.c",
          "epan/dissectors/packet-lapdm.c||epan/dissectors/packet-lapdm.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-gsm_rlcmac.c||epan/dissectors/packet-gsm_rlcmac.c"
          ],
          "candidate": [
            "epan/dissectors/packet-gsm_rlcmac.c||epan/dissectors/packet-gsm_rlcmac.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-bssgp.c||epan/dissectors/packet-bssgp.c": [
          "File: epan/dissectors/packet-bssgp.c -> epan/dissectors/packet-bssgp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6396:     g_rim_application_identity = 0;",
          "6397:     gparent_tree = tree;",
          "6400:     col_set_str(pinfo->cinfo, COL_PROTOCOL, \"BSSGP\");",
          "",
          "[Removed Lines]",
          "6398:     len = tvb_length(tvb);",
          "",
          "[Added Lines]",
          "6398:     len = tvb_reported_length(tvb);",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-dpnss-link.c||epan/dissectors/packet-dpnss-link.c": [
          "File: epan/dissectors/packet-dpnss-link.c -> epan/dissectors/packet-dpnss-link.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "141:  switch (octet){",
          "142:  case FRAME_TYPE_UI_EVEN:",
          "143:  case FRAME_TYPE_UI_ODD:",
          "145:      protocol_data_tvb=tvb_new_subset_length(tvb, LINK_HEADER_SIZE,",
          "146:           protocol_data_length);",
          "147:      if (dpnss_handle && protocol_data_length>0) {",
          "",
          "[Removed Lines]",
          "144:      protocol_data_length=tvb_length(tvb)-LINK_HEADER_SIZE;",
          "",
          "[Added Lines]",
          "144:      protocol_data_length=tvb_reported_length(tvb)-LINK_HEADER_SIZE;",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-dpnss.c||epan/dissectors/packet-dpnss.c": [
          "File: epan/dissectors/packet-dpnss.c -> epan/dissectors/packet-dpnss.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1087:     gboolean    last_string = FALSE;",
          "1088:     gboolean    has_par;",
          "1092:     str_no = 1;",
          "1093:     while ((offset<tvb_end_offset)&&(last_string == FALSE)) {",
          "",
          "[Removed Lines]",
          "1090:     tvb_end_offset = tvb_length(tvb);",
          "",
          "[Added Lines]",
          "1090:     tvb_end_offset = tvb_reported_length(tvb);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1175:     int         tvb_end_offset;",
          "1176:     guint8      octet;",
          "1180:     proto_tree_add_item(tree, hf_dpnss_LbL_msg_type, tvb, offset, 1, ENC_BIG_ENDIAN);",
          "1181:     octet = tvb_get_guint8(tvb,offset)&0x0f;",
          "",
          "[Removed Lines]",
          "1178:     tvb_end_offset = tvb_length(tvb);",
          "",
          "[Added Lines]",
          "1178:     tvb_end_offset = tvb_reported_length(tvb);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1259:     int         tvb_end_offset;",
          "1260:     guint8      octet;",
          "1264:     proto_tree_add_item(tree, hf_dpnss_e2e_msg_type, tvb, offset, 1, ENC_BIG_ENDIAN);",
          "1265:     octet = tvb_get_guint8(tvb,offset)&0x0f;",
          "",
          "[Removed Lines]",
          "1262:     tvb_end_offset = tvb_length(tvb);",
          "",
          "[Added Lines]",
          "1262:     tvb_end_offset = tvb_reported_length(tvb);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1349:     int         tvb_end_offset;",
          "1350:     guint8      octet;",
          "1353:     proto_tree_add_item(tree, hf_dpnss_cc_msg_type, tvb, offset, 1, ENC_BIG_ENDIAN);",
          "1354:     octet = tvb_get_guint8(tvb,offset)&0x0f;",
          "1355:     offset++;",
          "",
          "[Removed Lines]",
          "1352:     tvb_end_offset = tvb_length(tvb);",
          "",
          "[Added Lines]",
          "1352:     tvb_end_offset = tvb_reported_length(tvb);",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-gsm_a_rr.c||epan/dissectors/packet-gsm_a_rr.c": [
          "File: epan/dissectors/packet-gsm_a_rr.c -> epan/dissectors/packet-gsm_a_rr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3656:     gint        bit_offset;",
          "3657:     gint        length;",
          "3658:     guint64     ma_length;",
          "3660:     guint16     bit_len = tvb_len << 3;",
          "3662:     curr_offset = offset;",
          "",
          "[Removed Lines]",
          "3659:     guint8      tvb_len = tvb_length(tvb);",
          "",
          "[Added Lines]",
          "3659:     guint8      tvb_len = tvb_reported_length(tvb);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3747: {",
          "3748:     guint32 curr_bit_offset;",
          "3749:     guint8  i;",
          "3752:     curr_bit_offset = offset<<3;",
          "",
          "[Removed Lines]",
          "3750:     guint8  tvb_len = tvb_length(tvb);",
          "",
          "[Added Lines]",
          "3750:     guint8  tvb_len = tvb_reported_length(tvb);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3770: de_rr_iax_rest_oct(tvbuff_t *tvb, proto_tree *subtree, packet_info *pinfo _U_, guint32 offset, guint len _U_, gchar *add_string _U_, int string_len _U_)",
          "3771: {",
          "3772:     guint32 curr_bit_offset;",
          "3775:     curr_bit_offset = offset<<3;",
          "",
          "[Removed Lines]",
          "3773:     guint8  tvb_len = tvb_length(tvb);",
          "",
          "[Added Lines]",
          "3773:     guint8  tvb_len = tvb_reported_length(tvb);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4228:     proto_item *item2;",
          "4229:     guint32     curr_offset, value;",
          "4230:     gint        bit_offset, bit_offset_sav;",
          "4232:     guint16     bit_len = tvb_len << 3;",
          "4234:     curr_offset = offset;",
          "",
          "[Removed Lines]",
          "4231:     guint8      tvb_len = tvb_length(tvb);",
          "",
          "[Added Lines]",
          "4231:     guint8      tvb_len = tvb_reported_length(tvb);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4294:     proto_item *item2;",
          "4295:     guint32     curr_offset;",
          "4296:     gint        bit_offset;",
          "4298:     guint16     bit_len = tvb_len << 3;",
          "4300:     curr_offset = offset;",
          "",
          "[Removed Lines]",
          "4297:     guint8      tvb_len = tvb_length(tvb);",
          "",
          "[Added Lines]",
          "4297:     guint8      tvb_len = tvb_reported_length(tvb);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4355:     proto_item *item2;",
          "4356:     guint32     curr_offset;",
          "4357:     gint        bit_offset;",
          "4359:     guint16     bit_len = tvb_len << 3;",
          "4361:     curr_offset = offset;",
          "",
          "[Removed Lines]",
          "4358:     guint8      tvb_len = tvb_length(tvb);",
          "",
          "[Added Lines]",
          "4358:     guint8      tvb_len = tvb_reported_length(tvb);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "4827: {",
          "4828:     guint32 curr_offset;",
          "4829:     gint    bit_offset;",
          "4832:     curr_offset = offset;",
          "4833:     bit_offset = curr_offset << 3;",
          "",
          "[Removed Lines]",
          "4830:     guint8  tvb_len = tvb_length(tvb);",
          "",
          "[Added Lines]",
          "4830:     guint8  tvb_len = tvb_reported_length(tvb);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "4941:     proto_item *item2;",
          "4942:     guint32     curr_offset;",
          "4943:     gint        bit_offset, bit_offset_sav;",
          "4945:     guint16     bit_len = tvb_len << 3;",
          "4947:     curr_offset = offset;",
          "",
          "[Removed Lines]",
          "4944:     guint8      tvb_len = tvb_length(tvb);",
          "",
          "[Added Lines]",
          "4944:     guint8      tvb_len = tvb_reported_length(tvb);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "6670:     guint32      curr_offset;",
          "6671:     gint         bit_offset, bit_offset_sav, idx;",
          "6672:     guint8       value;",
          "6674:     guint16      bit_len = tvb_len << 3;",
          "6676:     curr_offset = offset;",
          "",
          "[Removed Lines]",
          "6673:     guint8       tvb_len = tvb_length(tvb);",
          "",
          "[Added Lines]",
          "6673:     guint8       tvb_len = tvb_reported_length(tvb);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "7142:     guint32  curr_offset;",
          "7143:     gint     bit_offset;",
          "7144:     gboolean gprs_indicator;",
          "7147:     curr_offset = offset;",
          "7148:     bit_offset = curr_offset << 3;",
          "",
          "[Removed Lines]",
          "7145:     guint8   tvb_len = tvb_length(tvb);",
          "",
          "[Added Lines]",
          "7145:     guint8   tvb_len = tvb_reported_length(tvb);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "7215:     proto_item *item2, *item3;",
          "7216:     guint32     curr_offset;",
          "7217:     gint        bit_offset, bit_offset_sav;",
          "7219:     guint16     bit_len = tvb_len << 3;",
          "7221:     curr_offset = offset;",
          "",
          "[Removed Lines]",
          "7218:     guint8      tvb_len = tvb_length(tvb);",
          "",
          "[Added Lines]",
          "7218:     guint8      tvb_len = tvb_reported_length(tvb);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "7354:     guint32     curr_offset;",
          "7355:     gint        bit_offset, bit_offset_sav;",
          "7356:     guint8      value;",
          "7359:     curr_offset = offset;",
          "7360:     bit_offset = curr_offset << 3;",
          "",
          "[Removed Lines]",
          "7357:     guint8      tvb_len = tvb_length(tvb);",
          "",
          "[Added Lines]",
          "7357:     guint8      tvb_len = tvb_reported_length(tvb);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "7829:     proto_tree *subtree2;",
          "7830:     proto_item *item2;",
          "7831:     guint       bit_offset, bit_offset_sav;",
          "7833:     guint16     bit_len = tvb_len << 3;",
          "7834:     bit_offset          = offset << 3;",
          "",
          "[Removed Lines]",
          "7832:     guint8      tvb_len = tvb_length(tvb);",
          "",
          "[Added Lines]",
          "7832:     guint8      tvb_len = tvb_reported_length(tvb);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "9414:     ELEM_OPT_TV(0x7C,GSM_A_PDU_TYPE_RR, DE_RR_STARTING_TIME, NULL);",
          "9417:         ELEM_MAND_V(GSM_A_PDU_TYPE_RR, DE_RR_IA_REST_OCT, NULL);",
          "9419: }",
          "",
          "[Removed Lines]",
          "9416:     if(tvb_length_remaining(tvb,curr_offset) > 0)",
          "",
          "[Added Lines]",
          "9416:     if(tvb_reported_length_remaining(tvb,curr_offset) > 0)",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "9453:     ELEM_OPT_TV(0x7C,GSM_A_PDU_TYPE_RR, DE_RR_STARTING_TIME, NULL);",
          "9456:         ELEM_MAND_V(GSM_A_PDU_TYPE_RR, DE_RR_IAX_REST_OCT, NULL);",
          "9458: }",
          "",
          "[Removed Lines]",
          "9455:     if(tvb_length_remaining(tvb,curr_offset) > 0)",
          "",
          "[Added Lines]",
          "9455:     if(tvb_reported_length_remaining(tvb,curr_offset) > 0)",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "9492:     ELEM_MAND_V(GSM_A_PDU_TYPE_RR, DE_RR_WAIT_IND, \" - Wait Indication 4\");",
          "9495:         ELEM_MAND_V(GSM_A_PDU_TYPE_RR, DE_RR_IAR_REST_OCT, NULL);",
          "9497: }",
          "",
          "[Removed Lines]",
          "9494:     if(tvb_length_remaining(tvb,curr_offset) > 0)",
          "",
          "[Added Lines]",
          "9494:     if(tvb_reported_length_remaining(tvb,curr_offset) > 0)",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "10090:     guint32     curr_offset;",
          "10091:     gint        bit_offset, bit_offset_sav, bit_offset_sav2;",
          "10092:     guint8      value, idx;",
          "10094:     guint16     bit_len = tvb_len << 3;",
          "10096:     curr_offset = offset;",
          "",
          "[Removed Lines]",
          "10093:     guint8      tvb_len = tvb_length(tvb);",
          "",
          "[Added Lines]",
          "10093:     guint8      tvb_len = tvb_reported_length(tvb);",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "10440:     proto_item *item;",
          "10441:     guint32     curr_offset;",
          "10442:     guint       bit_offset, bit_offset_sav;",
          "10444:     guint16     bit_len = tvb_len << 3;",
          "10445:     guint8      idx;",
          "",
          "[Removed Lines]",
          "10443:     guint8      tvb_len = tvb_length(tvb);",
          "",
          "[Added Lines]",
          "10443:     guint8      tvb_len = tvb_reported_length(tvb);",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "10686:     int                     hf_idx;",
          "10687:     gboolean                nsd;",
          "10691:     if (len < 3){",
          "",
          "[Removed Lines]",
          "10689:     len = tvb_length(tvb);",
          "",
          "[Added Lines]",
          "10689:     len = tvb_reported_length(tvb);",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "10898:     gint                    ett_tree;",
          "10899:     int                     hf_idx;",
          "10903:     col_append_str(pinfo->cinfo, COL_INFO, \"(SACCH) \");",
          "",
          "[Removed Lines]",
          "10901:     len = tvb_length(tvb);",
          "",
          "[Added Lines]",
          "10901:     len = tvb_reported_length(tvb);",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-gsm_bsslap.c||epan/dissectors/packet-gsm_bsslap.c": [
          "File: epan/dissectors/packet-gsm_bsslap.c -> epan/dissectors/packet-gsm_bsslap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "562:     guint   curr_len;",
          "564:     curr_offset = offset;",
          "568:     ELEM_MAND_TV(BSSLAP_PARAM_CELL_IDENTITY, GSM_A_PDU_TYPE_COMMON, DE_CELL_ID, \"Serving Cell Identity\");",
          "",
          "[Removed Lines]",
          "565:     curr_len = tvb_length_remaining(tvb,offset);",
          "",
          "[Added Lines]",
          "565:     curr_len = tvb_reported_length_remaining(tvb,offset);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "591:     guint   curr_len;",
          "593:     curr_offset = offset;",
          "597:     ELEM_MAND_TV(BSSLAP_PARAM_CAUSE, GSM_A_PDU_TYPE_BSSLAP, DE_BLAP_CAUSE,NULL);",
          "",
          "[Removed Lines]",
          "594:     curr_len = tvb_length_remaining(tvb,offset);",
          "",
          "[Added Lines]",
          "594:     curr_len = tvb_reported_length_remaining(tvb,offset);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "608:     guint   curr_len;",
          "610:     curr_offset = offset;",
          "614:     ELEM_MAND_TV(BSSLAP_PARAM_CELL_IDENTITY, GSM_A_PDU_TYPE_COMMON, DE_CELL_ID, NULL);",
          "",
          "[Removed Lines]",
          "611:     curr_len = tvb_length_remaining(tvb,offset);",
          "",
          "[Added Lines]",
          "611:     curr_len = tvb_reported_length_remaining(tvb,offset);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "656:     guint   curr_len;",
          "658:     curr_offset = offset;",
          "662:     ELEM_MAND_TV(BSSLAP_PARAM_CAUSE, GSM_A_PDU_TYPE_BSSLAP, DE_BLAP_CAUSE,NULL);",
          "",
          "[Removed Lines]",
          "659:     curr_len = tvb_length_remaining(tvb,offset);",
          "",
          "[Added Lines]",
          "659:     curr_len = tvb_reported_length_remaining(tvb,offset);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "672:     guint   curr_len;",
          "674:     curr_offset = offset;",
          "678:     ELEM_MAND_TV(BSSLAP_PARAM_TIMING_ADVANCE, GSM_A_PDU_TYPE_BSSLAP, DE_BLAP_TA, NULL);",
          "",
          "[Removed Lines]",
          "675:     curr_len = tvb_length_remaining(tvb,offset);",
          "",
          "[Added Lines]",
          "675:     curr_len = tvb_reported_length_remaining(tvb,offset);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "693:     guint   curr_len;",
          "695:     curr_offset = offset;",
          "699:     ELEM_MAND_TV(BSSLAP_PARAM_RRLP_FLAG, GSM_A_PDU_TYPE_BSSLAP, DE_BLAP_RRLP_FLG,\"flag\");",
          "",
          "[Removed Lines]",
          "696:     curr_len = tvb_length_remaining(tvb,offset);",
          "",
          "[Added Lines]",
          "696:     curr_len = tvb_reported_length_remaining(tvb,offset);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "710:     guint   curr_len;",
          "712:     curr_offset = offset;",
          "716:     ELEM_MAND_TV(BSSLAP_PARAM_RRLP_FLAG, GSM_A_PDU_TYPE_BSSLAP, DE_BLAP_RRLP_FLG,\"flag\");",
          "",
          "[Removed Lines]",
          "713:     curr_len = tvb_length_remaining(tvb,offset);",
          "",
          "[Added Lines]",
          "713:     curr_len = tvb_reported_length_remaining(tvb,offset);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "735:     guint   curr_len;",
          "737:     curr_offset = offset;",
          "741:     ELEM_OPT_TV(BSSLAP_PARAM_DELTA_TIMER, GSM_A_PDU_TYPE_BSSLAP, DE_BLAP_DELTA_TIME, NULL);",
          "",
          "[Removed Lines]",
          "738:     curr_len = tvb_length_remaining(tvb,offset);",
          "",
          "[Added Lines]",
          "738:     curr_len = tvb_reported_length_remaining(tvb,offset);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "753:     guint   curr_len;",
          "755:     curr_offset = offset;",
          "759:     ELEM_MAND_TV(BSSLAP_PARAM_CHANNEL_DESCRIPTION,GSM_A_PDU_TYPE_RR, DE_RR_CH_DSC, NULL);",
          "",
          "[Removed Lines]",
          "756:     curr_len = tvb_length_remaining(tvb,offset);",
          "",
          "[Added Lines]",
          "756:     curr_len = tvb_reported_length_remaining(tvb,offset);",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-gsm_rlcmac.c||epan/dissectors/packet-gsm_rlcmac.c": [
          "File: epan/dissectors/packet-gsm_rlcmac.c -> epan/dissectors/packet-gsm_rlcmac.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7401:   proto_tree  *rlcmac_tree = NULL;",
          "7402:   csnStream_t  ar;",
          "7403:   gint         bit_offset  = 0;",
          "7406:   guint8 payload_type = tvb_get_bits8(tvb, 0, 2);",
          "7407:   guint8 rbsn = tvb_get_bits8(tvb, 8, 1);",
          "",
          "[Removed Lines]",
          "7404:   guint16      bit_length  = tvb_length(tvb) * 8;",
          "",
          "[Added Lines]",
          "7404:   guint16      bit_length  = tvb_reported_length(tvb) * 8;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7542:     proto_tree  *rlcmac_tree;",
          "7543:     csnStream_t  ar;",
          "7547:     col_set_str(pinfo->cinfo, COL_PROTOCOL, \"GSM RLC/MAC\");",
          "7548:     col_append_sep_str(pinfo->cinfo, COL_INFO, \":\", \"EGPRS DL:HEADER\");",
          "",
          "[Removed Lines]",
          "7545:     guint16      bit_length = tvb_length(tvb) * 8;",
          "",
          "[Added Lines]",
          "7545:     guint16      bit_length = tvb_reported_length(tvb) * 8;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7587:   proto_item  *ti;",
          "7588:   proto_tree  *rlcmac_tree;",
          "7589:   csnStream_t  ar;",
          "7592:   col_set_str(pinfo->cinfo, COL_PROTOCOL, \"GSM RLC/MAC\");",
          "7593:   col_append_sep_str(pinfo->cinfo, COL_INFO, \":\", \"PACCH ACCESS BURST\");",
          "",
          "[Removed Lines]",
          "7590:   guint16      bit_length = tvb_length(tvb) * 8;",
          "",
          "[Added Lines]",
          "7590:   guint16      bit_length = tvb_reported_length(tvb) * 8;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "7628: {",
          "7629:   csnStream_t ar;",
          "7630:   guint8      payload_type = tvb_get_bits8(tvb, 0, 2);",
          "7632:   guint16     bit_offset   = 0;",
          "7634:   col_set_str(pinfo->cinfo, COL_PROTOCOL, \"GSM RLC/MAC\");",
          "",
          "[Removed Lines]",
          "7631:   guint16     bit_length   = tvb_length(tvb) * 8;",
          "",
          "[Added Lines]",
          "7631:   guint16     bit_length   = tvb_reported_length(tvb) * 8;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "7716:     proto_tree  *rlcmac_tree;",
          "7717:     csnStream_t  ar;",
          "7718:     guint16      bit_offset = 0;",
          "7721:     col_set_str(pinfo->cinfo, COL_PROTOCOL,  \"GSM RLC/MAC\");",
          "7722:     col_append_sep_str(pinfo->cinfo, COL_INFO, \":\",  \"EGPRS UL:HEADER\");",
          "",
          "[Removed Lines]",
          "7719:     guint16      bit_length = tvb_length(tvb) * 8;",
          "",
          "[Added Lines]",
          "7719:     guint16      bit_length = tvb_reported_length(tvb) * 8;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "7805:   {",
          "7807:     dissect_egprs_data_segments(tvb, pinfo, data_tree, offset,",
          "7809:   }",
          "7810:   else",
          "7811:   {",
          "",
          "[Removed Lines]",
          "7808:                                 tvb_length(tvb), li_count, li_array);",
          "",
          "[Added Lines]",
          "7808:                                 tvb_reported_length(tvb), li_count, li_array);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "7852:   {",
          "7854:     dissect_egprs_data_segments(tvb, pinfo, data_tree, offset,",
          "7856:   }",
          "7857:   else",
          "7858:   {",
          "",
          "[Removed Lines]",
          "7855:                                 tvb_length(tvb), li_count, li_array);",
          "",
          "[Added Lines]",
          "7855:                                 tvb_reported_length(tvb), li_count, li_array);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "7908:       break;",
          "7909:   }",
          "7912: }",
          "",
          "[Removed Lines]",
          "7911:   return tvb_length(tvb);",
          "",
          "[Added Lines]",
          "7911:   return tvb_reported_length(tvb);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "7928:     rlc_ul->block_format = rlc_mac->block_format;",
          "7929:     rlc_ul->flags = rlc_mac->flags;",
          "7930:   }",
          "7932:   {",
          "7934:     rlc_ul->block_format = RLCMAC_PRACH;",
          "",
          "[Removed Lines]",
          "7931:   else if (tvb_length(tvb) < 3)",
          "",
          "[Added Lines]",
          "7931:   else if (tvb_reported_length(tvb) < 3)",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "7971:       break;",
          "7972:   }",
          "7975: }",
          "7977: void",
          "",
          "[Removed Lines]",
          "7974:   return tvb_length(tvb);",
          "",
          "[Added Lines]",
          "7974:   return tvb_reported_length(tvb);",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-l2tp.c||epan/dissectors/packet-l2tp.c": [
          "File: epan/dissectors/packet-l2tp.c -> epan/dissectors/packet-l2tp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2473:     control = tvb_get_ntohs(tvb, 0);",
          "2474:     switch (L2TP_VERSION(control)) {",
          "",
          "[Removed Lines]",
          "2471:     if (tvb_length(tvb) < 2)",
          "",
          "[Added Lines]",
          "2471:     if (tvb_captured_length(tvb) < 2)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2521:             process_l2tpv3_data_udp(tvb, pinfo, tree, l2tp_conv);",
          "2522:         }",
          "2524:     }",
          "",
          "[Removed Lines]",
          "2523:         return tvb_length(tvb);",
          "",
          "[Added Lines]",
          "2523:         return tvb_reported_length(tvb);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2662:             next_tvb = tvb_new_subset_remaining(tvb, idx);",
          "2663:             call_dissector(ppp_hdlc_handle, next_tvb, pinfo, tree);",
          "2664:         }",
          "2666:     }",
          "2668:     if (LENGTH_BIT(control))",
          "2669:         process_control_avps(tvb, pinfo, l2tp_tree, idx, length, -1, NULL);",
          "2672: }",
          "",
          "[Removed Lines]",
          "2665:         return tvb_length(tvb);",
          "2671:     return tvb_length(tvb);",
          "",
          "[Added Lines]",
          "2665:         return tvb_reported_length(tvb);",
          "2671:     return tvb_reported_length(tvb);",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-lapd.c||epan/dissectors/packet-lapd.c": [
          "File: epan/dissectors/packet-lapd.c -> epan/dissectors/packet-lapd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "283:  }",
          "287:  while (offset < available) {",
          "288:   byte = tvb_get_guint8(tvb,offset);",
          "289:   offset++;",
          "",
          "[Removed Lines]",
          "286:  available = tvb_length_remaining(tvb, offset);",
          "",
          "[Added Lines]",
          "286:  available = tvb_reported_length_remaining(tvb, offset);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "539:  if (has_crc) {",
          "544:   checksum <<= 8;",
          "549:   if (checksum == checksum_calculated) {",
          "",
          "[Removed Lines]",
          "542:   checksum_offset = tvb_length(tvb) - 2;",
          "546:   checksum_calculated = crc16_ccitt_tvb(tvb, tvb_length(tvb) - 2);",
          "",
          "[Added Lines]",
          "542:   checksum_offset = tvb_reported_length(tvb) - 2;",
          "546:   checksum_calculated = crc16_ccitt_tvb(tvb, tvb_reported_length(tvb) - 2);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "560:    expert_add_info(pinfo, pi, &ei_lapd_checksum_bad);",
          "561:   }",
          "565:  } else",
          "566:   next_tvb = tvb_new_subset_remaining(tvb, lapd_header_len);",
          "",
          "[Removed Lines]",
          "563:   next_tvb = tvb_new_subset_length(tvb, lapd_header_len, tvb_length_remaining(tvb,lapd_header_len) - 2);",
          "",
          "[Added Lines]",
          "563:   next_tvb = tvb_new_subset_length(tvb, lapd_header_len, tvb_reported_length_remaining(tvb,lapd_header_len) - 2);",
          "",
          "---------------"
        ],
        "epan/dissectors/packet-lapdm.c||epan/dissectors/packet-lapdm.c": [
          "File: epan/dissectors/packet-lapdm.c -> epan/dissectors/packet-lapdm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "224:     gboolean is_response = FALSE;",
          "228:         return;",
          "230:     col_set_str(pinfo->cinfo, COL_PROTOCOL, \"LAPDm\");",
          "",
          "[Removed Lines]",
          "227:     if (tvb_length(tvb) < LAPDM_HEADER_LEN)",
          "",
          "[Added Lines]",
          "227:     if (tvb_captured_length(tvb) < LAPDM_HEADER_LEN)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "275:     len = (length & LAPDM_LEN) >> LAPDM_LEN_SHIFT;",
          "277:     m = (length & LAPDM_M) >> LAPDM_M_SHIFT;",
          "",
          "[Removed Lines]",
          "278:     available_length = tvb_length(tvb) - LAPDM_HEADER_LEN;",
          "",
          "[Added Lines]",
          "278:     available_length = tvb_reported_length(tvb) - LAPDM_HEADER_LEN;",
          "",
          "---------------"
        ]
      }
    }
  ]
}