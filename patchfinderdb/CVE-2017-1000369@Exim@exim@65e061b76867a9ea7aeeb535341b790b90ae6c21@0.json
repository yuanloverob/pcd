{
  "cve_id": "CVE-2017-1000369",
  "cve_desc": "Exim supports the use of multiple \"-p\" command line arguments which are malloc()'ed and never free()'ed, used in conjunction with other issues allows attackers to cause arbitrary code execution. This affects exim version 4.89 and earlier. Please note that at this time upstream has released a patch (commit 65e061b76867a9ea7aeeb535341b790b90ae6c21), but it is not known if a new point release is available that addresses this issue at this time.",
  "repo": "Exim/exim",
  "patch_hash": "65e061b76867a9ea7aeeb535341b790b90ae6c21",
  "patch_info": {
    "commit_hash": "65e061b76867a9ea7aeeb535341b790b90ae6c21",
    "repo": "Exim/exim",
    "commit_url": "https://github.com/Exim/exim/commit/65e061b76867a9ea7aeeb535341b790b90ae6c21",
    "files": [
      "doc/doc-docbook/spec.xfpt",
      "src/src/exim.c"
    ],
    "message": "Cleanup (prevent repeated use of -p/-oMr to avoid mem leak)",
    "before_after_code_files": [
      "src/src/exim.c||src/src/exim.c"
    ]
  },
  "patch_diff": {
    "src/src/exim.c||src/src/exim.c": [
      "File: src/src/exim.c -> src/src/exim.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "3109:       else if (Ustrcmp(argrest, \"Mr\") == 0) received_protocol = argv[++i];",
      "",
      "[Added Lines]",
      "3109:       else if (Ustrcmp(argrest, \"Mr\") == 0)",
      "3111:         if (received_protocol)",
      "3112:           {",
      "3113:           fprintf(stderr, \"received_protocol is set already\\n\");",
      "3114:           exit(EXIT_FAILURE);",
      "3115:           }",
      "3116:         else received_protocol = argv[++i];",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "3203:     if (*argrest != 0)",
      "3204:       {",
      "3206:       if (hn == NULL)",
      "3207:         {",
      "3208:         received_protocol = argrest;",
      "",
      "[Removed Lines]",
      "3205:       uschar *hn = Ustrchr(argrest, ':');",
      "",
      "[Added Lines]",
      "3212:       uschar *hn;",
      "3214:       if (received_protocol)",
      "3215:         {",
      "3216:         fprintf(stderr, \"received_protocol is set already\\n\");",
      "3217:         exit(EXIT_FAILURE);",
      "3218:         }",
      "3220:       hn = Ustrchr(argrest, ':');",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "099223c706b1e6d9d844679c56bdcbf5d832f15f",
      "candidate_info": {
        "commit_hash": "099223c706b1e6d9d844679c56bdcbf5d832f15f",
        "repo": "Exim/exim",
        "commit_url": "https://github.com/Exim/exim/commit/099223c706b1e6d9d844679c56bdcbf5d832f15f",
        "files": [
          "doc/doc-docbook/spec.xfpt",
          "doc/doc-txt/ChangeLog",
          "src/src/exim.c"
        ],
        "message": "Cleanup (prevent repeated use of -p/-oMr to avoid mem leak)\n\n(cherry picked from commit 65e061b76867a9ea7aeeb535341b790b90ae6c21)\n(cherry picked from commit 35a043657fa583a0ce96be9da4fff22cb0232c4e)",
        "before_after_code_files": [
          "src/src/exim.c||src/src/exim.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "src/src/exim.c||src/src/exim.c"
          ],
          "candidate": [
            "src/src/exim.c||src/src/exim.c"
          ]
        }
      },
      "candidate_diff": {
        "src/src/exim.c||src/src/exim.c": [
          "File: src/src/exim.c -> src/src/exim.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "3095:       else if (Ustrcmp(argrest, \"Mr\") == 0) received_protocol = argv[++i];",
          "",
          "[Added Lines]",
          "3095:       else if (Ustrcmp(argrest, \"Mr\") == 0)",
          "3097:         if (received_protocol)",
          "3098:           {",
          "3099:           fprintf(stderr, \"received_protocol is set already\\n\");",
          "3100:           exit(EXIT_FAILURE);",
          "3101:           }",
          "3102:         else received_protocol = argv[++i];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3189:     if (*argrest != 0)",
          "3190:       {",
          "3192:       if (hn == NULL)",
          "3193:         {",
          "3194:         received_protocol = argrest;",
          "",
          "[Removed Lines]",
          "3191:       uschar *hn = Ustrchr(argrest, ':');",
          "",
          "[Added Lines]",
          "3198:       uschar *hn;",
          "3200:       if (received_protocol)",
          "3201:         {",
          "3202:         fprintf(stderr, \"received_protocol is set already\\n\");",
          "3203:         exit(EXIT_FAILURE);",
          "3204:         }",
          "3206:       hn = Ustrchr(argrest, ':');",
          "",
          "---------------"
        ]
      }
    }
  ]
}