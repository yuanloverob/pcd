{
  "cve_id": "CVE-2018-0734",
  "cve_desc": "The OpenSSL DSA signature algorithm has been shown to be vulnerable to a timing side channel attack. An attacker could use variations in the signing algorithm to recover the private key. Fixed in OpenSSL 1.1.1a (Affected 1.1.1). Fixed in OpenSSL 1.1.0j (Affected 1.1.0-1.1.0i). Fixed in OpenSSL 1.0.2q (Affected 1.0.2-1.0.2p).",
  "repo": "openssl/openssl",
  "patch_hash": "a9cfb8c2aa7254a4aa6a1716909e3f8cb78049b6",
  "patch_info": {
    "commit_hash": "a9cfb8c2aa7254a4aa6a1716909e3f8cb78049b6",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/a9cfb8c2aa7254a4aa6a1716909e3f8cb78049b6",
    "files": [
      "crypto/dsa/dsa_ossl.c"
    ],
    "message": "Timing vulnerability in DSA signature generation (CVE-2018-0734).\n\nAvoid a timing attack that leaks information via a side channel that\ntriggers when a BN is resized.  Increasing the size of the BNs\nprior to doing anything with them suppresses the attack.\n\nThanks due to Samuel Weiser for finding and locating this.\n\nReviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>\n(Merged from https://github.com/openssl/openssl/pull/7486)",
    "before_after_code_files": [
      "crypto/dsa/dsa_ossl.c||crypto/dsa/dsa_ossl.c"
    ]
  },
  "patch_diff": {
    "crypto/dsa/dsa_ossl.c||crypto/dsa/dsa_ossl.c": [
      "File: crypto/dsa/dsa_ossl.c -> crypto/dsa/dsa_ossl.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "10: #include <stdio.h>",
      "11: #include \"internal/cryptlib.h\"",
      "12: #include <openssl/bn.h>",
      "13: #include <openssl/sha.h>",
      "14: #include \"dsa_locl.h\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "12: #include \"internal/bn_int.h\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "180: {",
      "181:     BN_CTX *ctx = NULL;",
      "182:     BIGNUM *k, *kinv = NULL, *r = *rp;",
      "184:     int ret = 0;",
      "187:     if (!dsa->p || !dsa->q || !dsa->g) {",
      "188:         DSAerr(DSA_F_DSA_SIGN_SETUP, DSA_R_MISSING_PARAMETERS);",
      "",
      "[Removed Lines]",
      "183:     BIGNUM *l, *m;",
      "185:     int q_bits;",
      "",
      "[Added Lines]",
      "184:     BIGNUM *l;",
      "186:     int q_bits, q_words;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "192:     k = BN_new();",
      "193:     l = BN_new();",
      "196:         goto err;",
      "198:     if (ctx_in == NULL) {",
      "",
      "[Removed Lines]",
      "194:     m = BN_new();",
      "195:     if (k == NULL || l == NULL || m == NULL)",
      "",
      "[Added Lines]",
      "195:     if (k == NULL || l == NULL)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "205:     q_bits = BN_num_bits(dsa->q);",
      "209:         goto err;",
      "",
      "[Removed Lines]",
      "206:     if (!BN_set_bit(k, q_bits)",
      "207:         || !BN_set_bit(l, q_bits)",
      "208:         || !BN_set_bit(m, q_bits))",
      "",
      "[Added Lines]",
      "206:     q_words = bn_get_top(dsa->q);",
      "207:     if (!bn_wexpand(k, q_words + 2)",
      "208:         || !bn_wexpand(l, q_words + 2))",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "246:     if (!BN_add(l, k, dsa->q)",
      "249:         goto err;",
      "251:     if ((dsa)->meth->bn_mod_exp != NULL) {",
      "252:             if (!dsa->meth->bn_mod_exp(dsa, r, dsa->g, k, dsa->p, ctx,",
      "253:                                        dsa->method_mont_p))",
      "",
      "[Removed Lines]",
      "247:         || !BN_add(m, l, dsa->q)",
      "248:         || !BN_copy(k, BN_num_bits(l) > q_bits ? l : m))",
      "",
      "[Added Lines]",
      "249:         || !BN_add(k, l, dsa->q))",
      "252:     BN_consttime_swap(BN_is_bit_set(l, q_bits), k, l, q_words + 2);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "275:         BN_CTX_free(ctx);",
      "276:     BN_clear_free(k);",
      "277:     BN_clear_free(l);",
      "279:     return ret;",
      "280: }",
      "",
      "[Removed Lines]",
      "278:     BN_clear_free(m);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8abfe72e8c1de1b95f50aa0d9134803b4d00070f",
      "candidate_info": {
        "commit_hash": "8abfe72e8c1de1b95f50aa0d9134803b4d00070f",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/8abfe72e8c1de1b95f50aa0d9134803b4d00070f",
        "files": [
          "crypto/dsa/dsa_ossl.c"
        ],
        "message": "Timing vulnerability in DSA signature generation (CVE-2018-0734).\n\nAvoid a timing attack that leaks information via a side channel that\ntriggers when a BN is resized.  Increasing the size of the BNs\nprior to doing anything with them suppresses the attack.\n\nThanks due to Samuel Weiser for finding and locating this.\n\nReviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>\n(Merged from https://github.com/openssl/openssl/pull/7486)\n\n(cherry picked from commit a9cfb8c2aa7254a4aa6a1716909e3f8cb78049b6)",
        "before_after_code_files": [
          "crypto/dsa/dsa_ossl.c||crypto/dsa/dsa_ossl.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "crypto/dsa/dsa_ossl.c||crypto/dsa/dsa_ossl.c"
          ],
          "candidate": [
            "crypto/dsa/dsa_ossl.c||crypto/dsa/dsa_ossl.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/dsa/dsa_ossl.c||crypto/dsa/dsa_ossl.c": [
          "File: crypto/dsa/dsa_ossl.c -> crypto/dsa/dsa_ossl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #include <stdio.h>",
          "11: #include \"internal/cryptlib.h\"",
          "12: #include <openssl/bn.h>",
          "13: #include <openssl/sha.h>",
          "14: #include \"dsa_locl.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12: #include \"internal/bn_int.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "180: {",
          "181:     BN_CTX *ctx = NULL;",
          "182:     BIGNUM *k, *kinv = NULL, *r = *rp;",
          "184:     int ret = 0;",
          "187:     if (!dsa->p || !dsa->q || !dsa->g) {",
          "188:         DSAerr(DSA_F_DSA_SIGN_SETUP, DSA_R_MISSING_PARAMETERS);",
          "",
          "[Removed Lines]",
          "183:     BIGNUM *l, *m;",
          "185:     int q_bits;",
          "",
          "[Added Lines]",
          "184:     BIGNUM *l;",
          "186:     int q_bits, q_words;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "192:     k = BN_new();",
          "193:     l = BN_new();",
          "196:         goto err;",
          "198:     if (ctx_in == NULL) {",
          "",
          "[Removed Lines]",
          "194:     m = BN_new();",
          "195:     if (k == NULL || l == NULL || m == NULL)",
          "",
          "[Added Lines]",
          "195:     if (k == NULL || l == NULL)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "205:     q_bits = BN_num_bits(dsa->q);",
          "209:         goto err;",
          "",
          "[Removed Lines]",
          "206:     if (!BN_set_bit(k, q_bits)",
          "207:         || !BN_set_bit(l, q_bits)",
          "208:         || !BN_set_bit(m, q_bits))",
          "",
          "[Added Lines]",
          "206:     q_words = bn_get_top(dsa->q);",
          "207:     if (!bn_wexpand(k, q_words + 2)",
          "208:         || !bn_wexpand(l, q_words + 2))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "246:     if (!BN_add(l, k, dsa->q)",
          "249:         goto err;",
          "251:     if ((dsa)->meth->bn_mod_exp != NULL) {",
          "252:             if (!dsa->meth->bn_mod_exp(dsa, r, dsa->g, k, dsa->p, ctx,",
          "253:                                        dsa->method_mont_p))",
          "",
          "[Removed Lines]",
          "247:         || !BN_add(m, l, dsa->q)",
          "248:         || !BN_copy(k, BN_num_bits(l) > q_bits ? l : m))",
          "",
          "[Added Lines]",
          "249:         || !BN_add(k, l, dsa->q))",
          "252:     BN_consttime_swap(BN_is_bit_set(l, q_bits), k, l, q_words + 2);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "275:         BN_CTX_free(ctx);",
          "276:     BN_clear_free(k);",
          "277:     BN_clear_free(l);",
          "279:     return ret;",
          "280: }",
          "",
          "[Removed Lines]",
          "278:     BN_clear_free(m);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ef11e19d1365eea2b1851e6f540a0bf365d303e7",
      "candidate_info": {
        "commit_hash": "ef11e19d1365eea2b1851e6f540a0bf365d303e7",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/ef11e19d1365eea2b1851e6f540a0bf365d303e7",
        "files": [
          "crypto/dsa/dsa_ossl.c"
        ],
        "message": "Timing vulnerability in DSA signature generation (CVE-2018-0734).\n\nAvoid a timing attack that leaks information via a side channel that\ntriggers when a BN is resized.  Increasing the size of the BNs\nprior to doing anything with them suppresses the attack.\n\nThanks due to Samuel Weiser for finding and locating this.\n\nReviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>\n(Merged from https://github.com/openssl/openssl/pull/7486)\n\n(cherry picked from commit a9cfb8c2aa7254a4aa6a1716909e3f8cb78049b6)",
        "before_after_code_files": [
          "crypto/dsa/dsa_ossl.c||crypto/dsa/dsa_ossl.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "crypto/dsa/dsa_ossl.c||crypto/dsa/dsa_ossl.c"
          ],
          "candidate": [
            "crypto/dsa/dsa_ossl.c||crypto/dsa/dsa_ossl.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/dsa/dsa_ossl.c||crypto/dsa/dsa_ossl.c": [
          "File: crypto/dsa/dsa_ossl.c -> crypto/dsa/dsa_ossl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: #include <stdio.h>",
          "13: #include \"internal/cryptlib.h\"",
          "14: #include <openssl/bn.h>",
          "15: #include <openssl/sha.h>",
          "16: #include \"dsa_locl.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14: #include \"internal/bn_int.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "182: {",
          "183:     BN_CTX *ctx = NULL;",
          "184:     BIGNUM *k, *kinv = NULL, *r = *rp;",
          "186:     int ret = 0;",
          "189:     if (!dsa->p || !dsa->q || !dsa->g) {",
          "190:         DSAerr(DSA_F_DSA_SIGN_SETUP, DSA_R_MISSING_PARAMETERS);",
          "",
          "[Removed Lines]",
          "185:     BIGNUM *l, *m;",
          "187:     int q_bits;",
          "",
          "[Added Lines]",
          "186:     BIGNUM *l;",
          "188:     int q_bits, q_words;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "194:     k = BN_new();",
          "195:     l = BN_new();",
          "198:         goto err;",
          "200:     if (ctx_in == NULL) {",
          "",
          "[Removed Lines]",
          "196:     m = BN_new();",
          "197:     if (k == NULL || l == NULL || m == NULL)",
          "",
          "[Added Lines]",
          "197:     if (k == NULL || l == NULL)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "207:     q_bits = BN_num_bits(dsa->q);",
          "211:         goto err;",
          "",
          "[Removed Lines]",
          "208:     if (!BN_set_bit(k, q_bits)",
          "209:         || !BN_set_bit(l, q_bits)",
          "210:         || !BN_set_bit(m, q_bits))",
          "",
          "[Added Lines]",
          "208:     q_words = bn_get_top(dsa->q);",
          "209:     if (!bn_wexpand(k, q_words + 2)",
          "210:         || !bn_wexpand(l, q_words + 2))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "248:     if (!BN_add(l, k, dsa->q)",
          "251:         goto err;",
          "253:     if ((dsa)->meth->bn_mod_exp != NULL) {",
          "254:             if (!dsa->meth->bn_mod_exp(dsa, r, dsa->g, k, dsa->p, ctx,",
          "255:                                        dsa->method_mont_p))",
          "",
          "[Removed Lines]",
          "249:         || !BN_add(m, l, dsa->q)",
          "250:         || !BN_copy(k, BN_num_bits(l) > q_bits ? l : m))",
          "",
          "[Added Lines]",
          "251:         || !BN_add(k, l, dsa->q))",
          "254:     BN_consttime_swap(BN_is_bit_set(l, q_bits), k, l, q_words + 2);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "277:         BN_CTX_free(ctx);",
          "278:     BN_clear_free(k);",
          "279:     BN_clear_free(l);",
          "281:     return ret;",
          "282: }",
          "",
          "[Removed Lines]",
          "280:     BN_clear_free(m);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c0caa945f6ef30363e0d01d75155f20248403df4",
      "candidate_info": {
        "commit_hash": "c0caa945f6ef30363e0d01d75155f20248403df4",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c0caa945f6ef30363e0d01d75155f20248403df4",
        "files": [
          "crypto/dsa/dsa_ossl.c"
        ],
        "message": "Address a timing side channel whereby it is possible to determine some\n\ninformation about the length of a value used in DSA operations from\na large number of signatures.\n\nThis doesn't rate as a CVE because:\n\n* For the non-constant time code, there are easier ways to extract\n  more information.\n\n* For the constant time code, it requires a significant number of signatures\n  to leak a small amount of information.\n\nThanks to Neals Fournaise, Eliane Jaulmes and Jean-Rene Reinhard for\nreporting this issue.\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4576)",
        "before_after_code_files": [
          "crypto/dsa/dsa_ossl.c||crypto/dsa/dsa_ossl.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "crypto/dsa/dsa_ossl.c||crypto/dsa/dsa_ossl.c"
          ],
          "candidate": [
            "crypto/dsa/dsa_ossl.c||crypto/dsa/dsa_ossl.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/dsa/dsa_ossl.c||crypto/dsa/dsa_ossl.c": [
          "File: crypto/dsa/dsa_ossl.c -> crypto/dsa/dsa_ossl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "146: {",
          "147:     BN_CTX *ctx = NULL;",
          "148:     BIGNUM *k, *kinv = NULL, *r = *rp;",
          "149:     int ret = 0;",
          "151:     if (!dsa->p || !dsa->q || !dsa->g) {",
          "152:         DSAerr(DSA_F_DSA_SIGN_SETUP, DSA_R_MISSING_PARAMETERS);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "149:     BIGNUM *l, *m;",
          "151:     int q_bits;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "154:     }",
          "156:     k = BN_new();",
          "158:         goto err;",
          "160:     if (ctx_in == NULL) {",
          "",
          "[Removed Lines]",
          "157:     if (k == NULL)",
          "",
          "[Added Lines]",
          "159:     l = BN_new();",
          "160:     m = BN_new();",
          "161:     if (k == NULL || l == NULL || m == NULL)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "163:     } else",
          "164:         ctx = ctx_in;",
          "167:     do {",
          "168:         if (dgst != NULL) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "171:     q_bits = BN_num_bits(dsa->q);",
          "172:     if (!BN_set_bit(k, q_bits)",
          "173:         || !BN_set_bit(l, q_bits)",
          "174:         || !BN_set_bit(m, q_bits))",
          "175:         goto err;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "198:         goto err;",
          "204:     if ((dsa)->meth->bn_mod_exp != NULL) {",
          "205:             if (!dsa->meth->bn_mod_exp(dsa, r, dsa->g, k, dsa->p, ctx,",
          "",
          "[Removed Lines]",
          "197:     if (!BN_add(k, k, dsa->q))",
          "199:     if (BN_num_bits(k) <= BN_num_bits(dsa->q)) {",
          "200:         if (!BN_add(k, k, dsa->q))",
          "201:             goto err;",
          "202:     }",
          "",
          "[Added Lines]",
          "212:     if (!BN_add(l, k, dsa->q)",
          "213:         || !BN_add(m, l, dsa->q)",
          "214:         || !BN_copy(k, BN_num_bits(l) > q_bits ? l : m))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "227:     if (ctx != ctx_in)",
          "228:         BN_CTX_free(ctx);",
          "229:     BN_clear_free(k);",
          "230:     return ret;",
          "231: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "243:     BN_clear_free(l);",
          "244:     BN_clear_free(m);",
          "",
          "---------------"
        ]
      }
    }
  ]
}