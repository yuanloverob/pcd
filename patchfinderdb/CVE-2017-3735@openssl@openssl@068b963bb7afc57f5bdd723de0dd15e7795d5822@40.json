{
  "cve_id": "CVE-2017-3735",
  "cve_desc": "While parsing an IPAddressFamily extension in an X.509 certificate, it is possible to do a one-byte overread. This would result in an incorrect text display of the certificate. This bug has been present since 2006 and is present in all versions of OpenSSL before 1.0.2m and 1.1.0g.",
  "repo": "openssl/openssl",
  "patch_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
  "patch_info": {
    "commit_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "files": [
      "crypto/x509v3/v3_addr.c"
    ],
    "message": "Avoid out-of-bounds read\n\nFixes CVE 2017-3735\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\n(Merged from https://github.com/openssl/openssl/pull/4276)\n\n(cherry picked from commit b23171744b01e473ebbfd6edad70c1c3825ffbcd)",
    "before_after_code_files": [
      "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c"
    ]
  },
  "patch_diff": {
    "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c": [
      "File: crypto/x509v3/v3_addr.c -> crypto/x509v3/v3_addr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "85: unsigned int X509v3_addr_get_afi(const IPAddressFamily *f)",
      "86: {",
      "91: }",
      "",
      "[Removed Lines]",
      "87:     return ((f != NULL &&",
      "88:              f->addressFamily != NULL && f->addressFamily->data != NULL)",
      "89:             ? ((f->addressFamily->data[0] << 8) | (f->addressFamily->data[1]))",
      "90:             : 0);",
      "",
      "[Added Lines]",
      "87:     if (f == NULL",
      "88:             || f->addressFamily == NULL",
      "89:             || f->addressFamily->data == NULL",
      "90:             || f->addressFamily->length < 2)",
      "91:         return 0;",
      "92:     return (f->addressFamily->data[0] << 8) | f->addressFamily->data[1];",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "70c0b541b940349a0cfdc903f4491aa55f6fda0c",
      "candidate_info": {
        "commit_hash": "70c0b541b940349a0cfdc903f4491aa55f6fda0c",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/70c0b541b940349a0cfdc903f4491aa55f6fda0c",
        "files": [
          "Configurations/unix-Makefile.tmpl"
        ],
        "message": "Prepare tarball in dist directory\n\nWe changed directory to the wrong directory.\nThis change also separates the preparation phase from the tarball\nbuilding phase.\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4179)\n\n(cherry picked from commit 17c84aa763b1d69c5446542bf9b4e2f642c570f2)",
        "before_after_code_files": [
          "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Configurations/unix-Makefile.tmpl||Configurations/unix-Makefile.tmpl": [
          "File: Configurations/unix-Makefile.tmpl -> Configurations/unix-Makefile.tmpl",
          "--- Hunk 1 ---",
          "[Context before]",
          "663:         mkdir -p $$TMPDIR/$$DISTDIR/`dirname $$F`; \\",
          "664:         cp $$F $$TMPDIR/$$DISTDIR/$$F; \\",
          "665:     done); \\",
          "667:   $(PREPARE_CMD); \\",
          "672:  | (cd $(SRCDIR); gzip --best > $(TARFILE).gz); \\",
          "673:  rm -rf $$TMPDIR",
          "674:  cd $(SRCDIR); ls -l $(TARFILE).gz",
          "",
          "[Removed Lines]",
          "666:  (cd $$TMPDIR; \\",
          "668:   find $$TMPDIR/$$DISTDIR -type d -print | xargs chmod 755; \\",
          "669:   find $$TMPDIR/$$DISTDIR -type f -print | xargs chmod a+r; \\",
          "670:   find $$TMPDIR/$$DISTDIR -type f -perm -0100 -print | xargs chmod a+x; \\",
          "671:   $(TAR_COMMAND) $$DISTDIR) \\",
          "",
          "[Added Lines]",
          "666:  (cd $$TMPDIR/$$DISTDIR; \\",
          "668:   find . -type d -print | xargs chmod 755; \\",
          "669:   find . -type f -print | xargs chmod a+r; \\",
          "670:   find . -type f -perm -0100 -print | xargs chmod a+x); \\",
          "671:  (cd $$TMPDIR; $(TAR_COMMAND) $$DISTDIR) \\",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c231202e10a078fc52cd51301553a1a09a957f8f",
      "candidate_info": {
        "commit_hash": "c231202e10a078fc52cd51301553a1a09a957f8f",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c231202e10a078fc52cd51301553a1a09a957f8f",
        "files": [
          "crypto/asn1/a_time.c",
          "include/openssl/asn1.h"
        ],
        "message": "Fix ASN1_TIME_to_generalizedtime to take a const ASN1_TIME\n\nFixes #1526\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3360)\n(cherry picked from commit 9bfeeef8ee2220339e601a028fa991c30d296ed4)",
        "before_after_code_files": [
          "crypto/asn1/a_time.c||crypto/asn1/a_time.c",
          "include/openssl/asn1.h||include/openssl/asn1.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/asn1/a_time.c||crypto/asn1/a_time.c": [
          "File: crypto/asn1/a_time.c -> crypto/asn1/a_time.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "59: }",
          "63:                                                    ASN1_GENERALIZEDTIME **out)",
          "64: {",
          "65:     ASN1_GENERALIZEDTIME *ret = NULL;",
          "",
          "[Removed Lines]",
          "62: ASN1_GENERALIZEDTIME *ASN1_TIME_to_generalizedtime(ASN1_TIME *t,",
          "",
          "[Added Lines]",
          "62: ASN1_GENERALIZEDTIME *ASN1_TIME_to_generalizedtime(const ASN1_TIME *t,",
          "",
          "---------------"
        ],
        "include/openssl/asn1.h||include/openssl/asn1.h": [
          "File: include/openssl/asn1.h -> include/openssl/asn1.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "625: ASN1_TIME *ASN1_TIME_adj(ASN1_TIME *s, time_t t,",
          "626:                          int offset_day, long offset_sec);",
          "627: int ASN1_TIME_check(const ASN1_TIME *t);",
          "630: int ASN1_TIME_set_string(ASN1_TIME *s, const char *str);",
          "632: int i2a_ASN1_INTEGER(BIO *bp, const ASN1_INTEGER *a);",
          "",
          "[Removed Lines]",
          "628: ASN1_GENERALIZEDTIME *ASN1_TIME_to_generalizedtime(ASN1_TIME *t, ASN1_GENERALIZEDTIME",
          "",
          "[Added Lines]",
          "628: ASN1_GENERALIZEDTIME *ASN1_TIME_to_generalizedtime(const ASN1_TIME *t,",
          "629:                                                    ASN1_GENERALIZEDTIME **out);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b30d184aaeab32e9a472429857d6fd262005229e",
      "candidate_info": {
        "commit_hash": "b30d184aaeab32e9a472429857d6fd262005229e",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b30d184aaeab32e9a472429857d6fd262005229e",
        "files": [
          "crypto/evp/evp_err.c",
          "include/openssl/evp.h",
          "util/libcrypto.num"
        ],
        "message": "make update\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4503)",
        "before_after_code_files": [
          "crypto/evp/evp_err.c||crypto/evp/evp_err.c",
          "include/openssl/evp.h||include/openssl/evp.h",
          "util/libcrypto.num||util/libcrypto.num"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/evp/evp_err.c||crypto/evp/evp_err.c": [
          "File: crypto/evp/evp_err.c -> crypto/evp/evp_err.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "72:     {ERR_FUNC(EVP_F_EVP_PKEY_NEW), \"EVP_PKEY_new\"},",
          "73:     {ERR_FUNC(EVP_F_EVP_PKEY_PARAMGEN), \"EVP_PKEY_paramgen\"},",
          "74:     {ERR_FUNC(EVP_F_EVP_PKEY_PARAMGEN_INIT), \"EVP_PKEY_paramgen_init\"},",
          "75:     {ERR_FUNC(EVP_F_EVP_PKEY_SIGN), \"EVP_PKEY_sign\"},",
          "76:     {ERR_FUNC(EVP_F_EVP_PKEY_SIGN_INIT), \"EVP_PKEY_sign_init\"},",
          "77:     {ERR_FUNC(EVP_F_EVP_PKEY_VERIFY), \"EVP_PKEY_verify\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "75:     {ERR_FUNC(EVP_F_EVP_PKEY_SET1_ENGINE), \"EVP_PKEY_set1_engine\"},",
          "",
          "---------------"
        ],
        "include/openssl/evp.h||include/openssl/evp.h": [
          "File: include/openssl/evp.h -> include/openssl/evp.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1508: # define EVP_F_EVP_PKEY_NEW                               106",
          "1509: # define EVP_F_EVP_PKEY_PARAMGEN                          148",
          "1510: # define EVP_F_EVP_PKEY_PARAMGEN_INIT                     149",
          "1511: # define EVP_F_EVP_PKEY_SIGN                              140",
          "1512: # define EVP_F_EVP_PKEY_SIGN_INIT                         141",
          "1513: # define EVP_F_EVP_PKEY_VERIFY                            142",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1511: # define EVP_F_EVP_PKEY_SET1_ENGINE                       187",
          "",
          "---------------"
        ],
        "util/libcrypto.num||util/libcrypto.num": [
          "File: util/libcrypto.num -> util/libcrypto.num",
          "--- Hunk 1 ---",
          "[Context before]",
          "4231: ZINT64_it                               4215 1_1_0f EXIST:!EXPORT_VAR_AS_FUNCTION:VARIABLE:",
          "4232: ZINT64_it                               4215 1_1_0f EXIST:EXPORT_VAR_AS_FUNCTION:FUNCTION:",
          "4233: CRYPTO_secure_clear_free                4315 1_1_0g EXIST::FUNCTION:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4234: EVP_PKEY_set1_engine                    4347 1_1_0g EXIST::FUNCTION:ENGINE",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "190909aaabf1d8abf48b0c92a9d425c8f0bd2481",
      "candidate_info": {
        "commit_hash": "190909aaabf1d8abf48b0c92a9d425c8f0bd2481",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/190909aaabf1d8abf48b0c92a9d425c8f0bd2481",
        "files": [
          "apps/s_time.c"
        ],
        "message": "Update PR#3925\n\nReviewed-by: Tim Hudson <tjh@openssl.org>\nReviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3925)",
        "before_after_code_files": [
          "apps/s_time.c||apps/s_time.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/s_time.c||apps/s_time.c": [
          "File: apps/s_time.c -> apps/s_time.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "229:                                    fmt_http_get_cmd, www_path);",
          "230:             if (SSL_write(scon, buf, buf_len) <= 0)",
          "231:                 goto end;",
          "233:                 if (i > 0) bytes_read += i;",
          "234:         }",
          "235: #ifdef NO_SHUTDOWN",
          "",
          "[Removed Lines]",
          "232:             while ((i = SSL_read(scon, buf, sizeof(buf))) > 0 || SSL_get_error(scon, i) == SSL_ERROR_WANT_READ)",
          "",
          "[Added Lines]",
          "232:             while ((i = SSL_read(scon, buf, sizeof(buf))) > 0 ||",
          "233:                         SSL_get_error(scon, i) == SSL_ERROR_WANT_READ ||",
          "234:                         SSL_get_error(scon, i) == SSL_ERROR_WANT_WRITE)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "287:                                fmt_http_get_cmd, www_path);",
          "288:         if (SSL_write(scon, buf, buf_len) <= 0)",
          "289:             goto end;",
          "291:             continue;",
          "292:     }",
          "293: #ifdef NO_SHUTDOWN",
          "",
          "[Removed Lines]",
          "290:         while ((i = SSL_read(scon, buf, sizeof(buf))) > 0 || SSL_get_error(scon, i) == SSL_ERROR_WANT_READ)",
          "",
          "[Added Lines]",
          "292:         while ((i = SSL_read(scon, buf, sizeof(buf))) > 0 ||",
          "293:                     SSL_get_error(scon, i) == SSL_ERROR_WANT_READ ||",
          "294:                     SSL_get_error(scon, i) == SSL_ERROR_WANT_WRITE)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "318:                          www_path);",
          "319:             if (SSL_write(scon, buf, strlen(buf)) <= 0)",
          "320:                 goto end;",
          "322:                 if (i > 0) bytes_read += i;",
          "323:         }",
          "324: #ifdef NO_SHUTDOWN",
          "",
          "[Removed Lines]",
          "321:             while ((i = SSL_read(scon, buf, sizeof(buf))) > 0 || SSL_get_error(scon, i) == SSL_ERROR_WANT_READ)",
          "",
          "[Added Lines]",
          "325:             while ((i = SSL_read(scon, buf, sizeof(buf))) > 0 ||",
          "326:                         SSL_get_error(scon, i) == SSL_ERROR_WANT_READ ||",
          "327:                         SSL_get_error(scon, i) == SSL_ERROR_WANT_WRITE)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dba975bd2f75683903ca549c2c80dc1a15b13e22",
      "candidate_info": {
        "commit_hash": "dba975bd2f75683903ca549c2c80dc1a15b13e22",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/dba975bd2f75683903ca549c2c80dc1a15b13e22",
        "files": [
          "apps/passwd.c"
        ],
        "message": "Fix coding style in apps/passwd file\n\nReformat some indents and braces based on OpenSSL coding style spec.\n\nSigned-off-by: Paul Yang <paulyang.inf@gmail.com>\n\nReviewed-by: Matt Caswell <matt@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3586)\n(cherry picked from commit 72d8b823bbe749da528f386408541ae1daa644c9)",
        "before_after_code_files": [
          "apps/passwd.c||apps/passwd.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/passwd.c||apps/passwd.c": [
          "File: apps/passwd.c -> apps/passwd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "79:     char *salt_malloc = NULL, *passwd_malloc = NULL, *prog;",
          "80:     OPTION_CHOICE o;",
          "81:     int in_stdin = 0, pw_source_defined = 0;",
          "83:     int in_noverify = 0;",
          "85:     int passed_salt = 0, quiet = 0, table = 0, reverse = 0;",
          "86:     int ret = 1, usecrypt = 0, use1 = 0, useapr1 = 0;",
          "87:     size_t passwd_malloc_size = 0, pw_maxlen = 256;",
          "",
          "[Removed Lines]",
          "82: #ifndef OPENSSL_NO_UI",
          "84: #endif",
          "",
          "[Added Lines]",
          "82: # ifndef OPENSSL_NO_UI",
          "84: # endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "105:             pw_source_defined = 1;",
          "106:             break;",
          "107:         case OPT_NOVERIFY:",
          "109:             in_noverify = 1;",
          "111:             break;",
          "112:         case OPT_QUIET:",
          "113:             quiet = 1;",
          "",
          "[Removed Lines]",
          "108: #ifndef OPENSSL_NO_UI",
          "110: #endif",
          "",
          "[Added Lines]",
          "108: # ifndef OPENSSL_NO_UI",
          "110: # endif",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "198:     }",
          "200:     if ((in == NULL) && (passwds == NULL)) {",
          "201:         if (1) {",
          "204:             static char *passwds_static[2] = { NULL, NULL };",
          "206:             passwds = passwds_static;",
          "208:                 if (EVP_read_pw_string",
          "209:                     (passwd_malloc, passwd_malloc_size, \"Password: \",",
          "210:                      !(passed_salt || in_noverify)) != 0)",
          "211:                     goto end;",
          "212:             passwds[0] = passwd_malloc;",
          "213:         } else {",
          "215:             BIO_printf(bio_err, \"password required\\n\");",
          "216:             goto end;",
          "217:         }",
          "218:     }",
          "221:     if (in == NULL) {",
          "222:         assert(passwds != NULL);",
          "223:         assert(*passwds != NULL);",
          "",
          "[Removed Lines]",
          "202: #ifndef OPENSSL_NO_UI",
          "207:             if (in == NULL)",
          "214: #endif",
          "",
          "[Added Lines]",
          "207: # ifndef OPENSSL_NO_UI",
          "212:             if (in == NULL) {",
          "217:             }",
          "220: # endif",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "228:                            quiet, table, reverse, pw_maxlen, usecrypt, use1,",
          "229:                            useapr1))",
          "230:                 goto end;",
          "236:         int done;",
          "238:         assert(passwd != NULL);",
          "",
          "[Removed Lines]",
          "231:         }",
          "232:         while (*passwds != NULL);",
          "233:     } else",
          "235:     {",
          "",
          "[Added Lines]",
          "236:         } while (*passwds != NULL);",
          "237:     } else {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "240:             int r = BIO_gets(in, passwd, pw_maxlen + 1);",
          "241:             if (r > 0) {",
          "242:                 char *c = (strchr(passwd, '\\n'));",
          "247:                     char trash[BUFSIZ];",
          "248:                     do",
          "",
          "[Removed Lines]",
          "243:                 if (c != NULL)",
          "245:                 else {",
          "",
          "[Added Lines]",
          "246:                 if (c != NULL) {",
          "248:                 } else {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "256:                     goto end;",
          "257:             }",
          "258:             done = (r <= 0);",
          "261:     }",
          "262:     ret = 0;",
          "",
          "[Removed Lines]",
          "259:         }",
          "260:         while (!done);",
          "",
          "[Added Lines]",
          "262:         } while (!done);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "433:     if (!passed_salt) {",
          "434: # ifndef OPENSSL_NO_DES",
          "435:         if (usecrypt) {",
          "439:             if (RAND_bytes((unsigned char *)*salt_p, 2) <= 0)",
          "440:                 goto end;",
          "",
          "[Removed Lines]",
          "436:             if (*salt_malloc_p == NULL) {",
          "438:             }",
          "",
          "[Added Lines]",
          "438:             if (*salt_malloc_p == NULL)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "452:         if (use1 || useapr1) {",
          "453:             int i;",
          "458:             if (RAND_bytes((unsigned char *)*salt_p, 8) <= 0)",
          "459:                 goto end;",
          "",
          "[Removed Lines]",
          "455:             if (*salt_malloc_p == NULL) {",
          "457:             }",
          "",
          "[Added Lines]",
          "456:             if (*salt_malloc_p == NULL)",
          "",
          "---------------"
        ]
      }
    }
  ]
}