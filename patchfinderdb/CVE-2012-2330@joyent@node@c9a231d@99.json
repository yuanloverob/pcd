{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4b1d49256193dd47a9f324a128c2a944bca72398",
      "candidate_info": {
        "commit_hash": "4b1d49256193dd47a9f324a128c2a944bca72398",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/4b1d49256193dd47a9f324a128c2a944bca72398",
        "files": [
          "test/simple/test-typed-arrays-typenames.js",
          "test/simple/test-typed-arrays.js"
        ],
        "message": "test: merge typed arrays tests\n\nMerge simple/test-typed-arrays-typenames into simple/test-typed-arrays.",
        "before_after_code_files": [
          "test/simple/test-typed-arrays-typenames.js||test/simple/test-typed-arrays-typenames.js",
          "test/simple/test-typed-arrays.js||test/simple/test-typed-arrays.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-typed-arrays-typenames.js||test/simple/test-typed-arrays-typenames.js": [
          "File: test/simple/test-typed-arrays-typenames.js -> test/simple/test-typed-arrays-typenames.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-typed-arrays.js||test/simple/test-typed-arrays.js": [
          "File: test/simple/test-typed-arrays.js -> test/simple/test-typed-arrays.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: var common = require('../common');",
          "29: var assert = require('assert');",
          "37: var buffer = new Buffer(8);",
          "",
          "[Removed Lines]",
          "30: var SlowBuffer = process.binding('buffer').SlowBuffer;",
          "31: var ArrayBuffer = process.binding('typed_array').ArrayBuffer;",
          "32: var Int32Array = process.binding('typed_array').Int32Array;",
          "33: var Int16Array = process.binding('typed_array').Int16Array;",
          "34: var Uint8Array = process.binding('typed_array').Uint8Array;",
          "",
          "[Added Lines]",
          "31: [",
          "32:   'ArrayBuffer',",
          "33:   'Int8Array',",
          "34:   'Uint8Array',",
          "35:   'Int16Array',",
          "36:   'Uint16Array',",
          "37:   'Int32Array',",
          "38:   'Uint32Array',",
          "39:   'Float32Array',",
          "40:   'Float64Array'",
          "41: ].forEach(function(name) {",
          "42:   var expected = '[object ' + name + ']';",
          "43:   var clazz = global[name];",
          "44:   var obj = new clazz(1);",
          "46:   assert.equal(obj.toString(), expected);",
          "47:   assert.equal(Object.prototype.toString.call(obj), expected);",
          "49:   obj = new DataView(obj);",
          "50:   assert.equal(obj.toString(), '[object DataView]');",
          "51:   assert.equal(Object.prototype.toString.call(obj), '[object DataView]');",
          "52: });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "208b2307440f95946b232c6a23e2547b7dd94e89",
      "candidate_info": {
        "commit_hash": "208b2307440f95946b232c6a23e2547b7dd94e89",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/208b2307440f95946b232c6a23e2547b7dd94e89",
        "files": [
          "doc/api/repl.markdown",
          "lib/_debugger.js",
          "lib/repl.js",
          "src/node.js",
          "test/simple/test-repl-options.js"
        ],
        "message": "repl: add a 'useColors' option to the repl\n\nThis should only be minimally used, since the `terminal` value will usually be\nwhat you are expecting. This option is specifically for the case where `terminal`\nis false, but you still want colors to be output (or vice-versa).",
        "before_after_code_files": [
          "lib/_debugger.js||li_debugger.js",
          "lib/repl.js||lirepl.js",
          "src/node.js||src/node.js",
          "test/simple/test-repl-options.js||test/simple/test-repl-options.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/_debugger.js||li_debugger.js": [
          "File: lib/_debugger.js -> li_debugger.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "690: }).join(',\\n');",
          "694:   if (!sourceText) return '';",
          "696:   var head = sourceText.slice(0, position),",
          "697:       tail = sourceText.slice(position);",
          "701:     tail = tail.replace(/(.+?)([^\\w]|$)/, '\\033[32m$1\\033[39m$2');",
          "702:   }",
          "",
          "[Removed Lines]",
          "693: function SourceUnderline(sourceText, position, tty) {",
          "700:   if (tty && !repl.disableColors) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "758:   if (parseInt(process.env['NODE_NO_READLINE'], 10)) {",
          "759:     opts.terminal = false;",
          "760:   }",
          "761:   this.repl = repl.start(opts);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1134:       if (current) {",
          "1135:         line = SourceUnderline(lines[i],",
          "1136:                                client.currentSourceColumn,",
          "1138:       } else {",
          "1139:         line = lines[i];",
          "1140:       }",
          "",
          "[Removed Lines]",
          "1137:                                self.stdout.isTTY);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/repl.js||lirepl.js": [
          "File: lib/repl.js -> lirepl.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "59: var context;",
          "64: module.filename = path.resolve('repl');",
          "",
          "[Removed Lines]",
          "61: exports.disableColors = process.env.NODE_DISABLE_COLORS ? true : false;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "164:   self.writer = options.writer || exports.writer;",
          "169:     self.writer = function(obj, showHidden, depth) {",
          "170:       return util.inspect(obj, showHidden, depth, true);",
          "",
          "[Removed Lines]",
          "166:   if (rli.terminal && !exports.disableColors &&",
          "167:       self.writer === util.inspect) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/node.js||src/node.js": [
          "File: src/node.js -> src/node.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "107:         if (parseInt(process.env['NODE_NO_READLINE'], 10)) {",
          "108:           opts.terminal = false;",
          "109:         }",
          "110:         var repl = Module.requireRepl().start(opts);",
          "111:         repl.on('exit', function() {",
          "112:           process.exit();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "110:         if (parseInt(process.env['NODE_DISABLE_COLORS'], 10)) {",
          "111:           opts.useColors = false;",
          "112:         }",
          "",
          "---------------"
        ],
        "test/simple/test-repl-options.js||test/simple/test-repl-options.js": [
          "File: test/simple/test-repl-options.js -> test/simple/test-repl-options.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "40: assert.equal(r1.rli.input, r1.inputStream);",
          "41: assert.equal(r1.rli.output, r1.outputStream);",
          "42: assert.equal(r1.rli.terminal, true);",
          "43: assert.equal(r1.useGlobal, false);",
          "44: assert.equal(r1.ignoreUndefined, false);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43: assert.equal(r1.useColors, r1.rli.terminal);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "50:   input: stream,",
          "51:   output: stream,",
          "52:   terminal: false,",
          "53:   useGlobal: true,",
          "54:   ignoreUndefined: true,",
          "55:   eval: evaler,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "54:   useColors: true,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "60: assert.equal(r2.rli.input, r2.inputStream);",
          "61: assert.equal(r2.rli.output, r2.outputStream);",
          "62: assert.equal(r2.rli.terminal, false);",
          "63: assert.equal(r2.useGlobal, true);",
          "64: assert.equal(r2.ignoreUndefined, true);",
          "65: assert.equal(r2.eval, evaler);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65: assert.equal(r2.useColors, true);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e806ad39d0cf13800e21edd7ffd56f707e92b08d",
      "candidate_info": {
        "commit_hash": "e806ad39d0cf13800e21edd7ffd56f707e92b08d",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/e806ad39d0cf13800e21edd7ffd56f707e92b08d",
        "files": [
          "lib/http.js",
          "lib/net.js",
          "lib/tls.js"
        ],
        "message": "net, tls, http: remove socket.ondrain\n\nReplace the ondrain hack with a regular 'drain' listener. Speeds up the\nbytes/1024 http benchmark by about 1.2%.",
        "before_after_code_files": [
          "lib/http.js||lihttp.js",
          "lib/net.js||linet.js",
          "lib/tls.js||litls.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/http.js||lihttp.js": [
          "File: lib/http.js -> lihttp.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1406:   return req;",
          "1407: };",
          "1409: function httpSocketSetup(socket) {",
          "1416: }",
          "",
          "[Removed Lines]",
          "1411:   socket.ondrain = function() {",
          "1412:     if (socket._httpMessage) {",
          "1413:       socket._httpMessage.emit('drain');",
          "1414:     }",
          "1415:   };",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/net.js||linet.js": [
          "File: lib/net.js -> linet.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "516:   self._pendingWriteReqs--;",
          "518:   if (self._pendingWriteReqs == 0) {",
          "521:     self.emit('drain');",
          "522:   }",
          "",
          "[Removed Lines]",
          "520:     if (self.ondrain) self.ondrain();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/tls.js||litls.js": [
          "File: lib/tls.js -> litls.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "461:       debug('drain ' + (this === this.pair.cleartext ? 'clear' : 'encrypted'));",
          "462:       var self = this;",
          "463:       process.nextTick(function() {",
          "467:         self.emit('drain');",
          "468:       });",
          "469:       this._needDrain = false;",
          "",
          "[Removed Lines]",
          "464:         if (typeof self.ondrain === 'function') {",
          "465:           self.ondrain();",
          "466:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1c88c3b3b56c6047180e116c5614dad2b13995f9",
      "candidate_info": {
        "commit_hash": "1c88c3b3b56c6047180e116c5614dad2b13995f9",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/1c88c3b3b56c6047180e116c5614dad2b13995f9",
        "files": [
          "deps/openssl/openssl.gyp",
          "deps/openssl/openssl/crypto/ui/ui_dummy.c",
          "deps/openssl/openssl/crypto/ui/ui_openssl.c"
        ],
        "message": "Disable OpenSSL UI",
        "before_after_code_files": [
          "deps/openssl/openssl.gyp||deps/openssl/openssl.gyp",
          "deps/openssl/openssl/crypto/ui/ui_dummy.c||deps/openssl/openssl/crypto/ui/ui_dummy.c",
          "deps/openssl/openssl/crypto/ui/ui_openssl.c||deps/openssl/openssl/crypto/ui/ui_openssl.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "deps/openssl/openssl.gyp||deps/openssl/openssl.gyp": [
          "File: deps/openssl/openssl.gyp -> deps/openssl/openssl.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "19:         # Work around brain dead SunOS linker.",
          "20:         'OPENSSL_NO_GOST',",
          "21:         'OPENSSL_NO_HW_PADLOCK',",
          "22:       ],",
          "23:       'sources': [",
          "24:         'openssl/ssl/bio_ssl.c',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22:         'OPENSSL_NO_TTY',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "546:         'openssl/crypto/ui/ui_compat.c',",
          "547:         'openssl/crypto/ui/ui_err.c',",
          "548:         'openssl/crypto/ui/ui_lib.c',",
          "549:         'openssl/crypto/ui/ui_openssl.c',",
          "550:         'openssl/crypto/ui/ui_util.c',",
          "551:         'openssl/crypto/uid.c',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "550:         'openssl/crypto/ui/ui_dummy.c',",
          "",
          "---------------"
        ],
        "deps/openssl/openssl/crypto/ui/ui_dummy.c||deps/openssl/openssl/crypto/ui/ui_dummy.c": [
          "File: deps/openssl/openssl/crypto/ui/ui_dummy.c -> deps/openssl/openssl/crypto/ui/ui_dummy.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56: #include <openssl/e_os2.h>",
          "57: #include <evp.h>",
          "58: #include \"ui_locl.h\"",
          "59: #include \"cryptlib.h\"",
          "61: #ifdef OPENSSL_NO_TTY",
          "63: static int dummy_read_write_string(UI *ui, UI_STRING *uis);",
          "64: static int dummy_open_close(UI *ui);",
          "66: static UI_METHOD ui_dummy =",
          "67:  {",
          "68:  \"Dummy user interface\",",
          "69:  dummy_open_close,",
          "70:  dummy_read_write_string,",
          "71:  NULL,",
          "72:  dummy_read_write_string,",
          "73:  dummy_open_close,",
          "74:  NULL",
          "75:  };",
          "77: UI_METHOD *UI_OpenSSL(void)",
          "78:  {",
          "79:  return &ui_dummy;",
          "80:  }",
          "82: static int dummy_open_close(UI *ui)",
          "83:  {",
          "85:   return 1;",
          "86:  }",
          "88: static int dummy_read_write_string(UI *ui, UI_STRING *uis)",
          "89:  {",
          "91:  return 0;",
          "92:  }",
          "95: #endif",
          "",
          "---------------"
        ],
        "deps/openssl/openssl/crypto/ui/ui_openssl.c||deps/openssl/openssl/crypto/ui/ui_openssl.c": [
          "File: deps/openssl/openssl/crypto/ui/ui_openssl.c -> deps/openssl/openssl/crypto/ui/ui_openssl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "118: #include <openssl/e_os2.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "117: #ifndef OPENSSL_NO_TTY",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "710:  return(strlen(buf));",
          "711:  }",
          "712: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "715: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "da56c72f59db646faf877e027a8a8c5c808d2ace",
      "candidate_info": {
        "commit_hash": "da56c72f59db646faf877e027a8a8c5c808d2ace",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/da56c72f59db646faf877e027a8a8c5c808d2ace",
        "files": [
          "lib/readline.js"
        ],
        "message": "readline: remove unused vars in _ttyWrite",
        "before_after_code_files": [
          "lib/readline.js||lireadline.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/readline.js||lireadline.js": [
          "File: lib/readline.js -> lireadline.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "564: Interface.prototype._ttyWrite = function(s, key) {",
          "566:   key = key || {};",
          "",
          "[Removed Lines]",
          "565:   var next_word, next_non_word, previous_word, previous_non_word;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}