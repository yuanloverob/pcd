{
  "cve_id": "CVE-2017-3735",
  "cve_desc": "While parsing an IPAddressFamily extension in an X.509 certificate, it is possible to do a one-byte overread. This would result in an incorrect text display of the certificate. This bug has been present since 2006 and is present in all versions of OpenSSL before 1.0.2m and 1.1.0g.",
  "repo": "openssl/openssl",
  "patch_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
  "patch_info": {
    "commit_hash": "068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/068b963bb7afc57f5bdd723de0dd15e7795d5822",
    "files": [
      "crypto/x509v3/v3_addr.c"
    ],
    "message": "Avoid out-of-bounds read\n\nFixes CVE 2017-3735\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\n(Merged from https://github.com/openssl/openssl/pull/4276)\n\n(cherry picked from commit b23171744b01e473ebbfd6edad70c1c3825ffbcd)",
    "before_after_code_files": [
      "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c"
    ]
  },
  "patch_diff": {
    "crypto/x509v3/v3_addr.c||crypto/x509v3/v3_addr.c": [
      "File: crypto/x509v3/v3_addr.c -> crypto/x509v3/v3_addr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "85: unsigned int X509v3_addr_get_afi(const IPAddressFamily *f)",
      "86: {",
      "91: }",
      "",
      "[Removed Lines]",
      "87:     return ((f != NULL &&",
      "88:              f->addressFamily != NULL && f->addressFamily->data != NULL)",
      "89:             ? ((f->addressFamily->data[0] << 8) | (f->addressFamily->data[1]))",
      "90:             : 0);",
      "",
      "[Added Lines]",
      "87:     if (f == NULL",
      "88:             || f->addressFamily == NULL",
      "89:             || f->addressFamily->data == NULL",
      "90:             || f->addressFamily->length < 2)",
      "91:         return 0;",
      "92:     return (f->addressFamily->data[0] << 8) | f->addressFamily->data[1];",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "59d37902343656c1317d80f1ef5c7bdc550a1294",
      "candidate_info": {
        "commit_hash": "59d37902343656c1317d80f1ef5c7bdc550a1294",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/59d37902343656c1317d80f1ef5c7bdc550a1294",
        "files": [
          "CHANGES",
          "ssl/ssl_conf.c"
        ],
        "message": "Ignore -named_curve auto value to improve backwards compatibility\n\nFixes #3490\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3518)\n(cherry picked from commit 1c7aa0dbf16c3389bbedd13391bb653e7a189603)",
        "before_after_code_files": [
          "ssl/ssl_conf.c||ssl/ssl_conf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "ssl/ssl_conf.c||ssl/ssl_conf.c": [
          "File: ssl/ssl_conf.c -> ssl/ssl_conf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "221:     EC_KEY *ecdh;",
          "222:     int nid;",
          "224:     nid = EC_curve_nist2nid(value);",
          "225:     if (nid == NID_undef)",
          "226:         nid = OBJ_sn2nid(value);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "225:     if ((cctx->flags & SSL_CONF_FLAG_FILE) &&",
          "226:         strcasecmp(value, \"+automatic\") == 0)",
          "227:         return 1;",
          "228:     if ((cctx->flags & SSL_CONF_FLAG_CMDLINE) &&",
          "229:         strcmp(value, \"auto\") == 0)",
          "230:         return 1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4ea5f53d7c6364d3d91539258d8aeb6e9a2e4c93",
      "candidate_info": {
        "commit_hash": "4ea5f53d7c6364d3d91539258d8aeb6e9a2e4c93",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/4ea5f53d7c6364d3d91539258d8aeb6e9a2e4c93",
        "files": [
          "crypto/x509/x_name.c"
        ],
        "message": "Fix error handling/cleanup\n\nReviewed-by: Paul Dale <paul.dale@oracle.com>\n(Merged from https://github.com/openssl/openssl/pull/4326)\n\n(cherry picked from commit 180794c54e98ae467c4ebced3737e1ede03e320a)",
        "before_after_code_files": [
          "crypto/x509/x_name.c||crypto/x509/x_name.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/x509/x_name.c||crypto/x509/x_name.c": [
          "File: crypto/x509/x_name.c -> crypto/x509/x_name.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "473: int X509_NAME_set(X509_NAME **xn, X509_NAME *name)",
          "474: {",
          "488: }",
          "490: int X509_NAME_print(BIO *bp, const X509_NAME *name, int obase)",
          "",
          "[Removed Lines]",
          "475:     X509_NAME *in;",
          "477:     if (!xn || !name)",
          "478:         return (0);",
          "480:     if (*xn != name) {",
          "481:         in = X509_NAME_dup(name);",
          "482:         if (in != NULL) {",
          "483:             X509_NAME_free(*xn);",
          "485:         }",
          "486:     }",
          "487:     return (*xn != NULL);",
          "",
          "[Added Lines]",
          "475:     if ((name = X509_NAME_dup(name)) == NULL)",
          "476:         return 0;",
          "477:     X509_NAME_free(*xn);",
          "479:     return 1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "43b560d5ac67d15c2e38b72f4c055d6efa3e5be1",
      "candidate_info": {
        "commit_hash": "43b560d5ac67d15c2e38b72f4c055d6efa3e5be1",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/43b560d5ac67d15c2e38b72f4c055d6efa3e5be1",
        "files": [
          "apps/speed.c"
        ],
        "message": "Don't attempt to use X25519 for ECDSA in speed\n\nFixes #5090\n\nReviewed-by: Ben Kaduk <kaduk@mit.edu>\n(Merged from https://github.com/openssl/openssl/pull/5097)\n\n(cherry picked from commit da1a1b5ac417c4e38f7717082d69cb5f0ceda6b9)",
        "before_after_code_files": [
          "apps/speed.c||apps/speed.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/speed.c||apps/speed.c": [
          "File: apps/speed.c -> apps/speed.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1241:     || !defined(OPENSSL_NO_EC)",
          "1242:     long rsa_count = 1;",
          "1243: #endif",
          "1246: #ifndef OPENSSL_NO_RC5",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1244:     size_t loop;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1506: #endif",
          "1507: #ifndef OPENSSL_NO_EC",
          "1508:         if (strcmp(*argv, \"ecdsa\") == 0) {",
          "1511:             continue;",
          "1512:         }",
          "1513:         if (found(*argv, ecdsa_choices, &i)) {",
          "",
          "[Removed Lines]",
          "1509:             for (i = 0; i < EC_NUM; i++)",
          "1510:                 ecdsa_doit[i] = 1;",
          "",
          "[Added Lines]",
          "1510:             for (loop = 0; loop < OSSL_NELEM(ecdsa_choices); loop++)",
          "1511:                 ecdsa_doit[ecdsa_choices[loop].retval] = 1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1515:             continue;",
          "1516:         }",
          "1517:         if (strcmp(*argv, \"ecdh\") == 0) {",
          "1520:             continue;",
          "1521:         }",
          "1522:         if (found(*argv, ecdh_choices, &i)) {",
          "",
          "[Removed Lines]",
          "1518:             for (i = 0; i < EC_NUM; i++)",
          "1519:                 ecdh_doit[i] = 1;",
          "",
          "[Added Lines]",
          "1519:             for (loop = 0; loop < OSSL_NELEM(ecdh_choices); loop++)",
          "1520:                 ecdh_doit[ecdh_choices[loop].retval] = 1;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1583:             dsa_doit[i] = 1;",
          "1584: #endif",
          "1585: #ifndef OPENSSL_NO_EC",
          "1590: #endif",
          "1591:     }",
          "1592:     for (i = 0; i < ALGOR_NUM; i++)",
          "",
          "[Removed Lines]",
          "1586:         for (i = 0; i < EC_NUM; i++)",
          "1587:             ecdsa_doit[i] = 1;",
          "1588:         for (i = 0; i < EC_NUM; i++)",
          "1589:             ecdh_doit[i] = 1;",
          "",
          "[Added Lines]",
          "1587:         for (loop = 0; loop < OSSL_NELEM(ecdsa_choices); loop++)",
          "1588:             ecdsa_doit[ecdsa_choices[loop].retval] = 1;",
          "1589:         for (loop = 0; loop < OSSL_NELEM(ecdh_choices); loop++)",
          "1590:             ecdh_doit[ecdh_choices[loop].retval] = 1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b15e62ecc5fc8f6c5b170b96480f13bf1b8e7915",
      "candidate_info": {
        "commit_hash": "b15e62ecc5fc8f6c5b170b96480f13bf1b8e7915",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b15e62ecc5fc8f6c5b170b96480f13bf1b8e7915",
        "files": [
          "test/recipes/40-test_rehash.t"
        ],
        "message": "Don't break testing when runnins as root\n\nThe rehash test broke the test if run by root.  Instead, just skip the\ncheck that requires non-root to be worth it.\n\nFixes #4387\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/5184)\n\n(cherry picked from commit 98ade24200f127a158b60bc736390c587cdd3dfb)",
        "before_after_code_files": [
          "test/recipes/40-test_rehash.t||test/recipes/40-test_rehash.t"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/recipes/40-test_rehash.t||test/recipes/40-test_rehash.t": [
          "File: test/recipes/40-test_rehash.t -> test/recipes/40-test_rehash.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: plan skip_all => \"test_rehash is not available on this platform\"",
          "24:     unless run(app([\"openssl\", \"rehash\", \"-help\"]));",
          "28: indir \"rehash.$$\" => sub {",
          "29:     prepare();",
          "",
          "[Removed Lines]",
          "26: plan tests => 5;",
          "",
          "[Added Lines]",
          "26: plan tests => 4;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46:     prepare();",
          "47:     chmod 0500, curdir();",
          "48:   SKIP: {",
          "51:           close FOO;",
          "52:           skip \"It's pointless to run the next test as root\", 1;",
          "53:       }",
          "",
          "[Removed Lines]",
          "49:       if (!ok(!open(FOO, \">unwritable.txt\"),",
          "50:               \"Testing that we aren't running as a privileged user, such as root\")) {",
          "",
          "[Added Lines]",
          "49:       if (open(FOO, \">unwritable.txt\")) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f1597bb5ed7271ede8afecc8299b0cb4dbb73fa4",
      "candidate_info": {
        "commit_hash": "f1597bb5ed7271ede8afecc8299b0cb4dbb73fa4",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/f1597bb5ed7271ede8afecc8299b0cb4dbb73fa4",
        "files": [
          "test/recipes/80-test_ssl_new.t"
        ],
        "message": "Skip ssl-tests/19-mac-then-encrypt.conf for no-tls1_2\n\nThe second set of tests in that configuration uses the AES-SHA256\nciphers, which are only available for TLS 1.2.  Thus, when TLS 1.2\nis disabled, there are no ciphers available and the handshake fails\nwith an internal error.  Apply the same treatment as for\n13-fragmentation.conf, which uses the same ciphers.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/4526)",
        "before_after_code_files": [
          "test/recipes/80-test_ssl_new.t||test/recipes/80-test_ssl_new.t"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/recipes/80-test_ssl_new.t||test/recipes/80-test_ssl_new.t": [
          "File: test/recipes/80-test_ssl_new.t -> test/recipes/80-test_ssl_new.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "76:   \"15-certstatus.conf\" => $no_tls || $no_ocsp,",
          "77:   \"16-dtls-certstatus.conf\" => $no_dtls || $no_ocsp,",
          "78:   \"18-dtls-renegotiate.conf\" => $no_dtls,",
          "79: );",
          "81: foreach my $conf (@conf_files) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "79:   \"19-mac-then-encrypt.conf\" => disabled(\"tls1_2\"),",
          "",
          "---------------"
        ]
      }
    }
  ]
}