{
  "cve_id": "CVE-2019-19242",
  "cve_desc": "SQLite 3.30.1 mishandles pExpr->y.pTab, as demonstrated by the TK_COLUMN case in sqlite3ExprCodeTarget in expr.c.",
  "repo": "sqlite/sqlite",
  "patch_hash": "57f7ece78410a8aae86aa4625fb7556897db384c",
  "patch_info": {
    "commit_hash": "57f7ece78410a8aae86aa4625fb7556897db384c",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/57f7ece78410a8aae86aa4625fb7556897db384c",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/expr.c",
      "src/wherecode.c",
      "test/gencol1.test"
    ],
    "message": "Fix a problem that comes up when using generated columns that evaluate to a constant in an index and then making use of that index in a join.\n\nFossilOrigin-Name: 8b12e95fec7ce6e0de82a04ca3dfcf1a8e62e233b7382aa28a8a9be6e862b1af",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/expr.c||src/expr.c",
      "src/wherecode.c||src/wherecode.c",
      "test/gencol1.test||test/gencol1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 2d53a30cc23e53033af8e8666457654db5dcc453ed6cd176ce1d0bff4f528159",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/expr.c||src/expr.c": [
      "File: src/expr.c -> src/expr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3607:         int iReg = sqlite3ExprCodeTarget(pParse, pExpr->pLeft,target);",
      "3609:         if( aff>SQLITE_AFF_BLOB ){",
      "3610:           static const char zAff[] = \"B\\000C\\000D\\000E\";",
      "3611:           assert( SQLITE_AFF_BLOB=='A' );",
      "",
      "[Removed Lines]",
      "3608:         int aff = sqlite3TableColumnAffinity(pExpr->y.pTab, pExpr->iColumn);",
      "",
      "[Added Lines]",
      "3608:         int aff;",
      "3609:         if( pExpr->y.pTab ){",
      "3610:           aff = sqlite3TableColumnAffinity(pExpr->y.pTab, pExpr->iColumn);",
      "3611:         }else{",
      "3612:           aff = pExpr->affExpr;",
      "3613:         }",
      "",
      "---------------"
    ],
    "src/wherecode.c||src/wherecode.c": [
      "File: src/wherecode.c -> src/wherecode.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1141:   if( pExpr->op==TK_COLUMN ){",
      "1142:     IdxExprTrans *pX = p->u.pIdxTrans;",
      "1143:     if( pExpr->iTable==pX->iTabCur && pExpr->iColumn==pX->iTabCol ){",
      "1144:       pExpr->iTable = pX->iIdxCur;",
      "1145:       pExpr->iColumn = pX->iIdxCol;",
      "1146:       pExpr->y.pTab = 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1144:       assert( pExpr->y.pTab!=0 );",
      "1145:       pExpr->affExpr = sqlite3TableColumnAffinity(pExpr->y.pTab,pExpr->iColumn);",
      "",
      "---------------"
    ],
    "test/gencol1.test||test/gencol1.test": [
      "File: test/gencol1.test -> test/gencol1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "243:   UPDATE t0 SET c0 = NULL;",
      "244: } {1 {generated column loop on \"c2\"}}",
      "247: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "246: # 2019-11-21 Problems in the new generated column logic",
      "247: # reported by Yongheng Chen and Rui Zhong",
      "248: do_execsql_test gencol1-9.10 {",
      "249:   DROP TABLE IF EXISTS t1;",
      "250:   DROP TABLE IF EXISTS t2;",
      "251:   CREATE TABLE t1(aa , bb AS (17) UNIQUE);",
      "252:   INSERT INTO t1 VALUES(17);",
      "253:   CREATE TABLE t2(cc);",
      "254:   INSERT INTO t2 VALUES(41);",
      "255:   SELECT * FROM t2 JOIN t1 WHERE t1.bb=t1.aa AND t1.bb=17;",
      "256: } {41 17 17}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6a0db87a2fbd50aa8fd22fe4362549f31b1a82b1",
      "candidate_info": {
        "commit_hash": "6a0db87a2fbd50aa8fd22fe4362549f31b1a82b1",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/6a0db87a2fbd50aa8fd22fe4362549f31b1a82b1",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/parse.y"
        ],
        "message": "If the amalgamation file \"sqlite3.c\" is generated using the SQLITE_ENABLE_UPDATE_DELETE_LIMIT option, but then subsequently (mis-)compiled without that option, and then a particular syntax error could cause a memory leak, but for this fix.\n\nFossilOrigin-Name: 1bb17c863a269ab8b28df94b9fdaac3ee70777ccd0a30300131bf67df6722052",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/parse.y||src/parse.y"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 507c43537f00d089efb3c3020fb6e826e8f89f3efa2caaa12c5309d35dd0c22e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/parse.y||src/parse.y": [
          "File: src/parse.y -> src/parse.y",
          "--- Hunk 1 ---",
          "[Context before]",
          "826: cmd ::= with DELETE FROM xfullname(X) indexed_opt(I) where_opt(W)",
          "827:         orderby_opt(O) limit_opt(L). {",
          "828:   sqlite3SrcListIndexedBy(pParse, X, &I);",
          "829:   sqlite3DeleteFrom(pParse,X,W,O,L);",
          "830: }",
          "831: %endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "829: #ifndef SQLITE_ENABLE_UPDATE_DELETE_LIMIT",
          "830:   sqlite3ExprListDelete(pParse->db, O); O = 0;",
          "831:   sqlite3ExprDelete(pParse->db, L); L = 0;",
          "832: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4fc836546e035fc18a4bf66c3bb895dc5af10fa0",
      "candidate_info": {
        "commit_hash": "4fc836546e035fc18a4bf66c3bb895dc5af10fa0",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/4fc836546e035fc18a4bf66c3bb895dc5af10fa0",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/expr.c",
          "test/in.test"
        ],
        "message": "Fix a bug introduced earlier today by check-in [88833a9c2849c959]. Ticket [29f635e0af71234b]\n\nFossilOrigin-Name: 6e7b4527d32cc1be0294614b9d7363d4b59cf654a954b86515b3f6888975ce73",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/expr.c||src/expr.c",
          "test/in.test||test/in.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/expr.c||src/expr.c"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/expr.c||src/expr.c"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 9490683ae883561fa347cbe54ebdd61188d849b4852d904b508250ba5d0807ef",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3132:     }",
          "3133:     bLhsReal = sqlite3ExprAffinity(pExpr->pLeft)==SQLITE_AFF_REAL;",
          "3134:     for(ii=0; ii<pList->nExpr; ii++){",
          "3136:       if( bLhsReal ){",
          "3137:         sqlite3VdbeAddOp4(v, OP_Affinity, r2, 1, 0, \"E\", P4_STATIC);",
          "3138:       }",
          "3139:       if( regCkNull && sqlite3ExprCanBeNull(pList->a[ii].pExpr) ){",
          "3140:         sqlite3VdbeAddOp3(v, OP_BitAnd, regCkNull, r2, regCkNull);",
          "",
          "[Removed Lines]",
          "3135:       r2 = sqlite3ExprCodeTemp(pParse, pList->a[ii].pExpr, &regToFree);",
          "",
          "[Added Lines]",
          "3136:         r2 = regToFree = sqlite3GetTempReg(pParse);",
          "3137:         sqlite3ExprCode(pParse, pList->a[ii].pExpr, r2);",
          "3139:       }else{",
          "3140:         r2 = sqlite3ExprCodeTemp(pParse, pList->a[ii].pExpr, &regToFree);",
          "",
          "---------------"
        ],
        "test/in.test||test/in.test": [
          "File: test/in.test -> test/in.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "763: # For the IN_INDEX_NOOP optimization, apply REAL affinity to the LHS",
          "764: # values prior to comparison if the RHS has REAL affinity.",
          "765: #",
          "766: do_execsql_test in-19.1 {",
          "767:   DROP TABLE IF EXISTS t0;",
          "768:   CREATE TABLE t0(c0 REAL UNIQUE);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "766: # Also ticket https://sqlite.org/src/info/29f635e0af71234b",
          "767: #",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "775: do_execsql_test in-19.3 {",
          "776:   SELECT c0 IN ('2070934912552030444',2,3) FROM t0;",
          "777: } {1}",
          "779: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "780: do_execsql_test in-19.4 {",
          "781:   DROP TABLE t0;",
          "782:   CREATE TABLE t0(c0 TEXT, c1 REAL, c2, PRIMARY KEY(c2, c0, c1));",
          "783:   CREATE INDEX i0 ON t0(c1 IN (c0));",
          "784:   INSERT INTO t0(c0, c2) VALUES (0, NULL) ON CONFLICT(c2, c1, c0) DO NOTHING;",
          "785:   PRAGMA integrity_check;",
          "786: } {ok}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "af94adf049218f9d3675fd796663aa3e021f7d88",
      "candidate_info": {
        "commit_hash": "af94adf049218f9d3675fd796663aa3e021f7d88",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/af94adf049218f9d3675fd796663aa3e021f7d88",
        "files": [
          "autoconf/Makefile.msc",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Update the autoconf makefile for MSVC.\n\nFossilOrigin-Name: 9455643eecb74c8ac93ad3b3566f30e380dd912cdce3de993da5af42973ac59c",
        "before_after_code_files": [
          "autoconf/Makefile.msc||autoconf/Makefile.msc",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "autoconf/Makefile.msc||autoconf/Makefile.msc": [
          "File: autoconf/Makefile.msc -> autoconf/Makefile.msc",
          "--- Hunk 1 ---",
          "[Context before]",
          "282: OPT_FEATURE_FLAGS = $(OPT_FEATURE_FLAGS) -DSQLITE_ENABLE_STMTVTAB=1",
          "283: OPT_FEATURE_FLAGS = $(OPT_FEATURE_FLAGS) -DSQLITE_ENABLE_DBPAGE_VTAB=1",
          "284: OPT_FEATURE_FLAGS = $(OPT_FEATURE_FLAGS) -DSQLITE_ENABLE_DBSTAT_VTAB=1",
          "286: OPT_FEATURE_FLAGS = $(OPT_FEATURE_FLAGS) -DSQLITE_ENABLE_DESERIALIZE=1",
          "287: !ENDIF",
          "288: OPT_FEATURE_FLAGS = $(OPT_FEATURE_FLAGS) -DSQLITE_ENABLE_COLUMN_METADATA=1",
          "",
          "[Removed Lines]",
          "285: OPT_FEATURE_FLAGS = $(OPT_FEATURE_FLAGS) -DSQLITE_INTROSPECTION_PRAGMAS=1",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 73a82114733af2a316f20eb8578badef307d14286c6ec03197744a6793425161",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "30ad79aeb4cc1243817fdb3c1b0b51a61bbb5f97",
      "candidate_info": {
        "commit_hash": "30ad79aeb4cc1243817fdb3c1b0b51a61bbb5f97",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/30ad79aeb4cc1243817fdb3c1b0b51a61bbb5f97",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/select.c"
        ],
        "message": "Improvements to the view-self-join optimization so that it works on all VIEWs, not just on Common Table Expressions.\n\nFossilOrigin-Name: d2fe370cafa9b11f6c3eb4e1c3be48d9d2610b9d2f9d9ebf9e50267f9079dfc0",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/select.c||src/select.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: cb1d06521de5918a2324a41e207b48c5e5149c23b927b9e3e1f3c3b38b82658e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/select.c||src/select.c": [
          "File: src/select.c -> src/select.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5481:     if( pItem->pSelect==0 ) continue;",
          "5482:     if( pItem->fg.viaCoroutine ) continue;",
          "5483:     if( pItem->zName==0 ) continue;",
          "5485:     if( sqlite3_stricmp(pItem->zName, pThis->zName)!=0 ) continue;",
          "5486:     pS1 = pItem->pSelect;",
          "5490:       continue;",
          "",
          "[Removed Lines]",
          "5484:     if( sqlite3_stricmp(pItem->zDatabase, pThis->zDatabase)!=0 ) continue;",
          "5487:     if( pThis->pSelect->selId!=pS1->selId ){",
          "",
          "[Added Lines]",
          "5484:     assert( pItem->pTab!=0 );",
          "5485:     assert( pThis->pTab!=0 );",
          "5486:     if( pItem->pTab->pSchema!=pThis->pTab->pSchema ) continue;",
          "5489:     if( pItem->pTab->pSchema==0 && pThis->pSelect->selId!=pS1->selId ){",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "76fd7be3a31d466202bc6ee9026d02150fcc12da",
      "candidate_info": {
        "commit_hash": "76fd7be3a31d466202bc6ee9026d02150fcc12da",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/76fd7be3a31d466202bc6ee9026d02150fcc12da",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbe.c"
        ],
        "message": "Improved comments and extra testcase() macros on the serial-type computation logic in the OP_MakeRecord opcode.\n\nFossilOrigin-Name: 18bfb2179ce2c60cec8f5859a84b737731a5e53b28e35072cbb249f18b94262b",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbe.c||src/vdbe.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 2578e3c64b0a92ab92143f18d107a1a180bd6fa87243661930771c4c080f8098",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbe.c||src/vdbe.c": [
          "File: src/vdbe.c -> src/vdbe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2943:         assert( pOp->p5==OPFLAG_NOCHNG_MAGIC || CORRUPT_DB );",
          "2944:         pRec->uTemp = 10;",
          "2945:       }else{",
          "2947:       }",
          "2948:       nHdr++;",
          "2949:     }else if( pRec->flags & (MEM_Int|MEM_IntReal) ){",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2969:         pRec->uTemp = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2958:         u = i;",
          "2959:       }",
          "2960:       nHdr++;",
          "2961:       if( u<=127 ){",
          "2962:         if( (i&1)==i && file_format>=4 ){",
          "2963:           pRec->uTemp = 8+(u32)u;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2984:       testcase( u==127 );               testcase( u==128 );",
          "2985:       testcase( u==32767 );             testcase( u==32768 );",
          "2986:       testcase( u==8388607 );           testcase( u==8388608 );",
          "2987:       testcase( u==2147483647 );        testcase( u==2147483648 );",
          "2988:       testcase( u==140737488355327LL ); testcase( u==140737488355328LL );",
          "",
          "---------------"
        ]
      }
    }
  ]
}