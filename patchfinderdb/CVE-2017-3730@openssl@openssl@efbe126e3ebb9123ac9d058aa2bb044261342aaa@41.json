{
  "cve_id": "CVE-2017-3730",
  "cve_desc": "In OpenSSL 1.1.0 before 1.1.0d, if a malicious server supplies bad parameters for a DHE or ECDHE key exchange then this can result in the client attempting to dereference a NULL pointer leading to a client crash. This could be exploited in a Denial of Service attack.",
  "repo": "openssl/openssl",
  "patch_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
  "patch_info": {
    "commit_hash": "efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/efbe126e3ebb9123ac9d058aa2bb044261342aaa",
    "files": [
      "ssl/statem/statem_clnt.c"
    ],
    "message": "Fix missing NULL checks in CKE processing\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c"
    ]
  },
  "patch_diff": {
    "ssl/statem/statem_clnt.c||ssl/statem/statem_clnt.c": [
      "File: ssl/statem/statem_clnt.c -> ssl/statem/statem_clnt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2258:         return 0;",
      "2259:     }",
      "2260:     ckey = ssl_generate_pkey(skey);",
      "2261:     dh_clnt = EVP_PKEY_get0_DH(ckey);",
      "2263:     if (dh_clnt == NULL || ssl_derive(s, ckey, skey) == 0) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2261:     if (ckey == NULL) {",
      "2262:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_DHE, ERR_R_INTERNAL_ERROR);",
      "2263:         return 0;",
      "2264:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2296:     }",
      "2298:     ckey = ssl_generate_pkey(skey);",
      "2300:     if (ssl_derive(s, ckey, skey) == 0) {",
      "2301:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_EVP_LIB);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2304:     if (ckey == NULL) {",
      "2305:         SSLerr(SSL_F_TLS_CONSTRUCT_CKE_ECDHE, ERR_R_INTERNAL_ERROR);",
      "2306:         goto err;",
      "2307:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9f1dd6a6ff6dadb3b356f74357a85cc3b5002e6d",
      "candidate_info": {
        "commit_hash": "9f1dd6a6ff6dadb3b356f74357a85cc3b5002e6d",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/9f1dd6a6ff6dadb3b356f74357a85cc3b5002e6d",
        "files": [
          "apps/rehash.c"
        ],
        "message": "On VMS, massage the fetch file names to remove the generation number\n\nThe generation number is ';nnn' at the end of the file name fetched\nwith readdir().  Because rehash checks for specific extensions and\ndoesn't expect an additional generation number, the easiest is to\nmassage the received file name early by simply removing the generation\nnumber.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2717)\n(cherry picked from commit 39aceac320a1561d50c7d71ac2560aec7ab8eddb)",
        "before_after_code_files": [
          "apps/rehash.c||apps/rehash.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/rehash.c||apps/rehash.c": [
          "File: apps/rehash.c -> apps/rehash.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "281:     return *path == '/';",
          "282: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "284: static int massage_filename(char *name)",
          "285: {",
          "286: # ifdef __VMS",
          "287:     char *p = strchr(name, ';');",
          "288:     char *q = p;",
          "290:     if (q != NULL) {",
          "291:         for (q++; *q != '\\0'; q++) {",
          "292:             if (!isdigit(*q))",
          "293:                 return 1;",
          "294:         }",
          "295:     }",
          "298: # endif",
          "299:     return 1;",
          "300: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "316:     }",
          "317:     while ((filename = OPENSSL_DIR_read(&d, dirname)) != NULL) {",
          "318:         if ((copy = strdup(filename)) == NULL",
          "319:                 || sk_OPENSSL_STRING_push(files, copy) == 0) {",
          "320:             BIO_puts(bio_err, \"out of memory\\n\");",
          "321:             exit(1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "337:                 || !massage_filename(copy)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b754f9a3a5bccffc7e8f534fefd13fc0ef7aaf13",
      "candidate_info": {
        "commit_hash": "b754f9a3a5bccffc7e8f534fefd13fc0ef7aaf13",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b754f9a3a5bccffc7e8f534fefd13fc0ef7aaf13",
        "files": [
          "test/shlibloadtest.c"
        ],
        "message": "test/shlibloadtest: small fixes\n\n- Make sure to initialise SHLIB variables\n- Make sure to make local variables static\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1838)\n(cherry picked from commit 3b0478fe03191bedef44644996a5a6da51f77eaf)",
        "before_after_code_files": [
          "test/shlibloadtest.c||test/shlibloadtest.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/shlibloadtest.c||test/shlibloadtest.c": [
          "File: test/shlibloadtest.c -> test/shlibloadtest.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: typedef unsigned long (*ERR_get_error_t)(void);",
          "29: typedef unsigned long (*OpenSSL_version_num_t)(void);",
          "39: #ifdef DSO_DLFCN",
          "",
          "[Removed Lines]",
          "31: TLS_method_t TLS_method;",
          "32: SSL_CTX_new_t SSL_CTX_new;",
          "33: SSL_CTX_free_t SSL_CTX_free;",
          "35: ERR_get_error_t ERR_get_error;",
          "36: OpenSSL_version_num_t OpenSSL_version_num;",
          "",
          "[Added Lines]",
          "31: static TLS_method_t TLS_method;",
          "32: static SSL_CTX_new_t SSL_CTX_new;",
          "33: static SSL_CTX_free_t SSL_CTX_free;",
          "35: static ERR_get_error_t ERR_get_error;",
          "36: static OpenSSL_version_num_t OpenSSL_version_num;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43: typedef void * SHLIB;",
          "44: typedef void * SHLIB_SYM;",
          "46: # define SHARED_LIBRARY_SUFFIX \".so\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45: # define SHLIB_INIT NULL",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "88: typedef HINSTANCE SHLIB;",
          "89: typedef void * SHLIB_SYM;",
          "91: static int shlib_load(char *filename, SHLIB *lib)",
          "92: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91: # define SHLIB_INIT 0",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "130: int main(int argc, char **argv)",
          "131: {",
          "133:     SSL_CTX *ctx;",
          "134:     union {",
          "135:         void (*func) (void);",
          "",
          "[Removed Lines]",
          "132:     SHLIB ssllib, cryptolib;",
          "",
          "[Added Lines]",
          "134:     SHLIB ssllib = SHLIB_INIT, cryptolib = SHLIB_INIT;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e7498968e229a4ec27702a3703826873a279a07b",
      "candidate_info": {
        "commit_hash": "e7498968e229a4ec27702a3703826873a279a07b",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/e7498968e229a4ec27702a3703826873a279a07b",
        "files": [
          "crypto/rand/randfile.c"
        ],
        "message": "rand/randfile.c: treat empty string in RAND_file_name as error.\n\nSuggested in GH#1589.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit 7dc0ad4d6dca81a003be7fa1fbd58a55f4be8646)",
        "before_after_code_files": [
          "crypto/rand/randfile.c||crypto/rand/randfile.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/rand/randfile.c||crypto/rand/randfile.c": [
          "File: crypto/rand/randfile.c -> crypto/rand/randfile.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "362:             return NULL;",
          "363:         }",
          "364: #endif",
          "366: }",
          "",
          "[Removed Lines]",
          "365:     return buf;",
          "",
          "[Added Lines]",
          "365:     return buf[0] ? buf : NULL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b8552dc80a611083754493283e72d51f3015753a",
      "candidate_info": {
        "commit_hash": "b8552dc80a611083754493283e72d51f3015753a",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b8552dc80a611083754493283e72d51f3015753a",
        "files": [
          "crypto/evp/evp_enc.c"
        ],
        "message": "Remove assert from is_partially_overlapping()\n\nThis function is used to validate application supplied parameters. An\nassert should be used to check for an error that is internal to OpenSSL.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2275)\n(cherry picked from commit b153f0921bea38127de0b9440b0487db3004330d)",
        "before_after_code_files": [
          "crypto/evp/evp_enc.c||crypto/evp/evp_enc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/evp/evp_enc.c||crypto/evp/evp_enc.c": [
          "File: crypto/evp/evp_enc.c -> crypto/evp/evp_enc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "287:     int overlapped = (len > 0) & (diff != 0) & ((diff < (PTRDIFF_T)len) |",
          "288:                                                 (diff > (0 - (PTRDIFF_T)len)));",
          "290:     return overlapped;",
          "291: }",
          "",
          "[Removed Lines]",
          "289:     assert(!overlapped);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dc2a7e42a2df59a344804d5cb23e5893b4842aa3",
      "candidate_info": {
        "commit_hash": "dc2a7e42a2df59a344804d5cb23e5893b4842aa3",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/dc2a7e42a2df59a344804d5cb23e5893b4842aa3",
        "files": [
          "test/recipes/20-test_passwd.t"
        ],
        "message": "Don't use des when disabled.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
        "before_after_code_files": [
          "test/recipes/20-test_passwd.t||test/recipes/20-test_passwd.t"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/recipes/20-test_passwd.t||test/recipes/20-test_passwd.t": [
          "File: test/recipes/20-test_passwd.t -> test/recipes/20-test_passwd.t",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: use warnings;",
          "13: use OpenSSL::Test;",
          "15: setup(\"test_passwd\");",
          "19: ok(compare1stline([qw{openssl passwd password}], '^.{13}\\R$'),",
          "21: ok(compare1stline([qw{openssl passwd -1 password}], '^\\$1\\$.{8}\\$.{22}\\R$'),",
          "22:    'BSD style MD5 password with random salt');",
          "23: ok(compare1stline([qw{openssl passwd -apr1 password}], '^\\$apr1\\$.{8}\\$.{22}\\R$'),",
          "24:    'Apache style MD5 password with random salt');",
          "25: ok(compare1stline([qw{openssl passwd -salt xx password}], '^xxj31ZMTZzkVA\\R$'),",
          "27: ok(compare1stline([qw{openssl passwd -salt xxxxxxxx -1 password}], '^\\$1\\$xxxxxxxx\\$UYCIxa628\\.9qXjpQCjM4a\\.\\R$'),",
          "28:    'BSD style MD5 password with salt xxxxxxxx');",
          "29: ok(compare1stline([qw{openssl passwd -salt xxxxxxxx -apr1 password}], '^\\$apr1\\$xxxxxxxx\\$dxHfLAsjHkDRmG83UXe8K0\\R$'),",
          "",
          "[Removed Lines]",
          "17: plan tests => 6;",
          "20:    'crypt password with random salt');",
          "26:    'crypt password with salt xx');",
          "",
          "[Added Lines]",
          "14: use OpenSSL::Test::Utils;",
          "18: plan tests => disabled(\"des\") ? 4 : 6;",
          "21:    'crypt password with random salt') if !disabled(\"des\");",
          "27:    'crypt password with salt xx') if !disabled(\"des\");",
          "",
          "---------------"
        ]
      }
    }
  ]
}