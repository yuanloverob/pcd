{
  "cve_id": "CVE-2017-2647",
  "cve_desc": "The KEYS subsystem in the Linux kernel before 3.18 allows local users to gain privileges or cause a denial of service (NULL pointer dereference and system crash) via vectors involving a NULL value for a certain match field, related to the keyring_search_iterator function in keyring.c.",
  "repo": "torvalds/linux",
  "patch_hash": "c06cfb08b88dfbe13be44a69ae2fdc3a7c902d81",
  "patch_info": {
    "commit_hash": "c06cfb08b88dfbe13be44a69ae2fdc3a7c902d81",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/c06cfb08b88dfbe13be44a69ae2fdc3a7c902d81",
    "files": [
      "crypto/asymmetric_keys/asymmetric_type.c",
      "crypto/asymmetric_keys/pkcs7_key_type.c",
      "fs/cifs/cifs_spnego.c",
      "fs/cifs/cifsacl.c",
      "fs/nfs/idmap.c",
      "include/keys/user-type.h",
      "include/linux/key-type.h",
      "net/ceph/crypto.c",
      "net/dns_resolver/dns_key.c",
      "net/rxrpc/ar-key.c",
      "security/keys/big_key.c",
      "security/keys/encrypted-keys/encrypted.c",
      "security/keys/internal.h",
      "security/keys/key.c",
      "security/keys/keyring.c",
      "security/keys/request_key.c",
      "security/keys/request_key_auth.c",
      "security/keys/trusted.c",
      "security/keys/user_defined.c"
    ],
    "message": "KEYS: Remove key_type::match in favour of overriding default by match_preparse\n\nA previous patch added a ->match_preparse() method to the key type.  This is\nallowed to override the function called by the iteration algorithm.\nTherefore, we can just set a default that simply checks for an exact match of\nthe key description with the original criterion data and allow match_preparse\nto override it as needed.\n\nThe key_type::match op is then redundant and can be removed, as can the\nuser_match() function.\n\nSigned-off-by: David Howells <dhowells@redhat.com>\nAcked-by: Vivek Goyal <vgoyal@redhat.com>",
    "before_after_code_files": [
      "crypto/asymmetric_keys/asymmetric_type.c||crypto/asymmetric_keys/asymmetric_type.c",
      "crypto/asymmetric_keys/pkcs7_key_type.c||crypto/asymmetric_keys/pkcs7_key_type.c",
      "fs/cifs/cifs_spnego.c||fs/cifs/cifs_spnego.c",
      "fs/cifs/cifsacl.c||fs/cifs/cifsacl.c",
      "fs/nfs/idmap.c||fs/nfs/idmap.c",
      "include/keys/user-type.h||include/keys/user-type.h",
      "include/linux/key-type.h||include/linux/key-type.h",
      "net/ceph/crypto.c||net/ceph/crypto.c",
      "net/dns_resolver/dns_key.c||net/dns_resolver/dns_key.c",
      "net/rxrpc/ar-key.c||net/rxrpc/ar-key.c",
      "security/keys/big_key.c||security/keys/big_key.c",
      "security/keys/encrypted-keys/encrypted.c||security/keys/encrypted-keys/encrypted.c",
      "security/keys/internal.h||security/keys/internal.h",
      "security/keys/key.c||security/keys/key.c",
      "security/keys/keyring.c||security/keys/keyring.c",
      "security/keys/request_key.c||security/keys/request_key.c",
      "security/keys/request_key_auth.c||security/keys/request_key_auth.c",
      "security/keys/trusted.c||security/keys/trusted.c",
      "security/keys/user_defined.c||security/keys/user_defined.c"
    ]
  },
  "patch_diff": {
    "crypto/asymmetric_keys/asymmetric_type.c||crypto/asymmetric_keys/asymmetric_type.c": [
      "File: crypto/asymmetric_keys/asymmetric_type.c -> crypto/asymmetric_keys/asymmetric_type.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "64: {",
      "65:  const struct asymmetric_key_subtype *subtype = asymmetric_key_subtype(key);",
      "66:  const char *description = match_data->raw_data;",
      "",
      "[Removed Lines]",
      "62: static int asymmetric_key_match(const struct key *key,",
      "63:     const struct key_match_data *match_data)",
      "",
      "[Added Lines]",
      "62: static int asymmetric_key_cmp(const struct key *key,",
      "63:          const struct key_match_data *match_data)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "110: static int asymmetric_key_match_preparse(struct key_match_data *match_data)",
      "111: {",
      "112:  match_data->lookup_type = KEYRING_SEARCH_LOOKUP_ITERATE;",
      "113:  return 0;",
      "114: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "113:  match_data->cmp = asymmetric_key_cmp;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "224:  .free_preparse = asymmetric_key_free_preparse,",
      "225:  .instantiate = generic_key_instantiate,",
      "226:  .match_preparse = asymmetric_key_match_preparse,",
      "228:  .match_free = asymmetric_key_match_free,",
      "229:  .destroy = asymmetric_key_destroy,",
      "230:  .describe = asymmetric_key_describe,",
      "",
      "[Removed Lines]",
      "227:  .match  = asymmetric_key_match,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "crypto/asymmetric_keys/pkcs7_key_type.c||crypto/asymmetric_keys/pkcs7_key_type.c": [
      "File: crypto/asymmetric_keys/pkcs7_key_type.c -> crypto/asymmetric_keys/pkcs7_key_type.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "75:  .preparse  = pkcs7_preparse,",
      "76:  .free_preparse  = user_free_preparse,",
      "77:  .instantiate  = generic_key_instantiate,",
      "79:  .revoke   = user_revoke,",
      "80:  .destroy  = user_destroy,",
      "81:  .describe  = user_describe,",
      "",
      "[Removed Lines]",
      "78:  .match   = user_match,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "fs/cifs/cifs_spnego.c||fs/cifs/cifs_spnego.c": [
      "File: fs/cifs/cifs_spnego.c -> fs/cifs/cifs_spnego.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "62: struct key_type cifs_spnego_key_type = {",
      "63:  .name  = \"cifs.spnego\",",
      "64:  .instantiate = cifs_spnego_key_instantiate,",
      "66:  .destroy = cifs_spnego_key_destroy,",
      "67:  .describe = user_describe,",
      "68: };",
      "",
      "[Removed Lines]",
      "65:  .match  = user_match,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "fs/cifs/cifsacl.c||fs/cifs/cifsacl.c": [
      "File: fs/cifs/cifsacl.c -> fs/cifs/cifsacl.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "84:  .instantiate = cifs_idmap_key_instantiate,",
      "85:  .destroy     = cifs_idmap_key_destroy,",
      "86:  .describe    = user_describe,",
      "88: };",
      "90: static char *",
      "",
      "[Removed Lines]",
      "87:  .match       = user_match,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "fs/nfs/idmap.c||fs/nfs/idmap.c": [
      "File: fs/nfs/idmap.c -> fs/nfs/idmap.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "177:  .preparse = user_preparse,",
      "178:  .free_preparse = user_free_preparse,",
      "179:  .instantiate = generic_key_instantiate,",
      "181:  .revoke  = user_revoke,",
      "182:  .destroy = user_destroy,",
      "183:  .describe = user_describe,",
      "",
      "[Removed Lines]",
      "180:  .match  = user_match,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "401:  .preparse = user_preparse,",
      "402:  .free_preparse = user_free_preparse,",
      "403:  .instantiate = generic_key_instantiate,",
      "405:  .revoke  = user_revoke,",
      "406:  .destroy = user_destroy,",
      "407:  .describe = user_describe,",
      "",
      "[Removed Lines]",
      "404:  .match  = user_match,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "include/keys/user-type.h||include/keys/user-type.h": [
      "File: include/keys/user-type.h -> include/keys/user-type.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "36: extern struct key_type key_type_logon;",
      "38: struct key_preparsed_payload;",
      "41: extern int user_preparse(struct key_preparsed_payload *prep);",
      "42: extern void user_free_preparse(struct key_preparsed_payload *prep);",
      "43: extern int user_update(struct key *key, struct key_preparsed_payload *prep);",
      "46: extern void user_revoke(struct key *key);",
      "47: extern void user_destroy(struct key *key);",
      "48: extern void user_describe(const struct key *user, struct seq_file *m);",
      "",
      "[Removed Lines]",
      "39: struct key_match_data;",
      "44: extern int user_match(const struct key *key,",
      "45:         const struct key_match_data *match_data);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "include/linux/key-type.h||include/linux/key-type.h": [
      "File: include/linux/key-type.h -> include/linux/key-type.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "114:  int (*match_preparse)(struct key_match_data *match_data);",
      "122:  void (*match_free)(struct key_match_data *match_data);",
      "",
      "[Removed Lines]",
      "117:  int (*match)(const struct key *key,",
      "118:        const struct key_match_data *match_data);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "net/ceph/crypto.c||net/ceph/crypto.c": [
      "File: net/ceph/crypto.c -> net/ceph/crypto.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "476:  .preparse = ceph_key_preparse,",
      "477:  .free_preparse = ceph_key_free_preparse,",
      "478:  .instantiate = generic_key_instantiate,",
      "480:  .destroy = ceph_key_destroy,",
      "481: };",
      "",
      "[Removed Lines]",
      "479:  .match  = user_match,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "net/dns_resolver/dns_key.c||net/dns_resolver/dns_key.c": [
      "File: net/dns_resolver/dns_key.c -> net/dns_resolver/dns_key.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "182: {",
      "183:  int slen, dlen, ret = 0;",
      "184:  const char *src = key->description, *dsp = match_data->raw_data;",
      "",
      "[Removed Lines]",
      "179: static int",
      "180: dns_resolver_match(const struct key *key,",
      "181:      const struct key_match_data *match_data)",
      "",
      "[Added Lines]",
      "179: static int dns_resolver_cmp(const struct key *key,",
      "180:        const struct key_match_data *match_data)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "209:  return ret;",
      "210: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "214: static int dns_resolver_match_preparse(struct key_match_data *match_data)",
      "215: {",
      "216:  match_data->lookup_type = KEYRING_SEARCH_LOOKUP_ITERATE;",
      "217:  match_data->cmp = dns_resolver_cmp;",
      "218:  return 0;",
      "219: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "243:  .preparse = dns_resolver_preparse,",
      "244:  .free_preparse = dns_resolver_free_preparse,",
      "245:  .instantiate = generic_key_instantiate,",
      "247:  .revoke  = user_revoke,",
      "248:  .destroy = user_destroy,",
      "249:  .describe = dns_resolver_describe,",
      "",
      "[Removed Lines]",
      "246:  .match  = dns_resolver_match,",
      "",
      "[Added Lines]",
      "255:  .match_preparse = dns_resolver_match_preparse,",
      "",
      "---------------"
    ],
    "net/rxrpc/ar-key.c||net/rxrpc/ar-key.c": [
      "File: net/rxrpc/ar-key.c -> net/rxrpc/ar-key.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "44:  .preparse = rxrpc_preparse,",
      "45:  .free_preparse = rxrpc_free_preparse,",
      "46:  .instantiate = generic_key_instantiate,",
      "48:  .destroy = rxrpc_destroy,",
      "49:  .describe = rxrpc_describe,",
      "50:  .read  = rxrpc_read,",
      "",
      "[Removed Lines]",
      "47:  .match  = user_match,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "61:  .preparse = rxrpc_preparse_s,",
      "62:  .free_preparse = rxrpc_free_preparse_s,",
      "63:  .instantiate = generic_key_instantiate,",
      "65:  .destroy = rxrpc_destroy_s,",
      "66:  .describe = rxrpc_describe,",
      "67: };",
      "",
      "[Removed Lines]",
      "64:  .match  = user_match,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "security/keys/big_key.c||security/keys/big_key.c": [
      "File: security/keys/big_key.c -> security/keys/big_key.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "36:  .preparse  = big_key_preparse,",
      "37:  .free_preparse  = big_key_free_preparse,",
      "38:  .instantiate  = generic_key_instantiate,",
      "40:  .revoke   = big_key_revoke,",
      "41:  .destroy  = big_key_destroy,",
      "42:  .describe  = big_key_describe,",
      "",
      "[Removed Lines]",
      "39:  .match   = user_match,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "security/keys/encrypted-keys/encrypted.c||security/keys/encrypted-keys/encrypted.c": [
      "File: security/keys/encrypted-keys/encrypted.c -> security/keys/encrypted-keys/encrypted.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "970:  .name = \"encrypted\",",
      "971:  .instantiate = encrypted_instantiate,",
      "972:  .update = encrypted_update,",
      "974:  .destroy = encrypted_destroy,",
      "975:  .describe = user_describe,",
      "976:  .read = encrypted_read,",
      "",
      "[Removed Lines]",
      "973:  .match = user_match,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "security/keys/internal.h||security/keys/internal.h": [
      "File: security/keys/internal.h -> security/keys/internal.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "127:  struct timespec  now;",
      "128: };",
      "130: extern key_ref_t keyring_search_aux(key_ref_t keyring_ref,",
      "131:         struct keyring_search_context *ctx);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "130: extern int key_default_cmp(const struct key *key,",
      "131:       const struct key_match_data *match_data);",
      "",
      "---------------"
    ],
    "security/keys/key.c||security/keys/key.c": [
      "File: security/keys/key.c -> security/keys/key.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "799:  }",
      "801:  key_ref = ERR_PTR(-EINVAL);",
      "803:      (!index_key.description && !index_key.type->preparse))",
      "804:   goto error_put_type;",
      "",
      "[Removed Lines]",
      "802:  if (!index_key.type->match || !index_key.type->instantiate ||",
      "",
      "[Added Lines]",
      "802:  if (!index_key.type->instantiate ||",
      "",
      "---------------"
    ],
    "security/keys/keyring.c||security/keys/keyring.c": [
      "File: security/keys/keyring.c -> security/keys/keyring.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "89:  .preparse = keyring_preparse,",
      "90:  .free_preparse = keyring_free_preparse,",
      "91:  .instantiate = keyring_instantiate,",
      "93:  .revoke  = keyring_revoke,",
      "94:  .destroy = keyring_destroy,",
      "95:  .describe = keyring_describe,",
      "",
      "[Removed Lines]",
      "92:  .match  = user_match,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "511: }",
      "512: EXPORT_SYMBOL(keyring_alloc);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "516: int key_default_cmp(const struct key *key,",
      "517:       const struct key_match_data *match_data)",
      "518: {",
      "519:  return strcmp(key->description, match_data->raw_data) == 0;",
      "520: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "884:   .index_key.type  = type,",
      "885:   .index_key.description = description,",
      "886:   .cred   = current_cred(),",
      "888:   .match_data.raw_data = description,",
      "889:   .match_data.lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT,",
      "890:   .flags   = KEYRING_SEARCH_DO_STATE_CHECK,",
      "",
      "[Removed Lines]",
      "887:   .match_data.cmp  = type->match,",
      "",
      "[Added Lines]",
      "895:   .match_data.cmp  = key_default_cmp,",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "892:  key_ref_t key;",
      "893:  int ret;",
      "898:  if (type->match_preparse) {",
      "899:   ret = type->match_preparse(&ctx.match_data);",
      "900:   if (ret < 0)",
      "",
      "[Removed Lines]",
      "895:  if (!ctx.match_data.cmp)",
      "896:   return ERR_PTR(-ENOKEY);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "security/keys/request_key.c||security/keys/request_key.c": [
      "File: security/keys/request_key.c -> security/keys/request_key.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "531:   .index_key.type  = type,",
      "532:   .index_key.description = description,",
      "533:   .cred   = current_cred(),",
      "535:   .match_data.raw_data = description,",
      "536:   .match_data.lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT,",
      "537:  };",
      "",
      "[Removed Lines]",
      "534:   .match_data.cmp  = type->match,",
      "",
      "[Added Lines]",
      "534:   .match_data.cmp  = key_default_cmp,",
      "",
      "---------------"
    ],
    "security/keys/request_key_auth.c||security/keys/request_key_auth.c": [
      "File: security/keys/request_key_auth.c -> security/keys/request_key_auth.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "246:   .index_key.type  = &key_type_request_key_auth,",
      "247:   .index_key.description = description,",
      "248:   .cred   = current_cred(),",
      "250:   .match_data.raw_data = description,",
      "251:   .match_data.lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT,",
      "252:  };",
      "",
      "[Removed Lines]",
      "249:   .match_data.cmp  = user_match,",
      "",
      "[Added Lines]",
      "249:   .match_data.cmp  = key_default_cmp,",
      "",
      "---------------"
    ],
    "security/keys/trusted.c||security/keys/trusted.c": [
      "File: security/keys/trusted.c -> security/keys/trusted.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1096:  .name = \"trusted\",",
      "1097:  .instantiate = trusted_instantiate,",
      "1098:  .update = trusted_update,",
      "1100:  .destroy = trusted_destroy,",
      "1101:  .describe = user_describe,",
      "1102:  .read = trusted_read,",
      "",
      "[Removed Lines]",
      "1099:  .match = user_match,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "security/keys/user_defined.c||security/keys/user_defined.c": [
      "File: security/keys/user_defined.c -> security/keys/user_defined.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "30:  .free_preparse  = user_free_preparse,",
      "31:  .instantiate  = generic_key_instantiate,",
      "32:  .update   = user_update,",
      "34:  .revoke   = user_revoke,",
      "35:  .destroy  = user_destroy,",
      "36:  .describe  = user_describe,",
      "",
      "[Removed Lines]",
      "33:  .match   = user_match,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "51:  .free_preparse  = user_free_preparse,",
      "52:  .instantiate  = generic_key_instantiate,",
      "53:  .update   = user_update,",
      "55:  .revoke   = user_revoke,",
      "56:  .destroy  = user_destroy,",
      "57:  .describe  = user_describe,",
      "",
      "[Removed Lines]",
      "54:  .match   = user_match,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "137: EXPORT_SYMBOL_GPL(user_update);",
      "",
      "[Removed Lines]",
      "142: int user_match(const struct key *key, const struct key_match_data *match_data)",
      "143: {",
      "144:  return strcmp(key->description, match_data->raw_data) == 0;",
      "145: }",
      "147: EXPORT_SYMBOL_GPL(user_match);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4bdf0bc300314141e5475e145acb8b5ad846f00d",
      "candidate_info": {
        "commit_hash": "4bdf0bc300314141e5475e145acb8b5ad846f00d",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/4bdf0bc300314141e5475e145acb8b5ad846f00d",
        "files": [
          "include/linux/key-type.h",
          "security/keys/internal.h",
          "security/keys/keyring.c",
          "security/keys/proc.c",
          "security/keys/process_keys.c",
          "security/keys/request_key.c",
          "security/keys/request_key_auth.c",
          "security/keys/user_defined.c"
        ],
        "message": "KEYS: Introduce a search context structure\n\nSearch functions pass around a bunch of arguments, each of which gets copied\nwith each call.  Introduce a search context structure to hold these.\n\nWhilst we're at it, create a search flag that indicates whether the search\nshould be directly to the description or whether it should iterate through all\nkeys looking for a non-description match.\n\nThis will be useful when keyrings use a generic data struct with generic\nroutines to manage their content as the search terms can just be passed\nthrough to the iterator callback function.\n\nAlso, for future use, the data to be supplied to the match function is\nseparated from the description pointer in the search context.  This makes it\nclear which is being supplied.\n\nSigned-off-by: David Howells <dhowells@redhat.com>",
        "before_after_code_files": [
          "include/linux/key-type.h||include/linux/key-type.h",
          "security/keys/internal.h||security/keys/internal.h",
          "security/keys/keyring.c||security/keys/keyring.c",
          "security/keys/proc.c||security/keys/proc.c",
          "security/keys/process_keys.c||security/keys/process_keys.c",
          "security/keys/request_key.c||security/keys/request_key.c",
          "security/keys/request_key_auth.c||security/keys/request_key_auth.c",
          "security/keys/user_defined.c||security/keys/user_defined.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "include/linux/key-type.h||include/linux/key-type.h",
            "security/keys/internal.h||security/keys/internal.h",
            "security/keys/keyring.c||security/keys/keyring.c",
            "security/keys/request_key.c||security/keys/request_key.c",
            "security/keys/request_key_auth.c||security/keys/request_key_auth.c",
            "security/keys/user_defined.c||security/keys/user_defined.c"
          ],
          "candidate": [
            "include/linux/key-type.h||include/linux/key-type.h",
            "security/keys/internal.h||security/keys/internal.h",
            "security/keys/keyring.c||security/keys/keyring.c",
            "security/keys/request_key.c||security/keys/request_key.c",
            "security/keys/request_key_auth.c||security/keys/request_key_auth.c",
            "security/keys/user_defined.c||security/keys/user_defined.c"
          ]
        }
      },
      "candidate_diff": {
        "include/linux/key-type.h||include/linux/key-type.h": [
          "File: include/linux/key-type.h -> include/linux/key-type.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:  size_t def_datalen;",
          "67:  int (*vet_description)(const char *description);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67:  unsigned def_lookup_type;",
          "",
          "---------------"
        ],
        "security/keys/internal.h||security/keys/internal.h": [
          "File: security/keys/internal.h -> security/keys/internal.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "108: typedef int (*key_match_func_t)(const struct key *, const void *);",
          "110: extern key_ref_t keyring_search_aux(key_ref_t keyring_ref,",
          "128: extern struct key *find_keyring_by_name(const char *name, bool skip_perm_check);",
          "",
          "[Removed Lines]",
          "111:         const struct cred *cred,",
          "112:         struct key_type *type,",
          "113:         const void *description,",
          "114:         key_match_func_t match,",
          "115:         bool no_state_check);",
          "117: extern key_ref_t search_my_process_keyrings(struct key_type *type,",
          "118:          const void *description,",
          "119:          key_match_func_t match,",
          "120:          bool no_state_check,",
          "121:          const struct cred *cred);",
          "122: extern key_ref_t search_process_keyrings(struct key_type *type,",
          "123:       const void *description,",
          "124:       key_match_func_t match,",
          "125:       bool no_state_check,",
          "126:       const struct cred *cred);",
          "",
          "[Added Lines]",
          "110: struct keyring_search_context {",
          "111:  struct keyring_index_key index_key;",
          "112:  const struct cred *cred;",
          "113:  key_match_func_t match;",
          "114:  const void  *match_data;",
          "115:  unsigned  flags;",
          "124:  int   skipped_ret;",
          "125:  bool   possessed;",
          "126:  key_ref_t  result;",
          "127:  struct timespec  now;",
          "128: };",
          "131:         struct keyring_search_context *ctx);",
          "133: extern key_ref_t search_my_process_keyrings(struct keyring_search_context *ctx);",
          "134: extern key_ref_t search_process_keyrings(struct keyring_search_context *ctx);",
          "",
          "---------------"
        ],
        "security/keys/keyring.c||security/keys/keyring.c": [
          "File: security/keys/keyring.c -> security/keys/keyring.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "316: key_ref_t keyring_search_aux(key_ref_t keyring_ref,",
          "322: {",
          "323:  struct {",
          "",
          "[Removed Lines]",
          "317:         const struct cred *cred,",
          "318:         struct key_type *type,",
          "319:         const void *description,",
          "320:         key_match_func_t match,",
          "321:         bool no_state_check)",
          "",
          "[Added Lines]",
          "313:         struct keyring_search_context *ctx)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "328:  } stack[KEYRING_SEARCH_MAX_DEPTH];",
          "330:  struct keyring_list *keylist;",
          "332:  unsigned long kflags;",
          "333:  struct key *keyring, *key;",
          "334:  key_ref_t key_ref;",
          "336:  long err;",
          "337:  int sp, nkeys, kix;",
          "339:  keyring = key_ref_to_ptr(keyring_ref);",
          "341:  key_check(keyring);",
          "345:  if (err < 0) {",
          "346:   key_ref = ERR_PTR(err);",
          "347:   goto error;",
          "",
          "[Removed Lines]",
          "331:  struct timespec now;",
          "335:  bool possessed;",
          "340:  possessed = is_key_possessed(keyring_ref);",
          "344:  err = key_task_permission(keyring_ref, cred, KEY_SEARCH);",
          "",
          "[Added Lines]",
          "330:  ctx->possessed = is_key_possessed(keyring_ref);",
          "334:  err = key_task_permission(keyring_ref, ctx->cred, KEY_SEARCH);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "354:  rcu_read_lock();",
          "357:  err = -EAGAIN;",
          "358:  sp = 0;",
          "",
          "[Removed Lines]",
          "356:  now = current_kernel_time();",
          "",
          "[Added Lines]",
          "346:  ctx->now = current_kernel_time();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "362:  key_ref = ERR_PTR(-EAGAIN);",
          "363:  kflags = keyring->flags;",
          "365:   key = keyring;",
          "367:    goto found;",
          "371:   if (kflags & (1 << KEY_FLAG_REVOKED))",
          "372:    goto error_2;",
          "374:    goto error_2;",
          "375:   key_ref = ERR_PTR(key->type_data.reject_error);",
          "376:   if (kflags & (1 << KEY_FLAG_NEGATIVE))",
          "",
          "[Removed Lines]",
          "364:  if (keyring->type == type && match(keyring, description)) {",
          "366:   if (no_state_check)",
          "373:   if (key->expiry && now.tv_sec >= key->expiry)",
          "",
          "[Added Lines]",
          "354:  if (keyring->type == ctx->index_key.type &&",
          "355:      ctx->match(keyring, ctx->match_data)) {",
          "357:   if (ctx->flags & KEYRING_SEARCH_NO_STATE_CHECK)",
          "364:   if (key->expiry && ctx->now.tv_sec >= key->expiry)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "384:  if (kflags & ((1 << KEY_FLAG_INVALIDATED) |",
          "385:         (1 << KEY_FLAG_REVOKED) |",
          "386:         (1 << KEY_FLAG_NEGATIVE)) ||",
          "388:   goto error_2;",
          "",
          "[Removed Lines]",
          "387:      (keyring->expiry && now.tv_sec >= keyring->expiry))",
          "",
          "[Added Lines]",
          "378:      (keyring->expiry && ctx->now.tv_sec >= keyring->expiry))",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "406:   kflags = key->flags;",
          "410:    continue;",
          "414:    if (kflags & ((1 << KEY_FLAG_INVALIDATED) |",
          "415:           (1 << KEY_FLAG_REVOKED)))",
          "416:     continue;",
          "419:     continue;",
          "420:   }",
          "424:    continue;",
          "429:    continue;",
          "432:    goto found;",
          "",
          "[Removed Lines]",
          "409:   if (key->type != type)",
          "413:   if (!no_state_check) {",
          "418:    if (key->expiry && now.tv_sec >= key->expiry)",
          "423:   if (!match(key, description))",
          "427:   if (key_task_permission(make_key_ref(key, possessed),",
          "428:      cred, KEY_SEARCH) < 0)",
          "431:   if (no_state_check)",
          "",
          "[Added Lines]",
          "400:   if (key->type != ctx->index_key.type)",
          "404:   if (!(ctx->flags & KEYRING_SEARCH_NO_STATE_CHECK)) {",
          "409:    if (key->expiry && ctx->now.tv_sec >= key->expiry)",
          "414:   if (!ctx->match(key, ctx->match_data))",
          "418:   if (key_task_permission(make_key_ref(key, ctx->possessed),",
          "419:      ctx->cred, KEY_SEARCH) < 0)",
          "422:   if (ctx->flags & KEYRING_SEARCH_NO_STATE_CHECK)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "456:   if (sp >= KEYRING_SEARCH_MAX_DEPTH)",
          "457:    continue;",
          "461:    continue;",
          "",
          "[Removed Lines]",
          "459:   if (key_task_permission(make_key_ref(key, possessed),",
          "460:      cred, KEY_SEARCH) < 0)",
          "",
          "[Added Lines]",
          "450:   if (key_task_permission(make_key_ref(key, ctx->possessed),",
          "451:      ctx->cred, KEY_SEARCH) < 0)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "490: found:",
          "491:  atomic_inc(&key->usage);",
          "494:  while (sp > 0)",
          "496:  key_check(key);",
          "498: error_2:",
          "499:  rcu_read_unlock();",
          "500: error:",
          "",
          "[Removed Lines]",
          "492:  key->last_used_at = now.tv_sec;",
          "493:  keyring->last_used_at = now.tv_sec;",
          "495:   stack[--sp].keyring->last_used_at = now.tv_sec;",
          "497:  key_ref = make_key_ref(key, possessed);",
          "",
          "[Added Lines]",
          "483:  key->last_used_at = ctx->now.tv_sec;",
          "484:  keyring->last_used_at = ctx->now.tv_sec;",
          "486:   stack[--sp].keyring->last_used_at = ctx->now.tv_sec;",
          "488:  key_ref = make_key_ref(key, ctx->possessed);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "514:     struct key_type *type,",
          "515:     const char *description)",
          "516: {",
          "518:   return ERR_PTR(-ENOKEY);",
          "522: }",
          "523: EXPORT_SYMBOL(keyring_search);",
          "",
          "[Removed Lines]",
          "517:  if (!type->match)",
          "520:  return keyring_search_aux(keyring, current->cred,",
          "521:       type, description, type->match, false);",
          "",
          "[Added Lines]",
          "508:  struct keyring_search_context ctx = {",
          "509:   .index_key.type  = type,",
          "510:   .index_key.description = description,",
          "511:   .cred   = current_cred(),",
          "512:   .match   = type->match,",
          "513:   .match_data  = description,",
          "514:   .flags   = (type->def_lookup_type |",
          "515:         KEYRING_SEARCH_DO_STATE_CHECK),",
          "516:  };",
          "518:  if (!ctx.match)",
          "521:  return keyring_search_aux(keyring, &ctx);",
          "",
          "---------------"
        ],
        "security/keys/proc.c||security/keys/proc.c": [
          "File: security/keys/proc.c -> security/keys/proc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "183: static int proc_keys_show(struct seq_file *m, void *v)",
          "184: {",
          "186:  struct rb_node *_p = v;",
          "187:  struct key *key = rb_entry(_p, struct key, serial_node);",
          "188:  struct timespec now;",
          "",
          "[Removed Lines]",
          "185:  const struct cred *cred = current_cred();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "191:  char xbuf[12];",
          "192:  int rc;",
          "194:  key_ref = make_key_ref(key, 0);",
          "199:  if (key->perm & KEY_POS_VIEW) {",
          "203:   if (!IS_ERR(skey_ref)) {",
          "204:    key_ref_put(skey_ref);",
          "205:    key_ref = make_key_ref(key, 1);",
          "",
          "[Removed Lines]",
          "200:   skey_ref = search_my_process_keyrings(key->type, key,",
          "201:             lookup_user_key_possessed,",
          "202:             true, cred);",
          "",
          "[Added Lines]",
          "193:  struct keyring_search_context ctx = {",
          "194:   .index_key.type  = key->type,",
          "195:   .index_key.description = key->description,",
          "196:   .cred   = current_cred(),",
          "197:   .match   = lookup_user_key_possessed,",
          "198:   .match_data  = key,",
          "199:   .flags   = (KEYRING_SEARCH_NO_STATE_CHECK |",
          "200:         KEYRING_SEARCH_LOOKUP_DIRECT),",
          "201:  };",
          "209:   skey_ref = search_my_process_keyrings(&ctx);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "215:  if (rc < 0)",
          "216:   return 0;",
          "",
          "[Removed Lines]",
          "214:  rc = key_task_permission(key_ref, cred, KEY_VIEW);",
          "",
          "[Added Lines]",
          "221:  rc = key_task_permission(key_ref, ctx.cred, KEY_VIEW);",
          "",
          "---------------"
        ],
        "security/keys/process_keys.c||security/keys/process_keys.c": [
          "File: security/keys/process_keys.c -> security/keys/process_keys.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "327: {",
          "328:  key_ref_t key_ref, ret, err;",
          "",
          "[Removed Lines]",
          "322: key_ref_t search_my_process_keyrings(struct key_type *type,",
          "323:          const void *description,",
          "324:          key_match_func_t match,",
          "325:          bool no_state_check,",
          "326:          const struct cred *cred)",
          "",
          "[Added Lines]",
          "322: key_ref_t search_my_process_keyrings(struct keyring_search_context *ctx)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "339:  err = ERR_PTR(-EAGAIN);",
          "343:   key_ref = keyring_search_aux(",
          "346:   if (!IS_ERR(key_ref))",
          "347:    goto found;",
          "",
          "[Removed Lines]",
          "342:  if (cred->thread_keyring) {",
          "344:    make_key_ref(cred->thread_keyring, 1),",
          "345:    cred, type, description, match, no_state_check);",
          "",
          "[Added Lines]",
          "338:  if (ctx->cred->thread_keyring) {",
          "340:    make_key_ref(ctx->cred->thread_keyring, 1), ctx);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "358:  }",
          "362:   key_ref = keyring_search_aux(",
          "365:   if (!IS_ERR(key_ref))",
          "366:    goto found;",
          "",
          "[Removed Lines]",
          "361:  if (cred->process_keyring) {",
          "363:    make_key_ref(cred->process_keyring, 1),",
          "364:    cred, type, description, match, no_state_check);",
          "",
          "[Added Lines]",
          "356:  if (ctx->cred->process_keyring) {",
          "358:    make_key_ref(ctx->cred->process_keyring, 1), ctx);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "379:  }",
          "383:   rcu_read_lock();",
          "384:   key_ref = keyring_search_aux(",
          "387:   rcu_read_unlock();",
          "389:   if (!IS_ERR(key_ref))",
          "",
          "[Removed Lines]",
          "382:  if (cred->session_keyring) {",
          "385:    make_key_ref(rcu_dereference(cred->session_keyring), 1),",
          "386:    cred, type, description, match, no_state_check);",
          "",
          "[Added Lines]",
          "376:  if (ctx->cred->session_keyring) {",
          "379:    make_key_ref(rcu_dereference(ctx->cred->session_keyring), 1),",
          "380:    ctx);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "402:   }",
          "403:  }",
          "406:   key_ref = keyring_search_aux(",
          "409:   if (!IS_ERR(key_ref))",
          "410:    goto found;",
          "",
          "[Removed Lines]",
          "405:  else if (cred->user->session_keyring) {",
          "407:    make_key_ref(cred->user->session_keyring, 1),",
          "408:    cred, type, description, match, no_state_check);",
          "",
          "[Added Lines]",
          "399:  else if (ctx->cred->user->session_keyring) {",
          "401:    make_key_ref(ctx->cred->user->session_keyring, 1),",
          "402:    ctx);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "445: {",
          "446:  struct request_key_auth *rka;",
          "447:  key_ref_t key_ref, ret = ERR_PTR(-EACCES), err;",
          "449:  might_sleep();",
          "453:  if (!IS_ERR(key_ref))",
          "454:   goto found;",
          "455:  err = key_ref;",
          "",
          "[Removed Lines]",
          "440: key_ref_t search_process_keyrings(struct key_type *type,",
          "441:       const void *description,",
          "442:       key_match_func_t match,",
          "443:       bool no_state_check,",
          "444:       const struct cred *cred)",
          "451:  key_ref = search_my_process_keyrings(type, description, match,",
          "452:           no_state_check, cred);",
          "",
          "[Added Lines]",
          "434: key_ref_t search_process_keyrings(struct keyring_search_context *ctx)",
          "441:  key_ref = search_my_process_keyrings(ctx);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "464:      ) {",
          "466:   down_read(&cred->request_key_auth->sem);",
          "475:    up_read(&cred->request_key_auth->sem);",
          "",
          "[Removed Lines]",
          "461:  if (cred->request_key_auth &&",
          "462:      cred == current_cred() &&",
          "463:      type != &key_type_request_key_auth",
          "468:   if (key_validate(cred->request_key_auth) == 0) {",
          "469:    rka = cred->request_key_auth->payload.data;",
          "471:    key_ref = search_process_keyrings(type, description,",
          "472:          match, no_state_check,",
          "473:          rka->cred);",
          "",
          "[Added Lines]",
          "450:  if (ctx->cred->request_key_auth &&",
          "451:      ctx->cred == current_cred() &&",
          "452:      ctx->index_key.type != &key_type_request_key_auth",
          "454:   const struct cred *cred = ctx->cred;",
          "459:   if (key_validate(ctx->cred->request_key_auth) == 0) {",
          "460:    rka = ctx->cred->request_key_auth->payload.data;",
          "462:    ctx->cred = rka->cred;",
          "463:    key_ref = search_process_keyrings(ctx);",
          "464:    ctx->cred = cred;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "524: key_ref_t lookup_user_key(key_serial_t id, unsigned long lflags,",
          "525:      key_perm_t perm)",
          "526: {",
          "527:  struct request_key_auth *rka;",
          "529:  struct key *key;",
          "530:  key_ref_t key_ref, skey_ref;",
          "531:  int ret;",
          "533: try_again:",
          "535:  key_ref = ERR_PTR(-ENOKEY);",
          "537:  switch (id) {",
          "538:  case KEY_SPEC_THREAD_KEYRING:",
          "540:    if (!(lflags & KEY_LOOKUP_CREATE))",
          "541:     goto error;",
          "",
          "[Removed Lines]",
          "528:  const struct cred *cred;",
          "534:  cred = get_current_cred();",
          "539:   if (!cred->thread_keyring) {",
          "",
          "[Added Lines]",
          "518:  struct keyring_search_context ctx = {",
          "519:   .match = lookup_user_key_possessed,",
          "520:   .flags = (KEYRING_SEARCH_NO_STATE_CHECK |",
          "521:       KEYRING_SEARCH_LOOKUP_DIRECT),",
          "522:  };",
          "529:  ctx.cred = get_current_cred();",
          "534:   if (!ctx.cred->thread_keyring) {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "548:    goto reget_creds;",
          "549:   }",
          "552:   atomic_inc(&key->usage);",
          "553:   key_ref = make_key_ref(key, 1);",
          "554:   break;",
          "556:  case KEY_SPEC_PROCESS_KEYRING:",
          "558:    if (!(lflags & KEY_LOOKUP_CREATE))",
          "559:     goto error;",
          "",
          "[Removed Lines]",
          "551:   key = cred->thread_keyring;",
          "557:   if (!cred->process_keyring) {",
          "",
          "[Added Lines]",
          "546:   key = ctx.cred->thread_keyring;",
          "552:   if (!ctx.cred->process_keyring) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "566:    goto reget_creds;",
          "567:   }",
          "570:   atomic_inc(&key->usage);",
          "571:   key_ref = make_key_ref(key, 1);",
          "572:   break;",
          "574:  case KEY_SPEC_SESSION_KEYRING:",
          "578:    ret = install_user_keyrings();",
          "",
          "[Removed Lines]",
          "569:   key = cred->process_keyring;",
          "575:   if (!cred->session_keyring) {",
          "",
          "[Added Lines]",
          "564:   key = ctx.cred->process_keyring;",
          "570:   if (!ctx.cred->session_keyring) {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "582:     ret = join_session_keyring(NULL);",
          "583:    else",
          "584:     ret = install_session_keyring(",
          "587:    if (ret < 0)",
          "588:     goto error;",
          "589:    goto reget_creds;",
          "592:       lflags & KEY_LOOKUP_CREATE) {",
          "593:    ret = join_session_keyring(NULL);",
          "594:    if (ret < 0)",
          "",
          "[Removed Lines]",
          "585:      cred->user->session_keyring);",
          "590:   } else if (cred->session_keyring ==",
          "591:       cred->user->session_keyring &&",
          "",
          "[Added Lines]",
          "580:      ctx.cred->user->session_keyring);",
          "585:   } else if (ctx.cred->session_keyring ==",
          "586:       ctx.cred->user->session_keyring &&",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "597:   }",
          "599:   rcu_read_lock();",
          "601:   atomic_inc(&key->usage);",
          "602:   rcu_read_unlock();",
          "603:   key_ref = make_key_ref(key, 1);",
          "604:   break;",
          "606:  case KEY_SPEC_USER_KEYRING:",
          "608:    ret = install_user_keyrings();",
          "609:    if (ret < 0)",
          "610:     goto error;",
          "611:   }",
          "614:   atomic_inc(&key->usage);",
          "615:   key_ref = make_key_ref(key, 1);",
          "616:   break;",
          "618:  case KEY_SPEC_USER_SESSION_KEYRING:",
          "620:    ret = install_user_keyrings();",
          "621:    if (ret < 0)",
          "622:     goto error;",
          "623:   }",
          "626:   atomic_inc(&key->usage);",
          "627:   key_ref = make_key_ref(key, 1);",
          "628:   break;",
          "",
          "[Removed Lines]",
          "600:   key = rcu_dereference(cred->session_keyring);",
          "607:   if (!cred->user->uid_keyring) {",
          "613:   key = cred->user->uid_keyring;",
          "619:   if (!cred->user->session_keyring) {",
          "625:   key = cred->user->session_keyring;",
          "",
          "[Added Lines]",
          "595:   key = rcu_dereference(ctx.cred->session_keyring);",
          "602:   if (!ctx.cred->user->uid_keyring) {",
          "608:   key = ctx.cred->user->uid_keyring;",
          "614:   if (!ctx.cred->user->session_keyring) {",
          "620:   key = ctx.cred->user->session_keyring;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "633:   goto error;",
          "635:  case KEY_SPEC_REQKEY_AUTH_KEY:",
          "637:   if (!key)",
          "638:    goto error;",
          "",
          "[Removed Lines]",
          "636:   key = cred->request_key_auth;",
          "",
          "[Added Lines]",
          "631:   key = ctx.cred->request_key_auth;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "642:   break;",
          "644:  case KEY_SPEC_REQUESTOR_KEYRING:",
          "646:    goto error;",
          "649:   if (test_bit(KEY_FLAG_REVOKED,",
          "651:    key_ref = ERR_PTR(-EKEYREVOKED);",
          "652:    key = NULL;",
          "653:   } else {",
          "655:    key = rka->dest_keyring;",
          "656:    atomic_inc(&key->usage);",
          "657:   }",
          "659:   if (!key)",
          "660:    goto error;",
          "661:   key_ref = make_key_ref(key, 1);",
          "",
          "[Removed Lines]",
          "645:   if (!cred->request_key_auth)",
          "648:   down_read(&cred->request_key_auth->sem);",
          "650:         &cred->request_key_auth->flags)) {",
          "654:    rka = cred->request_key_auth->payload.data;",
          "658:   up_read(&cred->request_key_auth->sem);",
          "",
          "[Added Lines]",
          "640:   if (!ctx.cred->request_key_auth)",
          "643:   down_read(&ctx.cred->request_key_auth->sem);",
          "645:         &ctx.cred->request_key_auth->flags)) {",
          "649:    rka = ctx.cred->request_key_auth->payload.data;",
          "653:   up_read(&ctx.cred->request_key_auth->sem);",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "675:   key_ref = make_key_ref(key, 0);",
          "682:   if (!IS_ERR(skey_ref)) {",
          "683:    key_put(key);",
          "",
          "[Removed Lines]",
          "678:   skey_ref = search_process_keyrings(key->type, key,",
          "679:          lookup_user_key_possessed,",
          "680:          true, cred);",
          "",
          "[Added Lines]",
          "673:   ctx.index_key.type  = key->type;",
          "674:   ctx.index_key.description = key->description;",
          "675:   ctx.index_key.desc_len  = strlen(key->description);",
          "676:   ctx.match_data   = key;",
          "677:   kdebug(\"check possessed\");",
          "678:   skey_ref = search_process_keyrings(&ctx);",
          "679:   kdebug(\"possessed=%p\", skey_ref);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "717:   goto invalid_key;",
          "721:  if (ret < 0)",
          "722:   goto invalid_key;",
          "724:  key->last_used_at = current_kernel_time().tv_sec;",
          "726: error:",
          "728:  return key_ref;",
          "730: invalid_key:",
          "",
          "[Removed Lines]",
          "720:  ret = key_task_permission(key_ref, cred, perm);",
          "727:  put_cred(cred);",
          "",
          "[Added Lines]",
          "719:  ret = key_task_permission(key_ref, ctx.cred, perm);",
          "726:  put_cred(ctx.cred);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "737: reget_creds:",
          "739:  goto try_again;",
          "740: }",
          "",
          "[Removed Lines]",
          "738:  put_cred(cred);",
          "",
          "[Added Lines]",
          "737:  put_cred(ctx.cred);",
          "",
          "---------------"
        ],
        "security/keys/request_key.c||security/keys/request_key.c": [
          "File: security/keys/request_key.c -> security/keys/request_key.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "350:           struct key *dest_keyring,",
          "351:           unsigned long flags,",
          "352:           struct key_user *user,",
          "353:           struct key **_key)",
          "354: {",
          "361:  unsigned long prealloc;",
          "362:  struct key *key;",
          "363:  key_perm_t perm;",
          "364:  key_ref_t key_ref;",
          "365:  int ret;",
          "370:  mutex_lock(&user->cons_lock);",
          "372:  perm = KEY_POS_VIEW | KEY_POS_SEARCH | KEY_POS_LINK | KEY_POS_SETATTR;",
          "373:  perm |= KEY_USR_VIEW;",
          "375:   perm |= KEY_POS_READ;",
          "377:   perm |= KEY_POS_WRITE;",
          "380:    perm, flags);",
          "381:  if (IS_ERR(key))",
          "382:   goto alloc_failed;",
          "",
          "[Removed Lines]",
          "348: static int construct_alloc_key(struct key_type *type,",
          "349:           const char *description,",
          "355:  const struct keyring_index_key index_key = {",
          "356:   .type  = type,",
          "357:   .description = description,",
          "358:   .desc_len = strlen(description),",
          "359:  };",
          "360:  const struct cred *cred = current_cred();",
          "367:  kenter(\"%s,%s,,,\", type->name, description);",
          "374:  if (type->read)",
          "376:  if (type == &key_type_keyring || type->update)",
          "379:  key = key_alloc(type, description, cred->fsuid, cred->fsgid, cred,",
          "",
          "[Added Lines]",
          "348: static int construct_alloc_key(struct keyring_search_context *ctx,",
          "360:  kenter(\"%s,%s,,,\",",
          "361:         ctx->index_key.type->name, ctx->index_key.description);",
          "368:  if (ctx->index_key.type->read)",
          "370:  if (ctx->index_key.type == &key_type_keyring ||",
          "371:      ctx->index_key.type->update)",
          "374:  key = key_alloc(ctx->index_key.type, ctx->index_key.description,",
          "375:    ctx->cred->fsuid, ctx->cred->fsgid, ctx->cred,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "384:  set_bit(KEY_FLAG_USER_CONSTRUCT, &key->flags);",
          "386:  if (dest_keyring) {",
          "388:   if (ret < 0)",
          "389:    goto link_prealloc_failed;",
          "390:  }",
          "",
          "[Removed Lines]",
          "387:   ret = __key_link_begin(dest_keyring, &index_key, &prealloc);",
          "",
          "[Added Lines]",
          "383:   ret = __key_link_begin(dest_keyring, &ctx->index_key, &prealloc);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "395:  mutex_lock(&key_construction_mutex);",
          "399:  if (!IS_ERR(key_ref))",
          "400:   goto key_already_present;",
          "",
          "[Removed Lines]",
          "397:  key_ref = search_process_keyrings(type, description, type->match,",
          "398:        false, cred);",
          "",
          "[Added Lines]",
          "393:  key_ref = search_process_keyrings(ctx);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "405:  mutex_unlock(&key_construction_mutex);",
          "406:  if (dest_keyring)",
          "408:  mutex_unlock(&user->cons_lock);",
          "410:  kleave(\" = 0 [%d]\", key_serial(key));",
          "",
          "[Removed Lines]",
          "407:   __key_link_end(dest_keyring, &index_key, prealloc);",
          "",
          "[Added Lines]",
          "402:   __key_link_end(dest_keyring, &ctx->index_key, prealloc);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "420:   ret = __key_link_check_live_key(dest_keyring, key);",
          "421:   if (ret == 0)",
          "422:    __key_link(dest_keyring, key, &prealloc);",
          "424:   if (ret < 0)",
          "425:    goto link_check_failed;",
          "426:  }",
          "",
          "[Removed Lines]",
          "423:   __key_link_end(dest_keyring, &index_key, prealloc);",
          "",
          "[Added Lines]",
          "418:   __key_link_end(dest_keyring, &ctx->index_key, prealloc);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "454:        const char *callout_info,",
          "455:        size_t callout_len,",
          "456:        void *aux,",
          "",
          "[Removed Lines]",
          "452: static struct key *construct_key_and_link(struct key_type *type,",
          "453:        const char *description,",
          "",
          "[Added Lines]",
          "447: static struct key *construct_key_and_link(struct keyring_search_context *ctx,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "470:  construct_get_dest_keyring(&dest_keyring);",
          "474:  key_user_put(user);",
          "476:  if (ret == 0) {",
          "",
          "[Removed Lines]",
          "472:  ret = construct_alloc_key(type, description, dest_keyring, flags, user,",
          "473:       &key);",
          "",
          "[Added Lines]",
          "466:  ret = construct_alloc_key(ctx, dest_keyring, flags, user, &key);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "534:      struct key *dest_keyring,",
          "535:      unsigned long flags)",
          "536: {",
          "538:  struct key *key;",
          "539:  key_ref_t key_ref;",
          "540:  int ret;",
          "542:  kenter(\"%s,%s,%p,%zu,%p,%p,%lx\",",
          "550:  if (!IS_ERR(key_ref)) {",
          "551:   key = key_ref_to_ptr(key_ref);",
          "",
          "[Removed Lines]",
          "537:  const struct cred *cred = current_cred();",
          "543:         type->name, description, callout_info, callout_len, aux,",
          "544:         dest_keyring, flags);",
          "547:  key_ref = search_process_keyrings(type, description, type->match,",
          "548:        false, cred);",
          "",
          "[Added Lines]",
          "530:  struct keyring_search_context ctx = {",
          "531:   .index_key.type  = type,",
          "532:   .index_key.description = description,",
          "533:   .cred   = current_cred(),",
          "534:   .match   = type->match,",
          "535:   .match_data  = description,",
          "536:   .flags   = KEYRING_SEARCH_LOOKUP_DIRECT,",
          "537:  };",
          "543:         ctx.index_key.type->name, ctx.index_key.description,",
          "544:         callout_info, callout_len, aux, dest_keyring, flags);",
          "547:  key_ref = search_process_keyrings(&ctx);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "568:   if (!callout_info)",
          "569:    goto error;",
          "574:  }",
          "576: error:",
          "",
          "[Removed Lines]",
          "571:   key = construct_key_and_link(type, description, callout_info,",
          "572:           callout_len, aux, dest_keyring,",
          "573:           flags);",
          "",
          "[Added Lines]",
          "570:   key = construct_key_and_link(&ctx, callout_info, callout_len,",
          "571:           aux, dest_keyring, flags);",
          "",
          "---------------"
        ],
        "security/keys/request_key_auth.c||security/keys/request_key_auth.c": [
          "File: security/keys/request_key_auth.c -> security/keys/request_key_auth.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "240: struct key *key_get_instantiation_authkey(key_serial_t target_id)",
          "241: {",
          "243:  struct key *authkey;",
          "244:  key_ref_t authkey_ref;",
          "252:  if (IS_ERR(authkey_ref)) {",
          "253:   authkey = ERR_CAST(authkey_ref);",
          "",
          "[Removed Lines]",
          "242:  const struct cred *cred = current_cred();",
          "246:  authkey_ref = search_process_keyrings(",
          "247:   &key_type_request_key_auth,",
          "248:   (void *) (unsigned long) target_id,",
          "249:   key_get_instantiation_authkey_match,",
          "250:   false, cred);",
          "",
          "[Added Lines]",
          "242:  struct keyring_search_context ctx = {",
          "243:   .index_key.type  = &key_type_request_key_auth,",
          "244:   .cred   = current_cred(),",
          "245:   .match   = key_get_instantiation_authkey_match,",
          "246:   .match_data  = (void *)(unsigned long)target_id,",
          "247:   .flags   = KEYRING_SEARCH_LOOKUP_DIRECT,",
          "248:  };",
          "252:  authkey_ref = search_process_keyrings(&ctx);",
          "",
          "---------------"
        ],
        "security/keys/user_defined.c||security/keys/user_defined.c": [
          "File: security/keys/user_defined.c -> security/keys/user_defined.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: struct key_type key_type_user = {",
          "36: };",
          "38: EXPORT_SYMBOL_GPL(key_type_user);",
          "",
          "[Removed Lines]",
          "28:  .name  = \"user\",",
          "29:  .instantiate = user_instantiate,",
          "30:  .update  = user_update,",
          "31:  .match  = user_match,",
          "32:  .revoke  = user_revoke,",
          "33:  .destroy = user_destroy,",
          "34:  .describe = user_describe,",
          "35:  .read  = user_read,",
          "",
          "[Added Lines]",
          "28:  .name   = \"user\",",
          "29:  .def_lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT,",
          "30:  .instantiate  = user_instantiate,",
          "31:  .update   = user_update,",
          "32:  .match   = user_match,",
          "33:  .revoke   = user_revoke,",
          "34:  .destroy  = user_destroy,",
          "35:  .describe  = user_describe,",
          "36:  .read   = user_read,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46: struct key_type key_type_logon = {",
          "47:  .name   = \"logon\",",
          "48:  .instantiate  = user_instantiate,",
          "49:  .update   = user_update,",
          "50:  .match   = user_match,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49:  .def_lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ab3c3587f8cda9083209a61dbe3a4407d3cada10",
      "candidate_info": {
        "commit_hash": "ab3c3587f8cda9083209a61dbe3a4407d3cada10",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/ab3c3587f8cda9083209a61dbe3a4407d3cada10",
        "files": [
          "include/keys/big_key-type.h",
          "include/linux/key.h",
          "security/keys/Kconfig",
          "security/keys/Makefile",
          "security/keys/big_key.c"
        ],
        "message": "KEYS: Implement a big key type that can save to tmpfs\n\nImplement a big key type that can save its contents to tmpfs and thus\nswapspace when memory is tight.  This is useful for Kerberos ticket caches.\n\nSigned-off-by: David Howells <dhowells@redhat.com>\nTested-by: Simo Sorce <simo@redhat.com>",
        "before_after_code_files": [
          "include/keys/big_key-type.h||include/keys/big_key-type.h",
          "include/linux/key.h||include/linux/key.h",
          "security/keys/big_key.c||security/keys/big_key.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "security/keys/big_key.c||security/keys/big_key.c"
          ],
          "candidate": [
            "security/keys/big_key.c||security/keys/big_key.c"
          ]
        }
      },
      "candidate_diff": {
        "include/keys/big_key-type.h||include/keys/big_key-type.h": [
          "File: include/keys/big_key-type.h -> include/keys/big_key-type.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12: #ifndef _KEYS_BIG_KEY_TYPE_H",
          "13: #define _KEYS_BIG_KEY_TYPE_H",
          "15: #include <linux/key-type.h>",
          "17: extern struct key_type key_type_big_key;",
          "19: extern int big_key_instantiate(struct key *key, struct key_preparsed_payload *prep);",
          "20: extern void big_key_revoke(struct key *key);",
          "21: extern void big_key_destroy(struct key *key);",
          "22: extern void big_key_describe(const struct key *big_key, struct seq_file *m);",
          "23: extern long big_key_read(const struct key *key, char __user *buffer, size_t buflen);",
          "",
          "---------------"
        ],
        "include/linux/key.h||include/linux/key.h": [
          "File: include/linux/key.h -> include/linux/key.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "201:    unsigned long  value;",
          "202:    void __rcu  *rcudata;",
          "203:    void   *data;",
          "204:   } payload;",
          "205:   struct assoc_array keys;",
          "206:  };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "204:    void   *data2[2];",
          "",
          "---------------"
        ],
        "security/keys/big_key.c||security/keys/big_key.c": [
          "File: security/keys/big_key.c -> security/keys/big_key.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12: #include <linux/module.h>",
          "13: #include <linux/init.h>",
          "14: #include <linux/seq_file.h>",
          "15: #include <linux/file.h>",
          "16: #include <linux/shmem_fs.h>",
          "17: #include <linux/err.h>",
          "18: #include <keys/user-type.h>",
          "19: #include <keys/big_key-type.h>",
          "21: MODULE_LICENSE(\"GPL\");",
          "28: #define BIG_KEY_FILE_THRESHOLD (sizeof(struct inode) + sizeof(struct dentry))",
          "34: struct key_type key_type_big_key = {",
          "35:  .name   = \"big_key\",",
          "36:  .def_lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT,",
          "37:  .instantiate  = big_key_instantiate,",
          "38:  .match   = user_match,",
          "39:  .revoke   = big_key_revoke,",
          "40:  .destroy  = big_key_destroy,",
          "41:  .describe  = big_key_describe,",
          "42:  .read   = big_key_read,",
          "43: };",
          "48: int big_key_instantiate(struct key *key, struct key_preparsed_payload *prep)",
          "49: {",
          "50:  struct path *path = (struct path *)&key->payload.data2;",
          "51:  struct file *file;",
          "52:  ssize_t written;",
          "53:  size_t datalen = prep->datalen;",
          "54:  int ret;",
          "56:  ret = -EINVAL;",
          "57:  if (datalen <= 0 || datalen > 1024 * 1024 || !prep->data)",
          "58:   goto error;",
          "61:  ret = key_payload_reserve(key, 16);",
          "62:  if (ret < 0)",
          "63:   goto error;",
          "65:  key->type_data.x[1] = datalen;",
          "67:  if (datalen > BIG_KEY_FILE_THRESHOLD) {",
          "73:   file = shmem_file_setup(\"\", datalen, 0);",
          "74:   if (IS_ERR(file))",
          "75:    goto err_quota;",
          "77:   written = kernel_write(file, prep->data, prep->datalen, 0);",
          "78:   if (written != datalen) {",
          "79:    if (written >= 0)",
          "80:     ret = -ENOMEM;",
          "81:    goto err_fput;",
          "82:   }",
          "88:   path_get(path);",
          "89:   fput(file);",
          "90:  } else {",
          "92:   void *data = kmalloc(datalen, GFP_KERNEL);",
          "93:   if (!data) {",
          "94:    ret = -ENOMEM;",
          "95:    goto err_quota;",
          "96:   }",
          "98:   key->payload.data = memcpy(data, prep->data, prep->datalen);",
          "99:  }",
          "100:  return 0;",
          "102: err_fput:",
          "103:  fput(file);",
          "104: err_quota:",
          "105:  key_payload_reserve(key, 0);",
          "106: error:",
          "107:  return ret;",
          "108: }",
          "114: void big_key_revoke(struct key *key)",
          "115: {",
          "116:  struct path *path = (struct path *)&key->payload.data2;",
          "119:  key_payload_reserve(key, 0);",
          "120:  if (key_is_instantiated(key) && key->type_data.x[1] > BIG_KEY_FILE_THRESHOLD)",
          "121:   vfs_truncate(path, 0);",
          "122: }",
          "127: void big_key_destroy(struct key *key)",
          "128: {",
          "129:  if (key->type_data.x[1] > BIG_KEY_FILE_THRESHOLD) {",
          "130:   struct path *path = (struct path *)&key->payload.data2;",
          "131:   path_put(path);",
          "132:   path->mnt = NULL;",
          "133:   path->dentry = NULL;",
          "134:  } else {",
          "135:   kfree(key->payload.data);",
          "136:   key->payload.data = NULL;",
          "137:  }",
          "138: }",
          "143: void big_key_describe(const struct key *key, struct seq_file *m)",
          "144: {",
          "145:  unsigned long datalen = key->type_data.x[1];",
          "147:  seq_puts(m, key->description);",
          "149:  if (key_is_instantiated(key))",
          "150:   seq_printf(m, \": %lu [%s]\",",
          "151:       datalen,",
          "152:       datalen > BIG_KEY_FILE_THRESHOLD ? \"file\" : \"buff\");",
          "153: }",
          "159: long big_key_read(const struct key *key, char __user *buffer, size_t buflen)",
          "160: {",
          "161:  unsigned long datalen = key->type_data.x[1];",
          "162:  long ret;",
          "164:  if (!buffer || buflen < datalen)",
          "165:   return datalen;",
          "167:  if (datalen > BIG_KEY_FILE_THRESHOLD) {",
          "168:   struct path *path = (struct path *)&key->payload.data2;",
          "169:   struct file *file;",
          "170:   loff_t pos;",
          "172:   file = dentry_open(path, O_RDONLY, current_cred());",
          "173:   if (IS_ERR(file))",
          "174:    return PTR_ERR(file);",
          "176:   pos = 0;",
          "177:   ret = vfs_read(file, buffer, datalen, &pos);",
          "178:   fput(file);",
          "179:   if (ret >= 0 && ret != datalen)",
          "180:    ret = -EIO;",
          "181:  } else {",
          "182:   ret = datalen;",
          "183:   if (copy_to_user(buffer, key->payload.data, datalen) != 0)",
          "184:    ret = -EFAULT;",
          "185:  }",
          "187:  return ret;",
          "188: }",
          "193: static int __init big_key_init(void)",
          "194: {",
          "195:  return register_key_type(&key_type_big_key);",
          "196: }",
          "198: static void __exit big_key_cleanup(void)",
          "199: {",
          "200:  unregister_key_type(&key_type_big_key);",
          "201: }",
          "203: module_init(big_key_init);",
          "204: module_exit(big_key_cleanup);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "462919591a1791e76042dc5c1e0148715df59beb",
      "candidate_info": {
        "commit_hash": "462919591a1791e76042dc5c1e0148715df59beb",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/462919591a1791e76042dc5c1e0148715df59beb",
        "files": [
          "crypto/asymmetric_keys/asymmetric_type.c",
          "include/keys/user-type.h",
          "include/linux/key-type.h",
          "net/dns_resolver/dns_key.c",
          "security/keys/internal.h",
          "security/keys/keyring.c",
          "security/keys/proc.c",
          "security/keys/process_keys.c",
          "security/keys/request_key.c",
          "security/keys/request_key_auth.c",
          "security/keys/user_defined.c"
        ],
        "message": "KEYS: Preparse match data\n\nPreparse the match data.  This provides several advantages:\n\n (1) The preparser can reject invalid criteria up front.\n\n (2) The preparser can convert the criteria to binary data if necessary (the\n     asymmetric key type really wants to do binary comparison of the key IDs).\n\n (3) The preparser can set the type of search to be performed.  This means\n     that it's not then a one-off setting in the key type.\n\n (4) The preparser can set an appropriate comparator function.\n\nSigned-off-by: David Howells <dhowells@redhat.com>\nAcked-by: Vivek Goyal <vgoyal@redhat.com>",
        "before_after_code_files": [
          "crypto/asymmetric_keys/asymmetric_type.c||crypto/asymmetric_keys/asymmetric_type.c",
          "include/keys/user-type.h||include/keys/user-type.h",
          "include/linux/key-type.h||include/linux/key-type.h",
          "net/dns_resolver/dns_key.c||net/dns_resolver/dns_key.c",
          "security/keys/internal.h||security/keys/internal.h",
          "security/keys/keyring.c||security/keys/keyring.c",
          "security/keys/proc.c||security/keys/proc.c",
          "security/keys/process_keys.c||security/keys/process_keys.c",
          "security/keys/request_key.c||security/keys/request_key.c",
          "security/keys/request_key_auth.c||security/keys/request_key_auth.c",
          "security/keys/user_defined.c||security/keys/user_defined.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "crypto/asymmetric_keys/asymmetric_type.c||crypto/asymmetric_keys/asymmetric_type.c",
            "include/keys/user-type.h||include/keys/user-type.h",
            "include/linux/key-type.h||include/linux/key-type.h",
            "net/dns_resolver/dns_key.c||net/dns_resolver/dns_key.c",
            "security/keys/internal.h||security/keys/internal.h",
            "security/keys/keyring.c||security/keys/keyring.c",
            "security/keys/request_key.c||security/keys/request_key.c",
            "security/keys/request_key_auth.c||security/keys/request_key_auth.c",
            "security/keys/user_defined.c||security/keys/user_defined.c"
          ],
          "candidate": [
            "crypto/asymmetric_keys/asymmetric_type.c||crypto/asymmetric_keys/asymmetric_type.c",
            "include/keys/user-type.h||include/keys/user-type.h",
            "include/linux/key-type.h||include/linux/key-type.h",
            "net/dns_resolver/dns_key.c||net/dns_resolver/dns_key.c",
            "security/keys/internal.h||security/keys/internal.h",
            "security/keys/keyring.c||security/keys/keyring.c",
            "security/keys/request_key.c||security/keys/request_key.c",
            "security/keys/request_key_auth.c||security/keys/request_key_auth.c",
            "security/keys/user_defined.c||security/keys/user_defined.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/asymmetric_keys/asymmetric_type.c||crypto/asymmetric_keys/asymmetric_type.c": [
          "File: crypto/asymmetric_keys/asymmetric_type.c -> crypto/asymmetric_keys/asymmetric_type.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "63: {",
          "64:  const struct asymmetric_key_subtype *subtype = asymmetric_key_subtype(key);",
          "65:  const char *spec = description;",
          "66:  const char *id;",
          "67:  ptrdiff_t speclen;",
          "",
          "[Removed Lines]",
          "62: static int asymmetric_key_match(const struct key *key, const void *description)",
          "",
          "[Added Lines]",
          "62: static int asymmetric_key_match(const struct key *key,",
          "63:     const struct key_match_data *match_data)",
          "66:  const char *description = match_data->raw_data;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "93:  return 0;",
          "94: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "110: static int asymmetric_key_match_preparse(struct key_match_data *match_data)",
          "111: {",
          "112:  match_data->lookup_type = KEYRING_SEARCH_LOOKUP_ITERATE;",
          "113:  return 0;",
          "114: }",
          "119: static void asymmetric_key_match_free(struct key_match_data *match_data)",
          "120: {",
          "121: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "196:  .preparse = asymmetric_key_preparse,",
          "197:  .free_preparse = asymmetric_key_free_preparse,",
          "198:  .instantiate = generic_key_instantiate,",
          "199:  .match  = asymmetric_key_match,",
          "200:  .destroy = asymmetric_key_destroy,",
          "201:  .describe = asymmetric_key_describe,",
          "202:  .def_lookup_type = KEYRING_SEARCH_LOOKUP_ITERATE,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "226:  .match_preparse = asymmetric_key_match_preparse,",
          "228:  .match_free = asymmetric_key_match_free,",
          "",
          "---------------"
        ],
        "include/keys/user-type.h||include/keys/user-type.h": [
          "File: include/keys/user-type.h -> include/keys/user-type.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "36: extern struct key_type key_type_logon;",
          "38: struct key_preparsed_payload;",
          "40: extern int user_preparse(struct key_preparsed_payload *prep);",
          "41: extern void user_free_preparse(struct key_preparsed_payload *prep);",
          "42: extern int user_update(struct key *key, struct key_preparsed_payload *prep);",
          "44: extern void user_revoke(struct key *key);",
          "45: extern void user_destroy(struct key *key);",
          "46: extern void user_describe(const struct key *user, struct seq_file *m);",
          "",
          "[Removed Lines]",
          "43: extern int user_match(const struct key *key, const void *criterion);",
          "",
          "[Added Lines]",
          "39: struct key_match_data;",
          "44: extern int user_match(const struct key *key,",
          "45:         const struct key_match_data *match_data);",
          "",
          "---------------"
        ],
        "include/linux/key-type.h||include/linux/key-type.h": [
          "File: include/linux/key-type.h -> include/linux/key-type.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "52: typedef int (*request_key_actor_t)(struct key_construction *key,",
          "53:        const char *op, void *aux);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58: struct key_match_data {",
          "61:  int (*cmp)(const struct key *key,",
          "62:      const struct key_match_data *match_data);",
          "69: };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "97:  int (*update)(struct key *key, struct key_preparsed_payload *prep);",
          "",
          "[Removed Lines]",
          "100:  int (*match)(const struct key *key, const void *desc);",
          "",
          "[Added Lines]",
          "117:  int (*match_preparse)(struct key_match_data *match_data);",
          "120:  int (*match)(const struct key *key,",
          "121:        const struct key_match_data *match_data);",
          "125:  void (*match_free)(struct key_match_data *match_data);",
          "",
          "---------------"
        ],
        "net/dns_resolver/dns_key.c||net/dns_resolver/dns_key.c": [
          "File: net/dns_resolver/dns_key.c -> net/dns_resolver/dns_key.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "179: static int",
          "181: {",
          "182:  int slen, dlen, ret = 0;",
          "185:  kenter(\"%s,%s\", src, dsp);",
          "",
          "[Removed Lines]",
          "180: dns_resolver_match(const struct key *key, const void *description)",
          "183:  const char *src = key->description, *dsp = description;",
          "",
          "[Added Lines]",
          "180: dns_resolver_match(const struct key *key,",
          "181:      const struct key_match_data *match_data)",
          "184:  const char *src = key->description, *dsp = match_data->raw_data;",
          "",
          "---------------"
        ],
        "security/keys/internal.h||security/keys/internal.h": [
          "File: security/keys/internal.h -> security/keys/internal.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "107:     int (*func)(const struct key *key, void *data),",
          "108:     void *data);",
          "112: struct keyring_search_context {",
          "113:  struct keyring_index_key index_key;",
          "114:  const struct cred *cred;",
          "117:  unsigned  flags;",
          "",
          "[Removed Lines]",
          "110: typedef int (*key_match_func_t)(const struct key *, const void *);",
          "115:  key_match_func_t match;",
          "116:  const void  *match_data;",
          "",
          "[Added Lines]",
          "113:  struct key_match_data match_data;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "152:      struct key *dest_keyring,",
          "153:      unsigned long flags);",
          "156: extern key_ref_t lookup_user_key(key_serial_t id, unsigned long flags,",
          "157:      key_perm_t perm);",
          "158: #define KEY_LOOKUP_CREATE 0x01",
          "",
          "[Removed Lines]",
          "155: extern int lookup_user_key_possessed(const struct key *key, const void *target);",
          "",
          "[Added Lines]",
          "152: extern int lookup_user_key_possessed(const struct key *key,",
          "153:          const struct key_match_data *match_data);",
          "",
          "---------------"
        ],
        "security/keys/keyring.c||security/keys/keyring.c": [
          "File: security/keys/keyring.c -> security/keys/keyring.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "545:  }",
          "549:   kleave(\" = 0 [!match]\");",
          "550:   return 0;",
          "551:  }",
          "",
          "[Removed Lines]",
          "548:  if (!ctx->match(key, ctx->match_data)) {",
          "",
          "[Added Lines]",
          "548:  if (!ctx->match_data.cmp(key, &ctx->match_data)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "586: static int search_keyring(struct key *keyring, struct keyring_search_context *ctx)",
          "587: {",
          "590:   const void *object;",
          "592:   object = assoc_array_find(&keyring->keys,",
          "",
          "[Removed Lines]",
          "588:  if ((ctx->flags & KEYRING_SEARCH_LOOKUP_TYPE) ==",
          "589:      KEYRING_SEARCH_LOOKUP_DIRECT) {",
          "",
          "[Added Lines]",
          "588:  if (ctx->match_data.lookup_type == KEYRING_SEARCH_LOOKUP_DIRECT) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "631:      keyring_compare_object(keyring, &ctx->index_key)) {",
          "632:   ctx->skipped_ret = 2;",
          "633:   ctx->flags |= KEYRING_SEARCH_DO_STATE_CHECK;",
          "",
          "[Removed Lines]",
          "630:  if (ctx->flags & KEYRING_SEARCH_LOOKUP_ITERATE ||",
          "",
          "[Added Lines]",
          "629:  if (ctx->match_data.lookup_type == KEYRING_SEARCH_LOOKUP_ITERATE ||",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "885:   .index_key.type  = type,",
          "886:   .index_key.description = description,",
          "887:   .cred   = current_cred(),",
          "892:  };",
          "895:   return ERR_PTR(-ENOKEY);",
          "898: }",
          "899: EXPORT_SYMBOL(keyring_search);",
          "",
          "[Removed Lines]",
          "888:   .match   = type->match,",
          "889:   .match_data  = description,",
          "890:   .flags   = (type->def_lookup_type |",
          "891:         KEYRING_SEARCH_DO_STATE_CHECK),",
          "894:  if (!ctx.match)",
          "897:  return keyring_search_aux(keyring, &ctx);",
          "",
          "[Added Lines]",
          "887:   .match_data.cmp  = type->match,",
          "888:   .match_data.raw_data = description,",
          "889:   .match_data.lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT,",
          "890:   .flags   = KEYRING_SEARCH_DO_STATE_CHECK,",
          "892:  key_ref_t key;",
          "893:  int ret;",
          "895:  if (!ctx.match_data.cmp)",
          "898:  if (type->match_preparse) {",
          "899:   ret = type->match_preparse(&ctx.match_data);",
          "900:   if (ret < 0)",
          "901:    return ERR_PTR(ret);",
          "902:  }",
          "904:  key = keyring_search_aux(keyring, &ctx);",
          "906:  if (type->match_free)",
          "907:   type->match_free(&ctx.match_data);",
          "908:  return key;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1018:   return 0;",
          "1020:  ctx->result = ERR_PTR(-EDEADLK);",
          "",
          "[Removed Lines]",
          "1017:  if (key != ctx->match_data)",
          "",
          "[Added Lines]",
          "1028:  if (key != ctx->match_data.raw_data)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1031: static int keyring_detect_cycle(struct key *A, struct key *B)",
          "1032: {",
          "1033:  struct keyring_search_context ctx = {",
          "1042:  };",
          "1044:  rcu_read_lock();",
          "",
          "[Removed Lines]",
          "1034:   .index_key = A->index_key,",
          "1035:   .match_data = A,",
          "1036:   .iterator = keyring_detect_cycle_iterator,",
          "1037:   .flags  = (KEYRING_SEARCH_LOOKUP_DIRECT |",
          "1038:        KEYRING_SEARCH_NO_STATE_CHECK |",
          "1039:        KEYRING_SEARCH_NO_UPDATE_TIME |",
          "1040:        KEYRING_SEARCH_NO_CHECK_PERM |",
          "1041:        KEYRING_SEARCH_DETECT_TOO_DEEP),",
          "",
          "[Added Lines]",
          "1045:   .index_key  = A->index_key,",
          "1046:   .match_data.raw_data = A,",
          "1047:   .match_data.lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT,",
          "1048:   .iterator  = keyring_detect_cycle_iterator,",
          "1049:   .flags   = (KEYRING_SEARCH_NO_STATE_CHECK |",
          "1050:         KEYRING_SEARCH_NO_UPDATE_TIME |",
          "1051:         KEYRING_SEARCH_NO_CHECK_PERM |",
          "1052:         KEYRING_SEARCH_DETECT_TOO_DEEP),",
          "",
          "---------------"
        ],
        "security/keys/proc.c||security/keys/proc.c": [
          "File: security/keys/proc.c -> security/keys/proc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "194:   .index_key.type  = key->type,",
          "195:   .index_key.description = key->description,",
          "196:   .cred   = current_cred(),",
          "201:  };",
          "203:  key_ref = make_key_ref(key, 0);",
          "",
          "[Removed Lines]",
          "197:   .match   = lookup_user_key_possessed,",
          "198:   .match_data  = key,",
          "199:   .flags   = (KEYRING_SEARCH_NO_STATE_CHECK |",
          "200:         KEYRING_SEARCH_LOOKUP_DIRECT),",
          "",
          "[Added Lines]",
          "197:   .match_data.cmp  = lookup_user_key_possessed,",
          "198:   .match_data.raw_data = key,",
          "199:   .match_data.lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT,",
          "200:   .flags   = KEYRING_SEARCH_NO_STATE_CHECK,",
          "",
          "---------------"
        ],
        "security/keys/process_keys.c||security/keys/process_keys.c": [
          "File: security/keys/process_keys.c -> security/keys/process_keys.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "493: {",
          "495: }",
          "",
          "[Removed Lines]",
          "492: int lookup_user_key_possessed(const struct key *key, const void *target)",
          "494:  return key == target;",
          "",
          "[Added Lines]",
          "492: int lookup_user_key_possessed(const struct key *key,",
          "493:          const struct key_match_data *match_data)",
          "495:  return key == match_data->raw_data;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "516:      key_perm_t perm)",
          "517: {",
          "518:  struct keyring_search_context ctx = {",
          "522:  };",
          "523:  struct request_key_auth *rka;",
          "524:  struct key *key;",
          "",
          "[Removed Lines]",
          "519:   .match = lookup_user_key_possessed,",
          "520:   .flags = (KEYRING_SEARCH_NO_STATE_CHECK |",
          "521:       KEYRING_SEARCH_LOOKUP_DIRECT),",
          "",
          "[Added Lines]",
          "520:   .match_data.cmp  = lookup_user_key_possessed,",
          "521:   .match_data.lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT,",
          "522:   .flags   = KEYRING_SEARCH_NO_STATE_CHECK,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "673:   ctx.index_key.type  = key->type;",
          "674:   ctx.index_key.description = key->description;",
          "675:   ctx.index_key.desc_len  = strlen(key->description);",
          "677:   kdebug(\"check possessed\");",
          "678:   skey_ref = search_process_keyrings(&ctx);",
          "679:   kdebug(\"possessed=%p\", skey_ref);",
          "",
          "[Removed Lines]",
          "676:   ctx.match_data   = key;",
          "",
          "[Added Lines]",
          "677:   ctx.match_data.raw_data  = key;",
          "",
          "---------------"
        ],
        "security/keys/request_key.c||security/keys/request_key.c": [
          "File: security/keys/request_key.c -> security/keys/request_key.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "531:   .index_key.type  = type,",
          "532:   .index_key.description = description,",
          "533:   .cred   = current_cred(),",
          "537:  };",
          "538:  struct key *key;",
          "539:  key_ref_t key_ref;",
          "",
          "[Removed Lines]",
          "534:   .match   = type->match,",
          "535:   .match_data  = description,",
          "536:   .flags   = KEYRING_SEARCH_LOOKUP_DIRECT,",
          "",
          "[Added Lines]",
          "534:   .match_data.cmp  = type->match,",
          "535:   .match_data.raw_data = description,",
          "536:   .match_data.lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "543:         ctx.index_key.type->name, ctx.index_key.description,",
          "544:         callout_info, callout_len, aux, dest_keyring, flags);",
          "547:  key_ref = search_process_keyrings(&ctx);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "546:  if (type->match_preparse) {",
          "547:   ret = type->match_preparse(&ctx.match_data);",
          "548:   if (ret < 0) {",
          "549:    key = ERR_PTR(ret);",
          "550:    goto error;",
          "551:   }",
          "552:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "555:    if (ret < 0) {",
          "556:     key_put(key);",
          "557:     key = ERR_PTR(ret);",
          "559:    }",
          "560:   }",
          "561:  } else if (PTR_ERR(key_ref) != -EAGAIN) {",
          "",
          "[Removed Lines]",
          "558:     goto error;",
          "",
          "[Added Lines]",
          "566:     goto error_free;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "566:   key = ERR_PTR(-ENOKEY);",
          "567:   if (!callout_info)",
          "570:   key = construct_key_and_link(&ctx, callout_info, callout_len,",
          "571:           aux, dest_keyring, flags);",
          "572:  }",
          "574: error:",
          "575:  kleave(\" = %p\", key);",
          "576:  return key;",
          "",
          "[Removed Lines]",
          "568:    goto error;",
          "",
          "[Added Lines]",
          "576:    goto error_free;",
          "582: error_free:",
          "583:  if (type->match_free)",
          "584:   type->match_free(&ctx.match_data);",
          "",
          "---------------"
        ],
        "security/keys/request_key_auth.c||security/keys/request_key_auth.c": [
          "File: security/keys/request_key_auth.c -> security/keys/request_key_auth.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "246:   .index_key.type  = &key_type_request_key_auth,",
          "247:   .index_key.description = description,",
          "248:   .cred   = current_cred(),",
          "252:  };",
          "253:  struct key *authkey;",
          "254:  key_ref_t authkey_ref;",
          "",
          "[Removed Lines]",
          "249:   .match   = user_match,",
          "250:   .match_data  = description,",
          "251:   .flags   = KEYRING_SEARCH_LOOKUP_DIRECT,",
          "",
          "[Added Lines]",
          "249:   .match_data.cmp  = user_match,",
          "250:   .match_data.raw_data = description,",
          "251:   .match_data.lookup_type = KEYRING_SEARCH_LOOKUP_DIRECT,",
          "",
          "---------------"
        ],
        "security/keys/user_defined.c||security/keys/user_defined.c": [
          "File: security/keys/user_defined.c -> security/keys/user_defined.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "145: {",
          "147: }",
          "149: EXPORT_SYMBOL_GPL(user_match);",
          "",
          "[Removed Lines]",
          "144: int user_match(const struct key *key, const void *description)",
          "146:  return strcmp(key->description, description) == 0;",
          "",
          "[Added Lines]",
          "144: int user_match(const struct key *key, const struct key_match_data *match_data)",
          "146:  return strcmp(key->description, match_data->raw_data) == 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d0a059cac6523b23ad7d743dec8783705aab1668",
      "candidate_info": {
        "commit_hash": "d0a059cac6523b23ad7d743dec8783705aab1668",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/d0a059cac6523b23ad7d743dec8783705aab1668",
        "files": [
          "security/keys/request_key_auth.c"
        ],
        "message": "KEYS: Search for auth-key by name rather than target key ID\n\nSearch for auth-key by name rather than by target key ID as, in a future\npatch, we'll by searching directly by index key in preference to iteration\nover all keys.\n\nSigned-off-by: David Howells <dhowells@redhat.com>",
        "before_after_code_files": [
          "security/keys/request_key_auth.c||security/keys/request_key_auth.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "security/keys/request_key_auth.c||security/keys/request_key_auth.c"
          ],
          "candidate": [
            "security/keys/request_key_auth.c||security/keys/request_key_auth.c"
          ]
        }
      },
      "candidate_diff": {
        "security/keys/request_key_auth.c||security/keys/request_key_auth.c": [
          "File: security/keys/request_key_auth.c -> security/keys/request_key_auth.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: #include <linux/slab.h>",
          "19: #include <asm/uaccess.h>",
          "20: #include \"internal.h\"",
          "22: static int request_key_auth_instantiate(struct key *,",
          "23:      struct key_preparsed_payload *);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: #include <keys/user-type.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "221:  return ERR_PTR(ret);",
          "222: }",
          "240: struct key *key_get_instantiation_authkey(key_serial_t target_id)",
          "241: {",
          "242:  struct keyring_search_context ctx = {",
          "243:   .index_key.type  = &key_type_request_key_auth,",
          "244:   .cred   = current_cred(),",
          "247:   .flags   = KEYRING_SEARCH_LOOKUP_DIRECT,",
          "248:  };",
          "249:  struct key *authkey;",
          "250:  key_ref_t authkey_ref;",
          "252:  authkey_ref = search_process_keyrings(&ctx);",
          "254:  if (IS_ERR(authkey_ref)) {",
          "",
          "[Removed Lines]",
          "227: static int key_get_instantiation_authkey_match(const struct key *key,",
          "228:             const void *_id)",
          "229: {",
          "230:  struct request_key_auth *rka = key->payload.data;",
          "231:  key_serial_t id = (key_serial_t)(unsigned long) _id;",
          "233:  return rka->target_key->serial == id;",
          "234: }",
          "245:   .match   = key_get_instantiation_authkey_match,",
          "246:   .match_data  = (void *)(unsigned long)target_id,",
          "",
          "[Added Lines]",
          "231:  char description[16];",
          "234:   .index_key.description = description,",
          "236:   .match   = user_match,",
          "237:   .match_data  = description,",
          "243:  sprintf(description, \"%x\", target_id);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f1b731dbc2530cab93fcfc5fcb18c9f3a100feeb",
      "candidate_info": {
        "commit_hash": "f1b731dbc2530cab93fcfc5fcb18c9f3a100feeb",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/f1b731dbc2530cab93fcfc5fcb18c9f3a100feeb",
        "files": [
          "crypto/asymmetric_keys/asymmetric_keys.h",
          "crypto/asymmetric_keys/asymmetric_type.c",
          "crypto/asymmetric_keys/pkcs7_trust.c",
          "crypto/asymmetric_keys/x509_public_key.c",
          "include/crypto/public_key.h",
          "include/keys/asymmetric-type.h"
        ],
        "message": "KEYS: Restore partial ID matching functionality for asymmetric keys\n\nBring back the functionality whereby an asymmetric key can be matched with a\npartial match on one of its IDs.\n\nWhilst we're at it, allow for the possibility of having an increased number of\nIDs.\n\nReported-by: Dmitry Kasatkin <d.kasatkin@samsung.com>\nSigned-off-by: Dmitry Kasatkin <d.kasatkin@samsung.com>\nSigned-off-by: David Howells <dhowells@redhat.com>",
        "before_after_code_files": [
          "crypto/asymmetric_keys/asymmetric_keys.h||crypto/asymmetric_keys/asymmetric_keys.h",
          "crypto/asymmetric_keys/asymmetric_type.c||crypto/asymmetric_keys/asymmetric_type.c",
          "crypto/asymmetric_keys/pkcs7_trust.c||crypto/asymmetric_keys/pkcs7_trust.c",
          "crypto/asymmetric_keys/x509_public_key.c||crypto/asymmetric_keys/x509_public_key.c",
          "include/crypto/public_key.h||include/crypto/public_key.h",
          "include/keys/asymmetric-type.h||include/keys/asymmetric-type.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "crypto/asymmetric_keys/asymmetric_type.c||crypto/asymmetric_keys/asymmetric_type.c"
          ],
          "candidate": [
            "crypto/asymmetric_keys/asymmetric_type.c||crypto/asymmetric_keys/asymmetric_type.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/asymmetric_keys/asymmetric_keys.h||crypto/asymmetric_keys/asymmetric_keys.h": [
          "File: crypto/asymmetric_keys/asymmetric_keys.h -> crypto/asymmetric_keys/asymmetric_keys.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: extern struct asymmetric_key_id *asymmetric_key_hex_to_key_id(const char *id);",
          "17: static inline",
          "",
          "[Removed Lines]",
          "12: extern bool asymmetric_match_key_ids(const struct asymmetric_key_ids *kids,",
          "13:          const struct asymmetric_key_id *match_id);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "crypto/asymmetric_keys/asymmetric_type.c||crypto/asymmetric_keys/asymmetric_type.c": [
          "File: crypto/asymmetric_keys/asymmetric_type.c -> crypto/asymmetric_keys/asymmetric_type.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "65: }",
          "66: EXPORT_SYMBOL_GPL(asymmetric_key_id_same);",
          "75: {",
          "76:  if (!kids || !match_id)",
          "77:   return false;",
          "82:  return false;",
          "83: }",
          "",
          "[Removed Lines]",
          "73: bool asymmetric_match_key_ids(const struct asymmetric_key_ids *kids,",
          "74:          const struct asymmetric_key_id *match_id)",
          "78:  if (asymmetric_key_id_same(kids->id[0], match_id))",
          "79:   return true;",
          "80:  if (asymmetric_key_id_same(kids->id[1], match_id))",
          "81:   return true;",
          "84: EXPORT_SYMBOL_GPL(asymmetric_match_key_ids);",
          "",
          "[Added Lines]",
          "73: bool asymmetric_key_id_partial(const struct asymmetric_key_id *kid1,",
          "74:           const struct asymmetric_key_id *kid2)",
          "75: {",
          "76:  if (!kid1 || !kid2)",
          "77:   return false;",
          "78:  if (kid1->len < kid2->len)",
          "79:   return false;",
          "80:  return memcmp(kid1->data + (kid1->len - kid2->len),",
          "81:         kid2->data, kid2->len) == 0;",
          "82: }",
          "83: EXPORT_SYMBOL_GPL(asymmetric_key_id_partial);",
          "91: static bool asymmetric_match_key_ids(",
          "92:  const struct asymmetric_key_ids *kids,",
          "93:  const struct asymmetric_key_id *match_id,",
          "94:  bool (*match)(const struct asymmetric_key_id *kid1,",
          "95:         const struct asymmetric_key_id *kid2))",
          "97:  int i;",
          "101:  for (i = 0; i < ARRAY_SIZE(kids->id); i++)",
          "102:   if (match(kids->id[i], match_id))",
          "103:    return true;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "121:  const struct asymmetric_key_ids *kids = asymmetric_key_ids(key);",
          "122:  const struct asymmetric_key_id *match_id = match_data->preparsed;",
          "125: }",
          "",
          "[Removed Lines]",
          "124:  return asymmetric_match_key_ids(kids, match_id);",
          "",
          "[Added Lines]",
          "145:  return asymmetric_match_key_ids(kids, match_id,",
          "146:      asymmetric_key_id_same);",
          "147: }",
          "152: static bool asymmetric_key_cmp_partial(const struct key *key,",
          "153:            const struct key_match_data *match_data)",
          "154: {",
          "155:  const struct asymmetric_key_ids *kids = asymmetric_key_ids(key);",
          "156:  const struct asymmetric_key_id *match_id = match_data->preparsed;",
          "158:  return asymmetric_match_key_ids(kids, match_id,",
          "159:      asymmetric_key_id_partial);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "141:  struct asymmetric_key_id *match_id;",
          "142:  const char *spec = match_data->raw_data;",
          "143:  const char *id;",
          "145:  if (!spec || !*spec)",
          "146:   return -EINVAL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "180:  bool (*cmp)(const struct key *, const struct key_match_data *) =",
          "181:   asymmetric_key_cmp;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "148:      spec[1] == 'd' &&",
          "149:      spec[2] == ':') {",
          "150:   id = spec + 3;",
          "151:  } else {",
          "152:   goto default_match;",
          "153:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "189:   cmp = asymmetric_key_cmp_partial;",
          "190:  } else if (spec[0] == 'e' &&",
          "191:      spec[1] == 'x' &&",
          "192:      spec[2] == ':') {",
          "193:   id = spec + 3;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "157:   return PTR_ERR(match_id);",
          "159:  match_data->preparsed = match_id;",
          "161:  match_data->lookup_type = KEYRING_SEARCH_LOOKUP_ITERATE;",
          "162:  return 0;",
          "",
          "[Removed Lines]",
          "160:  match_data->cmp = asymmetric_key_cmp;",
          "",
          "[Added Lines]",
          "203:  match_data->cmp = cmp;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "251: {",
          "252:  struct asymmetric_key_subtype *subtype = prep->type_data[0];",
          "253:  struct asymmetric_key_ids *kids = prep->type_data[1];",
          "255:  pr_devel(\"==>%s()\\n\", __func__);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "297:  int i;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "259:   module_put(subtype->owner);",
          "260:  }",
          "261:  if (kids) {",
          "264:   kfree(kids);",
          "265:  }",
          "266:  kfree(prep->description);",
          "",
          "[Removed Lines]",
          "262:   kfree(kids->id[0]);",
          "263:   kfree(kids->id[1]);",
          "",
          "[Added Lines]",
          "306:   for (i = 0; i < ARRAY_SIZE(kids->id); i++)",
          "307:    kfree(kids->id[i]);",
          "",
          "---------------"
        ],
        "crypto/asymmetric_keys/pkcs7_trust.c||crypto/asymmetric_keys/pkcs7_trust.c": [
          "File: crypto/asymmetric_keys/pkcs7_trust.c -> crypto/asymmetric_keys/pkcs7_trust.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "58:   if (!IS_ERR(key)) {",
          "",
          "[Removed Lines]",
          "57:   key = x509_request_asymmetric_key(trust_keyring, x509->id);",
          "",
          "[Added Lines]",
          "57:   key = x509_request_asymmetric_key(trust_keyring, x509->id,",
          "58:         false);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "87:  if (last && last->authority) {",
          "89:   if (!IS_ERR(key)) {",
          "90:    x509 = last;",
          "91:    pr_devel(\"sinfo %u: Root cert %u signer is key %x\\n\",",
          "",
          "[Removed Lines]",
          "88:   key = x509_request_asymmetric_key(trust_keyring, last->authority);",
          "",
          "[Added Lines]",
          "89:   key = x509_request_asymmetric_key(trust_keyring, last->authority,",
          "90:         false);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "102:  key = x509_request_asymmetric_key(trust_keyring,",
          "104:  if (!IS_ERR(key)) {",
          "105:   pr_devel(\"sinfo %u: Direct signer is key %x\\n\",",
          "106:     sinfo->index, key_serial(key));",
          "",
          "[Removed Lines]",
          "103:        sinfo->signing_cert_id);",
          "",
          "[Added Lines]",
          "105:        sinfo->signing_cert_id,",
          "106:        false);",
          "",
          "---------------"
        ],
        "crypto/asymmetric_keys/x509_public_key.c||crypto/asymmetric_keys/x509_public_key.c": [
          "File: crypto/asymmetric_keys/x509_public_key.c -> crypto/asymmetric_keys/x509_public_key.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "61: struct key *x509_request_asymmetric_key(struct key *keyring,",
          "63: {",
          "64:  key_ref_t key;",
          "65:  char *id, *p;",
          "",
          "[Removed Lines]",
          "62:      const struct asymmetric_key_id *kid)",
          "",
          "[Added Lines]",
          "63:      const struct asymmetric_key_id *kid,",
          "64:      bool partial)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "69:  if (!id)",
          "70:   return ERR_PTR(-ENOMEM);",
          "75:  p = bin2hex(p, kid->data, kid->len);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "74:  if (partial) {",
          "77:  } else {",
          "80:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "207:  if (!trust_keyring)",
          "208:   return -EOPNOTSUPP;",
          "211:   return -EPERM;",
          "214:  if (!IS_ERR(key))  {",
          "215:   if (!use_builtin_keys",
          "216:       || test_bit(KEY_FLAG_BUILTIN, &key->flags))",
          "",
          "[Removed Lines]",
          "210:  if (ca_keyid && !asymmetric_key_id_same(cert->authority, ca_keyid))",
          "213:  key = x509_request_asymmetric_key(trust_keyring, cert->authority);",
          "",
          "[Added Lines]",
          "217:  if (ca_keyid && !asymmetric_key_id_partial(cert->authority, ca_keyid))",
          "220:  key = x509_request_asymmetric_key(trust_keyring, cert->authority,",
          "221:        false);",
          "",
          "---------------"
        ],
        "include/crypto/public_key.h||include/crypto/public_key.h": [
          "File: include/crypto/public_key.h -> include/crypto/public_key.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "102: struct asymmetric_key_id;",
          "103: extern struct key *x509_request_asymmetric_key(struct key *keyring,",
          "",
          "[Removed Lines]",
          "104:             const struct asymmetric_key_id *kid);",
          "",
          "[Added Lines]",
          "104:             const struct asymmetric_key_id *kid,",
          "105:             bool partial);",
          "",
          "---------------"
        ],
        "include/keys/asymmetric-type.h||include/keys/asymmetric-type.h": [
          "File: include/keys/asymmetric-type.h -> include/keys/asymmetric-type.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "51: extern bool asymmetric_key_id_same(const struct asymmetric_key_id *kid1,",
          "52:        const struct asymmetric_key_id *kid2);",
          "54: extern struct asymmetric_key_id *asymmetric_key_generate_id(const void *val_1,",
          "55:            size_t len_1,",
          "56:            const void *val_2,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "54: extern bool asymmetric_key_id_partial(const struct asymmetric_key_id *kid1,",
          "55:           const struct asymmetric_key_id *kid2);",
          "",
          "---------------"
        ]
      }
    }
  ]
}