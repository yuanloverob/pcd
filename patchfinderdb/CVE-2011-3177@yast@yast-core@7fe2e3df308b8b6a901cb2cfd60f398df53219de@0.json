{
  "cve_id": "CVE-2011-3177",
  "cve_desc": "The YaST2 network created files with world readable permissions which could have allowed local users to read sensitive material out of network configuration files, like passwords for wireless networks.",
  "repo": "yast/yast-core",
  "patch_hash": "7fe2e3df308b8b6a901cb2cfd60f398df53219de",
  "patch_info": {
    "commit_hash": "7fe2e3df308b8b6a901cb2cfd60f398df53219de",
    "repo": "yast/yast-core",
    "commit_url": "https://github.com/yast/yast-core/commit/7fe2e3df308b8b6a901cb2cfd60f398df53219de",
    "files": [
      "VERSION",
      "agent-ini/doc/ag_ini.html",
      "agent-ini/src/IniAgent.cc",
      "agent-ini/src/IniFile.cc",
      "agent-ini/src/IniFile.h",
      "agent-ini/src/IniParser.cc",
      "agent-ini/src/IniParser.h",
      "agent-ini/testsuite/multi/private.err",
      "agent-ini/testsuite/multi/private.in.1",
      "agent-ini/testsuite/multi/private.in.2",
      "agent-ini/testsuite/multi/private.out",
      "agent-ini/testsuite/multi/private.scr",
      "agent-ini/testsuite/multi/private.ycp",
      "agent-system/src/SystemAgent.cc",
      "agent-system/testsuite/tests/string.out",
      "agent-system/testsuite/tests/string.ycp",
      "package/yast2-core.changes"
    ],
    "message": "- ini-agent: added Write(.section_private.SECTION, BOOLEAN) (bnc#713661, CVE-2011-3177) - system agent: added  Write(.target.string, [filename, mode],  content)\n\nsvn merge -r66758:66764 http://svn.opensuse.org/svn/yast/branches/SuSE-Code-11-SP2-Branch/core\n\nsvn path=/trunk/core/; revision=67117",
    "before_after_code_files": [
      "agent-ini/src/IniAgent.cc||agent-ini/src/IniAgent.cc",
      "agent-ini/src/IniFile.cc||agent-ini/src/IniFile.cc",
      "agent-ini/src/IniFile.h||agent-ini/src/IniFile.h",
      "agent-ini/src/IniParser.cc||agent-ini/src/IniParser.cc",
      "agent-ini/src/IniParser.h||agent-ini/src/IniParser.h",
      "agent-ini/testsuite/multi/private.err||agent-ini/testsuite/multi/private.err",
      "agent-ini/testsuite/multi/private.in.1||agent-ini/testsuite/multi/private.in.1",
      "agent-ini/testsuite/multi/private.in.2||agent-ini/testsuite/multi/private.in.2",
      "agent-ini/testsuite/multi/private.scr||agent-ini/testsuite/multi/private.scr",
      "agent-ini/testsuite/multi/private.ycp||agent-ini/testsuite/multi/private.ycp",
      "agent-system/src/SystemAgent.cc||agent-system/src/SystemAgent.cc",
      "agent-system/testsuite/tests/string.ycp||agent-system/testsuite/tests/string.ycp",
      "package/yast2-core.changes||package/yast2-core.changes"
    ]
  },
  "patch_diff": {
    "agent-ini/src/IniAgent.cc||agent-ini/src/IniAgent.cc": [
      "File: agent-ini/src/IniAgent.cc -> agent-ini/src/IniAgent.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "98:     else",
      "99:     {",
      "100:  if (( parser.repeatNames () && value->isList ()) ||",
      "102:      path->component_str(0) == \"all\"",
      "103:      )",
      "104:      {",
      "",
      "[Removed Lines]",
      "101:      (!parser.repeatNames () &&  (value->isString () || value->isInteger())) ||",
      "",
      "[Added Lines]",
      "101:      (!parser.repeatNames () &&  (value->isString () || value->isBoolean() || value->isInteger())) ||",
      "",
      "---------------"
    ],
    "agent-ini/src/IniFile.cc||agent-ini/src/IniFile.cc": [
      "File: agent-ini/src/IniFile.cc -> agent-ini/src/IniFile.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "75:     return YCPNull ();",
      "76: }",
      "78: void IniSection::initValue (const string&key,const string&val,const string&comment,int rb)",
      "79: {",
      "80:     string k = ip->changeCase (key);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "81: static",
      "82: YCPBoolean as_boolean (const YCPValue& v, const char * context)",
      "83: {",
      "84:     if (v->isBoolean ())",
      "85:  return v->asBoolean ();",
      "86:     ycp2error (\"Expected a boolean for %s, got %s %s\",",
      "87:         context, v->valuetype_str(), v->toString().c_str());",
      "88:     return YCPNull ();",
      "89: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "486:       return setSectionProp (p, v, 0, 1);",
      "487:     if (s == \"st\" || s == \"section_type\" || s == \"sectiontype\")",
      "488:       return setSectionProp (p, v, rewrite? 1:2, 1);",
      "489:     return -1;",
      "490: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "502:     if (s == \"section_private\")",
      "503:       return setSectionProp (p, v, 3, 1);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "591:    return -1;",
      "592:       s.setRewriteBy (i->value());",
      "593:   }",
      "595:       YCPInteger i = as_integer (prop, \"section_type\");",
      "596:       if (i.isNull())",
      "597:    return -1;",
      "598:       s.setReadBy (i->value());",
      "599:   }",
      "601:   if (xi != xe)",
      "602:   {",
      "",
      "[Removed Lines]",
      "594:   else {",
      "",
      "[Added Lines]",
      "610:   else if (what == 2) {",
      "616:   else if (what == 3) {",
      "617:       YCPBoolean b = as_boolean (prop, \"section_private\");",
      "618:       if (b.isNull())",
      "619:    return -1;",
      "620:       s.setPrivate (b->value());",
      "621:   }",
      "",
      "---------------"
    ],
    "agent-ini/src/IniFile.h||agent-ini/src/IniFile.h": [
      "File: agent-ini/src/IniFile.h -> agent-ini/src/IniFile.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "242:     string end_comment;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "249:     bool is_private;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "435:     IniSection (const IniParser *p)",
      "436:  : IniBase (-1),",
      "437:    ip (p),",
      "439:    container (), ivalues (), isections ()",
      "440:      {}",
      "",
      "[Removed Lines]",
      "438:    end_comment (), rewrite_by(-1),",
      "",
      "[Added Lines]",
      "445:    end_comment (), is_private(false), rewrite_by(-1),",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "446:     IniSection (const IniSection &s) :",
      "447:  IniBase (s),",
      "448:    ip (s.ip),",
      "450:    container (s.container)",
      "451:  { reindex (); }",
      "",
      "[Removed Lines]",
      "449:    end_comment (s.end_comment), rewrite_by (s.rewrite_by),",
      "",
      "[Added Lines]",
      "456:           end_comment (s.end_comment), is_private(s.is_private), rewrite_by (s.rewrite_by),",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "458:      }",
      "459:      IniBase::operator = (s);",
      "460:      ip = s.ip;",
      "462:      container = s.container;",
      "464:      reindex ();",
      "",
      "[Removed Lines]",
      "461:      end_comment = s.end_comment; rewrite_by = s.rewrite_by;",
      "",
      "[Added Lines]",
      "468:      end_comment = s.end_comment;",
      "469:             is_private = s.is_private;",
      "470:             rewrite_by = s.rewrite_by;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "474:     IniSection (const IniParser *p, string n)",
      "475:  : IniBase (n),",
      "476:    ip (p),",
      "478:    container(), ivalues (), isections ()",
      "479:      {}",
      "",
      "[Removed Lines]",
      "477:    end_comment (), rewrite_by(0),",
      "",
      "[Added Lines]",
      "486:    end_comment (), is_private(false), rewrite_by(0),",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "512:     int getSubSectionRewriteBy (const char*name);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "523:     void setPrivate(bool p) { is_private = p; }",
      "524:     bool isPrivate() const { return is_private; }",
      "",
      "---------------"
    ],
    "agent-ini/src/IniParser.cc||agent-ini/src/IniParser.cc": [
      "File: agent-ini/src/IniParser.cc -> agent-ini/src/IniParser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "965:        continue;",
      "966:    }",
      "967:    s.initReadBy ();",
      "981:       }",
      "982:   else",
      "983:       {",
      "",
      "[Removed Lines]",
      "969:    Pathname pn (filename);",
      "970:    PathInfo::assert_dir (pn.dirname ());",
      "971:    ofstream of(filename.c_str());",
      "972:    if (!of.good())",
      "973:    {",
      "974:        bugs++;",
      "975:        y2error (\"Can not open file %s for write\", filename.c_str());",
      "976:        continue;",
      "977:    }",
      "978:    write_helper (s, of, 0);",
      "979:    s.clean();",
      "980:    of.close ();",
      "",
      "[Added Lines]",
      "968:                         bugs += write_file(filename, s);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "997:     }",
      "998:     else",
      "999:     {",
      "1013:  timestamp = getTimeStamp ();",
      "1014:     }",
      "1016:     return bugs ? -1 : 0;",
      "1017: }",
      "1018: int IniParser::write_helper(IniSection&ini, ofstream&of, int depth)",
      "1019: {",
      "1020:     char * out_buffer;",
      "",
      "[Removed Lines]",
      "1001:  Pathname pn (file);",
      "1002:  PathInfo::assert_dir (pn.dirname ());",
      "1003:  ofstream of(file.c_str());",
      "1004:  if (!of.good())",
      "1005:  {",
      "1006:      y2error (\"Can not open file %s for write\", file.c_str());",
      "1007:      return -1;",
      "1008:  }",
      "1010:  write_helper (inifile, of, 0);",
      "1012:  of.close();",
      "1015:     inifile.clean ();",
      "",
      "[Added Lines]",
      "988:         bugs += write_file(file, inifile);",
      "995: int IniParser::write_file(const string & filename, IniSection & section)",
      "996: {",
      "998:     Pathname pn(filename);",
      "999:     PathInfo::assert_dir (pn.dirname ());",
      "1001:     mode_t file_umask = section.isPrivate()? 0077: 0022;",
      "1002:     mode_t orig_umask = umask(file_umask);",
      "1004:     unlink(filename.c_str());",
      "1006:     ofstream of(filename.c_str());",
      "1007:     if (!of.good()) {",
      "1008:         y2error (\"Can not open file %s for write\", filename.c_str());",
      "1009:         return -1;",
      "1010:     }",
      "1012:     write_helper (section, of, 0);",
      "1014:     of.close();",
      "1015:     umask(orig_umask);",
      "1016:     return 0;",
      "1017: }",
      "",
      "---------------"
    ],
    "agent-ini/src/IniParser.h||agent-ini/src/IniParser.h": [
      "File: agent-ini/src/IniParser.h -> agent-ini/src/IniParser.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "371:     int parse_helper(IniSection&ini);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "375:     int write_file(const string & filename, IniSection & section);",
      "",
      "---------------"
    ],
    "agent-ini/testsuite/multi/private.err||agent-ini/testsuite/multi/private.err": [
      "File: agent-ini/testsuite/multi/private.err -> agent-ini/testsuite/multi/private.err",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: [agent-ini] IniParser.cc(parse):XXX Rewriting multi/private.in.1.test to 1",
      "2: [agent-ini] IniParser.cc(parse):XXX Rewriting multi/private.in.2.test to 2",
      "3: [agent-ini] IniFile.cc(setMyValue):XXX Adding value .v.\"1\".\"Totalise\".\"Password\" = \"Secret password\"",
      "4: [agent-ini] IniFile.cc(setMyValue):XXX Adding value .v.\"2\".\"arcor\".\"Password\" = \"Public password\"",
      "5: [agent-ini] IniParser.cc(parse):XXX Rewriting multi/private.in.1.test to 1",
      "6: [agent-ini] IniParser.cc(parse):XXX Rewriting multi/private.in.2.test to 2",
      "7: [agent-ini] IniParser.cc(getFileName):XXX Rewriting 1 to multi/private.in.1.test",
      "8: [agent-ini] IniParser.cc(getFileName):XXX Rewriting 2 to multi/private.in.2.test",
      "9: [YCP] multi/private.ycp:XXX secret file mode: $[\"exit\":0, \"stderr\":\"\", \"stdout\":\"600\\n\"]",
      "10: [YCP] multi/private.ycp:XXX public file mode: $[\"exit\":0, \"stderr\":\"\", \"stdout\":\"644\\n\"]",
      "11: [agent-ini] IniParser.cc(write):XXX File multi/private.in.*.test did not change. Not saving.",
      "",
      "---------------"
    ],
    "agent-ini/testsuite/multi/private.in.1||agent-ini/testsuite/multi/private.in.1": [
      "File: agent-ini/testsuite/multi/private.in.1 -> agent-ini/testsuite/multi/private.in.1",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: [Dialer Totalise]",
      "2: Compuserve = 0",
      "3: Provider = Totalise",
      "4: Phone = 08453001470",
      "5: [End]",
      "7: [Dialer force9]",
      "8: Provider = Force9",
      "9: Phone = 08451424000",
      "10: [End]",
      "",
      "---------------"
    ],
    "agent-ini/testsuite/multi/private.in.2||agent-ini/testsuite/multi/private.in.2": [
      "File: agent-ini/testsuite/multi/private.in.2 -> agent-ini/testsuite/multi/private.in.2",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: [Dialer arcor]",
      "2: Compuserve = 0",
      "3: Provider = Arcor",
      "4: [End]",
      "6: [Dialer mobilcom]",
      "7: Compuserve = 0",
      "8: Provider = Mobilcom",
      "9: Phone = 0101901929",
      "10: [End]",
      "",
      "---------------"
    ],
    "agent-ini/testsuite/multi/private.scr||agent-ini/testsuite/multi/private.scr": [
      "File: agent-ini/testsuite/multi/private.scr -> agent-ini/testsuite/multi/private.scr",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: .",
      "3: `ag_ini(",
      "4:   `IniAgent( [ \"multi/private.in.*.test\" ],",
      "5:     $[",
      "6:       \"rewrite\" : [",
      "7:  [ \"multi/private\\.in\\.(.)\\.test$\", \"multi/private.in.%s.test\"],",
      "8:       ],",
      "9:       \"subindent\" : \"  \",",
      "10:       \"comments\": [ \"^[ \\t]*#.*\", \"^[ \\t]*$\" ],",
      "11:       \"sections\" : [",
      "12:         $[",
      "13:         \"begin\" : [ \"[ \\t]*\\\\[Dialer[ \\t]+(.*[^ \\t])[ \\t]*\\\\][ \\t]*\", \"[Dialer %s]\" ],",
      "14:  \"end\" : [ \"^[ \\t]*\\\\[End\\\\][ \\t]*$\", \"[End]\", ],",
      "15:         ],",
      "16:       ],",
      "17:       \"params\" : [",
      "18:         $[",
      "19:         \"match\" : [ \"^[ \\t]*([^=]*[^ \\t=])[ \\t]*=[ \\t]*(.*[^ \\t]|)[ \\t]*$\" , \"%s = %s\"],",
      "20:       ],",
      "21:     ],",
      "22:     ]",
      "23:   )",
      "24: )",
      "",
      "---------------"
    ],
    "agent-ini/testsuite/multi/private.ycp||agent-ini/testsuite/multi/private.ycp": [
      "File: agent-ini/testsuite/multi/private.ycp -> agent-ini/testsuite/multi/private.ycp",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8: {",
      "9:     SCR::RegisterAgent (.target, `ag_system ());",
      "10:     any out = nil;",
      "12:     SCR::Write (.v.\"1\".\"Totalise\".\"Password\", \"Secret password\");",
      "13:     SCR::Write (.section_private.\"1\", true);",
      "15:     SCR::Write (.v.\"2\".\"arcor\".\"Password\", \"Public password\");",
      "17:     SCR::Write (., nil); //flush",
      "19:     out = SCR::Execute (.target.bash_output, \"stat -c %a multi/private.in.1.test\");",
      "20:     y2milestone(\"secret file mode: %1\", out);",
      "22:     out = SCR::Execute (.target.bash_output, \"stat -c %a multi/private.in.2.test\");",
      "23:     y2milestone(\"public file mode: %1\", out);",
      "25:     return nil;",
      "26: }",
      "",
      "---------------"
    ],
    "agent-system/src/SystemAgent.cc||agent-system/src/SystemAgent.cc": [
      "File: agent-system/src/SystemAgent.cc -> agent-system/src/SystemAgent.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "709:     {",
      "718:  {",
      "719:      ycp2error (\"Bad filename arg for Write (.string ...)\");",
      "720:      return YCPBoolean (false);",
      "721:  }",
      "723:  if (arg.isNull() || !arg->isString())",
      "724:  {",
      "725:      ycp2error (\"Bad string value for Write (.string ...)\");",
      "726:      return YCPBoolean (false);",
      "727:  }",
      "731:  if (fd >= 0)",
      "732:  {",
      "733:      string cont = arg->asString()->value();",
      "",
      "[Removed Lines]",
      "717:  if (value.isNull() || !value->isString())",
      "729:  string filename = value->asString()->value();",
      "730:  int fd = open(filename.c_str(), O_WRONLY | O_CREAT | O_TRUNC, 0644);",
      "",
      "[Added Lines]",
      "721:  if (value.isNull() || !(value->isString() || value->isList()))",
      "727:  string filename;",
      "728:  mode_t filemode = 0644;",
      "730:  if (value->isString())",
      "731:  {",
      "732:      filename = value->asString()->value();",
      "733:  }",
      "734:  else",
      "735:  {   // value is list",
      "736:      YCPList flist = value->asList();",
      "737:      if ((flist->size() != 2)",
      "738:   || (!flist->value(0)->isString())",
      "739:   || (!flist->value(1)->isInteger()))",
      "740:      {",
      "741:   ycp2error (\"Bad [filename, mode] list in call to Write (%s, [ string filename, integer mode ], ...)\",",
      "742:       cmd.c_str ());",
      "743:   return YCPBoolean (false);",
      "744:      }",
      "745:      filename = flist->value(0)->asString()->value();",
      "746:      filemode = (int)(flist->value(1)->asInteger()->value());",
      "747:  }",
      "755:  int fd = open(filename.c_str(), O_WRONLY | O_CREAT | O_TRUNC, filemode);",
      "",
      "---------------"
    ],
    "agent-system/testsuite/tests/string.ycp||agent-system/testsuite/tests/string.ycp": [
      "File: agent-system/testsuite/tests/string.ycp -> agent-system/testsuite/tests/string.ycp",
      "--- Hunk 1 ---",
      "[Context before]",
      "25:     return SCR::Read (.string, [\"not-here.txt\", \"never mind\"]);",
      "26: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "28: {",
      "29:     map out = nil;",
      "30:     string filename = \"tmp.secret.string\";",
      "32:     SCR::Write (.string, [filename, 0600], \"This is secret\\n\");",
      "34:     out = (map) SCR::Execute (.bash_output, \"stat -c %a \" + filename);",
      "35:     return \"secret file mode: \" + out[\"stdout\"]:\"\";",
      "36: }",
      "",
      "---------------"
    ],
    "package/yast2-core.changes||package/yast2-core.changes": [
      "File: package/yast2-core.changes -> package/yast2-core.changes",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: -------------------------------------------------------------------",
      "2: Fri Dec  2 11:49:56 UTC 2011 - lslezak@suse.cz",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: -------------------------------------------------------------------",
      "2: Mon Nov  7 18:19:27 CET 2011 - mvidner@suse.cz",
      "4: - ini-agent: added Write(.section_private.SECTION, BOOLEAN)",
      "5:   (bnc#713661, CVE-2011-3177)",
      "6: - system agent: added  Write(.target.string, [filename, mode], content)",
      "7: - 2.22.1",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8f5f2aa9fa7e3c98c20a0efcf5c7025c11ced162",
      "candidate_info": {
        "commit_hash": "8f5f2aa9fa7e3c98c20a0efcf5c7025c11ced162",
        "repo": "yast/yast-core",
        "commit_url": "https://github.com/yast/yast-core/commit/8f5f2aa9fa7e3c98c20a0efcf5c7025c11ced162",
        "files": [
          "agent-ini/doc/ag_ini.html",
          "agent-ini/src/IniAgent.cc",
          "agent-ini/src/IniFile.cc",
          "agent-ini/src/IniFile.h",
          "agent-ini/src/IniParser.cc"
        ],
        "message": "Added Write(.section_private.FILE_SECTION, BOOL) (bnc#713661, CVE-2011-3177)\n\nsvn path=/branches/SuSE-Code-11-SP2-Branch/core/; revision=66761",
        "before_after_code_files": [
          "agent-ini/src/IniAgent.cc||agent-ini/src/IniAgent.cc",
          "agent-ini/src/IniFile.cc||agent-ini/src/IniFile.cc",
          "agent-ini/src/IniFile.h||agent-ini/src/IniFile.h",
          "agent-ini/src/IniParser.cc||agent-ini/src/IniParser.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [
            "agent-ini/src/IniAgent.cc||agent-ini/src/IniAgent.cc",
            "agent-ini/src/IniFile.cc||agent-ini/src/IniFile.cc",
            "agent-ini/src/IniFile.h||agent-ini/src/IniFile.h",
            "agent-ini/src/IniParser.cc||agent-ini/src/IniParser.cc"
          ],
          "candidate": [
            "agent-ini/src/IniAgent.cc||agent-ini/src/IniAgent.cc",
            "agent-ini/src/IniFile.cc||agent-ini/src/IniFile.cc",
            "agent-ini/src/IniFile.h||agent-ini/src/IniFile.h",
            "agent-ini/src/IniParser.cc||agent-ini/src/IniParser.cc"
          ]
        }
      },
      "candidate_diff": {
        "agent-ini/src/IniAgent.cc||agent-ini/src/IniAgent.cc": [
          "File: agent-ini/src/IniAgent.cc -> agent-ini/src/IniAgent.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "98:     else",
          "99:     {",
          "100:  if (( parser.repeatNames () && value->isList ()) ||",
          "102:      path->component_str(0) == \"all\"",
          "103:      )",
          "104:      {",
          "",
          "[Removed Lines]",
          "101:      (!parser.repeatNames () &&  (value->isString () || value->isInteger())) ||",
          "",
          "[Added Lines]",
          "101:      (!parser.repeatNames () &&  (value->isString () || value->isBoolean() || value->isInteger())) ||",
          "",
          "---------------"
        ],
        "agent-ini/src/IniFile.cc||agent-ini/src/IniFile.cc": [
          "File: agent-ini/src/IniFile.cc -> agent-ini/src/IniFile.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "75:     return YCPNull ();",
          "76: }",
          "78: void IniSection::initValue (const string&key,const string&val,const string&comment,int rb)",
          "79: {",
          "80:     string k = ip->changeCase (key);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "81: static",
          "82: YCPBoolean as_boolean (const YCPValue& v, const char * context)",
          "83: {",
          "84:     if (v->isBoolean ())",
          "85:  return v->asBoolean ();",
          "86:     ycp2error (\"Expected a boolean for %s, got %s %s\",",
          "87:         context, v->valuetype_str(), v->toString().c_str());",
          "88:     return YCPNull ();",
          "89: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "486:       return setSectionProp (p, v, 0, 1);",
          "487:     if (s == \"st\" || s == \"section_type\" || s == \"sectiontype\")",
          "488:       return setSectionProp (p, v, rewrite? 1:2, 1);",
          "489:     return -1;",
          "490: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "502:     if (s == \"section_private\")",
          "503:       return setSectionProp (p, v, 3, 1);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "591:    return -1;",
          "592:       s.setRewriteBy (i->value());",
          "593:   }",
          "595:       YCPInteger i = as_integer (prop, \"section_type\");",
          "596:       if (i.isNull())",
          "597:    return -1;",
          "598:       s.setReadBy (i->value());",
          "599:   }",
          "601:   if (xi != xe)",
          "602:   {",
          "",
          "[Removed Lines]",
          "594:   else {",
          "",
          "[Added Lines]",
          "610:   else if (what == 2) {",
          "616:   else if (what == 3) {",
          "617:       YCPBoolean b = as_boolean (prop, \"section_private\");",
          "618:       if (b.isNull())",
          "619:    return -1;",
          "620:       s.setPrivate (b->value());",
          "621:   }",
          "",
          "---------------"
        ],
        "agent-ini/src/IniFile.h||agent-ini/src/IniFile.h": [
          "File: agent-ini/src/IniFile.h -> agent-ini/src/IniFile.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "242:     string end_comment;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "249:     bool is_private;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "435:     IniSection (const IniParser *p)",
          "436:  : IniBase (-1),",
          "437:    ip (p),",
          "439:    container (), ivalues (), isections ()",
          "440:      {}",
          "",
          "[Removed Lines]",
          "438:    end_comment (), rewrite_by(-1),",
          "",
          "[Added Lines]",
          "445:    end_comment (), is_private(false), rewrite_by(-1),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "446:     IniSection (const IniSection &s) :",
          "447:  IniBase (s),",
          "448:    ip (s.ip),",
          "450:    container (s.container)",
          "451:  { reindex (); }",
          "",
          "[Removed Lines]",
          "449:    end_comment (s.end_comment), rewrite_by (s.rewrite_by),",
          "",
          "[Added Lines]",
          "456:           end_comment (s.end_comment), is_private(s.is_private), rewrite_by (s.rewrite_by),",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "458:      }",
          "459:      IniBase::operator = (s);",
          "460:      ip = s.ip;",
          "462:      container = s.container;",
          "464:      reindex ();",
          "",
          "[Removed Lines]",
          "461:      end_comment = s.end_comment; rewrite_by = s.rewrite_by;",
          "",
          "[Added Lines]",
          "468:      end_comment = s.end_comment;",
          "469:             is_private = s.is_private;",
          "470:             rewrite_by = s.rewrite_by;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "474:     IniSection (const IniParser *p, string n)",
          "475:  : IniBase (n),",
          "476:    ip (p),",
          "478:    container(), ivalues (), isections ()",
          "479:      {}",
          "",
          "[Removed Lines]",
          "477:    end_comment (), rewrite_by(0),",
          "",
          "[Added Lines]",
          "486:    end_comment (), is_private(false), rewrite_by(0),",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "512:     int getSubSectionRewriteBy (const char*name);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "523:     void setPrivate(bool p) { is_private = p; }",
          "524:     bool isPrivate() const { return is_private; }",
          "",
          "---------------"
        ],
        "agent-ini/src/IniParser.cc||agent-ini/src/IniParser.cc": [
          "File: agent-ini/src/IniParser.cc -> agent-ini/src/IniParser.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "998:     Pathname pn(filename);",
          "999:     PathInfo::assert_dir (pn.dirname ());",
          "1000:     ofstream of(filename.c_str());",
          "1001:     if (!of.good()) {",
          "1002:         y2error (\"Can not open file %s for write\", filename.c_str());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1001:     mode_t file_umask = section.isPrivate()? 0077: 0022;",
          "1002:     mode_t orig_umask = umask(file_umask);",
          "1004:     unlink(filename.c_str());",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1006:     write_helper (section, of, 0);",
          "1008:     of.close();",
          "1009:     return 0;",
          "1010: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1015:     umask(orig_umask);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "10ef8ab5ca6d0a10f666d4d9f167cc8cc3f99e55",
      "candidate_info": {
        "commit_hash": "10ef8ab5ca6d0a10f666d4d9f167cc8cc3f99e55",
        "repo": "yast/yast-core",
        "commit_url": "https://github.com/yast/yast-core/commit/10ef8ab5ca6d0a10f666d4d9f167cc8cc3f99e55",
        "files": [
          "agent-system/src/SystemAgent.cc",
          "agent-system/testsuite/tests/string.out",
          "agent-system/testsuite/tests/string.ycp",
          "package/yast2-core.changes"
        ],
        "message": "added Write(.target.string, [filename, mode], content) (bnc#713661)\n\nsvn path=/branches/SuSE-Code-11-SP2-Branch/core/; revision=66764",
        "before_after_code_files": [
          "agent-system/src/SystemAgent.cc||agent-system/src/SystemAgent.cc",
          "agent-system/testsuite/tests/string.ycp||agent-system/testsuite/tests/string.ycp",
          "package/yast2-core.changes||package/yast2-core.changes"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [
            "agent-system/src/SystemAgent.cc||agent-system/src/SystemAgent.cc",
            "agent-system/testsuite/tests/string.ycp||agent-system/testsuite/tests/string.ycp",
            "package/yast2-core.changes||package/yast2-core.changes"
          ],
          "candidate": [
            "agent-system/src/SystemAgent.cc||agent-system/src/SystemAgent.cc",
            "agent-system/testsuite/tests/string.ycp||agent-system/testsuite/tests/string.ycp",
            "package/yast2-core.changes||package/yast2-core.changes"
          ]
        }
      },
      "candidate_diff": {
        "agent-system/src/SystemAgent.cc||agent-system/src/SystemAgent.cc": [
          "File: agent-system/src/SystemAgent.cc -> agent-system/src/SystemAgent.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "709:     {",
          "718:  {",
          "719:      ycp2error (\"Bad filename arg for Write (.string ...)\");",
          "720:      return YCPBoolean (false);",
          "721:  }",
          "723:  if (arg.isNull() || !arg->isString())",
          "724:  {",
          "725:      ycp2error (\"Bad string value for Write (.string ...)\");",
          "726:      return YCPBoolean (false);",
          "727:  }",
          "731:  if (fd >= 0)",
          "732:  {",
          "733:      string cont = arg->asString()->value();",
          "",
          "[Removed Lines]",
          "717:  if (value.isNull() || !value->isString())",
          "729:  string filename = value->asString()->value();",
          "730:  int fd = open(filename.c_str(), O_WRONLY | O_CREAT | O_TRUNC, 0644);",
          "",
          "[Added Lines]",
          "721:  if (value.isNull() || !(value->isString() || value->isList()))",
          "727:  string filename;",
          "728:  mode_t filemode = 0644;",
          "730:  if (value->isString())",
          "731:  {",
          "732:      filename = value->asString()->value();",
          "733:  }",
          "734:  else",
          "735:  {   // value is list",
          "736:      YCPList flist = value->asList();",
          "737:      if ((flist->size() != 2)",
          "738:   || (!flist->value(0)->isString())",
          "739:   || (!flist->value(1)->isInteger()))",
          "740:      {",
          "741:   ycp2error (\"Bad [filename, mode] list in call to Write (%s, [ string filename, integer mode ], ...)\",",
          "742:       cmd.c_str ());",
          "743:   return YCPBoolean (false);",
          "744:      }",
          "745:      filename = flist->value(0)->asString()->value();",
          "746:      filemode = (int)(flist->value(1)->asInteger()->value());",
          "747:  }",
          "755:  int fd = open(filename.c_str(), O_WRONLY | O_CREAT | O_TRUNC, filemode);",
          "",
          "---------------"
        ],
        "agent-system/testsuite/tests/string.ycp||agent-system/testsuite/tests/string.ycp": [
          "File: agent-system/testsuite/tests/string.ycp -> agent-system/testsuite/tests/string.ycp",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:     return SCR::Read (.string, [\"not-here.txt\", \"never mind\"]);",
          "26: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: {",
          "29:     map out = nil;",
          "30:     string filename = \"tmp.secret.string\";",
          "32:     SCR::Write (.string, [filename, 0600], \"This is secret\\n\");",
          "34:     out = (map) SCR::Execute (.bash_output, \"stat -c %a \" + filename);",
          "35:     return \"secret file mode: \" + out[\"stdout\"]:\"\";",
          "36: }",
          "",
          "---------------"
        ],
        "package/yast2-core.changes||package/yast2-core.changes": [
          "File: package/yast2-core.changes -> package/yast2-core.changes",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: - ini-agent: added Write(.section_private.SECTION, BOOLEAN)",
          "5:   (bnc#713661, CVE-2011-3177)",
          "6: - 2.17.41",
          "8: -------------------------------------------------------------------",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: - system agent: added  Write(.target.string, [filename, mode], content)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "60f9ab9941fa7fcd798f6ddb361e471090e93e68",
      "candidate_info": {
        "commit_hash": "60f9ab9941fa7fcd798f6ddb361e471090e93e68",
        "repo": "yast/yast-core",
        "commit_url": "https://github.com/yast/yast-core/commit/60f9ab9941fa7fcd798f6ddb361e471090e93e68",
        "files": [
          "VERSION",
          "agent-ini/src/IniParser.cc",
          "agent-ini/testsuite/multi/private.err",
          "agent-ini/testsuite/multi/private.in.1",
          "agent-ini/testsuite/multi/private.out",
          "package/yast2-core.changes"
        ],
        "message": "ini-agent: only change permissions of new files (bnc#743355)\n\nsvn merge -c67360 http://svn.opensuse.org/svn/yast/branches/SuSE-Code-11-SP2-Branch/core\n\nsvn path=/trunk/core/; revision=67361",
        "before_after_code_files": [
          "agent-ini/src/IniParser.cc||agent-ini/src/IniParser.cc",
          "agent-ini/testsuite/multi/private.err||agent-ini/testsuite/multi/private.err",
          "agent-ini/testsuite/multi/private.in.1||agent-ini/testsuite/multi/private.in.1",
          "package/yast2-core.changes||package/yast2-core.changes"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "agent-ini/src/IniParser.cc||agent-ini/src/IniParser.cc",
            "agent-ini/testsuite/multi/private.err||agent-ini/testsuite/multi/private.err",
            "agent-ini/testsuite/multi/private.in.1||agent-ini/testsuite/multi/private.in.1",
            "package/yast2-core.changes||package/yast2-core.changes"
          ],
          "candidate": [
            "agent-ini/src/IniParser.cc||agent-ini/src/IniParser.cc",
            "agent-ini/testsuite/multi/private.err||agent-ini/testsuite/multi/private.err",
            "agent-ini/testsuite/multi/private.in.1||agent-ini/testsuite/multi/private.in.1",
            "package/yast2-core.changes||package/yast2-core.changes"
          ]
        }
      },
      "candidate_diff": {
        "agent-ini/src/IniParser.cc||agent-ini/src/IniParser.cc": [
          "File: agent-ini/src/IniParser.cc -> agent-ini/src/IniParser.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1001:     mode_t file_umask = section.isPrivate()? 0077: 0022;",
          "1002:     mode_t orig_umask = umask(file_umask);",
          "1006:     ofstream of(filename.c_str());",
          "1007:     if (!of.good()) {",
          "",
          "[Removed Lines]",
          "1004:     unlink(filename.c_str());",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "agent-ini/testsuite/multi/private.err||agent-ini/testsuite/multi/private.err": [
          "File: agent-ini/testsuite/multi/private.err -> agent-ini/testsuite/multi/private.err",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: [agent-ini] IniParser.cc(parse):XXX Rewriting multi/private.in.2.test to 2",
          "3: [agent-ini] IniFile.cc(setMyValue):XXX Adding value .v.\"1\".\"Totalise\".\"Password\" = \"Secret password\"",
          "4: [agent-ini] IniFile.cc(setMyValue):XXX Adding value .v.\"2\".\"arcor\".\"Password\" = \"Public password\"",
          "6: [agent-ini] IniParser.cc(parse):XXX Rewriting multi/private.in.2.test to 2",
          "8: [agent-ini] IniParser.cc(getFileName):XXX Rewriting 2 to multi/private.in.2.test",
          "9: [YCP] multi/private.ycp:XXX secret file mode: $[\"exit\":0, \"stderr\":\"\", \"stdout\":\"600\\n\"]",
          "10: [YCP] multi/private.ycp:XXX public file mode: $[\"exit\":0, \"stderr\":\"\", \"stdout\":\"644\\n\"]",
          "11: [agent-ini] IniParser.cc(write):XXX File multi/private.in.*.test did not change. Not saving.",
          "",
          "[Removed Lines]",
          "1: [agent-ini] IniParser.cc(parse):XXX Rewriting multi/private.in.1.test to 1",
          "5: [agent-ini] IniParser.cc(parse):XXX Rewriting multi/private.in.1.test to 1",
          "7: [agent-ini] IniParser.cc(getFileName):XXX Rewriting 1 to multi/private.in.1.test",
          "",
          "[Added Lines]",
          "2: [agent-ini] IniFile.cc(setValue):XXX Write: adding recursively 1 to .v.\"1\".\"Totalise\".\"Password\"",
          "3: [agent-ini] IniFile.cc(setValue):XXX Write: adding recursively Totalise to .v.\"1\".\"Totalise\".\"Password\"",
          "8: [agent-ini] IniParser.cc(getFileName):XXX Rewriting 1 to multi/private.in.1.test",
          "",
          "---------------"
        ],
        "agent-ini/testsuite/multi/private.in.1||agent-ini/testsuite/multi/private.in.1": [
          "File: agent-ini/testsuite/multi/private.in.1 -> agent-ini/testsuite/multi/private.in.1",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "package/yast2-core.changes||package/yast2-core.changes": [
          "File: package/yast2-core.changes -> package/yast2-core.changes",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: -------------------------------------------------------------------",
          "2: Thu Jan  5 15:08:14 CET 2012 - mvidner@suse.cz",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: -------------------------------------------------------------------",
          "2: Fri Feb  3 14:36:31 CET 2012 - mvidner@suse.cz",
          "4: - ini-agent: only change permissions of new files (bnc#743355)",
          "5: - 2.22.3",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "54b3e3828bb510dc29d94fda18321ff4e49743cf",
      "candidate_info": {
        "commit_hash": "54b3e3828bb510dc29d94fda18321ff4e49743cf",
        "repo": "yast/yast-core",
        "commit_url": "https://github.com/yast/yast-core/commit/54b3e3828bb510dc29d94fda18321ff4e49743cf",
        "files": [
          "agent-ini/testsuite/multi/private.err",
          "agent-ini/testsuite/multi/private.in.0",
          "agent-ini/testsuite/multi/private.in.1",
          "agent-ini/testsuite/multi/private.in.2",
          "agent-ini/testsuite/multi/private.in.3",
          "agent-ini/testsuite/multi/private.out",
          "agent-ini/testsuite/multi/private.scr",
          "agent-ini/testsuite/multi/private.ycp"
        ],
        "message": "Better test cases for section_private (bnc#743355).\n\nsvn path=/trunk/core/; revision=67362",
        "before_after_code_files": [
          "agent-ini/testsuite/multi/private.err||agent-ini/testsuite/multi/private.err",
          "agent-ini/testsuite/multi/private.in.2||agent-ini/testsuite/multi/private.in.2",
          "agent-ini/testsuite/multi/private.scr||agent-ini/testsuite/multi/private.scr",
          "agent-ini/testsuite/multi/private.ycp||agent-ini/testsuite/multi/private.ycp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "agent-ini/testsuite/multi/private.err||agent-ini/testsuite/multi/private.err",
            "agent-ini/testsuite/multi/private.in.2||agent-ini/testsuite/multi/private.in.2",
            "agent-ini/testsuite/multi/private.scr||agent-ini/testsuite/multi/private.scr",
            "agent-ini/testsuite/multi/private.ycp||agent-ini/testsuite/multi/private.ycp"
          ],
          "candidate": [
            "agent-ini/testsuite/multi/private.err||agent-ini/testsuite/multi/private.err",
            "agent-ini/testsuite/multi/private.in.2||agent-ini/testsuite/multi/private.in.2",
            "agent-ini/testsuite/multi/private.scr||agent-ini/testsuite/multi/private.scr",
            "agent-ini/testsuite/multi/private.ycp||agent-ini/testsuite/multi/private.ycp"
          ]
        }
      },
      "candidate_diff": {
        "agent-ini/testsuite/multi/private.err||agent-ini/testsuite/multi/private.err": [
          "File: agent-ini/testsuite/multi/private.err -> agent-ini/testsuite/multi/private.err",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: [agent-ini] IniParser.cc(parse):XXX Rewriting multi/private.in.2.test to 2",
          "6: [agent-ini] IniParser.cc(parse):XXX Rewriting multi/private.in.2.test to 2",
          "8: [agent-ini] IniParser.cc(getFileName):XXX Rewriting 1 to multi/private.in.1.test",
          "11: [agent-ini] IniParser.cc(write):XXX File multi/private.in.*.test did not change. Not saving.",
          "",
          "[Removed Lines]",
          "2: [agent-ini] IniFile.cc(setValue):XXX Write: adding recursively 1 to .v.\"1\".\"Totalise\".\"Password\"",
          "3: [agent-ini] IniFile.cc(setValue):XXX Write: adding recursively Totalise to .v.\"1\".\"Totalise\".\"Password\"",
          "4: [agent-ini] IniFile.cc(setMyValue):XXX Adding value .v.\"1\".\"Totalise\".\"Password\" = \"Secret password\"",
          "5: [agent-ini] IniFile.cc(setMyValue):XXX Adding value .v.\"2\".\"arcor\".\"Password\" = \"Public password\"",
          "7: [agent-ini] IniParser.cc(getFileName):XXX Rewriting 2 to multi/private.in.2.test",
          "9: [YCP] multi/private.ycp:XXX secret file mode: $[\"exit\":0, \"stderr\":\"\", \"stdout\":\"600\\n\"]",
          "10: [YCP] multi/private.ycp:XXX public file mode: $[\"exit\":0, \"stderr\":\"\", \"stdout\":\"644\\n\"]",
          "",
          "[Added Lines]",
          "1: [agent-ini] IniParser.cc(parse):XXX Rewriting multi/private.in.0.test to 0",
          "2: [agent-ini] IniParser.cc(parse):XXX Rewriting multi/private.in.1.test to 1",
          "4: [agent-ini] IniParser.cc(parse):XXX Rewriting multi/private.in.3.test to 3",
          "5: [agent-ini] IniFile.cc(setValue):XXX Write: adding recursively Section to .v.\"0\".Section.Key",
          "6: [agent-ini] IniFile.cc(setMyValue):XXX Adding value .v.\"0\".Section.Key = \"existing public  implicit\"",
          "7: [agent-ini] IniFile.cc(setValue):XXX Write: adding recursively Section to .v.\"1\".Section.Key",
          "8: [agent-ini] IniFile.cc(setMyValue):XXX Adding value .v.\"1\".Section.Key = \"existing public  explicit\"",
          "9: [agent-ini] IniFile.cc(setValue):XXX Write: adding recursively Section to .v.\"2\".Section.Key",
          "10: [agent-ini] IniFile.cc(setMyValue):XXX Adding value .v.\"2\".Section.Key = \"existing private implicit\"",
          "11: [agent-ini] IniFile.cc(setValue):XXX Write: adding recursively Section to .v.\"3\".Section.Key",
          "12: [agent-ini] IniFile.cc(setMyValue):XXX Adding value .v.\"3\".Section.Key = \"existing private explicit\"",
          "13: [agent-ini] IniFile.cc(setValue):XXX Write: adding recursively 4 to .v.\"4\".Section.Key",
          "14: [agent-ini] IniFile.cc(setValue):XXX Write: adding recursively Section to .v.\"4\".Section.Key",
          "15: [agent-ini] IniFile.cc(setMyValue):XXX Adding value .v.\"4\".Section.Key = \"new      public  implicit\"",
          "16: [agent-ini] IniFile.cc(setValue):XXX Write: adding recursively 5 to .v.\"5\".Section.Key",
          "17: [agent-ini] IniFile.cc(setValue):XXX Write: adding recursively Section to .v.\"5\".Section.Key",
          "18: [agent-ini] IniFile.cc(setMyValue):XXX Adding value .v.\"5\".Section.Key = \"new      public  explicit\"",
          "19: [agent-ini] IniFile.cc(setValue):XXX Write: adding recursively 6 to .v.\"6\".Section.Key",
          "20: [agent-ini] IniFile.cc(setValue):XXX Write: adding recursively Section to .v.\"6\".Section.Key",
          "21: [agent-ini] IniFile.cc(setMyValue):XXX Adding value .v.\"6\".Section.Key = \"new      private implicit\"",
          "22: [agent-ini] IniFile.cc(setValue):XXX Write: adding recursively 7 to .v.\"7\".Section.Key",
          "23: [agent-ini] IniFile.cc(setValue):XXX Write: adding recursively Section to .v.\"7\".Section.Key",
          "24: [agent-ini] IniFile.cc(setMyValue):XXX Adding value .v.\"7\".Section.Key = \"new      private explicit\"",
          "25: [agent-ini] IniParser.cc(parse):XXX Rewriting multi/private.in.0.test to 0",
          "26: [agent-ini] IniParser.cc(parse):XXX Rewriting multi/private.in.1.test to 1",
          "28: [agent-ini] IniParser.cc(parse):XXX Rewriting multi/private.in.3.test to 3",
          "29: [agent-ini] IniParser.cc(getFileName):XXX Rewriting 0 to multi/private.in.0.test",
          "31: [agent-ini] IniParser.cc(getFileName):XXX Rewriting 2 to multi/private.in.2.test",
          "32: [agent-ini] IniParser.cc(getFileName):XXX Rewriting 3 to multi/private.in.3.test",
          "33: [agent-ini] IniParser.cc(getFileName):XXX Rewriting 4 to multi/private.in.4.test",
          "34: [agent-ini] IniParser.cc(getFileName):XXX Rewriting 5 to multi/private.in.5.test",
          "35: [agent-ini] IniParser.cc(getFileName):XXX Rewriting 6 to multi/private.in.6.test",
          "36: [agent-ini] IniParser.cc(getFileName):XXX Rewriting 7 to multi/private.in.7.test",
          "37: [YCP] multi/private.ycp:XXX existing public  implicit file mode: 644",
          "38: [YCP] multi/private.ycp:XXX existing public  explicit file mode: 644",
          "39: [YCP] multi/private.ycp:XXX existing private implicit file mode: 600",
          "40: [YCP] multi/private.ycp:XXX existing private explicit file mode: 600",
          "41: [YCP] multi/private.ycp:XXX new      public  implicit file mode: 644",
          "42: [YCP] multi/private.ycp:XXX new      public  explicit file mode: 644",
          "43: [YCP] multi/private.ycp:XXX new      private implicit file mode: 644",
          "44: [YCP] multi/private.ycp:XXX new      private explicit file mode: 600",
          "",
          "---------------"
        ],
        "agent-ini/testsuite/multi/private.in.2||agent-ini/testsuite/multi/private.in.2": [
          "File: agent-ini/testsuite/multi/private.in.2 -> agent-ini/testsuite/multi/private.in.2",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "agent-ini/testsuite/multi/private.scr||agent-ini/testsuite/multi/private.scr": [
          "File: agent-ini/testsuite/multi/private.scr -> agent-ini/testsuite/multi/private.scr",
          "--- Hunk 1 ---",
          "[Context before]",
          "6:       \"rewrite\" : [",
          "7:  [ \"multi/private\\.in\\.(.)\\.test$\", \"multi/private.in.%s.test\"],",
          "8:       ],",
          "10:       \"comments\": [ \"^[ \\t]*#.*\", \"^[ \\t]*$\" ],",
          "11:       \"sections\" : [",
          "12:         $[",
          "15:         ],",
          "16:       ],",
          "17:       \"params\" : [",
          "",
          "[Removed Lines]",
          "9:       \"subindent\" : \"  \",",
          "13:         \"begin\" : [ \"[ \\t]*\\\\[Dialer[ \\t]+(.*[^ \\t])[ \\t]*\\\\][ \\t]*\", \"[Dialer %s]\" ],",
          "14:  \"end\" : [ \"^[ \\t]*\\\\[End\\\\][ \\t]*$\", \"[End]\", ],",
          "",
          "[Added Lines]",
          "9:       \"subindent\" : \"\",",
          "13:         \"begin\" : [ \"[ \\t]*\\\\[(.*[^ \\t])[ \\t]*\\\\][ \\t]*\", \"[%s]\" ],",
          "",
          "---------------"
        ],
        "agent-ini/testsuite/multi/private.ycp||agent-ini/testsuite/multi/private.ycp": [
          "File: agent-ini/testsuite/multi/private.ycp -> agent-ini/testsuite/multi/private.ycp",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: {",
          "9:     SCR::RegisterAgent (.target, `ag_system ());",
          "17:     SCR::Write (., nil); //flush",
          "25:     return nil;",
          "26: }",
          "",
          "[Removed Lines]",
          "10:     any out = nil;",
          "12:     SCR::Write (.v.\"1\".\"Totalise\".\"Password\", \"Secret password\");",
          "13:     SCR::Write (.section_private.\"1\", true);",
          "15:     SCR::Write (.v.\"2\".\"arcor\".\"Password\", \"Public password\");",
          "19:     out = SCR::Execute (.target.bash_output, \"stat -c %a multi/private.in.1.test\");",
          "20:     y2milestone(\"secret file mode: %1\", out);",
          "22:     out = SCR::Execute (.target.bash_output, \"stat -c %a multi/private.in.2.test\");",
          "23:     y2milestone(\"public file mode: %1\", out);",
          "",
          "[Added Lines]",
          "15:     string description(integer i) {",
          "16:         string new_s = ((i & 4) != 0)?",
          "17:           \"new      \":",
          "18:           \"existing \";",
          "19:         string private_s = ((i & 2) != 0)?",
          "20:           \"private \":",
          "21:           \"public  \";",
          "22:         string explicit_s = ((i & 1) != 0)?",
          "23:           \"explicit\":",
          "24:           \"implicit\";",
          "25:         return new_s + private_s + explicit_s;",
          "26:     }",
          "29:     foreach(integer i, [2, 3], {",
          "30:         SCR::Execute (.target.bash, sformat(\"chmod 600 multi/private.in.%1.test\", i));",
          "31:     });",
          "33:     foreach(integer i, [0, 1, 2, 3, 4, 5, 6, 7], {",
          "34:         string i_str = tostring(i);",
          "35:         SCR::Write (add(add(.v, i_str), .Section.Key), description(i));",
          "37:         if ((i & 1) != 0) {",
          "38:           SCR::Write (add(.section_private, i_str), (i & 2) != 0);",
          "39:         }",
          "40:     });",
          "43:     foreach(integer i, [0, 1, 2, 3, 4, 5, 6, 7], {",
          "44:         map out = (map) SCR::Execute (.target.bash_output, sformat(\"stat -c %%a multi/private.in.%1.test\", i));",
          "45:         y2milestone(\"%1 file mode: %2\", description(i), out[\"stdout\"]:\"\");",
          "46:     });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0479733147e2cc5b53443c4758e2c48c76b042d2",
      "candidate_info": {
        "commit_hash": "0479733147e2cc5b53443c4758e2c48c76b042d2",
        "repo": "yast/yast-core",
        "commit_url": "https://github.com/yast/yast-core/commit/0479733147e2cc5b53443c4758e2c48c76b042d2",
        "files": [
          "VERSION",
          "agent-process/src/ProcessAgent.cc",
          "agent-process/src/ProcessAgent.h",
          "agent-process/src/Y2CCProcessAgent.cc",
          "base/tools/tty_wrapper/tty_wrapper.cc",
          "liby2util-r/src/Process.cc",
          "liby2util-r/src/include/y2util/Process.h",
          "package/yast2-core.changes"
        ],
        "message": "Relicensed agent-process and tty_wrapper from GPL-2.0 to GPL-2.0+ to match the rest of the package (bnc#728950).\n\nsvn merge -c67108 -c67118 http://svn.opensuse.org/svn/yast/branches/SuSE-Code-11-SP2-Branch/core\nand adjusting for the move of Process.cc to liby2util\n\nsvn path=/trunk/core/; revision=67119",
        "before_after_code_files": [
          "agent-process/src/ProcessAgent.cc||agent-process/src/ProcessAgent.cc",
          "agent-process/src/ProcessAgent.h||agent-process/src/ProcessAgent.h",
          "agent-process/src/Y2CCProcessAgent.cc||agent-process/src/Y2CCProcessAgent.cc",
          "base/tools/tty_wrapper/tty_wrapper.cc||base/tools/tty_wrapper/tty_wrapper.cc",
          "liby2util-r/src/Process.cc||liby2util-r/src/Process.cc",
          "liby2util-r/src/include/y2util/Process.h||liby2util-r/src/include/y2util/Process.h",
          "package/yast2-core.changes||package/yast2-core.changes"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "package/yast2-core.changes||package/yast2-core.changes"
          ],
          "candidate": [
            "package/yast2-core.changes||package/yast2-core.changes"
          ]
        }
      },
      "candidate_diff": {
        "agent-process/src/ProcessAgent.cc||agent-process/src/ProcessAgent.cc": [
          "File: agent-process/src/ProcessAgent.cc -> agent-process/src/ProcessAgent.cc"
        ],
        "agent-process/src/ProcessAgent.h||agent-process/src/ProcessAgent.h": [
          "File: agent-process/src/ProcessAgent.h -> agent-process/src/ProcessAgent.h"
        ],
        "agent-process/src/Y2CCProcessAgent.cc||agent-process/src/Y2CCProcessAgent.cc": [
          "File: agent-process/src/Y2CCProcessAgent.cc -> agent-process/src/Y2CCProcessAgent.cc"
        ],
        "base/tools/tty_wrapper/tty_wrapper.cc||base/tools/tty_wrapper/tty_wrapper.cc": [
          "File: base/tools/tty_wrapper/tty_wrapper.cc -> base/tools/tty_wrapper/tty_wrapper.cc"
        ],
        "liby2util-r/src/Process.cc||liby2util-r/src/Process.cc": [
          "File: liby2util-r/src/Process.cc -> liby2util-r/src/Process.cc"
        ],
        "liby2util-r/src/include/y2util/Process.h||liby2util-r/src/include/y2util/Process.h": [
          "File: liby2util-r/src/include/y2util/Process.h -> liby2util-r/src/include/y2util/Process.h"
        ],
        "package/yast2-core.changes||package/yast2-core.changes": [
          "File: package/yast2-core.changes -> package/yast2-core.changes",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: -------------------------------------------------------------------",
          "4: - ini-agent: added Write(.section_private.SECTION, BOOLEAN)",
          "5:   (bnc#713661, CVE-2011-3177)",
          "",
          "[Removed Lines]",
          "2: Mon Nov  7 18:19:27 CET 2011 - mvidner@suse.cz",
          "",
          "[Added Lines]",
          "2: Thu Jan  5 15:08:14 CET 2012 - mvidner@suse.cz",
          "4: - Relicensed agent-process from GPL-2.0 to GPL-2.0+",
          "5:   to match the rest of the package (bnc#728950).",
          "6: - 2.22.2",
          "8: -------------------------------------------------------------------",
          "9: Thu Jan  5 15:00:00 CET 2012 - mvidner@suse.cz",
          "",
          "---------------"
        ]
      }
    }
  ]
}