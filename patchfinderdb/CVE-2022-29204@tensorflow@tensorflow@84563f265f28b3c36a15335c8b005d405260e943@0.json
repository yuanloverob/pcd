{
  "cve_id": "CVE-2022-29204",
  "cve_desc": "TensorFlow is an open source platform for machine learning. Prior to versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4, the implementation of `tf.raw_ops.UnsortedSegmentJoin` does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack. The code assumes `num_segments` is a positive scalar but there is no validation. Since this value is used to allocate the output tensor, a negative value would result in a `CHECK`-failure (assertion failure), as per TFSA-2021-198. Versions 2.9.0, 2.8.1, 2.7.2, and 2.6.4 contain a patch for this issue.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "84563f265f28b3c36a15335c8b005d405260e943",
  "patch_info": {
    "commit_hash": "84563f265f28b3c36a15335c8b005d405260e943",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/84563f265f28b3c36a15335c8b005d405260e943",
    "files": [
      "tensorflow/core/kernels/unsorted_segment_join_op.cc"
    ],
    "message": "Validate `num_segments > 0` in `unsorted_segment_join`\n\nFixes #55305\n\nPiperOrigin-RevId: 442047005",
    "before_after_code_files": [
      "tensorflow/core/kernels/unsorted_segment_join_op.cc||tensorflow/core/kernels/unsorted_segment_join_op.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/unsorted_segment_join_op.cc||tensorflow/core/kernels/unsorted_segment_join_op.cc": [
      "File: tensorflow/core/kernels/unsorted_segment_join_op.cc -> tensorflow/core/kernels/unsorted_segment_join_op.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "94:                 errors::InvalidArgument(\"Number of segments cannot be empty.\"));",
      "95:     auto num_segments = num_segments_tensor.scalar<NUM_SEGMENTS_TYPE>()();",
      "97:     OP_REQUIRES(context, segment_dims != 0,",
      "98:                 errors::InvalidArgument(\"Segment_id cannot have rank 0\"));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "97:     OP_REQUIRES(context, num_segments > 0,",
      "98:                 errors::InvalidArgument(\"Number of segments must be positive\"));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "20cb18724b0bf6c09071a3f53434c4eec53cc147",
      "candidate_info": {
        "commit_hash": "20cb18724b0bf6c09071a3f53434c4eec53cc147",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/20cb18724b0bf6c09071a3f53434c4eec53cc147",
        "files": [
          "tensorflow/core/kernels/unsorted_segment_join_op.cc"
        ],
        "message": "Allow 0 for number of segments in `unsorted_segment_join_op.cc`\n\nRelated to the fix for #55305\n\nPiperOrigin-RevId: 443157549",
        "before_after_code_files": [
          "tensorflow/core/kernels/unsorted_segment_join_op.cc||tensorflow/core/kernels/unsorted_segment_join_op.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/unsorted_segment_join_op.cc||tensorflow/core/kernels/unsorted_segment_join_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/unsorted_segment_join_op.cc||tensorflow/core/kernels/unsorted_segment_join_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/unsorted_segment_join_op.cc||tensorflow/core/kernels/unsorted_segment_join_op.cc": [
          "File: tensorflow/core/kernels/unsorted_segment_join_op.cc -> tensorflow/core/kernels/unsorted_segment_join_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "94:                 errors::InvalidArgument(\"Number of segments cannot be empty.\"));",
          "95:     auto num_segments = num_segments_tensor.scalar<NUM_SEGMENTS_TYPE>()();",
          "99:     OP_REQUIRES(context, segment_dims != 0,",
          "100:                 errors::InvalidArgument(\"Segment_id cannot have rank 0\"));",
          "",
          "[Removed Lines]",
          "97:     OP_REQUIRES(context, num_segments > 0,",
          "98:                 errors::InvalidArgument(\"Number of segments must be positive\"));",
          "",
          "[Added Lines]",
          "97:     OP_REQUIRES(",
          "98:         context, num_segments >= 0,",
          "99:         errors::InvalidArgument(",
          "100:             \"Number of segments must be non-negative but got \", num_segments));",
          "",
          "---------------"
        ]
      }
    }
  ]
}