{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "bce68134b647e6f102acf8e8f8ab3b153858d32c",
      "candidate_info": {
        "commit_hash": "bce68134b647e6f102acf8e8f8ab3b153858d32c",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/bce68134b647e6f102acf8e8f8ab3b153858d32c",
        "files": [
          "lib/http.js"
        ],
        "message": "http: Remove socket ondata/onend in parser cleanup",
        "before_after_code_files": [
          "lib/http.js||lihttp.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/http.js||lihttp.js": [
          "File: lib/http.js -> lihttp.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1128:     var freeParser = function() {",
          "1129:       if (parser) {",
          "1130:         parsers.free(parser);",
          "1131:         parser = null;",
          "1132:       }",
          "1133:     };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e7792e5d46dc3c1e25915266d671070c945f1968",
      "candidate_info": {
        "commit_hash": "e7792e5d46dc3c1e25915266d671070c945f1968",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/e7792e5d46dc3c1e25915266d671070c945f1968",
        "files": [
          "test/simple/test-tls-honorcipherorder.js"
        ],
        "message": "test: add test of tls.createServer(honorCipherOrder=true)",
        "before_after_code_files": [
          "test/simple/test-tls-honorcipherorder.js||test/simple/test-tls-honorcipherorder.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/simple/test-tls-honorcipherorder.js||test/simple/test-tls-honorcipherorder.js": [
          "File: test/simple/test-tls-honorcipherorder.js -> test/simple/test-tls-honorcipherorder.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: var common = require('../common');",
          "23: var assert = require('assert');",
          "24: var tls = require('tls');",
          "25: var fs = require('fs');",
          "26: var nconns = 0;",
          "29: var SSL_Method = 'TLSv1_method';",
          "30: var localhost = '127.0.0.1';",
          "32: process.on('exit', function() {",
          "33:   assert.equal(nconns, 4);",
          "34: });",
          "36: function test(honorCipherOrder, clientCipher, expectedCipher, cb) {",
          "37:   var soptions = {",
          "38:     secureProtocol: SSL_Method,",
          "39:     key: fs.readFileSync(common.fixturesDir + '/keys/agent2-key.pem'),",
          "40:     cert: fs.readFileSync(common.fixturesDir + '/keys/agent2-cert.pem'),",
          "41:     ciphers: 'AES256-SHA:RC4-SHA:DES-CBC-SHA',",
          "42:     honorCipherOrder: !!honorCipherOrder",
          "43:   };",
          "45:   var server = tls.createServer(soptions, function(cleartextStream) {",
          "46:     nconns++;",
          "47:   });",
          "48:   server.listen(common.PORT, localhost, function() {",
          "49:     var coptions = {secureProtocol: SSL_Method};",
          "50:     if (clientCipher) {",
          "51:       coptions.ciphers = clientCipher;",
          "52:     }",
          "53:     var client = tls.connect(common.PORT, localhost, coptions, function() {",
          "54:       var cipher = client.getCipher();",
          "55:       client.end();",
          "56:       server.close();",
          "57:       assert.equal(cipher.name, expectedCipher);",
          "58:       if (cb) cb();",
          "59:     });",
          "60:   });",
          "61: }",
          "63: test1();",
          "65: function test1() {",
          "67:   test(false, 'DES-CBC-SHA:RC4-SHA:AES256-SHA','DES-CBC-SHA', test2);",
          "68: }",
          "70: function test2() {",
          "73:   test(true, 'DES-CBC-SHA:RC4-SHA:AES256-SHA', 'AES256-SHA', test3);",
          "74: }",
          "76: function test3() {",
          "79:   test(true, 'DES-CBC-SHA:RC4-SHA', 'RC4-SHA', test4);",
          "80: }",
          "82: function test4() {",
          "85:   test(true, 'DES-CBC-SHA', 'DES-CBC-SHA');",
          "86: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7865c5c51dc6ef2f17644b4923ea451da21eee5a",
      "candidate_info": {
        "commit_hash": "7865c5c51dc6ef2f17644b4923ea451da21eee5a",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/7865c5c51dc6ef2f17644b4923ea451da21eee5a",
        "files": [
          "src/node_script.cc"
        ],
        "message": "vm: cleanup module memory leakage\n\nThere are some paths here that led to dangling contexts. By being smarter with\nhandle management we can get rid of all the cleanup code and fix those issues.\n\nThis is a backport of commit 7063575.",
        "before_after_code_files": [
          "src/node_script.cc||src/node_script.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_script.cc||src/node_script.cc": [
          "File: src/node_script.cc -> src/node_script.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "348:     display_error = true;",
          "349:   }",
          "353:   Local<Array> keys;",
          "354:   if (context_flag == newContext) {",
          "358:   } else if (context_flag == userContext) {",
          "",
          "[Removed Lines]",
          "351:   Persistent<Context> context;",
          "356:     context = Context::New();",
          "",
          "[Added Lines]",
          "351:   Handle<Context> context = Context::GetCurrent();",
          "360:     Persistent<Context> tmp = Context::New();",
          "361:     context = Local<Context>::New(tmp);",
          "362:     tmp.Dispose();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "362:     context = nContext->GetV8Context();",
          "363:   }",
          "366:   if (context_flag == userContext || context_flag == newContext) {",
          "372:     CloneObject(args.This(), sandbox, context->Global()->GetPrototype());",
          "",
          "[Removed Lines]",
          "368:     context->Enter();",
          "",
          "[Added Lines]",
          "371:   Context::Scope context_scope(context);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "408:   if (output_flag == returnResult) {",
          "409:     result = script->Run();",
          "410:     if (result.IsEmpty()) {",
          "416:       return try_catch.ReThrow();",
          "417:     }",
          "418:   } else {",
          "",
          "[Removed Lines]",
          "411:       if (context_flag == newContext) {",
          "412:         context->DetachGlobal();",
          "413:         context->Exit();",
          "414:         context.Dispose();",
          "415:       }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "430:     CloneObject(args.This(), context->Global()->GetPrototype(), sandbox);",
          "431:   }",
          "443:   return result == args.This() ? result : scope.Close(result);",
          "444: }",
          "",
          "[Removed Lines]",
          "433:   if (context_flag == newContext) {",
          "435:     context->DetachGlobal();",
          "436:     context->Exit();",
          "437:     context.Dispose();",
          "438:   } else if (context_flag == userContext) {",
          "440:     context->Exit();",
          "441:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bca88b2dc120879c8e427db8bbc16a3f104e4cb4",
      "candidate_info": {
        "commit_hash": "bca88b2dc120879c8e427db8bbc16a3f104e4cb4",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/bca88b2dc120879c8e427db8bbc16a3f104e4cb4",
        "files": [
          "node.gyp",
          "vcbuild.bat"
        ],
        "message": "support nosnapshot in vcbuild.bat",
        "before_after_code_files": [
          "node.gyp||node.gyp",
          "vcbuild.bat||vcbuild.bat"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "node.gyp||node.gyp": [
          "File: node.gyp -> node.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: {",
          "2:   'variables': {",
          "4:     # Turn off -Werror in V8",
          "5:     # See http://codereview.chromium.org/8159015",
          "6:     'werror': '',",
          "",
          "[Removed Lines]",
          "3:     'v8_use_snapshot': 'true',",
          "",
          "[Added Lines]",
          "3:     'v8_use_snapshot%': 'true',",
          "",
          "---------------"
        ],
        "vcbuild.bat||vcbuild.bat": [
          "File: vcbuild.bat -> vcbuild.bat",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: set noprojgen=",
          "18: set nobuild=",
          "19: set nosign=",
          "20: set test=",
          "21: set test_args=",
          "22: set msi=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: set nosnapshot=",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30: if /i \"%1\"==\"noprojgen\"    set noprojgen=1&goto arg-ok",
          "31: if /i \"%1\"==\"nobuild\"      set nobuild=1&goto arg-ok",
          "32: if /i \"%1\"==\"nosign\"       set nosign=1&goto arg-ok",
          "33: if /i \"%1\"==\"test-uv\"      set test=test-uv&goto arg-ok",
          "34: if /i \"%1\"==\"test-internet\"set test=test-internet&goto arg-ok",
          "35: if /i \"%1\"==\"test-pummel\"  set test=test-pummel&goto arg-ok",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34: if /i \"%1\"==\"nosnapshot\"   set nosnapshot=1&goto arg-ok",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "53: if defined noprojgen goto msbuild",
          "55: @rem Generate the VS project.",
          "56: python tools\\gyp_node -f msvs -G msvs_version=2010",
          "57: if errorlevel 1 goto create-msvs-files-failed",
          "58: if not exist node.sln goto create-msvs-files-failed",
          "59: echo Project files generated.",
          "61: :msbuild",
          "62: @rem Skip project generation if requested.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58: if defined nosnapshot goto nosnapshotgen",
          "63: goto msbuild",
          "65: :nosnapshotgen",
          "66: python tools\\gyp_node -f msvs -G msvs_version=2010 -D v8_use_snapshot='false'",
          "67: if errorlevel 1 goto create-msvs-files-failed",
          "68: if not exist node.sln goto create-msvs-files-failed",
          "69: echo Project files generated.",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "db45b2ca02dc23278a477625a8698ce136eb8807",
      "candidate_info": {
        "commit_hash": "db45b2ca02dc23278a477625a8698ce136eb8807",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/db45b2ca02dc23278a477625a8698ce136eb8807",
        "files": [
          "src/node_signal_watcher.cc"
        ],
        "message": "MakeCallback: Use in node_signal_watcher",
        "before_after_code_files": [
          "src/node_signal_watcher.cc||src/node_signal_watcher.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_signal_watcher.cc||src/node_signal_watcher.cc": [
          "File: src/node_signal_watcher.cc -> src/node_signal_watcher.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "63:   Local<Function> callback = Local<Function>::Cast(callback_v);",
          "72: }",
          "74: Handle<Value> SignalWatcher::New(const Arguments& args) {",
          "",
          "[Removed Lines]",
          "65:   TryCatch try_catch;",
          "67:   callback->Call(w->handle_, 0, NULL);",
          "69:   if (try_catch.HasCaught()) {",
          "70:     FatalException(try_catch);",
          "71:   }",
          "",
          "[Added Lines]",
          "65:   MakeCallback(w->handle_, callback, 0, NULL);",
          "",
          "---------------"
        ]
      }
    }
  ]
}