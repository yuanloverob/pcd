{
  "cve_id": "CVE-2017-6952",
  "cve_desc": "Integer overflow in the cs_winkernel_malloc function in winkernel_mm.c in Capstone 3.0.4 and earlier allows attackers to cause a denial of service (heap-based buffer overflow in a kernel driver) or possibly have unspecified other impact via a large value.",
  "repo": "aquynh/capstone",
  "patch_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
  "patch_info": {
    "commit_hash": "6fe86eef621b9849f51a5e1e5d73258a93440403",
    "repo": "aquynh/capstone",
    "commit_url": "https://github.com/aquynh/capstone/commit/6fe86eef621b9849f51a5e1e5d73258a93440403",
    "files": [
      "windows/winkernel_mm.c"
    ],
    "message": "provide a validity check to prevent against Integer overflow conditions (#870)\n\n* provide a validity check to prevent against Integer overflow conditions\n\n* fix some style issues.",
    "before_after_code_files": [
      "windows/winkernel_mm.c||windows/winkernel_mm.c"
    ]
  },
  "patch_diff": {
    "windows/winkernel_mm.c||windows/winkernel_mm.c": [
      "File: windows/winkernel_mm.c -> windows/winkernel_mm.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4: #include \"winkernel_mm.h\"",
      "5: #include <ntddk.h>",
      "8: static const ULONG CS_WINKERNEL_POOL_TAG = 'kwsC';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6: #include <Ntintsafe.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "35: #pragma prefast(suppress : 30030)  // Allocating executable POOL_TYPE memory",
      "38:  if (!block) {",
      "39:   return NULL;",
      "40:  }",
      "",
      "[Removed Lines]",
      "36:  CS_WINKERNEL_MEMBLOCK *block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "37:    NonPagedPool, size + sizeof(CS_WINKERNEL_MEMBLOCK), CS_WINKERNEL_POOL_TAG);",
      "",
      "[Added Lines]",
      "37:  size_t number_of_bytes = 0;",
      "38:  CS_WINKERNEL_MEMBLOCK *block = NULL;",
      "42:  if (!NT_SUCCESS(RtlSizeTAdd(size, sizeof(CS_WINKERNEL_MEMBLOCK), &number_of_bytes))) {",
      "43:   return NULL;",
      "44:  }",
      "45:  block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
      "46:    NonPagedPool, number_of_bytes, CS_WINKERNEL_POOL_TAG);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6ee4994e2458b85b3916c0614117870c108fe456",
      "candidate_info": {
        "commit_hash": "6ee4994e2458b85b3916c0614117870c108fe456",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/6ee4994e2458b85b3916c0614117870c108fe456",
        "files": [
          "arch/X86/X86MappingInsnOp.inc"
        ],
        "message": "[X86] Fix *ax dst register access on some MOV instructions",
        "before_after_code_files": [
          "arch/X86/X86MappingInsnOp.inc||arch/X86/X86MappingInsnOp.inc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/X86/X86MappingInsnOp.inc||arch/X86/X86MappingInsnOp.inc": [
          "File: arch/X86/X86MappingInsnOp.inc -> arch/X86/X86MappingInsnOp.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "5607: },",
          "5609:  0,",
          "5611: },",
          "5613:  0,",
          "5615: },",
          "5617:  0,",
          "",
          "[Removed Lines]",
          "5610:  { CS_AC_IGNORE, CS_AC_READ, 0 }",
          "5614:  { CS_AC_IGNORE, CS_AC_READ, 0 }",
          "",
          "[Added Lines]",
          "5610:  { CS_AC_WRITE, CS_AC_READ, 0 }",
          "5614:  { CS_AC_WRITE, CS_AC_READ, 0 }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5675: },",
          "5677:  0,",
          "5679: },",
          "5681:  0,",
          "5683: },",
          "5685:  0,",
          "",
          "[Removed Lines]",
          "5678:  { CS_AC_IGNORE, CS_AC_READ, 0 }",
          "5682:  { CS_AC_IGNORE, CS_AC_READ, 0 }",
          "",
          "[Added Lines]",
          "5678:  { CS_AC_WRITE, CS_AC_READ, 0 }",
          "5682:  { CS_AC_WRITE, CS_AC_READ, 0 }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5759: },",
          "5761:  0,",
          "5763: },",
          "5765:  0,",
          "",
          "[Removed Lines]",
          "5762:  { CS_AC_IGNORE, CS_AC_READ, 0 }",
          "",
          "[Added Lines]",
          "5762:  { CS_AC_WRITE, CS_AC_READ, 0 }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d9f96e7b146418c2743803994425bd8efba24e71",
      "candidate_info": {
        "commit_hash": "d9f96e7b146418c2743803994425bd8efba24e71",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/d9f96e7b146418c2743803994425bd8efba24e71",
        "files": [
          "suite/arm/test_arm_regression.c"
        ],
        "message": "fixed issue #726 (snprintf undefined in test_arm_regression)",
        "before_after_code_files": [
          "suite/arm/test_arm_regression.c||suite/arm/test_arm_regression.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "suite/arm/test_arm_regression.c||suite/arm/test_arm_regression.c": [
          "File: suite/arm/test_arm_regression.c -> suite/arm/test_arm_regression.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: #endif",
          "9: #include <stdio.h>",
          "10: #include <stdlib.h>",
          "",
          "[Removed Lines]",
          "5: #ifdef _MSC_VER",
          "",
          "[Added Lines]",
          "5: #if defined(_MSC_VER) && _MSC_VER < 1900",
          "6: #define _CRT_SECURE_NO_WARNINGS",
          "7: #define snprintf _snprintf",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9edf92cccd0bb0b77d19587015b9eaba2833d73c",
      "candidate_info": {
        "commit_hash": "9edf92cccd0bb0b77d19587015b9eaba2833d73c",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/9edf92cccd0bb0b77d19587015b9eaba2833d73c",
        "files": [
          "bindings/python/setup.py",
          "pkgconfig.mk"
        ],
        "message": "Python: Automatically conform to PEP440 for version numbers. ported from Unicorn Python binding",
        "before_after_code_files": [
          "bindings/python/setup.py||bindings/python/setup.py",
          "pkgconfig.mk||pkgconfig.mk"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/python/setup.py||bindings/python/setup.py": [
          "File: bindings/python/setup.py -> bindings/python/setup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: from setuptools.command.bdist_egg import bdist_egg",
          "16: SYSTEM = sys.platform",
          "19: # adapted from commit e504b81 of Nguyen Tan Cong",
          "20: # Reference: https://docs.python.org/2/library/platform.html#cross-platform",
          "",
          "[Removed Lines]",
          "17: VERSION = '4.0.0'",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "27: SRC_DIR = os.path.join(ROOT_DIR, 'src')",
          "28: BUILD_DIR = SRC_DIR if os.path.exists(SRC_DIR) else os.path.join(ROOT_DIR, '../..')",
          "30: if SYSTEM == 'darwin':",
          "31:     VERSIONED_LIBRARY_FILE = \"libcapstone.4.dylib\"",
          "32:     LIBRARY_FILE = \"libcapstone.dylib\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: # Parse version from pkgconfig.mk",
          "30: VERSION_DATA = {}",
          "31: with open(os.path.join(BUILD_DIR, 'pkgconfig.mk')) as fp:",
          "32:     lines = fp.readlines()",
          "33:     for line in lines:",
          "34:         line = line.strip()",
          "35:         if len(line) == 0:",
          "36:             continue",
          "37:         if line.startswith('#'):",
          "38:             continue",
          "39:         if '=' not in line:",
          "40:             continue",
          "42:         k, v = line.split('=', 1)",
          "43:         k = k.strip()",
          "44:         v = v.strip()",
          "45:         if len(k) == 0 or len(v) == 0:",
          "46:             continue",
          "47:         VERSION_DATA[k] = v",
          "49: if 'PKG_MAJOR' not in VERSION_DATA or \\",
          "50:         'PKG_MINOR' not in VERSION_DATA or \\",
          "51:         'PKG_EXTRA' not in VERSION_DATA:",
          "52:     raise Exception(\"Malformed pkgconfig.mk\")",
          "54: if 'PKG_TAG' in VERSION_DATA:",
          "55:     VERSION = '{PKG_MAJOR}.{PKG_MINOR}.{PKG_EXTRA}.{PKG_TAG}'.format(**VERSION_DATA)",
          "56: else:",
          "57:     VERSION = '{PKG_MAJOR}.{PKG_MINOR}.{PKG_EXTRA}'.format(**VERSION_DATA)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "69:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"RELEASE_NOTES\")))",
          "70:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"make.sh\")))",
          "71:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"CMakeLists.txt\")))",
          "73:     for filename in src:",
          "74:         outpath = os.path.join(SRC_DIR, os.path.basename(filename))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "101:     src.extend(glob.glob(os.path.join(BUILD_DIR, \"pkgconfig.mk\")))",
          "",
          "---------------"
        ],
        "pkgconfig.mk||pkgconfig.mk": [
          "File: pkgconfig.mk -> pkgconfig.mk",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: PKG_MINOR = 0",
          "8: # version bugfix level. Example: PKG_EXTRA = 1",
          "",
          "[Removed Lines]",
          "9: PKG_EXTRA =",
          "",
          "[Added Lines]",
          "9: PKG_EXTRA = 0",
          "11: # version tag. Examples: rc1, b2, post1",
          "12: PKG_TAG = rc1",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0dc28bf7b236ff8b178e295f68fe0e70a8144aa7",
      "candidate_info": {
        "commit_hash": "0dc28bf7b236ff8b178e295f68fe0e70a8144aa7",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/0dc28bf7b236ff8b178e295f68fe0e70a8144aa7",
        "files": [
          "bindings/python/capstone/__init__.py"
        ],
        "message": "__getattr__ should raise AttributeError, not return None, on failure\n\nFix for issue #624",
        "before_after_code_files": [
          "bindings/python/capstone/__init__.py||bindings/python/capstone/__init__.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bindings/python/capstone/__init__.py||bindings/python/capstone/__init__.py": [
          "File: bindings/python/capstone/__init__.py -> bindings/python/capstone/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "618:         attr = object.__getattribute__",
          "619:         if not attr(self, '_cs')._detail:",
          "621:         _dict = attr(self, '__dict__')",
          "622:         if 'operands' not in _dict:",
          "623:             self.__gen_detail()",
          "624:         if name not in _dict:",
          "626:         return _dict[name]",
          "628:     # get the last error code",
          "",
          "[Removed Lines]",
          "620:             return None",
          "625:             return None",
          "",
          "[Added Lines]",
          "620:             raise AttributeError(name)",
          "625:             raise AttributeError(name)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f39fada1322e5bd7c193381dbbb4802c0ae60229",
      "candidate_info": {
        "commit_hash": "f39fada1322e5bd7c193381dbbb4802c0ae60229",
        "repo": "aquynh/capstone",
        "commit_url": "https://github.com/aquynh/capstone/commit/f39fada1322e5bd7c193381dbbb4802c0ae60229",
        "files": [
          "windows/winkernel_mm.c"
        ],
        "message": "fix #748",
        "before_after_code_files": [
          "windows/winkernel_mm.c||windows/winkernel_mm.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/NeatNerdPrime/capstone/pull/17"
        ],
        "olp_code_files": {
          "patch": [
            "windows/winkernel_mm.c||windows/winkernel_mm.c"
          ],
          "candidate": [
            "windows/winkernel_mm.c||windows/winkernel_mm.c"
          ]
        }
      },
      "candidate_diff": {
        "windows/winkernel_mm.c||windows/winkernel_mm.c": [
          "File: windows/winkernel_mm.c -> windows/winkernel_mm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:  NT_ASSERT(size);",
          "33:  CS_WINKERNEL_MEMBLOCK *block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(",
          "35:  if (!block) {",
          "36:   return NULL;",
          "37:  }",
          "",
          "[Removed Lines]",
          "34:    NonPagedPoolNx, size + sizeof(CS_WINKERNEL_MEMBLOCK), CS_WINKERNEL_POOL_TAG);",
          "",
          "[Added Lines]",
          "34:    NonPagedPool, size + sizeof(CS_WINKERNEL_MEMBLOCK), CS_WINKERNEL_POOL_TAG);",
          "",
          "---------------"
        ]
      }
    }
  ]
}