{
  "cve_id": "CVE-2018-8754",
  "cve_desc": "The libevt_record_values_read_event() function in libevt_record_values.c in libevt before 2018-03-17 does not properly check for out-of-bounds values of user SID data size, strings size, or data size. NOTE: the vendor has disputed this as described in libyal/libevt issue 5 on GitHub",
  "repo": "libyal/libevt",
  "patch_hash": "9d2cc3ca0a1612a6b271abcacffc2e3eea42925e",
  "patch_info": {
    "commit_hash": "9d2cc3ca0a1612a6b271abcacffc2e3eea42925e",
    "repo": "libyal/libevt",
    "commit_url": "https://github.com/libyal/libevt/commit/9d2cc3ca0a1612a6b271abcacffc2e3eea42925e",
    "files": [
      "configure.ac",
      "libevt.nuspec",
      "libevt/libevt_libfvalue.h",
      "libevt/libevt_record_values.c",
      "m4/libcdata.m4",
      "m4/libcsplit.m4",
      "m4/libfdata.m4",
      "runtests.sh"
    ],
    "message": "Applied updates and addition boundary checks for corrupted data",
    "before_after_code_files": [
      "configure.ac||configure.ac",
      "libevt.nuspec||libevt.nuspec",
      "libevt/libevt_libfvalue.h||libevt/libevt_libfvalue.h",
      "libevt/libevt_record_values.c||libevt/libevt_record_values.c",
      "m4/libcdata.m4||m4/libcdata.m4",
      "m4/libcsplit.m4||m4/libcsplit.m4",
      "m4/libfdata.m4||m4/libfdata.m4",
      "runtests.sh||runtests.sh"
    ]
  },
  "patch_diff": {
    "configure.ac||configure.ac": [
      "File: configure.ac -> configure.ac",
      "--- Hunk 1 ---",
      "[Context before]",
      "3: AC_INIT(",
      "4:  [libevt],",
      "6:  [joachim.metz@gmail.com])",
      "8: AC_CONFIG_SRCDIR(",
      "",
      "[Removed Lines]",
      "5:  [20180125],",
      "",
      "[Added Lines]",
      "5:  [20180317],",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "48: dnl Check if wide character type should be enabled",
      "49: AX_COMMON_CHECK_ENABLE_WIDE_CHARACTER_TYPE",
      "51: dnl Check for type definitions",
      "52: AX_TYPES_CHECK_LOCAL",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "51: dnl Check if verbose output should be enabled",
      "52: AX_COMMON_CHECK_ENABLE_VERBOSE_OUTPUT",
      "54: dnl Check if debug output should be enabled",
      "55: AX_COMMON_CHECK_ENABLE_DEBUG_OUTPUT",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "146: dnl Check if evttools required headers and functions are available",
      "147: AX_EVTTOOLS_CHECK_LOCAL",
      "155: dnl Check if tests required headers and functions are available",
      "156: AX_TESTS_CHECK_LOCAL",
      "",
      "[Removed Lines]",
      "149: dnl Check if libevt should be build with verbose output",
      "150: AX_COMMON_CHECK_ENABLE_VERBOSE_OUTPUT",
      "152: dnl Check if libevt should be build with debug output",
      "153: AX_COMMON_CHECK_ENABLE_DEBUG_OUTPUT",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "libevt.nuspec||libevt.nuspec": [
      "File: libevt.nuspec -> libevt.nuspec",
      "--- Hunk 1 ---",
      "[Context before]",
      "2: <package >",
      "3:   <metadata>",
      "4:     <id>libevt</id>",
      "6:     <authors>Joachim Metz</authors>",
      "7:     <owners>joachimmetz</owners>",
      "8:     <licenseUrl>https://raw.githubusercontent.com/libyal/libevt/master/COPYING</licenseUrl>",
      "",
      "[Removed Lines]",
      "5:     <version>20180125</version>",
      "",
      "[Added Lines]",
      "5:     <version>20180317</version>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "10:     <requireLicenseAcceptance>false</requireLicenseAcceptance>",
      "11:     <title>libevt</title>",
      "12:     <description>Library to access the Windows Event Log (EVT) format</description>",
      "14:     <copyright>Copyright (C) 2011-2018</copyright>",
      "15:     <tags>native</tags>",
      "16:   </metadata>",
      "",
      "[Removed Lines]",
      "13:     <releaseNotes>Release of libevt 20180125</releaseNotes>",
      "",
      "[Added Lines]",
      "13:     <releaseNotes>Release of libevt 20180317</releaseNotes>",
      "",
      "---------------"
    ],
    "libevt/libevt_libfvalue.h||libevt/libevt_libfvalue.h": [
      "File: libevt/libevt_libfvalue.h -> libevt/libevt_libfvalue.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "29: #if defined( HAVE_LOCAL_LIBFVALUE )",
      "31: #include <libfvalue_codepage.h>",
      "32: #include <libfvalue_definitions.h>",
      "33: #include <libfvalue_floating_point.h>",
      "34: #include <libfvalue_integer.h>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "32: #include <libfvalue_data_handle.h>",
      "",
      "---------------"
    ],
    "libevt/libevt_record_values.c||libevt/libevt_record_values.c": [
      "File: libevt/libevt_record_values.c -> libevt/libevt_record_values.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1157:  }",
      "1158:  if( user_sid_size != 0 )",
      "1159:  {",
      "1160:   if( libfvalue_value_type_initialize(",
      "1161:        &( record_values->user_security_identifier ),",
      "1162:        LIBFVALUE_VALUE_TYPE_NT_SECURITY_IDENTIFIER,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1160:   if( user_sid_size > ( ( record_data_size - 4 ) - user_sid_offset ) )",
      "1161:   {",
      "1162:    libcerror_error_set(",
      "1163:     error,",
      "1164:     LIBCERROR_ERROR_DOMAIN_RUNTIME,",
      "1165:     LIBCERROR_RUNTIME_ERROR_VALUE_OUT_OF_BOUNDS,",
      "1166:     \"%s: user SID data size value out of bounds.\",",
      "1167:     function );",
      "1169:    goto on_error;",
      "1170:   }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1218:  }",
      "1219:  if( strings_size != 0 )",
      "1220:  {",
      "1221: #if defined( HAVE_DEBUG_OUTPUT )",
      "1222:   if( libcnotify_verbose != 0 )",
      "1223:   {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1232:   if( strings_size > ( ( record_data_size - 4 ) - strings_offset ) )",
      "1233:   {",
      "1234:    libcerror_error_set(",
      "1235:     error,",
      "1236:     LIBCERROR_ERROR_DOMAIN_RUNTIME,",
      "1237:     LIBCERROR_RUNTIME_ERROR_VALUE_OUT_OF_BOUNDS,",
      "1238:     \"%s: strings size value out of bounds.\",",
      "1239:     function );",
      "1241:    goto on_error;",
      "1242:   }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1285:  }",
      "1286:  if( data_size != 0 )",
      "1287:  {",
      "1288: #if defined( HAVE_DEBUG_OUTPUT )",
      "1289:   if( libcnotify_verbose != 0 )",
      "1290:   {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1310:   if( data_size > ( ( record_data_size - 4 ) - record_data_offset ) )",
      "1311:   {",
      "1312:    libcerror_error_set(",
      "1313:     error,",
      "1314:     LIBCERROR_ERROR_DOMAIN_RUNTIME,",
      "1315:     LIBCERROR_RUNTIME_ERROR_VALUE_OUT_OF_BOUNDS,",
      "1316:     \"%s: data size value out of bounds.\",",
      "1317:     function );",
      "1319:    goto on_error;",
      "1320:   }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1292:     \"%s: data:\\n\",",
      "1293:     function );",
      "1294:    libcnotify_print_data(",
      "1296:     (size_t) data_size,",
      "1297:     LIBCNOTIFY_PRINT_DATA_FLAG_GROUP_DATA );",
      "1298:   }",
      "",
      "[Removed Lines]",
      "1295:     &( record_data[ data_offset ] ),",
      "",
      "[Added Lines]",
      "1328:     &( record_data[ record_data_offset ] ),",
      "",
      "---------------"
    ],
    "m4/libcdata.m4||m4/libcdata.m4": [
      "File: m4/libcdata.m4 -> m4/libcdata.m4",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: dnl Checks for libcdata or required headers and functions",
      "2: dnl",
      "5: dnl Function to detect if libcdata is available",
      "6: dnl ac_libcdata_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
      "",
      "[Removed Lines]",
      "3: dnl Version: 20170904",
      "",
      "[Added Lines]",
      "3: dnl Version: 20180316",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "123:           [ac_cv_libcdata_dummy=yes],",
      "124:           [ac_cv_libcdata=no])",
      "126:         dnl List functions",
      "127:         AC_CHECK_LIB(",
      "128:           cdata,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "126:         dnl Balanced tree functions",
      "127:         AC_CHECK_LIB(",
      "128:           cdata,",
      "129:           libfdata_btree_initialize,",
      "130:           [ac_cv_libcdata_dummy=yes],",
      "131:           [ac_cv_libcdata=no])",
      "132:         AC_CHECK_LIB(",
      "133:           cdata,",
      "134:           libcdata_btree_free,",
      "135:           [ac_cv_libcdata_dummy=yes],",
      "136:           [ac_cv_libcdata=no])",
      "137:         AC_CHECK_LIB(",
      "138:           cdata,",
      "139:           libcdata_btree_get_number_of_values,",
      "140:           [ac_cv_libcdata_dummy=yes],",
      "141:           [ac_cv_libcdata=no])",
      "142:         AC_CHECK_LIB(",
      "143:           cdata,",
      "144:           libcdata_btree_get_value_by_index,",
      "145:           [ac_cv_libcdata_dummy=yes],",
      "146:           [ac_cv_libcdata=no])",
      "147:         AC_CHECK_LIB(",
      "148:           cdata,",
      "149:           libcdata_btree_get_value_by_value,",
      "150:           [ac_cv_libcdata_dummy=yes],",
      "151:           [ac_cv_libcdata=no])",
      "152:         AC_CHECK_LIB(",
      "153:           cdata,",
      "154:           libcdata_btree_insert_value,",
      "155:           [ac_cv_libcdata_dummy=yes],",
      "156:           [ac_cv_libcdata=no])",
      "157:         AC_CHECK_LIB(",
      "158:           cdata,",
      "159:           libcdata_btree_replace_value,",
      "160:           [ac_cv_libcdata_dummy=yes],",
      "161:           [ac_cv_libcdata=no])",
      "162:         AC_CHECK_LIB(",
      "163:           cdata,",
      "164:           libcdata_btree_remove_value,",
      "165:           [ac_cv_libcdata_dummy=yes],",
      "166:           [ac_cv_libcdata=no])",
      "",
      "---------------"
    ],
    "m4/libcsplit.m4||m4/libcsplit.m4": [
      "File: m4/libcsplit.m4 -> m4/libcsplit.m4",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: dnl Checks for libcsplit or required headers and functions",
      "2: dnl",
      "5: dnl Function to detect if libcsplit is available",
      "6: dnl ac_libcsplit_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
      "",
      "[Removed Lines]",
      "3: dnl Version: 20170903",
      "",
      "[Added Lines]",
      "3: dnl Version: 20180217",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "111:         AS_IF(",
      "112:           [test \"x$ac_cv_enable_wide_character_type\" != xno],",
      "113:           [AC_CHECK_LIB(",
      "115:             libcsplit_wide_string_split,",
      "116:             [ac_cv_libcsplit_dummy=yes],",
      "117:             [ac_cv_libcsplit=no])",
      "",
      "[Removed Lines]",
      "114:           csplit,",
      "",
      "[Added Lines]",
      "114:             csplit,",
      "",
      "---------------"
    ],
    "m4/libfdata.m4||m4/libfdata.m4": [
      "File: m4/libfdata.m4 -> m4/libfdata.m4",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: dnl Functions for libfdata",
      "2: dnl",
      "5: dnl Function to detect if libfdata is available",
      "6: dnl ac_libfdata_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
      "",
      "[Removed Lines]",
      "3: dnl Version: 20170905",
      "",
      "[Added Lines]",
      "3: dnl Version: 20180316",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "49:           [ac_cv_libfdata=no])",
      "51:         dnl Area functions",
      "54:         dnl Balanced tree functions",
      "55:         dnl TODO: add functions",
      "",
      "[Removed Lines]",
      "52:         dnl TODO: add functions",
      "",
      "[Added Lines]",
      "52:         AC_CHECK_LIB(",
      "53:           fdata,",
      "54:           libfdata_area_initialize,",
      "55:           [ac_cv_libfdata_dummy=yes],",
      "56:           [ac_cv_libfdata=no])",
      "57:         AC_CHECK_LIB(",
      "58:           fdata,",
      "59:           libfdata_area_free,",
      "60:           [ac_cv_libfdata_dummy=yes],",
      "61:           [ac_cv_libfdata=no])",
      "62:         AC_CHECK_LIB(",
      "63:           fdata,",
      "64:           libfdata_area_clone,",
      "65:           [ac_cv_libfdata_dummy=yes],",
      "66:           [ac_cv_libfdata=no])",
      "67:         AC_CHECK_LIB(",
      "68:           fdata,",
      "69:           libfdata_area_empty,",
      "70:           [ac_cv_libfdata_dummy=yes],",
      "71:           [ac_cv_libfdata=no])",
      "72:         AC_CHECK_LIB(",
      "73:           fdata,",
      "74:           libfdata_area_resize,",
      "75:           [ac_cv_libfdata_dummy=yes],",
      "76:           [ac_cv_libfdata=no])",
      "77:         AC_CHECK_LIB(",
      "78:           fdata,",
      "79:           libfdata_area_get_number_of_segments,",
      "80:           [ac_cv_libfdata_dummy=yes],",
      "81:           [ac_cv_libfdata=no])",
      "82:         AC_CHECK_LIB(",
      "83:           fdata,",
      "84:           libfdata_area_get_segment_by_index,",
      "85:           [ac_cv_libfdata_dummy=yes],",
      "86:           [ac_cv_libfdata=no])",
      "87:         AC_CHECK_LIB(",
      "88:           fdata,",
      "89:           libfdata_area_set_segment_by_index,",
      "90:           [ac_cv_libfdata_dummy=yes],",
      "91:           [ac_cv_libfdata=no])",
      "92:         AC_CHECK_LIB(",
      "93:           fdata,",
      "94:           libfdata_area_prepend_segment,",
      "95:           [ac_cv_libfdata_dummy=yes],",
      "96:           [ac_cv_libfdata=no])",
      "97:         AC_CHECK_LIB(",
      "98:           fdata,",
      "99:           libfdata_area_append_segment,",
      "100:           [ac_cv_libfdata_dummy=yes],",
      "101:           [ac_cv_libfdata=no])",
      "102:         AC_CHECK_LIB(",
      "103:           fdata,",
      "104:           libfdata_area_get_element_data_size,",
      "105:           [ac_cv_libfdata_dummy=yes],",
      "106:           [ac_cv_libfdata=no])",
      "107:         AC_CHECK_LIB(",
      "108:           fdata,",
      "109:           libfdata_area_get_element_value_at_offset,",
      "110:           [ac_cv_libfdata_dummy=yes],",
      "111:           [ac_cv_libfdata=no])",
      "112:         AC_CHECK_LIB(",
      "113:           fdata,",
      "114:           libfdata_area_set_element_value_at_offset,",
      "115:           [ac_cv_libfdata_dummy=yes],",
      "116:           [ac_cv_libfdata=no])",
      "117:         AC_CHECK_LIB(",
      "118:           fdata,",
      "119:           libfdata_area_get_size,",
      "120:           [ac_cv_libfdata_dummy=yes],",
      "121:           [ac_cv_libfdata=no])",
      "",
      "---------------"
    ],
    "runtests.sh||runtests.sh": [
      "File: runtests.sh -> runtests.sh",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #!/bin/bash",
      "2: # Script that runs the tests",
      "3: #",
      "6: EXIT_SUCCESS=0;",
      "7: EXIT_FAILURE=1;",
      "",
      "[Removed Lines]",
      "4: # Version: 20171210",
      "",
      "[Added Lines]",
      "4: # Version: 20180214",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "202: HAVE_ENABLE_WIDE_CHARACTER_TYPE=$?;",
      "204: echo \"${CONFIGURE_HELP}\" | grep -- '--with-zlib' > /dev/null;",
      "206: HAVE_WITH_ZLIB=$?;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "204: echo \"${CONFIGURE_HELP}\" | grep -- '--enable-verbose-output' > /dev/null;",
      "206: HAVE_ENABLE_VERBOSE_OUTPUT=$?;",
      "208: echo \"${CONFIGURE_HELP}\" | grep -- '--enable-debug-output' > /dev/null;",
      "210: HAVE_ENABLE_DEBUG_OUTPUT=$?;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "230:  exit ${EXIT_FAILURE};",
      "231: fi",
      "233: if test ${HAVE_WITH_ZLIB} -eq 0;",
      "234: then",
      "235:  # Test \"./configure && make && make check\" with fallback zlib implementation.",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "241: if test ${HAVE_ENABLE_VERBOSE_OUTPUT} -eq 0 && test ${HAVE_ENABLE_DEBUG_OUTPUT} -eq 0;",
      "242: then",
      "243:  # Test \"./configure && make && make check\" with verbose and debug output.",
      "245:  run_configure_make_check \"--enable-verbose-output --enable-debug-output\";",
      "246:  RESULT=$?;",
      "248:  if test ${RESULT} -ne ${EXIT_SUCCESS};",
      "249:  then",
      "250:   exit ${EXIT_FAILURE};",
      "251:  fi",
      "252: fi",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ab4a3435cbfd310be801969db504b652513462f3",
      "candidate_info": {
        "commit_hash": "ab4a3435cbfd310be801969db504b652513462f3",
        "repo": "libyal/libevt",
        "commit_url": "https://github.com/libyal/libevt/commit/ab4a3435cbfd310be801969db504b652513462f3",
        "files": [
          ".gitignore",
          "acinclude.m4",
          "common/system_string.h",
          "configure.ac",
          "libevt.ini",
          "libevt.nuspec",
          "runtests.sh"
        ],
        "message": "Worked on tests",
        "before_after_code_files": [
          "acinclude.m4||acinclude.m4",
          "common/system_string.h||common/system_string.h",
          "configure.ac||configure.ac",
          "libevt.nuspec||libevt.nuspec",
          "runtests.sh||runtests.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac",
            "libevt.nuspec||libevt.nuspec",
            "runtests.sh||runtests.sh"
          ],
          "candidate": [
            "configure.ac||configure.ac",
            "libevt.nuspec||libevt.nuspec",
            "runtests.sh||runtests.sh"
          ]
        }
      },
      "candidate_diff": {
        "acinclude.m4||acinclude.m4": [
          "File: acinclude.m4 -> acinclude.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Function to detect if libevt dependencies are available",
          "2: AC_DEFUN([AX_LIBEVT_CHECK_LOCAL],",
          "3:   [dnl Check for internationalization functions in libevt/libevt_i18n.c",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: dnl Checks for required headers and functions",
          "2: dnl",
          "3: dnl Version: 20170911",
          "",
          "---------------"
        ],
        "common/system_string.h||common/system_string.h": [
          "File: common/system_string.h -> common/system_string.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "83: #endif",
          "85: #if defined( __BORLANDC__ ) && ( __BORLANDC__ < 0x0560 )",
          "87:  wide_string_vsnwprintf",
          "89: #else",
          "91:  wide_string_vsnwprintf( string, size, format, __VA_ARGS__ )",
          "92: #endif",
          "",
          "[Removed Lines]",
          "86: #define system_string_vsprintf \\",
          "90: #define system_string_vsprintf( string, size, format, ... ) \\",
          "",
          "[Added Lines]",
          "86: #define system_string_vsnprintf \\",
          "90: #define system_string_vsnprintf( string, size, format, ... ) \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "133: #endif",
          "135: #if defined( __BORLANDC__ ) && ( __BORLANDC__ < 0x0560 )",
          "137:  narrow_string_vsnprintf",
          "139: #else",
          "141:  narrow_string_vsnprintf( string, size, format, __VA_ARGS__ )",
          "142: #endif",
          "146: #if defined( _cplusplus )",
          "147: }",
          "148: #endif",
          "",
          "[Removed Lines]",
          "136: #define system_string_vsprintf \\",
          "140: #define system_string_vsprintf( string, size, format, ... ) \\",
          "",
          "[Added Lines]",
          "136: #define system_string_vsnprintf \\",
          "140: #define system_string_vsnprintf( string, size, format, ... ) \\",
          "147: #define system_string_vsprintf system_string_vsnprintf",
          "",
          "---------------"
        ],
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_INIT(",
          "4:  [libevt],",
          "6:  [joachim.metz@gmail.com])",
          "8: AC_CONFIG_SRCDIR(",
          "",
          "[Removed Lines]",
          "5:  [20170913],",
          "",
          "[Added Lines]",
          "5:  [20170924],",
          "",
          "---------------"
        ],
        "libevt.nuspec||libevt.nuspec": [
          "File: libevt.nuspec -> libevt.nuspec",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: <package >",
          "3:   <metadata>",
          "4:     <id>libevt</id>",
          "6:     <authors>Joachim Metz</authors>",
          "7:     <owners>joachimmetz</owners>",
          "8:     <licenseUrl>https://raw.githubusercontent.com/libyal/libevt/master/COPYING</licenseUrl>",
          "",
          "[Removed Lines]",
          "5:     <version>20170913</version>",
          "",
          "[Added Lines]",
          "5:     <version>20170924</version>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10:     <requireLicenseAcceptance>false</requireLicenseAcceptance>",
          "11:     <title>libevt</title>",
          "12:     <description>Library to access the Windows Event Log (EVT) format</description>",
          "14:     <copyright>Copyright (C) 2011-2017</copyright>",
          "15:     <tags>native</tags>",
          "16:   </metadata>",
          "",
          "[Removed Lines]",
          "13:     <releaseNotes>Release of libevt 20170913</releaseNotes>",
          "",
          "[Added Lines]",
          "13:     <releaseNotes>Release of libevt 20170924</releaseNotes>",
          "",
          "---------------"
        ],
        "runtests.sh||runtests.sh": [
          "File: runtests.sh -> runtests.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #!/bin/bash",
          "2: # Script that runs the tests",
          "3: #",
          "6: EXIT_SUCCESS=0;",
          "7: EXIT_FAILURE=1;",
          "",
          "[Removed Lines]",
          "4: # Version: 20170828",
          "",
          "[Added Lines]",
          "4: # Version: 20170717",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "358: CONFIGURE_OPTIONS=\"--enable-shared=no\";",
          "361: then",
          "362:  CONFIGURE_OPTIONS=\"${CONFIGURE_OPTIONS} --enable-wide-character-type\";",
          "363: fi",
          "",
          "[Removed Lines]",
          "360: if test ${HAVE_ENABLE_WIDE_CHARACTER_TYPE};",
          "",
          "[Added Lines]",
          "360: if test ${HAVE_ENABLE_WIDE_CHARACTER_TYPE} -eq 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e23ae4a1fa81729f6f08181813cecad21b5b005d",
      "candidate_info": {
        "commit_hash": "e23ae4a1fa81729f6f08181813cecad21b5b005d",
        "repo": "libyal/libevt",
        "commit_url": "https://github.com/libyal/libevt/commit/e23ae4a1fa81729f6f08181813cecad21b5b005d",
        "files": [
          "appveyor.yml",
          "configure.ac",
          "libevt.nuspec",
          "tests/test_evtinfo.ps1",
          "tests/test_library.ps1"
        ],
        "message": "Worked on tests",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "libevt.nuspec||libevt.nuspec",
          "tests/test_evtinfo.ps1||tests/test_evtinfo.ps1",
          "tests/test_library.ps1||tests/test_library.ps1"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac",
            "libevt.nuspec||libevt.nuspec"
          ],
          "candidate": [
            "configure.ac||configure.ac",
            "libevt.nuspec||libevt.nuspec"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_INIT(",
          "4:  [libevt],",
          "6:  [joachim.metz@gmail.com])",
          "8: AC_CONFIG_SRCDIR(",
          "",
          "[Removed Lines]",
          "5:  [20170909],",
          "",
          "[Added Lines]",
          "5:  [20170910],",
          "",
          "---------------"
        ],
        "libevt.nuspec||libevt.nuspec": [
          "File: libevt.nuspec -> libevt.nuspec",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: <package >",
          "3:   <metadata>",
          "4:     <id>libevt</id>",
          "6:     <authors>Joachim Metz</authors>",
          "7:     <owners>joachimmetz</owners>",
          "8:     <licenseUrl>https://raw.githubusercontent.com/libyal/libevt/master/COPYING</licenseUrl>",
          "",
          "[Removed Lines]",
          "5:     <version>20170909</version>",
          "",
          "[Added Lines]",
          "5:     <version>20170910</version>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10:     <requireLicenseAcceptance>false</requireLicenseAcceptance>",
          "11:     <title>libevt</title>",
          "12:     <description>Library to access the Windows Event Log (EVT) format</description>",
          "14:     <copyright>Copyright (C) 2011-2017</copyright>",
          "15:     <tags>native</tags>",
          "16:   </metadata>",
          "",
          "[Removed Lines]",
          "13:     <releaseNotes>Release of libevt 20170909</releaseNotes>",
          "",
          "[Added Lines]",
          "13:     <releaseNotes>Release of libevt 20170910</releaseNotes>",
          "",
          "---------------"
        ],
        "tests/test_evtinfo.ps1||tests/test_evtinfo.ps1": [
          "File: tests/test_evtinfo.ps1 -> tests/test_evtinfo.ps1",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # Info tool testing script",
          "2: #",
          "5: $ExitSuccess = 0",
          "6: $ExitFailure = 1",
          "",
          "[Removed Lines]",
          "3: # Version: 20170827",
          "",
          "[Added Lines]",
          "3: # Version: 20170910",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "9: $InputGlob = \"*\"",
          "14: {",
          "56: }",
          "57: If (-Not (Test-Path ${TestToolDirectory}))",
          "58: {",
          "",
          "[Removed Lines]",
          "11: $TestToolDirectory = \"..\\msvscpp\\Release\"",
          "13: If (-Not (Test-Path ${TestToolDirectory}))",
          "15:  $TestToolDirectory = \"..\\msvscpp\\VSDebug\"",
          "16: }",
          "17: If (-Not (Test-Path ${TestToolDirectory}))",
          "18: {",
          "19:  $TestToolDirectory = \"..\\vs2010\\Release\"",
          "20: }",
          "21: If (-Not (Test-Path ${TestToolDirectory}))",
          "22: {",
          "23:  $TestToolDirectory = \"..\\vs2010\\VSDebug\"",
          "24: }",
          "25: If (-Not (Test-Path ${TestToolDirectory}))",
          "26: {",
          "27:  $TestToolDirectory = \"..\\vs2012\\Release\"",
          "28: }",
          "29: If (-Not (Test-Path ${TestToolDirectory}))",
          "30: {",
          "31:  $TestToolDirectory = \"..\\vs2012\\VSDebug\"",
          "32: }",
          "33: If (-Not (Test-Path ${TestToolDirectory}))",
          "34: {",
          "35:  $TestToolDirectory = \"..\\vs2013\\Release\"",
          "36: }",
          "37: If (-Not (Test-Path ${TestToolDirectory}))",
          "38: {",
          "39:  $TestToolDirectory = \"..\\vs2013\\VSDebug\"",
          "40: }",
          "41: If (-Not (Test-Path ${TestToolDirectory}))",
          "42: {",
          "43:  $TestToolDirectory = \"..\\vs2015\\Release\"",
          "44: }",
          "45: If (-Not (Test-Path ${TestToolDirectory}))",
          "46: {",
          "47:  $TestToolDirectory = \"..\\vs2015\\VSDebug\"",
          "48: }",
          "49: If (-Not (Test-Path ${TestToolDirectory}))",
          "50: {",
          "51:  $TestToolDirectory = \"..\\vs2017\\Release\"",
          "52: }",
          "53: If (-Not (Test-Path ${TestToolDirectory}))",
          "54: {",
          "55:  $TestToolDirectory = \"..\\vs2017\\VSDebug\"",
          "",
          "[Added Lines]",
          "11: $TestToolDirectory = \"\"",
          "13: ForEach (${VSDirectory} in \"msvscpp vs2008 vs2010 vs2012 vs2013 vs2015 vs2017\" -split \" \")",
          "15:  ForEach (${VSConfiguration} in \"Release VSDebug\" -split \" \")",
          "16:  {",
          "17:   $TestToolDirectory = \"..\\${VSDirectory}\\${VSConfiguration}\"",
          "19:   If (Test-Path ${TestToolDirectory})",
          "20:   {",
          "21:    Break",
          "22:   }",
          "23:   ForEach (${VSPlatform} in \"Win32 x64\" -split \" \")",
          "24:   {",
          "25:    $TestToolDirectory = \"..\\${VSDirectory}\\${VSConfiguration}\\${VSPlatform}\"",
          "27:    If (Test-Path ${TestToolDirectory})",
          "28:    {",
          "29:     Break",
          "30:    }",
          "31:   }",
          "32:  }",
          "",
          "---------------"
        ],
        "tests/test_library.ps1||tests/test_library.ps1": [
          "File: tests/test_library.ps1 -> tests/test_library.ps1",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # Tests C library functions and types.",
          "2: #",
          "5: $ExitSuccess = 0",
          "6: $ExitFailure = 1",
          "",
          "[Removed Lines]",
          "3: # Version: 20170902",
          "",
          "[Added Lines]",
          "3: # Version: 20170910",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "9: $LibraryTests = \"error io_handle notify record record_values\"",
          "10: $LibraryTestsWithInput = \"file support\"",
          "14: Function RunTest",
          "15: {",
          "16:  param( [string]$TestType )",
          "",
          "[Removed Lines]",
          "12: $TestToolDirectory = \"..\\msvscpp\\Release\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "38:  Return ${Result}",
          "39: }",
          "82: {",
          "84: }",
          "85: If (-Not (Test-Path ${TestToolDirectory}))",
          "86: {",
          "",
          "[Removed Lines]",
          "41: If (-Not (Test-Path ${TestToolDirectory}))",
          "42: {",
          "43:  $TestToolDirectory = \"..\\msvscpp\\VSDebug\"",
          "44: }",
          "45: If (-Not (Test-Path ${TestToolDirectory}))",
          "46: {",
          "47:  $TestToolDirectory = \"..\\vs2010\\Release\"",
          "48: }",
          "49: If (-Not (Test-Path ${TestToolDirectory}))",
          "50: {",
          "51:  $TestToolDirectory = \"..\\vs2010\\VSDebug\"",
          "52: }",
          "53: If (-Not (Test-Path ${TestToolDirectory}))",
          "54: {",
          "55:  $TestToolDirectory = \"..\\vs2012\\Release\"",
          "56: }",
          "57: If (-Not (Test-Path ${TestToolDirectory}))",
          "58: {",
          "59:  $TestToolDirectory = \"..\\vs2012\\VSDebug\"",
          "60: }",
          "61: If (-Not (Test-Path ${TestToolDirectory}))",
          "62: {",
          "63:  $TestToolDirectory = \"..\\vs2013\\Release\"",
          "64: }",
          "65: If (-Not (Test-Path ${TestToolDirectory}))",
          "66: {",
          "67:  $TestToolDirectory = \"..\\vs2013\\VSDebug\"",
          "68: }",
          "69: If (-Not (Test-Path ${TestToolDirectory}))",
          "70: {",
          "71:  $TestToolDirectory = \"..\\vs2015\\Release\"",
          "72: }",
          "73: If (-Not (Test-Path ${TestToolDirectory}))",
          "74: {",
          "75:  $TestToolDirectory = \"..\\vs2015\\VSDebug\"",
          "76: }",
          "77: If (-Not (Test-Path ${TestToolDirectory}))",
          "78: {",
          "79:  $TestToolDirectory = \"..\\vs2017\\Release\"",
          "80: }",
          "81: If (-Not (Test-Path ${TestToolDirectory}))",
          "83:  $TestToolDirectory = \"..\\vs2017\\VSDebug\"",
          "",
          "[Added Lines]",
          "39: $TestToolDirectory = \"\"",
          "41: ForEach (${VSDirectory} in \"msvscpp vs2008 vs2010 vs2012 vs2013 vs2015 vs2017\" -split \" \")",
          "43:  ForEach (${VSConfiguration} in \"Release VSDebug\" -split \" \")",
          "44:  {",
          "45:   $TestToolDirectory = \"..\\${VSDirectory}\\${VSConfiguration}\"",
          "47:   If (Test-Path ${TestToolDirectory})",
          "48:   {",
          "49:    Break",
          "50:   }",
          "51:   ForEach (${VSPlatform} in \"Win32 x64\" -split \" \")",
          "52:   {",
          "53:    $TestToolDirectory = \"..\\${VSDirectory}\\${VSConfiguration}\\${VSPlatform}\"",
          "55:    If (Test-Path ${TestToolDirectory})",
          "56:    {",
          "57:     Break",
          "58:    }",
          "59:   }",
          "60:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a7e151a18326bb8b9348ef2c4c893672a18fd0a9",
      "candidate_info": {
        "commit_hash": "a7e151a18326bb8b9348ef2c4c893672a18fd0a9",
        "repo": "libyal/libevt",
        "commit_url": "https://github.com/libyal/libevt/commit/a7e151a18326bb8b9348ef2c4c893672a18fd0a9",
        "files": [
          "configure.ac",
          "libevt.nuspec",
          "m4/libbfio.m4",
          "m4/libcdirectory.m4",
          "m4/libcfile.m4",
          "m4/libclocale.m4",
          "m4/libcpath.m4",
          "m4/libcsplit.m4",
          "m4/libfwevt.m4",
          "setup.py"
        ],
        "message": "Applied updates",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "libevt.nuspec||libevt.nuspec",
          "m4/libbfio.m4||m4/libbfio.m4",
          "m4/libcdirectory.m4||m4/libcdirectory.m4",
          "m4/libcfile.m4||m4/libcfile.m4",
          "m4/libclocale.m4||m4/libclocale.m4",
          "m4/libcpath.m4||m4/libcpath.m4",
          "m4/libcsplit.m4||m4/libcsplit.m4",
          "m4/libfwevt.m4||m4/libfwevt.m4",
          "setup.py||setup.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac",
            "libevt.nuspec||libevt.nuspec",
            "m4/libcsplit.m4||m4/libcsplit.m4"
          ],
          "candidate": [
            "configure.ac||configure.ac",
            "libevt.nuspec||libevt.nuspec",
            "m4/libcsplit.m4||m4/libcsplit.m4"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_INIT(",
          "4:  [libevt],",
          "6:  [joachim.metz@gmail.com])",
          "8: AC_CONFIG_SRCDIR(",
          "",
          "[Removed Lines]",
          "5:  [20180401],",
          "",
          "[Added Lines]",
          "5:  [20180410],",
          "",
          "---------------"
        ],
        "libevt.nuspec||libevt.nuspec": [
          "File: libevt.nuspec -> libevt.nuspec",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: <package >",
          "3:   <metadata>",
          "4:     <id>libevt</id>",
          "6:     <authors>Joachim Metz</authors>",
          "7:     <owners>joachimmetz</owners>",
          "8:     <licenseUrl>https://raw.githubusercontent.com/libyal/libevt/master/COPYING</licenseUrl>",
          "",
          "[Removed Lines]",
          "5:     <version>20180401</version>",
          "",
          "[Added Lines]",
          "5:     <version>20180410</version>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10:     <requireLicenseAcceptance>false</requireLicenseAcceptance>",
          "11:     <title>libevt</title>",
          "12:     <description>Library to access the Windows Event Log (EVT) format</description>",
          "14:     <copyright>Copyright (C) 2011-2018</copyright>",
          "15:     <tags>native</tags>",
          "16:   </metadata>",
          "",
          "[Removed Lines]",
          "13:     <releaseNotes>Release of libevt 20180401</releaseNotes>",
          "",
          "[Added Lines]",
          "13:     <releaseNotes>Release of libevt 20180410</releaseNotes>",
          "",
          "---------------"
        ],
        "m4/libbfio.m4||m4/libbfio.m4": [
          "File: m4/libbfio.m4 -> m4/libbfio.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Checks for libbfio or required headers and functions",
          "2: dnl",
          "5: dnl Function to detect if libbfio is available",
          "6: AC_DEFUN([AX_LIBBFIO_CHECK_LIB],",
          "",
          "[Removed Lines]",
          "3: dnl Version: 20170912",
          "",
          "[Added Lines]",
          "3: dnl Version: 20180407",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "39:            [[#include <libbfio/features.h>]],",
          "40:            [[#if !defined( LIBBFIO_HAVE_WIDE_CHARACTER_TYPE ) || ( LIBBFIO_HAVE_WIDE_CHARACTER_TYPE != 1 )",
          "41: #error LIBBFIO_HAVE_WIDE_CHARACTER_TYPE not defined",
          "43:          [ac_cv_header_libbfio_features_h_have_wide_character_type=yes],",
          "44:          [ac_cv_header_libbfio_features_h_have_wide_character_type=no])",
          "45:        AC_LANG_POP(C)],",
          "",
          "[Removed Lines]",
          "42: ##endif]] )],",
          "",
          "[Added Lines]",
          "42: #endif]] )],",
          "",
          "---------------"
        ],
        "m4/libcdirectory.m4||m4/libcdirectory.m4": [
          "File: m4/libcdirectory.m4 -> m4/libcdirectory.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Checks for libcdirectory or required headers and functions",
          "2: dnl",
          "5: dnl Function to detect if libcdirectory is available",
          "6: dnl ac_libcdirectory_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "",
          "[Removed Lines]",
          "3: dnl Version: 20170904",
          "",
          "[Added Lines]",
          "3: dnl Version: 20180407",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:            [[#include <libcdirectory/features.h>]],",
          "41:            [[#if !defined( LIBCDIRECTORY_HAVE_WIDE_CHARACTER_TYPE ) || ( LIBCDIRECTORY_HAVE_WIDE_CHARACTER_TYPE != 1 )",
          "42: #error LIBCDIRECTORY_HAVE_WIDE_CHARACTER_TYPE not defined",
          "44:          [ac_cv_header_libcdirectory_features_h_have_wide_character_type=yes],",
          "45:          [ac_cv_header_libcdirectory_features_h_have_wide_character_type=no])",
          "46:        AC_LANG_POP(C)],",
          "",
          "[Removed Lines]",
          "43: ##endif]] )],",
          "",
          "[Added Lines]",
          "43: #endif]] )],",
          "",
          "---------------"
        ],
        "m4/libcfile.m4||m4/libcfile.m4": [
          "File: m4/libcfile.m4 -> m4/libcfile.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Checks for libcfile or required headers and functions",
          "2: dnl",
          "5: dnl Function to detect if libcfile is available",
          "6: dnl ac_libcfile_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "",
          "[Removed Lines]",
          "3: dnl Version: 20170904",
          "",
          "[Added Lines]",
          "3: dnl Version: 20180407",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:            [[#include <libcfile/features.h>]],",
          "41:            [[#if !defined( LIBCFILE_HAVE_WIDE_CHARACTER_TYPE ) || ( LIBCFILE_HAVE_WIDE_CHARACTER_TYPE != 1 )",
          "42: #error LIBCFILE_HAVE_WIDE_CHARACTER_TYPE not defined",
          "44:          [ac_cv_header_libcfile_features_h_have_wide_character_type=yes],",
          "45:          [ac_cv_header_libcfile_features_h_have_wide_character_type=no])",
          "46:        AC_LANG_POP(C)],",
          "",
          "[Removed Lines]",
          "43: ##endif]] )],",
          "",
          "[Added Lines]",
          "43: #endif]] )],",
          "",
          "---------------"
        ],
        "m4/libclocale.m4||m4/libclocale.m4": [
          "File: m4/libclocale.m4 -> m4/libclocale.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Checks for libclocale or required headers and functions",
          "2: dnl",
          "5: dnl Function to detect if libclocale is available",
          "6: dnl ac_libclocale_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "",
          "[Removed Lines]",
          "3: dnl Version: 20170904",
          "",
          "[Added Lines]",
          "3: dnl Version: 20180407",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:            [[#include <libclocale/features.h>]],",
          "41:            [[#if !defined( LIBCLOCALE_HAVE_WIDE_CHARACTER_TYPE ) || ( LIBCLOCALE_HAVE_WIDE_CHARACTER_TYPE != 1 )",
          "42: #error LIBCLOCALE_HAVE_WIDE_CHARACTER_TYPE not defined",
          "44:          [ac_cv_header_libclocale_features_h_have_wide_character_type=yes],",
          "45:          [ac_cv_header_libclocale_features_h_have_wide_character_type=no])",
          "46:        AC_LANG_POP(C)],",
          "",
          "[Removed Lines]",
          "43: ##endif]] )],",
          "",
          "[Added Lines]",
          "43: #endif]] )],",
          "",
          "---------------"
        ],
        "m4/libcpath.m4||m4/libcpath.m4": [
          "File: m4/libcpath.m4 -> m4/libcpath.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Checks for libcpath or required headers and functions",
          "2: dnl",
          "5: dnl Function to detect if libcpath is available",
          "6: dnl ac_libcpath_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "",
          "[Removed Lines]",
          "3: dnl Version: 20170904",
          "",
          "[Added Lines]",
          "3: dnl Version: 20180407",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:            [[#include <libcpath/features.h>]],",
          "41:            [[#if !defined( LIBCPATH_HAVE_WIDE_CHARACTER_TYPE ) || ( LIBCPATH_HAVE_WIDE_CHARACTER_TYPE != 1 )",
          "42: #error LIBCPATH_HAVE_WIDE_CHARACTER_TYPE not defined",
          "44:          [ac_cv_header_libcpath_features_h_have_wide_character_type=yes],",
          "45:          [ac_cv_header_libcpath_features_h_have_wide_character_type=no])",
          "46:        AC_LANG_POP(C)],",
          "",
          "[Removed Lines]",
          "43: ##endif]] )],",
          "",
          "[Added Lines]",
          "43: #endif]] )],",
          "",
          "---------------"
        ],
        "m4/libcsplit.m4||m4/libcsplit.m4": [
          "File: m4/libcsplit.m4 -> m4/libcsplit.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Checks for libcsplit or required headers and functions",
          "2: dnl",
          "5: dnl Function to detect if libcsplit is available",
          "6: dnl ac_libcsplit_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "",
          "[Removed Lines]",
          "3: dnl Version: 20180217",
          "",
          "[Added Lines]",
          "3: dnl Version: 20180407",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:            [[#include <libcsplit/features.h>]],",
          "41:            [[#if !defined( LIBCSPLIT_HAVE_WIDE_CHARACTER_TYPE ) || ( LIBCSPLIT_HAVE_WIDE_CHARACTER_TYPE != 1 )",
          "42: #error LIBCSPLIT_HAVE_WIDE_CHARACTER_TYPE not defined",
          "44:          [ac_cv_header_libcsplit_features_h_have_wide_character_type=yes],",
          "45:          [ac_cv_header_libcsplit_features_h_have_wide_character_type=no])",
          "46:        AC_LANG_POP(C)],",
          "",
          "[Removed Lines]",
          "43: ##endif]] )],",
          "",
          "[Added Lines]",
          "43: #endif]] )],",
          "",
          "---------------"
        ],
        "m4/libfwevt.m4||m4/libfwevt.m4": [
          "File: m4/libfwevt.m4 -> m4/libfwevt.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Functions for libfwevt",
          "2: dnl",
          "5: dnl Function to detect if libfwevt is available",
          "6: dnl ac_libfwevt_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "",
          "[Removed Lines]",
          "3: dnl Version: 20170908",
          "",
          "[Added Lines]",
          "3: dnl Version: 20180404",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "478:           [ac_cv_libfwevt_dummy=yes],",
          "479:           [ac_cv_libfwevt=no])",
          "490:         dnl XML tag functions",
          "492:         AC_CHECK_LIB(",
          "493:           fwevt,",
          "494:           libfwevt_xml_tag_get_utf8_name_size,",
          "",
          "[Removed Lines]",
          "481:         AS_IF(",
          "482:           [test \"x$ac_cv_enable_debug_output\" != xno ],",
          "483:           [AC_CHECK_LIB(",
          "484:             fwevt,",
          "485:             libfwevt_xml_document_debug_print,",
          "486:             [ac_cv_libfwevt_dummy=yes],",
          "487:             [ac_cv_libfwevt=no])",
          "488:         ])",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "583:       ])",
          "584:     ])",
          "586:   AS_IF(",
          "587:     [test \"x$ac_cv_libfwevt\" = xyes],",
          "588:     [AC_DEFINE(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "560:   dnl Check for debug functions",
          "561:   AS_IF(",
          "562:     [test \"x$ac_cv_libfwevt\" = xyes && test \"x$ac_cv_enable_debug_output\" != xno],",
          "563:     [AC_CHECK_LIB(",
          "564:       fwevt,",
          "565:       libfwevt_xml_document_debug_print,",
          "566:       [ac_cv_libfwevt_dummy=yes],",
          "567:       [ac_cv_libfwevt=no])",
          "568:     ])",
          "",
          "---------------"
        ],
        "setup.py||setup.py": [
          "File: setup.py -> setup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #!/usr/bin/env python",
          "2: #",
          "3: # Script to build and install Python-bindings.",
          "6: from __future__ import print_function",
          "7: import glob",
          "8: import platform",
          "9: import os",
          "10: import shlex",
          "11: import shutil",
          "12: import subprocess",
          "13: import sys",
          "15: from distutils import sysconfig",
          "16: from distutils.ccompiler import new_compiler",
          "17: from distutils.command.build_ext import build_ext",
          "",
          "[Removed Lines]",
          "4: # Version: 20180317",
          "",
          "[Added Lines]",
          "4: # Version: 20180408",
          "8: import gzip",
          "15: import tarfile",
          "17: from distutils import dist",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "160:     sdist_package_file = os.path.join(\"dist\", sdist_package_file)",
          "161:     os.rename(source_package_file, sdist_package_file)",
          "163:     # Inform distutils what files were created.",
          "164:     dist_files = getattr(self.distribution, \"dist_files\", [])",
          "165:     dist_files.append((\"sdist\", \"\", sdist_package_file))",
          "171: class ProjectInformation(object):",
          "172:   \"\"\"Project information.\"\"\"",
          "",
          "[Removed Lines]",
          "167:     # Make sure PKG-INFO is generated.",
          "168:     sdist.run(self)",
          "",
          "[Added Lines]",
          "166:     # Create and add the PKG-INFO file to the source package.",
          "167:     with gzip.open(sdist_package_file, 'rb') as input_file:",
          "168:       with open(sdist_package_file[:-3], 'wb') as output_file:",
          "169:         shutil.copyfileobj(input_file, output_file)",
          "170:     os.remove(sdist_package_file)",
          "172:     self.distribution.metadata.write_pkg_info(\".\")",
          "173:     pkg_info_path = \"{0:s}-{1:s}/PKG-INFO\".format(",
          "174:         source_package_prefix, source_package_suffix[:-7])",
          "175:     with tarfile.open(sdist_package_file[:-3], \"a:\") as tar_file:",
          "176:       tar_file.add(\"PKG-INFO\", arcname=pkg_info_path)",
          "177:     os.remove(\"PKG-INFO\")",
          "179:     with open(sdist_package_file[:-3], 'rb') as input_file:",
          "180:       with gzip.open(sdist_package_file, 'wb') as output_file:",
          "181:         shutil.copyfileobj(input_file, output_file)",
          "182:     os.remove(sdist_package_file[:-3])",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b5792592a9f35c48af7aef74ed6a3ce39f32c5d8",
      "candidate_info": {
        "commit_hash": "b5792592a9f35c48af7aef74ed6a3ce39f32c5d8",
        "repo": "libyal/libevt",
        "commit_url": "https://github.com/libyal/libevt/commit/b5792592a9f35c48af7aef74ed6a3ce39f32c5d8",
        "files": [
          "configure.ac",
          "dpkg/control",
          "libevt.nuspec",
          "tests/test_evtexport.sh",
          "tests/test_evtinfo.ps1",
          "tests/test_evtinfo.sh",
          "tests/test_library.ps1",
          "tests/test_library.sh",
          "tests/test_python_module.sh"
        ],
        "message": "Applied updates",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "libevt.nuspec||libevt.nuspec",
          "tests/test_evtexport.sh||tests/test_evtexport.sh",
          "tests/test_evtinfo.ps1||tests/test_evtinfo.ps1",
          "tests/test_evtinfo.sh||tests/test_evtinfo.sh",
          "tests/test_library.ps1||tests/test_library.ps1",
          "tests/test_library.sh||tests/test_library.sh",
          "tests/test_python_module.sh||tests/test_python_module.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac",
            "libevt.nuspec||libevt.nuspec"
          ],
          "candidate": [
            "configure.ac||configure.ac",
            "libevt.nuspec||libevt.nuspec"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_INIT(",
          "4:  [libevt],",
          "6:  [joachim.metz@gmail.com])",
          "8: AC_CONFIG_SRCDIR(",
          "",
          "[Removed Lines]",
          "5:  [20181216],",
          "",
          "[Added Lines]",
          "5:  [20181227],",
          "",
          "---------------"
        ],
        "libevt.nuspec||libevt.nuspec": [
          "File: libevt.nuspec -> libevt.nuspec",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: <package >",
          "3:   <metadata>",
          "4:     <id>libevt</id>",
          "6:     <authors>Joachim Metz</authors>",
          "7:     <owners>joachimmetz</owners>",
          "8:     <licenseUrl>https://raw.githubusercontent.com/libyal/libevt/master/COPYING</licenseUrl>",
          "",
          "[Removed Lines]",
          "5:     <version>20181216</version>",
          "",
          "[Added Lines]",
          "5:     <version>20181227</version>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10:     <requireLicenseAcceptance>false</requireLicenseAcceptance>",
          "11:     <title>libevt</title>",
          "12:     <description>Library to access the Windows Event Log (EVT) format</description>",
          "14:     <copyright>Copyright (C) 2011-2018</copyright>",
          "15:     <tags>native</tags>",
          "16:   </metadata>",
          "",
          "[Removed Lines]",
          "13:     <releaseNotes>Release of libevt 20181216</releaseNotes>",
          "",
          "[Added Lines]",
          "13:     <releaseNotes>Release of libevt 20181227</releaseNotes>",
          "",
          "---------------"
        ],
        "tests/test_evtexport.sh||tests/test_evtexport.sh": [
          "File: tests/test_evtexport.sh -> tests/test_evtexport.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #!/bin/bash",
          "2: # Export tool testing script",
          "3: #",
          "6: EXIT_SUCCESS=0;",
          "7: EXIT_FAILURE=1;",
          "",
          "[Removed Lines]",
          "4: # Version: 20181111",
          "",
          "[Added Lines]",
          "4: # Version: 20181221",
          "",
          "---------------"
        ],
        "tests/test_evtinfo.ps1||tests/test_evtinfo.ps1": [
          "File: tests/test_evtinfo.ps1 -> tests/test_evtinfo.ps1",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # Info tool testing script",
          "2: #",
          "5: $ExitSuccess = 0",
          "6: $ExitFailure = 1",
          "",
          "[Removed Lines]",
          "3: # Version: 20180805",
          "",
          "[Added Lines]",
          "3: # Version: 20181221",
          "",
          "---------------"
        ],
        "tests/test_evtinfo.sh||tests/test_evtinfo.sh": [
          "File: tests/test_evtinfo.sh -> tests/test_evtinfo.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #!/bin/bash",
          "2: # Info tool testing script",
          "3: #",
          "6: EXIT_SUCCESS=0;",
          "7: EXIT_FAILURE=1;",
          "",
          "[Removed Lines]",
          "4: # Version: 20181111",
          "",
          "[Added Lines]",
          "4: # Version: 20181221",
          "",
          "---------------"
        ],
        "tests/test_library.ps1||tests/test_library.ps1": [
          "File: tests/test_library.ps1 -> tests/test_library.ps1",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # Tests C library functions and types.",
          "2: #",
          "5: $ExitSuccess = 0",
          "6: $ExitFailure = 1",
          "",
          "[Removed Lines]",
          "3: # Version: 20180805",
          "",
          "[Added Lines]",
          "3: # Version: 20181221",
          "",
          "---------------"
        ],
        "tests/test_library.sh||tests/test_library.sh": [
          "File: tests/test_library.sh -> tests/test_library.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #!/bin/bash",
          "2: # Tests C library functions and types.",
          "3: #",
          "6: EXIT_SUCCESS=0;",
          "7: EXIT_FAILURE=1;",
          "",
          "[Removed Lines]",
          "4: # Version: 20180907",
          "",
          "[Added Lines]",
          "4: # Version: 20181221",
          "",
          "---------------"
        ],
        "tests/test_python_module.sh||tests/test_python_module.sh": [
          "File: tests/test_python_module.sh -> tests/test_python_module.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #!/bin/bash",
          "2: # Tests Python module functions and types.",
          "3: #",
          "6: EXIT_SUCCESS=0;",
          "7: EXIT_FAILURE=1;",
          "",
          "[Removed Lines]",
          "4: # Version: 20180728",
          "",
          "[Added Lines]",
          "4: # Version: 20181221",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ef0cd73ce695e66613d26638fe38101af8971e0a",
      "candidate_info": {
        "commit_hash": "ef0cd73ce695e66613d26638fe38101af8971e0a",
        "repo": "libyal/libevt",
        "commit_url": "https://github.com/libyal/libevt/commit/ef0cd73ce695e66613d26638fe38101af8971e0a",
        "files": [
          ".travis.yml",
          "appveyor.yml",
          "configure.ac",
          "include/libevt.h.in",
          "libevt.nuspec",
          "libevt.spec.in",
          "m4/libfcache.m4",
          "m4/libfdata.m4",
          "m4/libfdatetime.m4",
          "m4/libuna.m4",
          "m4/tests.m4",
          "runtests.sh",
          "tests/test_evtexport.sh",
          "tests/test_evtinfo.sh",
          "tests/test_library.sh",
          "tests/test_runner.sh"
        ],
        "message": "Applied updates",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "include/libevt.h.in||include/libevt.h.in",
          "libevt.nuspec||libevt.nuspec",
          "libevt.spec.in||libevt.spec.in",
          "m4/libfcache.m4||m4/libfcache.m4",
          "m4/libfdata.m4||m4/libfdata.m4",
          "m4/libfdatetime.m4||m4/libfdatetime.m4",
          "m4/libuna.m4||m4/libuna.m4",
          "m4/tests.m4||m4/tests.m4",
          "runtests.sh||runtests.sh",
          "tests/test_evtexport.sh||tests/test_evtexport.sh",
          "tests/test_evtinfo.sh||tests/test_evtinfo.sh",
          "tests/test_library.sh||tests/test_library.sh",
          "tests/test_runner.sh||tests/test_runner.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac",
            "libevt.nuspec||libevt.nuspec",
            "m4/libfdata.m4||m4/libfdata.m4",
            "runtests.sh||runtests.sh"
          ],
          "candidate": [
            "configure.ac||configure.ac",
            "libevt.nuspec||libevt.nuspec",
            "m4/libfdata.m4||m4/libfdata.m4",
            "runtests.sh||runtests.sh"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_INIT(",
          "4:  [libevt],",
          "6:  [joachim.metz@gmail.com])",
          "8: AC_CONFIG_SRCDIR(",
          "",
          "[Removed Lines]",
          "5:  [20180807],",
          "",
          "[Added Lines]",
          "5:  [20181115],",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "117: AS_IF(",
          "118:   [test \"x${ac_cv_enable_python}\" != xno || test \"x${ac_cv_enable_python2}\" != xno || test \"x${ac_cv_enable_python3}\" != xno],",
          "121:   AS_IF(",
          "122:     [test \"x$ac_cv_header_stdarg_h\" != xyes && test \"x$ac_cv_header_varargs_h\" != xyes],",
          "125:       [Missing headers: stdarg.h and varargs.h],",
          "126:       [1])",
          "127:     ])",
          "",
          "[Removed Lines]",
          "119:   [AC_CHECK_HEADERS([stdarg.h varargs.h])",
          "123:     [dnl Headers included in pyevt/pyevt_error.c",
          "124:     AC_MSG_FAILURE(",
          "",
          "[Added Lines]",
          "119:   [dnl Headers included in pyevt/pyevt_error.c",
          "120:   AC_CHECK_HEADERS([stdarg.h varargs.h])",
          "124:     [AC_MSG_FAILURE(",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "181:  [AC_SUBST(",
          "182:   [libevt_spec_requires],",
          "183:   [Requires:])",
          "187:  ])",
          "189: AS_IF(",
          "",
          "[Removed Lines]",
          "184:  AC_SUBST(",
          "185:   [libevt_spec_build_requires],",
          "186:   [BuildRequires:])",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "include/libevt.h.in||include/libevt.h.in": [
          "File: include/libevt.h.in -> include/libevt.h.in"
        ],
        "libevt.nuspec||libevt.nuspec": [
          "File: libevt.nuspec -> libevt.nuspec",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: <package >",
          "3:   <metadata>",
          "4:     <id>libevt</id>",
          "6:     <authors>Joachim Metz</authors>",
          "7:     <owners>joachimmetz</owners>",
          "8:     <licenseUrl>https://raw.githubusercontent.com/libyal/libevt/master/COPYING</licenseUrl>",
          "",
          "[Removed Lines]",
          "5:     <version>20180807</version>",
          "",
          "[Added Lines]",
          "5:     <version>20181115</version>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10:     <requireLicenseAcceptance>false</requireLicenseAcceptance>",
          "11:     <title>libevt</title>",
          "12:     <description>Library to access the Windows Event Log (EVT) format</description>",
          "14:     <copyright>Copyright (C) 2011-2018</copyright>",
          "15:     <tags>native</tags>",
          "16:   </metadata>",
          "",
          "[Removed Lines]",
          "13:     <releaseNotes>Release of libevt 20180807</releaseNotes>",
          "",
          "[Added Lines]",
          "13:     <releaseNotes>Release of libevt 20181115</releaseNotes>",
          "",
          "---------------"
        ],
        "libevt.spec.in||libevt.spec.in": [
          "File: libevt.spec.in -> libevt.spec.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: URL: https://github.com/libyal/libevt",
          "9: BuildRoot: %{_tmppath}/%{name}-%{version}-%{release}-root-%(%{__id_u} -n)",
          "10: @libevt_spec_requires@ @ax_libbfio_spec_requires@ @ax_libcdata_spec_requires@ @ax_libcerror_spec_requires@ @ax_libcfile_spec_requires@ @ax_libclocale_spec_requires@ @ax_libcnotify_spec_requires@ @ax_libcpath_spec_requires@ @ax_libcsplit_spec_requires@ @ax_libcthreads_spec_requires@ @ax_libfcache_spec_requires@ @ax_libfdata_spec_requires@ @ax_libfdatetime_spec_requires@ @ax_libfguid_spec_requires@ @ax_libfvalue_spec_requires@ @ax_libfwnt_spec_requires@ @ax_libuna_spec_requires@",
          "14: Library to access the Windows Event Log (EVT) format",
          "17: Summary: Header files and libraries for developing applications for libevt",
          "18: Group: Development/Libraries",
          "19: Requires: libevt = %{version}-%{release}",
          "22: Header files and libraries for developing applications for libevt.",
          "25: Summary: Python 2 bindings for libevt",
          "26: Group: System Environment/Libraries",
          "31: Python 2 bindings for libevt",
          "34: Summary: Python 3 bindings for libevt",
          "35: Group: System Environment/Libraries",
          "36: Requires: libevt = %{version}-%{release} python3",
          "37: BuildRequires: python3-devel",
          "40: Python 3 bindings for libevt",
          "43: Summary: Several tools for reading Windows Event Log (EVT) files",
          "44: Group: Applications/System",
          "45: Requires: libevt = %{version}-%{release} @ax_libcdirectory_spec_requires@ @ax_libexe_spec_requires@ @ax_libfwevt_spec_requires@ @ax_libregf_spec_requires@ @ax_libwrc_spec_requires@",
          "46: @libevt_spec_tools_build_requires@ @ax_libcdirectory_spec_build_requires@ @ax_libexe_spec_build_requires@ @ax_libfwevt_spec_build_requires@ @ax_libregf_spec_build_requires@ @ax_libwrc_spec_build_requires@",
          "49: Several tools for reading Windows Event Log (EVT) files",
          "51: %prep",
          "",
          "[Removed Lines]",
          "11: @libevt_spec_build_requires@ @ax_libbfio_spec_build_requires@ @ax_libcdata_spec_build_requires@ @ax_libcerror_spec_build_requires@ @ax_libcfile_spec_build_requires@ @ax_libclocale_spec_build_requires@ @ax_libcnotify_spec_build_requires@ @ax_libcpath_spec_build_requires@ @ax_libcsplit_spec_build_requires@ @ax_libcthreads_spec_build_requires@ @ax_libfcache_spec_build_requires@ @ax_libfdata_spec_build_requires@ @ax_libfdatetime_spec_build_requires@ @ax_libfguid_spec_build_requires@ @ax_libfvalue_spec_build_requires@ @ax_libfwnt_spec_build_requires@ @ax_libuna_spec_build_requires@",
          "13: %description",
          "16: %package devel",
          "21: %description devel",
          "24: %package python",
          "27: Requires: libevt = %{version}-%{release} python",
          "28: BuildRequires: python-devel",
          "30: %description python",
          "33: %package python3",
          "39: %description python3",
          "42: %package tools",
          "48: %description tools",
          "",
          "[Added Lines]",
          "11: BuildRequires: gcc @ax_libbfio_spec_build_requires@ @ax_libcdata_spec_build_requires@ @ax_libcerror_spec_build_requires@ @ax_libcfile_spec_build_requires@ @ax_libclocale_spec_build_requires@ @ax_libcnotify_spec_build_requires@ @ax_libcpath_spec_build_requires@ @ax_libcsplit_spec_build_requires@ @ax_libcthreads_spec_build_requires@ @ax_libfcache_spec_build_requires@ @ax_libfdata_spec_build_requires@ @ax_libfdatetime_spec_build_requires@ @ax_libfguid_spec_build_requires@ @ax_libfvalue_spec_build_requires@ @ax_libfwnt_spec_build_requires@ @ax_libuna_spec_build_requires@",
          "13: %description -n libevt",
          "16: %package -n libevt-devel",
          "21: %description -n libevt-devel",
          "24: %package -n libevt-python2",
          "25: Obsoletes: libevt-python < %{version}",
          "26: Provides: libevt-python = %{version}",
          "29: Requires: libevt = %{version}-%{release} python2",
          "30: BuildRequires: python2-devel",
          "32: %description -n libevt-python2",
          "35: %package -n libevt-python3",
          "41: %description -n libevt-python3",
          "44: %package -n libevt-tools",
          "50: %description -n libevt-tools",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "67: %postun -p /sbin/ldconfig",
          "70: %defattr(644,root,root,755)",
          "71: %license COPYING",
          "72: %doc AUTHORS README",
          "73: %attr(755,root,root) %{_libdir}/*.so.*",
          "76: %defattr(644,root,root,755)",
          "77: %license COPYING",
          "78: %doc AUTHORS README ChangeLog",
          "",
          "[Removed Lines]",
          "69: %files",
          "75: %files devel",
          "",
          "[Added Lines]",
          "71: %files -n libevt",
          "77: %files -n libevt-devel",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "83: %{_includedir}/*",
          "84: %{_mandir}/man3/*",
          "87: %defattr(644,root,root,755)",
          "88: %license COPYING",
          "89: %doc AUTHORS README",
          "",
          "[Removed Lines]",
          "86: %files python",
          "",
          "[Added Lines]",
          "88: %files -n libevt-python2",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "91: %{_libdir}/python2*/site-packages/*.la",
          "92: %{_libdir}/python2*/site-packages/*.so",
          "95: %defattr(644,root,root,755)",
          "96: %license COPYING",
          "97: %doc AUTHORS README",
          "",
          "[Removed Lines]",
          "94: %files python3",
          "",
          "[Added Lines]",
          "96: %files -n libevt-python3",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "99: %{_libdir}/python3*/site-packages/*.la",
          "100: %{_libdir}/python3*/site-packages/*.so",
          "103: %defattr(644,root,root,755)",
          "104: %license COPYING",
          "105: %doc AUTHORS README",
          "",
          "[Removed Lines]",
          "102: %files tools",
          "",
          "[Added Lines]",
          "104: %files -n libevt-tools",
          "",
          "---------------"
        ],
        "m4/libfcache.m4||m4/libfcache.m4": [
          "File: m4/libfcache.m4 -> m4/libfcache.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Checks for libfcache required headers and functions",
          "2: dnl",
          "5: dnl Function to detect if libfcache is available",
          "6: dnl ac_libfcache_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "",
          "[Removed Lines]",
          "3: dnl Version: 20180728",
          "",
          "[Added Lines]",
          "3: dnl Version: 20181010",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "24:       [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:       [PKG_CHECK_MODULES(",
          "26:         [libfcache],",
          "28:         [ac_cv_libfcache=yes],",
          "29:         [ac_cv_libfcache=no])",
          "30:       ])",
          "",
          "[Removed Lines]",
          "27:         [libfcache >= 20140912],",
          "",
          "[Added Lines]",
          "27:         [libfcache >= 20181010],",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "79:           libfcache_cache_get_number_of_cache_values,",
          "80:           [ac_cv_libfcache_dummy=yes],",
          "81:           [ac_cv_libfcache=no])",
          "82:         AC_CHECK_LIB(",
          "83:           fcache,",
          "84:           libfcache_cache_get_value_by_index,",
          "85:           [ac_cv_libfcache_dummy=yes],",
          "86:           [ac_cv_libfcache=no])",
          "87:         AC_CHECK_LIB(",
          "88:           fcache,",
          "89:           libfcache_cache_set_value_by_index,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82:         AC_CHECK_LIB(",
          "83:           fcache,",
          "84:           libfcache_cache_get_value_by_identifier,",
          "85:           [ac_cv_libfcache_dummy=yes],",
          "86:           [ac_cv_libfcache=no])",
          "92:         AC_CHECK_LIB(",
          "93:           fcache,",
          "94:           libfcache_cache_set_value_by_identifier,",
          "95:           [ac_cv_libfcache_dummy=yes],",
          "96:           [ac_cv_libfcache=no])",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "157:   AC_HEADER_TIME",
          "159:   dnl Date and time functions used in libfcache/libfcache_date_time.h",
          "163:     [AC_MSG_FAILURE(",
          "164:       [Missing function: time],",
          "165:       [1])",
          "",
          "[Removed Lines]",
          "160:   AC_CHECK_FUNCS(",
          "161:     [time],",
          "162:     [],",
          "",
          "[Added Lines]",
          "170:   AC_CHECK_FUNCS([clock_gettime time])",
          "172:   AS_IF(",
          "173:     [test \"x$ac_cv_func_time\" != xyes],",
          "",
          "---------------"
        ],
        "m4/libfdata.m4||m4/libfdata.m4": [
          "File: m4/libfdata.m4 -> m4/libfdata.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Functions for libfdata",
          "2: dnl",
          "5: dnl Function to detect if libfdata is available",
          "6: dnl ac_libfdata_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "",
          "[Removed Lines]",
          "3: dnl Version: 20180316",
          "",
          "[Added Lines]",
          "3: dnl Version: 20181009",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "24:       [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:       [PKG_CHECK_MODULES(",
          "26:         [libfdata],",
          "28:         [ac_cv_libfdata=yes],",
          "29:         [ac_cv_libfdata=no])",
          "30:       ])",
          "",
          "[Removed Lines]",
          "27:         [libfdata >= 20160325],",
          "",
          "[Added Lines]",
          "27:         [libfdata >= 20181009],",
          "",
          "---------------"
        ],
        "m4/libfdatetime.m4||m4/libfdatetime.m4": [
          "File: m4/libfdatetime.m4 -> m4/libfdatetime.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: dnl",
          "5: dnl Function to detect if libfdatetime is available",
          "6: dnl ac_libfdatetime_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "",
          "[Removed Lines]",
          "1: dnl Functions for libfdatetime",
          "3: dnl Version: 20170905",
          "",
          "[Added Lines]",
          "1: dnl Checks for libfdatetime required headers and functions",
          "3: dnl Version: 20180910",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "24:       [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:       [PKG_CHECK_MODULES(",
          "26:         [libfdatetime],",
          "28:         [ac_cv_libfdatetime=yes],",
          "29:         [ac_cv_libfdatetime=no])",
          "30:       ])",
          "",
          "[Removed Lines]",
          "27:         [libfdatetime >= 20160220],",
          "",
          "[Added Lines]",
          "27:         [libfdatetime >= 20180910],",
          "",
          "---------------"
        ],
        "m4/libuna.m4||m4/libuna.m4": [
          "File: m4/libuna.m4 -> m4/libuna.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Checks for libuna or required headers and functions",
          "2: dnl",
          "5: dnl Function to detect if libuna is available as library",
          "6: dnl ac_libuna_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "",
          "[Removed Lines]",
          "3: dnl Version: 20180803",
          "",
          "[Added Lines]",
          "3: dnl Version: 20181006",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "24:       [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:       [PKG_CHECK_MODULES(",
          "26:         [libuna],",
          "28:         [ac_cv_libuna=yes],",
          "29:         [ac_cv_libuna=no])",
          "30:       ])",
          "",
          "[Removed Lines]",
          "27:         [libuna >= 20180803],",
          "",
          "[Added Lines]",
          "27:         [libuna >= 20181006],",
          "",
          "---------------"
        ],
        "m4/tests.m4||m4/tests.m4": [
          "File: m4/tests.m4 -> m4/tests.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Functions for testing",
          "2: dnl",
          "5: dnl Function to detect if tests dependencies are available",
          "6: AC_DEFUN([AX_TESTS_CHECK_LOCAL],",
          "7:   [AC_CHECK_HEADERS([dlfcn.h])",
          "11:   AC_CHECK_LIB(",
          "12:     dl,",
          "",
          "[Removed Lines]",
          "3: dnl Version: 20180723",
          "9:   AC_CHECK_FUNCS([fmemopen getopt mkstemp])",
          "",
          "[Added Lines]",
          "3: dnl Version: 20180905",
          "9:   AC_CHECK_FUNCS([fmemopen getopt mkstemp unlink])",
          "",
          "---------------"
        ],
        "runtests.sh||runtests.sh": [
          "File: runtests.sh -> runtests.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #!/bin/bash",
          "2: # Script that runs the tests",
          "3: #",
          "6: EXIT_SUCCESS=0;",
          "7: EXIT_FAILURE=1;",
          "",
          "[Removed Lines]",
          "4: # Version: 20180729",
          "",
          "[Added Lines]",
          "4: # Version: 20180905",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "222: HAVE_ENABLE_PYTHON=$?;",
          "224: PYTHON_CONFIG=\"\";",
          "226: if test -x /usr/bin/whereis;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "224: echo \"${CONFIGURE_HELP}\" | grep -- '--enable-static-executables' > /dev/null;",
          "226: HAVE_ENABLE_STATIC_EXECUTABLES=$?;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "389:  fi",
          "390: fi",
          "392: CONFIGURE_OPTIONS=\"\";",
          "394: if test ${HAVE_ENABLE_PYTHON} -eq 0 && test -n \"${PYTHON_CONFIG}\";",
          "395: then",
          "396:  # Issue with running the python bindings with asan disabled for now.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "396: if test ${HAVE_ENABLE_STATIC_EXECUTABLES} -eq 0;",
          "397: then",
          "398:  run_configure_make_check \"--enable-static-executables\";",
          "399:  RESULT=$?;",
          "401:  if test ${RESULT} -ne ${EXIT_SUCCESS};",
          "402:  then",
          "403:   exit ${EXIT_FAILURE};",
          "404:  fi",
          "405: fi",
          "407: # Run tests with asan.",
          "410: if test ${HAVE_ENABLE_WIDE_CHARACTER_TYPE} -eq 0;",
          "411: then",
          "412:  CONFIGURE_OPTIONS=\"${CONFIGURE_OPTIONS} --enable-wide-character-type\";",
          "413: fi",
          "414: if test ${HAVE_WITH_ZLIB} -eq 0;",
          "415: then",
          "416:  CONFIGURE_OPTIONS=\"${CONFIGURE_OPTIONS} --with-zlib=no\";",
          "417: fi",
          "418: if test ${HAVE_WITH_OPENSSL} -eq 0;",
          "419: then",
          "420:  CONFIGURE_OPTIONS=\"${CONFIGURE_OPTIONS} --with-openssl=no\";",
          "421: fi",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "406:  exit ${EXIT_FAILURE};",
          "407: fi",
          "409: CONFIGURE_OPTIONS=\"--enable-shared=no\";",
          "411: if test ${HAVE_ENABLE_WIDE_CHARACTER_TYPE} -eq 0;",
          "412: then",
          "413:  CONFIGURE_OPTIONS=\"${CONFIGURE_OPTIONS} --enable-wide-character-type\";",
          "414: fi",
          "415: if test ${HAVE_WITH_OPENSSL} -eq 0;",
          "416: then",
          "417:  CONFIGURE_OPTIONS=\"${CONFIGURE_OPTIONS} --with-openssl=no\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "437: # Run tests with coverage.",
          "444: if test ${HAVE_WITH_ZLIB} -eq 0;",
          "445: then",
          "446:  CONFIGURE_OPTIONS=\"${CONFIGURE_OPTIONS} --with-zlib=no\";",
          "447: fi",
          "",
          "---------------"
        ],
        "tests/test_evtexport.sh||tests/test_evtexport.sh": [
          "File: tests/test_evtexport.sh -> tests/test_evtexport.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #!/bin/bash",
          "2: # Export tool testing script",
          "3: #",
          "6: EXIT_SUCCESS=0;",
          "7: EXIT_FAILURE=1;",
          "8: EXIT_IGNORE=77;",
          "10: OPTION_SETS=\"\";",
          "13: INPUT_GLOB=\"*\";",
          "",
          "[Removed Lines]",
          "4: # Version: 20180721",
          "11: OPTIONS=\"\";",
          "",
          "[Added Lines]",
          "4: # Version: 20181111",
          "11: OPTIONS=();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "91:  then",
          "92:   for INPUT_FILE in `cat ${TEST_SET_DIRECTORY}/files | sed \"s?^?${TEST_SET_INPUT_DIRECTORY}/?\"`;",
          "93:   do",
          "95:    RESULT=$?;",
          "97:    if test ${RESULT} -ne ${EXIT_SUCCESS};",
          "",
          "[Removed Lines]",
          "94:    run_test_on_input_file_with_options \"${TEST_SET_DIRECTORY}\" \"evtexport\" \"with_stdout_reference\" \"${OPTION_SETS}\" \"${TEST_EXECUTABLE}\" \"${INPUT_FILE}\";",
          "",
          "[Added Lines]",
          "94:    run_test_on_input_file_with_options \"${TEST_SET_DIRECTORY}\" \"evtexport\" \"with_stdout_reference\" \"${OPTION_SETS}\" \"${TEST_EXECUTABLE}\" \"${INPUT_FILE}\" \"${OPTIONS[@]}\";",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "102:  else",
          "103:   for INPUT_FILE in `ls -1 ${TEST_SET_INPUT_DIRECTORY}/${INPUT_GLOB}`;",
          "104:   do",
          "106:    RESULT=$?;",
          "108:    if test ${RESULT} -ne ${EXIT_SUCCESS};",
          "",
          "[Removed Lines]",
          "105:    run_test_on_input_file_with_options \"${TEST_SET_DIRECTORY}\" \"evtexport\" \"with_stdout_reference\" \"${OPTION_SETS}\" \"${TEST_EXECUTABLE}\" \"${INPUT_FILE}\";",
          "",
          "[Added Lines]",
          "105:    run_test_on_input_file_with_options \"${TEST_SET_DIRECTORY}\" \"evtexport\" \"with_stdout_reference\" \"${OPTION_SETS}\" \"${TEST_EXECUTABLE}\" \"${INPUT_FILE}\" \"${OPTIONS[@]}\";",
          "",
          "---------------"
        ],
        "tests/test_evtinfo.sh||tests/test_evtinfo.sh": [
          "File: tests/test_evtinfo.sh -> tests/test_evtinfo.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #!/bin/bash",
          "2: # Info tool testing script",
          "3: #",
          "6: EXIT_SUCCESS=0;",
          "7: EXIT_FAILURE=1;",
          "8: EXIT_IGNORE=77;",
          "10: OPTION_SETS=\"\";",
          "13: INPUT_GLOB=\"*\";",
          "",
          "[Removed Lines]",
          "4: # Version: 20180721",
          "11: OPTIONS=\"\";",
          "",
          "[Added Lines]",
          "4: # Version: 20181111",
          "11: OPTIONS=();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "91:  then",
          "92:   for INPUT_FILE in `cat ${TEST_SET_DIRECTORY}/files | sed \"s?^?${TEST_SET_INPUT_DIRECTORY}/?\"`;",
          "93:   do",
          "95:    RESULT=$?;",
          "97:    if test ${RESULT} -ne ${EXIT_SUCCESS};",
          "",
          "[Removed Lines]",
          "94:    run_test_on_input_file_with_options \"${TEST_SET_DIRECTORY}\" \"evtinfo\" \"with_stdout_reference\" \"${OPTION_SETS}\" \"${TEST_EXECUTABLE}\" \"${INPUT_FILE}\";",
          "",
          "[Added Lines]",
          "94:    run_test_on_input_file_with_options \"${TEST_SET_DIRECTORY}\" \"evtinfo\" \"with_stdout_reference\" \"${OPTION_SETS}\" \"${TEST_EXECUTABLE}\" \"${INPUT_FILE}\" \"${OPTIONS[@]}\";",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "102:  else",
          "103:   for INPUT_FILE in `ls -1 ${TEST_SET_INPUT_DIRECTORY}/${INPUT_GLOB}`;",
          "104:   do",
          "106:    RESULT=$?;",
          "108:    if test ${RESULT} -ne ${EXIT_SUCCESS};",
          "",
          "[Removed Lines]",
          "105:    run_test_on_input_file_with_options \"${TEST_SET_DIRECTORY}\" \"evtinfo\" \"with_stdout_reference\" \"${OPTION_SETS}\" \"${TEST_EXECUTABLE}\" \"${INPUT_FILE}\";",
          "",
          "[Added Lines]",
          "105:    run_test_on_input_file_with_options \"${TEST_SET_DIRECTORY}\" \"evtinfo\" \"with_stdout_reference\" \"${OPTION_SETS}\" \"${TEST_EXECUTABLE}\" \"${INPUT_FILE}\" \"${OPTIONS[@]}\";",
          "",
          "---------------"
        ],
        "tests/test_library.sh||tests/test_library.sh": [
          "File: tests/test_library.sh -> tests/test_library.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #!/bin/bash",
          "2: # Tests C library functions and types.",
          "3: #",
          "6: EXIT_SUCCESS=0;",
          "7: EXIT_FAILURE=1;",
          "",
          "[Removed Lines]",
          "4: # Version: 20180722",
          "",
          "[Added Lines]",
          "4: # Version: 20180907",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "81:   local OLDIFS=${IFS};",
          "84:   IFS=\"",
          "85: \";",
          "",
          "[Removed Lines]",
          "83:   # IFS=\"\\n\"; is not supported by all platforms.",
          "",
          "[Added Lines]",
          "83:   # IFS=\"\\n\" is not supported by all platforms.",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "88:   then",
          "89:    for INPUT_FILE in `cat ${TEST_SET_DIRECTORY}/files | sed \"s?^?${TEST_SET_INPUT_DIRECTORY}/?\"`;",
          "90:    do",
          "91:     run_test_on_input_file_with_options \"${TEST_SET_DIRECTORY}\" \"${TEST_DESCRIPTION}\" \"default\" \"${OPTION_SETS}\" \"${TEST_EXECUTABLE}\" \"${INPUT_FILE}\";",
          "92:     RESULT=$?;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91:     if test \"${OSTYPE}\" = \"msys\";",
          "92:     then",
          "93:      # A test executable built with MinGW expects a Windows path.",
          "94:      INPUT_FILE=`echo ${INPUT_FILE} | sed 's?/?\\\\\\\\?g'`;",
          "95:     fi",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "99:   else",
          "100:    for INPUT_FILE in `ls -1 ${TEST_SET_INPUT_DIRECTORY}/${INPUT_GLOB}`;",
          "101:    do",
          "102:     run_test_on_input_file_with_options \"${TEST_SET_DIRECTORY}\" \"${TEST_DESCRIPTION}\" \"default\" \"${OPTION_SETS}\" \"${TEST_EXECUTABLE}\" \"${INPUT_FILE}\";",
          "103:     RESULT=$?;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "107:     if test \"${OSTYPE}\" = \"msys\";",
          "108:     then",
          "109:      # A test executable built with MinGW expects a Windows path.",
          "110:      INPUT_FILE=`echo ${INPUT_FILE} | sed 's?/?\\\\\\\\?g'`;",
          "111:     fi",
          "",
          "---------------"
        ],
        "tests/test_runner.sh||tests/test_runner.sh": [
          "File: tests/test_runner.sh -> tests/test_runner.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #!/bin/bash",
          "2: # Bash functions to run an executable for testing.",
          "3: #",
          "5: #",
          "6: # When CHECK_WITH_ASAN is set to a non-empty value the test executable",
          "7: # is run with asan, otherwise it is run without.",
          "",
          "[Removed Lines]",
          "4: # Version: 20180727",
          "",
          "[Added Lines]",
          "4: # Version: 20180929",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1089:  if test -n \"${TEST_DESCRIPTION}\";",
          "1090:  then",
          "1092:   then",
          "1093:    echo -n \"${TEST_DESCRIPTION} with input: ${INPUT_FILE}\";",
          "1094:   else",
          "1096:   fi",
          "1098:   if test ${RESULT} -ne ${EXIT_SUCCESS};",
          "",
          "[Removed Lines]",
          "1091:   if test -z \"${OPTION_SET}\";",
          "1095:    echo -n \"${TEST_DESCRIPTION} with option: ${OPTION_SET} and input: ${INPUT_FILE}\";",
          "",
          "[Added Lines]",
          "1091:   OPTIONS=`echo \"${OPTIONS[*]}\" | tr '\\n' ' ' | sed 's/[ ]\\$//'`;",
          "1093:   if test -z \"${OPTIONS}\";",
          "1097:    echo -n \"${TEST_DESCRIPTION} with options: '${OPTIONS}' and input: ${INPUT_FILE}\";",
          "",
          "---------------"
        ]
      }
    }
  ]
}