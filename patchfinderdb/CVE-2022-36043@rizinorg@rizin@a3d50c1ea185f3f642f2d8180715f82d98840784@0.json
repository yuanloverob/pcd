{
  "cve_id": "CVE-2022-36043",
  "cve_desc": "Rizin is a UNIX-like reverse engineering framework and command-line toolset. Versions 0.4.0 and prior are vulnerable to a double free in bobj.c:rz_bin_reloc_storage_free() when freeing relocations generated from qnx binary plugin. A user opening a malicious qnx binary could be affected by this vulnerability, allowing an attacker to execute code on the user's machine. Commit number a3d50c1ea185f3f642f2d8180715f82d98840784 contains a patch for this issue.",
  "repo": "rizinorg/rizin",
  "patch_hash": "a3d50c1ea185f3f642f2d8180715f82d98840784",
  "patch_info": {
    "commit_hash": "a3d50c1ea185f3f642f2d8180715f82d98840784",
    "repo": "rizinorg/rizin",
    "commit_url": "https://github.com/rizinorg/rizin/commit/a3d50c1ea185f3f642f2d8180715f82d98840784",
    "files": [
      "librz/bin/p/bin_qnx.c"
    ],
    "message": "fix #2964 - double-free in bin_qnx.c",
    "before_after_code_files": [
      "librz/bin/p/bin_qnx.c||librz/bin/p/bin_qnx.c"
    ]
  },
  "patch_diff": {
    "librz/bin/p/bin_qnx.c||librz/bin/p/bin_qnx.c": [
      "File: librz/bin/p/bin_qnx.c -> librz/bin/p/bin_qnx.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "191: static RzList *relocs(RzBinFile *bf) {",
      "192:  rz_return_val_if_fail(bf && bf->o, NULL);",
      "193:  QnxObj *qo = bf->o->bin_obj;",
      "195: }",
      "197: static void header(RzBinFile *bf) {",
      "",
      "[Removed Lines]",
      "194:  return rz_list_clone(qo->fixups);",
      "",
      "[Added Lines]",
      "194:  RzBinReloc *reloc = NULL;",
      "195:  RzListIter *it = NULL;",
      "196:  RzList *relocs = rz_list_newf(free);",
      "197:  if (!relocs) {",
      "198:   return NULL;",
      "199:  }",
      "201:  rz_list_foreach (qo->fixups, it, reloc) {",
      "202:   RzBinReloc *copy = RZ_NEW0(RzBinReloc);",
      "203:   copy->vaddr = reloc->vaddr;",
      "204:   copy->paddr = reloc->paddr;",
      "205:   copy->type = reloc->type;",
      "206:   rz_list_append(relocs, copy);",
      "207:  }",
      "208:  return relocs;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "58926dffbe819fe9ebf5062f7130e026351cae01",
      "candidate_info": {
        "commit_hash": "58926dffbe819fe9ebf5062f7130e026351cae01",
        "repo": "rizinorg/rizin",
        "commit_url": "https://github.com/rizinorg/rizin/commit/58926dffbe819fe9ebf5062f7130e026351cae01",
        "files": [
          "librz/bin/p/bin_qnx.c"
        ],
        "message": "fix #2964 - double-free in bin_qnx.c",
        "before_after_code_files": [
          "librz/bin/p/bin_qnx.c||librz/bin/p/bin_qnx.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "librz/bin/p/bin_qnx.c||librz/bin/p/bin_qnx.c"
          ],
          "candidate": [
            "librz/bin/p/bin_qnx.c||librz/bin/p/bin_qnx.c"
          ]
        }
      },
      "candidate_diff": {
        "librz/bin/p/bin_qnx.c||librz/bin/p/bin_qnx.c": [
          "File: librz/bin/p/bin_qnx.c -> librz/bin/p/bin_qnx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "191: static RzList *relocs(RzBinFile *bf) {",
          "192:  rz_return_val_if_fail(bf && bf->o, NULL);",
          "193:  QnxObj *qo = bf->o->bin_obj;",
          "195: }",
          "197: static void header(RzBinFile *bf) {",
          "",
          "[Removed Lines]",
          "194:  return rz_list_clone(qo->fixups);",
          "",
          "[Added Lines]",
          "194:  RzBinReloc *reloc = NULL;",
          "195:  RzListIter *it = NULL;",
          "196:  RzList *relocs = rz_list_newf(free);",
          "197:  if (!relocs) {",
          "198:   return NULL;",
          "199:  }",
          "201:  rz_list_foreach (qo->fixups, it, reloc) {",
          "202:   RzBinReloc *copy = RZ_NEW0(RzBinReloc);",
          "203:   if (!copy) {",
          "204:    break;",
          "205:   }",
          "206:   copy->vaddr = reloc->vaddr;",
          "207:   copy->paddr = reloc->paddr;",
          "208:   copy->type = reloc->type;",
          "209:   rz_list_append(relocs, copy);",
          "210:  }",
          "211:  return relocs;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9819f69ecfa02d5f0c3886df46c85df09a51db80",
      "candidate_info": {
        "commit_hash": "9819f69ecfa02d5f0c3886df46c85df09a51db80",
        "repo": "rizinorg/rizin",
        "commit_url": "https://github.com/rizinorg/rizin/commit/9819f69ecfa02d5f0c3886df46c85df09a51db80",
        "files": [
          "librz/bin/p/bin_qnx.c"
        ],
        "message": "fix #2964 - double-free in bin_qnx.c",
        "before_after_code_files": [
          "librz/bin/p/bin_qnx.c||librz/bin/p/bin_qnx.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "librz/bin/p/bin_qnx.c||librz/bin/p/bin_qnx.c"
          ],
          "candidate": [
            "librz/bin/p/bin_qnx.c||librz/bin/p/bin_qnx.c"
          ]
        }
      },
      "candidate_diff": {
        "librz/bin/p/bin_qnx.c||librz/bin/p/bin_qnx.c": [
          "File: librz/bin/p/bin_qnx.c -> librz/bin/p/bin_qnx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "191: static RzList *relocs(RzBinFile *bf) {",
          "192:  rz_return_val_if_fail(bf && bf->o, NULL);",
          "193:  QnxObj *qo = bf->o->bin_obj;",
          "195: }",
          "197: static void header(RzBinFile *bf) {",
          "",
          "[Removed Lines]",
          "194:  return rz_list_clone(qo->fixups);",
          "",
          "[Added Lines]",
          "194:  RzBinReloc *reloc = NULL;",
          "195:  RzListIter *it = NULL;",
          "196:  RzList *relocs = rz_list_newf(free);",
          "197:  if (!relocs) {",
          "198:   return NULL;",
          "199:  }",
          "201:  rz_list_foreach (qo->fixups, it, reloc) {",
          "202:   RzBinReloc *copy = RZ_NEW0(RzBinReloc);",
          "203:   if (!copy) {",
          "204:    break;",
          "205:   }",
          "206:   copy->vaddr = reloc->vaddr;",
          "207:   copy->paddr = reloc->paddr;",
          "208:   copy->type = reloc->type;",
          "209:   rz_list_append(relocs, copy);",
          "210:  }",
          "211:  return relocs;",
          "",
          "---------------"
        ]
      }
    }
  ]
}