{
  "cve_id": "CVE-2018-7324",
  "cve_desc": "In Wireshark 2.4.0 to 2.4.4 and 2.2.0 to 2.2.12, epan/dissectors/packet-sccp.c had an infinite loop that was addressed by using a correct integer data type.",
  "repo": "wireshark/wireshark",
  "patch_hash": "620647a3e01d65fef985093cefb9352e21603261",
  "patch_info": {
    "commit_hash": "620647a3e01d65fef985093cefb9352e21603261",
    "repo": "wireshark/wireshark",
    "commit_url": "https://github.com/wireshark/wireshark/commit/620647a3e01d65fef985093cefb9352e21603261",
    "files": [
      "epan/dissectors/packet-sccp.c"
    ],
    "message": "SCCP: Use int datatype for offset to prevent infinite loops\n\nFields are 16-bit values and large 16-bit values can be incorrectly\ntreated as negative, causing infinite loops in offset calculations.\n\nBug: 14413\nChange-Id: I44334c3e9ced0734f4e1a70720859c0abf4a05c8\nReviewed-on: https://code.wireshark.org/review/25743\nReviewed-by: Michael Mann <mmann78@netscape.net>\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>",
    "before_after_code_files": [
      "epan/dissectors/packet-sccp.c||epan/dissectors/packet-sccp.c"
    ]
  },
  "patch_diff": {
    "epan/dissectors/packet-sccp.c||epan/dissectors/packet-sccp.c": [
      "File: epan/dissectors/packet-sccp.c -> epan/dissectors/packet-sccp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2484: static guint16",
      "2485: dissect_sccp_parameter(tvbuff_t *tvb, packet_info *pinfo, proto_tree *sccp_tree,",
      "2487:                        guint16 parameter_length, sccp_decode_context_t *sccp_info)",
      "2488: {",
      "2489:   tvbuff_t *parameter_tvb;",
      "",
      "[Removed Lines]",
      "2486:                        proto_tree *tree, guint8 parameter_type, guint16 offset,",
      "",
      "[Added Lines]",
      "2486:                        proto_tree *tree, guint8 parameter_type, int offset,",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2636: static guint16",
      "2637: dissect_sccp_variable_parameter(tvbuff_t *tvb, packet_info *pinfo,",
      "2638:                                 proto_tree *sccp_tree, proto_tree *tree,",
      "2640: {",
      "2641:   guint16     parameter_length;",
      "2642:   guint8      length_length;",
      "",
      "[Removed Lines]",
      "2639:                                 guint8 parameter_type, guint16 offset, sccp_decode_context_t* sccp_info)",
      "",
      "[Added Lines]",
      "2639:                                 guint8 parameter_type, int offset, sccp_decode_context_t* sccp_info)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2676: static void",
      "2677: dissect_sccp_optional_parameters(tvbuff_t *tvb, packet_info *pinfo,",
      "2678:                                  proto_tree *sccp_tree, proto_tree *tree,",
      "2680: {",
      "2681:   guint8 parameter_type;",
      "",
      "[Removed Lines]",
      "2679:                                  guint16 offset, sccp_decode_context_t* sccp_info)",
      "",
      "[Added Lines]",
      "2679:                                  int offset, sccp_decode_context_t* sccp_info)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2739: {",
      "2740:   guint16   variable_pointer1 = 0, variable_pointer2 = 0, variable_pointer3 = 0;",
      "2741:   guint16   optional_pointer  = 0, orig_opt_ptr = 0;",
      "2743:   gboolean  save_fragmented;",
      "2744:   tvbuff_t *new_tvb = NULL;",
      "2745:   fragment_head *frag_msg = NULL;",
      "",
      "[Removed Lines]",
      "2742:   guint16   offset = 0;",
      "",
      "[Added Lines]",
      "2742:   int   offset = 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f82c54a4532b7dba5cb498195f39af32569b3149",
      "candidate_info": {
        "commit_hash": "f82c54a4532b7dba5cb498195f39af32569b3149",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/f82c54a4532b7dba5cb498195f39af32569b3149",
        "files": [
          "epan/dissectors/packet-sccp.c"
        ],
        "message": "SCCP: Use int datatype for offset to prevent infinite loops\n\nFields are 16-bit values and large 16-bit values can be incorrectly\ntreated as negative, causing infinite loops in offset calculations.\n\nBug: 14413\nChange-Id: I44334c3e9ced0734f4e1a70720859c0abf4a05c8\nReviewed-on: https://code.wireshark.org/review/25743\nReviewed-by: Michael Mann <mmann78@netscape.net>\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit 620647a3e01d65fef985093cefb9352e21603261)\nReviewed-on: https://code.wireshark.org/review/25750",
        "before_after_code_files": [
          "epan/dissectors/packet-sccp.c||epan/dissectors/packet-sccp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-sccp.c||epan/dissectors/packet-sccp.c"
          ],
          "candidate": [
            "epan/dissectors/packet-sccp.c||epan/dissectors/packet-sccp.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-sccp.c||epan/dissectors/packet-sccp.c": [
          "File: epan/dissectors/packet-sccp.c -> epan/dissectors/packet-sccp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2482: static guint16",
          "2483: dissect_sccp_parameter(tvbuff_t *tvb, packet_info *pinfo, proto_tree *sccp_tree,",
          "2485:                        guint16 parameter_length, sccp_decode_context_t *sccp_info)",
          "2486: {",
          "2487:   tvbuff_t *parameter_tvb;",
          "",
          "[Removed Lines]",
          "2484:                        proto_tree *tree, guint8 parameter_type, guint16 offset,",
          "",
          "[Added Lines]",
          "2484:                        proto_tree *tree, guint8 parameter_type, int offset,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2634: static guint16",
          "2635: dissect_sccp_variable_parameter(tvbuff_t *tvb, packet_info *pinfo,",
          "2636:                                 proto_tree *sccp_tree, proto_tree *tree,",
          "2638: {",
          "2639:   guint16     parameter_length;",
          "2640:   guint8      length_length;",
          "",
          "[Removed Lines]",
          "2637:                                 guint8 parameter_type, guint16 offset, sccp_decode_context_t* sccp_info)",
          "",
          "[Added Lines]",
          "2637:                                 guint8 parameter_type, int offset, sccp_decode_context_t* sccp_info)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2674: static void",
          "2675: dissect_sccp_optional_parameters(tvbuff_t *tvb, packet_info *pinfo,",
          "2676:                                  proto_tree *sccp_tree, proto_tree *tree,",
          "2678: {",
          "2679:   guint8 parameter_type;",
          "",
          "[Removed Lines]",
          "2677:                                  guint16 offset, sccp_decode_context_t* sccp_info)",
          "",
          "[Added Lines]",
          "2677:                                  int offset, sccp_decode_context_t* sccp_info)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2709: {",
          "2710:   guint16   variable_pointer1 = 0, variable_pointer2 = 0, variable_pointer3 = 0;",
          "2711:   guint16   optional_pointer  = 0, orig_opt_ptr = 0;",
          "2713:   gboolean  save_fragmented;",
          "2714:   tvbuff_t *new_tvb = NULL;",
          "2715:   fragment_head *frag_msg = NULL;",
          "",
          "[Removed Lines]",
          "2712:   guint16   offset = 0;",
          "",
          "[Added Lines]",
          "2712:   int   offset = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9e7695bbee18525eaa6d12b32230313ae8a36a81",
      "candidate_info": {
        "commit_hash": "9e7695bbee18525eaa6d12b32230313ae8a36a81",
        "repo": "wireshark/wireshark",
        "commit_url": "https://github.com/wireshark/wireshark/commit/9e7695bbee18525eaa6d12b32230313ae8a36a81",
        "files": [
          "epan/dissectors/packet-sccp.c"
        ],
        "message": "SCCP: Use int datatype for offset to prevent infinite loops\n\nFields are 16-bit values and large 16-bit values can be incorrectly\ntreated as negative, causing infinite loops in offset calculations.\n\nBug: 14413\nChange-Id: I44334c3e9ced0734f4e1a70720859c0abf4a05c8\nReviewed-on: https://code.wireshark.org/review/25743\nReviewed-by: Michael Mann <mmann78@netscape.net>\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot\nReviewed-by: Anders Broman <a.broman58@gmail.com>\n(cherry picked from commit 620647a3e01d65fef985093cefb9352e21603261)\nReviewed-on: https://code.wireshark.org/review/25751",
        "before_after_code_files": [
          "epan/dissectors/packet-sccp.c||epan/dissectors/packet-sccp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "epan/dissectors/packet-sccp.c||epan/dissectors/packet-sccp.c"
          ],
          "candidate": [
            "epan/dissectors/packet-sccp.c||epan/dissectors/packet-sccp.c"
          ]
        }
      },
      "candidate_diff": {
        "epan/dissectors/packet-sccp.c||epan/dissectors/packet-sccp.c": [
          "File: epan/dissectors/packet-sccp.c -> epan/dissectors/packet-sccp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2464: static guint16",
          "2465: dissect_sccp_parameter(tvbuff_t *tvb, packet_info *pinfo, proto_tree *sccp_tree,",
          "2467:                        guint16 parameter_length, sccp_decode_context_t *sccp_info)",
          "2468: {",
          "2469:   tvbuff_t *parameter_tvb;",
          "",
          "[Removed Lines]",
          "2466:                        proto_tree *tree, guint8 parameter_type, guint16 offset,",
          "",
          "[Added Lines]",
          "2466:                        proto_tree *tree, guint8 parameter_type, int offset,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2616: static guint16",
          "2617: dissect_sccp_variable_parameter(tvbuff_t *tvb, packet_info *pinfo,",
          "2618:                                 proto_tree *sccp_tree, proto_tree *tree,",
          "2620: {",
          "2621:   guint16     parameter_length;",
          "2622:   guint8      length_length;",
          "",
          "[Removed Lines]",
          "2619:                                 guint8 parameter_type, guint16 offset, sccp_decode_context_t* sccp_info)",
          "",
          "[Added Lines]",
          "2619:                                 guint8 parameter_type, int offset, sccp_decode_context_t* sccp_info)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2656: static void",
          "2657: dissect_sccp_optional_parameters(tvbuff_t *tvb, packet_info *pinfo,",
          "2658:                                  proto_tree *sccp_tree, proto_tree *tree,",
          "2660: {",
          "2661:   guint8 parameter_type;",
          "",
          "[Removed Lines]",
          "2659:                                  guint16 offset, sccp_decode_context_t* sccp_info)",
          "",
          "[Added Lines]",
          "2659:                                  int offset, sccp_decode_context_t* sccp_info)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2691: {",
          "2692:   guint16   variable_pointer1 = 0, variable_pointer2 = 0, variable_pointer3 = 0;",
          "2693:   guint16   optional_pointer  = 0, orig_opt_ptr = 0;",
          "2695:   gboolean  save_fragmented;",
          "2696:   tvbuff_t *new_tvb = NULL;",
          "2697:   fragment_head *frag_msg = NULL;",
          "",
          "[Removed Lines]",
          "2694:   guint16   offset = 0;",
          "",
          "[Added Lines]",
          "2694:   int   offset = 0;",
          "",
          "---------------"
        ]
      }
    }
  ]
}