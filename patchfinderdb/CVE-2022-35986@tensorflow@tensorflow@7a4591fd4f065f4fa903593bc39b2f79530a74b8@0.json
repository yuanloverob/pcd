{
  "cve_id": "CVE-2022-35986",
  "cve_desc": "TensorFlow is an open source platform for machine learning. If `RaggedBincount` is given an empty input tensor `splits`, it results in a segfault that can be used to trigger a denial of service attack. We have patched the issue in GitHub commit 7a4591fd4f065f4fa903593bc39b2f79530a74b8. The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range. There are no known workarounds for this issue.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "7a4591fd4f065f4fa903593bc39b2f79530a74b8",
  "patch_info": {
    "commit_hash": "7a4591fd4f065f4fa903593bc39b2f79530a74b8",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/7a4591fd4f065f4fa903593bc39b2f79530a74b8",
    "files": [
      "tensorflow/core/kernels/bincount_op.cc",
      "tensorflow/python/kernel_tests/math_ops/bincount_op_test.py"
    ],
    "message": "Fix RaggedBincount Segmentation Fault from the Splits arg\n\nPiperOrigin-RevId: 461715364",
    "before_after_code_files": [
      "tensorflow/core/kernels/bincount_op.cc||tensorflow/core/kernels/bincount_op.cc",
      "tensorflow/python/kernel_tests/math_ops/bincount_op_test.py||tensorflow/python/kernel_tests/math_ops/bincount_op_test.py"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/bincount_op.cc||tensorflow/core/kernels/bincount_op.cc": [
      "File: tensorflow/core/kernels/bincount_op.cc -> tensorflow/core/kernels/bincount_op.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "493:     int num_values = values.size();",
      "494:     int batch_idx = 0;",
      "496:     OP_REQUIRES(ctx, splits(0) == 0,",
      "497:                 errors::InvalidArgument(\"Splits must start with 0, not with \",",
      "498:                                         splits(0)));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "496:     OP_REQUIRES(ctx, splits.size() > 0,",
      "497:                 errors::InvalidArgument(\"Splits must be non-empty\"));",
      "",
      "---------------"
    ],
    "tensorflow/python/kernel_tests/math_ops/bincount_op_test.py||tensorflow/python/kernel_tests/math_ops/bincount_op_test.py": [
      "File: tensorflow/python/kernel_tests/math_ops/bincount_op_test.py -> tensorflow/python/kernel_tests/math_ops/bincount_op_test.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "734:               binary_output=False,",
      "735:               name=None))",
      "738: if __name__ == \"__main__\":",
      "739:   googletest.main()",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "737:   @test_util.run_in_graph_and_eager_modes",
      "738:   def test_splits_empty(self):  # b/238450914",
      "739:     with self.assertRaisesRegex((ValueError, errors.InvalidArgumentError),",
      "740:                                 \"Splits must be non-empty\"):",
      "741:       self.evaluate(",
      "742:           gen_math_ops.ragged_bincount(",
      "743:               splits=[],  # Invalid splits",
      "744:               values=[1],",
      "745:               size=1,",
      "746:               weights=[1],",
      "747:               binary_output=False,",
      "748:               name=None))",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2b998df403236e915929784b9675c1d6b467e905",
      "candidate_info": {
        "commit_hash": "2b998df403236e915929784b9675c1d6b467e905",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/2b998df403236e915929784b9675c1d6b467e905",
        "files": [
          "tensorflow/core/kernels/bincount_op.cc",
          "tensorflow/python/kernel_tests/bincount_op_test.py"
        ],
        "message": "Fix RaggedBincount Segmentation Fault from the Splits arg\n\nPiperOrigin-RevId: 461715364",
        "before_after_code_files": [
          "tensorflow/core/kernels/bincount_op.cc||tensorflow/core/kernels/bincount_op.cc",
          "tensorflow/python/kernel_tests/bincount_op_test.py||tensorflow/python/kernel_tests/bincount_op_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/bincount_op.cc||tensorflow/core/kernels/bincount_op.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/bincount_op.cc||tensorflow/core/kernels/bincount_op.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/bincount_op.cc||tensorflow/core/kernels/bincount_op.cc": [
          "File: tensorflow/core/kernels/bincount_op.cc -> tensorflow/core/kernels/bincount_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "480:     int num_values = values.size();",
          "481:     int batch_idx = 0;",
          "483:     OP_REQUIRES(ctx, splits(0) == 0,",
          "484:                 errors::InvalidArgument(\"Splits must start with 0, not with \",",
          "485:                                         splits(0)));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "483:     OP_REQUIRES(ctx, splits.size() > 0,",
          "484:                 errors::InvalidArgument(\"Splits must be non-empty\"));",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/bincount_op_test.py||tensorflow/python/kernel_tests/bincount_op_test.py": [
          "File: tensorflow/python/kernel_tests/bincount_op_test.py -> tensorflow/python/kernel_tests/bincount_op_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "688:               binary_output=False,",
          "689:               name=None))",
          "692: if __name__ == \"__main__\":",
          "693:   googletest.main()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "691:   @test_util.run_in_graph_and_eager_modes",
          "692:   def test_splits_empty(self):  # b/238450914",
          "693:     with self.assertRaisesRegex((ValueError, errors.InvalidArgumentError),",
          "694:                                 \"Splits must be non-empty\"):",
          "695:       self.evaluate(",
          "696:           gen_math_ops.ragged_bincount(",
          "697:               splits=[],  # Invalid splits",
          "698:               values=[1],",
          "699:               size=1,",
          "700:               weights=[1],",
          "701:               binary_output=False,",
          "702:               name=None))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4120fc7ae19b5f04ee95d37344da857a28cd02f8",
      "candidate_info": {
        "commit_hash": "4120fc7ae19b5f04ee95d37344da857a28cd02f8",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/4120fc7ae19b5f04ee95d37344da857a28cd02f8",
        "files": [
          "tensorflow/core/kernels/bincount_op.cc",
          "tensorflow/python/kernel_tests/math_ops/bincount_op_test.py"
        ],
        "message": "Fix RaggedBincount Segmentation Fault from the Splits arg\n\nPiperOrigin-RevId: 461715364",
        "before_after_code_files": [
          "tensorflow/core/kernels/bincount_op.cc||tensorflow/core/kernels/bincount_op.cc",
          "tensorflow/python/kernel_tests/math_ops/bincount_op_test.py||tensorflow/python/kernel_tests/math_ops/bincount_op_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/bincount_op.cc||tensorflow/core/kernels/bincount_op.cc",
            "tensorflow/python/kernel_tests/math_ops/bincount_op_test.py||tensorflow/python/kernel_tests/math_ops/bincount_op_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/bincount_op.cc||tensorflow/core/kernels/bincount_op.cc",
            "tensorflow/python/kernel_tests/math_ops/bincount_op_test.py||tensorflow/python/kernel_tests/math_ops/bincount_op_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/bincount_op.cc||tensorflow/core/kernels/bincount_op.cc": [
          "File: tensorflow/core/kernels/bincount_op.cc -> tensorflow/core/kernels/bincount_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "480:     int num_values = values.size();",
          "481:     int batch_idx = 0;",
          "483:     OP_REQUIRES(ctx, splits(0) == 0,",
          "484:                 errors::InvalidArgument(\"Splits must start with 0, not with \",",
          "485:                                         splits(0)));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "483:     OP_REQUIRES(ctx, splits.size() > 0,",
          "484:                 errors::InvalidArgument(\"Splits must be non-empty\"));",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/math_ops/bincount_op_test.py||tensorflow/python/kernel_tests/math_ops/bincount_op_test.py": [
          "File: tensorflow/python/kernel_tests/math_ops/bincount_op_test.py -> tensorflow/python/kernel_tests/math_ops/bincount_op_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "684:               binary_output=False,",
          "685:               name=None))",
          "688: if __name__ == \"__main__\":",
          "689:   googletest.main()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "687:   @test_util.run_in_graph_and_eager_modes",
          "688:   def test_splits_empty(self):  # b/238450914",
          "689:     with self.assertRaisesRegex((ValueError, errors.InvalidArgumentError),",
          "690:                                 \"Splits must be non-empty\"):",
          "691:       self.evaluate(",
          "692:           gen_math_ops.ragged_bincount(",
          "693:               splits=[],  # Invalid splits",
          "694:               values=[1],",
          "695:               size=1,",
          "696:               weights=[1],",
          "697:               binary_output=False,",
          "698:               name=None))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5475c0dd0f2fdb9aa8a7297d9cc71e06b7a0a552",
      "candidate_info": {
        "commit_hash": "5475c0dd0f2fdb9aa8a7297d9cc71e06b7a0a552",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/5475c0dd0f2fdb9aa8a7297d9cc71e06b7a0a552",
        "files": [
          "tensorflow/core/kernels/bincount_op.cc",
          "tensorflow/python/kernel_tests/math_ops/bincount_op_test.py"
        ],
        "message": "Fix RaggedBincount Segmentation Fault from the Splits arg\n\nPiperOrigin-RevId: 461715364",
        "before_after_code_files": [
          "tensorflow/core/kernels/bincount_op.cc||tensorflow/core/kernels/bincount_op.cc",
          "tensorflow/python/kernel_tests/math_ops/bincount_op_test.py||tensorflow/python/kernel_tests/math_ops/bincount_op_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/bincount_op.cc||tensorflow/core/kernels/bincount_op.cc",
            "tensorflow/python/kernel_tests/math_ops/bincount_op_test.py||tensorflow/python/kernel_tests/math_ops/bincount_op_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/bincount_op.cc||tensorflow/core/kernels/bincount_op.cc",
            "tensorflow/python/kernel_tests/math_ops/bincount_op_test.py||tensorflow/python/kernel_tests/math_ops/bincount_op_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/bincount_op.cc||tensorflow/core/kernels/bincount_op.cc": [
          "File: tensorflow/core/kernels/bincount_op.cc -> tensorflow/core/kernels/bincount_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "480:     int num_values = values.size();",
          "481:     int batch_idx = 0;",
          "483:     OP_REQUIRES(ctx, splits(0) == 0,",
          "484:                 errors::InvalidArgument(\"Splits must start with 0, not with \",",
          "485:                                         splits(0)));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "483:     OP_REQUIRES(ctx, splits.size() > 0,",
          "484:                 errors::InvalidArgument(\"Splits must be non-empty\"));",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/math_ops/bincount_op_test.py||tensorflow/python/kernel_tests/math_ops/bincount_op_test.py": [
          "File: tensorflow/python/kernel_tests/math_ops/bincount_op_test.py -> tensorflow/python/kernel_tests/math_ops/bincount_op_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "684:               binary_output=False,",
          "685:               name=None))",
          "688: if __name__ == \"__main__\":",
          "689:   googletest.main()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "687:   @test_util.run_in_graph_and_eager_modes",
          "688:   def test_splits_empty(self):  # b/238450914",
          "689:     with self.assertRaisesRegex((ValueError, errors.InvalidArgumentError),",
          "690:                                 \"Splits must be non-empty\"):",
          "691:       self.evaluate(",
          "692:           gen_math_ops.ragged_bincount(",
          "693:               splits=[],  # Invalid splits",
          "694:               values=[1],",
          "695:               size=1,",
          "696:               weights=[1],",
          "697:               binary_output=False,",
          "698:               name=None))",
          "",
          "---------------"
        ]
      }
    }
  ]
}