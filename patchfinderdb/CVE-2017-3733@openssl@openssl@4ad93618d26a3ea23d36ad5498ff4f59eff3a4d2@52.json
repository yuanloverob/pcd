{
  "cve_id": "CVE-2017-3733",
  "cve_desc": "During a renegotiation handshake if the Encrypt-Then-Mac extension is negotiated where it was not in the original handshake (or vice-versa) then this can cause OpenSSL 1.1.0 before 1.1.0e to crash (dependent on ciphersuite). Both clients and servers are affected.",
  "repo": "openssl/openssl",
  "patch_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
  "patch_info": {
    "commit_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "files": [
      "include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h",
      "ssl/t1_enc.c",
      "ssl/t1_lib.c"
    ],
    "message": "Don't change the state of the ETM flags until CCS processing\n\nChanging the ciphersuite during a renegotiation can result in a crash\nleading to a DoS attack. ETM has not been implemented in 1.1.0 for DTLS\nso this is TLS only.\n\nThe problem is caused by changing the flag indicating whether to use ETM\nor not immediately on negotiation of ETM, rather than at CCS. Therefore,\nduring a renegotiation, if the ETM state is changing (usually due to a\nchange of ciphersuite), then an error/crash will occur.\n\nDue to the fact that there are separate CCS messages for read and write\nwe actually now need two flags to determine whether to use ETM or not.\n\nCVE-2017-3733\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
    "before_after_code_files": [
      "include/openssl/ssl3.h||include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h||ssl/ssl_locl.h",
      "ssl/t1_enc.c||ssl/t1_enc.c",
      "ssl/t1_lib.c||ssl/t1_lib.c"
    ]
  },
  "patch_diff": {
    "include/openssl/ssl3.h||include/openssl/ssl3.h": [
      "File: include/openssl/ssl3.h -> include/openssl/ssl3.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "264: # define TLS1_FLAGS_SKIP_CERT_VERIFY             0x0010",
      "270: # define TLS1_FLAGS_RECEIVED_EXTMS               0x0200",
      "272: # define SSL3_MT_HELLO_REQUEST                   0",
      "273: # define SSL3_MT_CLIENT_HELLO                    1",
      "274: # define SSL3_MT_SERVER_HELLO                    2",
      "",
      "[Removed Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             0x0100",
      "",
      "[Added Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_READ        0x0100",
      "268: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             TLS1_FLAGS_ENCRYPT_THEN_MAC_READ",
      "273: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE       0x0400",
      "",
      "---------------"
    ],
    "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
      "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:     if (type == SSL3_RT_APPLICATION_DATA &&",
      "396:         u_len >= 4 * (max_send_fragment = s->max_send_fragment) &&",
      "397:         s->compress == NULL && s->msg_callback == NULL &&",
      "399:         EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(s->enc_write_ctx)) &",
      "400:         EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK) {",
      "401:         unsigned char aad[13];",
      "",
      "[Removed Lines]",
      "398:         !SSL_USE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "[Added Lines]",
      "398:         !SSL_WRITE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "795:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "796:                                          &(outbuf[j][wr[j].length + eivlen]),",
      "797:                                          1) < 0)",
      "",
      "[Removed Lines]",
      "794:         if (!SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "794:         if (!SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "814:         goto err;",
      "816:     for (j = 0; j < numpipes; j++) {",
      "818:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "819:                                          outbuf[j] + wr[j].length, 1) < 0)",
      "820:                 goto err;",
      "",
      "[Removed Lines]",
      "817:         if (SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "817:         if (SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------"
    ],
    "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c": [
      "File: ssl/record/ssl3_record.c -> ssl/record/ssl3_record.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "350:         unsigned char *mac;",
      "351:         mac_size = EVP_MD_CTX_size(s->read_hash);",
      "352:         OPENSSL_assert(mac_size <= EVP_MAX_MD_SIZE);",
      "",
      "[Removed Lines]",
      "349:     if (SSL_USE_ETM(s) && s->read_hash) {",
      "",
      "[Added Lines]",
      "349:     if (SSL_READ_ETM(s) && s->read_hash) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "394:     if ((sess != NULL) &&",
      "395:         (s->enc_read_ctx != NULL) &&",
      "398:         unsigned char *mac = NULL;",
      "399:         unsigned char mac_tmp[EVP_MAX_MD_SIZE];",
      "",
      "[Removed Lines]",
      "396:         (EVP_MD_CTX_md(s->read_hash) != NULL) && !SSL_USE_ETM(s)) {",
      "",
      "[Added Lines]",
      "396:         (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "823:         }",
      "825:         ret = 1;",
      "827:             mac_size = EVP_MD_CTX_size(s->read_hash);",
      "828:         if ((bs != 1) && !send) {",
      "829:             int tmpret;",
      "",
      "[Removed Lines]",
      "826:         if (!SSL_USE_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "[Added Lines]",
      "826:         if (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "997:     header[11] = (rec->length) >> 8;",
      "998:     header[12] = (rec->length) & 0xff;",
      "1001:         EVP_CIPHER_CTX_mode(ssl->enc_read_ctx) == EVP_CIPH_CBC_MODE &&",
      "1002:         ssl3_cbc_record_digest_supported(mac_ctx)) {",
      "",
      "[Removed Lines]",
      "1000:     if (!send && !SSL_USE_ETM(ssl) &&",
      "",
      "[Added Lines]",
      "1000:     if (!send && !SSL_READ_ETM(ssl) &&",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1022:             EVP_MD_CTX_free(hmac);",
      "1023:             return -1;",
      "1024:         }",
      "1026:             if (!tls_fips_digest_extra(ssl->enc_read_ctx,",
      "1027:                                        mac_ctx, rec->input,",
      "1028:                                        rec->length, rec->orig_len)) {",
      "",
      "[Removed Lines]",
      "1025:         if (!send && !SSL_USE_ETM(ssl) && FIPS_mode())",
      "",
      "[Added Lines]",
      "1025:         if (!send && !SSL_READ_ETM(ssl) && FIPS_mode())",
      "",
      "---------------"
    ],
    "ssl/ssl_locl.h||ssl/ssl_locl.h": [
      "File: ssl/ssl_locl.h -> ssl/ssl_locl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "378: # define SSL_CLIENT_USE_SIGALGS(s)        \\",
      "379:     SSL_CLIENT_USE_TLS1_2_CIPHERS(s)",
      "384: # define SSL_PKEY_RSA_ENC        0",
      "",
      "[Removed Lines]",
      "381: # define SSL_USE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC)",
      "",
      "[Added Lines]",
      "381: # define SSL_READ_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_READ)",
      "382: # define SSL_WRITE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1111:     unsigned char *alpn_client_proto_list;",
      "1112:     unsigned alpn_client_proto_list_len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1116:     int tlsext_use_etm;",
      "",
      "---------------"
    ],
    "ssl/t1_enc.c||ssl/t1_enc.c": [
      "File: ssl/t1_enc.c -> ssl/t1_enc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "130: #endif",
      "132:     if (which & SSL3_CC_READ) {",
      "133:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "134:             s->mac_flags |= SSL_MAC_FLAG_READ_MAC_STREAM;",
      "135:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "133:         if (s->tlsext_use_etm)",
      "134:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "135:         else",
      "136:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "168:         mac_secret = &(s->s3->read_mac_secret[0]);",
      "169:         mac_secret_size = &(s->s3->read_mac_secret_size);",
      "170:     } else {",
      "171:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "172:             s->mac_flags |= SSL_MAC_FLAG_WRITE_MAC_STREAM;",
      "173:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "176:         if (s->tlsext_use_etm)",
      "177:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "178:         else",
      "179:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "367:     if (s->s3->tmp.key_block_length != 0)",
      "368:         return (1);",
      "373:         SSLerr(SSL_F_TLS1_SETUP_KEY_BLOCK, SSL_R_CIPHER_OR_HASH_UNAVAILABLE);",
      "374:         return (0);",
      "375:     }",
      "",
      "[Removed Lines]",
      "370:     if (!ssl_cipher_get_evp",
      "371:         (s->session, &c, &hash, &mac_type, &mac_secret_size, &comp,",
      "372:          SSL_USE_ETM(s))) {",
      "",
      "[Added Lines]",
      "380:     if (!ssl_cipher_get_evp(s->session, &c, &hash, &mac_type, &mac_secret_size,",
      "381:                             &comp, s->tlsext_use_etm)) {",
      "",
      "---------------"
    ],
    "ssl/t1_lib.c||ssl/t1_lib.c": [
      "File: ssl/t1_lib.c -> ssl/t1_lib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674: #endif",
      "1675:     if (!custom_ext_add(s, 1, &ret, limit, al))",
      "1676:         return NULL;",
      "",
      "[Removed Lines]",
      "1677:     if (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC) {",
      "",
      "[Added Lines]",
      "1677:     if (s->tlsext_use_etm) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1683:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_RC4",
      "1684:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT",
      "1685:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT12)",
      "1687:         else {",
      "",
      "[Removed Lines]",
      "1686:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1686:             s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1917:     OPENSSL_free(s->s3->tmp.peer_sigalgs);",
      "1918:     s->s3->tmp.peer_sigalgs = NULL;",
      "1921: #ifndef OPENSSL_NO_SRP",
      "1922:     OPENSSL_free(s->srp_ctx.login);",
      "",
      "[Removed Lines]",
      "1919:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1919:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2264:         }",
      "2265: #endif",
      "2266:         else if (type == TLSEXT_TYPE_encrypt_then_mac)",
      "",
      "[Removed Lines]",
      "2267:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2267:             s->tlsext_use_etm = 1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2366:                              SSL_DTLSEXT_HB_DONT_SEND_REQUESTS);",
      "2367: #endif",
      "2371:     s->s3->flags &= ~TLS1_FLAGS_RECEIVED_EXTMS;",
      "",
      "[Removed Lines]",
      "2369:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2369:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2586:             if (s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD",
      "2587:                 && s->s3->tmp.new_cipher->algorithm_enc != SSL_RC4)",
      "2589:         } else if (type == TLSEXT_TYPE_extended_master_secret) {",
      "2590:             s->s3->flags |= TLS1_FLAGS_RECEIVED_EXTMS;",
      "2591:             if (!s->hit)",
      "",
      "[Removed Lines]",
      "2588:                 s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2588:                 s->tlsext_use_etm = 1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b757d2d82fd3ed4028d505b645258c9d97115443",
      "candidate_info": {
        "commit_hash": "b757d2d82fd3ed4028d505b645258c9d97115443",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/b757d2d82fd3ed4028d505b645258c9d97115443",
        "files": [
          "crypto/ec/ec_asn1.c"
        ],
        "message": "Iterate over EC_GROUP's poly array in a safe way\n\nPrevent that memory beyond the last element is accessed if every element\nof group->poly[] is non-zero\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2689)\n\n(cherry picked from commit 57f48f939ed5d3119e3c691ea0a8a3ac2f4a1a9e)",
        "before_after_code_files": [
          "crypto/ec/ec_asn1.c||crypto/ec/ec_asn1.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ec/ec_asn1.c||crypto/ec/ec_asn1.c": [
          "File: crypto/ec/ec_asn1.c -> crypto/ec/ec_asn1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: int EC_GROUP_get_basis_type(const EC_GROUP *group)",
          "17: {",
          "20:     if (EC_METHOD_get_field_type(EC_GROUP_method_of(group)) !=",
          "21:         NID_X9_62_characteristic_two_field)",
          "23:         return 0;",
          "28:     if (i == 4)",
          "29:         return NID_X9_62_ppBasis;",
          "",
          "[Removed Lines]",
          "18:     int i = 0;",
          "25:     while (group->poly[i] != 0)",
          "26:         i++;",
          "",
          "[Added Lines]",
          "18:     int i;",
          "26:     for (i = 0;",
          "27:          i < (int)OSSL_NELEM(group->poly) & group->poly[i] != 0;",
          "28:          i++)",
          "29:         continue;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ea9b8d847f0c209e3caccb95a05fc20298c1d6eb",
      "candidate_info": {
        "commit_hash": "ea9b8d847f0c209e3caccb95a05fc20298c1d6eb",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/ea9b8d847f0c209e3caccb95a05fc20298c1d6eb",
        "files": [
          "apps/openssl.c"
        ],
        "message": "Remove unused variable\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2566)\n(cherry picked from commit a19a6c8179faa3da0dedaaf2effae385cf7dd65d)",
        "before_after_code_files": [
          "apps/openssl.c||apps/openssl.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "apps/openssl.c||apps/openssl.c": [
          "File: apps/openssl.c -> apps/openssl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "58: static void list_disabled(void);",
          "59: char *default_config_file = NULL;",
          "62: BIO *bio_in = NULL;",
          "63: BIO *bio_out = NULL;",
          "64: BIO *bio_err = NULL;",
          "",
          "[Removed Lines]",
          "61: static CONF *config = NULL;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "248:  end:",
          "249:     OPENSSL_free(copied_argv);",
          "250:     OPENSSL_free(default_config_file);",
          "253:     lh_FUNCTION_free(prog);",
          "254:     OPENSSL_free(arg.argv);",
          "",
          "[Removed Lines]",
          "251:     NCONF_free(config);",
          "252:     config = NULL;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1b8055a18387ed93987df868f87df62b713922c1",
      "candidate_info": {
        "commit_hash": "1b8055a18387ed93987df868f87df62b713922c1",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/1b8055a18387ed93987df868f87df62b713922c1",
        "files": [
          "crypto/init.c"
        ],
        "message": "Fix the effect of no-dso in crypto/init.c\n\nWhen configured no-dso, there are no DSO_{whatever} macros defined.\nTherefore, before checking those, you have to check if OPENSSL_NO_DSO\nis defined.\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1902)\n(cherry picked from commit 6e290a25c2cbdc26119c0866c20d9292f9e64dd8)",
        "before_after_code_files": [
          "crypto/init.c||crypto/init.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/init.c||crypto/init.c": [
          "File: crypto/init.c -> crypto/init.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:     OPENSSL_cpuid_setup();",
          "82:     base_inited = 1;",
          "85: # ifdef DSO_WIN32",
          "86:     {",
          "87:         HMODULE handle = NULL;",
          "",
          "[Removed Lines]",
          "84: #ifndef OPENSSL_USE_NODELETE",
          "",
          "[Added Lines]",
          "84: #if !defined(OPENSSL_NO_DSO) && !defined(OPENSSL_USE_NODELETE)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "604: {",
          "605:     OPENSSL_INIT_STOP *newhand;",
          "608:     {",
          "609:         union {",
          "610:             void *sym;",
          "",
          "[Removed Lines]",
          "607: #ifndef OPENSSL_USE_NODELETE",
          "",
          "[Added Lines]",
          "607: #if !defined(OPENSSL_NO_DSO) && !defined(OPENSSL_USE_NODELETE)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0e3200b59d2de69e2a577eb269c5e65d2a3dfa11",
      "candidate_info": {
        "commit_hash": "0e3200b59d2de69e2a577eb269c5e65d2a3dfa11",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/0e3200b59d2de69e2a577eb269c5e65d2a3dfa11",
        "files": [
          "ssl/record/ssl3_record.c"
        ],
        "message": "Replace div-spoiler hack with simpler code, GH#1027,2253.\n\nThis is 1.1.0-specific 8f77fab82486c19ab48eee07718e190f76e6ea9a redux.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
        "before_after_code_files": [
          "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [
            "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c"
          ],
          "candidate": [
            "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c"
          ]
        }
      },
      "candidate_diff": {
        "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c": [
          "File: ssl/record/ssl3_record.c -> ssl/record/ssl3_record.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1212:     unsigned mac_end = rec->length;",
          "1213:     unsigned mac_start = mac_end - md_size;",
          "1218:     unsigned scan_start = 0;",
          "1219:     unsigned i, j;",
          "1221:     unsigned rotate_offset;",
          "1223:     OPENSSL_assert(rec->orig_len >= md_size);",
          "",
          "[Removed Lines]",
          "1220:     unsigned div_spoiler;",
          "",
          "[Added Lines]",
          "1214:     unsigned in_mac;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1231:     if (rec->orig_len > md_size + 255 + 1)",
          "1232:         scan_start = rec->orig_len - (md_size + 255 + 1);",
          "1245:     memset(rotated_mac, 0, md_size);",
          "1246:     for (i = scan_start, j = 0; i < rec->orig_len; i++) {",
          "1249:         unsigned char b = rec->data[i];",
          "1251:         j &= constant_time_lt(j, md_size);",
          "1252:     }",
          "",
          "[Removed Lines]",
          "1241:     div_spoiler = md_size >> 1;",
          "1242:     div_spoiler <<= (sizeof(div_spoiler) - 1) * 8;",
          "1243:     rotate_offset = (div_spoiler + mac_start - scan_start) % md_size;",
          "1247:         unsigned char mac_started = constant_time_ge_8(i, mac_start);",
          "1248:         unsigned char mac_ended = constant_time_ge_8(i, mac_end);",
          "1250:         rotated_mac[j++] |= b & mac_started & ~mac_ended;",
          "",
          "[Added Lines]",
          "1234:     in_mac = 0;",
          "1235:     rotate_offset = 0;",
          "1238:         unsigned mac_started = constant_time_eq(i, mac_start);",
          "1239:         unsigned mac_ended = constant_time_lt(i, mac_end);",
          "1242:         in_mac |= mac_started;",
          "1243:         in_mac &= mac_ended;",
          "1244:         rotate_offset |= j & mac_started;",
          "1245:         rotated_mac[j++] |= b & in_mac;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "89d0853a7fe12d6ae79d148425717fed740ae136",
      "candidate_info": {
        "commit_hash": "89d0853a7fe12d6ae79d148425717fed740ae136",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/89d0853a7fe12d6ae79d148425717fed740ae136",
        "files": [
          "test/ssl-tests/01-simple.conf",
          "test/ssl-tests/01-simple.conf.in"
        ],
        "message": "Add server signature algorithm bug test.\n\nAdd a client authentication signature algorithm to simple\nssl test and a server signature algorithm. Since we don't\ndo client auth this should have no effect. However if we\nuse client auth signature algorithms by mistake this will\nabort the handshake with a no shared signature algorithms\nerror.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2297)",
        "before_after_code_files": [
          "test/ssl-tests/01-simple.conf||test/ssl-tests/01-simple.conf",
          "test/ssl-tests/01-simple.conf.in||test/ssl-tests/01-simple.conf.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/ssl-tests/01-simple.conf||test/ssl-tests/01-simple.conf": [
          "File: test/ssl-tests/01-simple.conf -> test/ssl-tests/01-simple.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # Generated with generate_ssl_tests.pl",
          "5: test-0 = 0-default",
          "7: # ===========================================================",
          "9: [0-default]",
          "",
          "[Removed Lines]",
          "3: num_tests = 2",
          "6: test-1 = 1-verify-cert",
          "",
          "[Added Lines]",
          "3: num_tests = 3",
          "6: test-1 = 1-Server signature algorithms bug",
          "7: test-2 = 2-verify-cert",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30: # ===========================================================",
          "40: Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem",
          "41: CipherString = DEFAULT",
          "42: PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem",
          "45: CipherString = DEFAULT",
          "46: VerifyMode = Peer",
          "48: [test-1]",
          "49: ExpectedClientAlert = UnknownCA",
          "50: ExpectedResult = ClientFail",
          "",
          "[Removed Lines]",
          "32: [1-verify-cert]",
          "33: ssl_conf = 1-verify-cert-ssl",
          "35: [1-verify-cert-ssl]",
          "36: server = 1-verify-cert-server",
          "37: client = 1-verify-cert-client",
          "39: [1-verify-cert-server]",
          "44: [1-verify-cert-client]",
          "",
          "[Added Lines]",
          "33: [1-Server signature algorithms bug]",
          "34: ssl_conf = 1-Server signature algorithms bug-ssl",
          "36: [1-Server signature algorithms bug-ssl]",
          "37: server = 1-Server signature algorithms bug-server",
          "38: client = 1-Server signature algorithms bug-client",
          "40: [1-Server signature algorithms bug-server]",
          "43: ClientSignatureAlgorithms = ECDSA+SHA256",
          "46: [1-Server signature algorithms bug-client]",
          "48: SignatureAlgorithms = RSA+SHA256",
          "49: VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem",
          "53: ExpectedResult = Success",
          "56: # ===========================================================",
          "58: [2-verify-cert]",
          "59: ssl_conf = 2-verify-cert-ssl",
          "61: [2-verify-cert-ssl]",
          "62: server = 2-verify-cert-server",
          "63: client = 2-verify-cert-client",
          "65: [2-verify-cert-server]",
          "66: Certificate = ${ENV::TEST_CERTS_DIR}/servercert.pem",
          "67: CipherString = DEFAULT",
          "68: PrivateKey = ${ENV::TEST_CERTS_DIR}/serverkey.pem",
          "70: [2-verify-cert-client]",
          "71: CipherString = DEFAULT",
          "72: VerifyMode = Peer",
          "74: [test-2]",
          "",
          "---------------"
        ],
        "test/ssl-tests/01-simple.conf.in||test/ssl-tests/01-simple.conf.in": [
          "File: test/ssl-tests/01-simple.conf.in -> test/ssl-tests/01-simple.conf.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "19:         test   => { \"ExpectedResult\" => \"Success\" },",
          "20:     },",
          "22:     {",
          "23:         name => \"verify-cert\",",
          "24:         server => { },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22:     {",
          "23:         name => \"Server signature algorithms bug\",",
          "24:         # Should have no effect as we aren't doing client auth",
          "25:         server => { \"ClientSignatureAlgorithms\" => \"ECDSA+SHA256\" },",
          "26:         client => { \"SignatureAlgorithms\" => \"RSA+SHA256\" },",
          "27:         test   => { \"ExpectedResult\" => \"Success\" },",
          "28:     },",
          "",
          "---------------"
        ]
      }
    }
  ]
}