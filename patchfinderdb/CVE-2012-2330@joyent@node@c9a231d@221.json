{
  "cve_id": "CVE-2012-2330",
  "cve_desc": "The Update method in src/node_http_parser.cc in Node.js before 0.6.17 and 0.7 before 0.7.8 does not properly check the length of a string, which allows remote attackers to obtain sensitive information (request header contents) and possibly spoof HTTP headers via a zero length string.",
  "repo": "joyent/node",
  "patch_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
  "patch_info": {
    "commit_hash": "c9a231db0e59658be419d926b1dfa17b939ba158",
    "repo": "joyent/node",
    "commit_url": "https://github.com/joyent/node/commit/c9a231d",
    "files": [
      "src/node_http_parser.cc"
    ],
    "message": "typo in node_http_parser",
    "before_after_code_files": [
      "src/node_http_parser.cc||src/node_http_parser.cc"
    ]
  },
  "patch_diff": {
    "src/node_http_parser.cc||src/node_http_parser.cc": [
      "File: src/node_http_parser.cc -> src/node_http_parser.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:   void Update(const char* str, size_t size) {",
      "192:     if (str_ == NULL)",
      "193:       str_ = str;",
      "197:       char* s = new char[size_ + size];",
      "",
      "[Removed Lines]",
      "194:     else if (on_heap_ || str_ + size != str) {",
      "",
      "[Added Lines]",
      "194:     else if (on_heap_ || str_ + size_ != str) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f06abda6f58e517349d1b63a2cbf5a8d04a03505",
      "candidate_info": {
        "commit_hash": "f06abda6f58e517349d1b63a2cbf5a8d04a03505",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/f06abda6f58e517349d1b63a2cbf5a8d04a03505",
        "files": [
          "AUTHORS",
          "ChangeLog",
          "doc/about/index.html",
          "doc/community/index.html",
          "doc/index.html",
          "doc/logos/index.html",
          "src/node_version.h"
        ],
        "message": "2012.03.13, Version 0.7.6 (unstable)\n\n* Upgrade v8 to 3.9.17\n\n* Upgrade npm to 1.1.8\n  - Add support for os/cpu fields in package.json (Adam Blackburn)\n  - Automatically node-gyp packages containing a binding.gyp\n  - Fix failures unpacking in UNC shares\n  - Never create un-listable directories\n  - Handle cases where an optionalDependency fails to build\n\n* events: newListener emit correct fn when using 'once' (Roly Fentanes)\n\n* url: Ignore empty port component (\u0141ukasz Walukiewicz)\n\n* module: replace 'children' array (isaacs)\n\n* tls: parse multiple values of a key in ssl certificate (Sambasiva Suda)\n\n* cluster: support passing of named pipes (Ben Noordhuis)\n\n* Windows: include syscall in fs errors (Bert Belder)\n\n* http: #2888 Emit end event only once (Igor Zinkovsky)\n\n* readline: add multiline support (Rlidwka)\n\n* process: add `process.hrtime()` (Nathan Rajlich)\n\n* net, http, https: add localAddress option (Dmitry Nizovtsev)\n\n* addon improvements (Nathan Rajlich)\n\n* build improvements (Ben Noordhuis, Sadique Ali, T.C. Hollingsworth, Nathan Rajlich)\n\n* add support for \"SEARCH\" request methods (Nathan Rajlich)\n\n* expose the zlib and http_parser version in process.versions (Nathan Rajlich)",
        "before_after_code_files": [
          "src/node_version.h||src/node_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node_version.h||src/node_version.h": [
          "File: src/node_version.h -> src/node_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: #define NODE_MAJOR_VERSION 0",
          "30: #define NODE_MINOR_VERSION 7",
          "31: #define NODE_PATCH_VERSION 6",
          "34: #ifndef NODE_STRINGIFY",
          "35: #define NODE_STRINGIFY(n) NODE_STRINGIFY_HELPER(n)",
          "",
          "[Removed Lines]",
          "32: #define NODE_VERSION_IS_RELEASE 0",
          "",
          "[Added Lines]",
          "32: #define NODE_VERSION_IS_RELEASE 1",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cc15299c32b4fc39c2eb2c08b0265e462f875544",
      "candidate_info": {
        "commit_hash": "cc15299c32b4fc39c2eb2c08b0265e462f875544",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/cc15299c32b4fc39c2eb2c08b0265e462f875544",
        "files": [
          "common.gypi",
          "configure",
          "node.gyp",
          "src/v8abbr.h",
          "src/v8constants.h",
          "src/v8ustack.d",
          "tools/genv8constants.py"
        ],
        "message": "build: add support for DTrace and postmortem\n\n* fixes #2110\n* includes V8 postmortem metadata in Solaris builds\n* adds GYP support for DTrace probes and ustack helper\n* ustack helper derives constants dynamically from libv8_base.a\n* build with DTrace support by default on SunOS",
        "before_after_code_files": [
          "common.gypi||common.gypi",
          "node.gyp||node.gyp",
          "src/v8abbr.h||src/v8abbr.h",
          "src/v8constants.h||src/v8constants.h",
          "src/v8ustack.d||src/v8ustack.d",
          "tools/genv8constants.py||tools/genv8constants.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "common.gypi||common.gypi": [
          "File: common.gypi -> common.gypi",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:     'library%': 'static_library',    # allow override to 'shared_library' for DLL/.so builds",
          "9:     'component%': 'static_library',  # NB. these names match with what V8 expects",
          "10:     'msvs_multi_core_compile': '0',  # we do enable multicore compiles, but not using the V8 way",
          "11:   },",
          "13:   'target_defaults': {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11:     'v8_postmortem_support': 'true', # V8's postmortem metadata",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "42:           }],",
          "43:           ['OS==\"solaris\"', {",
          "44:             'cflags': [ '-fno-omit-frame-pointer' ],",
          "45:           }],",
          "46:           ['strict_aliasing!=\"true\"', {",
          "47:             'cflags': [ '-fno-strict-aliasing' ],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46:             # pull in V8's postmortem metadata",
          "47:             'ldflags': [ '-Wl,-z,allextract' ]",
          "",
          "---------------"
        ],
        "node.gyp||node.gyp": [
          "File: node.gyp -> node.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:     # Turn off -Werror in V8",
          "5:     # See http://codereview.chromium.org/8159015",
          "6:     'werror': '',",
          "8:     'node_shared_v8%': 'false',",
          "9:     'node_shared_zlib%': 'false',",
          "10:     'node_use_openssl%': 'true',",
          "",
          "[Removed Lines]",
          "7:     'node_use_dtrace': 'false',",
          "",
          "[Added Lines]",
          "7:     'node_use_dtrace%': 'false',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "138:         }],",
          "140:         [ 'node_use_dtrace==\"true\"', {",
          "141:           'sources': [",
          "142:             'src/node_dtrace.cc',",
          "147:           ],",
          "150:         [ 'node_shared_v8==\"true\"', {",
          "151:           'sources': [",
          "",
          "[Removed Lines]",
          "143:             'src/node_dtrace.h',",
          "144:             # why does node_provider.h get generated into src and not",
          "145:             # SHARED_INTERMEDIATE_DIR?",
          "146:             'src/node_provider.h',",
          "148:         }],",
          "",
          "[Added Lines]",
          "141:           'defines': [ 'HAVE_DTRACE=1' ],",
          "142:           'dependencies': [ 'node_dtrace_header' ],",
          "143:           'include_dirs': [ '<(SHARED_INTERMEDIATE_DIR)' ],",
          "144:           #",
          "145:           # node_dtrace_provider.cc and node_dtrace_ustack.cc do not actually",
          "146:           # exist.  They're here to trick GYP into linking the corresponding",
          "147:           # object files into the final \"node\" executable.  These files are",
          "148:           # generated by \"dtrace -G\" using custom actions below, and the",
          "149:           # GYP-generated Makefiles will properly build them when needed.",
          "150:           #",
          "153:             'src/node_dtrace_provider.cc'",
          "155:           'conditions': [ [",
          "156:             'target_arch==\"ia32\"', {",
          "157:               'sources': [ 'src/node_dtrace_ustack.cc' ]",
          "158:             }",
          "159:           ] ],",
          "160:         } ],",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "254:         },",
          "255:       ],",
          "256:     }, # end node_js2c",
          "257:   ] # end targets",
          "258: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "269:     {",
          "270:       'target_name': 'node_dtrace_header',",
          "271:       'type': 'none',",
          "272:       'conditions': [",
          "273:         [ 'node_use_dtrace==\"true\"', {",
          "274:           'actions': [",
          "275:             {",
          "276:               'action_name': 'node_dtrace_header',",
          "277:               'inputs': [ 'src/node_provider.d' ],",
          "278:               'outputs': [ '<(SHARED_INTERMEDIATE_DIR)/node_provider.h' ],",
          "279:               'action': [ 'dtrace', '-h', '-xnolibs', '-s', '<@(_inputs)',",
          "280:                 '-o', '<@(_outputs)' ]",
          "281:             }",
          "282:           ]",
          "283:         } ]",
          "284:       ]",
          "285:     },",
          "286:     {",
          "287:       'target_name': 'node_dtrace_provider',",
          "288:       'type': 'none',",
          "289:       'conditions': [",
          "290:         [ 'node_use_dtrace==\"true\"', {",
          "291:           'actions': [",
          "292:             {",
          "293:               'action_name': 'node_dtrace_provider_o',",
          "294:               'inputs': [",
          "295:                 'src/node_provider.d',",
          "296:                 '<(PRODUCT_DIR)/obj.target/node/src/node_dtrace.o'",
          "297:               ],",
          "298:               'outputs': [",
          "299:                 '<(PRODUCT_DIR)/obj.target/node/src/node_dtrace_provider.o'",
          "300:               ],",
          "301:               'action': [ 'dtrace', '-G', '-xnolibs', '-s', '<@(_inputs)',",
          "302:                 '-o', '<@(_outputs)' ]",
          "303:             }",
          "304:           ]",
          "305:         } ]",
          "306:       ]",
          "307:     },",
          "308:     {",
          "309:       'target_name': 'node_dtrace_ustack',",
          "310:       'type': 'none',",
          "311:       'conditions': [",
          "312:         [ 'node_use_dtrace==\"true\"', {",
          "313:           'actions': [",
          "314:             {",
          "315:               'action_name': 'node_dtrace_ustack_constants',",
          "316:               'inputs': [",
          "317:                 '<(PRODUCT_DIR)/obj.target/deps/v8/tools/gyp/libv8_base.a'",
          "318:               ],",
          "319:               'outputs': [",
          "320:                 '<(SHARED_INTERMEDIATE_DIR)/v8constants.h'",
          "321:               ],",
          "322:               'action': [",
          "323:                 'tools/genv8constants.py',",
          "324:                 '<@(_outputs)',",
          "325:                 '<@(_inputs)'",
          "326:               ]",
          "327:             },",
          "328:             {",
          "329:               'action_name': 'node_dtrace_ustack',",
          "330:               'inputs': [",
          "331:                 'src/v8ustack.d',",
          "332:                 '<(SHARED_INTERMEDIATE_DIR)/v8constants.h'",
          "333:               ],",
          "334:               'outputs': [",
          "335:                 '<(PRODUCT_DIR)/obj.target/node/src/node_dtrace_ustack.o'",
          "336:               ],",
          "337:               'action': [",
          "338:                 'dtrace', '-32', '-I<(SHARED_INTERMEDIATE_DIR)', '-Isrc',",
          "339:                 '-C', '-G', '-s', 'src/v8ustack.d', '-o', '<@(_outputs)',",
          "340:               ]",
          "341:             }",
          "342:           ]",
          "343:         } ],",
          "344:       ]",
          "345:     }",
          "",
          "---------------"
        ],
        "src/v8abbr.h||src/v8abbr.h": [
          "File: src/v8abbr.h -> src/v8abbr.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: #ifndef V8_ABBR_H",
          "7: #define V8_ABBR_H",
          "10: #define V8_OFF_FP_FUNC              ((uint32_t)V8DBG_OFF_FP_FUNCTION)",
          "11: #define V8_OFF_FP_CONTEXT           ((uint32_t)V8DBG_OFF_FP_CONTEXT)",
          "12: #define V8_OFF_FP_MARKER            ((uint32_t)V8DBG_OFF_FP_MARKER)",
          "15: #define V8_FT_ENTRY                 V8DBG_FRAMETYPE_ENTRYFRAME",
          "16: #define V8_FT_ENTRYCONSTRUCT        V8DBG_FRAMETYPE_ENTRYCONSTRUCTFRAME",
          "17: #define V8_FT_EXIT                  V8DBG_FRAMETYPE_EXITFRAME",
          "18: #define V8_FT_JAVASCRIPT            V8DBG_FRAMETYPE_JAVASCRIPTFRAME",
          "19: #define V8_FT_OPTIMIZED             V8DBG_FRAMETYPE_OPTIMIZEDFRAME",
          "20: #define V8_FT_INTERNAL              V8DBG_FRAMETYPE_INTERNALFRAME",
          "21: #define V8_FT_CONSTRUCT             V8DBG_FRAMETYPE_CONSTRUCTFRAME",
          "22: #define V8_FT_ADAPTOR               V8DBG_FRAMETYPE_ARGUMENTSADAPTORFRAME",
          "25: #define V8_SmiTagMask               V8DBG_SMITAGMASK",
          "26: #define V8_SmiTag                   V8DBG_SMITAG",
          "27: #define V8_SmiValueShift            V8_SmiTagMask",
          "29: #define V8_HeapObjectTagMask        V8DBG_HEAPOBJECTTAGMASK",
          "30: #define V8_HeapObjectTag            V8DBG_HEAPOBJECTTAG",
          "32: #define V8_IsNotStringMask          V8DBG_ISNOTSTRINGMASK",
          "33: #define V8_StringTag                V8DBG_STRINGTAG",
          "35: #define V8_StringEncodingMask       V8DBG_STRINGENCODINGMASK",
          "36: #define V8_AsciiStringTag           V8DBG_ASCIISTRINGTAG",
          "38: #define V8_StringRepresentationMask V8DBG_STRINGREPRESENTATIONMASK",
          "39: #define V8_SeqStringTag             V8DBG_SEQSTRINGTAG",
          "40: #define V8_ConsStringTag            V8DBG_CONSSTRINGTAG",
          "41: #define V8_ExternalStringTag        V8DBG_EXTERNALSTRINGTAG",
          "44: #define V8_IT_FIXEDARRAY            V8DBG_TYPE_FIXEDARRAY__FIXED_ARRAY_TYPE",
          "45: #define V8_IT_CODE                  V8DBG_TYPE_CODE__CODE_TYPE",
          "48: #define NODE_OFF_EXTSTR_DATA        0x4",
          "51: #define V8_OFF_HEAP(off)            ((off) - 1)",
          "53: #define V8_OFF_FUNC_SHARED  \\",
          "54:     V8_OFF_HEAP(V8DBG_CLASS_JSFUNCTION__SHARED__SHAREDFUNCTIONINFO)",
          "55: #define V8_OFF_SHARED_NAME  \\",
          "56:     V8_OFF_HEAP(V8DBG_CLASS_SHAREDFUNCTIONINFO__NAME__OBJECT)",
          "57: #define V8_OFF_SHARED_INFERRED  \\",
          "58:     V8_OFF_HEAP(V8DBG_CLASS_SHAREDFUNCTIONINFO__INFERRED_NAME__STRING)",
          "59: #define V8_OFF_SHARED_SCRIPT  \\",
          "60:     V8_OFF_HEAP(V8DBG_CLASS_SHAREDFUNCTIONINFO__SCRIPT__OBJECT)",
          "61: #define V8_OFF_SHARED_FUNTOK  \\",
          "62:     V8_OFF_HEAP(V8DBG_CLASS_SHAREDFUNCTIONINFO__FUNCTION_TOKEN_POSITION__SMI)",
          "63: #define V8_OFF_SCRIPT_NAME  \\",
          "64:     V8_OFF_HEAP(V8DBG_CLASS_SCRIPT__NAME__OBJECT)",
          "65: #define V8_OFF_SCRIPT_LENDS \\",
          "66:     V8_OFF_HEAP(V8DBG_CLASS_SCRIPT__LINE_ENDS__OBJECT)",
          "67: #define V8_OFF_STR_LENGTH \\",
          "68:     V8_OFF_HEAP(V8DBG_CLASS_STRING__LENGTH__SMI)",
          "69: #define V8_OFF_STR_CHARS  \\",
          "70:     V8_OFF_HEAP(V8DBG_CLASS_SEQASCIISTRING__CHARS__CHAR)",
          "71: #define V8_OFF_CONSSTR_CAR  \\",
          "72:     V8_OFF_HEAP(V8DBG_CLASS_CONSSTRING__FIRST__STRING)",
          "73: #define V8_OFF_CONSSTR_CDR  \\",
          "74:     V8_OFF_HEAP(V8DBG_CLASS_CONSSTRING__SECOND__STRING)",
          "75: #define V8_OFF_EXTSTR_RSRC  \\",
          "76:     V8_OFF_HEAP(V8DBG_CLASS_EXTERNALSTRING__RESOURCE__OBJECT)",
          "77: #define V8_OFF_FA_SIZE    \\",
          "78:     V8_OFF_HEAP(V8DBG_CLASS_FIXEDARRAYBASE__LENGTH__SMI)",
          "79: #define V8_OFF_FA_DATA    \\",
          "80:     V8_OFF_HEAP(V8DBG_CLASS_FIXEDARRAY__DATA__UINTPTR_T)",
          "81: #define V8_OFF_HEAPOBJ_MAP  \\",
          "82:     V8_OFF_HEAP(V8DBG_CLASS_HEAPOBJECT__MAP__MAP)",
          "83: #define V8_OFF_MAP_ATTRS  \\",
          "84:     V8_OFF_HEAP(V8DBG_CLASS_MAP__INSTANCE_ATTRIBUTES__INT)",
          "",
          "---------------"
        ],
        "src/v8constants.h||src/v8constants.h": [
          "File: src/v8constants.h -> src/v8constants.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/v8ustack.d||src/v8ustack.d": [
          "File: src/v8ustack.d -> src/v8ustack.d",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: #include <v8constants.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14: #include <v8abbr.h>",
          "",
          "---------------"
        ],
        "tools/genv8constants.py||tools/genv8constants.py": [
          "File: tools/genv8constants.py -> tools/genv8constants.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #!/usr/bin/env python",
          "3: #",
          "4: # genv8constants.py output_file libv8_base.a",
          "5: #",
          "6: # Emits v8dbg constants stored in libv8_base.a in a format suitable for the V8",
          "7: # ustack helper.",
          "8: #",
          "10: import re",
          "11: import subprocess",
          "12: import sys",
          "14: if len(sys.argv) != 3:",
          "15:   print \"usage: objsym.py outfile libv8_base.a\"",
          "16:   sys.exit(2);",
          "18: outfile = file(sys.argv[1], 'w');",
          "19: pipe = subprocess.Popen([ 'objdump', '-z', '-D', sys.argv[2] ],",
          "20:     stdout=subprocess.PIPE).stdout;",
          "21: pattern = re.compile('00000000 <(v8dbg_.*)>:');",
          "22: numpattern = re.compile('[0-9a-fA-F]{2}');",
          "24: outfile.write(\"\"\"",
          "32: #ifndef V8_CONSTANTS_H",
          "33: #define V8_CONSTANTS_H",
          "35: #if defined(__i386)",
          "36: \"\"\");",
          "38: curr_sym = None;",
          "39: curr_val = 0;",
          "40: curr_octet = 0;",
          "42: for line in pipe:",
          "43:   if curr_sym != None:",
          "44:     #",
          "45:     # This bit of code has nasty knowledge of the objdump text output",
          "46:     # format, but this is the most obvious robust approach.  We could almost",
          "47:     # rely on looking at numbered fields, but some instructions look very",
          "48:     # much like hex numbers (e.g., \"adc\"), and we don't want to risk picking",
          "49:     # those up by mistake, so we look at character-based columns intead.",
          "50:     #",
          "51:     for i in range (0, 3):",
          "52:       # 6-character margin, 2-characters + 1 space for each field",
          "53:       idx = 6 + i * 3;",
          "54:       octetstr = line[idx:idx+2]",
          "55:       if not numpattern.match(octetstr):",
          "56:         break;",
          "58:       curr_val += int('0x%s' % octetstr, 16) << (curr_octet * 8);",
          "59:       curr_octet += 1;",
          "61:     if curr_octet < 4:",
          "62:       continue;",
          "64:     outfile.write(\"#define %s 0x%x\\n\" % (curr_sym.upper(), curr_val));",
          "65:     curr_sym = None;",
          "66:     curr_val = 0;",
          "67:     curr_octet = 0;",
          "68:     continue;",
          "70:   match = pattern.match(line)",
          "71:   if match == None:",
          "72:     continue;",
          "74:   curr_sym = match.group(1);",
          "76: outfile.write(\"\"\"",
          "77: #else",
          "78: #error \"only i386 is supported for DTrace ustack helper\"",
          "79: #endif",
          "82: \"\"\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "077f9d7293468ad5446b330999fe47bc40e47571",
      "candidate_info": {
        "commit_hash": "077f9d7293468ad5446b330999fe47bc40e47571",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/077f9d7293468ad5446b330999fe47bc40e47571",
        "files": [
          "src/node.cc"
        ],
        "message": "Windows: use unicode environment",
        "before_after_code_files": [
          "src/node.cc||src/node.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/node.cc||src/node.cc": [
          "File: src/node.cc -> src/node.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1296:   env_key[1] = (WCHAR) drive;",
          "1298:   DWORD len = GetEnvironmentVariableW(env_key, NULL, 0);",
          "1301:     Local<String> cwd = String::Concat(String::New(&drive, 1),",
          "1302:                                        String::New(\":\\\\\"));",
          "",
          "[Removed Lines]",
          "1299:   if (len == 0 && GetLastError() == ERROR_ENVVAR_NOT_FOUND) {",
          "",
          "[Added Lines]",
          "1299:   if (len == 0 && (GetLastError() == ERROR_ENVVAR_NOT_FOUND ||",
          "1300:       GetLastError() == ERROR_SUCCESS)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1317:   }",
          "1319:   DWORD len2 = GetEnvironmentVariableW(env_key, buffer, len);",
          "1322:     delete[] buffer;",
          "1323:     Local<Value> exception = Exception::Error(",
          "",
          "[Removed Lines]",
          "1320:   if (len2 == 0 || len2 >= len) {",
          "",
          "[Added Lines]",
          "1321:   if ((len2 == 0 && GetLastError() != ERROR_SUCCESS) || len2 >= len) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1870: static Handle<Value> EnvGetter(Local<String> property,",
          "1871:                                const AccessorInfo& info) {",
          "1872:   String::Utf8Value key(property);",
          "1873:   const char* val = getenv(*key);",
          "1874:   if (val) {",
          "1876:     return scope.Close(String::New(val));",
          "1877:   }",
          "1878:   return Undefined();",
          "1879: }",
          "",
          "[Removed Lines]",
          "1875:     HandleScope scope;",
          "",
          "[Added Lines]",
          "1873:   HandleScope scope;",
          "1874: #ifdef __POSIX__",
          "1880: #else  // _WIN32",
          "1881:   String::Value key(property);",
          "1882:   WCHAR buffer[32767]; // The maximum size allowed for environment variables.",
          "1883:   DWORD result = GetEnvironmentVariableW(reinterpret_cast<WCHAR*>(*key),",
          "1884:                                          buffer,",
          "1885:                                          ARRAY_SIZE(buffer));",
          "1889:   if ((result > 0 || GetLastError() == ERROR_SUCCESS) &&",
          "1890:       result < ARRAY_SIZE(buffer)) {",
          "1891:     return scope.Close(String::New(reinterpret_cast<uint16_t*>(buffer), result));",
          "1892:   }",
          "1893: #endif",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1883:                                Local<Value> value,",
          "1884:                                const AccessorInfo& info) {",
          "1885:   HandleScope scope;",
          "1886:   String::Utf8Value key(property);",
          "1887:   String::Utf8Value val(value);",
          "1890:   setenv(*key, *val, 1);",
          "1898:   }",
          "1900: #endif",
          "1903: }",
          "1906: static Handle<Integer> EnvQuery(Local<String> property,",
          "1907:                                 const AccessorInfo& info) {",
          "1908:   String::Utf8Value key(property);",
          "1909:   if (getenv(*key)) {",
          "1911:     return scope.Close(Integer::New(None));",
          "1912:   }",
          "1914: }",
          "1917: static Handle<Boolean> EnvDeleter(Local<String> property,",
          "1918:                                   const AccessorInfo& info) {",
          "1919:   HandleScope scope;",
          "1924: #ifdef __POSIX__",
          "1926: #else",
          "1940: }",
          "1943: static Handle<Array> EnvEnumerator(const AccessorInfo& info) {",
          "1944:   HandleScope scope;",
          "1946:   int size = 0;",
          "1947:   while (environ[size]) size++;",
          "",
          "[Removed Lines]",
          "1889: #ifdef __POSIX__",
          "1891: #else  // __WIN32__",
          "1892:   int n = key.length() + val.length() + 2;",
          "1893:   char* pair = new char[n];",
          "1894:   snprintf(pair, n, \"%s=%s\", *key, *val);",
          "1895:   int r = _putenv(pair);",
          "1896:   if (r) {",
          "1897:     fprintf(stderr, \"error putenv: '%s'\\n\", pair);",
          "1899:   delete [] pair;",
          "1902:   return value;",
          "1910:     HandleScope scope;",
          "1913:   return Handle<Integer>();",
          "1921:   String::Utf8Value key(property);",
          "1923:   if (getenv(*key)) {",
          "1925:     unsetenv(*key); // prototyped as `void unsetenv(const char*)` on some platforms",
          "1927:     int n = key.length() + 2;",
          "1928:     char* pair = new char[n];",
          "1929:     snprintf(pair, n, \"%s=\", *key);",
          "1930:     int r = _putenv(pair);",
          "1931:     if (r) {",
          "1932:       fprintf(stderr, \"error unsetenv: '%s'\\n\", pair);",
          "1933:     }",
          "1934:     delete [] pair;",
          "1935: #endif",
          "1936:     return True();",
          "1937:   }",
          "1939:   return False();",
          "",
          "[Added Lines]",
          "1903: #ifdef __POSIX__",
          "1907: #else  // _WIN32",
          "1908:   String::Value key(property);",
          "1909:   String::Value val(value);",
          "1910:   WCHAR* key_ptr = reinterpret_cast<WCHAR*>(*key);",
          "1912:   if (key_ptr[0] != L'=') {",
          "1913:     SetEnvironmentVariableW(key_ptr, reinterpret_cast<WCHAR*>(*val));",
          "1917:   return scope.Close(value);",
          "1923:   HandleScope scope;",
          "1924: #ifdef __POSIX__",
          "1929: #else  // _WIN32",
          "1930:   String::Value key(property);",
          "1931:   WCHAR* key_ptr = reinterpret_cast<WCHAR*>(*key);",
          "1932:   if (GetEnvironmentVariableW(key_ptr, NULL, 0) > 0 ||",
          "1933:       GetLastError() == ERROR_SUCCESS) {",
          "1934:     if (key_ptr[0] == L'=') {",
          "1936:       return scope.Close(Integer::New(v8::ReadOnly ||",
          "1937:                                       v8::DontDelete ||",
          "1938:                                       v8::DontEnum));",
          "1939:     } else {",
          "1940:       return scope.Close(Integer::New(None));",
          "1941:     }",
          "1942:   }",
          "1943: #endif",
          "1945:   return scope.Close(Handle<Integer>());",
          "1953:   String::Utf8Value key(property);",
          "1955:   if (unsetenv(*key) < 0) {",
          "1958:     return scope.Close(Boolean::New(getenv(*key) == NULL));",
          "1959:   };",
          "1961:   String::Value key(property);",
          "1962:   WCHAR* key_ptr = reinterpret_cast<WCHAR*>(*key);",
          "1963:   if (key_ptr[0] == L'=' || !SetEnvironmentVariableW(key_ptr, NULL)) {",
          "1966:     bool rv = GetEnvironmentVariableW(key_ptr, NULL, NULL) == 0 &&",
          "1967:               GetLastError() != ERROR_SUCCESS;",
          "1968:     return scope.Close(Boolean::New(rv));",
          "1969:   }",
          "1970: #endif",
          "1972:   return v8::True();",
          "1978: #ifdef __POSIX__",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1954:     const int length = s ? s - var : strlen(var);",
          "1955:     env->Set(i, String::New(var, length));",
          "1956:   }",
          "1958:   return scope.Close(env);",
          "1959: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1990: #else  // _WIN32",
          "1991:   WCHAR* environment = GetEnvironmentStringsW();",
          "1992:   if (environment == NULL) {",
          "1994:     return scope.Close(Handle<Array>());",
          "1995:   }",
          "1996:   Local<Array> env = Array::New();",
          "1997:   WCHAR* p = environment;",
          "1998:   int i = 0;",
          "1999:   while (*p != NULL) {",
          "2000:     WCHAR *s;",
          "2001:     if (*p == L'=') {",
          "2003:       p += wcslen(p) + 1;",
          "2004:       continue;",
          "2005:     } else {",
          "2006:       s = wcschr(p, L'=');",
          "2007:     }",
          "2008:     if (!s) {",
          "2009:       s = p + wcslen(p);",
          "2010:     }",
          "2011:     env->Set(i++, String::New(reinterpret_cast<uint16_t*>(p), s - p));",
          "2012:     p = s + wcslen(s) + 1;",
          "2013:   }",
          "2014:   FreeEnvironmentStringsW(environment);",
          "2015: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1df222f179f3c7e6181a319ecc90a1e0fb0a2975",
      "candidate_info": {
        "commit_hash": "1df222f179f3c7e6181a319ecc90a1e0fb0a2975",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/1df222f179f3c7e6181a319ecc90a1e0fb0a2975",
        "files": [
          "lib/net.js"
        ],
        "message": "Fix breakage introduced in de65ba7",
        "before_after_code_files": [
          "lib/net.js||linet.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/net.js||linet.js": [
          "File: lib/net.js -> linet.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "238: Socket.prototype.pause = function() {",
          "240:   this._paused = true;",
          "241:   if (this._connecting) {",
          "",
          "[Removed Lines]",
          "239:   if (this._paused) return;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "251: Socket.prototype.resume = function() {",
          "253:   this._paused = false;",
          "254:   if (this._connecting) {",
          "",
          "[Removed Lines]",
          "252:   if (!this._paused) return;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "28e851c169ad589a7f6a1357fd84fd75254a2ab7",
      "candidate_info": {
        "commit_hash": "28e851c169ad589a7f6a1357fd84fd75254a2ab7",
        "repo": "joyent/node",
        "commit_url": "https://github.com/joyent/node/commit/28e851c169ad589a7f6a1357fd84fd75254a2ab7",
        "files": [
          "lib/repl.js",
          "test/simple/test-repl.js"
        ],
        "message": "Warn about running npm in the repl",
        "before_after_code_files": [
          "lib/repl.js||lirepl.js",
          "test/simple/test-repl.js||test/simple/test-repl.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/roamm/node/pull/1",
          "https://github.com/kingzone/node/pull/1",
          "https://github.com/OpenFPGAduino/node/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/repl.js||lirepl.js": [
          "File: lib/repl.js -> lirepl.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "282:       if (isSyntaxError(e)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/simple/test-repl.js||test/simple/test-repl.js": [
          "File: test/simple/test-repl.js -> test/simple/test-repl.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:     prompt_unix = 'node via Unix socket> ',",
          "31:     prompt_tcp = 'node via TCP socket> ',",
          "32:     prompt_multiline = '... ',",
          "33:     server_tcp, server_unix, client_tcp, client_unix, timer;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33:     prompt_npm = 'npm should be run outside of the ' +",
          "34:                  'node repl, in your normal shell.\\n' +",
          "35:                  '(Press Control-D to exit.)\\n',",
          "36:     expect_npm = prompt_npm + prompt_unix,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "76:                   JSON.stringify(client_unix.expect)));",
          "78:     if (read_buffer.indexOf(prompt_unix) !== -1) {",
          "81:       read_buffer = '';",
          "82:       if (client_unix.list && client_unix.list.length > 0) {",
          "83:         send_expect(client_unix.list);",
          "",
          "[Removed Lines]",
          "79:       assert.ok(read_buffer.match(client_unix.expect));",
          "80:       common.error('match');",
          "",
          "[Added Lines]",
          "84:       if (read_buffer !== client_unix.expect) {",
          "85:         assert.ok(read_buffer.match(client_unix.expect));",
          "86:         common.error('match');",
          "87:       }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "140:     { client: client_unix, send: 'return 1;',",
          "141:       expect: prompt_multiline },",
          "142:     { client: client_unix, send: '})()',",
          "144:   ]);",
          "145: }",
          "",
          "[Removed Lines]",
          "143:       expect: '1' }",
          "",
          "[Added Lines]",
          "150:       expect: '1' },",
          "152:     { client: client_unix, send: 'npm install foobar',",
          "153:       expect: expect_npm }",
          "",
          "---------------"
        ]
      }
    }
  ]
}