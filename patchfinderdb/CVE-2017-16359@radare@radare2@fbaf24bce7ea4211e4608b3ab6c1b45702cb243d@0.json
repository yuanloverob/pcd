{
  "cve_id": "CVE-2017-16359",
  "cve_desc": "In radare 2.0.1, a pointer wraparound vulnerability exists in store_versioninfo_gnu_verdef() in libr/bin/format/elf/elf.c.",
  "repo": "radare/radare2",
  "patch_hash": "fbaf24bce7ea4211e4608b3ab6c1b45702cb243d",
  "patch_info": {
    "commit_hash": "fbaf24bce7ea4211e4608b3ab6c1b45702cb243d",
    "repo": "radare/radare2",
    "commit_url": "https://github.com/radare/radare2/commit/fbaf24bce7ea4211e4608b3ab6c1b45702cb243d",
    "files": [
      "libr/bin/format/elf/elf.c"
    ],
    "message": "Fix #8764 a 3rd time since 2nd time is UB and can be optimized away",
    "before_after_code_files": [
      "libr/bin/format/elf/elf.c||libr/bin/format/elf/elf.c"
    ]
  },
  "patch_diff": {
    "libr/bin/format/elf/elf.c||libr/bin/format/elf/elf.c": [
      "File: libr/bin/format/elf/elf.c -> libr/bin/format/elf/elf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "734:  for (cnt = 0, i = 0; i >= 0 && cnt < shdr->sh_info && ((char *)defs + i < end); ++cnt) {",
      "735:   Sdb *sdb_verdef = sdb_new0 ();",
      "736:   char *vstart = ((char*)defs) + i;",
      "737:   char key[32] = {0};",
      "738:   Elf_(Verdef) *verdef = (Elf_(Verdef)*)vstart;",
      "739:   Elf_(Verdaux) aux = {0};",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "737:   size_t vstart_off = i;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "749:   verdef->vd_aux = READ32 (dfs, j)",
      "750:   verdef->vd_next = READ32 (dfs, j)",
      "751:   int vdaux = verdef->vd_aux;",
      "753:    sdb_free (sdb_verdef);",
      "754:    goto out_error;",
      "755:   }",
      "756:   vstart += vdaux;",
      "757:   if (vstart > end || vstart + sizeof (Elf_(Verdaux)) > end) {",
      "758:    sdb_free (sdb_verdef);",
      "759:    goto out_error;",
      "",
      "[Removed Lines]",
      "752:   if (vdaux < 1 || vstart + vdaux < vstart) {",
      "",
      "[Added Lines]",
      "753:   if (vdaux < 1 || shdr->sh_size - vstart_off < vdaux) {",
      "758:   vstart_off += vdaux;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "781:    Sdb *sdb_parent = sdb_new0 ();",
      "782:    isum += aux.vda_next;",
      "783:    vstart += aux.vda_next;",
      "784:    if (vstart > end || vstart + sizeof (Elf_(Verdaux)) > end) {",
      "785:     sdb_free (sdb_verdef);",
      "786:     sdb_free (sdb_parent);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "786:    vstart_off += aux.vda_next;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d21e91f075a7a7a8ed23baa5c1bb1fac48313882",
      "candidate_info": {
        "commit_hash": "d21e91f075a7a7a8ed23baa5c1bb1fac48313882",
        "repo": "radare/radare2",
        "commit_url": "https://github.com/radare/radare2/commit/d21e91f075a7a7a8ed23baa5c1bb1fac48313882",
        "files": [
          "libr/bin/format/elf/elf.c"
        ],
        "message": "Fix #8764 differently since ptr diff might not fit in ptrdiff_t",
        "before_after_code_files": [
          "libr/bin/format/elf/elf.c||libr/bin/format/elf/elf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [
            "libr/bin/format/elf/elf.c||libr/bin/format/elf/elf.c"
          ],
          "candidate": [
            "libr/bin/format/elf/elf.c||libr/bin/format/elf/elf.c"
          ]
        }
      },
      "candidate_diff": {
        "libr/bin/format/elf/elf.c||libr/bin/format/elf/elf.c": [
          "File: libr/bin/format/elf/elf.c -> libr/bin/format/elf/elf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "749:   verdef->vd_aux = READ32 (dfs, j)",
          "750:   verdef->vd_next = READ32 (dfs, j)",
          "751:   int vdaux = verdef->vd_aux;",
          "753:    sdb_free (sdb_verdef);",
          "754:    goto out_error;",
          "755:   }",
          "",
          "[Removed Lines]",
          "752:   if (vdaux < 1 || (char *)UINTPTR_MAX - vstart < vdaux) {",
          "",
          "[Added Lines]",
          "752:   if (vdaux < 1 || vstart + vdaux < vstart) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "62e39f34b2705131a2d08aff0c2e542c6a52cf0e",
      "candidate_info": {
        "commit_hash": "62e39f34b2705131a2d08aff0c2e542c6a52cf0e",
        "repo": "radare/radare2",
        "commit_url": "https://github.com/radare/radare2/commit/62e39f34b2705131a2d08aff0c2e542c6a52cf0e",
        "files": [
          "libr/bin/format/elf/elf.c"
        ],
        "message": "Fix #8764 - huge vd_aux caused pointer wraparound",
        "before_after_code_files": [
          "libr/bin/format/elf/elf.c||libr/bin/format/elf/elf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [
            "libr/bin/format/elf/elf.c||libr/bin/format/elf/elf.c"
          ],
          "candidate": [
            "libr/bin/format/elf/elf.c||libr/bin/format/elf/elf.c"
          ]
        }
      },
      "candidate_diff": {
        "libr/bin/format/elf/elf.c||libr/bin/format/elf/elf.c": [
          "File: libr/bin/format/elf/elf.c -> libr/bin/format/elf/elf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "731:  sdb_num_set (sdb, \"link\", shdr->sh_link, 0);",
          "732:  sdb_set (sdb, \"link_section_name\", link_section_name, 0);",
          "735:   Sdb *sdb_verdef = sdb_new0 ();",
          "736:   char *vstart = ((char*)defs) + i;",
          "737:   char key[32] = {0};",
          "",
          "[Removed Lines]",
          "734:  for (cnt = 0, i = 0; i >= 0 && cnt < shdr->sh_info && ((char *)defs + i < end); ++cnt) {",
          "",
          "[Added Lines]",
          "734:  for (cnt = 0, i = 0; i >= 0 && cnt < shdr->sh_info && (end - (char *)defs > i); ++cnt) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "749:   verdef->vd_aux = READ32 (dfs, j)",
          "750:   verdef->vd_next = READ32 (dfs, j)",
          "751:   int vdaux = verdef->vd_aux;",
          "753:    sdb_free (sdb_verdef);",
          "754:    goto out_error;",
          "755:   }",
          "756:   vstart += vdaux;",
          "758:    sdb_free (sdb_verdef);",
          "759:    goto out_error;",
          "760:   }",
          "",
          "[Removed Lines]",
          "752:   if (vdaux < 1) {",
          "757:   if (vstart > end || vstart + sizeof (Elf_(Verdaux)) > end) {",
          "",
          "[Added Lines]",
          "752:   if (vdaux < 1 || (char *)UINTPTR_MAX - vstart < vdaux) {",
          "757:   if (vstart > end || end - vstart < sizeof (Elf_(Verdaux))) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "781:    Sdb *sdb_parent = sdb_new0 ();",
          "782:    isum += aux.vda_next;",
          "783:    vstart += aux.vda_next;",
          "785:     sdb_free (sdb_verdef);",
          "786:     sdb_free (sdb_parent);",
          "787:     goto out_error;",
          "",
          "[Removed Lines]",
          "784:    if (vstart > end || vstart + sizeof(Elf_(Verdaux)) > end) {",
          "",
          "[Added Lines]",
          "784:    if (vstart > end || end - vstart < sizeof (Elf_(Verdaux))) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "eec662abfca1b0fb04664f1de0c77e238d584275",
      "candidate_info": {
        "commit_hash": "eec662abfca1b0fb04664f1de0c77e238d584275",
        "repo": "radare/radare2",
        "commit_url": "https://github.com/radare/radare2/commit/eec662abfca1b0fb04664f1de0c77e238d584275",
        "files": [
          "libr/bin/format/elf/elf.c"
        ],
        "message": "Fix potential pointer overflows in store_versioninfo_gnu_verdef",
        "before_after_code_files": [
          "libr/bin/format/elf/elf.c||libr/bin/format/elf/elf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libr/bin/format/elf/elf.c||libr/bin/format/elf/elf.c"
          ],
          "candidate": [
            "libr/bin/format/elf/elf.c||libr/bin/format/elf/elf.c"
          ]
        }
      },
      "candidate_diff": {
        "libr/bin/format/elf/elf.c||libr/bin/format/elf/elf.c": [
          "File: libr/bin/format/elf/elf.c -> libr/bin/format/elf/elf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "700:  Elf_(Shdr) *link_shdr = NULL;",
          "701:  ut8 dfs[sizeof (Elf_(Verdef))] = {0};",
          "702:  Sdb *sdb;",
          "704:  if (shdr->sh_link > bin->ehdr.e_shnum) {",
          "705:   return false;",
          "706:  }",
          "",
          "[Removed Lines]",
          "703:  int cnt, i;",
          "",
          "[Added Lines]",
          "703:  ut32 cnt;",
          "704:  ut64 i;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "735:  sdb_num_set (sdb, \"link\", shdr->sh_link, 0);",
          "736:  sdb_set (sdb, \"link_section_name\", link_section_name, 0);",
          "739:   Sdb *sdb_verdef = sdb_new0 ();",
          "740:   char *vstart = ((char*)defs) + i;",
          "742:   char key[32] = {0};",
          "743:   Elf_(Verdef) *verdef = (Elf_(Verdef)*)vstart;",
          "744:   Elf_(Verdaux) aux = {0};",
          "",
          "[Removed Lines]",
          "738:  for (cnt = 0, i = 0; i >= 0 && cnt < shdr->sh_info && ((char *)defs + i < end); ++cnt) {",
          "741:   size_t vstart_off = i;",
          "",
          "[Added Lines]",
          "739:  for (cnt = 0, i = 0; i >= 0 && cnt < shdr->sh_info && i < shdr->sh_size; ++cnt) {",
          "742:   ut64 vstart_off = i;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "760:   }",
          "761:   vstart += vdaux;",
          "762:   vstart_off += vdaux;",
          "764:    sdb_free (sdb_verdef);",
          "765:    goto out_error;",
          "766:   }",
          "",
          "[Removed Lines]",
          "763:   if (vstart > end || vstart + sizeof (Elf_(Verdaux)) > end) {",
          "",
          "[Added Lines]",
          "764:   if (vstart > end || shdr->sh_size - sizeof (Elf_(Verdaux)) < vstart_off) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "785:   for (j = 1; j < verdef->vd_cnt; ++j) {",
          "786:    int k;",
          "787:    Sdb *sdb_parent = sdb_new0 ();",
          "788:    isum += aux.vda_next;",
          "789:    vstart += aux.vda_next;",
          "790:    vstart_off += aux.vda_next;",
          "792:     sdb_free (sdb_verdef);",
          "793:     sdb_free (sdb_parent);",
          "794:     goto out_error;",
          "",
          "[Removed Lines]",
          "791:    if (vstart > end || vstart + sizeof (Elf_(Verdaux)) > end) {",
          "",
          "[Added Lines]",
          "789:    if (shdr->sh_size - vstart_off < aux.vda_next) {",
          "790:     sdb_free (sdb_verdef);",
          "791:     sdb_free (sdb_parent);",
          "792:     goto out_error;",
          "793:    }",
          "797:    if (vstart > end || shdr->sh_size - sizeof (Elf_(Verdaux)) < vstart_off) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "808:    sdb_ns_set (sdb_verdef, key, sdb_parent);",
          "809:   }",
          "812:   sdb_ns_set (sdb, key, sdb_verdef);",
          "813:   if (!verdef->vd_next) {",
          "814:    sdb_free (sdb_verdef);",
          "",
          "[Removed Lines]",
          "811:   snprintf (key, sizeof (key), \"verdef%d\", cnt);",
          "",
          "[Added Lines]",
          "817:   snprintf (key, sizeof (key), \"verdef%u\", cnt);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "acf3ce304f25e12173a0e33391a1a55a45cc67dd",
      "candidate_info": {
        "commit_hash": "acf3ce304f25e12173a0e33391a1a55a45cc67dd",
        "repo": "radare/radare2",
        "commit_url": "https://github.com/radare/radare2/commit/acf3ce304f25e12173a0e33391a1a55a45cc67dd",
        "files": [
          "libr/bin/format/elf/elf.c"
        ],
        "message": "size_t more accurate",
        "before_after_code_files": [
          "libr/bin/format/elf/elf.c||libr/bin/format/elf/elf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libr/bin/format/elf/elf.c||libr/bin/format/elf/elf.c"
          ],
          "candidate": [
            "libr/bin/format/elf/elf.c||libr/bin/format/elf/elf.c"
          ]
        }
      },
      "candidate_diff": {
        "libr/bin/format/elf/elf.c||libr/bin/format/elf/elf.c": [
          "File: libr/bin/format/elf/elf.c -> libr/bin/format/elf/elf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "701:  ut8 dfs[sizeof (Elf_(Verdef))] = {0};",
          "702:  Sdb *sdb;",
          "703:  ut32 cnt;",
          "705:  if (shdr->sh_link > bin->ehdr.e_shnum) {",
          "706:   return false;",
          "707:  }",
          "",
          "[Removed Lines]",
          "704:  ut64 i;",
          "",
          "[Added Lines]",
          "704:  size_t i;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "739:  for (cnt = 0, i = 0; i >= 0 && cnt < shdr->sh_info && i < shdr->sh_size; ++cnt) {",
          "740:   Sdb *sdb_verdef = sdb_new0 ();",
          "741:   char *vstart = ((char*)defs) + i;",
          "743:   char key[32] = {0};",
          "744:   Elf_(Verdef) *verdef = (Elf_(Verdef)*)vstart;",
          "745:   Elf_(Verdaux) aux = {0};",
          "",
          "[Removed Lines]",
          "742:   ut64 vstart_off = i;",
          "",
          "[Added Lines]",
          "742:   size_t vstart_off = i;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "44ded3ff35b8264f54b5a900cab32ec489d9e5b9",
      "candidate_info": {
        "commit_hash": "44ded3ff35b8264f54b5a900cab32ec489d9e5b9",
        "repo": "radare/radare2",
        "commit_url": "https://github.com/radare/radare2/commit/44ded3ff35b8264f54b5a900cab32ec489d9e5b9",
        "files": [
          "libr/bin/format/elf/elf.c"
        ],
        "message": "Fix #8743 - Crash in ELF version parser on 32bit systems",
        "before_after_code_files": [
          "libr/bin/format/elf/elf.c||libr/bin/format/elf/elf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libr/bin/format/elf/elf.c||libr/bin/format/elf/elf.c"
          ],
          "candidate": [
            "libr/bin/format/elf/elf.c||libr/bin/format/elf/elf.c"
          ]
        }
      },
      "candidate_diff": {
        "libr/bin/format/elf/elf.c||libr/bin/format/elf/elf.c": [
          "File: libr/bin/format/elf/elf.c -> libr/bin/format/elf/elf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "748:   verdef->vd_hash = READ32 (dfs, j)",
          "749:   verdef->vd_aux = READ32 (dfs, j)",
          "750:   verdef->vd_next = READ32 (dfs, j)",
          "752:   if (vstart > end || vstart + sizeof (Elf_(Verdaux)) > end) {",
          "753:    sdb_free (sdb_verdef);",
          "754:    goto out_error;",
          "",
          "[Removed Lines]",
          "751:   vstart += verdef->vd_aux;",
          "",
          "[Added Lines]",
          "751:   int vdaux = verdef->vd_aux;",
          "752:   if (vdaux < 1) {",
          "753:    sdb_free (sdb_verdef);",
          "754:    goto out_error;",
          "755:   }",
          "756:   vstart += vdaux;",
          "",
          "---------------"
        ]
      }
    }
  ]
}