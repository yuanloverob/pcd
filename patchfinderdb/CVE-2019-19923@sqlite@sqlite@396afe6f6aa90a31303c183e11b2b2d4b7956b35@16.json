{
  "cve_id": "CVE-2019-19923",
  "cve_desc": "flattenSubquery in select.c in SQLite 3.30.1 mishandles certain uses of SELECT DISTINCT involving a LEFT JOIN in which the right-hand side is a view. This can cause a NULL pointer dereference (or incorrect results).",
  "repo": "sqlite/sqlite",
  "patch_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
  "patch_info": {
    "commit_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/join.test"
    ],
    "message": "Continue to back away from the LEFT JOIN optimization of check-in [41c27bc0ff1d3135] by disallowing query flattening if the outer query is DISTINCT.  Without this fix, if an index scan is run on the table within the view on the right-hand side of the LEFT JOIN, stale result registers might be accessed yielding incorrect results, and/or an OP_IfNullRow opcode might be invoked on the un-opened table, resulting in a NULL-pointer dereference.  This problem was found by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: 862974312edf00e9d1068115d1a39b7235b7db68b6d86b81d38a12f025a4748e",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/join.test||test/join.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 289158aa24b066c453d2bce4bc2dead1c56fb0b23c3f7c4810b34b13627cef34",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3797:   if( (pSubitem->fg.jointype & JT_OUTER)!=0 ){",
      "3798:     isLeftJoin = 1;",
      "3801:       return 0;",
      "3802:     }",
      "3803:   }",
      "",
      "[Removed Lines]",
      "3799:     if( pSubSrc->nSrc>1 || isAgg || IsVirtual(pSubSrc->a[0].pTab) ){",
      "",
      "[Added Lines]",
      "3804:     ){",
      "",
      "---------------"
    ],
    "test/join.test||test/join.test": [
      "File: test/join.test -> test/join.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "975:   SELECT 24, * FROM t1 LEFT JOIN t0 ON +aa ISNULL;",
      "976: } {13 1 {} 14 1 {} 23 1 {} 24 1 {}}",
      "978: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "978: # 2019-12-18 problem with a LEFT JOIN where the RHS is a view.",
      "979: # Detected by Yongheng and Rui.",
      "980: # Follows from the optimization attempt of check-in 41c27bc0ff1d3135",
      "981: # on 2017-04-18",
      "982: #",
      "983: reset_db",
      "984: do_execsql_test join-22.10 {",
      "985:   CREATE TABLE t0(a, b);",
      "986:   CREATE INDEX t0a ON t0(a);",
      "987:   INSERT INTO t0 VALUES(10,10),(10,11),(10,12);",
      "988:   SELECT DISTINCT c FROM t0 LEFT JOIN (SELECT a+1 AS c FROM t0) ORDER BY c ;",
      "989: } {11}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a0ed86bc372b5a14ab81027644c2bc37e62556da",
      "candidate_info": {
        "commit_hash": "a0ed86bc372b5a14ab81027644c2bc37e62556da",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a0ed86bc372b5a14ab81027644c2bc37e62556da",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/printf.c",
          "test/round1.test"
        ],
        "message": "Improvements to rounding behavior in the round() and printf() functions.\n\nFossilOrigin-Name: 641b2d210541b4d5a1a9e57d7dcf5ce5dfd7ff4d2dc6277ba0582869f48fc946",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/printf.c||src/printf.c",
          "test/round1.test||test/round1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 600daa9c27206628bf74892376ded35dac11fe0a34894fcd975ad5041a0a0fda",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/printf.c||src/printf.c": [
          "File: src/printf.c -> src/printf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "99:   {  'r', 10, 1, etORDINAL,    0,  0 },",
          "100: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "103: static const double arRound[] = {",
          "104:   5.0e-01, 5.0e-02, 5.0e-03, 5.0e-04, 5.0e-05,",
          "105:   5.0e-06, 5.0e-07, 5.0e-08, 5.0e-09, 5.0e-10,",
          "106: };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "517:         }",
          "518:         if( xtype==etGENERIC && precision>0 ) precision--;",
          "519:         testcase( precision>0xfff );",
          "523:         exp = 0;",
          "524:         if( sqlite3IsNaN((double)realvalue) ){",
          "",
          "[Removed Lines]",
          "520:         for(idx=precision&0xfff, rounder=0.5; idx>0; idx--, rounder*=0.1){}",
          "521:         if( xtype==etFLOAT ) realvalue += rounder;",
          "",
          "[Added Lines]",
          "526:         idx = precision & 0xfff;",
          "527:         rounder = arRound[idx%10];",
          "528:         while( idx>=10 ){ rounder *= 1.0e-10; idx -= 10; }",
          "529:         if( xtype==etFLOAT ){",
          "530:           if( precision<17) rounder += realvalue*2.0e-16;",
          "531:           realvalue += rounder;",
          "532:         }",
          "",
          "---------------"
        ],
        "test/round1.test||test/round1.test": [
          "File: test/round1.test -> test/round1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # 2019-05-24",
          "2: #",
          "3: # The author disclaims copyright to this source code.  In place of",
          "4: # a legal notice, here is a blessing:",
          "5: #",
          "6: #    May you do good and not evil.",
          "7: #    May you find forgiveness for yourself and forgive others.",
          "8: #    May you share freely, never taking more than you give.",
          "9: #",
          "10: #***********************************************************************",
          "11: # Test cases for rounding behavior of floating point values.",
          "12: #",
          "14: set testdir [file dirname $argv0]",
          "15: source $testdir/tester.tcl",
          "16: set testprefix round1",
          "18: expr srand(0)",
          "19: unset -nocomplain iTest",
          "20: for {set iTest 1} {$iTest<=10000} {incr iTest} {",
          "21:    set x1 [expr int(rand()*100000)]",
          "22:    set x2 [expr int(rand()*100000)+1000*int(rand()*10000)]",
          "23:    set n [expr int(rand()*8)+1]",
          "24:    set x3 [string range [format %09d $x2] [expr {9-$n}] end]",
          "25:    set r $x1.$x3",
          "26:    set ans [string trimright $r 0]",
          "27:    if {[string match *. $ans]} {set ans ${ans}0}",
          "28:    do_test $iTest/$n/${r}4=>$ans {",
          "29:      set x [db one \"SELECT round(${r}4,$n)\"]",
          "30:    } $ans",
          "31:    set x4 [string range [format %09d [expr {$x2+1}]] [expr {9-$n}] end]",
          "32:    if {[string trim $x3 9]==\"\"} {incr x1}",
          "33:    set r2 $x1.$x4",
          "34:    set ans [string trimright $r2 0]",
          "35:    if {[string match *. $ans]} {set ans ${ans}0}",
          "36:    do_test $iTest/$n/${r}5=>$ans {",
          "37:      set x [db one \"SELECT round(${r}5,$n)\"]",
          "38:    } $ans",
          "39: }",
          "41: finish_test",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fb8ac325d769248e45eaa056adf4da9960bdd9c3",
      "candidate_info": {
        "commit_hash": "fb8ac325d769248e45eaa056adf4da9960bdd9c3",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/fb8ac325d769248e45eaa056adf4da9960bdd9c3",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/window.c",
          "test/altertab2.test"
        ],
        "message": "Avoid a dangling pointer comparison when renaming a table that has a trigger that itself contains a window function with an (illegal) column reference in a FOLLOWING expression.\n\nFossilOrigin-Name: d45bee36f2c1091a2d32c16ca8921bf4e7c9e40c46d0a36fbcb179ecfafcfbf0",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/window.c||src/window.c",
          "test/altertab2.test||test/altertab2.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 65cebb06a0afcbcb4157c3d518a62ed188b1e90d9e9b69d88fece484bcb6e380",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/window.c||src/window.c": [
          "File: src/window.c -> src/window.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "882: static Expr *sqlite3WindowOffsetExpr(Parse *pParse, Expr *pExpr){",
          "883:   if( 0==sqlite3ExprIsConstant(pExpr) ){",
          "884:     sqlite3ExprDelete(pParse->db, pExpr);",
          "885:     pExpr = sqlite3ExprAlloc(pParse->db, TK_NULL, 0, 0);",
          "886:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "884:     if( IN_RENAME_OBJECT ) sqlite3RenameExprUnmap(pParse, pExpr);",
          "",
          "---------------"
        ],
        "test/altertab2.test||test/altertab2.test": [
          "File: test/altertab2.test -> test/altertab2.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "178:   END}",
          "179: }",
          "181: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "181: #-------------------------------------------------------------------------",
          "182: do_execsql_test 5.0 {",
          "183:   CREATE TABLE t2(a);",
          "184:   CREATE TRIGGER r2 AFTER INSERT ON t2 WHEN new.a NOT NULL BEGIN",
          "185:     SELECT a, rank() OVER w1 FROM t2",
          "186:       WINDOW w1 AS (",
          "187:         PARTITION BY b ORDER BY d ROWS BETWEEN 2 PRECEDING AND a FOLLOWING",
          "188:       ),",
          "189:       w2 AS (",
          "190:         PARTITION BY b",
          "191:         ORDER BY d ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING",
          "192:       );",
          "193:   END;",
          "194: } {}",
          "196: do_catchsql_test 5.0.1 {",
          "197:   INSERT INTO t2 VALUES(1);",
          "198: } {1 {no such column: b}}",
          "200: do_execsql_test 5.1 {",
          "201:   ALTER TABLE t2 RENAME TO t2x;",
          "202:   SELECT sql FROM sqlite_master WHERE name = 'r2';",
          "203: } {",
          "204:   {CREATE TRIGGER r2 AFTER INSERT ON \"t2x\" WHEN new.a NOT NULL BEGIN",
          "205:     SELECT a, rank() OVER w1 FROM \"t2x\"",
          "206:       WINDOW w1 AS (",
          "207:         PARTITION BY b ORDER BY d ROWS BETWEEN 2 PRECEDING AND a FOLLOWING",
          "208:       ),",
          "209:       w2 AS (",
          "210:         PARTITION BY b",
          "211:         ORDER BY d ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING",
          "212:       );",
          "213:   END}",
          "214: }",
          "216: do_execsql_test 5.2 {",
          "217:   ALTER TABLE t2x RENAME a TO aaaa;",
          "218:   SELECT sql FROM sqlite_master WHERE name = 'r2';",
          "219: } {",
          "220:   {CREATE TRIGGER r2 AFTER INSERT ON \"t2x\" WHEN new.aaaa NOT NULL BEGIN",
          "221:     SELECT aaaa, rank() OVER w1 FROM \"t2x\"",
          "222:       WINDOW w1 AS (",
          "223:         PARTITION BY b ORDER BY d ROWS BETWEEN 2 PRECEDING AND a FOLLOWING",
          "224:       ),",
          "225:       w2 AS (",
          "226:         PARTITION BY b",
          "227:         ORDER BY d ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING",
          "228:       );",
          "229:   END}",
          "230: }",
          "232: do_catchsql_test 5.3 {",
          "233:   INSERT INTO t2x VALUES(1);",
          "234: } {1 {no such column: b}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2e2c8819f1a9008348b9d04b58ecbe5ebf1ead52",
      "candidate_info": {
        "commit_hash": "2e2c8819f1a9008348b9d04b58ecbe5ebf1ead52",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/2e2c8819f1a9008348b9d04b58ecbe5ebf1ead52",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/resolve.c"
        ],
        "message": "Ensure that there is a containing SELECT statement when processing a normal aggregate function as if it were a window function.\n\nFossilOrigin-Name: c1014e80b26131200a115beb86929a8f0ded2dd65b075e47373346c0f170576a",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/resolve.c||src/resolve.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: e5dc2939d3e8694d648fc9b73b1174da5b1349e20fbb9cf1c91268939f308f89",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/resolve.c||src/resolve.c": [
          "File: src/resolve.c -> src/resolve.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "967:           Select *pSel = pNC->pWinSelect;",
          "968:           assert( pWin==pExpr->y.pWin );",
          "969:           if( IN_RENAME_OBJECT==0 ){",
          "971:           }",
          "972:           sqlite3WalkExprList(pWalker, pWin->pPartition);",
          "973:           sqlite3WalkExprList(pWalker, pWin->pOrderBy);",
          "",
          "[Removed Lines]",
          "970:             sqlite3WindowUpdate(pParse, pSel->pWinDefn, pWin, pDef);",
          "",
          "[Added Lines]",
          "970:             sqlite3WindowUpdate(pParse, pSel ? pSel->pWinDefn : 0, pWin, pDef);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "40d6c827e96737dbdfb5c54c803ee54560876290",
      "candidate_info": {
        "commit_hash": "40d6c827e96737dbdfb5c54c803ee54560876290",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/40d6c827e96737dbdfb5c54c803ee54560876290",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/releasetest_data.tcl"
        ],
        "message": "Have wapptest.tcl run at least one threadtest with an SQLITE_ENABLE_MEMORY_MANAGEMENT build.\n\nFossilOrigin-Name: d6131caf6471ad41fa5a28b0067d759ac1cc9dba1170678534488b416f9a1157",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/releasetest_data.tcl||test/releasetest_data.tcl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 5ea3f6fc88cf66824128aa64f777a7abb4f6ed55f214d7a135f36e306a32487c",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/releasetest_data.tcl||test/releasetest_data.tcl": [
          "File: test/releasetest_data.tcl -> test/releasetest_data.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "246:     \"User-Auth\"               tcltest",
          "247:     \"Update-Delete-Limit\"     test",
          "248:     \"Extra-Robustness\"        test",
          "250:     \"No-lookaside\"            test",
          "251:     \"Devkit\"                  test",
          "252:     \"Apple\"                   test",
          "",
          "[Removed Lines]",
          "249:     \"Device-Two\"              test",
          "",
          "[Added Lines]",
          "249:     \"Device-Two\"              \"threadtest test\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "862faf28bb36627359ee3b9cb295b63ed2964df7",
      "candidate_info": {
        "commit_hash": "862faf28bb36627359ee3b9cb295b63ed2964df7",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/862faf28bb36627359ee3b9cb295b63ed2964df7",
        "files": [
          "ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Change a faulty assert() in fts5 that could fail on a corrupt db to an if() statement.\n\nFossilOrigin-Name: 1daaba9fb46706af8ed0669a661c304df999a69cf639d29d93208f422c515d8c",
        "before_after_code_files": [
          "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_index.c||ext/fts5/fts5_index.c": [
          "File: ext/fts5/fts5_index.c -> ext/fts5/fts5_index.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "882:       }else{",
          "883:         i += fts5GetVarint32(&pData[i], pLvl->nMerge);",
          "884:         i += fts5GetVarint32(&pData[i], nTotal);",
          "886:         pLvl->aSeg = (Fts5StructureSegment*)sqlite3Fts5MallocZero(&rc,",
          "887:             nTotal * sizeof(Fts5StructureSegment)",
          "888:         );",
          "",
          "[Removed Lines]",
          "885:         assert( nTotal>=pLvl->nMerge );",
          "",
          "[Added Lines]",
          "885:         if( nTotal<pLvl->nMerge ) rc = FTS5_CORRUPT;",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "603:   UPDATE t1 SET content='abc' WHERE content='boomer';",
          "604: } {1 {constraint failed}}",
          "606: sqlite3_fts5_may_be_corrupt 0",
          "607: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "606: #-------------------------------------------------------------------------",
          "607: #",
          "608: reset_db",
          "609: do_test 12.0 {",
          "610:   sqlite3 db {}",
          "611:   db deserialize [decode_hexdb {",
          "612: | size 28672 pagesize 4096 filename c2.db",
          "613: | page 1 offset 0",
          "614: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "615: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 07   .....@  ........",
          "616: |     32: 00 00 00 00 00 00 00 00 00 00 00 07 00 00 00 00   ................",
          "617: |     48: 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00   ................",
          "618: |     96: 00 00 00 00 0d 00 00 00 07 0d d2 00 0f c4 0f 6d   ...............m",
          "619: |    112: 0f 02 0e ab 0e 4e 0d f6 0d d2 00 00 00 00 00 00   .....N..........",
          "620: |   3536: 00 00 22 07 06 17 11 11 01 31 74 61 62 6c 65 74   .........1tablet",
          "621: |   3552: 32 74 32 07 43 52 45 41 54 45 20 54 41 42 4c 45   2t2.CREATE TABLE",
          "622: |   3568: 20 74 32 28 78 29 56 06 06 17 1f 1f 01 7d 74 61    t2(x)V.......ta",
          "623: |   3584: 62 6c 65 74 31 5f 63 6f 6e 66 69 67 74 31 5f 63   blet1_configt1_c",
          "624: |   3600: 6f 6e 66 69 67 06 43 52 45 41 54 45 20 54 41 42   onfig.CREATE TAB",
          "625: |   3616: 4c 45 20 27 74 31 5f 63 6f 6e 66 69 67 27 28 6b   LE 't1_config'(k",
          "626: |   3632: 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 76 29    PRIMARY KEY, v)",
          "627: |   3648: 20 57 49 54 48 4f 55 54 20 52 4f 57 49 44 5b 05    WITHOUT ROWID[.",
          "628: |   3664: 07 17 21 21 01 81 01 74 61 62 6c 65 74 31 5f 64   ..!!...tablet1_d",
          "629: |   3680: 6f 63 73 69 7a 65 74 31 5f 64 6f 63 73 69 7a 65   ocsizet1_docsize",
          "630: |   3696: 05 43 52 45 41 54 45 20 54 41 42 4c 45 20 27 74   .CREATE TABLE 't",
          "631: |   3712: 31 5f 64 6f 63 73 69 7a 65 27 28 69 64 20 49 4e   1_docsize'(id IN",
          "632: |   3728: 54 45 47 45 52 20 50 52 49 4d 41 52 59 20 4b 45   TEGER PRIMARY KE",
          "633: |   3744: 59 2c 20 73 7a 20 42 4c 4f 42 29 55 04 06 17 21   Y, sz BLOB)U...!",
          "634: |   3760: 21 01 77 74 61 62 6c 65 74 31 5f 63 6f 6e 74 65   !.wtablet1_conte",
          "635: |   3776: 6e 74 74 31 5f 63 6f 6e 74 65 6e 74 04 43 52 45   ntt1_content.CRE",
          "636: |   3792: 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 63 6f   ATE TABLE 't1_co",
          "637: |   3808: 6e 74 65 6e 74 27 28 69 64 20 49 4e 54 45 47 45   ntent'(id INTEGE",
          "638: |   3824: 52 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 63   R PRIMARY KEY, c",
          "639: |   3840: 30 29 69 03 07 17 19 19 01 81 2d 74 61 62 6c 65   0)i.......-table",
          "640: |   3856: 74 31 5f 69 64 78 74 31 5f 69 64 78 03 43 52 45   t1_idxt1_idx.CRE",
          "641: |   3872: 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 69 64   ATE TABLE 't1_id",
          "642: |   3888: 78 27 28 73 65 67 69 64 2c 20 74 65 72 6d 2c 20   x'(segid, term,",
          "643: |   3904: 70 67 6e 6f 2c 20 50 52 49 4d 41 52 59 20 4b 45   pgno, PRIMARY KE",
          "644: |   3920: 59 28 73 65 67 69 64 2c 20 74 65 72 6d 29 29 20   Y(segid, term))",
          "645: |   3936: 57 49 54 48 4f 55 54 20 52 4f 57 49 44 55 02 07   WITHOUT ROWIDU..",
          "646: |   3952: 17 1b 1b 01 81 01 74 61 62 6c 65 74 31 5f 64 61   ......tablet1_da",
          "647: |   3968: 74 61 74 31 5f 64 61 74 61 02 43 52 45 41 54 45   tat1_data.CREATE",
          "648: |   3984: 20 54 41 42 4c 45 20 27 74 31 5f 64 61 74 61 27    TABLE 't1_data'",
          "649: |   4000: 28 69 64 20 49 4e 54 45 47 45 52 20 50 52 49 4d   (id INTEGER PRIM",
          "650: |   4016: 41 52 59 20 4b 45 59 2c 20 62 6c 6f 63 6b 20 42   ARY KEY, block B",
          "651: |   4032: 4c 4f 42 29 3a 01 06 17 11 11 08 63 74 61 62 6c   LOB):......ctabl",
          "652: |   4048: 65 74 31 74 31 43 52 45 41 54 45 20 56 49 52 54   et1t1CREATE VIRT",
          "653: |   4064: 55 41 4c 20 54 41 42 4c 45 20 74 31 20 55 53 49   UAL TABLE t1 USI",
          "654: |   4080: 4e 47 20 66 74 73 35 28 63 6f 6e 74 65 6e 74 29   NG fts5(content)",
          "655: | page 2 offset 4096",
          "656: |      0: 0d 00 00 00 03 0f bd 00 0f d8 0f ef 0f bd 00 00   ................",
          "657: |   4016: 00 00 00 00 00 00 00 00 00 00 00 00 00 24 84 80   .............$..",
          "658: |   4032: 80 80 80 01 03 00 4e 00 00 00 1e 06 30 61 62 61   ......N.....0aba",
          "659: |   4048: 63 6b 01 02 02 04 02 66 74 02 02 02 04 04 6e 64   ck.....ft.....nd",
          "660: |   4064: 6f 6e 03 02 02 04 0a 07 05 01 03 00 10 03 03 0f   on..............",
          "661: |   4080: 0a 03 00 24 00 00 00 00 01 01 01 20 01 01 01 01   ...$....... ....",
          "662: | page 3 offset 8192",
          "663: |      0: 0a 00 00 00 01 0f fa 00 0f fa 00 00 00 00 00 00   ................",
          "664: |   4080: 00 00 00 00 00 00 00 00 00 00 05 04 09 0c 01 02   ................",
          "665: | page 4 offset 12288",
          "666: |      0: 0d 00 00 00 03 0f e0 00 0f f6 0f ec 0f e0 3f e0   ..............?.",
          "667: |     16: a0 30 30 01 b6 16 26 16 e6 46 f6 e0 80 20 30 01   .00...&..F... 0.",
          "668: |     32: 76 16 26 16 67 40 80 10 30 01 76 16 26 16 36 b0   v.&.g@..0.v.&.6.",
          "669: |     48: d0 00 00 00 30 fe e0 00 ff a0 ff 40 fe 00 00 00   ....0......@....",
          "670: | page 5 offset 16384",
          "671: |   4064: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04 03   ................",
          "672: |   4080: 03 00 0e 01 04 02 03 00 0e 01 04 01 03 00 0e 01   ................",
          "673: | page 6 offset 20480",
          "674: |      0: 0a 00 00 00 01 0f f4 00 0f f4 00 00 00 00 00 00   ................",
          "675: |   4080: 00 00 00 00 0b 03 1b 01 76 65 72 73 69 6f 6e 04   ........version.",
          "676: | page 7 offset 24576",
          "677: |      0: 0d 00 00 00 03 0f d6 00 0f f4 0f e1 0f d6 00 00   ................",
          "678: |   4048: 00 00 00 00 00 00 09 03 02 1b 72 65 62 75 69 6c   ..........rebuil",
          "679: |   4064: 64 11 02 02 2b 69 6e 74 65 67 72 69 74 79 2d 63   d...+integrity-c",
          "680: |   4080: 68 65 63 6b 0a 01 02 1d 6f 70 74 69 6d 69 7a 65   heck....optimize",
          "681: | end c2.db",
          "682: }]} {}",
          "684: do_catchsql_test 11.1 {",
          "685:   SELECT * FROM t1 WHERE t1 MATCH 'abandon';",
          "686: } {1 {vtable constructor failed: t1}}",
          "688: do_catchsql_test 11.2 {",
          "689:   INSERT INTO t1(t1, rank) VALUES('merge', 500);",
          "690: } {1 {vtable constructor failed: t1}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: c064964deb0b7220ba784f07ca9c603680f3c8bb936d56ab4eca1962beac1359",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}