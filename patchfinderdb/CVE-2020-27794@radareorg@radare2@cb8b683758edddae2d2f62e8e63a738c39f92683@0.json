{
  "cve_id": "CVE-2020-27794",
  "cve_desc": "A double free issue was discovered in radare2 in cmd_info.c:cmd_info(). Successful exploitation could lead to modification of unexpected memory locations and potentially causing a crash.",
  "repo": "radareorg/radare2",
  "patch_hash": "cb8b683758edddae2d2f62e8e63a738c39f92683",
  "patch_info": {
    "commit_hash": "cb8b683758edddae2d2f62e8e63a738c39f92683",
    "repo": "radareorg/radare2",
    "commit_url": "https://github.com/radareorg/radare2/commit/cb8b683758edddae2d2f62e8e63a738c39f92683",
    "files": [
      "libr/core/core.c"
    ],
    "message": "Fix #16303 - c->table_query double free (#16318)",
    "before_after_code_files": [
      "libr/core/core.c||libr/core/core.c"
    ]
  },
  "patch_diff": {
    "libr/core/core.c||libr/core/core.c": [
      "File: libr/core/core.c -> libr/core/core.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2846:  r_list_free (c->files);",
      "2847:  r_list_free (c->watchers);",
      "2848:  r_list_free (c->scriptstack);",
      "",
      "[Removed Lines]",
      "2845:  free (c->table_query);",
      "",
      "[Added Lines]",
      "2845:  R_FREE (c->table_query);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "14c14e7c366f68487dfc2c4c146b6354987a9441",
      "candidate_info": {
        "commit_hash": "14c14e7c366f68487dfc2c4c146b6354987a9441",
        "repo": "radareorg/radare2",
        "commit_url": "https://github.com/radareorg/radare2/commit/14c14e7c366f68487dfc2c4c146b6354987a9441",
        "files": [
          "libr/core/cbin.c",
          "libr/core/cmd_info.c",
          "libr/core/core.c",
          "libr/include/r_core.h"
        ],
        "message": "Add support for RTable.query in i ##bin",
        "before_after_code_files": [
          "libr/core/cbin.c||libr/core/cbin.c",
          "libr/core/cmd_info.c||libr/core/cmd_info.c",
          "libr/core/core.c||libr/core/core.c",
          "libr/include/r_core.h||libr/include/r_core.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libr/core/core.c||libr/core/core.c"
          ],
          "candidate": [
            "libr/core/core.c||libr/core/core.c"
          ]
        }
      },
      "candidate_diff": {
        "libr/core/cbin.c||libr/core/cbin.c": [
          "File: libr/core/cbin.c -> libr/core/cbin.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "417:   r_cons_break_pop ();",
          "418:  }",
          "419:  if (IS_MODE_NORMAL (mode)) {",
          "422:  }",
          "423:  r_table_free (table);",
          "",
          "[Removed Lines]",
          "420:   r_cons_printf (\"%s\", r_table_tostring (table));",
          "",
          "[Added Lines]",
          "420:   if (r->table_query) {",
          "421:    r_table_query (table, r->table_query);",
          "422:   }",
          "423:   char *s = r_table_tostring (table);",
          "424:   r_cons_printf (\"%s\", s);",
          "425:   free (s);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1653:   r_cons_println (pj_string (pj));",
          "1654:  }",
          "1655:  if (IS_MODE_NORMAL (mode)) {",
          "1657:   r_cons_printf (\"\\n%i relocations\\n\", i);",
          "1659:  }",
          "",
          "[Removed Lines]",
          "1656:   r_cons_printf (\"\\n%s\\n\", r_table_tostring (table));",
          "",
          "[Added Lines]",
          "1661:   if (r->table_query) {",
          "1662:    r_table_query (table, r->table_query);",
          "1663:   }",
          "1664:   char *s = r_table_tostring (table);",
          "1665:   r_cons_printf (\"\\n%s\\n\", s);",
          "1666:   free (s);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1870:  if (IS_MODE_JSON (mode)) {",
          "1871:   r_cons_print (\"]\");",
          "1872:  } else if (IS_MODE_NORMAL (mode)) {",
          "1874:  }",
          "1875:  r_table_free (table);",
          "1876: #if MYDB",
          "",
          "[Removed Lines]",
          "1873:   r_cons_printf (\"%s\\n\", r_table_tostring (table));",
          "",
          "[Added Lines]",
          "1883:   if (r->table_query) {",
          "1884:    r_table_query (table, r->table_query);",
          "1885:   }",
          "1886:   char *s = r_table_tostring (table);",
          "1887:   r_cons_printf (\"%s\\n\", s);",
          "1888:   free (s);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2271:   }",
          "2272:  }",
          "2273:  if (IS_MODE_NORMAL (mode)){",
          "2275:  }",
          "2276:  if (count == 0 && IS_MODE_JSON (mode)) {",
          "2277:   r_cons_printf (\"{}\");",
          "",
          "[Removed Lines]",
          "2274:   r_cons_printf (\"\\n%s\", r_table_tostring (table));",
          "",
          "[Added Lines]",
          "2289:   if (r->table_query) {",
          "2290:    r_table_query (table, r->table_query);",
          "2291:   }",
          "2292:   char *s = r_table_tostring (table);",
          "2293:   r_cons_printf (\"\\n%s\", s);",
          "2294:   free (s);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2485:   }",
          "2486:   RTable *table = r_core_table (r);",
          "2487:   r_table_visual_list (table, list, r->offset, -1, cols, r->io->va);",
          "2489:   r_table_free (table);",
          "2490:   r_list_free (list);",
          "2491:   goto out;",
          "",
          "[Removed Lines]",
          "2488:   r_cons_printf (\"\\n%s\\n\", r_table_tostring (table));",
          "",
          "[Added Lines]",
          "2508:   if (r->table_query) {",
          "2509:    r_table_query (table, r->table_query);",
          "2510:   }",
          "2511:   {",
          "2512:    char *s = r_table_tostring (table);",
          "2513:    r_cons_printf (\"\\n%s\\n\", s);",
          "2514:    free (s);",
          "2515:   }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2752:  ret = true;",
          "2753: out:",
          "2754:  if (IS_MODE_NORMAL (mode)) {",
          "2757:  }",
          "2758:  r_table_free (table);",
          "2759:  ht_pp_free (dup_chk_ht);",
          "",
          "[Removed Lines]",
          "2755:   r_cons_printf (\"\\n%s\\n\", r_table_tostring (table));",
          "",
          "[Added Lines]",
          "2782:   if (r->table_query) {",
          "2783:    r_table_query (table, r->table_query);",
          "2784:   }",
          "2785:   char *s = r_table_tostring (table);",
          "2786:   r_cons_printf (\"\\n%s\\n\", s);",
          "2787:   free (s);",
          "",
          "---------------"
        ],
        "libr/core/cmd_info.c||libr/core/cmd_info.c": [
          "File: libr/core/cmd_info.c -> libr/core/cmd_info.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "480:  }",
          "481:  char *question = strchr (input, '?');",
          "482:  const char *space = strchr (input, ' ');",
          "484:   space = question + 1;",
          "485:  }",
          "486:  if (question < space && question > input) {",
          "",
          "[Removed Lines]",
          "483:  if (!space) {",
          "",
          "[Added Lines]",
          "483:  if (!space && question) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "488:   r_core_cmdf (core, \"i?~& i%c\", *question);",
          "489:   goto done;",
          "490:  }",
          "491:  while (*input) {",
          "492:   switch (*input) {",
          "493:   case 'b': // \"ib\"",
          "494:   {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "491:  R_FREE (core->table_query);",
          "492:  if (space && *space == ' ') {",
          "493:   core->table_query = r_str_trim_dup (space + 1);",
          "494:  }",
          "496:   if (*input == ' ') {",
          "497:    break;",
          "498:   }",
          "",
          "---------------"
        ],
        "libr/core/core.c||libr/core/core.c": [
          "File: libr/core/core.c -> libr/core/core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2889:  r_list_free (c->files);",
          "2890:  r_list_free (c->watchers);",
          "2891:  r_list_free (c->scriptstack);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2889:  R_FREE (c->table_query);",
          "",
          "---------------"
        ],
        "libr/include/r_core.h||libr/include/r_core.h": [
          "File: libr/include/r_core.h -> libr/include/r_core.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "324:  bool fixedbits;",
          "325:  bool fixedarch;",
          "326:  bool fixedblock;",
          "327:  int sync_index; // used for http.sync and T=",
          "328:  struct r_core_t *c2;",
          "329:  RCoreAutocomplete *autocomplete;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "327:  char *table_query;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "806370290b4b10cb8954f9c72bb3105c3dd573b7",
      "candidate_info": {
        "commit_hash": "806370290b4b10cb8954f9c72bb3105c3dd573b7",
        "repo": "radareorg/radare2",
        "commit_url": "https://github.com/radareorg/radare2/commit/806370290b4b10cb8954f9c72bb3105c3dd573b7",
        "files": [
          "libr/core/core.c",
          "libr/include/r_core.h"
        ],
        "message": "Cleanup tab-completion initialization code",
        "before_after_code_files": [
          "libr/core/core.c||libr/core/core.c",
          "libr/include/r_core.h||libr/include/r_core.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libr/core/core.c||libr/core/core.c"
          ],
          "candidate": [
            "libr/core/core.c||libr/core/core.c"
          ]
        }
      },
      "candidate_diff": {
        "libr/core/core.c||libr/core/core.c": [
          "File: libr/core/core.c -> libr/core/core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "87:  if (cmdhit && cmdhit[0] != 0) {",
          "88:   r_core_cmd0 (core, cmdhit);",
          "90:  }",
          "91: }",
          "",
          "[Removed Lines]",
          "89:   r_cons_flush();",
          "",
          "[Added Lines]",
          "89:   r_cons_flush ();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2333:  }",
          "2334: }",
          "2337:  int i;",
          "2384:  r_core_autocomplete_add (core->autocomplete, \"-\", R_CORE_AUTOCMPLT_MINS, true);",
          "2404:  r_core_autocomplete_add (core->autocomplete, \"zs\", R_CORE_AUTOCMPLT_ZIGN, true);",
          "2406:  r_core_autocomplete_add (core->autocomplete, \"fs\", R_CORE_AUTOCMPLT_FLSP, true);",
          "2468:  r_core_autocomplete_add (core->autocomplete, \".(\", R_CORE_AUTOCMPLT_MACR, true);",
          "2469:  r_core_autocomplete_add (core->autocomplete, \"(-\", R_CORE_AUTOCMPLT_MACR, true);",
          "2484:  for (i = 0; i < radare_argc && radare_argv[i]; i++) {",
          "2485:   if (!r_core_autocomplete_find (core->autocomplete, radare_argv[i], true)) {",
          "2486:    r_core_autocomplete_add (core->autocomplete, radare_argv[i], R_CORE_AUTOCMPLT_DFLT, true);",
          "",
          "[Removed Lines]",
          "2336: static void __init_autocomplete_default (RCore* core) {",
          "2338:  r_core_autocomplete_add (core->autocomplete, \"*\", R_CORE_AUTOCMPLT_FLAG, true);",
          "2339:  r_core_autocomplete_add (core->autocomplete, \"s\", R_CORE_AUTOCMPLT_SEEK, true);",
          "2340:  r_core_autocomplete_add (core->autocomplete, \"s+\", R_CORE_AUTOCMPLT_FLAG, true);",
          "2341:  r_core_autocomplete_add (core->autocomplete, \"b\", R_CORE_AUTOCMPLT_FLAG, true);",
          "2342:  r_core_autocomplete_add (core->autocomplete, \"f\", R_CORE_AUTOCMPLT_FLAG, true);",
          "2343:  r_core_autocomplete_add (core->autocomplete, \"fg\", R_CORE_AUTOCMPLT_FLAG, true);",
          "2344:  r_core_autocomplete_add (core->autocomplete, \"?\", R_CORE_AUTOCMPLT_FLAG, true);",
          "2345:  r_core_autocomplete_add (core->autocomplete, \"?v\", R_CORE_AUTOCMPLT_FLAG, true);",
          "2346:  r_core_autocomplete_add (core->autocomplete, \"ad\", R_CORE_AUTOCMPLT_FLAG, true);",
          "2347:  r_core_autocomplete_add (core->autocomplete, \"bf\", R_CORE_AUTOCMPLT_FLAG, true);",
          "2348:  r_core_autocomplete_add (core->autocomplete, \"c1\", R_CORE_AUTOCMPLT_FLAG, true);",
          "2349:  r_core_autocomplete_add (core->autocomplete, \"db\", R_CORE_AUTOCMPLT_FLAG, true);",
          "2350:  r_core_autocomplete_add (core->autocomplete, \"dbw\", R_CORE_AUTOCMPLT_FLAG, true);",
          "2351:  r_core_autocomplete_add (core->autocomplete, \"f-\", R_CORE_AUTOCMPLT_FLAG, true);",
          "2352:  r_core_autocomplete_add (core->autocomplete, \"fr\", R_CORE_AUTOCMPLT_FLAG, true);",
          "2353:  r_core_autocomplete_add (core->autocomplete, \"tf\", R_CORE_AUTOCMPLT_FLAG, true);",
          "2354:  r_core_autocomplete_add (core->autocomplete, \"/a\", R_CORE_AUTOCMPLT_FLAG, true);",
          "2355:  r_core_autocomplete_add (core->autocomplete, \"/v\", R_CORE_AUTOCMPLT_FLAG, true);",
          "2356:  r_core_autocomplete_add (core->autocomplete, \"/r\", R_CORE_AUTOCMPLT_FLAG, true);",
          "2357:  r_core_autocomplete_add (core->autocomplete, \"/re\", R_CORE_AUTOCMPLT_FLAG, true);",
          "2358:  r_core_autocomplete_add (core->autocomplete, \"aav\", R_CORE_AUTOCMPLT_FLAG, true);",
          "2359:  r_core_autocomplete_add (core->autocomplete, \"aep\", R_CORE_AUTOCMPLT_FLAG, true);",
          "2360:  r_core_autocomplete_add (core->autocomplete, \"aef\", R_CORE_AUTOCMPLT_FLAG, true);",
          "2361:  r_core_autocomplete_add (core->autocomplete, \"afb\", R_CORE_AUTOCMPLT_FLAG, true);",
          "2362:  r_core_autocomplete_add (core->autocomplete, \"afc\", R_CORE_AUTOCMPLT_FLAG, true);",
          "2363:  r_core_autocomplete_add (core->autocomplete, \"axg\", R_CORE_AUTOCMPLT_FLAG, true);",
          "2364:  r_core_autocomplete_add (core->autocomplete, \"axt\", R_CORE_AUTOCMPLT_FLAG, true);",
          "2365:  r_core_autocomplete_add (core->autocomplete, \"axf\", R_CORE_AUTOCMPLT_FLAG, true);",
          "2366:  r_core_autocomplete_add (core->autocomplete, \"dcu\", R_CORE_AUTOCMPLT_FLAG, true);",
          "2367:  r_core_autocomplete_add (core->autocomplete, \"ag\", R_CORE_AUTOCMPLT_FLAG, true);",
          "2368:  r_core_autocomplete_add (core->autocomplete, \"agfl\", R_CORE_AUTOCMPLT_FLAG, true);",
          "2369:  r_core_autocomplete_add (core->autocomplete, \"aecu\", R_CORE_AUTOCMPLT_FLAG, true);",
          "2370:  r_core_autocomplete_add (core->autocomplete, \"aesu\", R_CORE_AUTOCMPLT_FLAG, true);",
          "2371:  r_core_autocomplete_add (core->autocomplete, \"aeim\", R_CORE_AUTOCMPLT_FLAG, true);",
          "2372:  r_core_autocomplete_add (core->autocomplete, \"afi\", R_CORE_AUTOCMPLT_FCN, true);",
          "2373:  r_core_autocomplete_add (core->autocomplete, \"afcf\", R_CORE_AUTOCMPLT_FCN, true);",
          "2374:  r_core_autocomplete_add (core->autocomplete, \"afn\", R_CORE_AUTOCMPLT_FCN, true);",
          "2376:  r_core_autocomplete_add (core->autocomplete, \"e\", R_CORE_AUTOCMPLT_EVAL, true);",
          "2377:  r_core_autocomplete_add (core->autocomplete, \"ee\", R_CORE_AUTOCMPLT_EVAL, true);",
          "2378:  r_core_autocomplete_add (core->autocomplete, \"et\", R_CORE_AUTOCMPLT_EVAL, true);",
          "2379:  r_core_autocomplete_add (core->autocomplete, \"e?\", R_CORE_AUTOCMPLT_EVAL, true);",
          "2380:  r_core_autocomplete_add (core->autocomplete, \"e!\", R_CORE_AUTOCMPLT_EVAL, true);",
          "2381:  r_core_autocomplete_add (core->autocomplete, \"ev\", R_CORE_AUTOCMPLT_EVAL, true);",
          "2382:  r_core_autocomplete_add (core->autocomplete, \"evj\", R_CORE_AUTOCMPLT_EVAL, true);",
          "2386:  r_core_autocomplete_add (core->autocomplete, \"db-\", R_CORE_AUTOCMPLT_BRKP, true);",
          "2387:  r_core_autocomplete_add (core->autocomplete, \"dbc\", R_CORE_AUTOCMPLT_BRKP, true);",
          "2388:  r_core_autocomplete_add (core->autocomplete, \"dbC\", R_CORE_AUTOCMPLT_BRKP, true);",
          "2389:  r_core_autocomplete_add (core->autocomplete, \"dbd\", R_CORE_AUTOCMPLT_BRKP, true);",
          "2390:  r_core_autocomplete_add (core->autocomplete, \"dbe\", R_CORE_AUTOCMPLT_BRKP, true);",
          "2391:  r_core_autocomplete_add (core->autocomplete, \"dbs\", R_CORE_AUTOCMPLT_BRKP, true);",
          "2392:  r_core_autocomplete_add (core->autocomplete, \"dbi\", R_CORE_AUTOCMPLT_BRKP, true);",
          "2393:  r_core_autocomplete_add (core->autocomplete, \"dbte\", R_CORE_AUTOCMPLT_BRKP, true);",
          "2394:  r_core_autocomplete_add (core->autocomplete, \"dbtd\", R_CORE_AUTOCMPLT_BRKP, true);",
          "2395:  r_core_autocomplete_add (core->autocomplete, \"dbts\", R_CORE_AUTOCMPLT_BRKP, true);",
          "2397:  r_core_autocomplete_add (core->autocomplete, \"Pc\", R_CORE_AUTOCMPLT_PRJT, true);",
          "2398:  r_core_autocomplete_add (core->autocomplete, \"Pd\", R_CORE_AUTOCMPLT_PRJT, true);",
          "2399:  r_core_autocomplete_add (core->autocomplete, \"Pi\", R_CORE_AUTOCMPLT_PRJT, true);",
          "2400:  r_core_autocomplete_add (core->autocomplete, \"Po\", R_CORE_AUTOCMPLT_PRJT, true);",
          "2401:  r_core_autocomplete_add (core->autocomplete, \"Ps\", R_CORE_AUTOCMPLT_PRJT, true);",
          "2402:  r_core_autocomplete_add (core->autocomplete, \"P-\", R_CORE_AUTOCMPLT_PRJT, true);",
          "2408:  r_core_autocomplete_add (core->autocomplete, \".\", R_CORE_AUTOCMPLT_FILE, true);",
          "2409:  r_core_autocomplete_add (core->autocomplete, \"..\", R_CORE_AUTOCMPLT_FILE, true);",
          "2410:  r_core_autocomplete_add (core->autocomplete, \".*\", R_CORE_AUTOCMPLT_FILE, true);",
          "2411:  r_core_autocomplete_add (core->autocomplete, \"/F\", R_CORE_AUTOCMPLT_FILE, true);",
          "2412:  r_core_autocomplete_add (core->autocomplete, \"/m\", R_CORE_AUTOCMPLT_FILE, true);",
          "2413:  r_core_autocomplete_add (core->autocomplete, \"!\", R_CORE_AUTOCMPLT_FILE, true);",
          "2414:  r_core_autocomplete_add (core->autocomplete, \"!!\", R_CORE_AUTOCMPLT_FILE, true);",
          "2415:  r_core_autocomplete_add (core->autocomplete, \"#!c\", R_CORE_AUTOCMPLT_FILE, true);",
          "2416:  r_core_autocomplete_add (core->autocomplete, \"#!cpipe\", R_CORE_AUTOCMPLT_FILE, true);",
          "2417:  r_core_autocomplete_add (core->autocomplete, \"#!vala\", R_CORE_AUTOCMPLT_FILE, true);",
          "2418:  r_core_autocomplete_add (core->autocomplete, \"#!rust\", R_CORE_AUTOCMPLT_FILE, true);",
          "2419:  r_core_autocomplete_add (core->autocomplete, \"#!zig\", R_CORE_AUTOCMPLT_FILE, true);",
          "2420:  r_core_autocomplete_add (core->autocomplete, \"#!pipe\", R_CORE_AUTOCMPLT_FILE, true);",
          "2421:  r_core_autocomplete_add (core->autocomplete, \"#!python\", R_CORE_AUTOCMPLT_FILE, true);",
          "2422:  r_core_autocomplete_add (core->autocomplete, \"aeli\", R_CORE_AUTOCMPLT_FILE, true);",
          "2423:  r_core_autocomplete_add (core->autocomplete, \"arp\", R_CORE_AUTOCMPLT_FILE, true);",
          "2424:  r_core_autocomplete_add (core->autocomplete, \"cf\", R_CORE_AUTOCMPLT_FILE, true);",
          "2425:  r_core_autocomplete_add (core->autocomplete, \"dg\", R_CORE_AUTOCMPLT_FILE, true);",
          "2426:  r_core_autocomplete_add (core->autocomplete, \"dmd\", R_CORE_AUTOCMPLT_FILE, true);",
          "2427:  r_core_autocomplete_add (core->autocomplete, \"drp\", R_CORE_AUTOCMPLT_FILE, true);",
          "2428:  r_core_autocomplete_add (core->autocomplete, \"o\", R_CORE_AUTOCMPLT_FILE, true);",
          "2429:  r_core_autocomplete_add (core->autocomplete, \"idp\", R_CORE_AUTOCMPLT_FILE, true);",
          "2430:  r_core_autocomplete_add (core->autocomplete, \"idpi\", R_CORE_AUTOCMPLT_FILE, true);",
          "2431:  r_core_autocomplete_add (core->autocomplete, \"L\", R_CORE_AUTOCMPLT_FILE, true);",
          "2432:  r_core_autocomplete_add (core->autocomplete, \"obf\", R_CORE_AUTOCMPLT_FILE, true);",
          "2433:  r_core_autocomplete_add (core->autocomplete, \"o+\", R_CORE_AUTOCMPLT_FILE, true);",
          "2434:  r_core_autocomplete_add (core->autocomplete, \"oc\", R_CORE_AUTOCMPLT_FILE, true);",
          "2435:  r_core_autocomplete_add (core->autocomplete, \"r2\", R_CORE_AUTOCMPLT_FILE, true);",
          "2436:  r_core_autocomplete_add (core->autocomplete, \"rabin2\", R_CORE_AUTOCMPLT_FILE, true);",
          "2437:  r_core_autocomplete_add (core->autocomplete, \"rasm2\", R_CORE_AUTOCMPLT_FILE, true);",
          "2438:  r_core_autocomplete_add (core->autocomplete, \"rahash2\", R_CORE_AUTOCMPLT_FILE, true);",
          "2439:  r_core_autocomplete_add (core->autocomplete, \"rax2\", R_CORE_AUTOCMPLT_FILE, true);",
          "2440:  r_core_autocomplete_add (core->autocomplete, \"rafind2\", R_CORE_AUTOCMPLT_FILE, true);",
          "2441:  r_core_autocomplete_add (core->autocomplete, \"cd\", R_CORE_AUTOCMPLT_FILE, true);",
          "2442:  r_core_autocomplete_add (core->autocomplete, \"on\", R_CORE_AUTOCMPLT_FILE, true);",
          "2443:  r_core_autocomplete_add (core->autocomplete, \"op\", R_CORE_AUTOCMPLT_FILE, true);",
          "2444:  r_core_autocomplete_add (core->autocomplete, \"wf\", R_CORE_AUTOCMPLT_FILE, true);",
          "2445:  r_core_autocomplete_add (core->autocomplete, \"rm\", R_CORE_AUTOCMPLT_FILE, true);",
          "2446:  r_core_autocomplete_add (core->autocomplete, \"wF\", R_CORE_AUTOCMPLT_FILE, true);",
          "2447:  r_core_autocomplete_add (core->autocomplete, \"wp\", R_CORE_AUTOCMPLT_FILE, true);",
          "2448:  r_core_autocomplete_add (core->autocomplete, \"Sd\", R_CORE_AUTOCMPLT_FILE, true);",
          "2449:  r_core_autocomplete_add (core->autocomplete, \"Sl\", R_CORE_AUTOCMPLT_FILE, true);",
          "2450:  r_core_autocomplete_add (core->autocomplete, \"to\", R_CORE_AUTOCMPLT_FILE, true);",
          "2451:  r_core_autocomplete_add (core->autocomplete, \"pm\", R_CORE_AUTOCMPLT_FILE, true);",
          "2452:  r_core_autocomplete_add (core->autocomplete, \"/m\", R_CORE_AUTOCMPLT_FILE, true);",
          "2453:  r_core_autocomplete_add (core->autocomplete, \"zos\", R_CORE_AUTOCMPLT_FILE, true);",
          "2454:  r_core_autocomplete_add (core->autocomplete, \"zfd\", R_CORE_AUTOCMPLT_FILE, true);",
          "2455:  r_core_autocomplete_add (core->autocomplete, \"zfs\", R_CORE_AUTOCMPLT_FILE, true);",
          "2456:  r_core_autocomplete_add (core->autocomplete, \"zfz\", R_CORE_AUTOCMPLT_FILE, true);",
          "2457:  r_core_autocomplete_add (core->autocomplete, \"cat\", R_CORE_AUTOCMPLT_FILE, true);",
          "2458:  r_core_autocomplete_add (core->autocomplete, \"wta\", R_CORE_AUTOCMPLT_FILE, true);",
          "2459:  r_core_autocomplete_add (core->autocomplete, \"wtf\", R_CORE_AUTOCMPLT_FILE, true);",
          "2460:  r_core_autocomplete_add (core->autocomplete, \"wxf\", R_CORE_AUTOCMPLT_FILE, true);",
          "2461:  r_core_autocomplete_add (core->autocomplete, \"dml\", R_CORE_AUTOCMPLT_FILE, true);",
          "2462:  r_core_autocomplete_add (core->autocomplete, \"vi\", R_CORE_AUTOCMPLT_FILE, true);",
          "2463:  r_core_autocomplete_add (core->autocomplete, \"less\", R_CORE_AUTOCMPLT_FILE, true);",
          "2464:  r_core_autocomplete_add (core->autocomplete, \"head\", R_CORE_AUTOCMPLT_FILE, true);",
          "2465:  r_core_autocomplete_add (core->autocomplete, \"tail\", R_CORE_AUTOCMPLT_FILE, true);",
          "2466:  r_core_autocomplete_add (r_core_autocomplete_add (core->autocomplete, \"ls\", R_CORE_AUTOCMPLT_DFLT, true), \"-l\", R_CORE_AUTOCMPLT_FILE, true);",
          "2471:  r_core_autocomplete_add (core->autocomplete, \"md\", R_CORE_AUTOCMPLT_MS, true);",
          "2472:  r_core_autocomplete_add (core->autocomplete, \"mg\", R_CORE_AUTOCMPLT_MS, true);",
          "2473:  r_core_autocomplete_add (core->autocomplete, \"mo\", R_CORE_AUTOCMPLT_MS, true);",
          "2474:  r_core_autocomplete_add (core->autocomplete, \"ms\", R_CORE_AUTOCMPLT_MS, true);",
          "2475:  r_core_autocomplete_add (core->autocomplete, \"mc\", R_CORE_AUTOCMPLT_MS, true);",
          "2476:  r_core_autocomplete_add (core->autocomplete, \"mi\", R_CORE_AUTOCMPLT_MS, true);",
          "2477:  r_core_autocomplete_add (core->autocomplete, \"mw\", R_CORE_AUTOCMPLT_MS, true);",
          "2479:  r_core_autocomplete_add (core->autocomplete, \"k\", R_CORE_AUTOCMPLT_SDB, true);",
          "2482:  r_core_autocomplete_add (core->autocomplete, \"eco\", R_CORE_AUTOCMPLT_THME, true);",
          "",
          "[Added Lines]",
          "2335: static void __foreach(RCore *core, const char **cmds, int type) {",
          "2337:  for (i = 0; cmds[i]; i++) {",
          "2338:   r_core_autocomplete_add (core->autocomplete, cmds[i], R_CORE_AUTOCMPLT_FLAG, true);",
          "2339:  }",
          "2340: }",
          "2342: static void __init_autocomplete_default (RCore* core) {",
          "2343:  const char *fcns[] = {",
          "2344:   \"afi\", \"afcf\", \"afn\", NULL",
          "2345:  };",
          "2346:  const char *seeks[] = {",
          "2347:   \"s\", NULL",
          "2348:  };",
          "2349:  const char *flags[] = {",
          "2350:   \"*\", \"s\", \"s+\", \"b\", \"f\", \"fg\", \"?\", \"?v\", \"ad\", \"bf\", \"c1\", \"db\", \"dbw\",",
          "2351:   \"f-\", \"fr\", \"tf\", \"/a\", \"/v\", \"/r\", \"/re\", \"aav\", \"aep\", \"aef\", \"afb\",",
          "2352:   \"afc\", \"axg\", \"axt\", \"axf\", \"dcu\", \"ag\", \"agfl\", \"aecu\", \"aesu\", \"aeim\", NULL",
          "2353:  };",
          "2354:  const char *evals[] = {",
          "2355:   \"e\", \"ee\", \"et\", \"e?\", \"e!\", \"ev\", \"evj\", NULL",
          "2356:  };",
          "2357:  const char *breaks[] = {",
          "2358:   \"db-\", \"dbc\", \"dbC\", \"dbd\", \"dbe\", \"dbs\", \"dbi\", \"dbte\", \"dbtd\", \"dbts\", NULL",
          "2359:  };",
          "2360:  const char *files[] = {",
          "2361:   \".\", \"..\", \".*\", \"/F\", \"/m\", \"!\", \"!!\", \"#!c\", \"#!v\", \"#!cpipe\", \"#!vala\",",
          "2362:   \"#!rust\", \"#!zig\", \"#!pipe\", \"#!python\", \"aeli\", \"arp\", \"dmd\", \"drp\", \"o\",",
          "2363:   \"idp\", \"idpi\", \"L\", \"obf\", \"o+\", \"oc\", \"r2\", \"rabin2\", \"rasm2\", \"rahash2\", \"rax2\",",
          "2364:   \"rafind2\", \"cd\", \"on\", \"op\", \"wf\", \"rm\", \"wF\", \"wp\", \"Sd\", \"Sl\", \"to\", \"pm\",",
          "2365:   \"/m\", \"zos\", \"zfd\", \"zfs\", \"zfz\", \"cat\", \"wta\", \"wtf\", \"wxf\", \"dml\", \"vi\",",
          "2366:   \"less\", \"head\", \"tail\", NULL",
          "2367:  };",
          "2368:  const char *projs[] = {",
          "2369:   \"Pc\", \"Pd\", \"Pi\", \"Po\", \"Ps\", \"P-\", NULL",
          "2370:  };",
          "2371:  const char *mounts[] = {",
          "2372:   \"md\", \"mg\", \"mo\", \"ms\", \"mc\", \"mi\", \"mw\", NULL",
          "2373:  };",
          "2374:  __foreach (core, flags, R_CORE_AUTOCMPLT_FLAG);",
          "2375:  __foreach (core, seeks, R_CORE_AUTOCMPLT_SEEK);",
          "2376:  __foreach (core, fcns, R_CORE_AUTOCMPLT_FCN);",
          "2377:  __foreach (core, evals, R_CORE_AUTOCMPLT_EVAL);",
          "2378:  __foreach (core, breaks, R_CORE_AUTOCMPLT_BRKP);",
          "2379:  __foreach (core, files, R_CORE_AUTOCMPLT_FILE);",
          "2380:  __foreach (core, projs, R_CORE_AUTOCMPLT_PRJT);",
          "2381:  __foreach (core, mounts, R_CORE_AUTOCMPLT_MS);",
          "2386:  r_core_autocomplete_add (",
          "2387:   r_core_autocomplete_add (core->autocomplete, \"ls\", R_CORE_AUTOCMPLT_DFLT, true),",
          "2388:   \"-l\", R_CORE_AUTOCMPLT_FILE, true);",
          "2389:  r_core_autocomplete_add (core->autocomplete, \"eco\", R_CORE_AUTOCMPLT_THME, true);",
          "2390:  r_core_autocomplete_add (core->autocomplete, \"k\", R_CORE_AUTOCMPLT_SDB, true);",
          "2395:  int i;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2855:  core->cons->user = (void*)core;",
          "2856: }",
          "2859:  if (!c) {",
          "2861:  }",
          "2862:  r_core_task_break_all (c);",
          "2863:  r_core_task_join (c, NULL, -1);",
          "",
          "[Removed Lines]",
          "2858: R_API RCore *r_core_fini(RCore *c) {",
          "2860:   return NULL;",
          "",
          "[Added Lines]",
          "2770: R_API void r_core_fini(RCore *c) {",
          "2772:   return;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2868:  r_list_free (c->ropchain);",
          "2869:  r_event_free (c->ev);",
          "2871:  r_th_lock_free (c->lock);",
          "2877:  r_list_free (c->visual.tabs);",
          "2879:  r_core_autocomplete_free (c->autocomplete);",
          "2881:  r_list_free (c->gadgets);",
          "",
          "[Removed Lines]",
          "2870:  R_FREE (c->cmdlog);",
          "2872:  R_FREE (c->lastsearch);",
          "2873:  R_FREE (c->cons->pager);",
          "2874:  R_FREE (c->cmdqueue);",
          "2875:  R_FREE (c->lastcmd);",
          "2876:  R_FREE (c->stkcmd);",
          "2878:  R_FREE (c->block);",
          "",
          "[Added Lines]",
          "2782:  free (c->cmdlog);",
          "2784:  free (c->lastsearch);",
          "2785:  free (c->cons->pager);",
          "2786:  free (c->cmdqueue);",
          "2787:  free (c->lastcmd);",
          "2788:  free (c->stkcmd);",
          "2790:  free (c->block);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2889:  r_list_free (c->files);",
          "2890:  r_list_free (c->watchers);",
          "2891:  r_list_free (c->scriptstack);",
          "",
          "[Removed Lines]",
          "2888:  R_FREE (c->table_query);",
          "",
          "[Added Lines]",
          "2800:  free (c->table_query);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2916:  r_lib_free (c->lib);",
          "2917:  r_buf_free (c->yank_buf);",
          "2918:  r_agraph_free (c->graph);",
          "2920:  sdb_free (c->sdb);",
          "2921:  r_core_log_free (c->log);",
          "2922:  r_parse_free (c->parser);",
          "2925: }",
          "2929:  if (c) {",
          "2930:   r_core_fini (c);",
          "2931:   free (c);",
          "2932:  }",
          "2934: }",
          "2936: R_API void r_core_prompt_loop(RCore *r) {",
          "",
          "[Removed Lines]",
          "2919:  R_FREE (c->asmqjmps);",
          "2923:  R_FREE (c->times);",
          "2924:  return NULL;",
          "2927: R_API RCore *r_core_free(RCore *c) {",
          "2933:  return NULL;",
          "",
          "[Added Lines]",
          "2831:  free (c->asmqjmps);",
          "2835:  free (c->times);",
          "2838: R_API void r_core_free(RCore *c) {",
          "",
          "---------------"
        ],
        "libr/include/r_core.h||libr/include/r_core.h": [
          "File: libr/include/r_core.h -> libr/include/r_core.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "387: R_API bool r_core_init(RCore *core);",
          "388: R_API void r_core_bind_cons(RCore *core); // to restore pointers in cons",
          "389: R_API RCore *r_core_new(void);",
          "392: R_API void r_core_wait(RCore *core);",
          "393: R_API RCore *r_core_ncast(ut64 p);",
          "394: R_API RCore *r_core_cast(void *p);",
          "",
          "[Removed Lines]",
          "390: R_API RCore *r_core_free(RCore *core);",
          "391: R_API RCore *r_core_fini(RCore *c);",
          "",
          "[Added Lines]",
          "390: R_API void r_core_free(RCore *core);",
          "391: R_API void r_core_fini(RCore *c);",
          "",
          "---------------"
        ]
      }
    }
  ]
}