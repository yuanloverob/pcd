{
  "cve_id": "CVE-2016-10506",
  "cve_desc": "Division-by-zero vulnerabilities in the functions opj_pi_next_cprl, opj_pi_next_pcrl, and opj_pi_next_rpcl in pi.c in OpenJPEG before 2.2.0 allow remote attackers to cause a denial of service (application crash) via crafted j2k files.",
  "repo": "uclouvain/openjpeg",
  "patch_hash": "d27ccf01c68a31ad62b33d2dc1ba2bb1eeaafe7b",
  "patch_info": {
    "commit_hash": "d27ccf01c68a31ad62b33d2dc1ba2bb1eeaafe7b",
    "repo": "uclouvain/openjpeg",
    "commit_url": "https://github.com/uclouvain/openjpeg/commit/d27ccf01c68a31ad62b33d2dc1ba2bb1eeaafe7b",
    "files": [
      "src/lib/openjp2/pi.c"
    ],
    "message": "Avoid division by zero in opj_pi_next_rpcl, opj_pi_next_pcrl and opj_pi_next_cprl (#938)\n\nFixes issues with id:000026,sig:08,src:002419,op:int32,pos:60,val:+32 and\nid:000019,sig:08,src:001098,op:flip1,pos:49",
    "before_after_code_files": [
      "src/lib/openjp2/pi.c||src/lib/openjp2/pi.c"
    ]
  },
  "patch_diff": {
    "src/lib/openjp2/pi.c||src/lib/openjp2/pi.c": [
      "File: src/lib/openjp2/pi.c -> src/lib/openjp2/pi.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "369:                     try1 = opj_int_ceildiv(pi->ty1, (OPJ_INT32)(comp->dy << levelno));",
      "370:                     rpx = res->pdx + levelno;",
      "371:                     rpy = res->pdy + levelno;",
      "372:                     if (!((pi->y % (OPJ_INT32)(comp->dy << rpy) == 0) || ((pi->y == pi->ty0) &&",
      "373:                             ((try0 << levelno) % (1 << rpy))))) {",
      "374:                         continue;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "377:                     if (rpx >= 31 || ((comp->dx << rpx) >> rpx) != comp->dx ||",
      "378:                             rpy >= 31 || ((comp->dy << rpy) >> rpy) != comp->dy) {",
      "379:                         continue;",
      "380:                     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "464:                     try1 = opj_int_ceildiv(pi->ty1, (OPJ_INT32)(comp->dy << levelno));",
      "465:                     rpx = res->pdx + levelno;",
      "466:                     rpy = res->pdy + levelno;",
      "467:                     if (!((pi->y % (OPJ_INT32)(comp->dy << rpy) == 0) || ((pi->y == pi->ty0) &&",
      "468:                             ((try0 << levelno) % (1 << rpy))))) {",
      "469:                         continue;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "483:                     if (rpx >= 31 || ((comp->dx << rpx) >> rpx) != comp->dx ||",
      "484:                             rpy >= 31 || ((comp->dy << rpy) >> rpy) != comp->dy) {",
      "485:                         continue;",
      "486:                     }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "557:                     try1 = opj_int_ceildiv(pi->ty1, (OPJ_INT32)(comp->dy << levelno));",
      "558:                     rpx = res->pdx + levelno;",
      "559:                     rpy = res->pdy + levelno;",
      "560:                     if (!((pi->y % (OPJ_INT32)(comp->dy << rpy) == 0) || ((pi->y == pi->ty0) &&",
      "561:                             ((try0 << levelno) % (1 << rpy))))) {",
      "562:                         continue;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "587:                     if (rpx >= 31 || ((comp->dx << rpx) >> rpx) != comp->dx ||",
      "588:                             rpy >= 31 || ((comp->dy << rpy) >> rpy) != comp->dy) {",
      "589:                         continue;",
      "590:                     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "80818c39f5bfbac37768fcee95b0ffeceaa77264",
      "candidate_info": {
        "commit_hash": "80818c39f5bfbac37768fcee95b0ffeceaa77264",
        "repo": "uclouvain/openjpeg",
        "commit_url": "https://github.com/uclouvain/openjpeg/commit/80818c39f5bfbac37768fcee95b0ffeceaa77264",
        "files": [
          "src/lib/openjp2/pi.c",
          "src/lib/openjp2/pi.h"
        ],
        "message": "Avoid index out of bounds access to pi->include[] (#938)\n\nFix id:000098,sig:11,src:005411,op:havoc,rep:2 test case",
        "before_after_code_files": [
          "src/lib/openjp2/pi.c||src/lib/openjp2/pi.c",
          "src/lib/openjp2/pi.h||src/lib/openjp2/pi.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [
            "src/lib/openjp2/pi.c||src/lib/openjp2/pi.c"
          ],
          "candidate": [
            "src/lib/openjp2/pi.c||src/lib/openjp2/pi.c"
          ]
        }
      },
      "candidate_diff": {
        "src/lib/openjp2/pi.c||src/lib/openjp2/pi.c": [
          "File: src/lib/openjp2/pi.c -> src/lib/openjp2/pi.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "230: ==========================================================",
          "233: static OPJ_BOOL opj_pi_next_lrcp(opj_pi_iterator_t * pi)",
          "234: {",
          "235:     opj_pi_comp_t *comp = NULL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "233: static void opj_pi_emit_error(opj_pi_iterator_t * pi, const char* msg)",
          "234: {",
          "235:     (void)pi;",
          "236:     (void)msg;",
          "237: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "259:                 for (pi->precno = pi->poc.precno0; pi->precno < pi->poc.precno1; pi->precno++) {",
          "260:                     index = pi->layno * pi->step_l + pi->resno * pi->step_r + pi->compno *",
          "261:                             pi->step_c + pi->precno * pi->step_p;",
          "262:                     if (!pi->include[index]) {",
          "263:                         pi->include[index] = 1;",
          "264:                         return OPJ_TRUE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "274:                     if (index >= pi->include_size) {",
          "275:                         opj_pi_emit_error(pi, \"Invalid access to pi->include\");",
          "276:                         return OPJ_FALSE;",
          "277:                     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "301:                 for (pi->precno = pi->poc.precno0; pi->precno < pi->poc.precno1; pi->precno++) {",
          "302:                     index = pi->layno * pi->step_l + pi->resno * pi->step_r + pi->compno *",
          "303:                             pi->step_c + pi->precno * pi->step_p;",
          "304:                     if (!pi->include[index]) {",
          "305:                         pi->include[index] = 1;",
          "306:                         return OPJ_TRUE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "320:                     if (index >= pi->include_size) {",
          "321:                         opj_pi_emit_error(pi, \"Invalid access to pi->include\");",
          "322:                         return OPJ_FALSE;",
          "323:                     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "407:                     for (pi->layno = pi->poc.layno0; pi->layno < pi->poc.layno1; pi->layno++) {",
          "408:                         index = pi->layno * pi->step_l + pi->resno * pi->step_r + pi->compno *",
          "409:                                 pi->step_c + pi->precno * pi->step_p;",
          "410:                         if (!pi->include[index]) {",
          "411:                             pi->include[index] = 1;",
          "412:                             return OPJ_TRUE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "430:                         if (index >= pi->include_size) {",
          "431:                             opj_pi_emit_error(pi, \"Invalid access to pi->include\");",
          "432:                             return OPJ_FALSE;",
          "433:                         }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "513:                     for (pi->layno = pi->poc.layno0; pi->layno < pi->poc.layno1; pi->layno++) {",
          "514:                         index = pi->layno * pi->step_l + pi->resno * pi->step_r + pi->compno *",
          "515:                                 pi->step_c + pi->precno * pi->step_p;",
          "516:                         if (!pi->include[index]) {",
          "517:                             pi->include[index] = 1;",
          "518:                             return OPJ_TRUE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "540:                         if (index >= pi->include_size) {",
          "541:                             opj_pi_emit_error(pi, \"Invalid access to pi->include\");",
          "542:                             return OPJ_FALSE;",
          "543:                         }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "617:                     for (pi->layno = pi->poc.layno0; pi->layno < pi->poc.layno1; pi->layno++) {",
          "618:                         index = pi->layno * pi->step_l + pi->resno * pi->step_r + pi->compno *",
          "619:                                 pi->step_c + pi->precno * pi->step_p;",
          "620:                         if (!pi->include[index]) {",
          "621:                             pi->include[index] = 1;",
          "622:                             return OPJ_TRUE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "648:                         if (index >= pi->include_size) {",
          "649:                             opj_pi_emit_error(pi, \"Invalid access to pi->include\");",
          "650:                             return OPJ_FALSE;",
          "651:                         }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1334:     l_current_pi->include = 00;",
          "1338:     }",
          "1340:     if (!l_current_pi->include) {",
          "",
          "[Removed Lines]",
          "1335:     if (l_step_l <= (SIZE_MAX / (l_tcp->numlayers + 1U))) {",
          "1336:         l_current_pi->include = (OPJ_INT16*) opj_calloc((size_t)(",
          "1337:                                     l_tcp->numlayers + 1U) * l_step_l, sizeof(OPJ_INT16));",
          "",
          "[Added Lines]",
          "1367:     if (l_step_l <= (UINT_MAX / (l_tcp->numlayers + 1U))) {",
          "1368:         l_current_pi->include_size = (l_tcp->numlayers + 1U) * l_step_l;",
          "1369:         l_current_pi->include = (OPJ_INT16*) opj_calloc(",
          "1370:                                     l_current_pi->include_size, sizeof(OPJ_INT16));",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1424:         }",
          "1426:         l_current_pi->include = (l_current_pi - 1)->include;",
          "1427:         ++l_current_pi;",
          "1428:     }",
          "1429:     opj_free(l_tmp_data);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1460:         l_current_pi->include_size = (l_current_pi - 1)->include_size;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1525:     l_current_pi = l_pi;",
          "1529:                             sizeof(OPJ_INT16));",
          "1530:     if (!l_current_pi->include) {",
          "1531:         opj_free(l_tmp_data);",
          "",
          "[Removed Lines]",
          "1528:     l_current_pi->include = (OPJ_INT16*) opj_calloc(l_tcp->numlayers * l_step_l,",
          "",
          "[Added Lines]",
          "1562:     l_current_pi->include_size = l_tcp->numlayers * l_step_l;",
          "1563:     l_current_pi->include = (OPJ_INT16*) opj_calloc(l_current_pi->include_size,",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1612:         l_current_pi->include = (l_current_pi - 1)->include;",
          "1613:         ++l_current_pi;",
          "1614:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1648:         l_current_pi->include_size = (l_current_pi - 1)->include_size;",
          "",
          "---------------"
        ],
        "src/lib/openjp2/pi.h||src/lib/openjp2/pi.h": [
          "File: src/lib/openjp2/pi.h -> src/lib/openjp2/pi.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "75:     OPJ_BYTE tp_on;",
          "77:     OPJ_INT16 *include;",
          "79:     OPJ_UINT32 step_l;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "79:     OPJ_UINT32 include_size;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5c5319984b81e2aa32d1d83abdef0cdb8dbe7b18",
      "candidate_info": {
        "commit_hash": "5c5319984b81e2aa32d1d83abdef0cdb8dbe7b18",
        "repo": "uclouvain/openjpeg",
        "commit_url": "https://github.com/uclouvain/openjpeg/commit/5c5319984b81e2aa32d1d83abdef0cdb8dbe7b18",
        "files": [
          "src/lib/openjp2/pi.c"
        ],
        "message": "Avoid division by zero in opj_pi_next_rpcl, opj_pi_next_pcrl, opj_pi_next_cprl (#938)\n\nFixes crash on id_000004,sig_06,src_000679,op_arith8,pos_49,val_-17",
        "before_after_code_files": [
          "src/lib/openjp2/pi.c||src/lib/openjp2/pi.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [
            "src/lib/openjp2/pi.c||src/lib/openjp2/pi.c"
          ],
          "candidate": [
            "src/lib/openjp2/pi.c||src/lib/openjp2/pi.c"
          ]
        }
      },
      "candidate_diff": {
        "src/lib/openjp2/pi.c||src/lib/openjp2/pi.c": [
          "File: src/lib/openjp2/pi.c -> src/lib/openjp2/pi.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "383:                     }",
          "384:                     res = &comp->resolutions[pi->resno];",
          "385:                     levelno = comp->numresolutions - 1 - pi->resno;",
          "386:                     trx0 = opj_int_ceildiv(pi->tx0, (OPJ_INT32)(comp->dx << levelno));",
          "387:                     try0 = opj_int_ceildiv(pi->ty0, (OPJ_INT32)(comp->dy << levelno));",
          "388:                     trx1 = opj_int_ceildiv(pi->tx1, (OPJ_INT32)(comp->dx << levelno));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "389:                     if (((comp->dx << levelno) >> levelno) != comp->dx ||",
          "390:                             ((comp->dy << levelno) >> levelno) != comp->dy) {",
          "391:                         continue;",
          "392:                     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "493:                     OPJ_INT32 prci, prcj;",
          "494:                     res = &comp->resolutions[pi->resno];",
          "495:                     levelno = comp->numresolutions - 1 - pi->resno;",
          "496:                     trx0 = opj_int_ceildiv(pi->tx0, (OPJ_INT32)(comp->dx << levelno));",
          "497:                     try0 = opj_int_ceildiv(pi->ty0, (OPJ_INT32)(comp->dy << levelno));",
          "498:                     trx1 = opj_int_ceildiv(pi->tx1, (OPJ_INT32)(comp->dx << levelno));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "506:                     if (((comp->dx << levelno) >> levelno) != comp->dx ||",
          "507:                             ((comp->dy << levelno) >> levelno) != comp->dy) {",
          "508:                         continue;",
          "509:                     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "601:                     OPJ_INT32 prci, prcj;",
          "602:                     res = &comp->resolutions[pi->resno];",
          "603:                     levelno = comp->numresolutions - 1 - pi->resno;",
          "604:                     trx0 = opj_int_ceildiv(pi->tx0, (OPJ_INT32)(comp->dx << levelno));",
          "605:                     try0 = opj_int_ceildiv(pi->ty0, (OPJ_INT32)(comp->dy << levelno));",
          "606:                     trx1 = opj_int_ceildiv(pi->tx1, (OPJ_INT32)(comp->dx << levelno));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "620:                     if (((comp->dx << levelno) >> levelno) != comp->dx ||",
          "621:                             ((comp->dy << levelno) >> levelno) != comp->dy) {",
          "622:                         continue;",
          "623:                     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}