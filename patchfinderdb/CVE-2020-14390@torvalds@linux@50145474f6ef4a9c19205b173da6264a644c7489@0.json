{
  "cve_id": "CVE-2020-14390",
  "cve_desc": "A flaw was found in the Linux kernel in versions before 5.9-rc6. When changing screen size, an out-of-bounds memory write can occur leading to memory corruption or a denial of service. Due to the nature of the flaw, privilege escalation cannot be fully ruled out.",
  "repo": "torvalds/linux",
  "patch_hash": "50145474f6ef4a9c19205b173da6264a644c7489",
  "patch_info": {
    "commit_hash": "50145474f6ef4a9c19205b173da6264a644c7489",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/50145474f6ef4a9c19205b173da6264a644c7489",
    "files": [
      "drivers/video/fbdev/core/fbcon.c"
    ],
    "message": "fbcon: remove soft scrollback code\n\nThis (and the VGA soft scrollback) turns out to have various nasty small\nspecial cases that nobody really is willing to fight.  The soft\nscrollback code was really useful a few decades ago when you typically\nused the console interactively as the main way to interact with the\nmachine, but that just isn't the case any more.\n\nSo it's not worth dragging along.\n\nTested-by: Yuan Ming <yuanmingbuaa@gmail.com>\nTested-by: Willy Tarreau <w@1wt.eu>\nAcked-by: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>\nAcked-by: Daniel Vetter <daniel.vetter@ffwll.ch>\nReviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "before_after_code_files": [
      "drivers/video/fbdev/core/fbcon.c||drivers/video/fbdev/core/fbcon.c"
    ]
  },
  "patch_diff": {
    "drivers/video/fbdev/core/fbcon.c||drivers/video/fbdev/core/fbcon.c": [
      "File: drivers/video/fbdev/core/fbcon.c -> drivers/video/fbdev/core/fbcon.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "124: static int logo_shown = FBCON_LOGO_CANSHOW;",
      "132: static int first_fb_vc;",
      "133: static int last_fb_vc = MAX_NR_CONSOLES - 1;",
      "",
      "[Removed Lines]",
      "126: static int fbcon_softback_size = 32768;",
      "127: static unsigned long softback_buf, softback_curr;",
      "128: static unsigned long softback_in;",
      "129: static unsigned long softback_top, softback_end;",
      "130: static int softback_lines;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "168: static const struct consw fb_con;",
      "172: #define advance_row(p, delta) (unsigned short *)((unsigned long)(p) + (delta) * vc->vc_size_row)",
      "174: static int fbcon_set_origin(struct vc_data *);",
      "",
      "[Removed Lines]",
      "170: #define CM_SOFTBACK (8)",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "373:  return color;",
      "374: }",
      "388: static void fb_flashcursor(struct work_struct *work)",
      "389: {",
      "390:  struct fb_info *info = container_of(work, struct fb_info, queue);",
      "",
      "[Removed Lines]",
      "376: static void fbcon_update_softback(struct vc_data *vc)",
      "377: {",
      "378:  int l = fbcon_softback_size / vc->vc_size_row;",
      "380:  if (l > 5)",
      "381:   softback_end = softback_buf + l * vc->vc_size_row;",
      "382:  else",
      "385:   softback_top = 0;",
      "386: }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "414:  c = scr_readw((u16 *) vc->vc_pos);",
      "415:  mode = (!ops->cursor_flash || ops->cursor_state.enable) ?",
      "416:   CM_ERASE : CM_DRAW;",
      "418:       get_color(vc, info, c, 0));",
      "419:  console_unlock();",
      "420: }",
      "",
      "[Removed Lines]",
      "417:  ops->cursor(vc, info, mode, softback_lines, get_color(vc, info, c, 1),",
      "",
      "[Added Lines]",
      "397:  ops->cursor(vc, info, mode, 0, get_color(vc, info, c, 1),",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "471:   }",
      "473:   if (!strncmp(options, \"scrollback:\", 11)) {",
      "481:    continue;",
      "482:   }",
      "",
      "[Removed Lines]",
      "474:    options += 11;",
      "475:    if (*options) {",
      "476:     fbcon_softback_size = simple_strtoul(options, &options, 0);",
      "477:     if (*options == 'k' || *options == 'K') {",
      "478:      fbcon_softback_size *= 1024;",
      "479:     }",
      "480:    }",
      "",
      "[Added Lines]",
      "454:    pr_warn(\"Ignoring scrollback size option\\n\");",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1023:  set_blitting_type(vc, info);",
      "1051:  if (!p->fontdata && !vc->vc_font.data) {",
      "1052:   if (!fontname[0] || !(font = find_font(fontname)))",
      "",
      "[Removed Lines]",
      "1025:  if (info->fix.type != FB_TYPE_TEXT) {",
      "1026:   if (fbcon_softback_size) {",
      "1027:    if (!softback_buf) {",
      "1028:     softback_buf =",
      "1029:         (unsigned long)",
      "1030:         kvmalloc(fbcon_softback_size,",
      "1031:          GFP_KERNEL);",
      "1032:     if (!softback_buf) {",
      "1033:      fbcon_softback_size = 0;",
      "1034:      softback_top = 0;",
      "1035:     }",
      "1036:    }",
      "1037:   } else {",
      "1038:    if (softback_buf) {",
      "1039:     kvfree((void *) softback_buf);",
      "1040:     softback_buf = 0;",
      "1041:     softback_top = 0;",
      "1042:    }",
      "1043:   }",
      "1044:   if (softback_buf)",
      "1045:    softback_in = softback_top = softback_curr =",
      "1046:        softback_buf;",
      "1047:   softback_lines = 0;",
      "1048:  }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1220:  if (logo)",
      "1221:   fbcon_prepare_logo(vc, info, cols, rows, new_cols, new_rows);",
      "1226:  if (ops->rotate_font && ops->rotate_font(info, vc)) {",
      "1227:   ops->rotate = FB_ROTATE_UR;",
      "1228:   set_blitting_type(vc, info);",
      "",
      "[Removed Lines]",
      "1223:  if (vc == svc && softback_buf)",
      "1224:   fbcon_update_softback(vc);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1385: {",
      "1386:  struct fb_info *info = registered_fb[con2fb_map[vc->vc_num]];",
      "1387:  struct fbcon_ops *ops = info->fbcon_par;",
      "1389:   int c = scr_readw((u16 *) vc->vc_pos);",
      "1391:  ops->cur_blink_jiffies = msecs_to_jiffies(vc->vc_cur_blink_ms);",
      "",
      "[Removed Lines]",
      "1388:  int y;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1399:   fbcon_add_cursor_timer(info);",
      "1401:  ops->cursor_flash = (mode == CM_ERASE) ? 0 : 1;",
      "1412:       get_color(vc, info, c, 0));",
      "1413: }",
      "",
      "[Removed Lines]",
      "1402:  if (mode & CM_SOFTBACK) {",
      "1403:   mode &= ~CM_SOFTBACK;",
      "1404:   y = softback_lines;",
      "1405:  } else {",
      "1406:   if (softback_lines)",
      "1407:    fbcon_set_origin(vc);",
      "1408:   y = 0;",
      "1409:  }",
      "1411:  ops->cursor(vc, info, mode, y, get_color(vc, info, c, 1),",
      "",
      "[Added Lines]",
      "1348:  ops->cursor(vc, info, mode, 0, get_color(vc, info, c, 1),",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "1480:  if (con_is_visible(vc)) {",
      "1481:   update_screen(vc);",
      "1484:  }",
      "1485: }",
      "",
      "[Removed Lines]",
      "1482:   if (softback_buf)",
      "1483:    fbcon_update_softback(vc);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "1618:  scrollback_current = 0;",
      "1619: }",
      "1714: static void fbcon_redraw_move(struct vc_data *vc, struct fbcon_display *p,",
      "1715:          int line, int count, int dy)",
      "1716: {",
      "",
      "[Removed Lines]",
      "1621: static void fbcon_redraw_softback(struct vc_data *vc, struct fbcon_display *p,",
      "1622:       long delta)",
      "1623: {",
      "1624:  int count = vc->vc_rows;",
      "1625:  unsigned short *d, *s;",
      "1626:  unsigned long n;",
      "1627:  int line = 0;",
      "1629:  d = (u16 *) softback_curr;",
      "1630:  if (d == (u16 *) softback_in)",
      "1631:   d = (u16 *) vc->vc_origin;",
      "1632:  n = softback_curr + delta * vc->vc_size_row;",
      "1633:  softback_lines -= delta;",
      "1634:  if (delta < 0) {",
      "1635:   if (softback_curr < softback_top && n < softback_buf) {",
      "1636:    n += softback_end - softback_buf;",
      "1637:    if (n < softback_top) {",
      "1638:     softback_lines -=",
      "1639:         (softback_top - n) / vc->vc_size_row;",
      "1640:     n = softback_top;",
      "1641:    }",
      "1642:   } else if (softback_curr >= softback_top",
      "1643:       && n < softback_top) {",
      "1644:    softback_lines -=",
      "1645:        (softback_top - n) / vc->vc_size_row;",
      "1646:    n = softback_top;",
      "1647:   }",
      "1648:  } else {",
      "1649:   if (softback_curr > softback_in && n >= softback_end) {",
      "1650:    n += softback_buf - softback_end;",
      "1651:    if (n > softback_in) {",
      "1652:     n = softback_in;",
      "1653:     softback_lines = 0;",
      "1654:    }",
      "1655:   } else if (softback_curr <= softback_in && n > softback_in) {",
      "1656:    n = softback_in;",
      "1657:    softback_lines = 0;",
      "1658:   }",
      "1659:  }",
      "1660:  if (n == softback_curr)",
      "1661:   return;",
      "1662:  softback_curr = n;",
      "1663:  s = (u16 *) softback_curr;",
      "1664:  if (s == (u16 *) softback_in)",
      "1665:   s = (u16 *) vc->vc_origin;",
      "1666:  while (count--) {",
      "1667:   unsigned short *start;",
      "1668:   unsigned short *le;",
      "1669:   unsigned short c;",
      "1670:   int x = 0;",
      "1671:   unsigned short attr = 1;",
      "1673:   start = s;",
      "1674:   le = advance_row(s, 1);",
      "1675:   do {",
      "1676:    c = scr_readw(s);",
      "1677:    if (attr != (c & 0xff00)) {",
      "1678:     attr = c & 0xff00;",
      "1679:     if (s > start) {",
      "1680:      fbcon_putcs(vc, start, s - start,",
      "1681:           line, x);",
      "1682:      x += s - start;",
      "1683:      start = s;",
      "1684:     }",
      "1685:    }",
      "1686:    if (c == scr_readw(d)) {",
      "1687:     if (s > start) {",
      "1688:      fbcon_putcs(vc, start, s - start,",
      "1689:           line, x);",
      "1690:      x += s - start + 1;",
      "1691:      start = s + 1;",
      "1692:     } else {",
      "1693:      x++;",
      "1694:      start++;",
      "1695:     }",
      "1696:    }",
      "1697:    s++;",
      "1698:    d++;",
      "1699:   } while (s < le);",
      "1700:   if (s > start)",
      "1701:    fbcon_putcs(vc, start, s - start, line, x);",
      "1702:   line++;",
      "1703:   if (d == (u16 *) softback_end)",
      "1704:    d = (u16 *) softback_buf;",
      "1705:   if (d == (u16 *) softback_in)",
      "1706:    d = (u16 *) vc->vc_origin;",
      "1707:   if (s == (u16 *) softback_end)",
      "1708:    s = (u16 *) softback_buf;",
      "1709:   if (s == (u16 *) softback_in)",
      "1710:    s = (u16 *) vc->vc_origin;",
      "1711:  }",
      "1712: }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "1850:  }",
      "1851: }",
      "1878: static bool fbcon_scroll(struct vc_data *vc, unsigned int t, unsigned int b,",
      "1879:   enum con_scroll dir, unsigned int count)",
      "1880: {",
      "",
      "[Removed Lines]",
      "1853: static inline void fbcon_softback_note(struct vc_data *vc, int t,",
      "1854:            int count)",
      "1855: {",
      "1856:  unsigned short *p;",
      "1858:  if (vc->vc_num != fg_console)",
      "1859:   return;",
      "1860:  p = (unsigned short *) (vc->vc_origin + t * vc->vc_size_row);",
      "1862:  while (count) {",
      "1863:   scr_memcpyw((u16 *) softback_in, p, vc->vc_size_row);",
      "1864:   count--;",
      "1865:   p = advance_row(p, 1);",
      "1866:   softback_in += vc->vc_size_row;",
      "1867:   if (softback_in == softback_end)",
      "1868:    softback_in = softback_buf;",
      "1869:   if (softback_in == softback_top) {",
      "1870:    softback_top += vc->vc_size_row;",
      "1871:    if (softback_top == softback_end)",
      "1872:     softback_top = softback_buf;",
      "1873:   }",
      "1874:  }",
      "1875:  softback_curr = softback_in;",
      "1876: }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "1897:  case SM_UP:",
      "1899:    count = vc->vc_rows;",
      "1902:   if (logo_shown >= 0)",
      "1903:    goto redraw_up;",
      "1904:   switch (p->scrollmode) {",
      "",
      "[Removed Lines]",
      "1900:   if (softback_top)",
      "1901:    fbcon_softback_note(vc, t, count);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "2269:  info = registered_fb[con2fb_map[vc->vc_num]];",
      "2270:  ops = info->fbcon_par;",
      "2280:  if (logo_shown >= 0) {",
      "2281:   struct vc_data *conp2 = vc_cons[logo_shown].d;",
      "",
      "[Removed Lines]",
      "2272:  if (softback_top) {",
      "2273:   if (softback_lines)",
      "2274:    fbcon_set_origin(vc);",
      "2275:   softback_top = softback_curr = softback_in = softback_buf;",
      "2276:   softback_lines = 0;",
      "2277:   fbcon_update_softback(vc);",
      "2278:  }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "2600:  int cnt;",
      "2601:  char *old_data = NULL;",
      "2606:  resize = (w != vc->vc_font.width) || (h != vc->vc_font.height);",
      "2607:  if (p->userfont)",
      "2608:   old_data = vc->vc_font.data;",
      "",
      "[Removed Lines]",
      "2603:  if (con_is_visible(vc) && softback_lines)",
      "2604:   fbcon_set_origin(vc);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "2628:   cols /= w;",
      "2629:   rows /= h;",
      "2630:   vc_resize(vc, cols, rows);",
      "2633:  } else if (con_is_visible(vc)",
      "2634:      && vc->vc_mode == KD_TEXT) {",
      "2635:   fbcon_clear_margins(vc, 0);",
      "",
      "[Removed Lines]",
      "2631:   if (con_is_visible(vc) && softback_buf)",
      "2632:    fbcon_update_softback(vc);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "2789: static u16 *fbcon_screen_pos(struct vc_data *vc, int offset)",
      "2790: {",
      "2804: }",
      "2806: static unsigned long fbcon_getxy(struct vc_data *vc, unsigned long pos,",
      "",
      "[Removed Lines]",
      "2791:  unsigned long p;",
      "2792:  int line;",
      "2794:  if (vc->vc_num != fg_console || !softback_lines)",
      "2795:   return (u16 *) (vc->vc_origin + offset);",
      "2796:  line = offset / vc->vc_size_row;",
      "2797:  if (line >= softback_lines)",
      "2798:   return (u16 *) (vc->vc_origin + offset -",
      "2799:     softback_lines * vc->vc_size_row);",
      "2800:  p = softback_curr + offset;",
      "2801:  if (p >= softback_end)",
      "2802:   p += softback_buf - softback_end;",
      "2803:  return (u16 *) p;",
      "",
      "[Added Lines]",
      "2593:  return (u16 *) (vc->vc_origin + offset);",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "2815:   x = offset % vc->vc_cols;",
      "2816:   y = offset / vc->vc_cols;",
      "2819:   ret = pos + (vc->vc_cols - x) * 2;",
      "2833:  } else {",
      "2835:   x = y = 0;",
      "",
      "[Removed Lines]",
      "2817:   if (vc->vc_num == fg_console)",
      "2818:    y += softback_lines;",
      "2820:  } else if (vc->vc_num == fg_console && softback_lines) {",
      "2821:   unsigned long offset = pos - softback_curr;",
      "2823:   if (pos < softback_curr)",
      "2824:    offset += softback_end - softback_buf;",
      "2825:   offset /= 2;",
      "2826:   x = offset % vc->vc_cols;",
      "2827:   y = offset / vc->vc_cols;",
      "2828:   ret = pos + (vc->vc_cols - x) * 2;",
      "2829:   if (ret == softback_end)",
      "2830:    ret = softback_buf;",
      "2831:   if (ret == softback_in)",
      "2832:    ret = vc->vc_origin;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "2857:    a = ((a) & 0x88ff) | (((a) & 0x7000) >> 4) |",
      "2858:        (((a) & 0x0700) << 4);",
      "2859:   scr_writew(a, p++);",
      "2912:  }",
      "2954: }",
      "2956: static int fbcon_set_origin(struct vc_data *vc)",
      "2957: {",
      "2960:  return 0;",
      "2961: }",
      "",
      "[Removed Lines]",
      "2860:   if (p == (u16 *) softback_end)",
      "2861:    p = (u16 *) softback_buf;",
      "2862:   if (p == (u16 *) softback_in)",
      "2863:    p = (u16 *) vc->vc_origin;",
      "2864:  }",
      "2865: }",
      "2867: static void fbcon_scrolldelta(struct vc_data *vc, int lines)",
      "2868: {",
      "2869:  struct fb_info *info = registered_fb[con2fb_map[fg_console]];",
      "2870:  struct fbcon_ops *ops = info->fbcon_par;",
      "2871:  struct fbcon_display *disp = &fb_display[fg_console];",
      "2872:  int offset, limit, scrollback_old;",
      "2874:  if (softback_top) {",
      "2875:   if (vc->vc_num != fg_console)",
      "2876:    return;",
      "2877:   if (vc->vc_mode != KD_TEXT || !lines)",
      "2878:    return;",
      "2879:   if (logo_shown >= 0) {",
      "2880:    struct vc_data *conp2 = vc_cons[logo_shown].d;",
      "2882:    if (conp2->vc_top == logo_lines",
      "2883:        && conp2->vc_bottom == conp2->vc_rows)",
      "2884:     conp2->vc_top = 0;",
      "2885:    if (logo_shown == vc->vc_num) {",
      "2886:     unsigned long p, q;",
      "2887:     int i;",
      "2889:     p = softback_in;",
      "2890:     q = vc->vc_origin +",
      "2891:         logo_lines * vc->vc_size_row;",
      "2892:     for (i = 0; i < logo_lines; i++) {",
      "2893:      if (p == softback_top)",
      "2894:       break;",
      "2895:      if (p == softback_buf)",
      "2896:       p = softback_end;",
      "2897:      p -= vc->vc_size_row;",
      "2898:      q -= vc->vc_size_row;",
      "2899:      scr_memcpyw((u16 *) q, (u16 *) p,",
      "2900:           vc->vc_size_row);",
      "2901:     }",
      "2902:     softback_in = softback_curr = p;",
      "2903:     update_region(vc, vc->vc_origin,",
      "2904:            logo_lines * vc->vc_cols);",
      "2905:    }",
      "2906:    logo_shown = FBCON_LOGO_CANSHOW;",
      "2907:   }",
      "2908:   fbcon_cursor(vc, CM_ERASE | CM_SOFTBACK);",
      "2909:   fbcon_redraw_softback(vc, disp, lines);",
      "2910:   fbcon_cursor(vc, CM_DRAW | CM_SOFTBACK);",
      "2911:   return;",
      "2914:  if (!scrollback_phys_max)",
      "2915:   return;",
      "2917:  scrollback_old = scrollback_current;",
      "2918:  scrollback_current -= lines;",
      "2919:  if (scrollback_current < 0)",
      "2920:   scrollback_current = 0;",
      "2921:  else if (scrollback_current > scrollback_max)",
      "2922:   scrollback_current = scrollback_max;",
      "2923:  if (scrollback_current == scrollback_old)",
      "2924:   return;",
      "2926:  if (fbcon_is_inactive(vc, info))",
      "2927:   return;",
      "2929:  fbcon_cursor(vc, CM_ERASE);",
      "2931:  offset = disp->yscroll - scrollback_current;",
      "2932:  limit = disp->vrows;",
      "2933:  switch (disp->scrollmode) {",
      "2934:  case SCROLL_WRAP_MOVE:",
      "2935:   info->var.vmode |= FB_VMODE_YWRAP;",
      "2936:   break;",
      "2937:  case SCROLL_PAN_MOVE:",
      "2938:  case SCROLL_PAN_REDRAW:",
      "2939:   limit -= vc->vc_rows;",
      "2940:   info->var.vmode &= ~FB_VMODE_YWRAP;",
      "2941:   break;",
      "2942:  }",
      "2943:  if (offset < 0)",
      "2944:   offset += limit;",
      "2945:  else if (offset >= limit)",
      "2946:   offset -= limit;",
      "2948:  ops->var.xoffset = 0;",
      "2949:  ops->var.yoffset = offset * vc->vc_font.height;",
      "2950:  ops->update_start(info);",
      "2952:  if (!scrollback_current)",
      "2953:   fbcon_cursor(vc, CM_DRAW);",
      "2958:  if (softback_lines)",
      "2959:   fbcon_scrolldelta(vc, softback_lines);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "3021:   fbcon_set_palette(vc, color_table);",
      "3022:   update_screen(vc);",
      "3025:  }",
      "3026: }",
      "",
      "[Removed Lines]",
      "3023:   if (softback_buf)",
      "3024:    fbcon_update_softback(vc);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "3432:  .con_font_default = fbcon_set_def_font,",
      "3433:  .con_font_copy   = fbcon_copy_font,",
      "3434:  .con_set_palette  = fbcon_set_palette,",
      "3436:  .con_set_origin  = fbcon_set_origin,",
      "3437:  .con_invert_region  = fbcon_invert_region,",
      "3438:  .con_screen_pos  = fbcon_screen_pos,",
      "",
      "[Removed Lines]",
      "3435:  .con_scrolldelta  = fbcon_scrolldelta,",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "3667:  }",
      "3668: #endif",
      "3673:  for_each_registered_fb(i) {",
      "3674:   int pending = 0;",
      "",
      "[Removed Lines]",
      "3670:  kvfree((void *)softback_buf);",
      "3671:  softback_buf = 0UL;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "06a0df4d1b8b13b551668e47b11fd7629033b7df",
      "candidate_info": {
        "commit_hash": "06a0df4d1b8b13b551668e47b11fd7629033b7df",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/06a0df4d1b8b13b551668e47b11fd7629033b7df",
        "files": [
          "drivers/video/fbdev/core/bitblit.c",
          "drivers/video/fbdev/core/fbcon.c",
          "drivers/video/fbdev/core/fbcon.h",
          "drivers/video/fbdev/core/fbcon_ccw.c",
          "drivers/video/fbdev/core/fbcon_cw.c",
          "drivers/video/fbdev/core/fbcon_ud.c",
          "drivers/video/fbdev/core/tileblit.c"
        ],
        "message": "fbcon: remove now unusued 'softback_lines' cursor() argument\n\nSince the softscroll code got removed, this argument is always zero and\nmakes no sense any more.\n\nTested-by: Yuan Ming <yuanmingbuaa@gmail.com>\nTested-by: Willy Tarreau <w@1wt.eu>\nReviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
        "before_after_code_files": [
          "drivers/video/fbdev/core/bitblit.c||drivers/video/fbdev/core/bitblit.c",
          "drivers/video/fbdev/core/fbcon.c||drivers/video/fbdev/core/fbcon.c",
          "drivers/video/fbdev/core/fbcon.h||drivers/video/fbdev/core/fbcon.h",
          "drivers/video/fbdev/core/fbcon_ccw.c||drivers/video/fbdev/core/fbcon_ccw.c",
          "drivers/video/fbdev/core/fbcon_cw.c||drivers/video/fbdev/core/fbcon_cw.c",
          "drivers/video/fbdev/core/fbcon_ud.c||drivers/video/fbdev/core/fbcon_ud.c",
          "drivers/video/fbdev/core/tileblit.c||drivers/video/fbdev/core/tileblit.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "drivers/video/fbdev/core/fbcon.c||drivers/video/fbdev/core/fbcon.c"
          ],
          "candidate": [
            "drivers/video/fbdev/core/fbcon.c||drivers/video/fbdev/core/fbcon.c"
          ]
        }
      },
      "candidate_diff": {
        "drivers/video/fbdev/core/bitblit.c||drivers/video/fbdev/core/bitblit.c": [
          "File: drivers/video/fbdev/core/bitblit.c -> drivers/video/fbdev/core/bitblit.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "234: }",
          "236: static void bit_cursor(struct vc_data *vc, struct fb_info *info, int mode,",
          "238: {",
          "239:  struct fb_cursor cursor;",
          "240:  struct fbcon_ops *ops = info->fbcon_par;",
          "",
          "[Removed Lines]",
          "237:          int softback_lines, int fg, int bg)",
          "",
          "[Added Lines]",
          "237:          int fg, int bg)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "248:  cursor.set = 0;",
          "259:   c = scr_readw((u16 *) vc->vc_pos);",
          "260:  attribute = get_attribute(info, c);",
          "261:  src = vc->vc_font.data + ((c & charmask) * (w * vc->vc_font.height));",
          "",
          "[Removed Lines]",
          "250:  if (softback_lines) {",
          "251:   if (y + softback_lines >= vc->vc_rows) {",
          "252:    mode = CM_ERASE;",
          "253:    ops->cursor_flash = 0;",
          "254:    return;",
          "255:   } else",
          "256:    y += softback_lines;",
          "257:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "drivers/video/fbdev/core/fbcon.c||drivers/video/fbdev/core/fbcon.c": [
          "File: drivers/video/fbdev/core/fbcon.c -> drivers/video/fbdev/core/fbcon.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "394:  c = scr_readw((u16 *) vc->vc_pos);",
          "395:  mode = (!ops->cursor_flash || ops->cursor_state.enable) ?",
          "396:   CM_ERASE : CM_DRAW;",
          "398:       get_color(vc, info, c, 0));",
          "399:  console_unlock();",
          "400: }",
          "",
          "[Removed Lines]",
          "397:  ops->cursor(vc, info, mode, 0, get_color(vc, info, c, 1),",
          "",
          "[Added Lines]",
          "397:  ops->cursor(vc, info, mode, get_color(vc, info, c, 1),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1346:  ops->cursor_flash = (mode == CM_ERASE) ? 0 : 1;",
          "1349:       get_color(vc, info, c, 0));",
          "1350: }",
          "",
          "[Removed Lines]",
          "1348:  ops->cursor(vc, info, mode, 0, get_color(vc, info, c, 1),",
          "",
          "[Added Lines]",
          "1348:  ops->cursor(vc, info, mode, get_color(vc, info, c, 1),",
          "",
          "---------------"
        ],
        "drivers/video/fbdev/core/fbcon.h||drivers/video/fbdev/core/fbcon.h": [
          "File: drivers/video/fbdev/core/fbcon.h -> drivers/video/fbdev/core/fbcon.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:  void (*clear_margins)(struct vc_data *vc, struct fb_info *info,",
          "63:          int color, int bottom_only);",
          "64:  void (*cursor)(struct vc_data *vc, struct fb_info *info, int mode,",
          "66:  int  (*update_start)(struct fb_info *info);",
          "67:  int  (*rotate_font)(struct fb_info *info, struct vc_data *vc);",
          "",
          "[Removed Lines]",
          "65:          int softback_lines, int fg, int bg);",
          "",
          "[Added Lines]",
          "65:          int fg, int bg);",
          "",
          "---------------"
        ],
        "drivers/video/fbdev/core/fbcon_ccw.c||drivers/video/fbdev/core/fbcon_ccw.c": [
          "File: drivers/video/fbdev/core/fbcon_ccw.c -> drivers/video/fbdev/core/fbcon_ccw.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "219: }",
          "221: static void ccw_cursor(struct vc_data *vc, struct fb_info *info, int mode,",
          "223: {",
          "224:  struct fb_cursor cursor;",
          "225:  struct fbcon_ops *ops = info->fbcon_par;",
          "",
          "[Removed Lines]",
          "222:          int softback_lines, int fg, int bg)",
          "",
          "[Added Lines]",
          "222:          int fg, int bg)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "237:  cursor.set = 0;",
          "248:   c = scr_readw((u16 *) vc->vc_pos);",
          "249:  attribute = get_attribute(info, c);",
          "250:  src = ops->fontbuffer + ((c & charmask) * (w * vc->vc_font.width));",
          "",
          "[Removed Lines]",
          "239:  if (softback_lines) {",
          "240:   if (y + softback_lines >= vc->vc_rows) {",
          "241:    mode = CM_ERASE;",
          "242:    ops->cursor_flash = 0;",
          "243:    return;",
          "244:   } else",
          "245:    y += softback_lines;",
          "246:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "drivers/video/fbdev/core/fbcon_cw.c||drivers/video/fbdev/core/fbcon_cw.c": [
          "File: drivers/video/fbdev/core/fbcon_cw.c -> drivers/video/fbdev/core/fbcon_cw.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "202: }",
          "204: static void cw_cursor(struct vc_data *vc, struct fb_info *info, int mode,",
          "206: {",
          "207:  struct fb_cursor cursor;",
          "208:  struct fbcon_ops *ops = info->fbcon_par;",
          "",
          "[Removed Lines]",
          "205:         int softback_lines, int fg, int bg)",
          "",
          "[Added Lines]",
          "205:         int fg, int bg)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "220:  cursor.set = 0;",
          "231:   c = scr_readw((u16 *) vc->vc_pos);",
          "232:  attribute = get_attribute(info, c);",
          "233:  src = ops->fontbuffer + ((c & charmask) * (w * vc->vc_font.width));",
          "",
          "[Removed Lines]",
          "222:  if (softback_lines) {",
          "223:   if (y + softback_lines >= vc->vc_rows) {",
          "224:    mode = CM_ERASE;",
          "225:    ops->cursor_flash = 0;",
          "226:    return;",
          "227:   } else",
          "228:    y += softback_lines;",
          "229:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "drivers/video/fbdev/core/fbcon_ud.c||drivers/video/fbdev/core/fbcon_ud.c": [
          "File: drivers/video/fbdev/core/fbcon_ud.c -> drivers/video/fbdev/core/fbcon_ud.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "249: }",
          "251: static void ud_cursor(struct vc_data *vc, struct fb_info *info, int mode,",
          "253: {",
          "254:  struct fb_cursor cursor;",
          "255:  struct fbcon_ops *ops = info->fbcon_par;",
          "",
          "[Removed Lines]",
          "252:         int softback_lines, int fg, int bg)",
          "",
          "[Added Lines]",
          "252:         int fg, int bg)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "268:  cursor.set = 0;",
          "279:   c = scr_readw((u16 *) vc->vc_pos);",
          "280:  attribute = get_attribute(info, c);",
          "281:  src = ops->fontbuffer + ((c & charmask) * (w * vc->vc_font.height));",
          "",
          "[Removed Lines]",
          "270:  if (softback_lines) {",
          "271:   if (y + softback_lines >= vc->vc_rows) {",
          "272:    mode = CM_ERASE;",
          "273:    ops->cursor_flash = 0;",
          "274:    return;",
          "275:   } else",
          "276:    y += softback_lines;",
          "277:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "drivers/video/fbdev/core/tileblit.c||drivers/video/fbdev/core/tileblit.c": [
          "File: drivers/video/fbdev/core/tileblit.c -> drivers/video/fbdev/core/tileblit.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "80: }",
          "82: static void tile_cursor(struct vc_data *vc, struct fb_info *info, int mode,",
          "84: {",
          "85:  struct fb_tilecursor cursor;",
          "86:  int use_sw = vc->vc_cursor_type & CUR_SW;",
          "",
          "[Removed Lines]",
          "83:    int softback_lines, int fg, int bg)",
          "",
          "[Added Lines]",
          "83:    int fg, int bg)",
          "",
          "---------------"
        ]
      }
    }
  ]
}