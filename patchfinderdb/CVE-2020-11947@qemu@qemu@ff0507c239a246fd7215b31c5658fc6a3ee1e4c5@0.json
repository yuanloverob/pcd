{
  "cve_id": "CVE-2020-11947",
  "cve_desc": "iscsi_aio_ioctl_cb in block/iscsi.c in QEMU 4.1.0 has a heap-based buffer over-read that may disclose unrelated information from process memory to an attacker.",
  "repo": "qemu/qemu",
  "patch_hash": "ff0507c239a246fd7215b31c5658fc6a3ee1e4c5",
  "patch_info": {
    "commit_hash": "ff0507c239a246fd7215b31c5658fc6a3ee1e4c5",
    "repo": "qemu/qemu",
    "commit_url": "https://github.com/qemu/qemu/commit/ff0507c239a246fd7215b31c5658fc6a3ee1e4c5",
    "files": [
      "block/iscsi.c"
    ],
    "message": "block/iscsi:fix heap-buffer-overflow in iscsi_aio_ioctl_cb\n\nThere is an overflow, the source 'datain.data[2]' is 100 bytes,\n but the 'ss' is 252 bytes.This may cause a security issue because\n we can access a lot of unrelated memory data.\n\nThe len for sbp copy data should take the minimum of mx_sb_len and\n sb_len_wr, not the maximum.\n\nIf we use iscsi device for VM backend storage, ASAN show stack:\n\nREAD of size 252 at 0xfffd149dcfc4 thread T0\n    #0 0xaaad433d0d34 in __asan_memcpy (aarch64-softmmu/qemu-system-aarch64+0x2cb0d34)\n    #1 0xaaad45f9d6d0 in iscsi_aio_ioctl_cb /qemu/block/iscsi.c:996:9\n    #2 0xfffd1af0e2dc  (/usr/lib64/iscsi/libiscsi.so.8+0xe2dc)\n    #3 0xfffd1af0d174  (/usr/lib64/iscsi/libiscsi.so.8+0xd174)\n    #4 0xfffd1af19fac  (/usr/lib64/iscsi/libiscsi.so.8+0x19fac)\n    #5 0xaaad45f9acc8 in iscsi_process_read /qemu/block/iscsi.c:403:5\n    #6 0xaaad4623733c in aio_dispatch_handler /qemu/util/aio-posix.c:467:9\n    #7 0xaaad4622f350 in aio_dispatch_handlers /qemu/util/aio-posix.c:510:20\n    #8 0xaaad4622f350 in aio_dispatch /qemu/util/aio-posix.c:520\n    #9 0xaaad46215944 in aio_ctx_dispatch /qemu/util/async.c:298:5\n    #10 0xfffd1bed12f4 in g_main_context_dispatch (/lib64/libglib-2.0.so.0+0x512f4)\n    #11 0xaaad46227de0 in glib_pollfds_poll /qemu/util/main-loop.c:219:9\n    #12 0xaaad46227de0 in os_host_main_loop_wait /qemu/util/main-loop.c:242\n    #13 0xaaad46227de0 in main_loop_wait /qemu/util/main-loop.c:518\n    #14 0xaaad43d9d60c in qemu_main_loop /qemu/softmmu/vl.c:1662:9\n    #15 0xaaad4607a5b0 in main /qemu/softmmu/main.c:49:5\n    #16 0xfffd1a460b9c in __libc_start_main (/lib64/libc.so.6+0x20b9c)\n    #17 0xaaad43320740 in _start (aarch64-softmmu/qemu-system-aarch64+0x2c00740)\n\n0xfffd149dcfc4 is located 0 bytes to the right of 100-byte region [0xfffd149dcf60,0xfffd149dcfc4)\nallocated by thread T0 here:\n    #0 0xaaad433d1e70 in __interceptor_malloc (aarch64-softmmu/qemu-system-aarch64+0x2cb1e70)\n    #1 0xfffd1af0e254  (/usr/lib64/iscsi/libiscsi.so.8+0xe254)\n    #2 0xfffd1af0d174  (/usr/lib64/iscsi/libiscsi.so.8+0xd174)\n    #3 0xfffd1af19fac  (/usr/lib64/iscsi/libiscsi.so.8+0x19fac)\n    #4 0xaaad45f9acc8 in iscsi_process_read /qemu/block/iscsi.c:403:5\n    #5 0xaaad4623733c in aio_dispatch_handler /qemu/util/aio-posix.c:467:9\n    #6 0xaaad4622f350 in aio_dispatch_handlers /qemu/util/aio-posix.c:510:20\n    #7 0xaaad4622f350 in aio_dispatch /qemu/util/aio-posix.c:520\n    #8 0xaaad46215944 in aio_ctx_dispatch /qemu/util/async.c:298:5\n    #9 0xfffd1bed12f4 in g_main_context_dispatch (/lib64/libglib-2.0.so.0+0x512f4)\n    #10 0xaaad46227de0 in glib_pollfds_poll /qemu/util/main-loop.c:219:9\n    #11 0xaaad46227de0 in os_host_main_loop_wait /qemu/util/main-loop.c:242\n    #12 0xaaad46227de0 in main_loop_wait /qemu/util/main-loop.c:518\n    #13 0xaaad43d9d60c in qemu_main_loop /qemu/softmmu/vl.c:1662:9\n    #14 0xaaad4607a5b0 in main /qemu/softmmu/main.c:49:5\n    #15 0xfffd1a460b9c in __libc_start_main (/lib64/libc.so.6+0x20b9c)\n    #16 0xaaad43320740 in _start (aarch64-softmmu/qemu-system-aarch64+0x2c00740)\n\nReported-by: Euler Robot <euler.robot@huawei.com>\nSigned-off-by: Chen Qun <kuhn.chenqun@huawei.com>\nReviewed-by: Stefan Hajnoczi <stefanha@redhat.com>\nMessage-id: 20200418062602.10776-1-kuhn.chenqun@huawei.com\nReviewed-by: Daniel P. Berrang\u00e9 <berrange@redhat.com>\nSigned-off-by: Peter Maydell <peter.maydell@linaro.org>",
    "before_after_code_files": [
      "block/iscsi.c||block/iscsi.c"
    ]
  },
  "patch_diff": {
    "block/iscsi.c||block/iscsi.c": [
      "File: block/iscsi.c -> block/iscsi.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "991:         acb->ioh->driver_status |= SG_ERR_DRIVER_SENSE;",
      "993:         acb->ioh->sb_len_wr = acb->task->datain.size - 2;",
      "996:         memcpy(acb->ioh->sbp, &acb->task->datain.data[2], ss);",
      "997:     }",
      "",
      "[Removed Lines]",
      "994:         ss = (acb->ioh->mx_sb_len >= acb->ioh->sb_len_wr) ?",
      "995:              acb->ioh->mx_sb_len : acb->ioh->sb_len_wr;",
      "",
      "[Added Lines]",
      "994:         ss = MIN(acb->ioh->mx_sb_len, acb->ioh->sb_len_wr);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "15138b5e6ff28a8e68a2e1cb6f4ca2fb7e5b057c",
      "candidate_info": {
        "commit_hash": "15138b5e6ff28a8e68a2e1cb6f4ca2fb7e5b057c",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/15138b5e6ff28a8e68a2e1cb6f4ca2fb7e5b057c",
        "files": [
          "hw/display/virtio-vga.c"
        ],
        "message": "virtio-vga: fix virtio-vga bar ordering\n\nWith virtio-vga, pci bar are reordered. Bar #2 is used for compatibility\nwith stdvga. By default, bar #2 is used by virtio modern io bar.\nThis bar is the last one introduce in the virtio pci bar layout and it's\ncrushed by the virtio-vga reordering. So virtio-vga and\nmodern-pio-notify are incompatible because virtio-vga failed to\ninitialize with this option.\n\nThis fix sets the modern io bar to the bar #5 to avoid conflict.\n\nSigned-off-by: Anthoine Bourgeois <anthoine.bourgeois@gmail.com>\nMessage-Id: <20200422215455.10244-1-anthoine.bourgeois@gmail.com>\nReviewed-by: Michael S. Tsirkin <mst@redhat.com>\nSigned-off-by: Michael S. Tsirkin <mst@redhat.com>\nReviewed-by: Gerd Hoffmann <kraxel@redhat.com>",
        "before_after_code_files": [
          "hw/display/virtio-vga.c||hw/display/virtio-vga.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "hw/display/virtio-vga.c||hw/display/virtio-vga.c": [
          "File: hw/display/virtio-vga.c -> hw/display/virtio-vga.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "115:     vpci_dev->modern_mem_bar_idx = 2;",
          "116:     vpci_dev->msix_bar_idx = 4;",
          "118:     if (!(vpci_dev->flags & VIRTIO_PCI_FLAG_PAGE_PER_VQ)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "117:     vpci_dev->modern_io_bar_idx = 5;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1153cf9f5b67fad41ca6f8571e9a26e2c7c70759",
      "candidate_info": {
        "commit_hash": "1153cf9f5b67fad41ca6f8571e9a26e2c7c70759",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/1153cf9f5b67fad41ca6f8571e9a26e2c7c70759",
        "files": [
          "tests/qtest/Makefile.include",
          "tests/qtest/tulip-test.c"
        ],
        "message": "qtest: add tulip test case\n\nThe tulip networking card emulation has an OOB issue in\n'tulip_copy_tx_buffers' when the guest provide malformed descriptor.\nThis test will trigger a ASAN heap overflow crash. To trigger this\nissue we can construct the data as following:\n\n1. construct a 'tulip_descriptor'. Its control is set to\n'0x7ff | 0x7ff << 11', this will make the 'tulip_copy_tx_buffers's\n'len1' and 'len2' to 0x7ff(2047). So 'len1+len2' will overflow\n'TULIPState's 'tx_frame' field. This descriptor's 'buf_addr1' and\n'buf_addr2' should set to a guest address.\n\n2. write this descriptor to tulip device's CSR4 register. This will\nset the 'TULIPState's 'current_tx_desc' field.\n\n3. write 'CSR6_ST' to tulip device's CSR6 register. This will trigger\n'tulip_xmit_list_update' and finally calls 'tulip_copy_tx_buffers'.\n\nFollowing shows the backtrack of crash:\n\n==31781==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x628000007cd0 at pc 0x7fe03c5a077a bp 0x7fff05b46770 sp 0x7fff05b45f18\nWRITE of size 2047 at 0x628000007cd0 thread T0\n    #0 0x7fe03c5a0779  (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x79779)\n    #1 0x5575fb6daa6a in flatview_read_continue /home/test/qemu/exec.c:3194\n    #2 0x5575fb6daccb in flatview_read /home/test/qemu/exec.c:3227\n    #3 0x5575fb6dae66 in address_space_read_full /home/test/qemu/exec.c:3240\n    #4 0x5575fb6db0cb in address_space_rw /home/test/qemu/exec.c:3268\n    #5 0x5575fbdfd460 in dma_memory_rw_relaxed /home/test/qemu/include/sysemu/dma.h:87\n    #6 0x5575fbdfd4b5 in dma_memory_rw /home/test/qemu/include/sysemu/dma.h:110\n    #7 0x5575fbdfd866 in pci_dma_rw /home/test/qemu/include/hw/pci/pci.h:787\n    #8 0x5575fbdfd8a3 in pci_dma_read /home/test/qemu/include/hw/pci/pci.h:794\n    #9 0x5575fbe02761 in tulip_copy_tx_buffers hw/net/tulip.c:585\n    #10 0x5575fbe0366b in tulip_xmit_list_update hw/net/tulip.c:678\n    #11 0x5575fbe04073 in tulip_write hw/net/tulip.c:783\n\nSigned-off-by: Li Qiang <liq3ea@163.com>\nSigned-off-by: Jason Wang <jasowang@redhat.com>",
        "before_after_code_files": [
          "tests/qtest/Makefile.include||tests/qtest/Makefile.include",
          "tests/qtest/tulip-test.c||tests/qtest/tulip-test.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/qtest/Makefile.include||tests/qtest/Makefile.include": [
          "File: tests/qtest/Makefile.include -> tests/qtest/Makefile.include",
          "--- Hunk 1 ---",
          "[Context before]",
          "217: qos-test-obj-y += tests/qtest/ipoctal232-test.o",
          "218: qos-test-obj-y += tests/qtest/megasas-test.o",
          "219: qos-test-obj-y += tests/qtest/ne2000-test.o",
          "220: qos-test-obj-y += tests/qtest/nvme-test.o",
          "221: qos-test-obj-y += tests/qtest/pca9552-test.o",
          "222: qos-test-obj-y += tests/qtest/pci-test.o",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "220: qos-test-obj-y += tests/qtest/tulip-test.o",
          "",
          "---------------"
        ],
        "tests/qtest/tulip-test.c||tests/qtest/tulip-test.c": [
          "File: tests/qtest/tulip-test.c -> tests/qtest/tulip-test.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10: #include \"qemu/osdep.h\"",
          "11: #include \"libqtest.h\"",
          "12: #include \"qemu/module.h\"",
          "13: #include \"libqos/qgraph.h\"",
          "14: #include \"libqos/pci.h\"",
          "15: #include \"qemu/bitops.h\"",
          "16: #include \"hw/net/tulip.h\"",
          "18: typedef struct QTulip_pci QTulip_pci;",
          "20: struct QTulip_pci {",
          "21:     QOSGraphObject obj;",
          "22:     QPCIDevice dev;",
          "23: };",
          "25: static void *tulip_pci_get_driver(void *obj, const char *interface)",
          "26: {",
          "27:     QTulip_pci *tulip_pci = obj;",
          "29:     if (!g_strcmp0(interface, \"pci-device\")) {",
          "30:         return &tulip_pci->dev;",
          "31:     }",
          "33:     fprintf(stderr, \"%s not present in tulip_pci\\n\", interface);",
          "34:     g_assert_not_reached();",
          "35: }",
          "37: static void *tulip_pci_create(void *pci_bus, QGuestAllocator *alloc, void *addr)",
          "38: {",
          "39:     QTulip_pci *tulip_pci = g_new0(QTulip_pci, 1);",
          "40:     QPCIBus *bus = pci_bus;",
          "42:     qpci_device_init(&tulip_pci->dev, bus, addr);",
          "43:     tulip_pci->obj.get_driver = tulip_pci_get_driver;",
          "45:     return &tulip_pci->obj;",
          "46: }",
          "48: static void tulip_large_tx(void *obj, void *data, QGuestAllocator *alloc)",
          "49: {",
          "50:     QTulip_pci *tulip_pci = obj;",
          "51:     QPCIDevice *dev = &tulip_pci->dev;",
          "52:     QPCIBar bar;",
          "53:     struct tulip_descriptor context;",
          "54:     char guest_data[4096];",
          "55:     uint64_t context_pa;",
          "56:     uint64_t guest_pa;",
          "58:     qpci_device_enable(dev);",
          "59:     bar = qpci_iomap(dev, 0, NULL);",
          "60:     context_pa = guest_alloc(alloc, sizeof(context));",
          "61:     guest_pa = guest_alloc(alloc, 4096);",
          "62:     memset(guest_data, 'A', sizeof(guest_data));",
          "63:     context.status = TDES0_OWN;",
          "64:     context.control = TDES1_BUF2_SIZE_MASK << TDES1_BUF2_SIZE_SHIFT |",
          "65:                       TDES1_BUF1_SIZE_MASK << TDES1_BUF1_SIZE_SHIFT;",
          "66:     context.buf_addr2 = guest_pa;",
          "67:     context.buf_addr1 = guest_pa;",
          "69:     qtest_memwrite(dev->bus->qts, context_pa, &context, sizeof(context));",
          "70:     qtest_memwrite(dev->bus->qts, guest_pa, guest_data, sizeof(guest_data));",
          "71:     qpci_io_writel(dev, bar, 0x20, context_pa);",
          "72:     qpci_io_writel(dev, bar, 0x30, CSR6_ST);",
          "73:     guest_free(alloc, context_pa);",
          "74:     guest_free(alloc, guest_pa);",
          "75: }",
          "77: static void tulip_register_nodes(void)",
          "78: {",
          "79:     QOSGraphEdgeOptions opts = {",
          "80:         .extra_device_opts = \"addr=04.0\",",
          "81:     };",
          "82:     add_qpci_address(&opts, &(QPCIAddress) { .devfn = QPCI_DEVFN(4, 0) });",
          "84:     qos_node_create_driver(\"tulip\", tulip_pci_create);",
          "85:     qos_node_consumes(\"tulip\", \"pci-bus\", &opts);",
          "86:     qos_node_produces(\"tulip\", \"pci-device\");",
          "88:     qos_add_test(\"tulip_large_tx\", \"tulip\", tulip_large_tx, NULL);",
          "89: }",
          "91: libqos_init(tulip_register_nodes);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "feb39b62288cb780561ca83b84ca82dceb3cedb9",
      "candidate_info": {
        "commit_hash": "feb39b62288cb780561ca83b84ca82dceb3cedb9",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/feb39b62288cb780561ca83b84ca82dceb3cedb9",
        "files": [
          "linux-user/ppc/signal.c"
        ],
        "message": "target/ppc: don't byte swap ELFv2 signal handler\n\nPreviously, the signal handler would be byte swapped if the target and\nhost CPU used different endianness. This would cause a SIGSEGV when\nattempting to translate the opcode pointed to by the swapped address.\n\n Thread 1 \"qemu-ppc64\" received signal SIGSEGV, Segmentation fault.\n 0x00000000600a9257 in ldl_he_p (ptr=0x4c2c061000000000) at qemu/include/qemu/bswap.h:351\n 351        __builtin_memcpy(&r, ptr, sizeof(r));\n\n #0  0x00000000600a9257 in ldl_he_p (ptr=0x4c2c061000000000) at qemu/include/qemu/bswap.h:351\n #1  0x00000000600a92fe in ldl_be_p (ptr=0x4c2c061000000000) at qemu/include/qemu/bswap.h:449\n #2  0x00000000600c0790 in translator_ldl_swap at qemu/include/exec/translator.h:201\n #3  0x000000006011c1ab in ppc_tr_translate_insn at qemu/target/ppc/translate.c:7856\n #4  0x000000006005ae70 in translator_loop at qemu/accel/tcg/translator.c:102\n\nThe signal handler will be byte swapped as a result of the __get_user()\ncall in sigaction() if it is necessary, no additional swap is required.\n\nSigned-off-by: Vincent Fazio <vfazio@gmail.com>\nReviewed-by: Laurent Vivier <laurent@vivier.eu>\nReviewed-by: Richard Henderson <richard.henderson@linaro.org>\nMessage-Id: <20200319133244.8818-1-vfazio@xes-inc.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>",
        "before_after_code_files": [
          "linux-user/ppc/signal.c||linux-user/ppc/signal.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "linux-user/ppc/signal.c||linux-user/ppc/signal.c": [
          "File: linux-user/ppc/signal.c -> linux-user/ppc/signal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "567:         env->nip = tswapl(handler->entry);",
          "568:         env->gpr[2] = tswapl(handler->toc);",
          "569:     } else {",
          "574:     }",
          "575: #else",
          "576:     env->nip = (target_ulong) ka->_sa_handler;",
          "",
          "[Removed Lines]",
          "572:         env->nip = tswapl((target_ulong) ka->_sa_handler);",
          "573:         env->gpr[12] = env->nip;",
          "",
          "[Added Lines]",
          "571:         env->gpr[12] = env->nip = ka->_sa_handler;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "211a7784b9a80e42841223d8ea5252567ebe0e9e",
      "candidate_info": {
        "commit_hash": "211a7784b9a80e42841223d8ea5252567ebe0e9e",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/211a7784b9a80e42841223d8ea5252567ebe0e9e",
        "files": [
          "target/ppc/kvm.c"
        ],
        "message": "target/ppc: Fix wrong interpretation of the disposition flag.\n\nBitwise AND with kvm_run->flags to evaluate if we recovered from\nMCE or not is not correct, As disposition in kvm_run->flags is a\ntwo-bit integer value and not a bit map, So check for equality\ninstead of bitwise AND.\n\nWithout the fix qemu treats any unrecoverable mce error as recoverable\nand ends up in a mce loop inside the guest, Below are the MCE logs before\nand after the fix.\n\nBefore fix:\n\n[   66.775757] MCE: CPU0: Initiator CPU\n[   66.775891] MCE: CPU0: Unknown\n[   66.776587] MCE: CPU0: machine check (Harmless) Host UE Indeterminate [Recovered]\n[   66.776857] MCE: CPU0: NIP: [c0080000000e00b8] mcetest_tlbie+0xb0/0x128 [mcetest_tlbie]\n\nAfter fix:\n\n[ 20.650577] CPU: 0 PID: 1415 Comm: insmod Tainted: G M O 5.6.0-fwnmi-arv+ #11\n[ 20.650618] NIP: c0080000023a00e8 LR: c0080000023a00d8 CTR: c000000000021fe0\n[ 20.650660] REGS: c0000001fffd3d70 TRAP: 0200 Tainted: G M O (5.6.0-fwnmi-arv+)\n[ 20.650708] MSR: 8000000002a0b033 <SF,VEC,VSX,EE,FP,ME,IR,DR,RI,LE> CR: 42000222 XER: 20040000\n[ 20.650758] CFAR: c00000000000b940 DAR: c0080000025e00e0 DSISR: 00000200 IRQMASK: 0\n[ 20.650758] GPR00: c0080000023a00d8 c0000001fddd79a0 c0080000023a8500 0000000000000039\n[ 20.650758] GPR04: 0000000000000001 0000000000000000 0000000000000000 0000000000000007\n[ 20.650758] GPR08: 0000000000000007 c0080000025e00e0 0000000000000000 00000000000000f7\n[ 20.650758] GPR12: 0000000000000000 c000000001900000 c00000000101f398 c0080000025c052f\n[ 20.650758] GPR16: 00000000000003a8 c0080000025c0000 c0000001fddd7d70 c0000000015b7940\n[ 20.650758] GPR20: 000000000000fff1 c000000000f72c28 c0080000025a0988 0000000000000000\n[ 20.650758] GPR24: 0000000000000100 c0080000023a05d0 c0000000001f1d70 0000000000000000\n[ 20.650758] GPR28: c0000001fde20000 c0000001fd02b2e0 c0080000023a0000 c0080000025e0000\n[ 20.651178] NIP [c0080000023a00e8] mcetest_tlbie+0xe8/0xf0 [mcetest_tlbie]\n[ 20.651220] LR [c0080000023a00d8] mcetest_tlbie+0xd8/0xf0 [mcetest_tlbie]\n[ 20.651262] Call Trace:\n[ 20.651280] [c0000001fddd79a0] [c0080000023a00d8] mcetest_tlbie+0xd8/0xf0 [mcetest_tlbie] (unreliable)\n[ 20.651340] [c0000001fddd7a10] [c00000000001091c] do_one_initcall+0x6c/0x2c0\n[ 20.651390] [c0000001fddd7af0] [c0000000001f7998] do_init_module+0x90/0x298\n[ 20.651433] [c0000001fddd7b80] [c0000000001f61a8] load_module+0x1f58/0x27a0\n[ 20.651476] [c0000001fddd7d40] [c0000000001f6c70] __do_sys_finit_module+0xe0/0x100\n[ 20.651526] [c0000001fddd7e20] [c00000000000b9d0] system_call+0x5c/0x68\n[ 20.651567] Instruction dump:\n[ 20.651594] e8410018 3c620000 e8638020 480000cd e8410018 3c620000 e8638028 480000bd\n[ 20.651646] e8410018 7be904e4 39400000 612900e0 <7d434a64> 4bffff74 3c4c0001 38428410\n[ 20.651699] ---[ end trace 4c40897f016b4340 ]---\n[ 20.653310]\nBus error\n[ 20.655575] MCE: CPU0: machine check (Harmless) Host UE Indeterminate [Not recovered]\n[ 20.655575] MCE: CPU0: NIP: [c0080000023a00e8] mcetest_tlbie+0xe8/0xf0 [mcetest_tlbie]\n[ 20.655576] MCE: CPU0: Initiator CPU\n[ 20.655576] MCE: CPU0: Unknown\n\nSigned-off-by: Ganesh Goudar <ganeshgr@linux.ibm.com>\nMessage-Id: <20200408170944.16003-1-ganeshgr@linux.ibm.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>",
        "before_after_code_files": [
          "target/ppc/kvm.c||target/ppc/kvm.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "target/ppc/kvm.c||target/ppc/kvm.c": [
          "File: target/ppc/kvm.c -> target/ppc/kvm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2816: #if defined(TARGET_PPC64)",
          "2817: int kvm_handle_nmi(PowerPCCPU *cpu, struct kvm_run *run)",
          "2818: {",
          "2821:     cpu_synchronize_state(CPU(cpu));",
          "2825:     return 0;",
          "2826: }",
          "",
          "[Removed Lines]",
          "2819:     bool recovered = run->flags & KVM_RUN_PPC_NMI_DISP_FULLY_RECOV;",
          "2823:     spapr_mce_req_event(cpu, recovered);",
          "",
          "[Added Lines]",
          "2819:     uint16_t flags = run->flags & KVM_RUN_PPC_NMI_DISP_MASK;",
          "2823:     spapr_mce_req_event(cpu, flags == KVM_RUN_PPC_NMI_DISP_FULLY_RECOV);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "13f2cb21e5fb33e9f8d7db8eee48edc1c67b812f",
      "candidate_info": {
        "commit_hash": "13f2cb21e5fb33e9f8d7db8eee48edc1c67b812f",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/13f2cb21e5fb33e9f8d7db8eee48edc1c67b812f",
        "files": [
          "migration/multifd.c"
        ],
        "message": "migration/multifd: Do error_free after migrate_set_error to avoid memleaks\n\nWhen error happen in multifd_send_thread, it use error_copy to set migrate error in\nmultifd_send_terminate_threads(). We should call error_free after it.\n\nSimilarly, fix another two places in multifd_recv_thread/multifd_save_cleanup.\n\nThe leak stack:\nDirect leak of 48 byte(s) in 1 object(s) allocated from:\n    #0 0x7f781af07cf0 in calloc (/lib64/libasan.so.5+0xefcf0)\n    #1 0x7f781a2ce22d in g_malloc0 (/lib64/libglib-2.0.so.0+0x5322d)\n    #2 0x55ee1d075c17 in error_setv /mnt/sdb/backup/qemu/util/error.c:61\n    #3 0x55ee1d076464 in error_setg_errno_internal /mnt/sdb/backup/qemu/util/error.c:109\n    #4 0x55ee1cef066e in qio_channel_socket_writev /mnt/sdb/backup/qemu/io/channel-socket.c:569\n    #5 0x55ee1cee806b in qio_channel_writev /mnt/sdb/backup/qemu/io/channel.c:207\n    #6 0x55ee1cee806b in qio_channel_writev_all /mnt/sdb/backup/qemu/io/channel.c:171\n    #7 0x55ee1cee8248 in qio_channel_write_all /mnt/sdb/backup/qemu/io/channel.c:257\n    #8 0x55ee1ca12c9a in multifd_send_thread /mnt/sdb/backup/qemu/migration/multifd.c:657\n    #9 0x55ee1d0607fc in qemu_thread_start /mnt/sdb/backup/qemu/util/qemu-thread-posix.c:519\n    #10 0x7f78159ae2dd in start_thread (/lib64/libpthread.so.0+0x82dd)\n    #11 0x7f78156df4b2 in __GI___clone (/lib64/libc.so.6+0xfc4b2)\n\nIndirect leak of 52 byte(s) in 1 object(s) allocated from:\n    #0 0x7f781af07f28 in __interceptor_realloc (/lib64/libasan.so.5+0xeff28)\n    #1 0x7f78156f07d9 in __GI___vasprintf_chk (/lib64/libc.so.6+0x10d7d9)\n    #2 0x7f781a30ea6c in g_vasprintf (/lib64/libglib-2.0.so.0+0x93a6c)\n    #3 0x7f781a2e7cd0 in g_strdup_vprintf (/lib64/libglib-2.0.so.0+0x6ccd0)\n    #4 0x7f781a2e7d8c in g_strdup_printf (/lib64/libglib-2.0.so.0+0x6cd8c)\n    #5 0x55ee1d075c86 in error_setv /mnt/sdb/backup/qemu/util/error.c:65\n    #6 0x55ee1d076464 in error_setg_errno_internal /mnt/sdb/backup/qemu/util/error.c:109\n    #7 0x55ee1cef066e in qio_channel_socket_writev /mnt/sdb/backup/qemu/io/channel-socket.c:569\n    #8 0x55ee1cee806b in qio_channel_writev /mnt/sdb/backup/qemu/io/channel.c:207\n    #9 0x55ee1cee806b in qio_channel_writev_all /mnt/sdb/backup/qemu/io/channel.c:171\n    #10 0x55ee1cee8248 in qio_channel_write_all /mnt/sdb/backup/qemu/io/channel.c:257\n    #11 0x55ee1ca12c9a in multifd_send_thread /mnt/sdb/backup/qemu/migration/multifd.c:657\n    #12 0x55ee1d0607fc in qemu_thread_start /mnt/sdb/backup/qemu/util/qemu-thread-posix.c:519\n    #13 0x7f78159ae2dd in start_thread (/lib64/libpthread.so.0+0x82dd)\n    #14 0x7f78156df4b2 in __GI___clone (/lib64/libc.so.6+0xfc4b2)\n\nReported-by: Euler Robot <euler.robot@huawei.com>\nSigned-off-by: Pan Nengyuan <pannengyuan@huawei.com>\nMessage-Id: <20200506095416.26099-3-pannengyuan@huawei.com>\nReviewed-by: Juan Quintela <quintela@redhat.com>\nSigned-off-by: Dr. David Alan Gilbert <dgilbert@redhat.com>",
        "before_after_code_files": [
          "migration/multifd.c||migration/multifd.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "migration/multifd.c||migration/multifd.c": [
          "File: migration/multifd.c -> migration/multifd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "550:         multifd_send_state->ops->send_cleanup(p, &local_err);",
          "551:         if (local_err) {",
          "552:             migrate_set_error(migrate_get_current(), local_err);",
          "553:         }",
          "554:     }",
          "555:     qemu_sem_destroy(&multifd_send_state->channels_ready);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "553:             error_free(local_err);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "688:     if (local_err) {",
          "689:         trace_multifd_send_error(p->id);",
          "690:         multifd_send_terminate_threads(local_err);",
          "691:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "692:         error_free(local_err);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "966:     if (local_err) {",
          "967:         multifd_recv_terminate_threads(local_err);",
          "968:     }",
          "969:     qemu_mutex_lock(&p->mutex);",
          "970:     p->running = false;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "970:         error_free(local_err);",
          "",
          "---------------"
        ]
      }
    }
  ]
}