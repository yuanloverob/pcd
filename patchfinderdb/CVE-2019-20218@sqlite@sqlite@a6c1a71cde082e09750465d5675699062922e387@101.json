{
  "cve_id": "CVE-2019-20218",
  "cve_desc": "selectExpander in select.c in SQLite 3.30.1 proceeds with WITH stack unwinding even after a parsing error.",
  "repo": "sqlite/sqlite",
  "patch_hash": "a6c1a71cde082e09750465d5675699062922e387",
  "patch_info": {
    "commit_hash": "a6c1a71cde082e09750465d5675699062922e387",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/a6c1a71cde082e09750465d5675699062922e387",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/altertab3.test"
    ],
    "message": "Do not attempt to unwind the WITH stack in the Parse object following an error. This fixes a separate case to [de6e6d68].\n\nFossilOrigin-Name: d29edef93451cc67a5d69c1cce1b1832d9ca8fff1f600afdd51338b74d077b92",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/altertab3.test||test/altertab3.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 597896ed0ae9e2960a8f39576bd7f77a11dccc1da84b6a44ebb5c38d90ebc330",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4982:     return WRC_Abort;",
      "4983:   }",
      "",
      "[Removed Lines]",
      "4981:   if( db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "[Added Lines]",
      "4981:   if( pParse->nErr || db->mallocFailed || sqliteProcessJoin(pParse, p) ){",
      "",
      "---------------"
    ],
    "test/altertab3.test||test/altertab3.test": [
      "File: test/altertab3.test -> test/altertab3.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "531:   ALTER TABLE t1 RENAME TO t1x;",
      "532: } {1 {error in trigger r1: no such table: main.t2}}",
      "534: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "534: #------------------------------------------------------------------------",
      "535: #",
      "536: reset_db",
      "537: do_execsql_test 23.1 {",
      "538:   CREATE TABLE v0 (a);",
      "539:   CREATE VIEW v2 (v3) AS",
      "540:     WITH x1 AS (SELECT * FROM v2)",
      "541:     SELECT v3 AS x, v3 AS y FROM v2;",
      "542: }",
      "544: do_catchsql_test 23.2 {",
      "545:   SELECT * FROM v2",
      "546: } {1 {view v2 is circularly defined}}",
      "548: db close",
      "549: sqlite3 db test.db",
      "551: do_catchsql_test 23.3 {",
      "552:   ALTER TABLE v0 RENAME TO t3 ;",
      "553: } {1 {error in view v2: view v2 is circularly defined}}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6aa001527c8e4288c2d55748af659aa03e026df9",
      "candidate_info": {
        "commit_hash": "6aa001527c8e4288c2d55748af659aa03e026df9",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/6aa001527c8e4288c2d55748af659aa03e026df9",
        "files": [
          "VERSION",
          "configure",
          "ext/fts3/fts3_write.c",
          "ext/fts5/fts5_buffer.c",
          "ext/fts5/test/fts5corrupt3.test",
          "manifest",
          "manifest.uuid",
          "src/alter.c",
          "src/btree.c",
          "src/expr.c",
          "src/fkey.c",
          "src/msvc.h",
          "src/parse.y",
          "src/select.c",
          "src/shell.c.in",
          "src/sqliteInt.h",
          "src/test1.c",
          "src/util.c",
          "src/vacuum.c",
          "src/vdbemem.c",
          "src/wal.c",
          "src/where.c",
          "src/wherecode.c",
          "test/altertab.test",
          "test/corruptL.test",
          "test/fts3corrupt4.test",
          "test/fuzzdata8.db",
          "tool/showdb.c"
        ],
        "message": "Merge latest trunk changes into this branch.\n\nFossilOrigin-Name: 1da302d85d7ad4ba54f877117a45d667439fd2ef31dc70ea1d54dc1fba196e68",
        "before_after_code_files": [
          "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c",
          "ext/fts5/fts5_buffer.c||ext/fts5/fts5_buffer.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "manifest.uuid||manifest.uuid",
          "src/alter.c||src/alter.c",
          "src/btree.c||src/btree.c",
          "src/expr.c||src/expr.c",
          "src/fkey.c||src/fkey.c",
          "src/msvc.h||src/msvc.h",
          "src/parse.y||src/parse.y",
          "src/select.c||src/select.c",
          "src/shell.c.in||src/shell.c.in",
          "src/sqliteInt.h||src/sqliteInt.h",
          "src/test1.c||src/test1.c",
          "src/util.c||src/util.c",
          "src/vacuum.c||src/vacuum.c",
          "src/vdbemem.c||src/vdbemem.c",
          "src/wal.c||src/wal.c",
          "src/where.c||src/where.c",
          "src/wherecode.c||src/wherecode.c",
          "test/altertab.test||test/altertab.test",
          "test/corruptL.test||test/corruptL.test",
          "test/fts3corrupt4.test||test/fts3corrupt4.test",
          "tool/showdb.c||tool/showdb.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid",
            "src/select.c||src/select.c"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid",
            "src/select.c||src/select.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts3/fts3_write.c||ext/fts3/fts3_write.c": [
          "File: ext/fts3/fts3_write.c -> ext/fts3/fts3_write.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3754:     }",
          "3755:     p->iOff += fts3GetVarint32(&p->aNode[p->iOff], &nSuffix);",
          "3758:       return FTS_CORRUPT_VTAB;",
          "3759:     }",
          "3760:     blobGrowBuffer(&p->term, nPrefix+nSuffix, &rc);",
          "",
          "[Removed Lines]",
          "3757:     if( nPrefix>p->iOff || nSuffix>p->nNode-p->iOff ){",
          "",
          "[Added Lines]",
          "3757:     if( nPrefix>p->term.n || nSuffix>p->nNode-p->iOff || nSuffix==0 ){",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3773:     }",
          "3774:   }",
          "3777:   return rc;",
          "3778: }",
          "",
          "[Removed Lines]",
          "3776:   assert( p->iOff<=p->nNode );",
          "",
          "[Added Lines]",
          "3776:   assert_fts3_nc( p->iOff<=p->nNode );",
          "",
          "---------------"
        ],
        "ext/fts5/fts5_buffer.c||ext/fts5/fts5_buffer.c": [
          "File: ext/fts5/fts5_buffer.c -> ext/fts5/fts5_buffer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "178:     i64 iOff = *piOff;",
          "179:     int iVal;",
          "180:     fts5FastGetVarint32(a, i, iVal);",
          "182:       fts5FastGetVarint32(a, i, iVal);",
          "183:       iOff = ((i64)iVal) << 32;",
          "184:       fts5FastGetVarint32(a, i, iVal);",
          "",
          "[Removed Lines]",
          "181:     if( iVal==1 ){",
          "",
          "[Added Lines]",
          "181:     if( iVal<=1 ){",
          "182:       if( iVal==0 ){",
          "184:         return 0;",
          "185:       }",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "8128:   INSERT INTO t1(t1) VALUES('optimize')",
          "8129: } {1 {database disk image is malformed}}",
          "8132: sqlite3_fts5_may_be_corrupt 0",
          "8133: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8131: #-------------------------------------------------------------------------",
          "8132: reset_db",
          "8133: do_test 58.0 {",
          "8134:   sqlite3 db {}",
          "8135:   db deserialize [decode_hexdb {",
          "8136: .open --hexdb",
          "8137: | size 24576 pagesize 4096 filename crash-5a5acd0ab42d31.db",
          "8138: | page 1 offset 0",
          "8139: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "8140: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 00   .....@  ........",
          "8141: |     96: 00 00 00 00 0d 00 00 00 06 0e 0f 00 0f aa 0f 53   ...............S",
          "8142: |    112: 0e e8 0e 8b 0e 33 0e 0f 00 00 00 00 00 00 00 00   .....3..........",
          "8143: |   3584: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 22   ................",
          "8144: |   3600: 06 06 17 11 11 01 31 74 61 62 6c 65 62 62 62 62   ......1tablebbbb",
          "8145: |   3616: 06 43 52 45 41 54 45 20 54 41 42 4c 45 20 62 62   .CREATE TABLE bb",
          "8146: |   3632: 28 61 29 56 05 06 17 1f 1f 01 7d 74 61 62 6c 65   (a)V.......table",
          "8147: |   3648: 74 31 5f 63 2a 6e 66 69 68 74 31 5f 63 6f 6e 66   t1_c*nfiht1_conf",
          "8148: |   3664: 69 67 05 43 52 45 41 54 45 20 54 41 42 4c 45 20   ig.CREATE TABLE",
          "8149: |   3680: 27 74 31 5f 63 6f 6e 66 69 67 27 28 6b 20 50 52   't1_config'(k PR",
          "8150: |   3696: 49 4d 41 52 59 20 4b 45 59 2c 20 76 29 20 57 49   IMARY KEY, v) WI",
          "8151: |   3712: 54 48 4f 55 54 20 52 4f 57 49 44 5b 04 07 17 21   THOUT ROWID[...!",
          "8152: |   3728: 21 01 81 01 74 61 62 6c 65 74 31 5f 64 6f 73 73   !...tablet1_doss",
          "8153: |   3744: 69 7a 65 74 31 5f 64 6f 63 73 69 7a 65 04 43 52   izet1_docsize.CR",
          "8154: |   3760: 45 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 64   EATE TABLE 't1_d",
          "8155: |   3776: 6f 63 73 69 7a 65 27 28 69 64 20 49 4e 54 45 47   ocsize'(id INTEG",
          "8156: |   3792: 45 52 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20   ER PRIMARY KEY,",
          "8157: |   3808: 73 7a 20 42 4c 4f 42 29 69 03 07 17 19 19 01 81   sz BLOB)i.......",
          "8158: |   3824: 2d 74 61 62 6c 65 74 31 5f 69 64 78 74 31 5f 69   -tablet1_idxt1_i",
          "8159: |   3840: 64 78 03 43 52 45 41 54 45 20 54 41 42 4c 45 20   dx.CREATE TABLE",
          "8160: |   3856: 27 74 31 5f 69 64 78 27 28 73 65 67 69 64 2c 20   't1_idx'(segid,",
          "8161: |   3872: 74 65 72 6d 2c 20 70 67 6e 6f 2c 20 50 52 49 4d   term, pgno, PRIM",
          "8162: |   3888: 41 52 59 20 4b 45 59 28 73 65 67 69 64 2c 20 74   ARY KEY(segid, t",
          "8163: |   3904: 65 72 6d 29 29 20 57 49 54 48 4f 55 54 20 52 4f   erm)) WITHOUT RO",
          "8164: |   3920: 57 49 44 55 02 07 17 1b 1b 01 81 01 74 61 62 6c   WIDU........tabl",
          "8165: |   3936: 65 74 31 5f 64 61 74 61 74 31 5f 64 61 74 61 02   et1_datat1_data.",
          "8166: |   3952: 43 52 45 41 54 45 20 54 41 42 4c 45 20 27 74 31   CREATE TABLE 't1",
          "8167: |   3968: 5f 64 61 74 61 27 28 69 64 20 49 4e 54 45 47 45   _data'(id INTEGE",
          "8168: |   3984: 52 20 50 52 49 4d 41 52 59 20 4b 45 59 2c 20 62   R PRIMARY KEY, b",
          "8169: |   4000: 6c 6f 63 6b 20 42 4c 4f 42 29 54 01 07 17 11 11   lock BLOB)T.....",
          "8170: |   4016: 08 81 15 74 61 62 6c 65 74 31 74 31 43 52 45 41   ...tablet1t1CREA",
          "8171: |   4032: 54 45 20 56 49 52 54 55 41 4c 20 54 41 42 4c 45   TE VIRTUAL TABLE",
          "8172: |   4048: 20 74 31 20 55 53 49 4e 47 20 66 74 73 35 28 61    t1 USING fts5(a",
          "8173: |   4064: 2c 62 2c 70 72 65 66 69 78 3d 22 32 2c 32 2c 33   ,b,prefix=.2,2,3",
          "8174: |   4080: 2c 34 22 2c 20 63 6f 6e 74 65 6e 74 3d 22 22 29   ,4., content=..)",
          "8175: | page 2 offset 4096",
          "8176: |      0: 0d 0b 6a 00 37 09 4c 02 0f e7 09 4c 0f c6 0f a4   ..j.7.L....L....",
          "8177: |     16: 0f 88 0f 6d 0f 4b 0f 2c 0f 0e 0e ec 0e cd 0e ae   ...m.K.,........",
          "8178: |     32: 0e 8e 0e 6c 0e 4b 0e 29 0e 08 0d e6 0d c4 0d b5   ...l.K.)........",
          "8179: |     48: 0d 97 0d 76 0d 54 0d 30 fd 15 0c f3 0c d3 0c b5   ...v.T.0........",
          "8180: |     64: 0c 95 0c 73 0c 54 0c 32 0c 10 0b ee 0b cc 0b b0   ...s.T.2........",
          "8181: |     80: 0b 8d 0b 7e 0b 48 0b 2e 0b 0b 0a ef 0a cc 0a ad   ...~.H..........",
          "8182: |     96: 0a 8c 0a 6d 0a 4d 0a 2b 0a 0c 00 00 00 00 00 00   ...m.M.+........",
          "8183: |   2368: 00 00 00 00 00 00 00 00 00 00 00 00 15 0a 03 00   ................",
          "8184: |   2384: 30 00 00 00 9c 01 03 35 00 03 01 01 12 02 01 12   0......5........",
          "8185: |   2400: 03 01 11 1c 8c 80 80 80 80 10 03 00 3e 00 00 00   ............>...",
          "8186: |   2416: 17 01 05 05 34 74 61 62 6c 03 02 03 01 04 77 68   ....4tabl.....wh",
          "8187: |   2432: 65 72 03 02 06 09 1b 8c 80 80 80 80 0f 03 00 3c   er.............<",
          "8188: |   2448: 00 00 00 16 05 34 66 74 73 34 03 02 02 01 04 6e   .....4fts4.....n",
          "8189: |   2464: 75 6d 62 03 06 01 04 09 1b 8c 80 80 80 80 0e 03   umb.............",
          "8190: |   2480: 00 3c 00 00 00 16 04 33 74 68 65 03 06 01 01 04   .<.....3the.....",
          "8191: |   2496: 01 03 77 68 65 03 02 04 04 0a 1b 8c 80 80 80 80   ..whe...........",
          "8192: |   2512: 0d 03 00 3c 00 00 00 16 04 33 6e 75 6d 03 06 01   ...<.....3num...",
          "8193: |   2528: 01 05 01 03 74 61 62 05 62 03 04 0a 19 8c 80 80   ....tab.b.......",
          "8194: |   2544: 80 80 0c 03 00 38 00 00 00 14 03 39 a7 68 03 02   .....8.....9.h..",
          "8195: |   2560: 04 10 04 33 66 74 73 03 02 02 04 07 18 8c 80 80   ...3fts.........",
          "8196: |   2576: 80 80 0b 03 00 36 00 00 00 13 03 32 74 61 03 02   .....6.....2ta..",
          "8197: |   2592: 03 02 01 68 03 06 01 01 04 04 07 1b 8c 80 80 80   ...h............",
          "8198: |   2608: 80 0a 03 00 3c 00 00 00 16 03 32 6e 75 03 06 01   ....<.....2nu...",
          "8199: |   2624: 01 05 01 02 6f 66 03 06 01 01 06 04 09 19 8c 80   ....of..........",
          "8200: |   2640: 80 80 80 09 03 00 38 00 00 00 14 03 32 66 74 03   ......8.....2ft.",
          "8201: |   2656: 02 02 01 02 69 73 03 06 01 01 03 04 07 18 8c 80   ....is..........",
          "8202: |   2672: 80 80 80 08 03 00 36 00 00 00 13 02 31 74 03 08   ......6.....1t..",
          "8203: |   2688: 03 01 01 04 01 01 77 03 02 04 04 09 1a 8c 80 80   ......w.........",
          "8204: |   2704: 80 80 07 03 00 3a ff 00 00 15 02 31 6e 03 08 01   .....:.....1n...",
          "8205: |   2720: 01 02 05 01 01 6f 03 06 01 01 06 04 09 18 8c 80   .....o..........",
          "8206: |   2736: 80 80 80 06 03 00 36 00 00 00 13 04 02 31 66 03   ......6......1f.",
          "8207: |   2752: 02 01 f1 01 69 03 06 01 01 03 05 06 1c 8c 80 80   ....i...........",
          "8208: |   2768: 80 80 05 03 00 3e 00 00 00 17 04 30 74 68 65 03   .....>.....0the.",
          "8209: |   2784: 06 01 01 14 01 05 77 68 65 72 65 03 02 04 0a 15   ......where.....",
          "8210: |   2800: 8c 80 80 80 80 04 03 00 30 00 00 00 11 01 01 06   ........0.......",
          "8211: |   2816: 06 30 74 61 62 6c cc 03 02 03 07 1c 8c 80 80 80   .0tabl..........",
          "8212: |   2832: 80 03 03 00 3e 00 00 00 17 07 30 6e 75 6d 62 65   ....>.....0numbe",
          "8213: |   2848: 72 03 06 01 01 05 01 02 6f 66 02 06 04 0d 13 8c   r.......of......",
          "8214: |   2864: 80 80 80 80 02 03 00 2c 00 00 00 0f 01 01 03 02   .......,........",
          "8215: |   2880: 30 6e 03 06 01 01 02 07 1b 8c 80 80 80 80 01 03   0n..............",
          "8216: |   2896: 00 3c 00 00 00 16 08 30 66 74 73 34 61 75 78 03   .<.....0fts4aux.",
          "8217: |   2912: 02 02 01 02 69 73 03 06 04 0c 00 00 00 14 2a 00   ....is........*.",
          "8218: |   2928: 00 00 01 01 02 24 00 02 01 01 12 02 01 12 08 88   .....$..........",
          "8219: |   2944: 80 80 80 80 12 03 00 16 00 00 00 05 02 1c 88 80   ................",
          "8220: |   2960: 80 80 80 11 03 00 3e 00 00 00 17 05 34 72 6f 77   ......>.....4row",
          "8221: |   2976: 73 02 06 01 01 05 01 04 74 68 65 72 02 02 04 0b   s.......ther....",
          "8222: |   2992: 15 88 80 80 80 80 10 03 00 3e 10 00 00 11 02 01   .........>......",
          "8223: |   3008: 01 07 05 34 62 65 74 77 02 02 04 08 1b 88 80 80   ...4betw........",
          "8224: |   3024: 80 80 0f 03 00 3c 00 00 00 16 04 04 33 72 6f 77   .....<......3row",
          "8225: |   3040: 02 06 01 01 05 01 03 74 68 65 02 08 05 0a 1b 88   .......the......",
          "8226: |   3056: 80 80 80 80 0e 03 05 0c 00 00 00 16 01 01 02 04   ................",
          "8227: |   3072: 33 61 72 65 02 02 03 01 03 62 65 74 02 02 07 08   3are.....bet....",
          "8228: |   3088: 1b 88 80 80 80 80 0d 03 00 3c 00 00 00 16 03 32   .........<.....2",
          "8229: |   3104: 74 68 02 08 02 01 01 07 00 04 33 61 6e 64 02 06   th........3and..",
          "8230: |   3120: 04 01 1b 88 80 80 80 80 0c 03 00 3c 00 00 00 16   ...........<....",
          "8231: |   3136: 03 32 69 6e 02 06 01 01 06 01 02 72 6f 02 06 01   .2in.......ro...",
          "8232: |   3152: 01 05 04 09 18 88 80 80 80 80 0b 03 00 36 00 00   .............6..",
          "8233: |   3168: 00 13 02 03 32 61 72 02 02 03 01 02 62 65 02 02   ....2ar.....be..",
          "8234: |   3184: 04 05 07 1b 88 80 bf 80 80 0a 03 00 3c 00 00 00   ............<...",
          "8235: |   3200: 16 02 31 74 02 08 02 01 01 07 00 03 32 61 6e 02   ..1t........2an.",
          "8236: |   3216: 06 01 01 04 09 19 88 80 80 80 80 09 03 00 38 00   ..............8.",
          "8237: |   3232: 00 00 14 02 31 6e 02 06 01 01 03 01 01 72 02 06   ....1n.......r..",
          "8238: |   3248: 01 01 05 03 08 17 88 80 80 80 80 08 03 00 34 00   ..............4.",
          "8239: |   3264: 01 00 12 02 31 62 02 02 04 01 01 69 02 06 01 01   ....1b.....i....",
          "8240: |   3280: 06 04 06 19 88 80 80 80 80 07 03 00 38 00 00 00   ............8...",
          "8241: |   3296: 14 04 02 31 32 02 02 05 01 01 61 02 08 03 01 01   ...12.....a.....",
          "8242: |   3312: 02 05 06 1b 88 80 80 80 80 06 03 00 3c 00 00 00   ............<...",
          "8243: |   3328: 16 06 30 74 68 65 72 65 02 12 02 00 02 31 31 02   ..0there.....11.",
          "8244: |   3344: 06 01 01 04 0a 15 88 80 80 80 80 05 03 00 30 00   ..............0.",
          "8245: |   3360: 00 00 11 01 01 05 04 30 74 68 65 02 06 71 01 07   .......0the..q..",
          "8246: |   3376: 07 1c 88 80 80 80 80 04 03 00 3e 00 00 00 17 01   ..........>.....",
          "8247: |   3392: 01 06 02 30 6e 02 06 01 01 03 01 04 72 6f 77 73   ...0n.......rows",
          "8248: |   3408: 02 06 07 08 1b 88 80 80 80 80 03 03 00 3c 00 00   .............<..",
          "8249: |   3424: 00 16 08 30 62 65 74 77 65 65 6e 02 02 04 01 02   ...0between.....",
          "8250: |   3440: 69 6e 02 06 04 0c 1a 88 80 80 80 80 02 03 00 3a   in.............:",
          "8251: |   3456: 08 f0 00 15 04 30 61 6e 64 02 06 01 01 02 02 02   .....0and.......",
          "8252: |   3472: 72 65 02 02 03 04 0a 17 88 80 80 80 80 01 03 00   re..............",
          "8253: |   3488: 34 00 00 00 12 02 30 31 02 06 01 01 04 01 01 32   4.....01.......2",
          "8254: |   3504: 02 02 07 04 08 08 84 80 80 80 80 12 03 00 16 00   ................",
          "8255: |   3520: 00 00 05 04 1b 84 80 80 80 80 11 03 00 3c 00 00   .............<..",
          "8256: |   3536: 00 16 05 34 74 61 62 6c 01 06 01 01 05 02 03 65   ...4tabl.......e",
          "8257: |   3552: 72 6d 01 02 04 0b 1b 84 80 80 80 80 10 03 00 3c   rm.............<",
          "8258: |   3568: 00 00 00 16 05 34 65 61 63 68 01 02 03 01 04 70   .....4each.....p",
          "8259: |   3584: 72 65 73 01 02 05 04 09 1a 84 80 80 80 80 0f 03   res.............",
          "8260: |   3600: 00 3a 00 00 00 15 04 33 74 65 72 01 02 04 02 02   .:.....3ter.....",
          "8261: |   3616: 68 65 01 06 01 01 03 04 08 1b 84 80 80 80 80 0e   he..............",
          "8262: |   3632: 03 00 3c 00 00 00 16 04 33 70 72 65 01 02 05 01   ..<.....3pre....",
          "8263: |   3648: 03 74 61 62 01 06 01 01 05 04 08 1a 84 80 80 80   .tab............",
          "8264: |   3664: 80 0d 03 00 3a 00 00 00 15 04 33 66 6f 72 01 02   ....:.....3for..",
          "8265: |   3680: 02 02 02 74 73 01 06 01 01 04 03 f8 1b 84 80 80   ...ts...........",
          "8266: |   3696: 80 80 0c 03 00 3c 00 00 00 16 03 32 74 68 01 06   .....<.....2th..",
          "8267: |   3712: 01 01 03 00 04 33 65 61 63 01 02 03 04 09 18 84   .....3eac.......",
          "8268: |   3728: 80 80 80 80 0b 03 00 36 00 00 00 13 03 32 74 61   .......6.....2ta",
          "8269: |   3744: 01 06 01 01 05 02 01 65 00 02 04 04 09 19 84 80   .......e........",
          "8270: |   3760: 80 80 80 0a 03 10 38 00 00 00 14 03 32 69 6e 01   ......8.....2in.",
          "8271: |   3776: 06 01 01 02 01 02 70 72 01 02 05 04 09 18 84 80   ......pr........",
          "8272: |   3792: 80 80 80 09 03 00 36 00 00 00 13 03 32 66 6f 01   ......6.....2fo.",
          "8273: |   3808: 02 02 02 01 74 01 06 01 01 04 04 07 1b 84 80 80   ....t...........",
          "8274: |   3824: 80 80 08 03 00 3c 00 00 00 16 02 31 74 01 0a 04   .....<.....1t...",
          "8275: |   3840: 01 00 03 04 00 03 32 65 61 01 02 03 04 0a 17 84   ......2ea.......",
          "8276: |   3856: 80 80 80 80 07 03 00 34 00 00 00 12 02 31 69 01   .......4.....1i.",
          "8277: |   3872: 06 01 01 02 de 01 70 01 02 05 04 08 18 84 80 80   ......p.........",
          "8278: |   3888: 80 80 06 03 00 36 00 00 00 13 02 31 65 01 02 03   .....6.....1e...",
          "8279: |   3904: 01 01 66 01 08 02 01 01 04 04 06 1b 84 80 80 80   ..f.............",
          "8280: |   3920: 80 05 03 00 3c 00 00 00 16 05 30 74 65 72 6d 01   ....<.....0term.",
          "8281: |   3936: 02 04 02 02 68 65 01 06 01 01 03 04 09 14 84 80   ....he..........",
          "8282: |   3952: 80 80 80 04 03 00 2e 00 00 00 10 06 30 74 61 62   ............0tab",
          "8283: |   3968: 6c 65 01 06 01 01 05 04 15 84 80 80 80 80 03 03   le..............",
          "8284: |   3984: 00 30 00 00 00 11 02 08 30 70 72 65 73 65 6e 74   .0......0present",
          "8285: |   4000: 01 02 05 05 1b 84 80 80 80 80 02 03 00 3c 00 00   .............<..",
          "8286: |   4016: 00 16 04 30 66 74 73 01 06 01 01 04 01 02 69 6e   ...0fts.......in",
          "8287: |   4032: 01 06 01 01 04 0a 1a 84 80 80 80 80 01 03 00 3a   ...............:",
          "8288: |   4048: 00 00 00 15 05 30 65 61 63 68 00 f2 03 01 03 66   .....0each.....f",
          "8289: |   4064: 6f 72 01 02 02 04 09 06 01 03 00 12 03 0b 0f 00   or..............",
          "8290: |   4080: 00 08 8c 80 80 80 80 11 03 00 16 00 00 00 05 04   ................",
          "8291: | page 3 offset 8192",
          "8292: |      0: 0a 00 00 00 32 0e 4f 00 0f fa 0f f1 0f e9 0f e1   ....2.O.........",
          "8293: |     16: 0f d8 0f d1 0f c9 0f c1 0f b9 0f c1 0f a9 0f a0   ................",
          "8294: |     32: 0f 98 0f 90 0f 87 0f 80 0f 78 0f 71 0f 68 0f 5f   .........x.q.h._",
          "8295: |     48: 0f 56 0f 4d 0f 41 0f 38 0f 2f 0f 26 0f 1d 0f 13   .V.M.A.8./.&....",
          "8296: |     64: 0f 0a 0f 01 0e f7 0e ee 0e e6 0e dd 0e d7 0e cd   ................",
          "8297: |     80: 0e c3 0e ba 0e b0 0e a8 0e 9f 0e 96 0e 8e 0e 85   ................",
          "8298: |   3648: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 08   ................",
          "8299: |   3664: 04 01 10 01 03 34 74 20 07 04 01 0e 01 03 34 1e   .....4t ......4.",
          "8300: |   3680: 09 04 01 12 34 03 33 74 68 1c 08 04 01 10 01 03   ....4.3th.......",
          "8301: |   3696: 33 6e 1a 08 04 01 10 01 03 32 77 18 08 04 01 10   3n.......2w.....",
          "8302: |   3712: 01 03 32 74 16 08 04 01 10 01 03 32 6e 14 07 04   ..2t.......2n...",
          "8303: |   3728: 01 0e 01 03 32 12 08 04 01 0f f1 03 31 74 10 08   ....2.......1t..",
          "8304: |   3744: 04 01 10 01 03 31 6e 0e 07 04 01 0e 01 03 30 fc   .....1n.......0.",
          "8305: |   3760: 09 04 01 12 01 03 30 74 68 0a 08 04 01 10 01 03   ......0th.......",
          "8306: |   3776: 30 74 08 09 04 01 12 01 03 30 6e 75 06 08 04 01   0t.......0nu....",
          "8307: |   3792: 10 01 03 30 6e 04 06 04 01 0c 01 05 52 08 04 01   ...0n.......R...",
          "8308: |   3808: 10 01 02 34 72 22 07 04 01 0e 01 02 34 20 08 04   ...4r.......4 ..",
          "8309: |   3824: 01 10 01 02 33 72 1e 09 04 01 12 01 02 33 61 72   ....3r.......3ar",
          "8310: |   3840: 1c 08 04 01 10 01 02 32 74 1a 08 04 01 10 b3 02   .......2t.......",
          "8311: |   3856: 32 69 18 09 04 01 12 01 02 32 61 72 16 08 04 01   2i.......2ar....",
          "8312: |   3872: 10 01 02 31 74 14 08 04 01 10 01 02 31 6e 12 08   ...1t.......1n..",
          "8313: |   3888: 04 01 10 01 02 31 62 10 08 04 01 10 01 02 31 32   .....1b.......12",
          "8314: |   3904: 0e 0b 04 01 16 01 02 30 74 68 65 72 0c 08 04 01   .......0ther....",
          "8315: |   3920: 10 01 02 30 74 0a 08 04 01 10 01 02 30 6e 08 08   ...0t.......0n..",
          "8316: |   3936: 04 01 10 01 02 30 62 06 09 04 01 10 01 02 30 61   .....0b.......0a",
          "8317: |   3952: 04 06 04 01 0c 01 02 02 07 04 09 10 01 34 74 22   .............4t.",
          "8318: |   3968: 06 04 09 0e 01 34 20 08 04 09 12 01 33 74 65 1e   .....4 .....3te.",
          "8319: |   3984: 07 04 09 10 01 33 70 1c 07 f4 09 11 01 33 66 1a   .....3p......3f.",
          "8320: |   4000: 08 04 09 12 01 32 74 68 18 07 04 09 10 01 32 e4   .....2th......2.",
          "8321: |   4016: 16 07 04 09 10 01 32 69 14 07 04 09 10 01 32 66   ......2i......2f",
          "8322: |   4032: 12 07 04 09 10 01 31 74 10 07 04 09 10 01 31 69   ......1t......1i",
          "8323: |   4048: 0e 06 04 09 0e 01 31 0c 08 04 09 12 01 30 74 65   ......1......0te",
          "8324: |   4064: 0a 07 04 09 10 01 30 74 08 00 00 00 00 00 00 00   ......0t........",
          "8325: | page 4 offset 12288",
          "8326: |   4064: 00 00 00 00 00 00 00 00 00 00 00 05 03 03 00 10   ................",
          "8327: |   4080: 03 05 05 02 03 00 10 04 06 05 01 03 00 10 04 04   ................",
          "8328: | page 5 offset 16384",
          "8329: |      0: 0a 00 00 00 02 0f eb 00 0f eb 0f f4 00 00 00 00   ................",
          "8330: |   4064: 00 00 00 00 00 00 00 00 00 00 00 08 03 15 01 70   ...............p",
          "8331: |   4080: 67 73 7a 18 0b 03 1b 01 76 65 72 73 69 6f 6e 04   gsz.....version.",
          "8332: | page 6 offset 20480",
          "8333: |   4080: 00 00 23 03 02 01 03 03 02 00 00 00 00 00 00 00   ..#.............",
          "8334: | end crash-5a5acd0ab42d31.db",
          "8335: }]} {}",
          "8337: do_execsql_test 58.1 {",
          "8338:   SELECT * FROM t1('t*');",
          "8339: } {{} {} {} {} {} {}}",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 8d2f52bb640d6d0f84b18d746043e56f45a73ace93239be1d036701f7f4018fd",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/alter.c||src/alter.c": [
          "File: src/alter.c -> src/alter.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:   sqlite3NestedParse(pParse,",
          "55:       \"SELECT 1 \"",
          "56:       \"FROM \\\"%w\\\".%s \"",
          "58:       \" AND sql NOT LIKE 'create virtual%%'\"",
          "59:       \" AND sqlite_rename_test(%Q, sql, type, name, %d)=NULL \",",
          "60:       zDb, MASTER_NAME,",
          "",
          "[Removed Lines]",
          "57:       \"WHERE name NOT LIKE 'sqlite_%%'\"",
          "",
          "[Added Lines]",
          "57:       \"WHERE name NOT LIKE 'sqliteX_%%' ESCAPE 'X'\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "65:     sqlite3NestedParse(pParse,",
          "66:         \"SELECT 1 \"",
          "67:         \"FROM temp.%s \"",
          "69:         \" AND sql NOT LIKE 'create virtual%%'\"",
          "70:         \" AND sqlite_rename_test(%Q, sql, type, name, 1)=NULL \",",
          "71:         MASTER_NAME, zDb",
          "",
          "[Removed Lines]",
          "68:         \"WHERE name NOT LIKE 'sqlite_%%'\"",
          "",
          "[Added Lines]",
          "68:         \"WHERE name NOT LIKE 'sqliteX_%%' ESCAPE 'X'\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "186:       \"UPDATE \\\"%w\\\".%s SET \"",
          "187:       \"sql = sqlite_rename_table(%Q, type, name, sql, %Q, %Q, %d) \"",
          "188:       \"WHERE (type!='index' OR tbl_name=%Q COLLATE nocase)\"",
          "190:       , zDb, MASTER_NAME, zDb, zTabName, zName, (iDb==1), zTabName",
          "191:   );",
          "",
          "[Removed Lines]",
          "189:       \"AND   name NOT LIKE 'sqlite_%%'\"",
          "",
          "[Added Lines]",
          "189:       \"AND   name NOT LIKE 'sqliteX_%%' ESCAPE 'X'\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "197:           \"tbl_name = %Q, \"",
          "198:           \"name = CASE \"",
          "199:             \"WHEN type='table' THEN %Q \"",
          "201:              \"'sqlite_autoindex_' || %Q || substr(name,%d+18) \"",
          "202:             \"ELSE name END \"",
          "203:       \"WHERE tbl_name=%Q COLLATE nocase AND \"",
          "",
          "[Removed Lines]",
          "200:             \"WHEN name LIKE 'sqlite_autoindex%%' AND type='index' THEN \"",
          "",
          "[Added Lines]",
          "200:             \"WHEN name LIKE 'sqliteX_autoindex%%' ESCAPE 'X' \"",
          "201:             \"     AND type='index' THEN \"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "571:   sqlite3NestedParse(pParse,",
          "572:       \"UPDATE \\\"%w\\\".%s SET \"",
          "573:       \"sql = sqlite_rename_column(sql, type, name, %Q, %Q, %d, %Q, %d, %d) \"",
          "575:       \" AND sql NOT LIKE 'create virtual%%'\",",
          "576:       zDb, MASTER_NAME,",
          "577:       zDb, pTab->zName, iCol, zNew, bQuote, iSchema==1,",
          "",
          "[Removed Lines]",
          "574:       \"WHERE name NOT LIKE 'sqlite_%%' AND (type != 'index' OR tbl_name = %Q)\"",
          "",
          "[Added Lines]",
          "575:       \"WHERE name NOT LIKE 'sqliteX_%%' ESCAPE 'X' \"",
          "576:       \" AND (type != 'index' OR tbl_name = %Q)\"",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4284:       rc = newDatabase(pBt);",
          "4285:       pBt->nPage = get4byte(28 + pBt->pPage1->aData);",
          "4291:     }",
          "4292:     sqlite3BtreeLeave(p);",
          "4293:   }",
          "",
          "[Removed Lines]",
          "4290:       assert( pBt->nPage>0 );",
          "",
          "[Added Lines]",
          "4289:       assert( CORRUPT_DB || pBt->nPage>0 );",
          "",
          "---------------"
        ],
        "src/expr.c||src/expr.c": [
          "File: src/expr.c -> src/expr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "773:     pNew->iAgg = -1;",
          "774:     if( pToken ){",
          "775:       if( nExtra==0 ){",
          "777:         pNew->u.iValue = iValue;",
          "778:       }else{",
          "779:         pNew->u.zToken = (char*)&pNew[1];",
          "",
          "[Removed Lines]",
          "776:         pNew->flags |= EP_IntValue|EP_Leaf;",
          "",
          "[Added Lines]",
          "776:         pNew->flags |= EP_IntValue|EP_Leaf|(iValue?EP_IsTrue:EP_IsFalse);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "851: ){",
          "852:   Expr *p;",
          "863:     sqlite3ExprAttachSubtrees(pParse->db, p, pLeft, pRight);",
          "866:     sqlite3ExprCheckHeight(pParse, p->nHeight);",
          "867:   }",
          "868:   return p;",
          "869: }",
          "",
          "[Removed Lines]",
          "853:   if( op==TK_AND && pParse->nErr==0 && !IN_RENAME_OBJECT ){",
          "855:     p = sqlite3ExprAnd(pParse->db, pLeft, pRight);",
          "856:   }else{",
          "857:     p = sqlite3DbMallocRawNN(pParse->db, sizeof(Expr));",
          "858:     if( p ){",
          "859:       memset(p, 0, sizeof(Expr));",
          "860:       p->op = op & 0xff;",
          "861:       p->iAgg = -1;",
          "862:     }",
          "864:   }",
          "865:   if( p ) {",
          "",
          "[Added Lines]",
          "853:   p = sqlite3DbMallocRawNN(pParse->db, sizeof(Expr));",
          "854:   if( p ){",
          "855:     memset(p, 0, sizeof(Expr));",
          "856:     p->op = op & 0xff;",
          "857:     p->iAgg = -1;",
          "860:   }else{",
          "861:     sqlite3ExprDelete(pParse->db, pLeft);",
          "862:     sqlite3ExprDelete(pParse->db, pRight);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "884: }",
          "",
          "[Removed Lines]",
          "901: static int exprAlwaysTrue(Expr *p){",
          "902:   int v = 0;",
          "903:   if( ExprHasProperty(p, EP_FromJoin) ) return 0;",
          "904:   if( !sqlite3ExprIsInteger(p, &v) ) return 0;",
          "905:   return v!=0;",
          "906: }",
          "907: static int exprAlwaysFalse(Expr *p){",
          "908:   int v = 0;",
          "909:   if( ExprHasProperty(p, EP_FromJoin) ) return 0;",
          "910:   if( !sqlite3ExprIsInteger(p, &v) ) return 0;",
          "911:   return v==0;",
          "912: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "924:     return pRight;",
          "925:   }else if( pRight==0 ){",
          "926:     return pLeft;",
          "928:     sqlite3ExprDelete(db, pLeft);",
          "929:     sqlite3ExprDelete(db, pRight);",
          "930:     return sqlite3ExprAlloc(db, TK_INTEGER, &sqlite3IntTokens[0], 0);",
          "931:   }else{",
          "935:   }",
          "936: }",
          "",
          "[Removed Lines]",
          "922: Expr *sqlite3ExprAnd(sqlite3 *db, Expr *pLeft, Expr *pRight){",
          "923:   if( pLeft==0 ){",
          "927:   }else if( exprAlwaysFalse(pLeft) || exprAlwaysFalse(pRight) ){",
          "932:     Expr *pNew = sqlite3ExprAlloc(db, TK_AND, 0, 0);",
          "933:     sqlite3ExprAttachSubtrees(db, pNew, pLeft, pRight);",
          "934:     return pNew;",
          "",
          "[Added Lines]",
          "891: Expr *sqlite3ExprAnd(Parse *pParse, Expr *pLeft, Expr *pRight){",
          "892:   sqlite3 *db = pParse->db;",
          "893:   if( pLeft==0  ){",
          "897:   }else if( pParse->nErr || IN_RENAME_OBJECT ){",
          "898:     return sqlite3PExpr(pParse, TK_AND, pLeft, pRight);",
          "899:   }else if( ExprAlwaysFalse(pLeft) || ExprAlwaysFalse(pRight) ){",
          "904:     return sqlite3PExpr(pParse, TK_AND, pLeft, pRight);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1821:        || sqlite3StrICmp(pExpr->u.zToken, \"false\")==0)",
          "1822:   ){",
          "1823:     pExpr->op = TK_TRUEFALSE;",
          "1824:     return 1;",
          "1825:   }",
          "1826:   return 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1794:     ExprSetProperty(pExpr, pExpr->u.zToken[4]==0 ? EP_IsTrue : EP_IsFalse);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1837:   return pExpr->u.zToken[4]==0;",
          "1838: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1824: Expr *sqlite3ExprSimplifiedAndOr(Expr *pExpr){",
          "1825:   assert( pExpr!=0 );",
          "1826:   if( pExpr->op==TK_AND || pExpr->op==TK_OR ){",
          "1827:     Expr *pRight = sqlite3ExprSimplifiedAndOr(pExpr->pRight);",
          "1828:     Expr *pLeft = sqlite3ExprSimplifiedAndOr(pExpr->pLeft);",
          "1829:     if( ExprAlwaysTrue(pLeft) || ExprAlwaysFalse(pRight) ){",
          "1830:       pExpr = pExpr->op==TK_AND ? pRight : pLeft;",
          "1831:     }else if( ExprAlwaysTrue(pRight) || ExprAlwaysFalse(pLeft) ){",
          "1832:       pExpr = pExpr->op==TK_AND ? pLeft : pRight;",
          "1833:     }",
          "1834:   }",
          "1835:   return pExpr;",
          "1836: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "4429:   op = pExpr->op;",
          "4430:   switch( op ){",
          "4439:     case TK_OR: {",
          "4443:       break;",
          "4444:     }",
          "4445:     case TK_NOT: {",
          "",
          "[Removed Lines]",
          "4431:     case TK_AND: {",
          "4432:       int d2 = sqlite3VdbeMakeLabel(pParse);",
          "4433:       testcase( jumpIfNull==0 );",
          "4434:       sqlite3ExprIfFalse(pParse, pExpr->pLeft, d2,jumpIfNull^SQLITE_JUMPIFNULL);",
          "4435:       sqlite3ExprIfTrue(pParse, pExpr->pRight, dest, jumpIfNull);",
          "4436:       sqlite3VdbeResolveLabel(v, d2);",
          "4437:       break;",
          "4438:     }",
          "4440:       testcase( jumpIfNull==0 );",
          "4441:       sqlite3ExprIfTrue(pParse, pExpr->pLeft, dest, jumpIfNull);",
          "4442:       sqlite3ExprIfTrue(pParse, pExpr->pRight, dest, jumpIfNull);",
          "",
          "[Added Lines]",
          "4429:     case TK_AND:",
          "4431:       Expr *pAlt = sqlite3ExprSimplifiedAndOr(pExpr);",
          "4432:       if( pAlt!=pExpr ){",
          "4433:         sqlite3ExprIfTrue(pParse, pAlt, dest, jumpIfNull);",
          "4434:       }else if( op==TK_AND ){",
          "4435:         int d2 = sqlite3VdbeMakeLabel(pParse);",
          "4436:         testcase( jumpIfNull==0 );",
          "4437:         sqlite3ExprIfFalse(pParse, pExpr->pLeft, d2,",
          "4438:                            jumpIfNull^SQLITE_JUMPIFNULL);",
          "4439:         sqlite3ExprIfTrue(pParse, pExpr->pRight, dest, jumpIfNull);",
          "4440:         sqlite3VdbeResolveLabel(v, d2);",
          "4441:       }else{",
          "4442:         testcase( jumpIfNull==0 );",
          "4443:         sqlite3ExprIfTrue(pParse, pExpr->pLeft, dest, jumpIfNull);",
          "4444:         sqlite3ExprIfTrue(pParse, pExpr->pRight, dest, jumpIfNull);",
          "4445:       }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "4525: #endif",
          "4526:     default: {",
          "4527:     default_expr:",
          "4529:         sqlite3VdbeGoto(v, dest);",
          "4532:       }else{",
          "4533:         r1 = sqlite3ExprCodeTemp(pParse, pExpr, &regFree1);",
          "",
          "[Removed Lines]",
          "4528:       if( exprAlwaysTrue(pExpr) ){",
          "4530:       }else if( exprAlwaysFalse(pExpr) ){",
          "",
          "[Added Lines]",
          "4531:       if( ExprAlwaysTrue(pExpr) ){",
          "4533:       }else if( ExprAlwaysFalse(pExpr) ){",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "4595:   assert( pExpr->op!=TK_GE || op==OP_Lt );",
          "4597:   switch( pExpr->op ){",
          "4604:     case TK_OR: {",
          "4610:       break;",
          "4611:     }",
          "4612:     case TK_NOT: {",
          "",
          "[Removed Lines]",
          "4598:     case TK_AND: {",
          "4599:       testcase( jumpIfNull==0 );",
          "4600:       sqlite3ExprIfFalse(pParse, pExpr->pLeft, dest, jumpIfNull);",
          "4601:       sqlite3ExprIfFalse(pParse, pExpr->pRight, dest, jumpIfNull);",
          "4602:       break;",
          "4603:     }",
          "4605:       int d2 = sqlite3VdbeMakeLabel(pParse);",
          "4606:       testcase( jumpIfNull==0 );",
          "4607:       sqlite3ExprIfTrue(pParse, pExpr->pLeft, d2, jumpIfNull^SQLITE_JUMPIFNULL);",
          "4608:       sqlite3ExprIfFalse(pParse, pExpr->pRight, dest, jumpIfNull);",
          "4609:       sqlite3VdbeResolveLabel(v, d2);",
          "",
          "[Added Lines]",
          "4601:     case TK_AND:",
          "4603:       Expr *pAlt = sqlite3ExprSimplifiedAndOr(pExpr);",
          "4604:       if( pAlt!=pExpr ){",
          "4605:         sqlite3ExprIfFalse(pParse, pAlt, dest, jumpIfNull);",
          "4606:       }else if( pExpr->op==TK_AND ){",
          "4607:         testcase( jumpIfNull==0 );",
          "4608:         sqlite3ExprIfFalse(pParse, pExpr->pLeft, dest, jumpIfNull);",
          "4609:         sqlite3ExprIfFalse(pParse, pExpr->pRight, dest, jumpIfNull);",
          "4610:       }else{",
          "4611:         int d2 = sqlite3VdbeMakeLabel(pParse);",
          "4612:         testcase( jumpIfNull==0 );",
          "4613:         sqlite3ExprIfTrue(pParse, pExpr->pLeft, d2,",
          "4614:                           jumpIfNull^SQLITE_JUMPIFNULL);",
          "4615:         sqlite3ExprIfFalse(pParse, pExpr->pRight, dest, jumpIfNull);",
          "4616:         sqlite3VdbeResolveLabel(v, d2);",
          "4617:       }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "4695: #endif",
          "4696:     default: {",
          "4697:     default_expr:",
          "4699:         sqlite3VdbeGoto(v, dest);",
          "4702:       }else{",
          "4703:         r1 = sqlite3ExprCodeTemp(pParse, pExpr, &regFree1);",
          "",
          "[Removed Lines]",
          "4698:       if( exprAlwaysFalse(pExpr) ){",
          "4700:       }else if( exprAlwaysTrue(pExpr) ){",
          "",
          "[Added Lines]",
          "4706:       if( ExprAlwaysFalse(pExpr) ){",
          "4708:       }else if( ExprAlwaysTrue(pExpr) ){",
          "",
          "---------------"
        ],
        "src/fkey.c||src/fkey.c": [
          "File: src/fkey.c -> src/fkey.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "591:     zCol = pFKey->pFrom->aCol[iCol].zName;",
          "592:     pRight = sqlite3Expr(db, TK_ID, zCol);",
          "593:     pEq = sqlite3PExpr(pParse, TK_EQ, pLeft, pRight);",
          "595:   }",
          "",
          "[Removed Lines]",
          "594:     pWhere = sqlite3ExprAnd(db, pWhere, pEq);",
          "",
          "[Added Lines]",
          "594:     pWhere = sqlite3ExprAnd(pParse, pWhere, pEq);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "625:         pLeft = exprTableRegister(pParse, pTab, regData, iCol);",
          "626:         pRight = sqlite3Expr(db, TK_ID, pTab->aCol[iCol].zName);",
          "627:         pEq = sqlite3PExpr(pParse, TK_IS, pLeft, pRight);",
          "629:       }",
          "630:       pNe = sqlite3PExpr(pParse, TK_NOT, pAll, 0);",
          "631:     }",
          "633:   }",
          "",
          "[Removed Lines]",
          "628:         pAll = sqlite3ExprAnd(db, pAll, pEq);",
          "632:     pWhere = sqlite3ExprAnd(db, pWhere, pNe);",
          "",
          "[Added Lines]",
          "628:         pAll = sqlite3ExprAnd(pParse, pAll, pEq);",
          "632:     pWhere = sqlite3ExprAnd(pParse, pWhere, pNe);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1235:             sqlite3ExprAlloc(db, TK_ID, &tToCol, 0)),",
          "1236:           sqlite3ExprAlloc(db, TK_ID, &tFromCol, 0)",
          "1237:       );",
          "",
          "[Removed Lines]",
          "1238:       pWhere = sqlite3ExprAnd(db, pWhere, pEq);",
          "",
          "[Added Lines]",
          "1238:       pWhere = sqlite3ExprAnd(pParse, pWhere, pEq);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1251:               sqlite3ExprAlloc(db, TK_ID, &tNew, 0),",
          "1252:               sqlite3ExprAlloc(db, TK_ID, &tToCol, 0))",
          "1253:             );",
          "1255:       }",
          "1257:       if( action!=OE_Restrict && (action!=OE_Cascade || pChanges) ){",
          "",
          "[Removed Lines]",
          "1254:         pWhen = sqlite3ExprAnd(db, pWhen, pEq);",
          "",
          "[Added Lines]",
          "1254:         pWhen = sqlite3ExprAnd(pParse, pWhen, pEq);",
          "",
          "---------------"
        ],
        "src/msvc.h||src/msvc.h": [
          "File: src/msvc.h -> src/msvc.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: #pragma warning(disable : 4706)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36: #if defined(_MSC_VER) && !defined(_WIN64)",
          "37: #undef SQLITE_4_BYTE_ALIGNED_MALLOC",
          "38: #define SQLITE_4_BYTE_ALIGNED_MALLOC",
          "",
          "---------------"
        ],
        "src/parse.y||src/parse.y": [
          "File: src/parse.y -> src/parse.y",
          "--- Hunk 1 ---",
          "[Context before]",
          "1064:   }",
          "1065: }",
          "1068: expr(A) ::= expr(A) OR(OP) expr(Y).     {A=sqlite3PExpr(pParse,@OP,A,Y);}",
          "1069: expr(A) ::= expr(A) LT|GT|GE|LE(OP) expr(Y).",
          "1070:                                         {A=sqlite3PExpr(pParse,@OP,A,Y);}",
          "",
          "[Removed Lines]",
          "1067: expr(A) ::= expr(A) AND(OP) expr(Y).    {A=sqlite3PExpr(pParse,@OP,A,Y);}",
          "",
          "[Added Lines]",
          "1067: expr(A) ::= expr(A) AND expr(Y).        {A=sqlite3ExprAnd(pParse,A,Y);}",
          "",
          "---------------"
        ],
        "src/select.c||src/select.c": [
          "File: src/select.c -> src/select.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "490:     if( pRight->pOn ){",
          "491:       if( isOuter ) setJoinExpr(pRight->pOn, pRight->iCursor);",
          "493:       pRight->pOn = 0;",
          "494:     }",
          "",
          "[Removed Lines]",
          "492:       p->pWhere = sqlite3ExprAnd(pParse->db, p->pWhere, pRight->pOn);",
          "",
          "[Added Lines]",
          "492:       p->pWhere = sqlite3ExprAnd(pParse, p->pWhere, pRight->pOn);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4034:     if( isLeftJoin>0 ){",
          "4035:       setJoinExpr(pWhere, iNewParent);",
          "4036:     }",
          "4038:     if( db->mallocFailed==0 ){",
          "4039:       SubstContext x;",
          "4040:       x.pParse = pParse;",
          "",
          "[Removed Lines]",
          "4037:     pParent->pWhere = sqlite3ExprAnd(db, pWhere, pParent->pWhere);",
          "",
          "[Added Lines]",
          "4037:     pParent->pWhere = sqlite3ExprAnd(pParse, pWhere, pParent->pWhere);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4369:       x.pEList = pSubq->pEList;",
          "4370:       pNew = substExpr(&x, pNew);",
          "4371:       if( pSubq->selFlags & SF_Aggregate ){",
          "4373:       }else{",
          "4375:       }",
          "4376:       pSubq = pSubq->pPrior;",
          "4377:     }",
          "",
          "[Removed Lines]",
          "4372:         pSubq->pHaving = sqlite3ExprAnd(pParse->db, pSubq->pHaving, pNew);",
          "4374:         pSubq->pWhere = sqlite3ExprAnd(pParse->db, pSubq->pWhere, pNew);",
          "",
          "[Added Lines]",
          "4372:         pSubq->pHaving = sqlite3ExprAnd(pParse, pSubq->pHaving, pNew);",
          "4374:         pSubq->pWhere = sqlite3ExprAnd(pParse, pSubq->pWhere, pNew);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4797:   pTab->nRowLogEst = 200; assert( 200==sqlite3LogEst(1048576) );",
          "4798:   pTab->tabFlags |= TF_Ephemeral;",
          "4801: }",
          "",
          "[Removed Lines]",
          "4800:   return SQLITE_OK;",
          "",
          "[Added Lines]",
          "4800:   return pParse->nErr ? SQLITE_ERROR : SQLITE_OK;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "5418:       if( pNew ){",
          "5419:         Expr *pWhere = pS->pWhere;",
          "5420:         SWAP(Expr, *pNew, *pExpr);",
          "5422:         pS->pWhere = pNew;",
          "5423:         pWalker->eCode = 1;",
          "5424:       }",
          "",
          "[Removed Lines]",
          "5421:         pNew = sqlite3ExprAnd(db, pWhere, pNew);",
          "",
          "[Added Lines]",
          "5421:         pNew = sqlite3ExprAnd(pWalker->pParse, pWhere, pNew);",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "3492:   \"   Options:\",",
          "3493:   \"     --preserve-rowids      Include ROWID values in the output\",",
          "3494:   \"     --newlines             Allow unescaped newline characters in output\",",
          "3496:   \".echo on|off             Turn command echo on or off\",",
          "3497:   \".eqp on|off|full|...     Enable or disable automatic EXPLAIN QUERY PLAN\",",
          "3498:   \"   Other Modes:\",",
          "",
          "[Removed Lines]",
          "3495:   \"   TABLE is LIKE pattern for the tables to dump\",",
          "",
          "[Added Lines]",
          "3495:   \"   TABLE is a LIKE pattern for the tables to dump\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3861:   int j, k;",
          "3862:   int rc;",
          "3863:   FILE *in;",
          "3865:   char zLine[1000];",
          "3866:   if( p->zDbFilename ){",
          "3867:     in = fopen(p->zDbFilename, \"r\");",
          "",
          "[Removed Lines]",
          "3864:   unsigned char x[16];",
          "",
          "[Added Lines]",
          "3864:   unsigned int x[16];",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3899:     if( strncmp(zLine, \"| end \", 6)==0 ){",
          "3900:       break;",
          "3901:     }",
          "3904:                 &j, &x[0], &x[1], &x[2], &x[3], &x[4], &x[5], &x[6], &x[7],",
          "3905:                 &x[8], &x[9], &x[10], &x[11], &x[12], &x[13], &x[14], &x[15]);",
          "3906:     if( rc==17 ){",
          "3907:       k = iOffset+j;",
          "3908:       if( k+16<=n ){",
          "3910:       }",
          "3911:     }",
          "3912:   }",
          "",
          "[Removed Lines]",
          "3902:     rc = sscanf(zLine,\"| %d: %hhx %hhx %hhx %hhx %hhx %hhx %hhx %hhx\"",
          "3903:                       \"  %hhx %hhx %hhx %hhx %hhx %hhx %hhx %hhx\",",
          "3909:         memcpy(a+k, x, 16);",
          "",
          "[Added Lines]",
          "3902:     rc = sscanf(zLine,\"| %d: %x %x %x %x %x %x %x %x %x %x %x %x %x %x %x %x\",",
          "3908:         int ii;",
          "3909:         for(ii=0; ii<16; ii++) a[k+ii] = x[ii]&0xff;",
          "",
          "---------------"
        ],
        "src/sqliteInt.h||src/sqliteInt.h": [
          "File: src/sqliteInt.h -> src/sqliteInt.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "2545: #define ExprHasAllProperty(E,P)  (((E)->flags&(P))==(P))",
          "2546: #define ExprSetProperty(E,P)     (E)->flags|=(P)",
          "2547: #define ExprClearProperty(E,P)   (E)->flags&=~(P)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2550: #define ExprAlwaysTrue(E)   (((E)->flags&(EP_FromJoin|EP_IsTrue))==EP_IsTrue)",
          "2551: #define ExprAlwaysFalse(E)  (((E)->flags&(EP_FromJoin|EP_IsFalse))==EP_IsFalse)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3854: void sqlite3ExprAttachSubtrees(sqlite3*,Expr*,Expr*,Expr*);",
          "3855: Expr *sqlite3PExpr(Parse*, int, Expr*, Expr*);",
          "3856: void sqlite3PExprAddSelect(Parse*, Expr*, Select*);",
          "3858: Expr *sqlite3ExprFunction(Parse*,ExprList*, Token*, int);",
          "3859: void sqlite3ExprAssignVarNumber(Parse*, Expr*, u32);",
          "3860: void sqlite3ExprDelete(sqlite3*, Expr*);",
          "",
          "[Removed Lines]",
          "3857: Expr *sqlite3ExprAnd(sqlite3*,Expr*, Expr*);",
          "",
          "[Added Lines]",
          "3861: Expr *sqlite3ExprAnd(Parse*,Expr*, Expr*);",
          "3862: Expr *sqlite3ExprSimplifiedAndOr(Expr*);",
          "",
          "---------------"
        ],
        "src/test1.c||src/test1.c": [
          "File: src/test1.c -> src/test1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7699:   int iOffset = 0;",
          "7700:   int j, k;",
          "7701:   int rc;",
          "7703:   if( objc!=2 ){",
          "7704:     Tcl_WrongNumArgs(interp, 1, objv, \"HEXDB\");",
          "7705:     return TCL_ERROR;",
          "",
          "[Removed Lines]",
          "7702:   unsigned char x[16];",
          "",
          "[Added Lines]",
          "7702:   unsigned int x[16];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7731:       iOffset = k;",
          "7732:       continue;",
          "7733:     }",
          "7736:                 &j, &x[0], &x[1], &x[2], &x[3], &x[4], &x[5], &x[6], &x[7],",
          "7737:                 &x[8], &x[9], &x[10], &x[11], &x[12], &x[13], &x[14], &x[15]);",
          "7738:     if( rc==17 ){",
          "7739:       k = iOffset+j;",
          "7740:       if( k+16<=n ){",
          "7742:       }",
          "7743:       continue;",
          "7744:     }",
          "",
          "[Removed Lines]",
          "7734:     rc = sscanf(zIn+i,\"| %d: %hhx %hhx %hhx %hhx %hhx %hhx %hhx %hhx\"",
          "7735:                       \"  %hhx %hhx %hhx %hhx %hhx %hhx %hhx %hhx\",",
          "7741:         memcpy(a+k, x, 16);",
          "",
          "[Added Lines]",
          "7734:     rc = sscanf(zIn+i,\"| %d: %x %x %x %x %x %x %x %x %x %x %x %x %x %x %x %x\",",
          "7740:         int ii;",
          "7741:         for(ii=0; ii<16; ii++) a[k+ii] = x[ii]&0xff;",
          "",
          "---------------"
        ],
        "src/util.c||src/util.c": [
          "File: src/util.c -> src/util.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "918: u8 sqlite3GetVarint(const unsigned char *p, u64 *v){",
          "919:   u32 a,b,s;",
          "926:     return 1;",
          "927:   }",
          "938:     return 2;",
          "939:   }",
          "",
          "[Removed Lines]",
          "921:   a = *p;",
          "923:   if (!(a&0x80))",
          "924:   {",
          "929:   p++;",
          "930:   b = *p;",
          "932:   if (!(b&0x80))",
          "933:   {",
          "934:     a &= 0x7f;",
          "935:     a = a<<7;",
          "936:     a |= b;",
          "",
          "[Added Lines]",
          "921:   if( ((signed char*)p)[0]>=0 ){",
          "925:   if( ((signed char*)p)[1]>=0 ){",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "942:   assert( SLOT_2_0 == ((0x7f<<14) | (0x7f)) );",
          "943:   assert( SLOT_4_2_0 == ((0xfU<<28) | (0x7f<<14) | (0x7f)) );",
          "947:   a |= *p;",
          "949:   if (!(a&0x80))",
          "",
          "[Removed Lines]",
          "945:   p++;",
          "946:   a = a<<14;",
          "",
          "[Added Lines]",
          "934:   a = ((u32)p[0])<<14;",
          "935:   b = p[1];",
          "936:   p += 2;",
          "",
          "---------------"
        ],
        "src/vacuum.c||src/vacuum.c": [
          "File: src/vacuum.c -> src/vacuum.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "106:   Vdbe *v = sqlite3GetVdbe(pParse);",
          "107:   int iDb = 0;",
          "108:   if( v==0 ) goto build_vacuum_end;",
          "109:   if( pNm ){",
          "110: #ifndef SQLITE_BUG_COMPATIBLE_20160819",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "109:   if( pParse->nErr ) goto build_vacuum_end;",
          "",
          "---------------"
        ],
        "src/vdbemem.c||src/vdbemem.c": [
          "File: src/vdbemem.c -> src/vdbemem.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1511:   }else if( op==TK_NULL ){",
          "1512:     pVal = valueNew(db, pCtx);",
          "1513:     if( pVal==0 ) goto no_mem;",
          "1515:   }",
          "1516: #ifndef SQLITE_OMIT_BLOB_LITERAL",
          "1517:   else if( op==TK_BLOB ){",
          "",
          "[Removed Lines]",
          "1514:     sqlite3VdbeMemNumerify(pVal);",
          "",
          "[Added Lines]",
          "1514:     sqlite3VdbeMemSetNull(pVal);",
          "",
          "---------------"
        ],
        "src/wal.c||src/wal.c": [
          "File: src/wal.c -> src/wal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2908:     }",
          "2909:     nCollide = HASHTABLE_NSLOT;",
          "2910:     for(iKey=walHash(pgno); sLoc.aHash[iKey]; iKey=walNextHash(iKey)){",
          "2914:         assert( iFrame>iRead || CORRUPT_DB );",
          "2915:         iRead = iFrame;",
          "2916:       }",
          "",
          "[Removed Lines]",
          "2911:       u32 iFrame = sLoc.aHash[iKey] + sLoc.iZero;",
          "2912:       if( iFrame<=iLast && iFrame>=pWal->minFrame",
          "2913:        && sLoc.aPgno[sLoc.aHash[iKey]]==pgno ){",
          "",
          "[Added Lines]",
          "2911:       u32 iH = sLoc.aHash[iKey];",
          "2912:       u32 iFrame = iH + sLoc.iZero;",
          "2913:       if( iFrame<=iLast && iFrame>=pWal->minFrame && sLoc.aPgno[iH]==pgno ){",
          "",
          "---------------"
        ],
        "src/where.c||src/where.c": [
          "File: src/where.c -> src/where.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "737:      && (pTerm->wtFlags & TERM_VIRTUAL)==0",
          "738:      && !ExprHasProperty(pExpr, EP_FromJoin)",
          "739:      && sqlite3ExprIsTableConstant(pExpr, pSrc->iCursor) ){",
          "741:                                 sqlite3ExprDup(pParse->db, pExpr, 0));",
          "742:     }",
          "743:     if( termCanDriveIndex(pTerm, pSrc, notReady) ){",
          "",
          "[Removed Lines]",
          "740:       pPartial = sqlite3ExprAnd(pParse->db, pPartial,",
          "",
          "[Added Lines]",
          "740:       pPartial = sqlite3ExprAnd(pParse, pPartial,",
          "",
          "---------------"
        ],
        "src/wherecode.c||src/wherecode.c": [
          "File: src/wherecode.c -> src/wherecode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "999:     }",
          "1003:   }",
          "1004:   if( pExpr!=0 ){",
          "1005:     sWalker.xExprCallback = codeCursorHintFixExpr;",
          "",
          "[Removed Lines]",
          "1002:     pExpr = sqlite3ExprAnd(db, pExpr, sqlite3ExprDup(db, pTerm->pExpr, 0));",
          "",
          "[Added Lines]",
          "1002:     pExpr = sqlite3ExprAnd(pParse, pExpr, sqlite3ExprDup(db, pTerm->pExpr, 0));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1964:         if( (pWC->a[iTerm].eOperator & WO_ALL)==0 ) continue;",
          "1965:         testcase( pWC->a[iTerm].wtFlags & TERM_ORINFO );",
          "1966:         pExpr = sqlite3ExprDup(db, pExpr, 0);",
          "1968:       }",
          "1969:       if( pAndExpr ){",
          "",
          "[Removed Lines]",
          "1967:         pAndExpr = sqlite3ExprAnd(db, pAndExpr, pExpr);",
          "",
          "[Added Lines]",
          "1967:         pAndExpr = sqlite3ExprAnd(pParse, pAndExpr, pExpr);",
          "",
          "---------------"
        ],
        "test/altertab.test||test/altertab.test": [
          "File: test/altertab.test -> test/altertab.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "559:   }",
          "560: }",
          "562: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "562: #-------------------------------------------------------------------------",
          "563: reset_db",
          "564: do_execsql_test 17.0 {",
          "565:   CREATE TABLE sqlite1234 (id integer);",
          "566:   ALTER TABLE sqlite1234 RENAME TO User;",
          "567:   SELECT name, sql FROM sqlite_master WHERE sql IS NOT NULL;",
          "568: } {",
          "569:   User {CREATE TABLE \"User\" (id integer)}",
          "570: }",
          "",
          "---------------"
        ],
        "test/corruptL.test||test/corruptL.test": [
          "File: test/corruptL.test -> test/corruptL.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "838:   INSERT INTO t3 SELECT * FROM t2;",
          "839: } {1 {database disk image is malformed}}",
          "841: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "841: #-------------------------------------------------------------------------",
          "842: reset_db",
          "843: do_test 9.0 {",
          "844:   sqlite3 db {}",
          "845:   db deserialize [decode_hexdb {",
          "846: | size 8192 pagesize 4096 filename crash-ab10597e4e1c32.db",
          "847: | page 1 offset 0",
          "848: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "849: |     16: 10 00 01 01 00 40 20 20 00 00 00 00 00 00 00 00   .....@  ........",
          "850: |     96: 00 00 00 00 0d 00 00 00 01 0f d6 00 0f d6 00 00   ................",
          "851: |   4048: 00 00 00 00 00 00 28 01 06 17 11 11 01 3d 74 61   ......(......=ta",
          "852: |   4064: 62 6c 65 74 31 74 31 02 43 52 45 41 54 45 20 54   blet1t1.CREATE T",
          "853: |   4080: 41 42 4c 45 20 74 31 28 61 2c 62 2c 63 2c 64 29   ABLE t1(a,b,c,d)",
          "854: | page 2 offset 4096",
          "855: |      0: 0d 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................",
          "856: | end crash-ab10597e4e1c32.db",
          "857: }]} {}",
          "859: do_execsql_test 9.1 {",
          "860:   SAVEPOINT one;",
          "861: }",
          "862: do_catchsql_test 9.3 {",
          "863:   INSERT INTO t1(b,c) VALUES(5,6);",
          "864: } {1 {database disk image is malformed}}",
          "865: do_execsql_test 9.3 {",
          "866:   ROLLBACK TO one;",
          "867: }",
          "",
          "---------------"
        ],
        "test/fts3corrupt4.test||test/fts3corrupt4.test": [
          "File: test/fts3corrupt4.test -> test/fts3corrupt4.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "3915:   SELECT 'FyzLy'FROM t1 WHERE t1 MATCH 'j';",
          "3916: } {1 {database disk image is malformed}}",
          "3918: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3918: #-------------------------------------------------------------------------",
          "3919: reset_db",
          "3920: do_test 24.0 {",
          "3921:   sqlite3 db {}",
          "3922:   db deserialize [decode_hexdb {",
          "3923: .open --hexdb",
          "3924: | size 28672 pagesize 4096 filename crash-369d042958c29b.db",
          "3925: | page 1 offset 0",
          "3926: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "3927: |     16: 10 00 01 01 00 40 20 20 00 00 03 10 00 00 00 00   .....@  ........",
          "3928: |     96: 00 00 00 00 0d 0e b1 00 06 0d a4 00 0f 8d 0f 21   ...............!",
          "3929: |    112: 0e b9 0d c8 0e 7e 0d a4 00 00 00 00 00 00 00 00   .....~..........",
          "3930: |   3488: 00 00 00 00 22 07 06 17 11 11 01 31 74 61 62 6c   ...........1tabl",
          "3931: |   3504: 65 74 32 74 32 07 43 52 45 41 54 45 20 54 41 42   et2t2.CREATE TAB",
          "3932: |   3520: 4c 45 20 74 32 28 78 29 81 33 05 07 17 1f 1f 01   LE t2(x).3......",
          "3933: |   3536: 82 35 74 61 62 6c 65 74 31 5f 73 65 67 64 69 72   .5tablet1_segdir",
          "3934: |   3552: 74 31 5f 73 65 67 64 69 72 05 43 52 45 41 54 45   t1_segdir.CREATE",
          "3935: |   3568: 20 54 41 42 4c 45 20 27 74 31 5f 73 65 67 64 69    TABLE 't1_segdi",
          "3936: |   3584: 72 27 28 6c 65 76 65 6c 20 49 4e 54 45 47 45 52   r'(level INTEGER",
          "3937: |   3600: 2c 69 64 78 20 49 4e 54 45 47 45 52 2c 73 74 61   ,idx INTEGER,sta",
          "3938: |   3616: 72 74 5f 62 6c 6f 63 6b 20 49 4e 54 45 47 45 52   rt_block INTEGER",
          "3939: |   3632: 2c 6c 65 61 76 65 73 5f 65 6e 64 5f 62 6c 6f 63   ,leaves_end_bloc",
          "3940: |   3648: 6b 20 49 4e 54 45 47 45 52 2c 65 6e 64 5f 62 6c   k INTEGER,end_bl",
          "3941: |   3664: 6f 63 6b 20 49 4e 54 45 47 45 52 2c 72 6f 6f 74   ock INTEGER,root",
          "3942: |   3680: 20 42 4c 4f 42 2c 50 52 49 4d 41 52 59 20 4b 45    BLOB,PRIMARY KE",
          "3943: |   3696: 59 28 6c 65 76 65 6c 2c 20 69 64 78 29 29 31 06   Y(level, idx))1.",
          "3944: |   3712: 06 17 45 1f 01 00 69 6e 64 65 78 73 71 6c 69 74   ..E...indexsqlit",
          "3945: |   3728: 65 5f 61 75 74 6f 69 6e 64 65 78 5f 74 31 5f 73   e_autoindex_t1_s",
          "3946: |   3744: 65 67 64 69 72 5f 31 74 31 5f 73 65 67 64 69 72   egdir_1t1_segdir",
          "3947: |   3760: 06 0f c7 00 08 00 10 00 00 66 04 07 17 23 23 01   .........f...##.",
          "3948: |   3776: 81 13 74 61 62 6c 65 74 31 5f 73 65 67 6d 65 6e   ..tablet1_segmen",
          "3949: |   3792: 64 73 74 31 5f 73 65 67 6d 65 6e 74 73 04 43 52   dst1_segments.CR",
          "3950: |   3808: 45 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 73   EATE TABLE 't1_s",
          "3951: |   3824: 65 67 6d 65 6e 74 73 27 28 62 6c 6f 63 6b 69 64   egments'(blockid",
          "3952: |   3840: 20 49 4e 54 45 47 45 52 20 50 52 49 4d 41 52 59    INTEGER PRIMARY",
          "3953: |   3856: 20 4b 45 59 2c 20 62 6c 6f 63 6b 20 42 4c 4f 42    KEY, block BLOB",
          "3954: |   3872: 29 6a 03 07 17 21 21 01 81 1f 74 61 62 6c 65 74   )j...!!...tablet",
          "3955: |   3888: 31 4f 63 6f 6e 74 65 6e 74 74 31 5f 63 6f 6e 74   1Ocontentt1_cont",
          "3956: |   3904: 65 6e 74 03 43 52 45 41 54 45 20 54 41 42 4c 45   ent.CREATE TABLE",
          "3957: |   3920: 20 27 74 31 5f 63 6f 6e 74 65 6e 74 27 28 64 6f    't1_content'(do",
          "3958: |   3936: 63 69 64 20 49 4e 54 45 47 45 52 20 50 52 39 4d   cid INTEGER PR9M",
          "3959: |   3952: 41 52 59 20 4b 45 59 2c 20 27 63 30 61 27 2c 20   ARY KEY, 'c0a',",
          "3960: |   3968: 27 63 31 62 27 2c 20 27 63 32 63 27 29 38 02 06   'c1b', 'c2c')8..",
          "3961: |   3984: 17 11 11 08 5f 74 61 62 6c 65 74 31 74 31 43 52   ...._tablet1t1CR",
          "3962: |   4000: 45 41 54 45 20 56 49 52 54 55 41 4c 20 54 41 42   EATE VIRTUAL TAB",
          "3963: |   4016: 4c 45 20 74 31 20 55 53 49 4e 47 20 66 74 73 33   LE t1 USING fts3",
          "3964: |   4032: 28 61 2c 62 2c 63 29 00 00 00 00 00 00 00 00 00   (a,b,c).........",
          "3965: | page 3 offset 8192",
          "3966: |      0: 0d 00 00 00 26 0b 48 0e 0f d8 0f af 0f 86 0f 74   ....&.H........t",
          "3967: |     16: 0f 61 0f 4e 0f 2f 0f 0f 0e ef 0e d7 0e be 0e a5   .a.N./..........",
          "3968: |     32: 0e 8d 0e 74 0e 5b 0e 40 0e 24 0e 08 0d ef 0d d5   ...t.[.@.$......",
          "3969: |     48: 0d bb 0d a0 0e 94 03 28 0d 4f 0d 35 0d 1b 05 0b   .......(.O.5....",
          "3970: |     64: 0c da 0c b9 0c 99 0c 78 0c 57 0c 3e 0c 24 0c 0a   .......x.W.>.$..",
          "3971: |   2880: 00 00 00 00 00 00 00 00 81 3f 25 06 00 72 7f 00   .........?%..r..",
          "3972: |   2896: 00 43 4f 4d 50 49 4c 45 52 3d 67 63 63 2d 35 2e   .COMPILER=gcc-5.",
          "3973: |   2912: 34 2e 30 20 32 30 31 36 30 36 30 39 20 44 55 42   4.0 20160609 DUB",
          "3974: |   2928: 55 47 20 45 4e 41 e4 7c 45 20 44 42 53 54 41 54   UG ENA.|E DBSTAT",
          "3975: |   2944: e4 d1 54 41 42 20 45 4e 41 42 4c 45 20 46 54 53   ..TAB ENABLE FTS",
          "3976: |   2960: 34 20 45 4e 41 42 4c 45 20 46 54 53 35 20 45 4e   4 ENABLE FTS5 EN",
          "3977: |   2976: 41 42 4c 45 20 47 45 4f 50 4f 4c 59 20 45 4e 41   ABLE GEOPOLY ENA",
          "3978: |   2992: 42 4c 45 20 4a 53 4f 4e 31 20 45 4e 41 42 4c 45   BLE JSON1 ENABLE",
          "3979: |   3008: 20 4d 45 4d 53 59 53 35 20 45 4e 41 42 4c 45 20    MEMSYS5 ENABLE",
          "3980: |   3024: 42 54 52 45 45 20 4d 41 58 20 4d 45 4d 4f 52 59   BTREE MAX MEMORY",
          "3981: |   3040: 3d 35 30 30 30 30 30 30 30 20 4f 4c 49 54 20 4c   =50000000 OLIT L",
          "3982: |   3056: 4f 41 43 20 45 58 54 45 4e 53 49 4f 4e 21 54 48   OAC EXTENSION!TH",
          "3983: |   3072: 52 45 41 44 53 41 46 45 3d 30 18 24 05 00 25 0f   READSAFE=0.$..%.",
          "3984: |   3088: 19 54 48 52 45 41 44 53 41 46 45 3d 30 58 42 49   .THREADSAFE=0XBI",
          "3985: |   3104: 4e 41 52 59 18 23 05 00 25 0f 19 54 48 52 45 41   NARY.#..%..THREA",
          "3986: |   3120: 44 53 41 4b 75 3d 30 58 4d 4f 43 41 53 45 17 22   DSAKu=0XMOCASE..",
          "3987: |   3136: 05 00 25 0f 17 54 48 52 45 41 44 53 41 46 46 3d   ..%..THREADSAFF=",
          "3988: |   3152: 30 58 52 54 52 49 4d 1f 21 05 00 33 0f 19 4f 4d   0XRTRIM.!..3..OM",
          "3989: |   3168: 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 52 49 4f   IT LOAD EXTENRIO",
          "3990: |   3184: 4e 58 42 49 4e 41 52 59 1f 20 05 00 33 0f 19 4f   NXBINARY. ..3..O",
          "3991: |   3200: 4d 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53 49   MIT LOAD EXTENSI",
          "3992: |   3216: 4f 4e 58 4e 4f 43 41 53 45 1e 1f 05 00 33 0f 17   ONXNOCASE....3..",
          "3993: |   3232: 4f 4d 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53   OMIT LOAD EXTENS",
          "3994: |   3248: 49 4f 4e 58 52 54 52 49 4d 1f 1e 05 00 33 0f 19   IONXRTRIM....3..",
          "3995: |   3264: 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30 30 30   MAX MEMORY=50000",
          "3996: |   3280: 30 30 30 58 42 49 4e 41 52 59 1f 1d 05 00 33 0f   000XBINARY....3.",
          "3997: |   3296: 19 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30 30   .MAX MEMORY=5000",
          "3998: |   3312: 30 30 30 30 58 4e 4f 43 41 53 45 1e 1c 05 00 33   0000XNOCASE....3",
          "3999: |   3328: 0f 17 4d 42 b8 20 4d 45 4d 4f 52 59 3d 35 30 30   ..MB. MEMORY=500",
          "4000: |   3344: 30 30 30 30 30 58 52 54 52 49 4d 18 1b 05 00 25   00000XRTRIM....%",
          "4001: |   3360: 0f 19 45 4e 41 42 4c 45 20 52 54 52 45 45 58 42   ..ENABLE RTREEXB",
          "4002: |   3376: 49 4e 41 52 59 18 1a 05 0d a5 0f 19 45 4e 41 42   INARY.......ENAB",
          "4003: |   3392: 4c 45 20 52 54 52 45 45 58 4e 4f 43 41 53 45 17   LE RTREEXNOCASE.",
          "4004: |   3408: 19 1c 00 25 0f 17 45 4e 41 42 4c 45 20 52 54 52   ...%..ENABLE RTR",
          "4005: |   3424: 45 45 58 52 54 52 49 4d 1a 18 05 00 29 0f 19 45   EEXRTRIM....)..E",
          "4006: |   3440: 4e 41 42 4c 45 20 4d 45 4d 53 59 53 35 58 42 49   NABLE MEMSYS5XBI",
          "4007: |   3456: 4e 41 52 59 1a 17 05 00 29 0f 19 45 4e 41 42 4c   NARY....)..ENABL",
          "4008: |   3472: 45 20 4d 45 4d 53 59 53 35 58 4e 4f 43 41 53 45   E MEMSYS5XNOCASE",
          "4009: |   3488: 19 16 05 00 29 0f 17 45 4e 41 42 4c 45 20 4d 45   ....)..ENABLE ME",
          "4010: |   3504: 4d 53 59 53 35 58 52 54 52 49 4d 18 14 05 01 25   MSYS5XRTRIM....%",
          "4011: |   3520: 0f 19 45 4e 12 42 4c 45 20 4a 53 4f 4e 31 58 42   ..EN.BLE JSON1XB",
          "4012: |   3536: 49 4e 41 52 59 18 14 05 00 25 09 d9 45 4e 41 42   INARY....%..ENAB",
          "4013: |   3552: 4c 45 20 4a 53 4f 3e 31 58 4e 4f 43 41 53 45 17   LE JSO>1XNOCASE.",
          "4014: |   3568: 13 05 00 25 0f 17 45 4e 40 42 4c 45 20 4a 53 4f   ...%..EN@BLE JSO",
          "4015: |   3584: 4e 31 58 52 54 52 49 4d 1a 12 05 82 29 0f 19 45   N1XRTRIM....)..E",
          "4016: |   3600: 4e 41 42 4c 45 20 47 45 4f 50 4f 4c 59 58 42 49   NABLE GEOPOLYXBI",
          "4017: |   3616: 4e 41 52 59 1a 11 05 c9 29 e8 19 46 4e 41 42 4c   NARY....)..FNABL",
          "4018: |   3632: 48 c0 47 45 4f 50 4f 4c 59 58 4e 74 43 41 53 45   H.GEOPOLYXNtCASE",
          "4019: |   3648: 19 10 05 00 29 0f 17 45 4e 41 42 4c 45 20 47 45   ....)..ENABLE GE",
          "4020: |   3664: 4f 50 4f 4c 59 58 52 54 52 49 4d 17 0f 05 00 23   OPOLYXRTRIM....#",
          "4021: |   3680: 0f 19 45 4e 41 42 4c 45 30 46 54 53 35 58 42 49   ..ENABLE0FTS5XBI",
          "4022: |   3696: 4e 41 52 59 17 0e 05 00 23 0f 19 45 4e 41 42 4c   NARY....#..ENABL",
          "4023: |   3712: 45 20 46 54 53 35 58 4e 4f 43 41 53 45 16 0e 05   E FTS5XNOCASE...",
          "4024: |   3728: 00 23 0f 17 45 4e 41 42 4c 45 20 46 54 53 35 58   .#..ENABLE FTS5X",
          "4025: |   3744: 52 54 52 49 4d 17 0c 05 00 23 0f 19 45 4e 41 42   RTRIM....#..ENAB",
          "4026: |   3760: 4c 45 20 46 54 53 34 58 42 49 4e 41 52 59 17 0b   LE FTS4XBINARY..",
          "4027: |   3776: 05 00 23 0f 19 45 4e 41 42 4c 45 20 46 54 53 34   ..#..ENABLE FTS4",
          "4028: |   3792: 58 4e 4f 43 41 53 45 16 0a 05 00 23 0f 17 45 4e   XNOCASE....#..EN",
          "4029: |   3808: 41 42 4c 45 20 46 54 53 34 58 52 54 52 49 4d 1e   ABLE FTS4XRTRIM.",
          "4030: |   3824: 09 05 00 31 0f 19 45 4e 42 42 4c 45 20 44 42 53   ...1..ENBBLE DBS",
          "4031: |   3840: 54 41 54 20 56 54 41 42 58 42 49 4e 41 52 59 1e   TAT VTABXBINARY.",
          "4032: |   3856: 08 05 00 31 0f 19 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "4033: |   3872: 54 41 54 20 56 54 41 42 58 4e 4f 43 41 53 45 1d   TAT VTABXNOCASE.",
          "4034: |   3888: 07 05 00 31 0f 17 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "4035: |   3904: 54 41 54 20 56 54 41 42 58 52 54 52 4a 4d 11 06   TAT VTABXRTRJM..",
          "4036: |   3920: 05 f0 17 0f 19 44 45 42 55 47 58 42 49 4e 41 52   .....DEBUGXBINAR",
          "4037: |   3936: 59 11 05 05 00 17 0e 19 44 45 42 55 47 58 4e 4f   Y.......DEBUGXNO",
          "4038: |   3952: 43 41 53 45 10 04 05 00 17 0f 16 44 45 42 55 47   CASE.......DEBUG",
          "4039: |   3968: 58 52 54 52 49 4d 27 03 05 00 43 0f 19 43 4f 4d   XRTRIM'...C..COM",
          "4040: |   3984: 50 49 4c 45 52 3d 67 63 63 2d 35 2e 34 2e 30 20   PILER=gcc-5.4.0",
          "4041: |   4000: 32 30 31 36 30 36 30 39 58 42 49 4e 41 52 59 27   20160609XBINARY'",
          "4042: |   4016: 02 05 00 43 0f 19 43 4f 4d 50 49 4c 45 52 3d 67   ...C..COMPILER=g",
          "4043: |   4032: 63 63 2d 35 2e 34 2e 30 20 32 30 31 36 30 36 30   cc-5.4.0 2016060",
          "4044: |   4048: 39 58 4e 4f 43 41 53 45 26 01 06 00 43 0f 17 43   9XNOCASE&...C..C",
          "4045: |   4064: 4f 4d 50 49 4b 45 52 3d 67 63 63 2d 35 2e 34 2e   OMPIKER=gcc-5.4.",
          "4046: |   4080: 30 20 32 30 31 36 30 36 40 39 58 29 54 52 49 4d   0 201606@9X)TRIM",
          "4047: | page 4 offset 12288",
          "4048: |      0: 0d 00 10 00 00 10 00 00 00 00 00 00 00 01 00 00   ................",
          "4049: | page 5 offset 16384",
          "4050: |      0: 0d 00 00 00 02 0b a0 00 0c ad 0b a0 00 00 00 00   ................",
          "4051: |   2976: 82 0a 02 08 08 09 08 08 17 84 06 30 20 32 35 33   ...........0 253",
          "4052: |   2992: 00 01 30 04 25 06 1b 00 00 08 32 30 31 36 30 36   ..0.%.....201606",
          "4053: |   3008: 30 39 03 25 07 00 00 01 34 03 25 05 00 00 01 35   09.%....4.%....5",
          "4054: |   3024: 03 25 04 00 01 07 30 30 30 30 30 30 30 03 25 1a   .%....0000000.%.",
          "4055: |   3040: 00 00 08 63 6f 6d 70 69 6c 65 72 03 25 02 00 00   ...compiler.%...",
          "4056: |   3056: 06 64 62 73 74 61 74 03 25 0a 00 01 04 65 62 75   .dbstat.%....ebu",
          "4057: |   3072: 67 03 25 08 00 00 06 65 6e 61 62 6c 65 09 25 09   g.%....enable.%.",
          "4058: |   3088: 05 04 04 04 04 04 00 01 08 78 74 65 6e 73 69 6f   .........xtensio",
          "4059: |   3104: 6e 03 25 1d 00 00 04 66 74 73 34 03 25 0d 00 03   n.%....fts4.%...",
          "4060: |   3120: 01 35 03 25 0f 00 00 03 67 63 63 03 25 03 00 01   .5.%....gcc.%...",
          "4061: |   3136: 06 65 6f 70 6f 6c 79 03 25 11 00 00 05 6a 73 6f   .eopoly.%....jso",
          "4062: |   3152: 6e 31 03 25 13 00 00 04 6c 6f 61 64 03 25 1c 00   n1.%....load.%..",
          "4063: |   3168: 00 03 6d 61 78 03 25 18 00 01 05 65 6e 6f 72 79   ..max.%....enory",
          "4064: |   3184: 03 25 19 00 03 04 ce 79 73 4d 03 25 15 00 00 04   .%.....ysM.%....",
          "4065: |   3200: 6f 6d 69 74 03 25 1b 00 00 05 72 74 72 65 65 03   omit.%....rtree.",
          "4066: |   3216: 25 17 00 00 0a 74 68 72 65 61 64 73 61 66 65 03   %....threadsafe.",
          "4067: |   3232: 25 0e 00 00 04 76 74 61 62 03 25 0b 00 86 50 01   %....vtab.%...P.",
          "4068: |   3248: 08 08 08 08 08 17 8d 12 30 20 38 33 35 00 01 30   ........0 835..0",
          "4069: |   3264: 12 01 06 00 01 06 00 01 06 00 1f 03 00 01 03 09   ................",
          "4070: |   3280: 51 03 00 00 08 32 30 31 36 30 36 30 39 09 01 07   Q....20160609...",
          "4071: |   3296: 00 01 07 00 01 07 00 00 01 34 09 01 05 00 01 05   .........4......",
          "4072: |   3312: 00 01 05 00 00 01 35 09 01 04 00 01 04 00 01 04   ......5.........",
          "4073: |   3328: 00 01 07 30 30 30 30 30 30 30 09 1c 04 00 01 04   ...0000000......",
          "4074: |   3344: 00 01 04 00 00 06 62 69 6e 61 72 79 3c 03 01 02   ......binary<...",
          "4075: |   3360: 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02   ................",
          "4076: |   3376: 00 03 01 02 02 00 02 f1 02 02 00 03 01 02 02 00   ................",
          "4077: |   3392: 03 01 02 02 00 03 01 02 02 00 03 01 02 02 00 03   ................",
          "4078: |   3408: 01 02 02 00 03 01 02 02 00 00 08 63 6f 6d 70 69   ...........compi",
          "4079: |   3424: 6c 65 72 09 01 02 00 01 02 00 01 02 00 00 06 67   ler............g",
          "4080: |   3440: d2 73 74 61 74 09 07 03 00 01 03 00 01 03 00 01   .stat...........",
          "4081: |   3456: 04 65 62 75 67 09 04 02 00 01 02 00 01 02 00 00   .ebug...........",
          "4082: |   3472: 06 65 6e 6f 82 6c 65 3f 07 02 00 01 02 00 01 02   .eno.le?........",
          "4083: |   3488: b0 01 02 00 01 02 00 11 02 00 01 02 00 01 02 00   ................",
          "4084: |   3504: 01 02 00 01 02 00 01 02 00 01 a6 00 01 02 00 01   ................",
          "4085: |   3520: 02 05 51 02 00 01 02 00 01 02 00 01 02 00 01 02   ..Q.............",
          "4086: |   3536: 00 01 02 00 01 02 00 01 08 78 74 65 6e 73 69 6f   .........xtensio",
          "4087: |   3552: 6e 09 1f 04 00 01 04 00 00 04 00 00 04 66 74 73   n............fts",
          "4088: |   3568: 34 09 0a 03 00 01 03 00 01 03 00 03 01 35 09 0d   4............5..",
          "4089: |   3584: 03 00 01 03 00 01 03 00 00 03 67 63 63 09 01 03   ..........gcc...",
          "4090: |   3600: 00 01 03 00 01 03 00 01 06 65 6f 70 73 6c 79 09   .........eopsly.",
          "4091: |   3616: 10 03 00 01 03 00 01 03 00 00 05 6a 73 6f 6e 31   ...........json1",
          "4092: |   3632: 09 13 03 00 01 03 00 01 03 00 00 04 6c 6f 61 64   ............load",
          "4093: |   3648: 09 1f 03 00 01 03 00 01 03 00 00 03 6d 61 78 09   ............max.",
          "4094: |   3664: 1c 02 00 01 02 00 01 02 00 01 05 65 6d 6f 72 79   ...........emory",
          "4095: |   3680: 09 1c 03 00 01 03 00 01 03 00 03 04 73 79 73 35   ............sys5",
          "4096: |   3696: 09 16 03 00 01 03 00 01 03 00 00 06 6e 6f 63 61   ............noca",
          "4097: |   3712: 73 65 3c 02 01 02 02 00 03 01 12 02 00 03 01 02   se<.............",
          "4098: |   3728: 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02   ................",
          "4099: |   3744: 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02 00   ................",
          "4100: |   3760: 03 01 02 02 00 03 01 02 02 00 03 01 02 02 00 00   ................",
          "4101: |   3776: 04 6f 6d 69 74 09 1f 02 00 01 02 00 01 02 00 00   .omit...........",
          "4102: |   3792: 05 72 74 72 65 65 09 19 03 00 01 03 00 01 03 00   .rtree..........",
          "4103: |   3808: 03 02 69 6d 3c 01 01 02 02 00 03 01 02 02 00 03   ..im<...........",
          "4104: |   3824: 01 02 02 00 03 01 02 02 00 03 01 02 02 00 03 01   ................",
          "4105: |   3840: 02 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02   ................",
          "4106: |   3856: 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02   ................",
          "4107: |   3872: 00 00 0a 74 68 72 65 61 64 73 61 66 65 09 22 02   ...threadsafe...",
          "4108: |   3888: 00 01 02 00 01 02 00 00 04 76 74 61 62 09 07 04   .........vtab...",
          "4109: |   3904: 00 01 04 00 01 03 ff ff 01 78 b4 01 01 01 01 02   .........x......",
          "4110: |   3920: 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00   ................",
          "4111: |   3936: 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00 01   ................",
          "4112: |   3952: 01 01 02 00 01 01 01 07 30 01 01 01 02 00 01 01   ........0.......",
          "4113: |   3968: 01 02 00 11 01 01 02 00 01 01 01 02 00 11 01 01   ................",
          "4114: |   3984: 02 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02   ................",
          "4115: |   4000: 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00   ................",
          "4116: |   4016: 01 01 01 01 ff 01 01 01 02 00 01 01 01 02 00 01   ................",
          "4117: |   4032: 01 01 02 00 01 01 01 02 00 01 01 01 02 00 01 01   ................",
          "4118: |   4048: 01 02 00 01 01 09 c2 00 01 01 01 02 00 01 01 01   ................",
          "4119: |   4064: 02 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02   ................",
          "4120: |   4080: 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00   ................",
          "4121: | page 6 offset 20480",
          "4122: |      0: 0a 00 00 00 02 0f f5 00 0f fb 0f f5 00 00 00 00   ................",
          "4123: |   4080: 00 00 00 00 00 05 04 08 09 01 02 04 04 08 08 09   ................",
          "4124: | page 7 offset 24576",
          "4125: |      0: 0d 00 00 00 05 0f b8 00 0e f4 0f e9 10 d6 0f c7   ................",
          "4126: |   4016: 00 00 00 00 00 00 00 00 0d 05 02 23 61 75 74 6f   ...........#auto",
          "4127: |   4032: 6d 65 72 67 65 3d 35 0d 04 02 23 6d 65 72 67 65   merge=5...#merge",
          "4128: |   4048: 3d 31 00 00 00 00 00 00 00 00 00 00 00 00 00 00   =1..............",
          "4129: | end crash-369d042958c29b.db",
          "4130: }]} {}",
          "4132: do_catchsql_test 24.1 {",
          "4133:   WITH RECURSIVE c(x) AS (VALUES(1) UNION ALL SELECT '4hE'+x FROM c WHERE x<72)",
          "4134:     INSERT INTO t1(a) SELECT randomblob(2829) FROM c;",
          "4135: } {0 {}}",
          "4137: do_catchsql_test 24.2 {",
          "4138:   UPDATE t1 SET b=quote((true) ) WHERE t1 MATCH 'h';",
          "4139: } {0 {}}",
          "4141: do_catchsql_test 24.3 {",
          "4142:   WITH RECURSIVE c(x) AS (VALUES(1) UNION ALL SELECT 3+x FROM c WHERE x<72)",
          "4143:     INSERT INTO t1(a) SELECT randomblob(2829) FROM c;",
          "4144: } {0 {}}",
          "4146: do_catchsql_test 24.4 {",
          "4147:   WITH RECURSIVE c(x) AS (VALUES(1) UNION ALL SELECT null<<x FROM c WHERE x<72)",
          "4148:     INSERT INTO t1(a) SELECT randomblob(2829) FROM c;",
          "4149: } {0 {}}",
          "4151: do_catchsql_test 24.5 {",
          "4152:   WITH RECURSIVE c(x) AS (VALUES(1) UNION ALL SELECT 3+x FROM c WHERE x<72)",
          "4153:     INSERT INTO t1(a) SELECT randomblob(2829) FROM c;",
          "4154: } {0 {}}",
          "4156: do_catchsql_test 24.7 {",
          "4157:   INSERT INTO t1(t1) SELECT x FROM t2;",
          "4158: } {1 {database disk image is malformed}}",
          "4160: #-------------------------------------------------------------------------",
          "4161: #-------------------------------------------------------------------------",
          "4162: reset_db",
          "4163: do_test 25.0 {",
          "4164:   sqlite3 db {}",
          "4165:   db deserialize [decode_hexdb {",
          "4166: .open --hexdb",
          "4167: | size 28672 pagesize 4096 filename crash-dde9e76ed8ab2d.db",
          "4168: | page 1 offset 0",
          "4169: |      0: 53 51 4c 69 74 65 20 66 6f 72 6d 61 74 20 33 00   SQLite format 3.",
          "4170: |     16: 10 00 01 01 00 40 20 20 00 00 03 10 00 00 00 00   .....@  ........",
          "4171: |     96: 00 00 00 00 0d 0e b1 00 06 0d a4 00 0f 8d 0f 21   ...............!",
          "4172: |    112: 0e b9 0d c8 0e 7e 0d a4 00 00 00 00 00 00 00 00   .....~..........",
          "4173: |   3488: 00 00 00 00 22 07 06 17 11 11 01 31 74 61 62 6c   ...........1tabl",
          "4174: |   3504: 65 74 32 74 32 07 43 52 45 41 54 45 20 54 41 42   et2t2.CREATE TAB",
          "4175: |   3520: 4c 45 20 74 32 28 78 29 81 33 05 07 17 1f 1f 01   LE t2(x).3......",
          "4176: |   3536: 82 35 74 61 62 6c 65 74 31 5f 73 65 67 64 69 72   .5tablet1_segdir",
          "4177: |   3552: 74 31 5f 73 65 67 64 69 72 05 43 52 45 41 54 45   t1_segdir.CREATE",
          "4178: |   3568: 20 54 41 42 4c 45 20 27 74 31 5f 73 65 67 64 69    TABLE 't1_segdi",
          "4179: |   3584: 72 27 28 6c 65 76 65 6c 20 49 4e 54 45 47 45 52   r'(level INTEGER",
          "4180: |   3600: 2c 69 64 78 20 49 4e 54 45 47 45 52 2c 73 74 61   ,idx INTEGER,sta",
          "4181: |   3616: 72 74 5f 62 6c 6f 63 6b 20 49 4e 54 45 47 45 52   rt_block INTEGER",
          "4182: |   3632: 2c 6c 65 61 76 65 73 5f 65 6e 64 5f 62 6c 6f 63   ,leaves_end_bloc",
          "4183: |   3648: 6b 20 49 4e 54 45 47 45 52 2c 65 6e 64 5f 62 6c   k INTEGER,end_bl",
          "4184: |   3664: 6f 63 6b 20 49 4e 54 45 47 45 52 2c 72 6f 6f 74   ock INTEGER,root",
          "4185: |   3680: 20 42 4c 4f 42 2c 50 52 49 4d 41 52 59 20 4b 45    BLOB,PRIMARY KE",
          "4186: |   3696: 59 28 6c 65 76 65 6c 2c 20 69 64 78 29 29 31 06   Y(level, idx))1.",
          "4187: |   3712: 06 17 45 1f 01 00 69 6e 64 65 78 73 71 6c 69 74   ..E...indexsqlit",
          "4188: |   3728: 65 5f 61 75 74 6f 69 6e 64 65 78 5f 74 31 5f 73   e_autoindex_t1_s",
          "4189: |   3744: 65 67 64 69 72 5f 31 74 31 5f 73 65 67 64 69 72   egdir_1t1_segdir",
          "4190: |   3760: 06 0f c7 00 08 00 00 00 00 66 04 07 17 23 23 01   .........f...##.",
          "4191: |   3776: 81 13 74 61 62 6c 65 74 31 5f 73 65 67 6d 65 6e   ..tablet1_segmen",
          "4192: |   3792: 64 73 74 31 5f 73 65 67 6d 65 6e 74 73 04 43 52   dst1_segments.CR",
          "4193: |   3808: 45 41 54 45 20 54 41 42 4c 45 20 27 74 31 5f 73   EATE TABLE 't1_s",
          "4194: |   3824: 65 67 6d 65 6e 74 73 27 28 62 6c 6f 63 6b 69 64   egments'(blockid",
          "4195: |   3840: 20 49 4e 54 45 47 45 52 20 50 52 49 4d 41 52 59    INTEGER PRIMARY",
          "4196: |   3856: 20 4b 45 59 2c 20 62 6c 6f 63 6b 20 42 4c 4f 42    KEY, block BLOB",
          "4197: |   3872: 29 6a 03 07 17 21 21 01 81 1f 74 61 62 6c 65 74   )j...!!...tablet",
          "4198: |   3888: 31 5f 63 6f 6e 74 65 6e 74 74 31 5f 63 6f 6e 74   1_contentt1_cont",
          "4199: |   3904: 65 6e 74 03 43 52 45 41 54 45 20 54 41 42 4c 45   ent.CREATE TABLE",
          "4200: |   3920: 20 27 74 31 5f 63 6f 6e 74 65 6e 74 27 28 64 6f    't1_content'(do",
          "4201: |   3936: 63 69 64 20 49 4e 54 45 47 45 52 20 50 52 39 4d   cid INTEGER PR9M",
          "4202: |   3952: 41 52 59 20 4b 45 59 2c 20 27 63 30 61 27 2c 20   ARY KEY, 'c0a',",
          "4203: |   3968: 27 63 31 62 27 2c 20 27 63 32 63 27 29 38 02 06   'c1b', 'c2c')8..",
          "4204: |   3984: 17 11 11 08 5f 74 61 62 6c 65 74 31 74 31 43 52   ...._tablet1t1CR",
          "4205: |   4000: 45 41 54 45 20 56 49 52 54 55 41 4c 20 54 41 42   EATE VIRTUAL TAB",
          "4206: |   4016: 4c 45 20 74 31 20 55 53 49 4e 47 20 66 74 73 33   LE t1 USING fts3",
          "4207: |   4032: 28 61 2c 62 2c 63 29 00 00 00 00 00 00 00 00 00   (a,b,c).........",
          "4208: | page 3 offset 8192",
          "4209: |      0: 0d 00 00 00 26 0b 48 0e 0f d8 0f af 0f 86 0f 74   ....&.H........t",
          "4210: |     16: 0f 61 0f 4e 0f 2f 0f 0f 0e ef 0e d7 0e be 0e a5   .a.N./..........",
          "4211: |     32: 0e 8d 0e 74 0e 5b 0e 40 0e 24 0e 08 0d ef 0d d5   ...t.[.@.$......",
          "4212: |     48: 0d bb 0d a0 0e 94 03 28 0d 4f 0d 35 0d 1b 05 0b   .......(.O.5....",
          "4213: |     64: 0c da 0c b9 0c 99 0c 78 0c 57 0c 3e 0c 24 0c 0a   .......x.W.>.$..",
          "4214: |   2880: 00 00 00 00 00 00 00 00 81 3f 25 06 00 72 7f 00   .........?%..r..",
          "4215: |   2896: 00 43 4f 4d 50 49 4c 45 52 3d 67 63 63 2d 35 2e   .COMPILER=gcc-5.",
          "4216: |   2912: 34 2e 30 20 32 30 31 36 30 36 30 39 20 44 55 42   4.0 20160609 DUB",
          "4217: |   2928: 55 47 20 45 4e 41 e4 7c 45 20 44 42 53 54 41 54   UG ENA.|E DBSTAT",
          "4218: |   2944: e4 46 54 41 42 20 45 4e 41 42 4c 45 20 46 54 53   .FTAB ENABLE FTS",
          "4219: |   2960: 34 20 45 4e 41 42 4c 45 20 46 54 53 35 20 45 4e   4 ENABLE FTS5 EN",
          "4220: |   2976: 41 42 4c 45 20 47 45 4f 50 4f 4c 59 20 45 4e 41   ABLE GEOPOLY ENA",
          "4221: |   2992: 42 4c 45 20 4a 53 4f 4e 31 20 45 4e 41 42 4c 45   BLE JSON1 ENABLE",
          "4222: |   3008: 20 4d 45 4d 53 59 53 35 20 45 4e 41 42 4c 45 20    MEMSYS5 ENABLE",
          "4223: |   3024: 42 54 52 45 45 20 4d 41 58 20 4d 45 4d 4f 52 59   BTREE MAX MEMORY",
          "4224: |   3040: 3d 35 30 30 30 30 30 30 30 20 4f 4c 49 54 20 4c   =50000000 OLIT L",
          "4225: |   3056: 4f 41 43 20 45 58 54 45 4e 53 49 4f 4e 21 54 48   OAC EXTENSION!TH",
          "4226: |   3072: 52 45 41 44 53 41 46 45 3d 30 18 24 05 00 25 0f   READSAFE=0.$..%.",
          "4227: |   3088: 19 54 48 52 45 41 44 53 41 46 45 3d 30 58 42 49   .THREADSAFE=0XBI",
          "4228: |   3104: 4e 41 52 59 18 23 05 00 25 0f 19 54 48 52 45 41   NARY.#..%..THREA",
          "4229: |   3120: 44 53 41 4b 75 3d 30 58 4d 4f 43 41 53 45 17 22   DSAKu=0XMOCASE..",
          "4230: |   3136: 05 00 25 0f 17 54 48 52 45 41 44 53 41 46 46 3d   ..%..THREADSAFF=",
          "4231: |   3152: 30 58 52 54 52 49 4d 1f 21 05 00 33 0f 19 4f 4d   0XRTRIM.!..3..OM",
          "4232: |   3168: 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 52 49 4f   IT LOAD EXTENRIO",
          "4233: |   3184: 4e 58 42 49 4e 41 52 59 1f 20 05 00 33 0f 19 4f   NXBINARY. ..3..O",
          "4234: |   3200: 4d 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53 49   MIT LOAD EXTENSI",
          "4235: |   3216: 4f 4e 58 4e 4f 43 41 53 45 1e 1f 05 00 33 0f 17   ONXNOCASE....3..",
          "4236: |   3232: 4f 4d 49 54 20 4c 4f 41 44 20 45 58 54 45 4e 53   OMIT LOAD EXTENS",
          "4237: |   3248: 49 4f 4e 58 52 54 52 49 4d 1f 1e 05 00 33 0f 19   IONXRTRIM....3..",
          "4238: |   3264: 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30 30 30   MAX MEMORY=50000",
          "4239: |   3280: 30 30 30 58 42 49 4e 41 52 59 1f 1d 05 00 33 0f   000XBINARY....3.",
          "4240: |   3296: 19 4d 41 58 20 4d 45 4d 4f 52 59 3d 35 30 30 30   .MAX MEMORY=5000",
          "4241: |   3312: 30 30 30 30 58 4e 4f 43 41 53 45 1e 1c 05 00 33   0000XNOCASE....3",
          "4242: |   3328: 0f 17 4d 42 b8 20 4d 45 4d 4f 52 59 3d 35 30 30   ..MB. MEMORY=500",
          "4243: |   3344: 30 30 30 30 30 58 52 54 52 49 4d 18 1b 05 00 25   00000XRTRIM....%",
          "4244: |   3360: 0f 19 45 4e 41 42 4c 45 20 52 54 52 45 45 58 42   ..ENABLE RTREEXB",
          "4245: |   3376: 49 4e 41 52 59 18 1a 05 0d a5 0f 19 45 4e 41 42   INARY.......ENAB",
          "4246: |   3392: 4c 45 20 52 54 52 45 45 58 4e 4f 43 41 53 45 17   LE RTREEXNOCASE.",
          "4247: |   3408: 19 1c 00 25 0f 17 45 4e 41 42 4c 45 20 52 54 52   ...%..ENABLE RTR",
          "4248: |   3424: 45 45 58 52 54 52 49 4d 1a 18 05 00 29 0f 19 45   EEXRTRIM....)..E",
          "4249: |   3440: 4e 41 42 4c 45 20 4d 45 4d 53 59 53 35 58 42 49   NABLE MEMSYS5XBI",
          "4250: |   3456: 4e 41 52 59 1a 17 05 00 29 0f 19 45 4e 41 42 4c   NARY....)..ENABL",
          "4251: |   3472: 45 20 4d 45 4d 53 59 53 35 58 4e 4f 43 41 53 45   E MEMSYS5XNOCASE",
          "4252: |   3488: 19 16 05 00 29 0f 17 45 4e 41 42 4c 45 20 4d 45   ....)..ENABLE ME",
          "4253: |   3504: 4d 53 59 53 35 58 52 54 52 49 4d 18 14 05 01 25   MSYS5XRTRIM....%",
          "4254: |   3520: 0f 19 45 4e 12 42 4c 45 20 4a 53 4f 4e 31 58 42   ..EN.BLE JSON1XB",
          "4255: |   3536: 49 4e 41 52 59 18 14 05 00 25 09 d9 45 4e 41 42   INARY....%..ENAB",
          "4256: |   3552: 4c 45 20 4a 53 4f 3e 31 58 4e 4f 43 41 53 45 17   LE JSO>1XNOCASE.",
          "4257: |   3568: 13 05 00 25 0f 17 45 4e 40 42 4c 45 20 4a 53 4f   ...%..EN@BLE JSO",
          "4258: |   3584: 4e 31 58 52 54 52 49 4d 1a 12 05 82 29 0f 19 45   N1XRTRIM....)..E",
          "4259: |   3600: 4e 41 42 4c 45 20 47 45 4f 50 4f 4c 59 58 42 49   NABLE GEOPOLYXBI",
          "4260: |   3616: 4e 41 52 59 1a 11 05 c9 29 e8 19 46 4e 41 42 4c   NARY....)..FNABL",
          "4261: |   3632: 48 c0 47 45 4f 50 4f 4c 59 58 4e 74 43 41 53 45   H.GEOPOLYXNtCASE",
          "4262: |   3648: 19 10 05 00 29 0f 17 45 4e 41 42 4c 45 20 47 45   ....)..ENABLE GE",
          "4263: |   3664: 4f 50 4f 4c 59 58 52 54 52 49 4d 17 0f 05 00 23   OPOLYXRTRIM....#",
          "4264: |   3680: 0f 19 45 4e 41 42 4c 45 30 46 54 53 35 58 42 49   ..ENABLE0FTS5XBI",
          "4265: |   3696: 4e 41 52 59 17 0e 05 00 23 0f 19 45 4e 41 42 4c   NARY....#..ENABL",
          "4266: |   3712: 45 20 46 54 53 35 58 4e 4f 43 41 53 45 16 0e 05   E FTS5XNOCASE...",
          "4267: |   3728: 00 23 0f 17 45 4e 41 42 4c 45 20 46 54 53 35 58   .#..ENABLE FTS5X",
          "4268: |   3744: 52 54 52 49 4d 17 0c 05 00 23 0f 19 45 4e 41 42   RTRIM....#..ENAB",
          "4269: |   3760: 4c 45 20 46 54 53 34 58 42 49 4e 41 52 59 17 0b   LE FTS4XBINARY..",
          "4270: |   3776: 05 00 23 0f 19 45 4e 41 42 4c 45 20 46 54 53 34   ..#..ENABLE FTS4",
          "4271: |   3792: 58 4e 4f 43 41 53 45 16 0a 05 00 23 0f 17 45 4e   XNOCASE....#..EN",
          "4272: |   3808: 41 42 4c 45 20 46 54 53 34 58 52 54 52 49 4d 1e   ABLE FTS4XRTRIM.",
          "4273: |   3824: 09 05 00 31 0f 19 45 4e 42 42 4c 45 20 44 42 53   ...1..ENBBLE DBS",
          "4274: |   3840: 54 41 54 20 56 54 41 42 58 42 49 4e 41 52 59 1e   TAT VTABXBINARY.",
          "4275: |   3856: 08 05 00 31 0f 19 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "4276: |   3872: 54 41 54 20 56 54 41 42 58 4e 4f 43 41 53 45 1d   TAT VTABXNOCASE.",
          "4277: |   3888: 07 05 00 31 0f 17 45 4e 41 42 4c 45 20 44 42 53   ...1..ENABLE DBS",
          "4278: |   3904: 54 41 54 20 56 54 41 42 58 52 54 52 4a 4d 11 06   TAT VTABXRTRJM..",
          "4279: |   3920: 05 f0 17 0f 19 44 45 42 55 47 58 42 49 4e 41 52   .....DEBUGXBINAR",
          "4280: |   3936: 59 11 05 05 00 17 0e 19 44 45 42 55 47 58 4e 4f   Y.......DEBUGXNO",
          "4281: |   3952: 43 41 53 45 10 04 05 00 17 0f 16 44 45 42 55 47   CASE.......DEBUG",
          "4282: |   3968: 58 52 54 52 49 4d 27 03 05 00 43 0f 19 43 4f 4d   XRTRIM'...C..COM",
          "4283: |   3984: 50 49 4c 45 52 3d 67 63 63 2d 35 2e 34 2e 30 20   PILER=gcc-5.4.0",
          "4284: |   4000: 32 30 31 36 30 36 30 39 58 42 49 4e 41 52 59 27   20160609XBINARY'",
          "4285: |   4016: 02 05 00 43 0f 19 43 4f 4d 50 49 4c 45 52 3d 67   ...C..COMPILER=g",
          "4286: |   4032: 63 63 2d 35 2e 34 2e 30 20 32 30 31 36 30 36 30   cc-5.4.0 2016060",
          "4287: |   4048: 39 58 4e 4f 43 41 53 45 26 01 06 00 43 0f 17 43   9XNOCASE&...C..C",
          "4288: |   4064: 4f 4d 50 49 4b 45 52 3d 67 63 63 2d 35 2e 34 2e   OMPIKER=gcc-5.4.",
          "4289: |   4080: 30 20 32 30 31 36 30 36 40 39 58 29 54 52 49 4d   0 201606@9X)TRIM",
          "4290: | page 4 offset 12288",
          "4291: |      0: 0d 00 10 00 00 10 00 00 00 00 00 00 00 01 00 00   ................",
          "4292: | page 5 offset 16384",
          "4293: |      0: 0d 00 00 00 02 0b a0 00 0c ad 0b a0 00 00 00 00   ................",
          "4294: |   2976: 82 0a 02 08 08 09 08 08 17 84 06 30 20 32 35 33   ...........0 253",
          "4295: |   2992: 00 01 30 04 25 06 1b 00 00 08 32 30 31 36 30 36   ..0.%.....201606",
          "4296: |   3008: 30 39 03 25 07 00 00 01 34 03 25 05 00 00 01 35   09.%....4.%....5",
          "4297: |   3024: 03 25 04 00 01 07 30 30 30 30 30 30 30 03 25 1a   .%....0000000.%.",
          "4298: |   3040: 00 00 08 63 6f 6d 70 69 6c 65 72 03 25 02 00 00   ...compiler.%...",
          "4299: |   3056: 06 64 62 73 74 61 74 03 25 0a 00 01 04 65 62 75   .dbstat.%....ebu",
          "4300: |   3072: 67 03 25 08 00 00 06 65 6e 61 62 6c 65 09 25 09   g.%....enable.%.",
          "4301: |   3088: 05 04 04 04 04 04 00 01 08 78 74 65 6e 73 69 6f   .........xtensio",
          "4302: |   3104: 6e 03 25 1d 00 00 04 66 74 73 34 03 25 0d 00 03   n.%....fts4.%...",
          "4303: |   3120: 01 35 03 25 0f 00 00 03 67 63 63 03 25 03 00 01   .5.%....gcc.%...",
          "4304: |   3136: 06 65 6f 70 6f 6c 79 03 25 11 00 00 05 6a 73 6f   .eopoly.%....jso",
          "4305: |   3152: 6e 31 03 25 13 00 00 04 6c 6f 61 64 03 25 1c 00   n1.%....load.%..",
          "4306: |   3168: 00 03 6d 61 78 03 25 18 00 01 05 65 6e 6f 72 79   ..max.%....enory",
          "4307: |   3184: 03 25 19 00 03 04 ce 79 73 4d 03 25 15 00 00 04   .%.....ysM.%....",
          "4308: |   3200: 6f 6d 69 74 03 25 1b 00 00 05 72 74 72 65 65 03   omit.%....rtree.",
          "4309: |   3216: 25 17 00 00 0a 74 68 72 65 61 64 73 61 66 65 03   %....threadsafe.",
          "4310: |   3232: 25 0e 00 00 04 76 74 61 62 03 25 0b 00 86 50 01   %....vtab.%...P.",
          "4311: |   3248: 08 08 08 08 08 17 8d 12 30 20 38 33 35 00 01 30   ........0 835..0",
          "4312: |   3264: 12 01 06 00 01 06 00 01 06 00 1f 03 00 01 03 09   ................",
          "4313: |   3280: 51 03 00 00 08 32 30 31 36 30 36 30 39 09 01 07   Q....20160609...",
          "4314: |   3296: 00 01 07 00 01 07 00 00 01 34 09 01 05 00 01 05   .........4......",
          "4315: |   3312: 00 01 05 00 00 01 35 09 01 04 00 01 04 00 01 04   ......5.........",
          "4316: |   3328: 00 01 07 30 30 30 30 30 30 30 09 1c 04 00 01 04   ...0000000......",
          "4317: |   3344: 00 01 04 00 00 06 62 69 6e 61 72 79 3c 03 01 02   ......binary<...",
          "4318: |   3360: 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02   ................",
          "4319: |   3376: 00 03 01 02 02 00 02 f1 02 02 00 03 01 02 02 00   ................",
          "4320: |   3392: 03 01 02 02 00 03 01 02 02 00 03 01 02 02 00 03   ................",
          "4321: |   3408: 01 02 02 00 03 01 02 02 00 00 08 63 6f 6d 70 69   ...........compi",
          "4322: |   3424: 6c 65 72 09 01 02 00 01 02 00 01 02 00 00 06 67   ler............g",
          "4323: |   3440: d2 73 74 61 74 09 07 03 00 01 03 00 01 03 00 01   .stat...........",
          "4324: |   3456: 04 65 62 75 67 09 04 02 00 01 02 00 01 02 00 00   .ebug...........",
          "4325: |   3472: 06 65 6e 6f 82 6c 65 3f 07 02 00 01 02 00 01 02   .eno.le?........",
          "4326: |   3488: b0 01 02 00 01 02 00 11 02 00 01 02 00 01 02 00   ................",
          "4327: |   3504: 01 02 00 01 02 00 01 02 00 01 a6 00 01 02 00 01   ................",
          "4328: |   3520: 02 05 51 02 00 01 02 00 01 02 00 01 02 00 01 02   ..Q.............",
          "4329: |   3536: 00 01 02 00 01 02 00 01 08 78 74 65 6e 73 69 6f   .........xtensio",
          "4330: |   3552: 6e 09 1f 04 00 01 04 00 00 04 00 00 04 66 74 73   n............fts",
          "4331: |   3568: 34 09 0a 03 00 01 03 00 01 03 00 03 01 35 09 0d   4............5..",
          "4332: |   3584: 03 00 01 03 00 01 03 00 00 03 67 63 63 09 01 03   ..........gcc...",
          "4333: |   3600: 00 01 03 00 01 03 00 01 06 65 6f 70 73 6c 79 09   .........eopsly.",
          "4334: |   3616: 10 03 00 01 03 00 01 03 00 00 05 6a 73 6f 6e 31   ...........json1",
          "4335: |   3632: 09 13 03 00 01 03 00 01 03 00 00 04 6c 6f 61 64   ............load",
          "4336: |   3648: 09 1f 03 00 01 03 00 01 03 00 00 03 6d 61 78 09   ............max.",
          "4337: |   3664: 1c 02 00 01 02 00 01 02 00 01 05 65 6d 6f 72 79   ...........emory",
          "4338: |   3680: 09 1c 03 00 01 03 00 01 03 00 03 04 73 79 73 35   ............sys5",
          "4339: |   3696: 09 16 03 00 01 03 00 01 03 00 00 06 6e 6f 63 61   ............noca",
          "4340: |   3712: 73 65 3c 02 01 02 02 00 03 01 12 02 00 03 01 02   se<.............",
          "4341: |   3728: 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02   ................",
          "4342: |   3744: 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02 00   ................",
          "4343: |   3760: 03 01 02 02 00 03 01 02 02 00 03 01 02 02 00 00   ................",
          "4344: |   3776: 0e 9f 6d 69 74 09 1f 02 00 01 02 00 01 02 00 00   ..mit...........",
          "4345: |   3792: 05 72 74 72 65 65 09 19 03 00 01 03 00 01 03 00   .rtree..........",
          "4346: |   3808: 03 02 69 6d 3c 01 01 02 02 00 03 01 02 02 00 03   ..im<...........",
          "4347: |   3824: 01 02 02 00 03 01 02 02 00 03 01 02 02 00 03 01   ................",
          "4348: |   3840: 02 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02   ................",
          "4349: |   3856: 02 00 03 01 02 02 00 03 01 02 02 00 03 01 02 02   ................",
          "4350: |   3872: 00 00 0a 74 68 72 65 61 64 73 61 66 65 09 22 02   ...threadsafe...",
          "4351: |   3888: 00 01 02 00 01 02 00 00 04 76 74 61 62 09 07 04   .........vtab...",
          "4352: |   3904: 00 01 04 00 01 04 00 00 01 78 b4 01 01 01 01 02   .........x......",
          "4353: |   3920: 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00   ................",
          "4354: |   3936: 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00 01   ................",
          "4355: |   3952: 01 01 02 00 01 01 01 07 30 01 01 01 02 00 01 01   ........0.......",
          "4356: |   3968: 01 02 00 11 01 01 02 00 01 01 01 02 00 11 01 01   ................",
          "4357: |   3984: 02 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02   ................",
          "4358: |   4000: 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00   ................",
          "4359: |   4016: 01 01 01 01 ff 01 01 01 02 00 01 01 01 02 00 01   ................",
          "4360: |   4032: 01 01 02 00 01 01 01 02 00 01 01 01 02 00 01 01   ................",
          "4361: |   4048: 01 02 00 01 01 01 02 00 01 01 01 02 00 01 01 01   ................",
          "4362: |   4064: 02 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02   ................",
          "4363: |   4080: 00 01 01 01 02 00 01 01 01 02 00 01 01 01 02 00   ................",
          "4364: | page 6 offset 20480",
          "4365: |      0: 0a 00 00 00 02 0f f5 00 0f fb 0f f5 00 00 00 00   ................",
          "4366: |   4080: 00 00 00 00 00 05 04 08 09 01 02 04 04 08 08 09   ................",
          "4367: | page 7 offset 24576",
          "4368: |      0: 0d 00 00 00 05 0f b8 00 0e f4 0f e9 10 d6 0f c7   ................",
          "4369: |   4016: 00 00 00 00 00 00 00 00 0d 05 02 23 61 75 74 6f   ...........#auto",
          "4370: |   4032: 6d 65 72 67 65 3d 35 0d 04 02 23 6d 65 72 67 65   merge=5...#merge",
          "4371: |   4048: 3d 31 00 00 00 00 00 00 00 00 00 00 00 00 00 00   =1..............",
          "4372: | end crash-dde9e76ed8ab2d.db",
          "4373: }]} {}",
          "4375: do_catchsql_test 25.1 {",
          "4376:   WITH RECURSIVE c(x) AS (VALUES(1) UNION ALL SELECT x%1 FROM c WHERE x<599237)",
          "4377:     INSERT INTO t1( a ) SELECT randomblob(3000) FROM t2 ;",
          "4378: } {0 {}}",
          "4380: do_catchsql_test 25.2 {",
          "4381:   UPDATE t1 SET b=quote((true) ) WHERE t1 MATCH 'h*';",
          "4382: } {0 {}}",
          "4384: do_catchsql_test 25.3 {",
          "4385:   WITH RECURSIVE c(x) AS (VALUES(1) UNION ALL SELECT x +x FROM c WHERE 72<x)",
          "4386:     INSERT INTO t1(a) SELECT randomblob(2829) FROM c;",
          "4387: } {0 {}}",
          "4389: do_catchsql_test 25.4 {",
          "4390:   WITH RECURSIVE c(x) AS (VALUES(1) UNION ALL SELECT x%1 FROM c WHERE 599237<x)",
          "4391:     INSERT INTO t1(a) SELECT randomblob(3000) FROM t2 ;",
          "4392: } {0 {}}",
          "4394: do_catchsql_test 25.5 {",
          "4395:   WITH RECURSIVE c(x) AS (VALUES(1) UNION ALL SELECT x%1 FROM c WHERE x<599237)",
          "4396:     INSERT INTO t1( a ) SELECT randomblob(3000) FROM t2 ;",
          "4397: } {0 {}}",
          "4399: do_catchsql_test 25.6 {",
          "4400:   INSERT INTO t1(t1) SELECT x FROM t2;",
          "4401:   INSERT INTO t1(t1) SELECT x FROM t2;",
          "4402: } {1 {database disk image is malformed}}",
          "",
          "---------------"
        ],
        "tool/showdb.c||tool/showdb.c": [
          "File: tool/showdb.c -> tool/showdb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "835:   }",
          "836: }",
          "842: static void page_usage_btree(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "841: static int allZero(unsigned char *a, int n){",
          "842:   while( n && (a++)[0]==0 ){ n--; }",
          "843:   return n==0;",
          "844: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "850:   int nCell;",
          "851:   int i;",
          "852:   int hdr = pgno==1 ? 100 : 0;",
          "854:   if( pgno<=0 || pgno>g.mxPage ) return;",
          "855:   a = fileRead((pgno-1)*g.pagesize, g.pagesize);",
          "856:   switch( a[hdr] ){",
          "857:     case 2:  zType = \"interior node of index\";  break;",
          "858:     case 5:  zType = \"interior node of table\";  break;",
          "859:     case 10: zType = \"leaf of index\";           break;",
          "860:     case 13: zType = \"leaf of table\";           break;",
          "861:   }",
          "865:   }else{",
          "867:   }",
          "869:   if( a[hdr]==2 || a[hdr]==5 ){",
          "870:     int cellstart = hdr+12;",
          "871:     unsigned int child;",
          "",
          "[Removed Lines]",
          "862:   if( parent ){",
          "863:     page_usage_msg(pgno, \"%s [%s], child %d of page %d\",",
          "864:                    zType, zName, idx, parent);",
          "866:     page_usage_msg(pgno, \"root %s [%s]\", zType, zName);",
          "868:   nCell = a[hdr+3]*256 + a[hdr+4];",
          "",
          "[Added Lines]",
          "864:   char zEntry[30];",
          "869:     case 0: {",
          "870:       if( allZero(a, g.pagesize) ){",
          "871:         zType = \"zeroed page\";",
          "872:       }else if( parent<0 ){",
          "873:         return;",
          "874:       }else{",
          "875:         zType = \"corrupt node\";",
          "876:       }",
          "877:       break;",
          "878:     }",
          "883:     default: {",
          "884:       if( parent<0 ) return;",
          "885:       zType = \"corrupt node\";",
          "886:     }",
          "887:   }",
          "888:   nCell = a[hdr+3]*256 + a[hdr+4];",
          "889:   if( nCell==1 ){",
          "890:     sqlite3_snprintf(sizeof(zEntry),zEntry,\"1 row\");",
          "891:   }else{",
          "892:     sqlite3_snprintf(sizeof(zEntry),zEntry,\"%d rows\", nCell);",
          "894:   if( parent>0 ){",
          "895:     page_usage_msg(pgno, \"%s [%s], child %d of page %d, %s\",",
          "896:                    zType, zName, idx, parent, zEntry);",
          "897:   }else if( parent==0 ){",
          "898:     page_usage_msg(pgno, \"root %s [%s], %s\", zType, zName, zEntry);",
          "900:     page_usage_msg(pgno, \"orphaned %s, %s\", zType, zEntry);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "990:   for(i=1; i<=g.mxPage; i++){",
          "991:     printf(\"%5d: %s\\n\", i, zPageUse[i] ? zPageUse[i] : \"???\");",
          "992:     sqlite3_free(zPageUse[i]);",
          "993:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1024:     if( zPageUse[i]==0 ) page_usage_btree(i, -1, 0, 0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5985dcbf5e04fdc2e2312be0c5f9889691967e8a",
      "candidate_info": {
        "commit_hash": "5985dcbf5e04fdc2e2312be0c5f9889691967e8a",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/5985dcbf5e04fdc2e2312be0c5f9889691967e8a",
        "files": [
          "ext/misc/dbdata.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix another small buffer overread in sqlite_dbdata triggered by a corrupt database page.\n\nFossilOrigin-Name: 1dfc95b8673b0e8c9ef5040c2fa0fbe9846e430d104e9b83f3f1f3ad63446380",
        "before_after_code_files": [
          "ext/misc/dbdata.c||ext/misc/dbdata.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/misc/dbdata.c||ext/misc/dbdata.c": [
          "File: ext/misc/dbdata.c -> ext/misc/dbdata.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "81: #include <string.h>",
          "82: #include <assert.h>",
          "84: typedef struct DbdataTable DbdataTable;",
          "85: typedef struct DbdataCursor DbdataCursor;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "84: #define DBDATA_PADDING_BYTES 100",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "334:     int nCopy = sqlite3_column_bytes(pStmt, 0);",
          "335:     if( nCopy>0 ){",
          "336:       u8 *pPage;",
          "338:       if( pPage==0 ){",
          "339:         rc = SQLITE_NOMEM;",
          "340:       }else{",
          "341:         const u8 *pCopy = sqlite3_column_blob(pStmt, 0);",
          "342:         memcpy(pPage, pCopy, nCopy);",
          "343:       }",
          "",
          "[Removed Lines]",
          "337:       pPage = (u8*)sqlite3_malloc64(nCopy);",
          "",
          "[Added Lines]",
          "339:       pPage = (u8*)sqlite3_malloc64(nCopy + DBDATA_PADDING_BYTES);",
          "345:         memset(&pPage[nCopy], 0, DBDATA_PADDING_BYTES);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "576:             if( pCsr->pRec==0 ) return SQLITE_NOMEM;",
          "578:             pCsr->nRec = nPayload;",
          "",
          "[Removed Lines]",
          "575:             pCsr->pRec = (u8*)sqlite3_malloc64(nPayload+100);",
          "577:             memset(pCsr->pRec, 0, nPayload+100);",
          "",
          "[Added Lines]",
          "578:             pCsr->pRec = (u8*)sqlite3_malloc64(nPayload+DBDATA_PADDING_BYTES);",
          "580:             memset(pCsr->pRec, 0, nPayload+DBDATA_PADDING_BYTES);",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 8d2a062eb8a3e6fdc6a61b571c8da0070382bf208c53e797151eac8679c975a1",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5c2f2206b63f7cfabb9e0211e8887d6cd915e983",
      "candidate_info": {
        "commit_hash": "5c2f2206b63f7cfabb9e0211e8887d6cd915e983",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/5c2f2206b63f7cfabb9e0211e8887d6cd915e983",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c"
        ],
        "message": "Initialize the 18-byte overrun area on the buffer used to reconstruct overflow btree cells during a btree search, to avoid a harmless jump-depends-on-uninit-values warning.\n\nFossilOrigin-Name: 4b05caeb1b9767ba58cb4261ecc22cdd495216b3258d45f2165cdbd3ea079495",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 915388ab39ba3ca8681cd2613b91314aa965967f23a5bface90f54a3d6423300",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5534:             rc = SQLITE_CORRUPT_PAGE(pPage);",
          "5535:             goto moveto_finish;",
          "5536:           }",
          "5538:           if( pCellKey==0 ){",
          "5539:             rc = SQLITE_NOMEM_BKPT;",
          "5540:             goto moveto_finish;",
          "5541:           }",
          "5542:           pCur->ix = (u16)idx;",
          "5543:           rc = accessPayload(pCur, 0, nCell, (unsigned char*)pCellKey, 0);",
          "5544:           pCur->curFlags &= ~BTCF_ValidOvfl;",
          "5545:           if( rc ){",
          "5546:             sqlite3_free(pCellKey);",
          "",
          "[Removed Lines]",
          "5537:           pCellKey = sqlite3Malloc( nCell+18 );",
          "",
          "[Added Lines]",
          "5538:           pCellKey = sqlite3Malloc( nCell+nOverrun );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "35fb866ea334beedadb258eaacb68b627a6b2554",
      "candidate_info": {
        "commit_hash": "35fb866ea334beedadb258eaacb68b627a6b2554",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/35fb866ea334beedadb258eaacb68b627a6b2554",
        "files": [
          "ext/fts5/fts5_main.c",
          "ext/fts5/test/fts5corrupt3.test",
          "ext/fts5/test/fts5rank.test",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix a problem with fts5 \"ORDER BY rank\" queries when the fts5 table name requires quoting.\n\nFossilOrigin-Name: 00e9a8f2730eb7239bf7fd107c97c409e4f9fbd968510766373440a9079898eb",
        "before_after_code_files": [
          "ext/fts5/fts5_main.c||ext/fts5/fts5_main.c",
          "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test",
          "ext/fts5/test/fts5rank.test||ext/fts5/test/fts5rank.test",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/fts5/fts5_main.c||ext/fts5/fts5_main.c": [
          "File: ext/fts5/fts5_main.c -> ext/fts5/fts5_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "934:   rc = fts5PrepareStatement(&pSorter->pStmt, pConfig,",
          "936:       pConfig->zDb, pConfig->zName, zRank, pConfig->zName,",
          "937:       (zRankArgs ? \", \" : \"\"),",
          "938:       (zRankArgs ? zRankArgs : \"\"),",
          "",
          "[Removed Lines]",
          "935:       \"SELECT rowid, rank FROM %Q.%Q ORDER BY %s(%s%s%s) %s\",",
          "",
          "[Added Lines]",
          "935:       \"SELECT rowid, rank FROM %Q.%Q ORDER BY %s(\\\"%w\\\"%s%s) %s\",",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5corrupt3.test||ext/fts5/test/fts5corrupt3.test": [
          "File: ext/fts5/test/fts5corrupt3.test -> ext/fts5/test/fts5corrupt3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "768: do_catchsql_test 13.1 {",
          "769:   SELECT * FROM t1 WHERE t1 MATCH 'abandon';",
          "772: #-------------------------------------------------------------------------",
          "773: reset_db",
          "",
          "[Removed Lines]",
          "770: } {1 {vtable constructor failed: t1}}",
          "",
          "[Added Lines]",
          "770: } {/*malformed database schema*/}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "959: do_catchsql_test 15.1 {",
          "960:   INSERT INTO t1(t1) VALUES('integrity-check');",
          "963: #---------------------------------------------------------------------------",
          "964: #",
          "",
          "[Removed Lines]",
          "961: } {1 {database disk image is malformed}}",
          "",
          "[Added Lines]",
          "961: } {/*malformed database schema*/}",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3903: | end crash-fed6e90021ba5d.db",
          "3904: }]} {}",
          "3907:   CREATE VIRTUAL TABLE t2 USING fts5vocab('t1','row');",
          "3908:   CREATE VIRTUAL TABLE t3 USING fts5vocab('t1','col');",
          "3909:   CREATE VIRTUAL TABLE t4 USING fts5vocab('t1','instance');",
          "3912: do_catchsql_test 33.2 {",
          "3913:   SELECT * FROM t2;",
          "3916: do_catchsql_test 33.3 {",
          "3917:   SELECT * FROM t2, t3, t4 WHERE t2.term=t3.term AND t3.term=t4.term;",
          "3920: #-------------------------------------------------------------------------",
          "3921: reset_db",
          "",
          "[Removed Lines]",
          "3906: do_execsql_test 33.1 {",
          "3910: }",
          "3914: } {1 {database disk image is malformed}}",
          "3918: } {1 {database disk image is malformed}}",
          "",
          "[Added Lines]",
          "3906: do_catchsql_test 33.1 {",
          "3910: } {/*malformed database schema*/}",
          "3914: } {/*malformed database schema*/}",
          "3918: } {/*malformed database schema*/}",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4638: do_catchsql_test 37.1 {",
          "4639:   SELECT * FROM t3;",
          "4642: #-------------------------------------------------------------------------",
          "4643: reset_db",
          "4645:   CREATE VIRTUAL TABLE t1 USING fts5(b, c);",
          "4646:   INSERT INTO t1 VALUES('a', 'b');",
          "4647:   SELECT quote(block) FROM t1_data WHERE rowid=10;",
          "4648: } {X'000000000101010001010101'}",
          "4651:   UPDATE t1_data SET block = X'FFFFFFFF0101010001010101' WHERE rowid = 10;",
          "4652:   SELECT rowid FROM t1('a');",
          "4653: } {1}",
          "",
          "[Removed Lines]",
          "4640: } {1 {database disk image is malformed}}",
          "4644: do_execsql_test 37.0 {",
          "4650: do_execsql_test 37.1 {",
          "",
          "[Added Lines]",
          "4640: } {/*malformed database schema*/}",
          "4644: do_execsql_test 37a.0 {",
          "4650: do_execsql_test 37a.1 {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4895: do_catchsql_test 38.1 {",
          "4896:   UPDATE t1 SET b=quote(zeroblob(200)) WHERE t1 MATCH 'thread*';",
          "4899: #-------------------------------------------------------------------------",
          "4900: reset_db",
          "",
          "[Removed Lines]",
          "4897: } {0 {}}",
          "",
          "[Added Lines]",
          "4897: } {/*malformed database schema*/}",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "5326: | end crash2.txt.db",
          "5327: }]} {}",
          "5330:   BEGIN;",
          "5331:   INSERT INTO t1(b) VALUES(X'819192e578de3fa24af3733ca8769291a0fee3669f9fddefc5cba913e4225d4b6ce2b04f26b87fad3ee6f9b7d90a1ea62a169bf41e5d32707a6ca5c3d05e4bde05c9d89eaaa8c50e74333d2e9fcd7dfe95528a3a016aac1102d825c5cd70cf99d8a88e0ea7f798d4334386518b7ad359beb168b93aba059a2a3bd93112d65b44c12b9904ea786b204d80531cdf0504bf9b203dbe927061974caf7b9f30cbc3397b61f802e732012a6663d41c3607d6f1c0dbcfd489adac05ca500c0b04439d894cd93a840159225ef73b627e178b9f84b3ffe66cf22a963a8368813ff7961fc47f573211ccec95e0220dcbb3bf429f4a50ba54d7a53784ac51bf');",
          "5332:   INSERT INTO t1(b) VALUES(X'c8ae0d0e7c3175946e62ba2b449511d4eb504079984a20f77969f62206c9f3d7ea25358ab705e6978627290b6d48db9032f815a06a79a4f4b809841a0942eed12954ed166f666111812a508abc3bec87958846edaec0a6fe14564bc0a4b78f1c35ebcacca6bae29cc37ae9b59d8a2d7593af1e47dda0ece2268a98d20febafad037964f139851f9a57f48b3706b01721769071991412044cd6006f1d72eb6eb4aa5ad77e378176db8c15575fbeee47165e38a7c6c5a557ac2dfe11813976eaf6741cf593a9e457053a3c34cddfbe605a6e25419f993de8374fafcd3636509d8416a51dc7bcc14cfca322ae343078f47e23522431c17d0da0c033');",
          "5333:   INSERT INTO t1(b) VALUES(X'dc29a94e873a45a4243fce9b912aaefbadf1d0423e0345793874b356eeb500b92fb05284c1601fe9bad3143f72162f10242cec27c44ebf764c8fc9fb0824e32c4161472a4f914f579e0e8274f08ca1a02e59b9d8eec1f31061f9ccb9ed97a6f06534e991f7992c761489e6a7724f6e9c2b581e77487ded3a986d53c4419bbd3e9747cee300e670dd7294874c77e2ed48da68eaa6c3ec954a09ac410493d98e34d6686e54fbbe80696705f10e040c66093efb40746b33600685c94c664c7942835a9e954866121d5dcfb2cb12e92521ea3df175ee17072502dad9b9c1565f801b2179799011eb7418bfa00323e3157589e648ff7378be233c79b7');",
          "5336: do_catchsql_test 40.2 {",
          "5337:   INSERT INTO t1(a,b) VALUES(1,11),(2,22),(3, true ),(4,44);",
          "5340: #-------------------------------------------------------------------------",
          "5341: reset_db",
          "",
          "[Removed Lines]",
          "5329: do_execsql_test 40.1 {",
          "5334: }",
          "5338: } {1 {database disk image is malformed}}",
          "",
          "[Added Lines]",
          "5329: do_catchsql_test 40.1 {",
          "5334: } {/*malformed database schema*/}",
          "5338: } {/*malformed database schema*/}",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "5790: do_catchsql_test 43.1 {",
          "5791:   INSERT INTO t1(t1) VALUES('optimize');",
          "5794: #-------------------------------------------------------------------------",
          "5795: reset_db",
          "",
          "[Removed Lines]",
          "5792: } {1 {database disk image is malformed}}",
          "",
          "[Added Lines]",
          "5792: } {/*malformed database schema*/}",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "6047:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6048:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6049:   INSERT INTO t1(t1, rank) VALUES('merge', 5);",
          "6052: #--------------------------------------------------------------------------",
          "6053: reset_db",
          "",
          "[Removed Lines]",
          "6050: } {0 {}}",
          "",
          "[Added Lines]",
          "6050: } {/*malformed database schema*/}",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "6266: do_catchsql_test 46.1 {",
          "6267:   SELECT snippet(t1,'[','', '--',-1,10) FROM t1('*');",
          "6270: #--------------------------------------------------------------------------",
          "6271: reset_db",
          "",
          "[Removed Lines]",
          "6268: } {0 {{}}}",
          "",
          "[Added Lines]",
          "6268: } {/*malformed database schema*/}",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "6419: do_catchsql_test 47.1 {",
          "6420:   INSERT INTO t1(t1) VALUES('integrity-check');",
          "6423: do_catchsql_test 47.2 {",
          "6424:   SELECT count(*) FROM (",
          "",
          "[Removed Lines]",
          "6421: } {1 {database disk image is malformed}}",
          "",
          "[Added Lines]",
          "6421: } {/*malformed database schema*/}",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "6426:       highlight(t1, 2, '[', ']') FROM t1('g h')",
          "6427:       WHERE rank MATCH 'bm25(1.0, 1.0)' ORDER BY rank",
          "6428:   )",
          "6431: #--------------------------------------------------------------------------",
          "6432: reset_db",
          "",
          "[Removed Lines]",
          "6429: } {0 3}",
          "",
          "[Added Lines]",
          "6429: } {/*malformed database schema*/}",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "7131: do_catchsql_test 52.1 {",
          "7132:   SELECT fts5_decode(id, block) FROM t1_data;",
          "7135: #-------------------------------------------------------------------------",
          "7136: reset_db",
          "",
          "[Removed Lines]",
          "7133: } {1 {database disk image is malformed}}",
          "",
          "[Added Lines]",
          "7133: } {/*malformed database schema*/}",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "7346: do_catchsql_test 53.1 {",
          "7347:   WITH RECURSIVE c(x) AS (VALUES(1) UNION ALL SELECT x<>1 FROM c WHERE x<10)",
          "7348:     INSERT INTO t1(a) SELECT randomblob(3000) FROM c;",
          "7351: #-------------------------------------------------------------------------",
          "7352: reset_db",
          "",
          "[Removed Lines]",
          "7349: } {1 {database disk image is malformed}}",
          "",
          "[Added Lines]",
          "7349: } {/*malformed database schema*/}",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "7563: do_catchsql_test 54.1 {",
          "7564:   SELECT rowid==-1 FROM t1('t*');",
          "7567: #-------------------------------------------------------------------------",
          "7568: reset_db",
          "",
          "[Removed Lines]",
          "7565: } {0 {0 0 0}}",
          "",
          "[Added Lines]",
          "7565: } {/*malformed database schema*/}",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "7777: | end crash-b366b5ac0d3887.db",
          "7778: }]} {}",
          "7781:   SAVEPOINT one;",
          "7782:   DELETE FROM t1 WHERE a MATCH 'ts';",
          "7785: do_execsql_test 55.2 {",
          "7786:   ROLLBACK TO one;",
          "",
          "[Removed Lines]",
          "7780: do_execsql_test 55.1 {",
          "7783: }",
          "",
          "[Added Lines]",
          "7780: do_catchsql_test 55.1 {",
          "7783: } {/*malformed database schema*/}",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "8013:     set res \"1 {database disk image is malformed}\"",
          "8014:   }",
          "8015:   set res",
          "8018: #-------------------------------------------------------------------------",
          "8019: reset_db",
          "",
          "[Removed Lines]",
          "8016: } {1 {database disk image is malformed}}",
          "",
          "[Added Lines]",
          "8016: } {/*malformed database schema*/}",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "8132: do_catchsql_test 57.1 {",
          "8133:   INSERT INTO t1(t1) VALUES('optimize')",
          "8136: #-------------------------------------------------------------------------",
          "8137: reset_db",
          "",
          "[Removed Lines]",
          "8134: } {1 {database disk image is malformed}}",
          "",
          "[Added Lines]",
          "8134: } {/*malformed database schema*/}",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "8339: | end crash-5a5acd0ab42d31.db",
          "8340: }]} {}",
          "8343:   SELECT * FROM t1('t*');",
          "8346: #-------------------------------------------------------------------------",
          "8347: do_test 59.0 {",
          "",
          "[Removed Lines]",
          "8342: do_execsql_test 58.1 {",
          "8344: } {{} {} {} {} {} {}}",
          "",
          "[Added Lines]",
          "8342: do_catchsql_test 58.1 {",
          "8344: } {/*malformed database schema*/}",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "8948: | end crash-e5fa281edabddf.db",
          "8949: }]} {}",
          "8952:   CREATE VIRTUAL TABLE t3 USING fts5vocab('t1'(),'col' );",
          "8955: do_catchsql_test 61.2 {",
          "8956:   SELECT * FROM t3 ORDER BY rowid;",
          "8959: breakpoint",
          "8960: #-------------------------------------------------------------------------",
          "",
          "[Removed Lines]",
          "8951: do_execsql_test 61.1 {",
          "8953: }",
          "8957: } {1 {database disk image is malformed}}",
          "",
          "[Added Lines]",
          "8951: do_catchsql_test 61.1 {",
          "8953: } {/*malformed database schema*/}",
          "8957: } {/*malformed database schema*/}",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "9159: do_catchsql_test 62.1 {",
          "9160:   WITH c(x) AS (VALUES(false) UNION ALL SELECT x+1 FROM c WHERE x<72)",
          "9161:     INSERT INTO t1(a) SELECT randomblob(2829) FROM c;",
          "9164: #---------------------------------------------------------------------------",
          "9165: do_test 63.0 {",
          "",
          "[Removed Lines]",
          "9162: } {0 {}}",
          "",
          "[Added Lines]",
          "9162: } {/*malformed database schema*/}",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "9358: do_catchsql_test 63.1 {",
          "9359:   SELECT * FROM t1 WHERE b MATCH 'thead*thead*theSt*';",
          "9362: do_catchsql_test 63.2 {",
          "9363:   INSERT INTO t1(t1) VALUES('optimize');",
          "9367: do_catchsql_test 63.3 {",
          "9368:   SELECT * FROM t1 WHERE b MATCH 'thead*thead*theSt*';",
          "9371: sqlite3_fts5_may_be_corrupt 0",
          "9372: finish_test",
          "",
          "[Removed Lines]",
          "9360: } {1 {database disk image is malformed}}",
          "9364: } {0 {}}",
          "9366: breakpoint",
          "9369: } {0 {}}",
          "",
          "[Added Lines]",
          "9360: } {/*malformed database schema*/}",
          "9364: } {/*malformed database schema*/}",
          "9368: } {/*malformed database schema*/}",
          "",
          "---------------"
        ],
        "ext/fts5/test/fts5rank.test||ext/fts5/test/fts5rank.test": [
          "File: ext/fts5/test/fts5rank.test -> ext/fts5/test/fts5rank.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "162:   SELECT rowid FROM ttt('word') WHERE rowid BETWEEN 30 AND 40 ORDER BY rank;",
          "163: } {30 31 32 33 34 35 36 37 38 39 40}",
          "165: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "165: #-------------------------------------------------------------------------",
          "166: reset_db",
          "167: do_execsql_test 6.0 {",
          "168:   CREATE VIRTUAL TABLE \"My.Table\" USING fts5(Text);",
          "170:   INSERT INTO \"My.Table\" VALUES ('hello this is a test');",
          "171:   INSERT INTO \"My.Table\" VALUES ('of trying to order by');",
          "172:   INSERT INTO \"My.Table\" VALUES ('rank on an fts5 table');",
          "173:   INSERT INTO \"My.Table\" VALUES ('that have periods in');",
          "174:   INSERT INTO \"My.Table\" VALUES ('the table names.');",
          "175:   INSERT INTO \"My.Table\" VALUES ('table table table');",
          "176: }",
          "177: do_execsql_test 6.1 {",
          "178:   SELECT * FROM \"My.Table\" WHERE Text MATCH 'table' ORDER BY rank;",
          "179: } {",
          "180:   {table table table} {the table names.} {rank on an fts5 table}",
          "181: }",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 75aec4fc886c04fe098828cc03bc72c197cbf40f0a1890fe5bbb98d4fd5c3c7e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ac713403fdfa3b2c28aa9e1e0068baafdee7b2a5",
      "candidate_info": {
        "commit_hash": "ac713403fdfa3b2c28aa9e1e0068baafdee7b2a5",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/ac713403fdfa3b2c28aa9e1e0068baafdee7b2a5",
        "files": [
          "ext/session/sqlite3session.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix harmless compiler warning seen with MSVC for x64.\n\nFossilOrigin-Name: 857b2ba6d05d6f5a8cfdf269bae9005b25e1903ab9dc6b70546979d8c633f03b",
        "before_after_code_files": [
          "ext/session/sqlite3session.c||ext/session/sqlite3session.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/session/sqlite3session.c||ext/session/sqlite3session.c": [
          "File: ext/session/sqlite3session.c -> ext/session/sqlite3session.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1837:     i64 nNew = p->nAlloc ? p->nAlloc : 128;",
          "1838:     do {",
          "1839:       nNew = nNew*2;",
          "1842:     aNew = (u8 *)sqlite3_realloc64(p->aBuf, nNew);",
          "1843:     if( 0==aNew ){",
          "",
          "[Removed Lines]",
          "1840:     }while( (nNew-p->nBuf)<nByte );",
          "",
          "[Added Lines]",
          "1840:     }while( (size_t)(nNew-p->nBuf)<nByte );",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 6bfa44da226fd758a2ee924d1e8e3a742b0635b6d3f922a4a7919cb14b2418e6",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}