{
  "cve_id": "CVE-2015-0278",
  "cve_desc": "libuv before 0.10.34 does not properly drop group privileges, which allows context-dependent attackers to gain privileges via unspecified vectors.",
  "repo": "libuv/libuv",
  "patch_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
  "patch_info": {
    "commit_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
    "repo": "libuv/libuv",
    "commit_url": "https://github.com/libuv/libuv/commit/66ab38918c911bcff025562cf06237d7fedaba0c",
    "files": [
      "src/unix/process.c"
    ],
    "message": "unix: call setgoups before calling setuid/setgid\n\nPartial fix for #1093",
    "before_after_code_files": [
      "src/unix/process.c||src/unix/process.c"
    ]
  },
  "patch_diff": {
    "src/unix/process.c||src/unix/process.c": [
      "File: src/unix/process.c -> src/unix/process.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "330:     _exit(127);",
      "331:   }",
      "333:   if ((options->flags & UV_PROCESS_SETGID) && setgid(options->gid)) {",
      "334:     uv__write_int(error_fd, -errno);",
      "335:     perror(\"setgid()\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "333:   if (options->flags & (UV_PROCESS_SETUID | UV_PROCESS_SETGID)) {",
      "341:     SAVE_ERRNO(setgroups(0, NULL));",
      "342:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "beb54fe72da0dad40dc671a3b4c1edfa3a55203f",
      "candidate_info": {
        "commit_hash": "beb54fe72da0dad40dc671a3b4c1edfa3a55203f",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/beb54fe72da0dad40dc671a3b4c1edfa3a55203f",
        "files": [
          "src/win/core.c"
        ],
        "message": "windows: destroy work queue elements when colsing a loop\n\nDestroy the async handle used to notify about work being done, and the\nmutex used to protect each loop's work queue.\n\nCloses #1375",
        "before_after_code_files": [
          "src/win/core.c||src/win/core.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/win/core.c||src/win/core.c": [
          "File: src/win/core.c -> src/win/core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "195: }",
          "198: int uv_loop_close(uv_loop_t* loop) {",
          "199:   QUEUE* q;",
          "200:   uv_handle_t* h;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "198: static void uv__loop_close(uv_loop_t* loop) {",
          "200:   assert(!loop->wq_async.async_sent);",
          "201:   loop->wq_async.close_cb = NULL;",
          "202:   uv__handle_closing(&loop->wq_async);",
          "203:   uv__handle_close(&loop->wq_async);",
          "205:   if (loop != &uv_default_loop_) {",
          "206:     size_t i;",
          "207:     for (i = 0; i < ARRAY_SIZE(loop->poll_peer_sockets); i++) {",
          "208:       SOCKET sock = loop->poll_peer_sockets[i];",
          "209:       if (sock != 0 && sock != INVALID_SOCKET)",
          "210:         closesocket(sock);",
          "211:     }",
          "212:   }",
          "215:   uv_mutex_lock(&loop->wq_mutex);",
          "216:   assert(QUEUE_EMPTY(&loop->wq) && \"thread pool work queue not empty!\");",
          "217:   assert(!uv__has_active_reqs(loop));",
          "218:   uv_mutex_unlock(&loop->wq_mutex);",
          "219:   uv_mutex_destroy(&loop->wq_mutex);",
          "220: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "205:     if (!(h->flags & UV__HANDLE_INTERNAL))",
          "206:       return UV_EBUSY;",
          "207:   }",
          "217:   return 0;",
          "218: }",
          "",
          "[Removed Lines]",
          "208:   if (loop != &uv_default_loop_) {",
          "209:     size_t i;",
          "210:     for (i = 0; i < ARRAY_SIZE(loop->poll_peer_sockets); i++) {",
          "211:       SOCKET sock = loop->poll_peer_sockets[i];",
          "212:       if (sock != 0 && sock != INVALID_SOCKET)",
          "213:         closesocket(sock);",
          "214:     }",
          "215:   }",
          "",
          "[Added Lines]",
          "234:   uv__loop_close(loop);",
          "236: #ifndef NDEBUG",
          "237:   memset(loop, -1, sizeof(*loop));",
          "238: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "20a8e58adb2a3fc2e92ceb6e1ceb6f05d7e0d439",
      "candidate_info": {
        "commit_hash": "20a8e58adb2a3fc2e92ceb6e1ceb6f05d7e0d439",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/20a8e58adb2a3fc2e92ceb6e1ceb6f05d7e0d439",
        "files": [
          "src/win/fs.c"
        ],
        "message": "windows: reimplement uv_fs_stat using NT syscalls\n\nThis improves the output of uv_fs_stat:\n  * `st_ctime` now contains the change time, not the creation time.\n  * `st_ino` is now filled in with an fs-specific unique number.\n  * `st_dev` is set to the serial number of the containing file system.\n  * `st_blocks` now gets set.\n  * `st_blksize` is no longer zero, but set to a reasonable default.",
        "before_after_code_files": [
          "src/win/fs.c||src/win/fs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/win/fs.c||src/win/fs.c": [
          "File: src/win/fs.c -> src/win/fs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "243: INLINE static int fs__readlink_handle(HANDLE handle, char** target_ptr,",
          "245:   char buffer[MAXIMUM_REPARSE_DATA_BUFFER_SIZE];",
          "246:   REPARSE_DATA_BUFFER* reparse_data = (REPARSE_DATA_BUFFER*) buffer;",
          "247:   WCHAR *w_target;",
          "",
          "[Removed Lines]",
          "244:     int64_t* target_len_ptr) {",
          "",
          "[Added Lines]",
          "244:     uint64_t* target_len_ptr) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "811: INLINE static int fs__stat_handle(HANDLE handle, uv_stat_t* statbuf) {",
          "815:     return -1;",
          "816:   }",
          "826:   statbuf->st_mode = 0;",
          "838:     statbuf->st_mode |= S_IFLNK;",
          "840:     statbuf->st_mode |= _S_IFDIR;",
          "841:     statbuf->st_size = 0;",
          "842:   } else {",
          "843:     statbuf->st_mode |= _S_IFREG;",
          "846:   }",
          "863:   return 0;",
          "864: }",
          "",
          "[Removed Lines]",
          "812:   BY_HANDLE_FILE_INFORMATION info;",
          "814:   if (!GetFileInformationByHandle(handle, &info)) {",
          "819:   statbuf->st_ino = 0;",
          "820:   statbuf->st_dev = 0;",
          "821:   statbuf->st_rdev = 0;",
          "823:   statbuf->st_gid = 0;",
          "824:   statbuf->st_uid = 0;",
          "828:   statbuf->st_blksize = 0;",
          "829:   statbuf->st_blocks = 0;",
          "831:   statbuf->st_flags = 0;",
          "832:   statbuf->st_gen = 0;",
          "834:   if (info.dwFileAttributes & FILE_ATTRIBUTE_REPARSE_POINT) {",
          "835:     if (fs__readlink_handle(handle, NULL, &statbuf->st_size) != 0) {",
          "836:       return -1;",
          "837:     }",
          "839:   } else if (info.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY) {",
          "844:     statbuf->st_size = ((int64_t) info.nFileSizeHigh << 32) +",
          "845:                         (int64_t) info.nFileSizeLow;",
          "848:   if (info.dwFileAttributes & FILE_ATTRIBUTE_READONLY) {",
          "849:     statbuf->st_mode |= (_S_IREAD + (_S_IREAD >> 3) + (_S_IREAD >> 6));",
          "850:   } else {",
          "851:     statbuf->st_mode |= ((_S_IREAD|_S_IWRITE) + ((_S_IREAD|_S_IWRITE) >> 3) +",
          "852:       ((_S_IREAD|_S_IWRITE) >> 6));",
          "853:   }",
          "855:   FILETIME_TO_TIMESPEC(statbuf->st_mtim, info.ftLastWriteTime);",
          "856:   FILETIME_TO_TIMESPEC(statbuf->st_atim, info.ftLastAccessTime);",
          "857:   FILETIME_TO_TIMESPEC(statbuf->st_ctim, info.ftCreationTime);",
          "858:   FILETIME_TO_TIMESPEC(statbuf->st_birthtim, info.ftCreationTime);",
          "860:   statbuf->st_nlink = (info.nNumberOfLinks <= SHRT_MAX) ?",
          "861:                       (short) info.nNumberOfLinks : SHRT_MAX;",
          "",
          "[Added Lines]",
          "812:   FILE_ALL_INFORMATION file_info;",
          "813:   FILE_FS_VOLUME_INFORMATION volume_info;",
          "814:   NTSTATUS nt_status;",
          "815:   IO_STATUS_BLOCK io_status;",
          "817:   nt_status = pNtQueryInformationFile(handle,",
          "818:                                       &io_status,",
          "819:                                       &file_info,",
          "820:                                       sizeof file_info,",
          "821:                                       FileAllInformation);",
          "824:   if (NT_ERROR(nt_status)) {",
          "825:     SetLastError(pRtlNtStatusToDosError(nt_status));",
          "829:   nt_status = pNtQueryVolumeInformationFile(handle,",
          "830:                                             &io_status,",
          "831:                                             &volume_info,",
          "832:                                             sizeof volume_info,",
          "833:                                             FileFsVolumeInformation);",
          "836:   if (NT_ERROR(nt_status)) {",
          "837:     SetLastError(pRtlNtStatusToDosError(nt_status));",
          "838:     return -1;",
          "839:   }",
          "862:   if (file_info.BasicInformation.FileAttributes & FILE_ATTRIBUTE_REPARSE_POINT) {",
          "864:     if (fs__readlink_handle(handle, NULL, &statbuf->st_size) != 0)",
          "865:       return -1;",
          "867:   } else if (file_info.BasicInformation.FileAttributes & FILE_ATTRIBUTE_DIRECTORY) {",
          "873:     statbuf->st_size = file_info.StandardInformation.EndOfFile.QuadPart;",
          "876:   if (file_info.BasicInformation.FileAttributes & FILE_ATTRIBUTE_READONLY)",
          "877:     statbuf->st_mode |= _S_IREAD | (_S_IREAD >> 3) | (_S_IREAD >> 6);",
          "878:   else",
          "879:     statbuf->st_mode |= (_S_IREAD | _S_IWRITE) | ((_S_IREAD | _S_IWRITE) >> 3) |",
          "880:                         ((_S_IREAD | _S_IWRITE) >> 6);",
          "882:   FILETIME_TO_TIMESPEC(statbuf->st_atim, file_info.BasicInformation.LastAccessTime);",
          "883:   FILETIME_TO_TIMESPEC(statbuf->st_ctim, file_info.BasicInformation.ChangeTime);",
          "884:   FILETIME_TO_TIMESPEC(statbuf->st_mtim, file_info.BasicInformation.LastWriteTime);",
          "885:   FILETIME_TO_TIMESPEC(statbuf->st_birthtim, file_info.BasicInformation.CreationTime);",
          "887:   statbuf->st_ino = file_info.InternalInformation.IndexNumber.QuadPart;",
          "890:   statbuf->st_blocks =",
          "891:       file_info.StandardInformation.AllocationSize.QuadPart >> 9ULL;",
          "893:   statbuf->st_nlink = file_info.StandardInformation.NumberOfLinks;",
          "895:   statbuf->st_dev = volume_info.VolumeSerialNumber;",
          "909:   statbuf->st_blksize = 2048;",
          "914:   statbuf->st_flags = 0;",
          "919:   statbuf->st_gid = 0;",
          "920:   statbuf->st_uid = 0;",
          "921:   statbuf->st_rdev = 0;",
          "922:   statbuf->st_gen = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1afdd9a1e5cb7f6a53c4b19017c1df10ba485751",
      "candidate_info": {
        "commit_hash": "1afdd9a1e5cb7f6a53c4b19017c1df10ba485751",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/1afdd9a1e5cb7f6a53c4b19017c1df10ba485751",
        "files": [
          "test/test-tcp-write-queue-order.c"
        ],
        "message": "test: use less requests on tcp-write-queue-order\n\nMakes the test reliably pass on Windows, otherwise the runtime aborts.",
        "before_after_code_files": [
          "test/test-tcp-write-queue-order.c||test/test-tcp-write-queue-order.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/test-tcp-write-queue-order.c||test/test-tcp-write-queue-order.c": [
          "File: test/test-tcp-write-queue-order.c -> test/test-tcp-write-queue-order.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: #include \"uv.h\"",
          "27: #include \"task.h\"",
          "31: static uv_timer_t timer;",
          "32: static uv_tcp_t server;",
          "",
          "[Removed Lines]",
          "29: #define REQ_COUNT 100000",
          "",
          "[Added Lines]",
          "29: #define REQ_COUNT 10000",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "72337966d4a7cdd32b990b9618c4b2349c18042b",
      "candidate_info": {
        "commit_hash": "72337966d4a7cdd32b990b9618c4b2349c18042b",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/72337966d4a7cdd32b990b9618c4b2349c18042b",
        "files": [
          "Makefile.am"
        ],
        "message": "build: fix SunOS and AIX build with autotools",
        "before_after_code_files": [
          "Makefile.am||Makefile.am"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Makefile.am||Makefile.am": [
          "File: Makefile.am -> Makefile.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "107: TESTS = test/run-tests",
          "108: check_PROGRAMS = test/run-tests",
          "109: test_run_tests_SOURCES = test/blackhole-server.c \\",
          "110:                          test/dns-server.c \\",
          "111:                          test/echo-server.c \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "109: test_run_tests_CFLAGS =",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "219:                           test/runner-unix.h",
          "220: endif",
          "224: if AIX",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "223: if AIX",
          "224: test_run_tests_CFLAGS += -D_ALL_SOURCE -D_XOPEN_SOURCE=500",
          "225: endif",
          "227: if SUNOS",
          "228: test_run_tests_CFLAGS += -D__EXTENSIONS__ -D_XOPEN_SOURCE=500",
          "229: endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8c6ea10502ad8c4afa87b7c1b1462a22f59baad7",
      "candidate_info": {
        "commit_hash": "8c6ea10502ad8c4afa87b7c1b1462a22f59baad7",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/8c6ea10502ad8c4afa87b7c1b1462a22f59baad7",
        "files": [
          "include/uv.h",
          "src/unix/process.c",
          "src/win/internal.h",
          "src/win/process-stdio.c",
          "src/win/process.c",
          "test/benchmark-spawn.c",
          "test/test-ipc.c",
          "test/test-ref.c",
          "test/test-spawn.c",
          "test/test-stdio-over-pipes.c"
        ],
        "message": "include: uv_spawn takes const uv_process_options_t*\n\nPassing or returning structs as values makes life hard for people that\nwork with libuv through a foreign function interface. Switch to a\npointer-based approach.\n\nFixes #684.",
        "before_after_code_files": [
          "include/uv.h||include/uv.h",
          "src/unix/process.c||src/unix/process.c",
          "src/win/internal.h||src/win/internal.h",
          "src/win/process-stdio.c||src/win/process-stdio.c",
          "src/win/process.c||src/win/process.c",
          "test/benchmark-spawn.c||test/benchmark-spawn.c",
          "test/test-ipc.c||test/test-ipc.c",
          "test/test-ref.c||test/test-ref.c",
          "test/test-spawn.c||test/test-spawn.c",
          "test/test-stdio-over-pipes.c||test/test-stdio-over-pipes.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [
            "src/unix/process.c||src/unix/process.c"
          ],
          "candidate": [
            "src/unix/process.c||src/unix/process.c"
          ]
        }
      },
      "candidate_diff": {
        "include/uv.h||include/uv.h": [
          "File: include/uv.h -> include/uv.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1502: };",
          "",
          "[Removed Lines]",
          "1505: UV_EXTERN int uv_spawn(uv_loop_t*, uv_process_t*,",
          "1506:     uv_process_options_t options);",
          "",
          "[Added Lines]",
          "1505: UV_EXTERN int uv_spawn(uv_loop_t* loop,",
          "1506:                        uv_process_t* handle,",
          "1507:                        const uv_process_options_t* options);",
          "",
          "---------------"
        ],
        "src/unix/process.c||src/unix/process.c": [
          "File: src/unix/process.c -> src/unix/process.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "270: }",
          "274:                                    int stdio_count,",
          "275:                                    int (*pipes)[2],",
          "276:                                    int error_fd) {",
          "",
          "[Removed Lines]",
          "273: static void uv__process_child_init(uv_process_options_t options,",
          "",
          "[Added Lines]",
          "273: static void uv__process_child_init(const uv_process_options_t* options,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "278:   int use_fd;",
          "279:   int fd;",
          "282:     setsid();",
          "284:   for (fd = 0; fd < stdio_count; fd++) {",
          "",
          "[Removed Lines]",
          "281:   if (options.flags & UV_PROCESS_DETACHED)",
          "",
          "[Added Lines]",
          "281:   if (options->flags & UV_PROCESS_DETACHED)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "313:       uv__nonblock(fd, 0);",
          "314:   }",
          "317:     uv__write_int(error_fd, -errno);",
          "318:     perror(\"chdir()\");",
          "319:     _exit(127);",
          "320:   }",
          "323:     uv__write_int(error_fd, -errno);",
          "324:     perror(\"setgid()\");",
          "325:     _exit(127);",
          "326:   }",
          "329:     uv__write_int(error_fd, -errno);",
          "330:     perror(\"setuid()\");",
          "331:     _exit(127);",
          "332:   }",
          "336:   }",
          "339:   uv__write_int(error_fd, -errno);",
          "340:   perror(\"execvp()\");",
          "341:   _exit(127);",
          "",
          "[Removed Lines]",
          "316:   if (options.cwd && chdir(options.cwd)) {",
          "322:   if ((options.flags & UV_PROCESS_SETGID) && setgid(options.gid)) {",
          "328:   if ((options.flags & UV_PROCESS_SETUID) && setuid(options.uid)) {",
          "334:   if (options.env) {",
          "335:     environ = options.env;",
          "338:   execvp(options.file, options.args);",
          "",
          "[Added Lines]",
          "316:   if (options->cwd != NULL && chdir(options->cwd)) {",
          "322:   if ((options->flags & UV_PROCESS_SETGID) && setgid(options->gid)) {",
          "328:   if ((options->flags & UV_PROCESS_SETUID) && setuid(options->uid)) {",
          "334:   if (options->env != NULL) {",
          "335:     environ = options->env;",
          "338:   execvp(options->file, options->args);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "345: int uv_spawn(uv_loop_t* loop,",
          "346:              uv_process_t* process,",
          "348:   int signal_pipe[2] = { -1, -1 };",
          "349:   int (*pipes)[2];",
          "350:   int stdio_count;",
          "",
          "[Removed Lines]",
          "347:              const uv_process_options_t options) {",
          "",
          "[Added Lines]",
          "347:              const uv_process_options_t* options) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "354:   int err;",
          "355:   int i;",
          "364:   uv__handle_init(loop, (uv_handle_t*)process, UV_PROCESS);",
          "365:   QUEUE_INIT(&process->queue);",
          "368:   if (stdio_count < 3)",
          "369:     stdio_count = 3;",
          "",
          "[Removed Lines]",
          "357:   assert(options.file != NULL);",
          "358:   assert(!(options.flags & ~(UV_PROCESS_DETACHED |",
          "359:                              UV_PROCESS_SETGID |",
          "360:                              UV_PROCESS_SETUID |",
          "361:                              UV_PROCESS_WINDOWS_HIDE |",
          "362:                              UV_PROCESS_WINDOWS_VERBATIM_ARGUMENTS)));",
          "367:   stdio_count = options.stdio_count;",
          "",
          "[Added Lines]",
          "357:   assert(options->file != NULL);",
          "358:   assert(!(options->flags & ~(UV_PROCESS_DETACHED |",
          "359:                               UV_PROCESS_SETGID |",
          "360:                               UV_PROCESS_SETUID |",
          "361:                               UV_PROCESS_WINDOWS_HIDE |",
          "362:                               UV_PROCESS_WINDOWS_VERBATIM_ARGUMENTS)));",
          "367:   stdio_count = options->stdio_count;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "378:     pipes[i][1] = -1;",
          "379:   }",
          "383:     if (err)",
          "384:       goto error;",
          "385:   }",
          "",
          "[Removed Lines]",
          "381:   for (i = 0; i < options.stdio_count; i++) {",
          "382:     err = uv__process_init_stdio(options.stdio + i, pipes[i]);",
          "",
          "[Added Lines]",
          "381:   for (i = 0; i < options->stdio_count; i++) {",
          "382:     err = uv__process_init_stdio(options->stdio + i, pipes[i]);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "443:   close(signal_pipe[0]);",
          "447:     if (err == 0)",
          "448:       continue;",
          "450:     while (i--)",
          "453:     goto error;",
          "454:   }",
          "",
          "[Removed Lines]",
          "445:   for (i = 0; i < options.stdio_count; i++) {",
          "446:     err = uv__process_open_stream(options.stdio + i, pipes[i], i == 0);",
          "451:       uv__process_close_stream(options.stdio + i);",
          "",
          "[Added Lines]",
          "445:   for (i = 0; i < options->stdio_count; i++) {",
          "446:     err = uv__process_open_stream(options->stdio + i, pipes[i], i == 0);",
          "451:       uv__process_close_stream(options->stdio + i);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "457:   QUEUE_INSERT_TAIL(q, &process->queue);",
          "459:   process->pid = pid;",
          "461:   uv__handle_start(process);",
          "463:   free(pipes);",
          "",
          "[Removed Lines]",
          "460:   process->exit_cb = options.exit_cb;",
          "",
          "[Added Lines]",
          "460:   process->exit_cb = options->exit_cb;",
          "",
          "---------------"
        ],
        "src/win/internal.h||src/win/internal.h": [
          "File: src/win/internal.h -> src/win/internal.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "316: void uv__stdio_destroy(BYTE* buffer);",
          "317: void uv__stdio_noinherit(BYTE* buffer);",
          "318: int uv__stdio_verify(BYTE* buffer, WORD size);",
          "",
          "[Removed Lines]",
          "314: int uv__stdio_create(uv_loop_t* loop, uv_process_options_t* options,",
          "315:     BYTE** buffer_ptr);",
          "",
          "[Added Lines]",
          "314: int uv__stdio_create(uv_loop_t* loop,",
          "315:                      const uv_process_options_t* options,",
          "316:                      BYTE** buffer_ptr);",
          "",
          "---------------"
        ],
        "src/win/process-stdio.c||src/win/process-stdio.c": [
          "File: src/win/process-stdio.c -> src/win/process-stdio.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "260: }",
          "265:   BYTE* buffer;",
          "266:   int count, i;",
          "267:   int err;",
          "",
          "[Removed Lines]",
          "263: int uv__stdio_create(uv_loop_t* loop, uv_process_options_t* options,",
          "264:     BYTE** buffer_ptr) {",
          "",
          "[Added Lines]",
          "263: int uv__stdio_create(uv_loop_t* loop,",
          "264:                      const uv_process_options_t* options,",
          "265:                      BYTE** buffer_ptr) {",
          "",
          "---------------"
        ],
        "src/win/process.c||src/win/process.c": [
          "File: src/win/process.c -> src/win/process.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "802: }",
          "807:   int i;",
          "808:   int err = 0;",
          "809:   WCHAR* path = NULL;",
          "",
          "[Removed Lines]",
          "805: int uv_spawn(uv_loop_t* loop, uv_process_t* process,",
          "806:     uv_process_options_t options) {",
          "",
          "[Added Lines]",
          "805: int uv_spawn(uv_loop_t* loop,",
          "806:              uv_process_t* process,",
          "807:              const uv_process_options_t* options) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "814:   PROCESS_INFORMATION info;",
          "815:   DWORD process_flags;",
          "818:     return UV_ENOTSUP;",
          "819:   }",
          "823:     return UV_EINVAL;",
          "824:   }",
          "833:   uv_process_init(loop, process);",
          "837:   if (err)",
          "838:     goto immediate_failure;",
          "843:   if (err)",
          "844:     goto immediate_failure;",
          "848:      if (err)",
          "849:        goto immediate_failure;",
          "850:   }",
          "855:     if (err)",
          "856:       goto immediate_failure;",
          "",
          "[Removed Lines]",
          "817:   if (options.flags & (UV_PROCESS_SETGID | UV_PROCESS_SETUID)) {",
          "821:   if (options.file == NULL ||",
          "822:       options.args == NULL) {",
          "826:   assert(options.file != NULL);",
          "827:   assert(!(options.flags & ~(UV_PROCESS_DETACHED |",
          "828:                              UV_PROCESS_SETGID |",
          "829:                              UV_PROCESS_SETUID |",
          "830:                              UV_PROCESS_WINDOWS_HIDE |",
          "831:                              UV_PROCESS_WINDOWS_VERBATIM_ARGUMENTS)));",
          "834:   process->exit_cb = options.exit_cb;",
          "836:   err = uv_utf8_to_utf16_alloc(options.file, &application);",
          "840:   err = make_program_args(options.args,",
          "841:                           options.flags & UV_PROCESS_WINDOWS_VERBATIM_ARGUMENTS,",
          "842:                           &arguments);",
          "846:   if (options.env) {",
          "847:      err = make_program_env(options.env, &env);",
          "852:   if (options.cwd) {",
          "854:     err = uv_utf8_to_utf16_alloc(options.cwd, &cwd);",
          "",
          "[Added Lines]",
          "818:   if (options->flags & (UV_PROCESS_SETGID | UV_PROCESS_SETUID)) {",
          "822:   if (options->file == NULL ||",
          "823:       options->args == NULL) {",
          "827:   assert(options->file != NULL);",
          "828:   assert(!(options->flags & ~(UV_PROCESS_DETACHED |",
          "829:                               UV_PROCESS_SETGID |",
          "830:                               UV_PROCESS_SETUID |",
          "831:                               UV_PROCESS_WINDOWS_HIDE |",
          "832:                               UV_PROCESS_WINDOWS_VERBATIM_ARGUMENTS)));",
          "835:   process->exit_cb = options->exit_cb;",
          "837:   err = uv_utf8_to_utf16_alloc(options->file, &application);",
          "841:   err = make_program_args(",
          "842:       options->args,",
          "843:       options->flags & UV_PROCESS_WINDOWS_VERBATIM_ARGUMENTS,",
          "844:       &arguments);",
          "848:   if (options->env) {",
          "849:      err = make_program_env(options->env, &env);",
          "854:   if (options->cwd) {",
          "856:     err = uv_utf8_to_utf16_alloc(options->cwd, &cwd);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "901:     }",
          "902:   }",
          "905:   if (err)",
          "906:     goto immediate_failure;",
          "",
          "[Removed Lines]",
          "904:   err = uv__stdio_create(loop, &options, &process->child_stdio_buffer);",
          "",
          "[Added Lines]",
          "906:   err = uv__stdio_create(loop, options, &process->child_stdio_buffer);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "929:   startup.hStdOutput = uv__stdio_handle(process->child_stdio_buffer, 1);",
          "930:   startup.hStdError = uv__stdio_handle(process->child_stdio_buffer, 2);",
          "934:     startup.wShowWindow = SW_HIDE;",
          "935:   } else {",
          "",
          "[Removed Lines]",
          "932:   if (options.flags & UV_PROCESS_WINDOWS_HIDE) {",
          "",
          "[Added Lines]",
          "934:   if (options->flags & UV_PROCESS_WINDOWS_HIDE) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "939:   process_flags = CREATE_UNICODE_ENVIRONMENT;",
          "",
          "[Removed Lines]",
          "941:   if (options.flags & UV_PROCESS_DETACHED) {",
          "",
          "[Added Lines]",
          "943:   if (options->flags & UV_PROCESS_DETACHED) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "972:       uv_once(&uv_global_job_handle_init_guard_, uv__init_global_job_handle);",
          "974:       if (!AssignProcessToJobObject(uv_global_job_handle_, info.hProcess)) {",
          "",
          "[Removed Lines]",
          "971:     if (!(options.flags & UV_PROCESS_DETACHED)) {",
          "",
          "[Added Lines]",
          "973:     if (!(options->flags & UV_PROCESS_DETACHED)) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "989:     }",
          "994:       if (fdopt->flags & UV_CREATE_PIPE &&",
          "995:           fdopt->data.stream->type == UV_NAMED_PIPE &&",
          "996:           ((uv_pipe_t*) fdopt->data.stream)->ipc) {",
          "",
          "[Removed Lines]",
          "992:     for (i = 0; i < options.stdio_count; i++) {",
          "993:       const uv_stdio_container_t* fdopt = &options.stdio[i];",
          "",
          "[Added Lines]",
          "994:     for (i = 0; i < options->stdio_count; i++) {",
          "995:       const uv_stdio_container_t* fdopt = &options->stdio[i];",
          "",
          "---------------"
        ],
        "test/benchmark-spawn.c||test/benchmark-spawn.c": [
          "File: test/benchmark-spawn.c -> test/benchmark-spawn.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "122:   options.stdio[1].flags = UV_CREATE_PIPE | UV_WRITABLE_PIPE;",
          "123:   options.stdio[1].data.stream = (uv_stream_t*)&out;",
          "126:   ASSERT(r == 0);",
          "128:   process_open = 1;",
          "",
          "[Removed Lines]",
          "125:   r = uv_spawn(loop, &process, options);",
          "",
          "[Added Lines]",
          "125:   r = uv_spawn(loop, &process, &options);",
          "",
          "---------------"
        ],
        "test/test-ipc.c||test/test-ipc.c": [
          "File: test/test-ipc.c -> test/test-ipc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "234:   options.stdio[0].data.stream = (uv_stream_t*)channel;",
          "235:   options.stdio_count = 1;",
          "238:   ASSERT(r == 0);",
          "239: }",
          "",
          "[Removed Lines]",
          "237:   r = uv_spawn(uv_default_loop(), process, options);",
          "",
          "[Added Lines]",
          "237:   r = uv_spawn(uv_default_loop(), process, &options);",
          "",
          "---------------"
        ],
        "test/test-ref.c||test/test-ref.c": [
          "File: test/test-ref.c -> test/test-ref.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "403:   options.args = argv;",
          "404:   options.exit_cb = NULL;",
          "407:   ASSERT(r == 0);",
          "409:   uv_unref((uv_handle_t*)&h);",
          "",
          "[Removed Lines]",
          "406:   r = uv_spawn(uv_default_loop(), &h, options);",
          "",
          "[Added Lines]",
          "406:   r = uv_spawn(uv_default_loop(), &h, &options);",
          "",
          "---------------"
        ],
        "test/test-spawn.c||test/test-spawn.c": [
          "File: test/test-spawn.c -> test/test-spawn.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "166: TEST_IMPL(spawn_fails) {",
          "167:   init_process_options(\"\", exit_cb_expect_enoent);",
          "168:   options.file = options.args[0] = \"program-that-had-better-not-exist\";",
          "170:   ASSERT(0 != uv_is_active((uv_handle_t*)&process));",
          "171:   ASSERT(0 == uv_run(uv_default_loop(), UV_RUN_DEFAULT));",
          "172:   ASSERT(1 == exit_cb_called);",
          "",
          "[Removed Lines]",
          "169:   ASSERT(0 == uv_spawn(uv_default_loop(), &process, options));",
          "",
          "[Added Lines]",
          "169:   ASSERT(0 == uv_spawn(uv_default_loop(), &process, &options));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "182:   init_process_options(\"spawn_helper1\", exit_cb);",
          "185:   ASSERT(r == 0);",
          "187:   r = uv_run(uv_default_loop(), UV_RUN_DEFAULT);",
          "",
          "[Removed Lines]",
          "184:   r = uv_spawn(uv_default_loop(), &process, options);",
          "",
          "[Added Lines]",
          "184:   r = uv_spawn(uv_default_loop(), &process, &options);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "209:   options.stdio[1].data.stream = (uv_stream_t*)&out;",
          "210:   options.stdio_count = 2;",
          "213:   ASSERT(r == 0);",
          "215:   r = uv_read_start((uv_stream_t*) &out, on_alloc, on_read);",
          "",
          "[Removed Lines]",
          "212:   r = uv_spawn(uv_default_loop(), &process, options);",
          "",
          "[Added Lines]",
          "212:   r = uv_spawn(uv_default_loop(), &process, &options);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "252:   options.stdio[1].data.fd = file;",
          "253:   options.stdio_count = 2;",
          "256:   ASSERT(r == 0);",
          "258:   r = uv_run(uv_default_loop(), UV_RUN_DEFAULT);",
          "",
          "[Removed Lines]",
          "255:   r = uv_spawn(uv_default_loop(), &process, options);",
          "",
          "[Added Lines]",
          "255:   r = uv_spawn(uv_default_loop(), &process, &options);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "301:   options.stdio[1].data.stream = (uv_stream_t*)&out;",
          "302:   options.stdio_count = 2;",
          "305:   ASSERT(r == 0);",
          "307:   buf.base = buffer;",
          "",
          "[Removed Lines]",
          "304:   r = uv_spawn(uv_default_loop(), &process, options);",
          "",
          "[Added Lines]",
          "304:   r = uv_spawn(uv_default_loop(), &process, &options);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "340:   options.stdio[3].data.stream = (uv_stream_t*)&pipe;",
          "341:   options.stdio_count = 4;",
          "344:   ASSERT(r == 0);",
          "346:   r = uv_read_start((uv_stream_t*) &pipe, on_alloc, on_read);",
          "",
          "[Removed Lines]",
          "343:   r = uv_spawn(uv_default_loop(), &process, options);",
          "",
          "[Added Lines]",
          "343:   r = uv_spawn(uv_default_loop(), &process, &options);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "367:   options.stdio = NULL;",
          "368:   options.stdio_count = 0;",
          "371:   ASSERT(r == 0);",
          "373:   r = uv_run(uv_default_loop(), UV_RUN_DEFAULT);",
          "",
          "[Removed Lines]",
          "370:   r = uv_spawn(uv_default_loop(), &process, options);",
          "",
          "[Added Lines]",
          "370:   r = uv_spawn(uv_default_loop(), &process, &options);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "387:   init_process_options(\"spawn_helper4\", kill_cb);",
          "390:   ASSERT(r == 0);",
          "392:   r = uv_timer_init(uv_default_loop(), &timer);",
          "",
          "[Removed Lines]",
          "389:   r = uv_spawn(uv_default_loop(), &process, options);",
          "",
          "[Added Lines]",
          "389:   r = uv_spawn(uv_default_loop(), &process, &options);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "427:   options.env = NULL;",
          "430:   ASSERT(r == 0);",
          "432:   r = uv_read_start((uv_stream_t*) &out, on_alloc, on_read);",
          "",
          "[Removed Lines]",
          "429:   r = uv_spawn(uv_default_loop(), &process, options);",
          "",
          "[Added Lines]",
          "429:   r = uv_spawn(uv_default_loop(), &process, &options);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "454:   options.flags |= UV_PROCESS_DETACHED;",
          "457:   ASSERT(r == 0);",
          "459:   uv_unref((uv_handle_t*)&process);",
          "",
          "[Removed Lines]",
          "456:   r = uv_spawn(uv_default_loop(), &process, options);",
          "",
          "[Added Lines]",
          "456:   r = uv_spawn(uv_default_loop(), &process, &options);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "502:   options.stdio[2].data.stream = (uv_stream_t*)&err;",
          "503:   options.stdio_count = 3;",
          "506:   ASSERT(r == 0);",
          "508:   buf = uv_buf_init(message, sizeof message);",
          "",
          "[Removed Lines]",
          "505:   r = uv_spawn(uv_default_loop(), &process, options);",
          "",
          "[Added Lines]",
          "505:   r = uv_spawn(uv_default_loop(), &process, &options);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "551:   options.stdio[1].data.stream = (uv_stream_t*)&out;",
          "552:   options.stdio_count = 2;",
          "555:   ASSERT(r == 0);",
          "",
          "[Removed Lines]",
          "554:   r = uv_spawn(uv_default_loop(), &process, options);",
          "",
          "[Added Lines]",
          "554:   r = uv_spawn(uv_default_loop(), &process, &options);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "589:   init_process_options(\"spawn_helper4\", kill_cb);",
          "592:   ASSERT(r == 0);",
          "",
          "[Removed Lines]",
          "591:   r = uv_spawn(uv_default_loop(), &process, options);",
          "",
          "[Added Lines]",
          "591:   r = uv_spawn(uv_default_loop(), &process, &options);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "641:                                 NULL);",
          "642:   ASSERT(pipe_handle != INVALID_HANDLE_VALUE);",
          "645:   ASSERT(r == 0);",
          "647:   r = uv_read_start((uv_stream_t*) &out, on_alloc, on_read);",
          "",
          "[Removed Lines]",
          "644:   r = uv_spawn(uv_default_loop(), &process, options);",
          "",
          "[Added Lines]",
          "644:   r = uv_spawn(uv_default_loop(), &process, &options);",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "806:   options.gid = pw->pw_gid;",
          "807:   options.flags = UV_PROCESS_SETUID | UV_PROCESS_SETGID;",
          "810:   ASSERT(r == 0);",
          "812:   r = uv_run(uv_default_loop(), UV_RUN_DEFAULT);",
          "",
          "[Removed Lines]",
          "809:   r = uv_spawn(uv_default_loop(), &process, options);",
          "",
          "[Added Lines]",
          "809:   r = uv_spawn(uv_default_loop(), &process, &options);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "840:   options.flags |= UV_PROCESS_SETUID;",
          "841:   options.uid = 0;",
          "844:   ASSERT(r == 0);",
          "846:   r = uv_run(uv_default_loop(), UV_RUN_DEFAULT);",
          "",
          "[Removed Lines]",
          "843:   r = uv_spawn(uv_default_loop(), &process, options);",
          "",
          "[Added Lines]",
          "843:   r = uv_spawn(uv_default_loop(), &process, &options);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "872:   options.flags |= UV_PROCESS_SETGID;",
          "873:   options.gid = 0;",
          "876:   ASSERT(r == 0);",
          "878:   r = uv_run(uv_default_loop(), UV_RUN_DEFAULT);",
          "",
          "[Removed Lines]",
          "875:   r = uv_spawn(uv_default_loop(), &process, options);",
          "",
          "[Added Lines]",
          "875:   r = uv_spawn(uv_default_loop(), &process, &options);",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "904:   options.flags |= UV_PROCESS_SETUID;",
          "905:   options.uid = (uv_uid_t) -42424242;",
          "908:   ASSERT(r == UV_ENOTSUP);",
          "910:   r = uv_run(uv_default_loop(), UV_RUN_DEFAULT);",
          "",
          "[Removed Lines]",
          "907:   r = uv_spawn(uv_default_loop(), &process, options);",
          "",
          "[Added Lines]",
          "907:   r = uv_spawn(uv_default_loop(), &process, &options);",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "925:   options.flags |= UV_PROCESS_SETGID;",
          "926:   options.gid = (uv_gid_t) -42424242;",
          "929:   ASSERT(r == UV_ENOTSUP);",
          "931:   r = uv_run(uv_default_loop(), UV_RUN_DEFAULT);",
          "",
          "[Removed Lines]",
          "928:   r = uv_spawn(uv_default_loop(), &process, options);",
          "",
          "[Added Lines]",
          "928:   r = uv_spawn(uv_default_loop(), &process, &options);",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "942: TEST_IMPL(spawn_auto_unref) {",
          "943:   init_process_options(\"spawn_helper1\", NULL);",
          "945:   ASSERT(0 == uv_run(uv_default_loop(), UV_RUN_DEFAULT));",
          "946:   ASSERT(0 == uv_is_closing((uv_handle_t*) &process));",
          "947:   uv_close((uv_handle_t*) &process, NULL);",
          "",
          "[Removed Lines]",
          "944:   ASSERT(0 == uv_spawn(uv_default_loop(), &process, options));",
          "",
          "[Added Lines]",
          "944:   ASSERT(0 == uv_spawn(uv_default_loop(), &process, &options));",
          "",
          "---------------"
        ],
        "test/test-stdio-over-pipes.c||test/test-stdio-over-pipes.c": [
          "File: test/test-stdio-over-pipes.c -> test/test-stdio-over-pipes.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "136:   options.stdio[1].data.stream = (uv_stream_t*)&out;",
          "137:   options.stdio_count = 2;",
          "140:   ASSERT(r == 0);",
          "142:   r = uv_read_start((uv_stream_t*) &out, on_alloc, on_read);",
          "",
          "[Removed Lines]",
          "139:   r = uv_spawn(loop, &process, options);",
          "",
          "[Added Lines]",
          "139:   r = uv_spawn(loop, &process, &options);",
          "",
          "---------------"
        ]
      }
    }
  ]
}