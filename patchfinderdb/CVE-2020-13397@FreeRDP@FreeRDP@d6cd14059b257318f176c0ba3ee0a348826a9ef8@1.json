{
  "cve_id": "CVE-2020-13397",
  "cve_desc": "An issue was discovered in FreeRDP before 2.1.1. An out-of-bounds (OOB) read vulnerability has been detected in security_fips_decrypt in libfreerdp/core/security.c due to an uninitialized value.",
  "repo": "FreeRDP/FreeRDP",
  "patch_hash": "d6cd14059b257318f176c0ba3ee0a348826a9ef8",
  "patch_info": {
    "commit_hash": "d6cd14059b257318f176c0ba3ee0a348826a9ef8",
    "repo": "FreeRDP/FreeRDP",
    "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/d6cd14059b257318f176c0ba3ee0a348826a9ef8",
    "files": [
      "libfreerdp/core/security.c"
    ],
    "message": "Fixed GHSL-2020-101 missing NULL check\n\n(cherry picked from commit b207dbba35c505bbc3ad5aadc10b34980c6b7e8e)",
    "before_after_code_files": [
      "libfreerdp/core/security.c||libfreerdp/core/security.c"
    ]
  },
  "patch_diff": {
    "libfreerdp/core/security.c||libfreerdp/core/security.c": [
      "File: libfreerdp/core/security.c -> libfreerdp/core/security.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "816: {",
      "817:  size_t olen;",
      "819:  if (!winpr_Cipher_Update(rdp->fips_decrypt, data, length, data, &olen))",
      "820:   return FALSE;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "819:  if (!rdp || !rdp->fips_decrypt)",
      "820:   return FALSE;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "87bca1088a29874e93f403f594bb9aa18b99604d",
      "candidate_info": {
        "commit_hash": "87bca1088a29874e93f403f594bb9aa18b99604d",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/87bca1088a29874e93f403f594bb9aa18b99604d",
        "files": [
          "libfreerdp/core/gateway/tsg.c"
        ],
        "message": "Fixed #6199: Reading version information in tsg\n\n(cherry picked from commit e501c56e5ca0c76c4019e7048cba3ee63331d830)",
        "before_after_code_files": [
          "libfreerdp/core/gateway/tsg.c||libfreerdp/core/gateway/tsg.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libfreerdp/core/gateway/tsg.c||libfreerdp/core/gateway/tsg.c": [
          "File: libfreerdp/core/gateway/tsg.c -> libfreerdp/core/gateway/tsg.c"
        ]
      }
    },
    {
      "candidate_hash": "73fd3c0a7c27daa94ead835d5a3e92355aca39a9",
      "candidate_info": {
        "commit_hash": "73fd3c0a7c27daa94ead835d5a3e92355aca39a9",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/73fd3c0a7c27daa94ead835d5a3e92355aca39a9",
        "files": [
          "libfreerdp/primitives/prim_shift.c",
          "libfreerdp/primitives/prim_shift_opt.c",
          "libfreerdp/primitives/prim_templates.h",
          "libfreerdp/primitives/test/TestPrimitivesShift.c"
        ],
        "message": "Fixed undefined behaviour in primitives shift\n\n(cherry picked from commit 436bd3dbb103c7c49e51ffb1cafad6f25ab05d66)",
        "before_after_code_files": [
          "libfreerdp/primitives/prim_shift.c||libfreerdp/primitives/prim_shift.c",
          "libfreerdp/primitives/prim_shift_opt.c||libfreerdp/primitives/prim_shift_opt.c",
          "libfreerdp/primitives/prim_templates.h||libfreerdp/primitives/prim_templates.h",
          "libfreerdp/primitives/test/TestPrimitivesShift.c||libfreerdp/primitives/test/TestPrimitivesShift.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libfreerdp/primitives/prim_shift.c||libfreerdp/primitives/prim_shift.c": [
          "File: libfreerdp/primitives/prim_shift.c -> libfreerdp/primitives/prim_shift.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: {",
          "27:  if (val == 0)",
          "28:   return PRIMITIVES_SUCCESS;",
          "30:  while (len--)",
          "33:  return PRIMITIVES_SUCCESS;",
          "34: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29:  if (val >= 16)",
          "30:   return -1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38: {",
          "39:  if (val == 0)",
          "40:   return PRIMITIVES_SUCCESS;",
          "42:  while (len--)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43:  if (val >= 16)",
          "44:   return -1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "51: {",
          "52:  if (val == 0)",
          "53:   return PRIMITIVES_SUCCESS;",
          "55:  while (len--)",
          "58:  return PRIMITIVES_SUCCESS;",
          "59: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58:  if (val >= 16)",
          "59:   return -1;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "64: {",
          "65:  if (val == 0)",
          "66:   return PRIMITIVES_SUCCESS;",
          "68:  while (len--)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "73:  if (val >= 16)",
          "74:   return -1;",
          "",
          "---------------"
        ],
        "libfreerdp/primitives/prim_shift_opt.c||libfreerdp/primitives/prim_shift_opt.c": [
          "File: libfreerdp/primitives/prim_shift_opt.c -> libfreerdp/primitives/prim_shift_opt.c"
        ],
        "libfreerdp/primitives/prim_templates.h||libfreerdp/primitives/prim_templates.h": [
          "File: libfreerdp/primitives/prim_templates.h -> libfreerdp/primitives/prim_templates.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "51:   const _type_* sptr = pSrc;                                                    \\",
          "52:   _type_* dptr = pDst;                                                          \\",
          "53:   size_t count;                                                                 \\",
          "54:   if (len < 16) /* pointless if too small */                                    \\",
          "55:   {                                                                             \\",
          "56:    return _fallback_(pSrc, val, pDst, len);                                  \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "54:   if (val == 0)                                                                 \\",
          "55:    return PRIMITIVES_SUCCESS;                                                \\",
          "56:   if (val >= 16)                                                                \\",
          "57:    return -1;                                                                \\",
          "",
          "---------------"
        ],
        "libfreerdp/primitives/test/TestPrimitivesShift.c||libfreerdp/primitives/test/TestPrimitivesShift.c": [
          "File: libfreerdp/primitives/test/TestPrimitivesShift.c -> libfreerdp/primitives/test/TestPrimitivesShift.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "29:  UINT32 val;",
          "30:  winpr_RAND((BYTE*)&val, sizeof(val));",
          "31:  winpr_RAND((BYTE*)src, sizeof(src));",
          "34:  status = generic->lShiftC_16s(src + 1, val, d1 + 1, FUNC_TEST_SIZE);",
          "",
          "[Removed Lines]",
          "32:  val = (val % (FUNC_TEST_SIZE - 1)) + 1;",
          "",
          "[Added Lines]",
          "32:  val = val % 16;",
          "34:  status = generic->lShiftC_16s(src + 1, 16, d1 + 1, FUNC_TEST_SIZE);",
          "36:  if (status == PRIMITIVES_SUCCESS)",
          "37:   return FALSE;",
          "39:  status = optimized->lShiftC_16s(src + 1, 16, d1 + 1, FUNC_TEST_SIZE);",
          "41:  if (status == PRIMITIVES_SUCCESS)",
          "42:   return FALSE;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63:  UINT32 val;",
          "64:  winpr_RAND((BYTE*)&val, sizeof(val));",
          "65:  winpr_RAND((BYTE*)src, sizeof(src));",
          "68:  status = generic->lShiftC_16u(src + 1, val, d1 + 1, FUNC_TEST_SIZE);",
          "",
          "[Removed Lines]",
          "66:  val = (val % (FUNC_TEST_SIZE - 1)) + 1;",
          "",
          "[Added Lines]",
          "77:  val = val % 16;",
          "80:  status = generic->lShiftC_16u(src + 1, 16, d1 + 1, FUNC_TEST_SIZE);",
          "82:  if (status == PRIMITIVES_SUCCESS)",
          "83:   return FALSE;",
          "85:  status = optimized->lShiftC_16u(src + 1, 16, d1 + 1, FUNC_TEST_SIZE);",
          "87:  if (status == PRIMITIVES_SUCCESS)",
          "88:   return FALSE;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "97:  UINT32 val;",
          "98:  winpr_RAND((BYTE*)&val, sizeof(val));",
          "99:  winpr_RAND((BYTE*)src, sizeof(src));",
          "102:  status = generic->rShiftC_16s(src + 1, val, d1 + 1, FUNC_TEST_SIZE);",
          "",
          "[Removed Lines]",
          "100:  val = (val % (FUNC_TEST_SIZE - 1)) + 1;",
          "",
          "[Added Lines]",
          "123:  val = val % 16;",
          "126:  status = generic->rShiftC_16s(src + 1, 16, d1 + 1, FUNC_TEST_SIZE);",
          "128:  if (status == PRIMITIVES_SUCCESS)",
          "129:   return FALSE;",
          "131:  status = optimized->rShiftC_16s(src + 1, 16, d1 + 1, FUNC_TEST_SIZE);",
          "133:  if (status == PRIMITIVES_SUCCESS)",
          "134:   return FALSE;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "131:  UINT32 val;",
          "132:  winpr_RAND((BYTE*)&val, sizeof(val));",
          "133:  winpr_RAND((BYTE*)src, sizeof(src));",
          "136:  status = generic->rShiftC_16u(src + 1, val, d1 + 1, FUNC_TEST_SIZE);",
          "",
          "[Removed Lines]",
          "134:  val = (val % (FUNC_TEST_SIZE - 1)) + 1;",
          "",
          "[Added Lines]",
          "169:  val = val % 16;",
          "171:  status = generic->rShiftC_16u(src + 1, 16, d1 + 1, FUNC_TEST_SIZE);",
          "173:  if (status == PRIMITIVES_SUCCESS)",
          "174:   return FALSE;",
          "176:  status = optimized->rShiftC_16u(src + 1, 16, d1 + 1, FUNC_TEST_SIZE);",
          "178:  if (status == PRIMITIVES_SUCCESS)",
          "179:   return FALSE;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "166:  INT32 val;",
          "167:  winpr_RAND((BYTE*)&tmp, sizeof(tmp));",
          "168:  winpr_RAND((BYTE*)src, sizeof(src));",
          "171:  status = generic->shiftC_16s(src + 1, val, d1 + 1, FUNC_TEST_SIZE);",
          "",
          "[Removed Lines]",
          "169:  val = (tmp % (FUNC_TEST_SIZE - 1)) + 1;",
          "",
          "[Added Lines]",
          "215:  val = tmp % 16;",
          "218:  status = generic->shiftC_16s(src + 1, 16, d1 + 1, FUNC_TEST_SIZE);",
          "220:  if (status == PRIMITIVES_SUCCESS)",
          "221:   return FALSE;",
          "223:  status = optimized->shiftC_16s(src + 1, 16, d1 + 1, FUNC_TEST_SIZE);",
          "225:  if (status == PRIMITIVES_SUCCESS)",
          "226:   return FALSE;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "221:  INT32 val;",
          "222:  winpr_RAND((BYTE*)&tmp, sizeof(tmp));",
          "223:  winpr_RAND((BYTE*)src, sizeof(src));",
          "226:  status = generic->shiftC_16u(src + 1, val, d1 + 1, FUNC_TEST_SIZE);",
          "",
          "[Removed Lines]",
          "224:  val = (tmp % (FUNC_TEST_SIZE - 1)) + 1;",
          "",
          "[Added Lines]",
          "282:  val = tmp % 16;",
          "285:  status = generic->shiftC_16u(src + 1, 16, d1 + 1, FUNC_TEST_SIZE);",
          "286:  if (status == PRIMITIVES_SUCCESS)",
          "287:   return FALSE;",
          "289:  status = optimized->shiftC_16u(src + 1, 16, d1 + 1, FUNC_TEST_SIZE);",
          "291:  if (status == PRIMITIVES_SUCCESS)",
          "292:   return FALSE;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "275:  winpr_RAND((BYTE*)src, sizeof(src));",
          "276:  winpr_RAND((BYTE*)&val, sizeof(val));",
          "278:  if (!speed_test(\"lShift_16s\", \"aligned\", g_Iterations, (speed_test_fkt)generic->lShiftC_16s,",
          "279:                  (speed_test_fkt)optimized->lShiftC_16s, src, val, dst, MAX_TEST_SIZE))",
          "280:   return FALSE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "347:  val = val % 16;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "294:  winpr_RAND((BYTE*)&val, sizeof(val));",
          "295:  winpr_RAND((BYTE*)src, sizeof(src));",
          "297:  if (!speed_test(\"lShift_16u\", \"aligned\", g_Iterations, (speed_test_fkt)generic->lShiftC_16u,",
          "298:                  (speed_test_fkt)optimized->lShiftC_16u, src, val, dst, MAX_TEST_SIZE))",
          "299:   return FALSE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "367:  val = val % 16;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "313:  winpr_RAND((BYTE*)src, sizeof(src));",
          "314:  winpr_RAND((BYTE*)&val, sizeof(val));",
          "316:  if (!speed_test(\"rShift_16s\", \"aligned\", g_Iterations, (speed_test_fkt)generic->rShiftC_16s,",
          "317:                  (speed_test_fkt)optimized->rShiftC_16s, src, val, dst, MAX_TEST_SIZE))",
          "318:   return FALSE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "387:  val = val % 16;",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "332:  winpr_RAND((BYTE*)&val, sizeof(val));",
          "333:  winpr_RAND((BYTE*)src, sizeof(src));",
          "335:  if (!speed_test(\"rShift_16u\", \"aligned\", g_Iterations, (speed_test_fkt)generic->rShiftC_16u,",
          "336:                  (speed_test_fkt)optimized->rShiftC_16u, src, val, dst, MAX_TEST_SIZE))",
          "337:   return FALSE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "407:  val = val % 16;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fba85da6733f2a7038a4cb0cb21ddedce7e667ce",
      "candidate_info": {
        "commit_hash": "fba85da6733f2a7038a4cb0cb21ddedce7e667ce",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/fba85da6733f2a7038a4cb0cb21ddedce7e667ce",
        "files": [
          "libfreerdp/core/nla.c"
        ],
        "message": "Ensure buffers are NULL before reuse in NLA\n\n(cherry picked from commit 5f53b2b7c7109016b7127d595e13bd333ac77613)",
        "before_after_code_files": [
          "libfreerdp/core/nla.c||libfreerdp/core/nla.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libfreerdp/core/nla.c||libfreerdp/core/nla.c": [
          "File: libfreerdp/core/nla.c -> libfreerdp/core/nla.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1212:  const size_t hashSize =",
          "1213:      nla->server ? sizeof(ServerClientHashMagic) : sizeof(ClientServerHashMagic);",
          "1215:  if (!sspi_SecBufferAlloc(&nla->pubKeyAuth, auth_data_length))",
          "1216:  {",
          "1217:   status = SEC_E_INSUFFICIENT_MEMORY;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1215:  sspi_SecBufferFree(&nla->pubKeyAuth);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2069:    return -1;",
          "2070:   }",
          "2072:   if (!sspi_SecBufferAlloc(&nla->negoToken, length))",
          "2073:    return -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2073:   sspi_SecBufferFree(&nla->negoToken);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2097:       Stream_GetRemainingLength(s) < length)",
          "2098:    return -1;",
          "2100:   if (!sspi_SecBufferAlloc(&nla->pubKeyAuth, length))",
          "2101:    return -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2102:   sspi_SecBufferFree(&nla->pubKeyAuth);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2121:         Stream_GetRemainingLength(s) < length)",
          "2122:      return -1;",
          "2124:     if (!sspi_SecBufferAlloc(&nla->ClientNonce, length))",
          "2125:      return -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2127:     sspi_SecBufferFree(&nla->ClientNonce);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2357:  nla->sendSeqNum = 0;",
          "2358:  nla->recvSeqNum = 0;",
          "2359:  nla->version = 6;",
          "2364:  SecInvalidateHandle(&nla->context);",
          "2366:  if (settings->NtlmSamFile)",
          "",
          "[Removed Lines]",
          "2360:  ZeroMemory(&nla->ClientNonce, sizeof(SecBuffer));",
          "2361:  ZeroMemory(&nla->negoToken, sizeof(SecBuffer));",
          "2362:  ZeroMemory(&nla->pubKeyAuth, sizeof(SecBuffer));",
          "2363:  ZeroMemory(&nla->authInfo, sizeof(SecBuffer));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "64bec7586d047fe24e47c7d9ebb39fbf495f9994",
      "candidate_info": {
        "commit_hash": "64bec7586d047fe24e47c7d9ebb39fbf495f9994",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/64bec7586d047fe24e47c7d9ebb39fbf495f9994",
        "files": [
          "client/X11/xf_event.c",
          "client/X11/xf_keyboard.c",
          "client/common/cmdline.c",
          "libfreerdp/crypto/tls.c",
          "winpr/libwinpr/smartcard/smartcard_pcsc.c"
        ],
        "message": "Replaced strtok with strtok_s\n\n(cherry picked from commit 7890833af8a891765a475bd7ae2a756aeddd4977)",
        "before_after_code_files": [
          "client/X11/xf_event.c||client/X11/xf_event.c",
          "client/X11/xf_keyboard.c||client/X11/xf_keyboard.c",
          "client/common/cmdline.c||client/common/cmdline.c",
          "libfreerdp/crypto/tls.c||libfreerdp/crypto/tls.c",
          "winpr/libwinpr/smartcard/smartcard_pcsc.c||winpr/libwinpr/smartcard/smartcard_pcsc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "client/X11/xf_event.c||client/X11/xf_event.c": [
          "File: client/X11/xf_event.c -> client/X11/xf_event.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "186:  while (fgets(buffer, sizeof(buffer), actionScript))",
          "187:  {",
          "189:   xevent = _strdup(buffer);",
          "191:   if (!xevent || ArrayList_Add(xfc->xevents, xevent) < 0)",
          "",
          "[Removed Lines]",
          "188:   strtok(buffer, \"\\n\");",
          "",
          "[Added Lines]",
          "188:   char* context = NULL;",
          "189:   strtok_s(buffer, \"\\n\", &context);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "254:  while (fgets(buffer, sizeof(buffer), actionScript))",
          "255:  {",
          "257:  }",
          "259:  pclose(actionScript);",
          "",
          "[Removed Lines]",
          "256:   strtok(buffer, \"\\n\");",
          "",
          "[Added Lines]",
          "257:   char* context = NULL;",
          "258:   strtok_s(buffer, \"\\n\", &context);",
          "",
          "---------------"
        ],
        "client/X11/xf_keyboard.c||client/X11/xf_keyboard.c": [
          "File: client/X11/xf_keyboard.c -> client/X11/xf_keyboard.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "75:  while (fgets(buffer, sizeof(buffer), keyScript) != NULL)",
          "76:  {",
          "78:   keyCombination = _strdup(buffer);",
          "80:   if (!keyCombination || ArrayList_Add(xfc->keyCombinations, keyCombination) < 0)",
          "",
          "[Removed Lines]",
          "77:   strtok(buffer, \"\\n\");",
          "",
          "[Added Lines]",
          "77:   char* context = NULL;",
          "78:   strtok_s(buffer, \"\\n\", &context);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "434:  while (fgets(buffer, sizeof(buffer), keyScript) != NULL)",
          "435:  {",
          "438:   if (strcmp(buffer, \"key-local\") == 0)",
          "439:    status = 0;",
          "",
          "[Removed Lines]",
          "436:   strtok(buffer, \"\\n\");",
          "",
          "[Added Lines]",
          "437:   char* context = NULL;",
          "438:   strtok_s(buffer, \"\\n\", &context);",
          "",
          "---------------"
        ],
        "client/common/cmdline.c||client/common/cmdline.c": [
          "File: client/common/cmdline.c -> client/common/cmdline.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3500:    BOOL success;",
          "3501:    const char* name = NULL;",
          "3502:    const char* drive = tok;",
          "3505:    if (start && end)",
          "3506:     name = end;",
          "",
          "[Removed Lines]",
          "3503:    char* start = strtok(tok, \"(\");",
          "3504:    char* end = strtok(NULL, \")\");",
          "",
          "[Added Lines]",
          "3503:    char* subcontext = NULL;",
          "3504:    char* start = strtok_s(tok, \"(\", &subcontext);",
          "3505:    char* end = strtok_s(NULL, \")\", &subcontext);",
          "",
          "---------------"
        ],
        "libfreerdp/crypto/tls.c||libfreerdp/crypto/tls.c": [
          "File: libfreerdp/crypto/tls.c -> libfreerdp/crypto/tls.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1198:   char* cur = strtok_s(copy, \",\", &context);",
          "1199:   while (cur)",
          "1200:   {",
          "1201:    BOOL equal;",
          "1202:    char* strhash;",
          "1204:    const char* fp;",
          "1206:    if (!h)",
          "",
          "[Removed Lines]",
          "1203:    const char* h = strtok(cur, \":\");",
          "",
          "[Added Lines]",
          "1201:    char* subcontext = NULL;",
          "1204:    const char* h = strtok_s(cur, \":\", &subcontext);",
          "",
          "---------------"
        ],
        "winpr/libwinpr/smartcard/smartcard_pcsc.c||winpr/libwinpr/smartcard/smartcard_pcsc.c": [
          "File: winpr/libwinpr/smartcard/smartcard_pcsc.c -> winpr/libwinpr/smartcard/smartcard_pcsc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2930:  long minorVersion = 0;",
          "2931:  long patchVersion = 0;",
          "2932:  int count = 0;",
          "2933:  mib[0] = CTL_KERN;",
          "2934:  mib[1] = KERN_OSRELEASE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2933:  char* context = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2947:   return 0;",
          "2948:  }",
          "2951:  errno = 0;",
          "2953:  while (tok)",
          "",
          "[Removed Lines]",
          "2950:  tok = strtok(kernelVersion, \".\");",
          "",
          "[Added Lines]",
          "2951:  tok = strtok_s(kernelVersion, \".\", &context);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2979:     break;",
          "2980:   }",
          "2983:   count++;",
          "2984:  }",
          "",
          "[Removed Lines]",
          "2982:   tok = strtok(NULL, \".\");",
          "",
          "[Added Lines]",
          "2983:   tok = strtok_s(NULL, \".\", &context);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3a2ce9b8bdd53b4ccfb16d795d75c42396070a72",
      "candidate_info": {
        "commit_hash": "3a2ce9b8bdd53b4ccfb16d795d75c42396070a72",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/3a2ce9b8bdd53b4ccfb16d795d75c42396070a72",
        "files": [
          "channels/rail/client/rail_orders.c",
          "channels/rail/rail_common.c",
          "channels/rail/rail_common.h",
          "channels/rail/server/rail_main.c"
        ],
        "message": "Fixed rails debug string warnings.\n\n(cherry picked from commit e58ea30305e8754ada82018c4f2042ec1b72337c)",
        "before_after_code_files": [
          "channels/rail/client/rail_orders.c||channels/rail/client/rail_orders.c",
          "channels/rail/rail_common.c||channels/rail/rail_common.c",
          "channels/rail/rail_common.h||channels/rail/rail_common.h",
          "channels/rail/server/rail_main.c||channels/rail/server/rail_main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6212"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "channels/rail/client/rail_orders.c||channels/rail/client/rail_orders.c": [
          "File: channels/rail/client/rail_orders.c -> channels/rail/client/rail_orders.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:  rail_write_pdu_header(s, orderType, orderLength);",
          "50:  Stream_SetPosition(s, orderLength);",
          "51:  WLog_Print(rail->log, WLOG_DEBUG, \"Sending %s PDU, length: %\" PRIu16 \"\",",
          "54:  return rail_send_channel_data(rail, s);",
          "55: }",
          "",
          "[Removed Lines]",
          "52:             RAIL_ORDER_TYPE_STRINGS[((orderType & 0xF0) >> 3) + (orderType & 0x0F)],",
          "53:             orderLength);",
          "",
          "[Added Lines]",
          "52:             rail_get_order_type_string(orderType), orderLength);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "926:  }",
          "928:  WLog_Print(rail->log, WLOG_DEBUG, \"Received %s PDU, length:%\" PRIu16 \"\",",
          "932:  switch (orderType)",
          "933:  {",
          "",
          "[Removed Lines]",
          "929:             RAIL_ORDER_TYPE_STRINGS[((orderType & 0xF0) >> 3) + (orderType & 0x0F)],",
          "930:             orderLength);",
          "",
          "[Added Lines]",
          "928:             rail_get_order_type_string(orderType), orderLength);",
          "",
          "---------------"
        ],
        "channels/rail/rail_common.c||channels/rail/rail_common.c": [
          "File: channels/rail/rail_common.c -> channels/rail/rail_common.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: #define TAG CHANNELS_TAG(\"rail.common\")",
          "",
          "[Removed Lines]",
          "30: const char* const RAIL_ORDER_TYPE_STRINGS[] = { \"\",",
          "31:                                              \"Execute\",",
          "32:                                              \"Activate\",",
          "33:                                              \"System Parameters Update\",",
          "34:                                              \"System Command\",",
          "35:                                              \"Handshake\",",
          "36:                                              \"Notify Event\",",
          "37:                                              \"\",",
          "38:                                              \"Window Move\",",
          "39:                                              \"Local Move/Size\",",
          "40:                                              \"Min Max Info\",",
          "41:                                              \"Client Status\",",
          "42:                                              \"System Menu\",",
          "43:                                              \"Language Bar Info\",",
          "44:                                              \"Get Application ID Request\",",
          "45:                                              \"Get Application ID Response\",",
          "46:                                              \"Execute Result\",",
          "47:                                              \"\",",
          "48:                                              \"\",",
          "49:                                              \"\",",
          "50:                                              \"\",",
          "51:                                              \"\",",
          "52:                                              \"\" };",
          "",
          "[Added Lines]",
          "30: static const char* const RAIL_ORDER_TYPE_STRINGS[] = { \"\",",
          "31:                                                     \"Execute\",",
          "32:                                                     \"Activate\",",
          "33:                                                     \"System Parameters Update\",",
          "34:                                                     \"System Command\",",
          "35:                                                     \"Handshake\",",
          "36:                                                     \"Notify Event\",",
          "37:                                                     \"\",",
          "38:                                                     \"Window Move\",",
          "39:                                                     \"Local Move/Size\",",
          "40:                                                     \"Min Max Info\",",
          "41:                                                     \"Client Status\",",
          "42:                                                     \"System Menu\",",
          "43:                                                     \"Language Bar Info\",",
          "44:                                                     \"Get Application ID Request\",",
          "45:                                                     \"Get Application ID Response\",",
          "46:                                                     \"Execute Result\",",
          "47:                                                     \"\",",
          "48:                                                     \"\",",
          "49:                                                     \"\",",
          "50:                                                     \"\",",
          "51:                                                     \"\",",
          "52:                                                     \"\" };",
          "54: const char* rail_get_order_type_string(BYTE orderType)",
          "55: {",
          "56:  return RAIL_ORDER_TYPE_STRINGS[((orderType & 0xF0) >> 3) + (orderType & 0x0F)];",
          "57: }",
          "",
          "---------------"
        ],
        "channels/rail/rail_common.h||channels/rail/rail_common.h": [
          "File: channels/rail/rail_common.h -> channels/rail/rail_common.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include <freerdp/rail.h>",
          "31: #define RAIL_PDU_HEADER_LENGTH 4",
          "",
          "[Removed Lines]",
          "29: extern const char* const RAIL_ORDER_TYPE_STRINGS[];",
          "",
          "[Added Lines]",
          "29: const char* rail_get_order_type_string(BYTE orderType);",
          "",
          "---------------"
        ],
        "channels/rail/server/rail_main.c||channels/rail/server/rail_main.c": [
          "File: channels/rail/server/rail_main.c -> channels/rail/server/rail_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "71:  Stream_SetPosition(s, 0);",
          "72:  rail_write_pdu_header(s, orderType, orderLength);",
          "73:  Stream_SetPosition(s, orderLength);",
          "76:  return rail_send(context, s, orderLength);",
          "77: }",
          "",
          "[Removed Lines]",
          "74:  WLog_DBG(TAG, \"Sending %s PDU, length: %\" PRIu16 \"\",",
          "75:           RAIL_ORDER_TYPE_STRINGS[((orderType & 0xF0) >> 3) + (orderType & 0x0F)], orderLength);",
          "",
          "[Added Lines]",
          "74:  WLog_DBG(TAG, \"Sending %s PDU, length: %\" PRIu16 \"\", rail_get_order_type_string(orderType),",
          "75:           orderLength);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1573:   return ERROR_INTERNAL_ERROR;",
          "1574:  }",
          "1579:  switch (orderType)",
          "1580:  {",
          "",
          "[Removed Lines]",
          "1576:  WLog_DBG(TAG, \"Received %s PDU, length:%\" PRIu16 \"\",",
          "1577:           RAIL_ORDER_TYPE_STRINGS[((orderType & 0xF0) >> 3) + (orderType & 0x0F)], orderLength);",
          "",
          "[Added Lines]",
          "1576:  WLog_DBG(TAG, \"Received %s PDU, length:%\" PRIu16 \"\", rail_get_order_type_string(orderType),",
          "1577:           orderLength);",
          "",
          "---------------"
        ]
      }
    }
  ]
}