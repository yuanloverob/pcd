{
  "cve_id": "CVE-2021-32135",
  "cve_desc": "The trak_box_size function in GPAC 1.0.1 allows attackers to cause a denial of service (NULL pointer dereference) via a crafted file in the MP4Box command.",
  "repo": "gpac/gpac",
  "patch_hash": "b8f8b202d4fc23eb0ab4ce71ae96536ca6f5d3f8",
  "patch_info": {
    "commit_hash": "b8f8b202d4fc23eb0ab4ce71ae96536ca6f5d3f8",
    "repo": "gpac/gpac",
    "commit_url": "https://github.com/gpac/gpac/commit/b8f8b202d4fc23eb0ab4ce71ae96536ca6f5d3f8",
    "files": [
      "src/isomedia/box_code_base.c"
    ],
    "message": "fixed #1757",
    "before_after_code_files": [
      "src/isomedia/box_code_base.c||src/isomedia/box_code_base.c"
    ]
  },
  "patch_diff": {
    "src/isomedia/box_code_base.c||src/isomedia/box_code_base.c": [
      "File: src/isomedia/box_code_base.c -> src/isomedia/box_code_base.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "6743:  GF_TrackBox *ptr = (GF_TrackBox *)s;",
      "6745:  if (ptr->sample_encryption && ptr->sample_encryption->load_needed) {",
      "6746:   GF_Err e = senc_Parse(ptr->moov->mov->movieFileMap->bs, ptr, NULL, ptr->sample_encryption);",
      "6747:   if (e) return e;",
      "6748:  }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6746:   if (!ptr->moov || !!ptr->moov->mov || !ptr->moov->mov->movieFileMap)",
      "6747:    return GF_ISOM_INVALID_FILE;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1372064e694f154ea6541e1f9d58a237b08629d7",
      "candidate_info": {
        "commit_hash": "1372064e694f154ea6541e1f9d58a237b08629d7",
        "repo": "gpac/gpac",
        "commit_url": "https://github.com/gpac/gpac/commit/1372064e694f154ea6541e1f9d58a237b08629d7",
        "files": [
          "src/compositor/scene.c",
          "src/filter_core/filter_session.c",
          "src/filters/compose.c",
          "src/filters/dasher.c",
          "src/filters/dec_ttxt.c",
          "src/filters/dmx_dash.c",
          "src/filters/filelist.c",
          "src/filters/in_http.c",
          "src/isomedia/box_code_base.c",
          "src/isomedia/box_code_drm.c",
          "src/utils/downloader.c",
          "src/utils/error.c"
        ],
        "message": "fixed scanbuild errors",
        "before_after_code_files": [
          "src/compositor/scene.c||src/compositor/scene.c",
          "src/filter_core/filter_session.c||src/filter_core/filter_session.c",
          "src/filters/compose.c||src/filters/compose.c",
          "src/filters/dasher.c||src/filters/dasher.c",
          "src/filters/dec_ttxt.c||src/filters/dec_ttxt.c",
          "src/filters/dmx_dash.c||src/filters/dmx_dash.c",
          "src/filters/filelist.c||src/filters/filelist.c",
          "src/filters/in_http.c||src/filters/in_http.c",
          "src/isomedia/box_code_base.c||src/isomedia/box_code_base.c",
          "src/isomedia/box_code_drm.c||src/isomedia/box_code_drm.c",
          "src/utils/downloader.c||src/utils/downloader.c",
          "src/utils/error.c||src/utils/error.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/isomedia/box_code_base.c||src/isomedia/box_code_base.c"
          ],
          "candidate": [
            "src/isomedia/box_code_base.c||src/isomedia/box_code_base.c"
          ]
        }
      },
      "candidate_diff": {
        "src/compositor/scene.c||src/compositor/scene.c": [
          "File: src/compositor/scene.c -> src/compositor/scene.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "772:   return;",
          "776:   gf_odm_service_media_event_with_download(scene->root_od, GF_EVENT_MEDIA_PROGRESS, 0, 0, 0, (u32) (100 * cur_buffer / max_buffer) + 1, (u32) min_time);",
          "777:  }",
          "",
          "[Removed Lines]",
          "775:  if ((rebuffer_done || scene->nb_buffering) && max_buffer) {",
          "",
          "[Added Lines]",
          "775:  if ((rebuffer_done || scene->nb_buffering) && (max_buffer>0) ) {",
          "",
          "---------------"
        ],
        "src/filter_core/filter_session.c||src/filter_core/filter_session.c": [
          "File: src/filter_core/filter_session.c -> src/filter_core/filter_session.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3066:  }",
          "3068:  if (!found && filter_name) {",
          "3070:   GF_Filter *f = gf_fs_load_filter(session, filter_name, &e);",
          "3071:   if (f) {",
          "3072:    gf_fs_print_jsf_connection(session, filter_name, f, print_fn);",
          "",
          "[Removed Lines]",
          "3069:   GF_Err e;",
          "",
          "[Added Lines]",
          "3069:   GF_Err e = GF_OK;",
          "",
          "---------------"
        ],
        "src/filters/compose.c||src/filters/compose.c": [
          "File: src/filters/compose.c -> src/filters/compose.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "420:   GF_SceneNamespace *new_sns=NULL;",
          "421:   const char *service_url = \"unknown\";",
          "422:   const GF_PropertyValue *p = gf_filter_pid_get_property(pid, GF_PROP_PID_URL);",
          "",
          "[Removed Lines]",
          "419:  if ( !scene->root_od->parentscene && was_dyn_scene && (was_dyn_scene != scene->is_dynamic_scene)) {",
          "",
          "[Added Lines]",
          "419:  if (scene->root_od && !scene->root_od->parentscene && was_dyn_scene && (was_dyn_scene != scene->is_dynamic_scene)) {",
          "",
          "---------------"
        ],
        "src/filters/dasher.c||src/filters/dasher.c": [
          "File: src/filters/dasher.c -> src/filters/dasher.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "615:  ds->bitrate = (u32) rate;",
          "618:   ds->rep->bandwidth = ds->bitrate;",
          "630:    }",
          "632:   }",
          "633:  }",
          "",
          "[Removed Lines]",
          "617:  if (ds->rep)",
          "620:  if (ds->dep_id) {",
          "621:   ds->rep->bandwidth = dasher_get_dep_bitrate(ctx, ds);",
          "622:  } else if (ds->nb_comp && !ds->muxed_base) {",
          "623:   u32 i, count = gf_list_count(ctx->current_period->streams);",
          "624:   for (i=0; i<count; i++) {",
          "625:    GF_DashStream *a_ds = gf_list_get(ctx->current_period->streams, i);",
          "626:    if (ds == a_ds) continue;;",
          "627:    if (a_ds->muxed_base != ds) continue;",
          "628:    if (a_ds->dyn_bitrate) {",
          "629:     dasher_update_bitrate(ctx, a_ds);",
          "631:    ds->rep->bandwidth += a_ds->bitrate;",
          "",
          "[Added Lines]",
          "617:  if (ds->rep) {",
          "620:   if (ds->dep_id) {",
          "621:    ds->rep->bandwidth = dasher_get_dep_bitrate(ctx, ds);",
          "622:   } else if (ds->nb_comp && !ds->muxed_base) {",
          "623:    u32 i, count = gf_list_count(ctx->current_period->streams);",
          "624:    for (i=0; i<count; i++) {",
          "625:     GF_DashStream *a_ds = gf_list_get(ctx->current_period->streams, i);",
          "626:     if (ds == a_ds) continue;;",
          "627:     if (a_ds->muxed_base != ds) continue;",
          "628:     if (a_ds->dyn_bitrate) {",
          "629:      dasher_update_bitrate(ctx, a_ds);",
          "630:     }",
          "631:     ds->rep->bandwidth += a_ds->bitrate;",
          "",
          "---------------"
        ],
        "src/filters/dec_ttxt.c||src/filters/dec_ttxt.c": [
          "File: src/filters/dec_ttxt.c -> src/filters/dec_ttxt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "522:   if (!fontSize) {",
          "523:    if (ctx->cfg->text_height > 2000)",
          "524:     fontSize = 80;",
          "526:     fontSize = 40;",
          "527:    else",
          "528:     fontSize = 20;",
          "",
          "[Removed Lines]",
          "525:    if (ctx->cfg->text_height > 700)",
          "",
          "[Added Lines]",
          "525:    else if (ctx->cfg->text_height > 700)",
          "",
          "---------------"
        ],
        "src/filters/dmx_dash.c||src/filters/dmx_dash.c": [
          "File: src/filters/dmx_dash.c -> src/filters/dmx_dash.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1339:    for (k=0; k<nb_q; k++) {",
          "1340:     char *qdesc = NULL;",
          "1341:     e = gf_dash_group_get_quality_info(ctx->dash, g_idx, k, &qinfo);",
          "1343:     dashdm_format_qinfo(&qdesc, &qinfo);",
          "1344:     deps_q.value.string_list.vals[k] = qdesc;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1342:     if (e) break;",
          "",
          "---------------"
        ],
        "src/filters/filelist.c||src/filters/filelist.c": [
          "File: src/filters/filelist.c -> src/filters/filelist.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "850:       filelist_override_caps(filter, ctx);",
          "851:      }",
          "852:     } else if (!strcmp(args, \"floop\")) {",
          "854:     } else if (!strcmp(args, \"props\")) {",
          "855:      if (ctx->pid_props) gf_free(ctx->pid_props);",
          "856:      ctx->pid_props = aval ? gf_strdup(aval) : NULL;",
          "",
          "[Removed Lines]",
          "853:      ctx->floop = atoi(aval);",
          "",
          "[Added Lines]",
          "853:      ctx->floop = aval ? atoi(aval) : 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1544:   u32 pck_size, osize, offset=0;",
          "1546:   cts = gf_filter_pck_get_cts(pck);",
          "1549:   data = gf_filter_pck_get_data(pck, &pck_size);",
          "1550:   if (iopid->audio_samples_to_keep>0) {",
          "",
          "[Removed Lines]",
          "1547:   dur = gf_filter_pck_get_duration(pck);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2403:     max_dts.den = iopid->timescale;",
          "2404:    }",
          "2405:   }",
          "2407:    ctx->cts_offset = max_dts;",
          "2408:   } else if (ctx->cts_offset.den == max_dts.den) {",
          "2409:    ctx->cts_offset.num += max_dts.num;",
          "",
          "[Removed Lines]",
          "2406:   if (!ctx->cts_offset.num) {",
          "",
          "[Added Lines]",
          "2405:   if (!ctx->cts_offset.num || !ctx->cts_offset.den) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2416:    ctx->cts_offset.num += max_dts.num * ctx->cts_offset.den / max_dts.den;",
          "2417:   }",
          "2420:    ctx->dts_offset = max_dts;",
          "2421:   } else if (ctx->dts_offset.den == max_dts.den) {",
          "2422:    ctx->dts_offset.num += max_dts.num;",
          "2424:    ctx->dts_offset.num *= max_dts.den;",
          "2425:    ctx->dts_offset.num /= ctx->dts_offset.den;",
          "2426:    ctx->dts_offset.num += max_dts.num;",
          "",
          "[Removed Lines]",
          "2419:   if (!ctx->dts_offset.num) {",
          "2423:   } else if (max_dts.den>ctx->dts_offset.den) {",
          "",
          "[Added Lines]",
          "2418:   if (!ctx->dts_offset.num || !ctx->dts_offset.den) {",
          "2422:   } else if (max_dts.den > ctx->dts_offset.den) {",
          "",
          "---------------"
        ],
        "src/filters/in_http.c||src/filters/in_http.c": [
          "File: src/filters/in_http.c -> src/filters/in_http.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "354:  GF_Err e=GF_OK;",
          "355:  u32 bytes_per_sec=0;",
          "356:  u64 bytes_done=0, total_size, byte_offset;",
          "358:  GF_HTTPInCtx *ctx = (GF_HTTPInCtx *) gf_filter_get_udta(filter);",
          "",
          "[Removed Lines]",
          "357:  GF_NetIOStatus net_status;",
          "",
          "[Added Lines]",
          "357:  GF_NetIOStatus net_status = GF_NETIO_DATA_EXCHANGE;",
          "",
          "---------------"
        ],
        "src/isomedia/box_code_base.c||src/isomedia/box_code_base.c": [
          "File: src/isomedia/box_code_base.c -> src/isomedia/box_code_base.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6742:  GF_TrackBox *ptr = (GF_TrackBox *)s;",
          "6744:  if (ptr->sample_encryption && ptr->sample_encryption->load_needed) {",
          "6746:    return GF_ISOM_INVALID_FILE;",
          "6747:   GF_Err e = senc_Parse(ptr->moov->mov->movieFileMap->bs, ptr, NULL, ptr->sample_encryption);",
          "6748:   if (e) return e;",
          "",
          "[Removed Lines]",
          "6745:   if (!ptr->moov || !!ptr->moov->mov || !ptr->moov->mov->movieFileMap)",
          "",
          "[Added Lines]",
          "6745:   if (!ptr->moov || !ptr->moov->mov || !ptr->moov->mov->movieFileMap)",
          "",
          "---------------"
        ],
        "src/isomedia/box_code_drm.c||src/isomedia/box_code_drm.c": [
          "File: src/isomedia/box_code_drm.c -> src/isomedia/box_code_drm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1244:  if (const_iv_size) *const_iv_size = 0;",
          "1245:  if (const_iv) *const_iv = NULL;",
          "1247:  while (1) {",
          "1248:   u8 civ_size=0;",
          "1249:   const u8 *civ = NULL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1247:  if (!key_info || !key_info_size)",
          "1248:   return 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1342:   Bool is_encrypted;",
          "1343:   GF_CENCSampleAuxInfo *sai;",
          "1344:   u8 IV_size=0;",
          "1346:   u32 nb_bytes_subsample = 6;",
          "1347:   u32 nb_subs_bits = 16;",
          "",
          "[Removed Lines]",
          "1345:   u32 nb_keys = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1358:     use_multikey = GF_FALSE;",
          "1359:     senc->piff_type = 2;",
          "1360:    } else if (use_multikey) {",
          "1364:     nb_bytes_subsample = 8;",
          "1365:     nb_subs_bits = 32;",
          "1366:    } else {",
          "",
          "[Removed Lines]",
          "1361:     nb_keys = key_info[1];",
          "1362:     nb_keys <<= 8;",
          "1363:     nb_keys |= key_info[2];",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/utils/downloader.c||src/utils/downloader.c": [
          "File: src/utils/downloader.c -> src/utils/downloader.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3758:    gf_icy_skip_data(sess, (char *) data, nbBytes);",
          "3759:   else {",
          "3760:    if (sess->use_cache_file)",
          "3763:    par.msg_type = GF_NETIO_DATA_EXCHANGE;",
          "3764:    par.error = GF_OK;",
          "",
          "[Removed Lines]",
          "3761:     gf_cache_write_to_cache( sess->cache_entry, sess, (char *) data, nbBytes, sess->dm->cache_mx);",
          "",
          "[Added Lines]",
          "3761:     gf_cache_write_to_cache( sess->cache_entry, sess, (char *) data, nbBytes, sess->dm ? sess->dm->cache_mx : NULL);",
          "",
          "---------------"
        ],
        "src/utils/error.c||src/utils/error.c": [
          "File: src/utils/error.c -> src/utils/error.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1871:   return GF_TRUE;",
          "1872:  }",
          "1875:  if (len <= 3) frac->den = 1000;",
          "1876:  else if (len <= 6) frac->den = 1000000;",
          "1877:  else frac->den = 1000000000;",
          "",
          "[Removed Lines]",
          "1874:  sep += 1;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}