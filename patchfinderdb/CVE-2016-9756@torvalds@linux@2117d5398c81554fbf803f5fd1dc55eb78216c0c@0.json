{
  "cve_id": "CVE-2016-9756",
  "cve_desc": "arch/x86/kvm/emulate.c in the Linux kernel before 4.8.12 does not properly initialize Code Segment (CS) in certain error cases, which allows local users to obtain sensitive information from kernel stack memory via a crafted application.",
  "repo": "torvalds/linux",
  "patch_hash": "2117d5398c81554fbf803f5fd1dc55eb78216c0c",
  "patch_info": {
    "commit_hash": "2117d5398c81554fbf803f5fd1dc55eb78216c0c",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/2117d5398c81554fbf803f5fd1dc55eb78216c0c",
    "files": [
      "arch/x86/kvm/emulate.c"
    ],
    "message": "KVM: x86: drop error recovery in em_jmp_far and em_ret_far\n\nem_jmp_far and em_ret_far assumed that setting IP can only fail in 64\nbit mode, but syzkaller proved otherwise (and SDM agrees).\nCode segment was restored upon failure, but it was left uninitialized\noutside of long mode, which could lead to a leak of host kernel stack.\nWe could have fixed that by always saving and restoring the CS, but we\ntake a simpler approach and just break any guest that manages to fail\nas the error recovery is error-prone and modern CPUs don't need emulator\nfor this.\n\nFound by syzkaller:\n\n  WARNING: CPU: 2 PID: 3668 at arch/x86/kvm/emulate.c:2217 em_ret_far+0x428/0x480\n  Kernel panic - not syncing: panic_on_warn set ...\n\n  CPU: 2 PID: 3668 Comm: syz-executor Not tainted 4.9.0-rc4+ #49\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011\n   [...]\n  Call Trace:\n   [...] __dump_stack lib/dump_stack.c:15\n   [...] dump_stack+0xb3/0x118 lib/dump_stack.c:51\n   [...] panic+0x1b7/0x3a3 kernel/panic.c:179\n   [...] __warn+0x1c4/0x1e0 kernel/panic.c:542\n   [...] warn_slowpath_null+0x2c/0x40 kernel/panic.c:585\n   [...] em_ret_far+0x428/0x480 arch/x86/kvm/emulate.c:2217\n   [...] em_ret_far_imm+0x17/0x70 arch/x86/kvm/emulate.c:2227\n   [...] x86_emulate_insn+0x87a/0x3730 arch/x86/kvm/emulate.c:5294\n   [...] x86_emulate_instruction+0x520/0x1ba0 arch/x86/kvm/x86.c:5545\n   [...] emulate_instruction arch/x86/include/asm/kvm_host.h:1116\n   [...] complete_emulated_io arch/x86/kvm/x86.c:6870\n   [...] complete_emulated_mmio+0x4e9/0x710 arch/x86/kvm/x86.c:6934\n   [...] kvm_arch_vcpu_ioctl_run+0x3b7a/0x5a90 arch/x86/kvm/x86.c:6978\n   [...] kvm_vcpu_ioctl+0x61e/0xdd0 arch/x86/kvm/../../../virt/kvm/kvm_main.c:2557\n   [...] vfs_ioctl fs/ioctl.c:43\n   [...] do_vfs_ioctl+0x18c/0x1040 fs/ioctl.c:679\n   [...] SYSC_ioctl fs/ioctl.c:694\n   [...] SyS_ioctl+0x8f/0xc0 fs/ioctl.c:685\n   [...] entry_SYSCALL_64_fastpath+0x1f/0xc2\n\nReported-by: Dmitry Vyukov <dvyukov@google.com>\nCc: stable@vger.kernel.org\nFixes: d1442d85cc30 (\"KVM: x86: Handle errors when RIP is set during far jumps\")\nSigned-off-by: Radim Kr\u010dm\u00e1\u0159 <rkrcmar@redhat.com>",
    "before_after_code_files": [
      "arch/x86/kvm/emulate.c||arch/x86/kvm/emulate.c"
    ]
  },
  "patch_diff": {
    "arch/x86/kvm/emulate.c||arch/x86/kvm/emulate.c": [
      "File: arch/x86/kvm/emulate.c -> arch/x86/kvm/emulate.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2105: static int em_jmp_far(struct x86_emulate_ctxt *ctxt)",
      "2106: {",
      "2107:  int rc;",
      "2111:  u8 cpl = ctxt->ops->cpl(ctxt);",
      "2118:  memcpy(&sel, ctxt->src.valptr + ctxt->op_bytes, 2);",
      "2120:  rc = __load_segment_descriptor(ctxt, sel, VCPU_SREG_CS, cpl,",
      "",
      "[Removed Lines]",
      "2108:  unsigned short sel, old_sel;",
      "2109:  struct desc_struct old_desc, new_desc;",
      "2110:  const struct x86_emulate_ops *ops = ctxt->ops;",
      "2114:  if (ctxt->mode == X86EMUL_MODE_PROT64)",
      "2115:   ops->get_segment(ctxt, &old_sel, &old_desc, NULL,",
      "2116:      VCPU_SREG_CS);",
      "",
      "[Added Lines]",
      "2108:  unsigned short sel;",
      "2109:  struct desc_struct new_desc;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2124:   return rc;",
      "2126:  rc = assign_eip_far(ctxt, ctxt->src.val, &new_desc);",
      "2133:  return rc;",
      "2134: }",
      "",
      "[Removed Lines]",
      "2127:  if (rc != X86EMUL_CONTINUE) {",
      "2128:   WARN_ON(ctxt->mode != X86EMUL_MODE_PROT64);",
      "2130:   ops->set_segment(ctxt, old_sel, &old_desc, 0, VCPU_SREG_CS);",
      "2131:   return rc;",
      "2132:  }",
      "",
      "[Added Lines]",
      "2122:  if (rc != X86EMUL_CONTINUE)",
      "2123:   return X86EMUL_UNHANDLEABLE;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2189: {",
      "2190:  int rc;",
      "2191:  unsigned long eip, cs;",
      "2193:  int cpl = ctxt->ops->cpl(ctxt);",
      "2201:  rc = emulate_pop(ctxt, &eip, ctxt->op_bytes);",
      "2202:  if (rc != X86EMUL_CONTINUE)",
      "",
      "[Removed Lines]",
      "2192:  u16 old_cs;",
      "2194:  struct desc_struct old_desc, new_desc;",
      "2195:  const struct x86_emulate_ops *ops = ctxt->ops;",
      "2197:  if (ctxt->mode == X86EMUL_MODE_PROT64)",
      "2198:   ops->get_segment(ctxt, &old_cs, &old_desc, NULL,",
      "2199:      VCPU_SREG_CS);",
      "",
      "[Added Lines]",
      "2185:  struct desc_struct new_desc;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2213:  if (rc != X86EMUL_CONTINUE)",
      "2214:   return rc;",
      "2215:  rc = assign_eip_far(ctxt, eip, &new_desc);",
      "2220:  return rc;",
      "2221: }",
      "",
      "[Removed Lines]",
      "2216:  if (rc != X86EMUL_CONTINUE) {",
      "2217:   WARN_ON(ctxt->mode != X86EMUL_MODE_PROT64);",
      "2218:   ops->set_segment(ctxt, old_cs, &old_desc, 0, VCPU_SREG_CS);",
      "2219:  }",
      "",
      "[Added Lines]",
      "2203:  if (rc != X86EMUL_CONTINUE)",
      "2204:   return X86EMUL_UNHANDLEABLE;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "81cdb259fb6d8c1c4ecfeea389ff5a73c07f5755",
      "candidate_info": {
        "commit_hash": "81cdb259fb6d8c1c4ecfeea389ff5a73c07f5755",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/81cdb259fb6d8c1c4ecfeea389ff5a73c07f5755",
        "files": [
          "arch/x86/kvm/ioapic.c",
          "arch/x86/kvm/ioapic.h"
        ],
        "message": "KVM: x86: fix out-of-bounds accesses of rtc_eoi map\n\nKVM was using arrays of size KVM_MAX_VCPUS with vcpu_id, but ID can be\nbigger that the maximal number of VCPUs, resulting in out-of-bounds\naccess.\n\nFound by syzkaller:\n\n  BUG: KASAN: slab-out-of-bounds in __apic_accept_irq+0xb33/0xb50 at addr [...]\n  Write of size 1 by task a.out/27101\n  CPU: 1 PID: 27101 Comm: a.out Not tainted 4.9.0-rc5+ #49\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011\n   [...]\n  Call Trace:\n   [...] __apic_accept_irq+0xb33/0xb50 arch/x86/kvm/lapic.c:905\n   [...] kvm_apic_set_irq+0x10e/0x180 arch/x86/kvm/lapic.c:495\n   [...] kvm_irq_delivery_to_apic+0x732/0xc10 arch/x86/kvm/irq_comm.c:86\n   [...] ioapic_service+0x41d/0x760 arch/x86/kvm/ioapic.c:360\n   [...] ioapic_set_irq+0x275/0x6c0 arch/x86/kvm/ioapic.c:222\n   [...] kvm_ioapic_inject_all arch/x86/kvm/ioapic.c:235\n   [...] kvm_set_ioapic+0x223/0x310 arch/x86/kvm/ioapic.c:670\n   [...] kvm_vm_ioctl_set_irqchip arch/x86/kvm/x86.c:3668\n   [...] kvm_arch_vm_ioctl+0x1a08/0x23c0 arch/x86/kvm/x86.c:3999\n   [...] kvm_vm_ioctl+0x1fa/0x1a70 arch/x86/kvm/../../../virt/kvm/kvm_main.c:3099\n\nReported-by: Dmitry Vyukov <dvyukov@google.com>\nCc: stable@vger.kernel.org\nFixes: af1bae5497b9 (\"KVM: x86: bump KVM_MAX_VCPU_ID to 1023\")\nReviewed-by: Paolo Bonzini <pbonzini@redhat.com>\nReviewed-by: David Hildenbrand <david@redhat.com>\nSigned-off-by: Radim Kr\u010dm\u00e1\u0159 <rkrcmar@redhat.com>",
        "before_after_code_files": [
          "arch/x86/kvm/ioapic.c||arch/x86/kvm/ioapic.c",
          "arch/x86/kvm/ioapic.h||arch/x86/kvm/ioapic.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/x86/kvm/ioapic.c||arch/x86/kvm/ioapic.c": [
          "File: arch/x86/kvm/ioapic.c -> arch/x86/kvm/ioapic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "94: static void rtc_irq_eoi_tracking_reset(struct kvm_ioapic *ioapic)",
          "95: {",
          "96:  ioapic->rtc_status.pending_eoi = 0;",
          "98: }",
          "100: static void kvm_rtc_eoi_tracking_restore_all(struct kvm_ioapic *ioapic);",
          "",
          "[Removed Lines]",
          "97:  bitmap_zero(ioapic->rtc_status.dest_map.map, KVM_MAX_VCPUS);",
          "",
          "[Added Lines]",
          "97:  bitmap_zero(ioapic->rtc_status.dest_map.map, KVM_MAX_VCPU_ID);",
          "",
          "---------------"
        ],
        "arch/x86/kvm/ioapic.h||arch/x86/kvm/ioapic.h": [
          "File: arch/x86/kvm/ioapic.h -> arch/x86/kvm/ioapic.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: struct dest_map {",
          "52: };",
          "",
          "[Removed Lines]",
          "45:  DECLARE_BITMAP(map, KVM_MAX_VCPUS);",
          "51:  u8 vectors[KVM_MAX_VCPUS];",
          "",
          "[Added Lines]",
          "45:  DECLARE_BITMAP(map, KVM_MAX_VCPU_ID);",
          "51:  u8 vectors[KVM_MAX_VCPU_ID];",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "444fdad88f35de9fd1c130b2c4e4550671758fd2",
      "candidate_info": {
        "commit_hash": "444fdad88f35de9fd1c130b2c4e4550671758fd2",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/444fdad88f35de9fd1c130b2c4e4550671758fd2",
        "files": [
          "arch/x86/kvm/lapic.c"
        ],
        "message": "KVM: x86: fix out-of-bounds access in lapic\n\nCluster xAPIC delivery incorrectly assumed that dest_id <= 0xff.\nWith enabled KVM_X2APIC_API_USE_32BIT_IDS in KVM_CAP_X2APIC_API, a\nuserspace can send an interrupt with dest_id that results in\nout-of-bounds access.\n\nFound by syzkaller:\n\n  BUG: KASAN: slab-out-of-bounds in kvm_irq_delivery_to_apic_fast+0x11fa/0x1210 at addr ffff88003d9ca750\n  Read of size 8 by task syz-executor/22923\n  CPU: 0 PID: 22923 Comm: syz-executor Not tainted 4.9.0-rc4+ #49\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011\n   [...]\n  Call Trace:\n   [...] __dump_stack lib/dump_stack.c:15\n   [...] dump_stack+0xb3/0x118 lib/dump_stack.c:51\n   [...] kasan_object_err+0x1c/0x70 mm/kasan/report.c:156\n   [...] print_address_description mm/kasan/report.c:194\n   [...] kasan_report_error mm/kasan/report.c:283\n   [...] kasan_report+0x231/0x500 mm/kasan/report.c:303\n   [...] __asan_report_load8_noabort+0x14/0x20 mm/kasan/report.c:329\n   [...] kvm_irq_delivery_to_apic_fast+0x11fa/0x1210 arch/x86/kvm/lapic.c:824\n   [...] kvm_irq_delivery_to_apic+0x132/0x9a0 arch/x86/kvm/irq_comm.c:72\n   [...] kvm_set_msi+0x111/0x160 arch/x86/kvm/irq_comm.c:157\n   [...] kvm_send_userspace_msi+0x201/0x280 arch/x86/kvm/../../../virt/kvm/irqchip.c:74\n   [...] kvm_vm_ioctl+0xba5/0x1670 arch/x86/kvm/../../../virt/kvm/kvm_main.c:3015\n   [...] vfs_ioctl fs/ioctl.c:43\n   [...] do_vfs_ioctl+0x18c/0x1040 fs/ioctl.c:679\n   [...] SYSC_ioctl fs/ioctl.c:694\n   [...] SyS_ioctl+0x8f/0xc0 fs/ioctl.c:685\n   [...] entry_SYSCALL_64_fastpath+0x1f/0xc2\n\nReported-by: Dmitry Vyukov <dvyukov@google.com>\nCc: stable@vger.kernel.org\nFixes: e45115b62f9a (\"KVM: x86: use physical LAPIC array for logical x2APIC\")\nReviewed-by: Paolo Bonzini <pbonzini@redhat.com>\nSigned-off-by: Radim Kr\u010dm\u00e1\u0159 <rkrcmar@redhat.com>",
        "before_after_code_files": [
          "arch/x86/kvm/lapic.c||arch/x86/kvm/lapic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/x86/kvm/lapic.c||arch/x86/kvm/lapic.c": [
          "File: arch/x86/kvm/lapic.c -> arch/x86/kvm/lapic.c"
        ]
      }
    }
  ]
}