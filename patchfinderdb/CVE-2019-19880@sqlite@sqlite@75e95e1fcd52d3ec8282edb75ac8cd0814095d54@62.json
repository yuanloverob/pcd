{
  "cve_id": "CVE-2019-19880",
  "cve_desc": "exprListAppendList in window.c in SQLite 3.30.1 allows attackers to trigger an invalid pointer dereference because constant integer values in ORDER BY clauses of window definitions are mishandled.",
  "repo": "sqlite/sqlite",
  "patch_hash": "75e95e1fcd52d3ec8282edb75ac8cd0814095d54",
  "patch_info": {
    "commit_hash": "75e95e1fcd52d3ec8282edb75ac8cd0814095d54",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/75e95e1fcd52d3ec8282edb75ac8cd0814095d54",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/window.c"
    ],
    "message": "When processing constant integer values in ORDER BY clauses of window definitions (see check-in [7e4809eadfe99ebf]) be sure to fully disable the constant value to avoid an invalid pointer dereference if the expression is ever duplicated. This fixes a crash report from Yongheng and Rui.\n\nFossilOrigin-Name: 1ca0bd982ab1183bbafce0d260e4dceda5eb766ed2e7793374a88d1ae0bdd2ca",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/window.c||src/window.c"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 8223e79f987feda5c8e51ec52cec6798cca16d070b10558939e2888ca1a25b8e",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/window.c||src/window.c": [
      "File: src/window.c -> src/window.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "895:     int nInit = pList ? pList->nExpr : 0;",
      "896:     for(i=0; i<pAppend->nExpr; i++){",
      "897:       Expr *pDup = sqlite3ExprDup(pParse->db, pAppend->a[i].pExpr, 0);",
      "898:       if( bIntToNull && pDup && pDup->op==TK_INTEGER ){",
      "899:         pDup->op = TK_NULL;",
      "900:         pDup->flags &= ~(EP_IntValue|EP_IsTrue|EP_IsFalse);",
      "901:       }",
      "902:       pList = sqlite3ExprListAppend(pParse, pList, pDup);",
      "903:       if( pList ) pList->a[nInit+i].sortFlags = pAppend->a[i].sortFlags;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "898:       assert( pDup==0 || !ExprHasProperty(pDup, EP_MemToken) );",
      "902:         pDup->u.zToken = 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3cc9af214091d0f2464626f1ceae42d07c85cbb2",
      "candidate_info": {
        "commit_hash": "3cc9af214091d0f2464626f1ceae42d07c85cbb2",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/3cc9af214091d0f2464626f1ceae42d07c85cbb2",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/pragma.h",
          "tool/mkpragmatab.tcl"
        ],
        "message": "Omit deprecated PRAGMAs when compiling with the -DSQLITE_OMIT_DEPRECATED option.\n\nFossilOrigin-Name: 008112bcef561a8a3ebfb007cbef36cbc0071f547e6ebdba3d3bbb39e2c48c7a",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/pragma.h||src/pragma.h",
          "tool/mkpragmatab.tcl||tool/mkpragmatab.tcl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b1601db7adba2dccd4f90fbbe5099c801a2b0d97af087fbe82ed98d05496b38c",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/pragma.h||src/pragma.h": [
          "File: src/pragma.h -> src/pragma.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "212: #endif",
          "213: #if !defined(SQLITE_OMIT_FLAG_PRAGMAS)",
          "214:  {/* zName:     */ \"count_changes\",",
          "219: #endif",
          "220: #if !defined(SQLITE_OMIT_PAGER_PRAGMAS) && SQLITE_OS_WIN",
          "221:  {/* zName:     */ \"data_store_directory\",",
          "226: #endif",
          "227: #if !defined(SQLITE_OMIT_SCHEMA_VERSION_PRAGMAS)",
          "228:  {/* zName:     */ \"data_version\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "214: #if !defined(SQLITE_OMIT_DEPRECATED)",
          "221: #endif",
          "223: #if !defined(SQLITE_OMIT_DEPRECATED)",
          "230: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "240: #endif",
          "242:  {/* zName:     */ \"default_cache_size\",",
          "247: #endif",
          "248: #if !defined(SQLITE_OMIT_FLAG_PRAGMAS)",
          "249: #if !defined(SQLITE_OMIT_FOREIGN_KEY) && !defined(SQLITE_OMIT_TRIGGER)",
          "250:  {/* zName:     */ \"defer_foreign_keys\",",
          "",
          "[Removed Lines]",
          "241: #if !defined(SQLITE_OMIT_PAGER_PRAGMAS) && !defined(SQLITE_OMIT_DEPRECATED)",
          "",
          "[Added Lines]",
          "245: #if !defined(SQLITE_OMIT_PAGER_PRAGMAS)",
          "246: #if !defined(SQLITE_OMIT_DEPRECATED)",
          "253: #endif",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "255: #endif",
          "256: #endif",
          "257: #if !defined(SQLITE_OMIT_FLAG_PRAGMAS)",
          "258:  {/* zName:     */ \"empty_result_callbacks\",",
          "263: #endif",
          "264: #if !defined(SQLITE_OMIT_UTF16)",
          "265:  {/* zName:     */ \"encoding\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "264: #if !defined(SQLITE_OMIT_DEPRECATED)",
          "271: #endif",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "300: #endif",
          "301: #if !defined(SQLITE_OMIT_FLAG_PRAGMAS)",
          "302:  {/* zName:     */ \"full_column_names\",",
          "307:  {/* zName:     */ \"fullfsync\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "310: #if !defined(SQLITE_OMIT_DEPRECATED)",
          "316: #endif",
          "317: #endif",
          "318: #if !defined(SQLITE_OMIT_FLAG_PRAGMAS)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "531: #endif",
          "532: #if !defined(SQLITE_OMIT_FLAG_PRAGMAS)",
          "533:  {/* zName:     */ \"short_column_names\",",
          "538: #endif",
          "539:  {/* zName:     */ \"shrink_memory\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "545: #if !defined(SQLITE_OMIT_DEPRECATED)",
          "551: #endif",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "590:  {/* zName:     */ \"temp_store_directory\",",
          "595: #endif",
          "596: #if defined(SQLITE_HAS_CODEC)",
          "597:  {/* zName:     */ \"textkey\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "604: #endif",
          "605: #if !defined(SQLITE_OMIT_PAGER_PRAGMAS)",
          "606: #if !defined(SQLITE_OMIT_DEPRECATED)",
          "613: #endif",
          "",
          "---------------"
        ],
        "tool/mkpragmatab.tcl||tool/mkpragmatab.tcl": [
          "File: tool/mkpragmatab.tcl -> tool/mkpragmatab.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:   TYPE: FLAG",
          "26:   ARG:  SQLITE_FullColNames",
          "27:   IF:   !defined(SQLITE_OMIT_FLAG_PRAGMAS)",
          "29:   NAME: short_column_names",
          "30:   TYPE: FLAG",
          "31:   ARG:  SQLITE_ShortColNames",
          "32:   IF:   !defined(SQLITE_OMIT_FLAG_PRAGMAS)",
          "34:   NAME: count_changes",
          "35:   TYPE: FLAG",
          "36:   ARG:  SQLITE_CountRows",
          "37:   IF:   !defined(SQLITE_OMIT_FLAG_PRAGMAS)",
          "39:   NAME: empty_result_callbacks",
          "40:   TYPE: FLAG",
          "41:   ARG:  SQLITE_NullCallback",
          "42:   IF:   !defined(SQLITE_OMIT_FLAG_PRAGMAS)",
          "44:   NAME: legacy_file_format",
          "45:   TYPE: FLAG",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28:   IF:   !defined(SQLITE_OMIT_DEPRECATED)",
          "34:   IF:   !defined(SQLITE_OMIT_DEPRECATED)",
          "40:   IF:   !defined(SQLITE_OMIT_DEPRECATED)",
          "46:   IF:   !defined(SQLITE_OMIT_DEPRECATED)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "152:   NAME: default_cache_size",
          "153:   FLAG: NeedSchema Result0 SchemaReq NoColumns1",
          "154:   COLS: cache_size",
          "157:   NAME: page_size",
          "158:   FLAG: Result0 SchemaReq NoColumns1",
          "",
          "[Removed Lines]",
          "155:   IF:   !defined(SQLITE_OMIT_PAGER_PRAGMAS) && !defined(SQLITE_OMIT_DEPRECATED)",
          "",
          "[Added Lines]",
          "159:   IF:   !defined(SQLITE_OMIT_PAGER_PRAGMAS)",
          "160:   IF:   !defined(SQLITE_OMIT_DEPRECATED)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "205:   NAME: temp_store_directory",
          "206:   FLAG: NoColumns1",
          "207:   IF:   !defined(SQLITE_OMIT_PAGER_PRAGMAS)",
          "209:   NAME: data_store_directory",
          "210:   FLAG: NoColumns1",
          "211:   IF:   !defined(SQLITE_OMIT_PAGER_PRAGMAS) && SQLITE_OS_WIN",
          "213:   NAME: lock_proxy_file",
          "214:   FLAG: NoColumns1",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "214:   IF:   !defined(SQLITE_OMIT_DEPRECATED)",
          "219:   IF:   !defined(SQLITE_OMIT_DEPRECATED)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f4b331535d7a1f55eb5eb4fdab5ec0a50d1dd73a",
      "candidate_info": {
        "commit_hash": "f4b331535d7a1f55eb5eb4fdab5ec0a50d1dd73a",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/f4b331535d7a1f55eb5eb4fdab5ec0a50d1dd73a",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/select.c"
        ],
        "message": "Improvement on the previous check-in.  Parse.rc is less reliable than Parse.nErr for detecting SQLITE_TOOBIG errors.\n\nFossilOrigin-Name: 8d478cfb92fdeb87591403fe1713b290fee309a38b71abee0002012935d1db98",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/select.c||src/select.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 5d85d80ef8b216639244c6f4e6a2c0050af3cf9c3998f372bae4a19c0430f2fd",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/select.c||src/select.c": [
          "File: src/select.c -> src/select.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "4797:   pTab->nRowLogEst = 200; assert( 200==sqlite3LogEst(1048576) );",
          "4798:   pTab->tabFlags |= TF_Ephemeral;",
          "4801: }",
          "",
          "[Removed Lines]",
          "4800:   return pParse->rc;",
          "",
          "[Added Lines]",
          "4800:   return pParse->nErr ? SQLITE_ERROR : SQLITE_OK;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e464802d49013ea759c30be7106976cbc2cde1e5",
      "candidate_info": {
        "commit_hash": "e464802d49013ea759c30be7106976cbc2cde1e5",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e464802d49013ea759c30be7106976cbc2cde1e5",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbeblob.c",
          "test/close.test"
        ],
        "message": "Fix a problem that could cause a crash if a blob handle were closed after the associated database handle was closed using sqlite3_close_v2().\n\nFossilOrigin-Name: 52f463d29407fad691c42b13462880e7605603c9be9f480d18e953a0ef78149a",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbeblob.c||src/vdbeblob.c",
          "test/close.test||test/close.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 0fff105a3e501fd91877d67761459eb0323e6cf79916242027cce0d05697f554",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbeblob.c||src/vdbeblob.c": [
          "File: src/vdbeblob.c -> src/vdbeblob.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "355:   sqlite3 *db;",
          "357:   if( p ){",
          "358:     db = p->db;",
          "359:     sqlite3_mutex_enter(db->mutex);",
          "361:     sqlite3DbFree(db, p);",
          "362:     sqlite3_mutex_leave(db->mutex);",
          "363:   }else{",
          "364:     rc = SQLITE_OK;",
          "365:   }",
          "",
          "[Removed Lines]",
          "360:     rc = sqlite3_finalize(p->pStmt);",
          "",
          "[Added Lines]",
          "358:     sqlite3_stmt *pStmt = p->pStmt;",
          "363:     rc = sqlite3_finalize(pStmt);",
          "",
          "---------------"
        ],
        "test/close.test||test/close.test": [
          "File: test/close.test -> test/close.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "79:   sqlite3_finalize $STMT",
          "80: } {SQLITE_OK}",
          "82: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82: do_test 1.5 {",
          "83:   set DB [sqlite3_open test.db]",
          "84:   sqlite3_blob_open $DB main t1 x 2 0 BLOB",
          "85:   sqlite3_close_v2 $DB",
          "86:   sqlite3_blob_close $BLOB",
          "87: } {}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "38a59af41766695f2e1aa6581781bb222e56a8b9",
      "candidate_info": {
        "commit_hash": "38a59af41766695f2e1aa6581781bb222e56a8b9",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/38a59af41766695f2e1aa6581781bb222e56a8b9",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/util.c"
        ],
        "message": "Use \"long double\" literals to initialize an array of \"long double\" objects.\n\nFossilOrigin-Name: 2e2ebad3ab636c4c65814ad41d417b105be8e254d609d0e08fbba4c5bd107bf3",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/util.c||src/util.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b84e7057c05338347b4267f7ccc1d7b9b6d4e9a941ce8b76bf2c27c26772000c",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/util.c||src/util.c": [
          "File: src/util.c -> src/util.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "359: static LONGDOUBLE_TYPE sqlite3Pow10(int E){",
          "360: #if defined(_MSC_VER)",
          "361:   static const LONGDOUBLE_TYPE x[] = {",
          "371:   };",
          "372:   LONGDOUBLE_TYPE r = 1.0;",
          "373:   int i;",
          "",
          "[Removed Lines]",
          "362:     1.0e+001,",
          "363:     1.0e+002,",
          "364:     1.0e+004,",
          "365:     1.0e+008,",
          "366:     1.0e+016,",
          "367:     1.0e+032,",
          "368:     1.0e+064,",
          "369:     1.0e+128,",
          "370:     1.0e+256",
          "",
          "[Added Lines]",
          "362:     1.0e+001L,",
          "363:     1.0e+002L,",
          "364:     1.0e+004L,",
          "365:     1.0e+008L,",
          "366:     1.0e+016L,",
          "367:     1.0e+032L,",
          "368:     1.0e+064L,",
          "369:     1.0e+128L,",
          "370:     1.0e+256L",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a015d3c82f295994186f1b95b1f0004ad2004d03",
      "candidate_info": {
        "commit_hash": "a015d3c82f295994186f1b95b1f0004ad2004d03",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/a015d3c82f295994186f1b95b1f0004ad2004d03",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "Fix a problem in the legacy \".explain on\" formatting when it is used on a query with more than 8 output columns.\n\nFossilOrigin-Name: 070b49825c5f87cce15be4b758f0dfdd65226ec379465ca527a18706a1f3b8f4",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 346bdd49fb93aa58e8bd14250974d8c0c32cc7e8317c8b12da1fa44db10d8a3a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "1855:       const int *colWidth;",
          "1856:       int showHdr;",
          "1857:       char *rowSep;",
          "1858:       if( p->cMode==MODE_Column ){",
          "1859:         colWidth = p->colWidth;",
          "1860:         showHdr = p->showHeader;",
          "1861:         rowSep = p->rowSeparator;",
          "1862:       }else{",
          "1863:         colWidth = aExplainWidths;",
          "1864:         showHdr = 1;",
          "1865:         rowSep = SEP_Row;",
          "1866:       }",
          "1867:       if( p->cnt++==0 ){",
          "1868:         for(i=0; i<nArg; i++){",
          "1869:           int w, n;",
          "1871:             w = colWidth[i];",
          "1872:           }else{",
          "1873:             w = 0;",
          "",
          "[Removed Lines]",
          "1870:           if( i<ArraySize(p->colWidth) ){",
          "",
          "[Added Lines]",
          "1858:       int nWidth;",
          "1861:         nWidth = ArraySize(p->colWidth);",
          "1866:         nWidth = ArraySize(aExplainWidths);",
          "1873:           if( i<nWidth ){",
          "",
          "---------------"
        ]
      }
    }
  ]
}