{
  "cve_id": "CVE-2015-8816",
  "cve_desc": "The hub_activate function in drivers/usb/core/hub.c in the Linux kernel before 4.3.5 does not properly maintain a hub-interface data structure, which allows physically proximate attackers to cause a denial of service (invalid memory access and system crash) or possibly have unspecified other impact by unplugging a USB hub device.",
  "repo": "torvalds/linux",
  "patch_hash": "e50293ef9775c5f1cf3fcc093037dd6a8c5684ea",
  "patch_info": {
    "commit_hash": "e50293ef9775c5f1cf3fcc093037dd6a8c5684ea",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/e50293ef9775c5f1cf3fcc093037dd6a8c5684ea",
    "files": [
      "drivers/usb/core/hub.c"
    ],
    "message": "USB: fix invalid memory access in hub_activate()\n\nCommit 8520f38099cc (\"USB: change hub initialization sleeps to\ndelayed_work\") changed the hub_activate() routine to make part of it\nrun in a workqueue.  However, the commit failed to take a reference to\nthe usb_hub structure or to lock the hub interface while doing so.  As\na result, if a hub is plugged in and quickly unplugged before the work\nroutine can run, the routine will try to access memory that has been\ndeallocated.  Or, if the hub is unplugged while the routine is\nrunning, the memory may be deallocated while it is in active use.\n\nThis patch fixes the problem by taking a reference to the usb_hub at\nthe start of hub_activate() and releasing it at the end (when the work\nis finished), and by locking the hub interface while the work routine\nis running.  It also adds a check at the start of the routine to see\nif the hub has already been disconnected, in which nothing should be\ndone.\n\nSigned-off-by: Alan Stern <stern@rowland.harvard.edu>\nReported-by: Alexandru Cornea <alexandru.cornea@intel.com>\nTested-by: Alexandru Cornea <alexandru.cornea@intel.com>\nFixes: 8520f38099cc (\"USB: change hub initialization sleeps to delayed_work\")\nCC: <stable@vger.kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
    "before_after_code_files": [
      "drivers/usb/core/hub.c||drivers/usb/core/hub.c"
    ]
  },
  "patch_diff": {
    "drivers/usb/core/hub.c||drivers/usb/core/hub.c": [
      "File: drivers/usb/core/hub.c -> drivers/usb/core/hub.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1035:  unsigned delay;",
      "1041:   goto init3;",
      "",
      "[Removed Lines]",
      "1038:  if (type == HUB_INIT2)",
      "1039:   goto init2;",
      "1040:  if (type == HUB_INIT3)",
      "",
      "[Added Lines]",
      "1038:  if (type == HUB_INIT2 || type == HUB_INIT3) {",
      "1039:   device_lock(hub->intfdev);",
      "1042:   if (hub->disconnected) {",
      "1043:    device_unlock(hub->intfdev);",
      "1044:    kref_put(&hub->kref, hub_release);",
      "1045:    return;",
      "1046:   }",
      "1047:   if (type == HUB_INIT2)",
      "1048:    goto init2;",
      "1050:  }",
      "1051:  kref_get(&hub->kref);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1236:    queue_delayed_work(system_power_efficient_wq,",
      "1237:      &hub->init_work,",
      "1238:      msecs_to_jiffies(delay));",
      "1240:   } else {",
      "1241:    msleep(delay);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1249:    device_unlock(hub->intfdev);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1258:  if (type <= HUB_INIT3)",
      "1259:   usb_autopm_put_interface_async(to_usb_interface(hub->intfdev));",
      "1260: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1272:  if (type == HUB_INIT2 || type == HUB_INIT3)",
      "1273:   device_unlock(hub->intfdev);",
      "1275:  kref_put(&hub->kref, hub_release);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ca5cbc8b02f9b21cc8cd1ab36668763ec34f9ee8",
      "candidate_info": {
        "commit_hash": "ca5cbc8b02f9b21cc8cd1ab36668763ec34f9ee8",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/ca5cbc8b02f9b21cc8cd1ab36668763ec34f9ee8",
        "files": [
          "drivers/usb/core/hub.c"
        ],
        "message": "USB: hub: fix up early-exit pathway in hub_activate\n\nThe early-exit pathway in hub_activate, added by commit e50293ef9775\n(\"USB: fix invalid memory access in hub_activate()\") needs\nimprovement.  It duplicates code that is already present at the end of\nthe subroutine, and it neglects to undo the effect of a\nusb_autopm_get_interface_no_resume() call.\n\nThis patch fixes both problems by making the early-exit pathway jump\ndirectly to the end of the subroutine.  It simplifies the code at the\nend by merging two conditionals that actually test the same condition\nalthough they appear different: If type < HUB_INIT3 then type must be\neither HUB_INIT2 or HUB_INIT, and it can't be HUB_INIT because in that\ncase the subroutine would have exited earlier.\n\nSigned-off-by: Alan Stern <stern@rowland.harvard.edu>\nCC: <stable@vger.kernel.org> #4.4+\nReviewed-by: Viresh Kumar <viresh.kumar@linaro.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
        "before_after_code_files": [
          "drivers/usb/core/hub.c||drivers/usb/core/hub.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "drivers/usb/core/hub.c||drivers/usb/core/hub.c"
          ],
          "candidate": [
            "drivers/usb/core/hub.c||drivers/usb/core/hub.c"
          ]
        }
      },
      "candidate_diff": {
        "drivers/usb/core/hub.c||drivers/usb/core/hub.c": [
          "File: drivers/usb/core/hub.c -> drivers/usb/core/hub.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1055:   device_lock(hub->intfdev);",
          "1063:   if (type == HUB_INIT2)",
          "1064:    goto init2;",
          "1065:   goto init3;",
          "",
          "[Removed Lines]",
          "1058:   if (hub->disconnected) {",
          "1059:    device_unlock(hub->intfdev);",
          "1060:    kref_put(&hub->kref, hub_release);",
          "1061:    return;",
          "1062:   }",
          "",
          "[Added Lines]",
          "1058:   if (hub->disconnected)",
          "1059:    goto disconnected;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1282:  kick_hub_wq(hub);",
          "1286:   usb_autopm_put_interface_async(to_usb_interface(hub->intfdev));",
          "1289:   device_unlock(hub->intfdev);",
          "1291:  kref_put(&hub->kref, hub_release);",
          "1292: }",
          "",
          "[Removed Lines]",
          "1285:  if (type <= HUB_INIT3)",
          "1288:  if (type == HUB_INIT2 || type == HUB_INIT3)",
          "",
          "[Added Lines]",
          "1281:  if (type == HUB_INIT2 || type == HUB_INIT3) {",
          "1283:  disconnected:",
          "1286:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "07d316a22e119fa301fd7dba7f1e1adfd4f72c05",
      "candidate_info": {
        "commit_hash": "07d316a22e119fa301fd7dba7f1e1adfd4f72c05",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/07d316a22e119fa301fd7dba7f1e1adfd4f72c05",
        "files": [
          "drivers/usb/core/hub.c"
        ],
        "message": "USB: hub: change the locking in hub_activate\n\nThe locking in hub_activate() is not adequate to provide full mutual\nexclusion with hub_quiesce().  The subroutine locks the hub's\nusb_interface, but the callers of hub_quiesce() (such as\nhub_pre_reset() and hub_event()) hold the lock to the hub's\nusb_device.\n\nThis patch changes hub_activate() to make it acquire the same lock as\nthose other routines.\n\nSigned-off-by: Alan Stern <stern@rowland.harvard.edu>\nCC: <stable@vger.kernel.org> #4.4+\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",
        "before_after_code_files": [
          "drivers/usb/core/hub.c||drivers/usb/core/hub.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "drivers/usb/core/hub.c||drivers/usb/core/hub.c"
          ],
          "candidate": [
            "drivers/usb/core/hub.c||drivers/usb/core/hub.c"
          ]
        }
      },
      "candidate_diff": {
        "drivers/usb/core/hub.c||drivers/usb/core/hub.c": [
          "File: drivers/usb/core/hub.c -> drivers/usb/core/hub.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1054:  if (type == HUB_INIT2 || type == HUB_INIT3) {",
          "1058:   if (hub->disconnected)",
          "",
          "[Removed Lines]",
          "1055:   device_lock(hub->intfdev);",
          "",
          "[Added Lines]",
          "1055:   device_lock(&hdev->dev);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1259:    queue_delayed_work(system_power_efficient_wq,",
          "1260:      &hub->init_work,",
          "1261:      msecs_to_jiffies(delay));",
          "1264:   } else {",
          "1265:    msleep(delay);",
          "",
          "[Removed Lines]",
          "1262:    device_unlock(hub->intfdev);",
          "",
          "[Added Lines]",
          "1262:    device_unlock(&hdev->dev);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1283:  disconnected:",
          "1284:   usb_autopm_put_interface_async(to_usb_interface(hub->intfdev));",
          "1286:  }",
          "1288:  kref_put(&hub->kref, hub_release);",
          "",
          "[Removed Lines]",
          "1285:   device_unlock(hub->intfdev);",
          "",
          "[Added Lines]",
          "1285:   device_unlock(&hdev->dev);",
          "",
          "---------------"
        ]
      }
    }
  ]
}