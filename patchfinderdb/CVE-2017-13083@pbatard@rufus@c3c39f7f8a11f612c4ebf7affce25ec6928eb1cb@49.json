{
  "cve_id": "CVE-2017-13083",
  "cve_desc": "Akeo Consulting Rufus prior to version 2.17.1187 does not adequately validate the integrity of updates downloaded over HTTP, allowing an attacker to easily convince a user to execute arbitrary code",
  "repo": "pbatard/rufus",
  "patch_hash": "c3c39f7f8a11f612c4ebf7affce25ec6928eb1cb",
  "patch_info": {
    "commit_hash": "c3c39f7f8a11f612c4ebf7affce25ec6928eb1cb",
    "repo": "pbatard/rufus",
    "commit_url": "https://github.com/pbatard/rufus/commit/c3c39f7f8a11f612c4ebf7affce25ec6928eb1cb",
    "files": [
      "res/localization/rufus.loc",
      "src/pki.c",
      "src/rufus.rc",
      "src/stdlg.c"
    ],
    "message": "[pki] fix https://www.kb.cert.org/vuls/id/403768\n\n* This commit effectively fixes https://www.kb.cert.org/vuls/id/403768 (CVE-2017-13083) as\n  it is described per its revision 11, which is the latest revision at the time of this commit,\n  by disabling Windows prompts, enacted during signature validation, that allow the user to\n  bypass the intended signature verification checks.\n* It needs to be pointed out that the vulnerability (\"allow(ing) the use of a self-signed\n  certificate\"), which relies on the end-user actively ignoring a Windows prompt that tells\n  them that the update failed the signature validation whilst also advising against running it,\n  is being fully addressed, even as the update protocol remains HTTP.\n* It also need to be pointed out that the extended delay (48 hours) between the time the\n  vulnerability was reported and the moment it is fixed in our codebase has to do with\n  the fact that the reporter chose to deviate from standard security practices by not\n  disclosing the details of the vulnerability with us, be it publicly or privately,\n  before creating the cert.org report. The only advance notification we received was a\n  generic note about the use of HTTP vs HTTPS, which, as have established, is not\n  immediately relevant to addressing the reported vulnerability.\n* Closes #1009\n* Note: The other vulnerability scenario described towards the end of #1009, which\n  doesn't have to do with the \"lack of CA checking\", will be addressed separately.",
    "before_after_code_files": [
      "res/localization/rufus.loc||res/localization/rufus.loc",
      "src/pki.c||src/pki.c",
      "src/rufus.rc||src/rufus.rc",
      "src/stdlg.c||src/stdlg.c"
    ]
  },
  "patch_diff": {
    "res/localization/rufus.loc||res/localization/rufus.loc": [
      "File: res/localization/rufus.loc -> res/localization/rufus.loc",
      "--- Hunk 1 ---",
      "[Context before]",
      "487: # eg. \"Partitioning (MBR)...\"",
      "488: t MSG_238 \"Partitioning (%s)...\"",
      "489: t MSG_239 \"Deleting partitions...\"",
      "490: t MSG_241 \"Downloading: %0.1f%%\"",
      "491: t MSG_242 \"Failed to download file.\"",
      "492: t MSG_243 \"Checking for Rufus updates...\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "490: t MSG_240 \"The signature for the downloaded update can not be validated. This could mean that your \"",
      "491:  \"system is improperly configured for signature validation or indicate a malicious download.\\n\\n\"",
      "492:  \"The download will be deleted. Please check the log for more details.\"",
      "",
      "---------------"
    ],
    "src/pki.c||src/pki.c": [
      "File: src/pki.c -> src/pki.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "53:  static char error_string[64];",
      "54:  DWORD error_code = GetLastError();",
      "57:   return WindowsErrorString();",
      "59:  switch (error_code) {",
      "",
      "[Removed Lines]",
      "56:  if ((error_code >> 16) != 0x8009)",
      "",
      "[Added Lines]",
      "56:  if (((error_code >> 16) != 0x8009) && ((error_code >> 16) != 0x800B))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "113:   return \"Cannot complete usage check.\";",
      "114:  case CRYPT_E_NO_TRUSTED_SIGNER:",
      "115:   return \"None of the signers of the cryptographic message or certificate trust list is trusted.\";",
      "116:  default:",
      "117:   static_sprintf(error_string, \"Unknown PKI error 0x%08lX\", error_code);",
      "118:   return error_string;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "116:  case CERT_E_UNTRUSTEDROOT:",
      "117:   return \"The root certificate is not trusted.\";",
      "118:  case TRUST_E_NOSIGNATURE:",
      "119:   return \"Not digitally signed.\";",
      "120:  case TRUST_E_EXPLICIT_DISTRUST:",
      "121:   return \"One of the certificates used was marked as untrusted by the user.\";",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "268:  }",
      "270:  trust_data.cbStruct = sizeof(trust_data);",
      "273:  trust_data.fdwRevocationChecks = WTD_REVOKE_WHOLECHAIN;",
      "",
      "[Removed Lines]",
      "271:  trust_data.dwUIChoice = WTD_UI_ALL;",
      "",
      "[Added Lines]",
      "283:  trust_data.dwUIChoice = WTD_UI_NONE;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "279:  r = WinVerifyTrust(NULL, &guid_generic_verify, &trust_data);",
      "280:  safe_free(trust_file.pcwszFilePath);",
      "282:  return r;",
      "283: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "293:  switch (r) {",
      "294:  case ERROR_SUCCESS:",
      "295:   break;",
      "296:  case TRUST_E_NOSIGNATURE:",
      "298:   uprintf(\"PKI: File does not appear to be signed: %s\", WinPKIErrorString());",
      "299:   MessageBoxExU(hDlg, lmprintf(MSG_284), lmprintf(MSG_283), MB_OK | MB_ICONERROR | MB_IS_RTL, selected_langid);",
      "300:   break;",
      "301:  default:",
      "302:   uprintf(\"PKI: Failed to validate signature: %s\", WinPKIErrorString());",
      "303:   MessageBoxExU(hDlg, lmprintf(MSG_240), lmprintf(MSG_283), MB_OK | MB_ICONERROR | MB_IS_RTL, selected_langid);",
      "304:   break;",
      "305:  }",
      "",
      "---------------"
    ],
    "src/rufus.rc||src/rufus.rc": [
      "File: src/rufus.rc -> src/rufus.rc",
      "--- Hunk 1 ---",
      "[Context before]",
      "33: IDD_DIALOG DIALOGEX 12, 12, 242, 376",
      "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
      "35: EXSTYLE WS_EX_ACCEPTFILES",
      "37: FONT 8, \"Segoe UI Symbol\", 400, 0, 0x0",
      "38: BEGIN",
      "39:     LTEXT           \"Device\",IDS_DEVICE_TXT,9,6,200,8",
      "",
      "[Removed Lines]",
      "36: CAPTION \"Rufus 2.17.1186\"",
      "",
      "[Added Lines]",
      "36: CAPTION \"Rufus 2.17.1187\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "368: VS_VERSION_INFO VERSIONINFO",
      "371:  FILEFLAGSMASK 0x3fL",
      "372: #ifdef _DEBUG",
      "373:  FILEFLAGS 0x1L",
      "",
      "[Removed Lines]",
      "369:  FILEVERSION 2,17,1186,0",
      "370:  PRODUCTVERSION 2,17,1186,0",
      "",
      "[Added Lines]",
      "369:  FILEVERSION 2,17,1187,0",
      "370:  PRODUCTVERSION 2,17,1187,0",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "384:         BEGIN",
      "385:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
      "386:             VALUE \"FileDescription\", \"Rufus\"",
      "388:             VALUE \"InternalName\", \"Rufus\"",
      "389:             VALUE \"LegalCopyright\", \"\ufffd 2011-2017 Pete Batard (GPL v3)\"",
      "390:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
      "391:             VALUE \"OriginalFilename\", \"rufus.exe\"",
      "392:             VALUE \"ProductName\", \"Rufus\"",
      "394:         END",
      "395:     END",
      "396:     BLOCK \"VarFileInfo\"",
      "",
      "[Removed Lines]",
      "387:             VALUE \"FileVersion\", \"2.17.1186\"",
      "393:             VALUE \"ProductVersion\", \"2.17.1186\"",
      "",
      "[Added Lines]",
      "387:             VALUE \"FileVersion\", \"2.17.1187\"",
      "393:             VALUE \"ProductVersion\", \"2.17.1187\"",
      "",
      "---------------"
    ],
    "src/stdlg.c||src/stdlg.c": [
      "File: src/stdlg.c -> src/stdlg.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674:    case 2:  // Launch newer version and close this one",
      "1675:     Sleep(1000); // Add a delay on account of antivirus scanners",
      "1678:      break;",
      "1680:     memset(&si, 0, sizeof(si));",
      "1681:     memset(&pi, 0, sizeof(pi));",
      "",
      "[Removed Lines]",
      "1677:     if (ValidateSignature(hDlg, filepath) != NO_ERROR)",
      "",
      "[Added Lines]",
      "1677:     if (ValidateSignature(hDlg, filepath) != NO_ERROR) {",
      "1679:      _unlinkU(filepath);",
      "1680:      EnableWindow(GetDlgItem(hDlg, IDC_DOWNLOAD), FALSE);",
      "1682:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c22b378f9a702ba534e912c5a9f564e1aa7d5514",
      "candidate_info": {
        "commit_hash": "c22b378f9a702ba534e912c5a9f564e1aa7d5514",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/c22b378f9a702ba534e912c5a9f564e1aa7d5514",
        "files": [
          "ChangeLog.txt",
          "src/drive.c",
          "src/pki.c",
          "src/rufus.c",
          "src/rufus.rc"
        ],
        "message": "[misc] display image and disk size in the log\n\n* Also fix 2 Coverity warnings\n* Also remove unneeded LFs in drive.c",
        "before_after_code_files": [
          "src/drive.c||src/drive.c",
          "src/pki.c||src/pki.c",
          "src/rufus.c||src/rufus.c",
          "src/rufus.rc||src/rufus.rc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/pki.c||src/pki.c",
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "src/pki.c||src/pki.c",
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "src/drive.c||src/drive.c": [
          "File: src/drive.c -> src/drive.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "158:   Sleep(DRIVE_ACCESS_TIMEOUT / DRIVE_ACCESS_RETRIES);",
          "159:  }",
          "160:  if (hDrive == INVALID_HANDLE_VALUE) {",
          "162:   goto out;",
          "163:  }",
          "",
          "[Removed Lines]",
          "161:   uprintf(\"Could not open %s: %s\\n\", Path, WindowsErrorString());",
          "",
          "[Added Lines]",
          "161:   uprintf(\"Could not open %s: %s\", Path, WindowsErrorString());",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "169:  if (bLockDrive) {",
          "170:   if (DeviceIoControl(hDrive, FSCTL_ALLOW_EXTENDED_DASD_IO, NULL, 0, NULL, 0, &size, NULL)) {",
          "172:   }",
          "174:   uprintf(\"Requesting lock...\");",
          "",
          "[Removed Lines]",
          "171:    uprintf(\"I/O boundary checks disabled\\n\");",
          "",
          "[Added Lines]",
          "171:    uprintf(\"I/O boundary checks disabled\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "247:   if (i == 0) {",
          "248:    hVolume = FindFirstVolumeA(volume_name, sizeof(volume_name));",
          "249:    if (hVolume == INVALID_HANDLE_VALUE) {",
          "251:     goto out;",
          "252:    }",
          "253:   } else {",
          "254:    if (!FindNextVolumeA(hVolume, volume_name, sizeof(volume_name))) {",
          "255:     if (GetLastError() != ERROR_NO_MORE_FILES) {",
          "257:     }",
          "258:     goto out;",
          "259:    }",
          "",
          "[Removed Lines]",
          "250:     suprintf(\"Could not access first GUID volume: %s\\n\", WindowsErrorString());",
          "256:      suprintf(\"Could not access next GUID volume: %s\\n\", WindowsErrorString());",
          "",
          "[Added Lines]",
          "250:     suprintf(\"Could not access first GUID volume: %s\", WindowsErrorString());",
          "256:      suprintf(\"Could not access next GUID volume: %s\", WindowsErrorString());",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "263:   len = safe_strlen(volume_name);",
          "264:   if ((len <= 1) || (safe_strnicmp(volume_name, volume_start, 4) != 0) || (volume_name[len-1] != '\\\\')) {",
          "266:    continue;",
          "267:   }",
          "",
          "[Removed Lines]",
          "265:    suprintf(\"'%s' is not a GUID volume name\\n\", volume_name);",
          "",
          "[Added Lines]",
          "265:    suprintf(\"'%s' is not a GUID volume name\", volume_name);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "273:   volume_name[len-1] = 0;",
          "275:   if (QueryDosDeviceA(&volume_name[4], path, sizeof(path)) == 0) {",
          "277:    continue;",
          "278:   }",
          "280:   for (j=0; (j<ARRAYSIZE(ignore_device)) &&",
          "281:    (_strnicmp(path, ignore_device[j], safe_strlen(ignore_device[j])) != 0); j++);",
          "282:   if (j < ARRAYSIZE(ignore_device)) {",
          "284:    continue;",
          "285:   }",
          "287:   hDrive = CreateFileA(volume_name, GENERIC_READ, FILE_SHARE_READ|FILE_SHARE_WRITE,",
          "288:    NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL);",
          "289:   if (hDrive == INVALID_HANDLE_VALUE) {",
          "291:    continue;",
          "292:   }",
          "294:   if ((!DeviceIoControl(hDrive, IOCTL_VOLUME_GET_VOLUME_DISK_EXTENTS, NULL, 0,",
          "295:    &DiskExtents, sizeof(DiskExtents), &size, NULL)) || (size <= 0)) {",
          "297:    safe_closehandle(hDrive);",
          "298:    continue;",
          "299:   }",
          "",
          "[Removed Lines]",
          "276:    suprintf(\"Failed to get device path for GUID volume '%s': %s\\n\", volume_name, WindowsErrorString());",
          "283:    suprintf(\"Skipping GUID volume for '%s'\\n\", path);",
          "290:    suprintf(\"Could not open GUID volume '%s': %s\\n\", volume_name, WindowsErrorString());",
          "296:    suprintf(\"Could not get Disk Extents: %s\\n\", WindowsErrorString());",
          "",
          "[Added Lines]",
          "276:    suprintf(\"Failed to get device path for GUID volume '%s': %s\", volume_name, WindowsErrorString());",
          "283:    suprintf(\"Skipping GUID volume for '%s'\", path);",
          "290:    suprintf(\"Could not open GUID volume '%s': %s\", volume_name, WindowsErrorString());",
          "296:    suprintf(\"Could not get Disk Extents: %s\", WindowsErrorString());",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "331:    return FALSE;",
          "332:   Sleep(DRIVE_ACCESS_TIMEOUT/DRIVE_ACCESS_RETRIES);",
          "333:  } while (GetTickCount() < EndTime);",
          "335:  return FALSE;",
          "336: }",
          "",
          "[Removed Lines]",
          "334:  uprintf(\"Timeout while waiting for logical drive\\n\");",
          "",
          "[Added Lines]",
          "334:  uprintf(\"Timeout while waiting for logical drive\");",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "346:  char* LogicalPath = GetLogicalName(DriveIndex, FALSE, FALSE);",
          "348:  if (LogicalPath == NULL) {",
          "350:   return NULL;",
          "351:  }",
          "",
          "[Removed Lines]",
          "349:   uprintf(\"No logical drive found (unpartitioned?)\\n\");",
          "",
          "[Added Lines]",
          "349:   uprintf(\"No logical drive found (unpartitioned?)\");",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "419:  size = GetLogicalDriveStringsA(sizeof(drives), drives);",
          "420:  if (size == 0) {",
          "422:   goto out;",
          "423:  }",
          "424:  if (size > sizeof(drives)) {",
          "426:   goto out;",
          "427:  }",
          "",
          "[Removed Lines]",
          "421:   uprintf(\"GetLogicalDriveStrings failed: %s\\n\", WindowsErrorString());",
          "425:   uprintf(\"GetLogicalDriveStrings: Buffer too small (required %d vs. %d)\\n\", size, sizeof(drives));",
          "",
          "[Added Lines]",
          "421:   uprintf(\"GetLogicalDriveStrings failed: %s\", WindowsErrorString());",
          "425:   uprintf(\"GetLogicalDriveStrings: Buffer too small (required %d vs. %d)\", size, sizeof(drives));",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "492:  size = GetLogicalDriveStringsA(sizeof(drives), drives);",
          "493:  if (size == 0) {",
          "495:   goto out;",
          "496:  }",
          "497:  if (size > sizeof(drives)) {",
          "499:   goto out;",
          "500:  }",
          "",
          "[Removed Lines]",
          "494:   uprintf(\"GetLogicalDriveStrings failed: %s\\n\", WindowsErrorString());",
          "498:   uprintf(\"GetLogicalDriveStrings: Buffer too small (required %d vs. %d)\\n\", size, sizeof(drives));",
          "",
          "[Added Lines]",
          "494:   uprintf(\"GetLogicalDriveStrings failed: %s\", WindowsErrorString());",
          "498:   uprintf(\"GetLogicalDriveStrings: Buffer too small (required %d vs. %d)\", size, sizeof(drives));",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "544:  if (DeviceIoControl(hPhysical, IOCTL_STORAGE_CHECK_VERIFY, NULL, 0, NULL, 0, &size, NULL))",
          "545:   AutorunLabel = get_token_data_file(\"label\", AutorunPath);",
          "546:  else if (GetLastError() == ERROR_NOT_READY)",
          "548:   (HRESULT_CODE(GetLastError()) == ERROR_NOT_READY)?\"No media\":WindowsErrorString());",
          "549:  safe_closehandle(hPhysical);",
          "550:  if (AutorunLabel != NULL) {",
          "552:   static_strcpy(VolumeLabel, AutorunLabel);",
          "553:   safe_free(AutorunLabel);",
          "",
          "[Removed Lines]",
          "547:   uprintf(\"Ignoring autorun.inf label for drive %c: %s\\n\", letters[0],",
          "551:   uprintf(\"Using autorun.inf label for drive %c: '%s'\\n\", letters[0], AutorunLabel);",
          "",
          "[Added Lines]",
          "547:   uprintf(\"Ignoring autorun.inf label for drive %c: %s\", letters[0],",
          "551:   uprintf(\"Using autorun.inf label for drive %c: '%s'\", letters[0], AutorunLabel);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "630:  set_bytes_per_sector(SelectedDrive.SectorSize);",
          "632:  if (!is_br(fp)) {",
          "634:   return FALSE;",
          "635:  }",
          "636:  for (i=0; i<ARRAYSIZE(known_mbr); i++) {",
          "637:   if (known_mbr[i].fn(fp)) {",
          "639:    return TRUE;",
          "640:   }",
          "641:  }",
          "644:  return TRUE;",
          "645: }",
          "",
          "[Removed Lines]",
          "633:   uprintf(\"%s does not have an x86 %s\\n\", TargetName, mbr_name);",
          "638:    uprintf(\"%s has a %s %s\\n\", TargetName, known_mbr[i].str, mbr_name);",
          "643:  uprintf(\"%s has an unknown %s\\n\", TargetName, mbr_name);",
          "",
          "[Added Lines]",
          "633:   uprintf(\"%s does not have an x86 %s\", TargetName, mbr_name);",
          "638:    uprintf(\"%s has a %s %s\", TargetName, known_mbr[i].str, mbr_name);",
          "643:  uprintf(\"%s has an unknown %s\", TargetName, mbr_name);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "666:  set_bytes_per_sector(SelectedDrive.SectorSize);",
          "668:  if (!is_br(fp)) {",
          "670:   return FALSE;",
          "671:  }",
          "673:  if (is_fat_16_br(fp) || is_fat_32_br(fp)) {",
          "674:   for (i=0; i<ARRAYSIZE(known_pbr); i++) {",
          "675:    if (known_pbr[i].fn(fp)) {",
          "677:     return TRUE;",
          "678:    }",
          "679:   }",
          "681:  } else {",
          "683:  }",
          "684:  return TRUE;",
          "685: }",
          "",
          "[Removed Lines]",
          "669:   uprintf(\"Volume does not have an x86 %s\\n\", pbr_name);",
          "676:     uprintf(\"Drive has a %s %s\\n\", known_pbr[i].str, pbr_name);",
          "680:   uprintf(\"Volume has an unknown FAT16 or FAT32 %s\\n\", pbr_name);",
          "682:   uprintf(\"Volume has an unknown %s\\n\", pbr_name);",
          "",
          "[Added Lines]",
          "669:   uprintf(\"Volume does not have an x86 %s\", pbr_name);",
          "676:     uprintf(\"Drive has a %s %s\", known_pbr[i].str, pbr_name);",
          "680:   uprintf(\"Volume has an unknown FAT16 or FAT32 %s\", pbr_name);",
          "682:   uprintf(\"Volume has an unknown %s\", pbr_name);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "710:  FileSystemName[0] = 0;",
          "711:  volume_name = GetLogicalName(DriveIndex, TRUE, FALSE);",
          "712:  if ((volume_name == NULL) || (!GetVolumeInformationA(volume_name, NULL, 0, NULL, NULL, NULL, FileSystemName, FileSystemNameSize))) {",
          "714:  }",
          "715:  safe_free(volume_name);",
          "",
          "[Removed Lines]",
          "713:   suprintf(\"No volume information for drive 0x%02x\\n\", DriveIndex);",
          "",
          "[Added Lines]",
          "713:   suprintf(\"No volume information for drive 0x%02x\", DriveIndex);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "721:  r = DeviceIoControl(hPhysical, IOCTL_DISK_GET_DRIVE_GEOMETRY_EX,",
          "722:    NULL, 0, geometry, sizeof(geometry), &size, NULL);",
          "723:  if (!r || size <= 0) {",
          "725:   safe_closehandle(hPhysical);",
          "726:   return 0;",
          "727:  }",
          "",
          "[Removed Lines]",
          "724:   suprintf(\"Could not get geometry for drive 0x%02x: %s\\n\", DriveIndex, WindowsErrorString());",
          "",
          "[Added Lines]",
          "724:   suprintf(\"Could not get geometry for drive 0x%02x: %s\", DriveIndex, WindowsErrorString());",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "729:  SelectedDrive.SectorSize = DiskGeometry->Geometry.BytesPerSector;",
          "730:  SelectedDrive.FirstDataSector = MAXDWORD;",
          "731:  if (SelectedDrive.SectorSize < 512) {",
          "733:    DriveIndex, SelectedDrive.SectorSize);",
          "734:   SelectedDrive.SectorSize = 512;",
          "735:  }",
          "736:  SelectedDrive.SectorsPerTrack = DiskGeometry->Geometry.SectorsPerTrack;",
          "737:  SelectedDrive.MediaType = DiskGeometry->Geometry.MediaType;",
          "742:   DiskGeometry->Geometry.Cylinders, DiskGeometry->Geometry.TracksPerCylinder, DiskGeometry->Geometry.SectorsPerTrack);",
          "744:  r = DeviceIoControl(hPhysical, IOCTL_DISK_GET_DRIVE_LAYOUT_EX,",
          "745:    NULL, 0, layout, sizeof(layout), &size, NULL );",
          "746:  if (!r || size <= 0) {",
          "748:   safe_closehandle(hPhysical);",
          "749:   return 0;",
          "750:  }",
          "",
          "[Removed Lines]",
          "732:   suprintf(\"Warning: Drive 0x%02x reports a sector size of %d - Correcting to 512 bytes.\\n\",",
          "739:  suprintf(\"Disk type: %s, Sector Size: %d bytes\\n\", (SelectedDrive.MediaType == FixedMedia)?\"FIXED\":\"Removable\",",
          "740:   SelectedDrive.SectorSize);",
          "741:  suprintf(\"Cylinders: %\" PRIi64 \", TracksPerCylinder: %d, SectorsPerTrack: %d\\n\",",
          "747:   suprintf(\"Could not get layout for drive 0x%02x: %s\\n\", DriveIndex, WindowsErrorString());",
          "",
          "[Added Lines]",
          "732:   suprintf(\"Warning: Drive 0x%02x reports a sector size of %d - Correcting to 512 bytes.\",",
          "739:  suprintf(\"Disk type: %s, Disk size: %s, Sector size: %d bytes\", (SelectedDrive.MediaType == FixedMedia)?\"FIXED\":\"Removable\",",
          "740:   SizeToHumanReadable(SelectedDrive.DiskSize, FALSE, TRUE), SelectedDrive.SectorSize);",
          "741:  suprintf(\"Cylinders: %\" PRIi64 \", Tracks per cylinder: %d, Sectors per track: %d\",",
          "747:   suprintf(\"Could not get layout for drive 0x%02x: %s\", DriveIndex, WindowsErrorString());",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "767:    suprintf(\"Partition type: SFD (Super Floppy Disk) or Unpartitioned\");",
          "768:    super_floppy_disk = TRUE;",
          "769:   } else {",
          "771:    SelectedDrive.has_mbr_uefi_marker = (DriveLayout->Mbr.Signature == MBR_UEFI_MARKER);",
          "773:    AnalyzeMBR(hPhysical, \"Drive\");",
          "774:   }",
          "775:   for (i=0; i<DriveLayout->PartitionCount; i++) {",
          "",
          "[Removed Lines]",
          "770:    suprintf(\"Partition type: MBR, NB Partitions: %d\\n\", SelectedDrive.nPartitions);",
          "772:    suprintf(\"Disk ID: 0x%08X %s\\n\", DriveLayout->Mbr.Signature, SelectedDrive.has_mbr_uefi_marker ? \"(UEFI target)\" : \"\");",
          "",
          "[Added Lines]",
          "770:    suprintf(\"Partition type: MBR, NB Partitions: %d\", SelectedDrive.nPartitions);",
          "772:    suprintf(\"Disk ID: 0x%08X %s\", DriveLayout->Mbr.Signature, SelectedDrive.has_mbr_uefi_marker ? \"(UEFI target)\" : \"\");",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "777:     part_type = DriveLayout->PartitionEntry[i].Mbr.PartitionType;",
          "778:     isUefiNtfs = (i == 1) && (part_type == 0xef) &&",
          "779:      (DriveLayout->PartitionEntry[i].PartitionLength.QuadPart <= 1*MB);",
          "781:     for (j=0; j<ARRAYSIZE(mbr_mountable); j++) {",
          "782:      if (part_type == mbr_mountable[j]) {",
          "783:       ret = TRUE;",
          "",
          "[Removed Lines]",
          "780:     suprintf(\"Partition %d%s:\\n\", i+(super_floppy_disk?0:1), isUefiNtfs?\" (UEFI:NTFS)\":\"\");",
          "",
          "[Added Lines]",
          "780:     suprintf(\"Partition %d%s:\", i+(super_floppy_disk?0:1), isUefiNtfs?\" (UEFI:NTFS)\":\"\");",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "803:   break;",
          "804:  case PARTITION_STYLE_GPT:",
          "805:   SelectedDrive.PartitionType = PARTITION_STYLE_GPT;",
          "809:    DriveLayout->Gpt.MaxPartitionCount, DriveLayout->Gpt.StartingUsableOffset.QuadPart, DriveLayout->Gpt.UsableLength.QuadPart);",
          "810:   for (i=0; i<DriveLayout->PartitionCount; i++) {",
          "811:    SelectedDrive.nPartitions++;",
          "812:    tmp[0] = 0;",
          "813:    wchar_to_utf8_no_alloc(DriveLayout->PartitionEntry[i].Gpt.Name, tmp, sizeof(tmp));",
          "815:     GuidToString(&DriveLayout->PartitionEntry[i].Gpt.PartitionType), tmp);",
          "817:     GuidToString(&DriveLayout->PartitionEntry[i].Gpt.PartitionId),",
          "818:     SizeToHumanReadable(DriveLayout->PartitionEntry[i].PartitionLength.QuadPart, TRUE, FALSE),",
          "819:     DriveLayout->PartitionEntry[i].PartitionLength,",
          "",
          "[Removed Lines]",
          "806:   suprintf(\"Partition type: GPT, NB Partitions: %d\\n\", DriveLayout->PartitionCount);",
          "807:   suprintf(\"Disk GUID: %s\\n\", GuidToString(&DriveLayout->Gpt.DiskId));",
          "808:   suprintf(\"Max parts: %d, Start Offset: %\" PRIi64 \", Usable = %\" PRIi64 \" bytes\\n\",",
          "814:    suprintf(\"Partition %d:\\r\\n  Type: %s\\r\\n  Name: '%s'\\n\", i+1,",
          "816:    suprintf(\"  ID: %s\\r\\n  Size: %s (%\" PRIi64 \" bytes)\\r\\n  Start Sector: %\" PRIi64 \", Attributes: 0x%016\" PRIX64 \"\\n\",",
          "",
          "[Added Lines]",
          "806:   suprintf(\"Partition type: GPT, NB Partitions: %d\", DriveLayout->PartitionCount);",
          "807:   suprintf(\"Disk GUID: %s\", GuidToString(&DriveLayout->Gpt.DiskId));",
          "808:   suprintf(\"Max parts: %d, Start Offset: %\" PRIi64 \", Usable = %\" PRIi64 \" bytes\",",
          "814:    suprintf(\"Partition %d:\\r\\n  Type: %s\\r\\n  Name: '%s'\", i+1,",
          "816:    suprintf(\"  ID: %s\\r\\n  Size: %s (%\" PRIi64 \" bytes)\\r\\n  Start Sector: %\" PRIi64 \", Attributes: 0x%016\" PRIX64,",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "833:   break;",
          "834:  default:",
          "835:   SelectedDrive.PartitionType = PARTITION_STYLE_MBR;",
          "837:   break;",
          "838:  }",
          "839: #if defined(__GNUC__)",
          "",
          "[Removed Lines]",
          "836:   suprintf(\"Partition type: RAW\\n\");",
          "",
          "[Added Lines]",
          "836:   suprintf(\"Partition type: RAW\");",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "857:  hDrive = CreateFileA(logical_drive, GENERIC_READ|GENERIC_WRITE, FILE_SHARE_READ|FILE_SHARE_WRITE,",
          "858:   NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL);",
          "859:  if (hDrive == INVALID_HANDLE_VALUE) {",
          "861:   goto out;",
          "862:  }",
          "863:  r = FlushFileBuffers(hDrive);",
          "864:  if (r == FALSE)",
          "867: out:",
          "868:  safe_closehandle(hDrive);",
          "",
          "[Removed Lines]",
          "860:   uprintf(\"Failed to open %c: for flushing: %s\\n\", drive_letter, WindowsErrorString());",
          "865:   uprintf(\"Failed to flush %c: %s\\n\", drive_letter, WindowsErrorString());",
          "",
          "[Added Lines]",
          "860:   uprintf(\"Failed to open %c: for flushing: %s\", drive_letter, WindowsErrorString());",
          "865:   uprintf(\"Failed to flush %c: %s\", drive_letter, WindowsErrorString());",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "877:  DWORD size;",
          "879:  if (!DeviceIoControl(hDrive, FSCTL_DISMOUNT_VOLUME, NULL, 0, NULL, 0, &size, NULL)) {",
          "881:   return FALSE;",
          "882:  }",
          "883:  return TRUE;",
          "",
          "[Removed Lines]",
          "880:   uprintf(\"Could not unmount drive: %s\\n\", WindowsErrorString());",
          "",
          "[Added Lines]",
          "880:   uprintf(\"Could not unmount drive: %s\", WindowsErrorString());",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "900:  if ( (GetVolumePathNamesForVolumeNameA(drive_guid, mounted_letter, sizeof(mounted_letter), &size))",
          "901:    && (size > 1) && (mounted_letter[0] != drive_name[0]) ) {",
          "903:   if (!DeleteVolumeMountPointA(mounted_letter))",
          "904:    uprintf(\"Failed to unmount volume: %s\", WindowsErrorString());",
          "",
          "[Removed Lines]",
          "902:   uprintf(\"Volume is already mounted, but as %c: instead of %c: - Unmounting...\\n\", mounted_letter[0], drive_name[0]);",
          "",
          "[Added Lines]",
          "902:   uprintf(\"Volume is already mounted, but as %c: instead of %c: - Unmounting...\", mounted_letter[0], drive_name[0]);",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "913:   if (GetLastError() == ERROR_DIR_NOT_EMPTY) {",
          "914:    if (!GetVolumeNameForVolumeMountPointA(drive_name, mounted_guid, sizeof(mounted_guid))) {",
          "916:      drive_name, WindowsErrorString());",
          "917:     return FALSE;",
          "918:    }",
          "919:    if (safe_strcmp(drive_guid, mounted_guid) != 0) {",
          "921:      drive_name, drive_guid, mounted_guid);",
          "922:     return FALSE;",
          "923:    }",
          "925:   } else {",
          "926:    return FALSE;",
          "927:   }",
          "",
          "[Removed Lines]",
          "915:     uprintf(\"%s already mounted, but volume GUID could not be checked: %s\\n\",",
          "920:     uprintf(\"%s already mounted, but volume GUID doesn't match:\\r\\n  expected %s, got %s\\n\",",
          "924:    uprintf(\"%s was already mounted as %s\\n\", drive_guid, drive_name);",
          "",
          "[Added Lines]",
          "915:     uprintf(\"%s already mounted, but volume GUID could not be checked: %s\",",
          "920:     uprintf(\"%s already mounted, but volume GUID doesn't match:\\r\\n  expected %s, got %s\",",
          "924:    uprintf(\"%s was already mounted as %s\", drive_guid, drive_name);",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1179:    DriveLayoutEx.PartitionEntry[pn].Mbr.PartitionType = 0x0c; // FAT32 LBA",
          "1180:    break;",
          "1181:   default:",
          "1183:    return FALSE;",
          "1184:   }",
          "1185:  } else {",
          "",
          "[Removed Lines]",
          "1182:    uprintf(\"Unsupported file system\\n\");",
          "",
          "[Added Lines]",
          "1182:    uprintf(\"Unsupported file system\");",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1274:  size = sizeof(CreateDisk);",
          "1275:  r = DeviceIoControl(hDrive, IOCTL_DISK_CREATE_DISK, (BYTE*)&CreateDisk, size, NULL, 0, &size, NULL );",
          "1276:  if (!r) {",
          "1278:   return FALSE;",
          "1279:  }",
          "1281:  size = sizeof(DriveLayoutEx) - ((partition_style == PARTITION_STYLE_GPT)?((4-pn)*sizeof(PARTITION_INFORMATION_EX)):0);",
          "1282:  r = DeviceIoControl(hDrive, IOCTL_DISK_SET_DRIVE_LAYOUT_EX, (BYTE*)&DriveLayoutEx, size, NULL, 0, &size, NULL );",
          "1283:  if (!r) {",
          "1285:   return FALSE;",
          "1286:  }",
          "",
          "[Removed Lines]",
          "1277:   uprintf(\"Could not reset disk: %s\\n\", WindowsErrorString());",
          "1284:   uprintf(\"Could not set drive layout: %s\\n\", WindowsErrorString());",
          "",
          "[Added Lines]",
          "1277:   uprintf(\"Could not reset disk: %s\", WindowsErrorString());",
          "1284:   uprintf(\"Could not set drive layout: %s\", WindowsErrorString());",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1300:  r = DeviceIoControl(hDrive, IOCTL_DISK_UPDATE_PROPERTIES, NULL, 0, NULL, 0, &size, NULL );",
          "1301:  if (!r)",
          "1303:  return r;",
          "1304: }",
          "",
          "[Removed Lines]",
          "1302:   uprintf(\"Could not refresh drive layout: %s\\n\", WindowsErrorString());",
          "",
          "[Added Lines]",
          "1302:   uprintf(\"Could not refresh drive layout: %s\", WindowsErrorString());",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "1316:  r = DeviceIoControl(hDrive, IOCTL_DISK_CREATE_DISK,",
          "1317:    (BYTE*)&CreateDisk, size, NULL, 0, &size, NULL );",
          "1318:  if (!r) {",
          "1320:   safe_closehandle(hDrive);",
          "1321:   return FALSE;",
          "1322:  }",
          "1324:  r = DeviceIoControl(hDrive, IOCTL_DISK_UPDATE_PROPERTIES, NULL, 0, NULL, 0, &size, NULL );",
          "1325:  if (!r) {",
          "1327:   safe_closehandle(hDrive);",
          "1328:   return FALSE;",
          "1329:  }",
          "",
          "[Removed Lines]",
          "1319:   uprintf(\"Could not delete drive layout: %s\\n\", WindowsErrorString());",
          "1326:   uprintf(\"Could not refresh drive layout: %s\\n\", WindowsErrorString());",
          "",
          "[Added Lines]",
          "1319:   uprintf(\"Could not delete drive layout: %s\", WindowsErrorString());",
          "1326:   uprintf(\"Could not refresh drive layout: %s\", WindowsErrorString());",
          "",
          "---------------"
        ],
        "src/pki.c||src/pki.c": [
          "File: src/pki.c -> src/pki.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "157:   hm = GetModuleHandle(NULL);",
          "158:   if (hm == NULL) {",
          "159:    uprintf(\"PKI: Could not get current executable handle: %s\", WinPKIErrorString());",
          "161:   }",
          "162:   dwSize = GetModuleFileNameW(hm, szFileName, MAX_PATH);",
          "163:   if ((dwSize == 0) || ((dwSize == MAX_PATH) && (GetLastError() == ERROR_INSUFFICIENT_BUFFER))) {",
          "164:    uprintf(\"PKI: Could not get module filename: %s\", WinPKIErrorString());",
          "166:   }",
          "167:   mpath = wchar_to_utf8(szFileName);",
          "168:  } else {",
          "",
          "[Removed Lines]",
          "160:    return NULL;",
          "165:    return NULL;",
          "",
          "[Added Lines]",
          "160:    goto out;",
          "165:    goto out;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "310:  for (n = 0; ; n++) {",
          "312:    LocalFree(pNestedSignature);",
          "314:    CryptMsgClose(hMsg);",
          "315:   safe_free(pNestedSignerInfo);",
          "316:   if (n >= pSignerInfo->UnauthAttrs.cAttr)",
          "317:    break;",
          "",
          "[Removed Lines]",
          "311:   if (pNestedSignature != NULL)",
          "313:   if (hMsg != NULL)",
          "",
          "[Added Lines]",
          "311:   if (pNestedSignature != NULL) {",
          "313:    pNestedSignature = NULL;",
          "314:   }",
          "315:   if (hMsg != NULL) {",
          "317:    hMsg = NULL;",
          "318:   }",
          "",
          "---------------"
        ],
        "src/rufus.c||src/rufus.c": [
          "File: src/rufus.c -> src/rufus.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1089:   }",
          "1090:   if (!dont_display_image_name) {",
          "1091:    for (i = (int)safe_strlen(image_path); (i > 0) && (image_path[i] != '\\\\'); i--);",
          "1093:   }",
          "1095:   SendMessage(hMainDialog, WM_NEXTDLGCTL, (WPARAM)FALSE, 0);",
          "",
          "[Removed Lines]",
          "1092:    PrintStatusDebug(0, MSG_205, &image_path[i + 1]);",
          "",
          "[Added Lines]",
          "1092:    PrintStatus(0, MSG_205, &image_path[i + 1]);",
          "1093:    uprintf(\"Using image: %s (%s)\", &image_path[i + 1], SizeToHumanReadable(img_report.image_size, FALSE, FALSE));",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 242, 376",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 8, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Device\",IDS_DEVICE_TXT,9,6,200,8",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 2.17.1193\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 2.17.1194\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "368: VS_VERSION_INFO VERSIONINFO",
          "371:  FILEFLAGSMASK 0x3fL",
          "372: #ifdef _DEBUG",
          "373:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "369:  FILEVERSION 2,17,1193,0",
          "370:  PRODUCTVERSION 2,17,1193,0",
          "",
          "[Added Lines]",
          "369:  FILEVERSION 2,17,1194,0",
          "370:  PRODUCTVERSION 2,17,1194,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "384:         BEGIN",
          "385:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
          "386:             VALUE \"FileDescription\", \"Rufus\"",
          "388:             VALUE \"InternalName\", \"Rufus\"",
          "389:             VALUE \"LegalCopyright\", \"\ufffd 2011-2017 Pete Batard (GPL v3)\"",
          "390:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
          "391:             VALUE \"OriginalFilename\", \"rufus.exe\"",
          "392:             VALUE \"ProductName\", \"Rufus\"",
          "394:         END",
          "395:     END",
          "396:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "387:             VALUE \"FileVersion\", \"2.17.1193\"",
          "393:             VALUE \"ProductVersion\", \"2.17.1193\"",
          "",
          "[Added Lines]",
          "387:             VALUE \"FileVersion\", \"2.17.1194\"",
          "393:             VALUE \"ProductVersion\", \"2.17.1194\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fca4e2d59bc11f47f8d1c78889fdea8c59deb74f",
      "candidate_info": {
        "commit_hash": "fca4e2d59bc11f47f8d1c78889fdea8c59deb74f",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/fca4e2d59bc11f47f8d1c78889fdea8c59deb74f",
        "files": [
          "configure",
          "configure.ac",
          "res/appstore/AppxManifest.xml",
          "res/appstore/packme.cmd",
          "src/rufus.c",
          "src/rufus.rc"
        ],
        "message": "[ui] fix Windows To Go option unconditional display when switching languages\n\n* Also update version to rufus-next",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "res/appstore/packme.cmd||res/appstore/packme.cmd",
          "src/rufus.c||src/rufus.c",
          "src/rufus.rc||src/rufus.rc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: AM_INIT_AUTOMAKE([-Wno-portability foreign no-dist no-dependencies])",
          "3: AC_CONFIG_SRCDIR([src/rufus.c])",
          "4: AC_CONFIG_MACRO_DIR([m4])",
          "",
          "[Removed Lines]",
          "1: AC_INIT([rufus], [3.0], [https://github.com/pbatard/rufus/issues], [rufus], [https://rufus.akeo.ie])",
          "",
          "[Added Lines]",
          "1: AC_INIT([rufus], [3.1], [https://github.com/pbatard/rufus/issues], [rufus], [https://rufus.akeo.ie])",
          "",
          "---------------"
        ],
        "res/appstore/packme.cmd||res/appstore/packme.cmd": [
          "File: res/appstore/packme.cmd -> res/appstore/packme.cmd",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: @echo off",
          "4: rem Make sure you don't have anything you don't want included in the package, as anything residing in the",
          "5: rem current directory will be included, including any previous .appx, which makes for nice recursion...",
          "",
          "[Removed Lines]",
          "2: set VERSION=3.0",
          "",
          "[Added Lines]",
          "2: set VERSION=3.1",
          "",
          "---------------"
        ],
        "src/rufus.c||src/rufus.c": [
          "File: src/rufus.c -> src/rufus.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "644:  IGNORE_RETVAL(ComboBox_SetItemData(hCtrl, ComboBox_AddStringU(hCtrl, lmprintf(MSG_118)), TRUE));",
          "645:  IGNORE_RETVAL(ComboBox_SetCurSel(hCtrl, windows_to_go_selection));",
          "648:   ((bt == BT_IMAGE) && (HAS_WINTOGO(img_report)) && (!display_togo_option))) {",
          "649:   ToggleImageOption();",
          "650:  }",
          "",
          "[Removed Lines]",
          "647:  if ((((bt != BT_IMAGE) || (image_path == NULL)) && (display_togo_option)) ||",
          "",
          "[Added Lines]",
          "647:  if ((((bt != BT_IMAGE) || (image_path == NULL) || (!HAS_WINTOGO(img_report))) && (display_togo_option)) ||",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 232, 326",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 9, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Drive Properties\",IDS_DRIVE_PROPERTIES_TXT,8,6,53,12,NOT WS_GROUP",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 3.0.1308\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 3.1.1309\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "391: VS_VERSION_INFO VERSIONINFO",
          "394:  FILEFLAGSMASK 0x3fL",
          "395: #ifdef _DEBUG",
          "396:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "392:  FILEVERSION 3,0,1308,0",
          "393:  PRODUCTVERSION 3,0,1308,0",
          "",
          "[Added Lines]",
          "392:  FILEVERSION 3,1,1309,0",
          "393:  PRODUCTVERSION 3,1,1309,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "407:         BEGIN",
          "408:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
          "409:             VALUE \"FileDescription\", \"Rufus\"",
          "411:             VALUE \"InternalName\", \"Rufus\"",
          "412:             VALUE \"LegalCopyright\", \"\ufffd 2011-2018 Pete Batard (GPL v3)\"",
          "413:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
          "414:             VALUE \"OriginalFilename\", \"rufus.exe\"",
          "415:             VALUE \"ProductName\", \"Rufus\"",
          "417:         END",
          "418:     END",
          "419:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "410:             VALUE \"FileVersion\", \"3.0.1308\"",
          "416:             VALUE \"ProductVersion\", \"3.0.1308\"",
          "",
          "[Added Lines]",
          "410:             VALUE \"FileVersion\", \"3.1.1309\"",
          "416:             VALUE \"ProductVersion\", \"3.1.1309\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c84ff4d121aec42967174270812ff851c3f2b8f9",
      "candidate_info": {
        "commit_hash": "c84ff4d121aec42967174270812ff851c3f2b8f9",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/c84ff4d121aec42967174270812ff851c3f2b8f9",
        "files": [
          "res/localization/rufus.loc",
          "src/rufus.rc"
        ],
        "message": "[loc] update Indonesian translation to latest",
        "before_after_code_files": [
          "res/localization/rufus.loc||res/localization/rufus.loc",
          "src/rufus.rc||src/rufus.rc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "res/localization/rufus.loc||res/localization/rufus.loc",
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "res/localization/rufus.loc||res/localization/rufus.loc",
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "res/localization/rufus.loc||res/localization/rufus.loc": [
          "File: res/localization/rufus.loc -> res/localization/rufus.loc",
          "--- Hunk 1 ---",
          "[Context before]",
          "7127: ################################################################################",
          "7128: l \"id-ID\" \"Indonesian (Bahasa Indonesia)\" 0x0421",
          "7130: b \"en-US\"",
          "7132: # Main dialog",
          "7133: g IDD_DIALOG",
          "7134: t IDS_DEVICE_TXT \"Perangkat\"",
          "7140: t IDS_FORMAT_OPTIONS_TXT \"Opsi Format\"",
          "7143: t IDC_QUICK_FORMAT \"Format cepat\"",
          "7145: t IDCANCEL \"Tutup\"",
          "7146: t IDC_START \"Mulai\"",
          "7156: # About dialog",
          "7157: g IDD_ABOUTBOX",
          "",
          "[Removed Lines]",
          "7129: v 1.0.22",
          "7135: t IDS_BOOT_SELECTION_TXT \"Tipe Boot\"",
          "7136: t IDS_PARTITION_TYPE_TXT \"Skema partisi dan tipe sistem target\"",
          "7137: t IDS_FILE_SYSTEM_TXT \"Sistem berkas\"",
          "7138: t IDS_CLUSTER_SIZE_TXT \"Ukuran klaster\"",
          "7139: t IDS_LABEL_TXT \"Label volume baru\"",
          "7141: # Note: The button (IDC_ADVANCED) that appears next to \"Format Options\" is repositioned automatically.",
          "7142: t IDC_BAD_BLOCKS \"Periksa perangkat untuk blok buruk\"",
          "7144: t IDC_EXTENDED_LABEL \"Buat label tambahan dan berkas ikon\"",
          "7147: t IDC_LIST_USB_HDD \"Daftar Perangkat USB\"",
          "7148: # Note: It is acceptable to drop the parenthesis () below if you are running out of space",
          "7149: # as there is a tooltip (MSG_169) providing these details.",
          "7150: t IDC_OLD_BIOS_FIXES \"Tambah perbaikan untuk BIOS lama (partisi ekstra, penyesuaian, dll.)\"",
          "7151: # 'MBR': See http://en.wikipedia.org/wiki/Master_boot_record",
          "7152: # Rufus can install it's own custom MBR (the Rufus MBR), which also allows users",
          "7153: # to specify a custom disk ID for the BIOS. Note: the tooltip for this control is MSG_167.",
          "7154: t IDC_RUFUS_MBR \"Gunakan MBR Rufus dengan ID BIOS\"",
          "",
          "[Added Lines]",
          "7129: v 1.0.23",
          "7134: t IDS_DRIVE_PROPERTIES_TXT \"Properti Drive\"",
          "7136: t IDS_BOOT_SELECTION_TXT \"Pilihan Boot\"",
          "7137: t IDC_SELECT \"Pilih\"",
          "7138: t IDS_IMAGE_OPTION_TXT \"Opsi Image\"",
          "7139: t IDS_PARTITION_TYPE_TXT \"Skema partisi\"",
          "7140: t IDS_TARGET_SYSTEM_TXT \"Sistem target\"",
          "7141: t IDC_LIST_USB_HDD \"Daftar USB Hard Drives\"",
          "7142: t IDC_OLD_BIOS_FIXES \"Tambah perbaikan untuk BIOS lama (partisi ekstra, penyesuaian, dll.)\"",
          "7143: t IDC_RUFUS_MBR \"Gunakan MBR Rufus dengan ID BIOS\"",
          "7145: t IDS_LABEL_TXT \"Label volume\"",
          "7146: t IDS_FILE_SYSTEM_TXT \"Sistem berkas\"",
          "7147: t IDS_CLUSTER_SIZE_TXT \"Ukuran klatser\"",
          "7149: t IDC_EXTENDED_LABEL \"Buat label dan berkas ikon tambahan\"",
          "7150: t IDC_BAD_BLOCKS \"Periksa blok buruk pada perangkat\"",
          "7151: t IDS_STATUS_TXT \"Status\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7234: t MSG_029 \"Standar\"",
          "7235: # The following gets appended to the file system, cluster size, etc.",
          "7236: t MSG_030 \"%s (Standar)\"",
          "7240: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "7243: t MSG_036 \"ISO Image\"",
          "7244: t MSG_037 \"Aplikasi\"",
          "7245: t MSG_038 \"Batal\"",
          "",
          "[Removed Lines]",
          "7237: #t MSG_031 \"Skema partisi %s untuk BIOS atau %s\"",
          "7238: #t MSG_032 \"Skema partisi %s untuk BIOS\"",
          "7239: #t MSG_033 \"Skema partisi %s untuk UEFI\"",
          "7241: t MSG_034 \"%d Pass\"",
          "7242: t MSG_035 \"%d Passes\"",
          "",
          "[Added Lines]",
          "7236: t MSG_031 \"BIOS (atau UEFI-CSM)\"",
          "7237: t MSG_032 \"UEFI (non CSM)\"",
          "7238: t MSG_033 \"BIOS atau UEFI\"",
          "7240: t MSG_034 \"%d kali uji\"",
          "7241: t MSG_035 \"%d kali uji\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7381:  \"- Pilih 'Batal' untuk membatalkan operasi\\n\\n\"",
          "7382:  \"Catatan: Berkas akan diunduh di direktori aplikasi saat ini dan akan digunakan kembali jika diminta. \"",
          "7383:  \"Jika tidak ada yang cocok yang ditemukan secara online, versi default akan digunakan.\"",
          "7384: # Tooltips",
          "7392: t MSG_153 \"Tes pola: 0x%02X\"",
          "7393: t MSG_154 \"Tes pola: 0x%02X, 0x%02X\"",
          "7394: t MSG_155 \"Tes pola: 0x%02X, 0x%02X, 0x%02X\"",
          "",
          "[Removed Lines]",
          "7385: # Partition Scheme and Target Type",
          "7386: t MSG_150 \"Umumnya merupakan pilihan teraman. Namun, jika Anda memiliki komputer UEFI dan ingin menginstal \"",
          "7387:  \"sebuah Sistem Operasi di modus EFI murni, Anda harus memilih salah satu opsi lain\"",
          "7388: t MSG_151 \"Gunakan ini jika Anda ingin menginstal Sistem Operasi di modus EFI murni, namun perlu mengakses \"",
          "7389:  \"isi USB dari Windows XP\"",
          "7390: t MSG_152 \"Pilihan yang paling disukai untuk menginstal Sistem Operasi di modus EFI murni, ketika akses USB \"",
          "7391:  \"tidak diperlukan dari Windows XP\"",
          "",
          "[Added Lines]",
          "7383: t MSG_117 \"Instalasi Windows standar\"",
          "7384: t MSG_119 \"properti drive lanjutan\"",
          "7385: t MSG_120 \"opsi format lanjutan\"",
          "7386: t MSG_121 \"Tampilkan %s\"",
          "7387: t MSG_122 \"Sembunyikan %s\"",
          "7389: t MSG_150 \"Tipe komputer yang akan menggunakan drive bootable ini. Anda harus menentukan apakah target komputer \"",
          "7390:  \"bertipe BIOS atau UEFI sebelum Anda memulai pembuatan drive ini. Jika salah memilih, drive akan gagal diboot.\"",
          "7391: # Note: You shouldn't translate 'Legacy Mode' below, as this is an option that usually appears in English in the UEFI settings.",
          "7392: t MSG_151 \"'UEFI-CSM' artinya perangkat tersebut hanya akan boot dalam mode emulasi BIOS (juga dikenal dengan 'Legacy Mode') di bawah UEFI, dan tidak dalam mode UEFI asli.\"",
          "7393: t MSG_152 \"'non CSM' artinya perangkat tersebut hanya akan boot dalam UEFI asli, dan tidak dalam mode emulasi BIOS (juga dikenal dengan 'Legacy Mode').\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "7399: t MSG_160 \"Tombol untuk opsi lanjutan\"",
          "7400: t MSG_161 \"Periksa blok buruk pada perangkat menggunakan tes pola\"",
          "7401: t MSG_162 \"Hapus centang kotak ini untuk menggunakan metode format \\\"lambat\\\"\"",
          "7402: t MSG_164 \"Metode yang akan digunakan untuk membuat perangkat bootable\"",
          "7403: t MSG_165 \"Klik untuk memilih sebuah image...\"",
          "7404: t MSG_166 \"Centang kotak ini untuk menampilkan label internasional \"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7404: t MSG_163 \"Metode yang akan digunakan untuk membuat partisi\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "7414: # The following will appear in the about dialog",
          "7415: t MSG_174 \"Rufus - Utilitas Pemformatan USB yang Handal\"",
          "7416: t MSG_175 \"Versi %d.%d (Build %d)\"",
          "7419: t MSG_178 \"Hak Cipta Tambahan:\"",
          "7420: t MSG_179 \"Ketentuan Pembaruan:\"",
          "7421: t MSG_180 \"Jika Anda memilih untuk mengizinkan program ini memeriksa pembaruan aplikasi, \"",
          "",
          "[Removed Lines]",
          "7417: t MSG_176 \"Terjemahan Bahasa Indonesia: Abe Akatsuki, Arif Budiman\"",
          "7418: t MSG_177 \"Laporkan bug atau permintaan perbaikan pada:\"",
          "",
          "[Added Lines]",
          "7420: t MSG_176 \"Terjemahan Bahasa Indonesia: \\\\line\"",
          "7421:  \"\u2022 Abe Akatsuki\\\\line \"",
          "7422:  \"\u2022 Arif Budiman <mailto:arifpedia@gmail.com>\"",
          "7423: t MSG_177 \"Laporkan bug atau permintaan perbaikan di:\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "7498: # Bad blocks status. eg: \"Bad Blocks: Write pass 1/2 - 12.34% (0/0/1 errors)\"",
          "7499: # See MSG_191/192 for \"Write pass\"/\"Read pass\" translation",
          "7500: t MSG_235 \"Blok Buruk: %s %d/%d - %0.2f%% (%d/%d/%d errors)\"",
          "7502: t MSG_237 \"Blok Buruk: Mencoba dengan pola 0x%02X\"",
          "7503: # eg. \"Partitioning (MBR)...\"",
          "7504: t MSG_238 \"Mempartisi (%s)...\"",
          "",
          "[Removed Lines]",
          "7501: t MSG_236 \"Blok Buruk: Mencoba denga pola acak\"",
          "",
          "[Added Lines]",
          "7506: t MSG_236 \"Blok Buruk: Mencoba dengan pola acak\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "7544:  \"Silakan pilih mode mana yang ingin digunakan untuk menulis image ini:\"",
          "7545: t MSG_276 \"Tulis dalam mode %s (Disarankan)\"",
          "7546: t MSG_277 \"Tulis dalam mode %s\"",
          "7547: t MSG_279 \"Non bootable\"",
          "7550: t MSG_282 \"Penguncian perangkat USB khusus\"",
          "7551: t MSG_283 \"Tanda tangan digital tidak valid\"",
          "7552: t MSG_284 \"Berkas exe yang diunduh memiliki tanda tangan digital yang salah.\"",
          "",
          "[Removed Lines]",
          "7548: t MSG_280 \"Pemilihan image\"",
          "7549: t MSG_281 \"(Silakan pilih sebuah image)\"",
          "",
          "[Added Lines]",
          "7552: t MSG_278 \"Memeriksa proses yang konflik...\"",
          "7554: t MSG_280 \"Disk atau ISO image\"",
          "7555: t MSG_281 \"%s (Silakan Pilih)\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "7568: t MSG_298 \"Berkas ISO yang Anda pilih tidak sesuai dengan ukuran yang dideklarasikan: %s data hilang!\\n\\n\"",
          "7569:  \"Jika Anda mendapatkan berkas ini dari Internet, Anda sebaiknya mengunduh salinan yang baru dan pastikan ceksum MD5 atau SHA \"",
          "7570:  \"cocok dengan yang asli.\\n\\nPerhatikan bahwa Anda dapat menghitung MD5 atau SHA dalam Rufus dengan mengklik tombol (\u2713).\"",
          "7573: ################################################################################",
          "7574: l \"it-IT\" \"Italian (Italiano)\" 0x0410, 0x0810",
          "",
          "[Removed Lines]",
          "7571: t MSG_117 \"Instalasi Windows standar\"",
          "",
          "[Added Lines]",
          "7577: t MSG_299 \"Kesalahan memvalidasi stempel waktu\"",
          "7578: t MSG_300 \"Rufus tidak dapat memvalidasi bahwa stempel waktu pembaruan yang diunduh lebih baru daripada yang sedang dijalankan saat ini. \"",
          "7579:  \"Untuk mencegah kemungkinan skenario serangan, proses pembaruan telah dibatalkan dan unduhan akan dihapus. \"",
          "7580:  \"Silakan periksa log untuk lebih jelasnya.\"",
          "7581: t MSG_301 \"Tampilkan pengaturan aplikasi\"",
          "7582: t MSG_302 \"Tampilkan informasi tentang aplikasi ini\"",
          "7583: t MSG_303 \"Tampilkan log\"",
          "7584: t MSG_304 \"Buat disk image dari perangkat yang dipilih\"",
          "7585: t MSG_305 \"Gunakan opsi ini jika Anda ingin menggunakan perangkat ini untuk menginstal Windows pada disk lain, \"",
          "7586:  \"atau jika Anda ingin menjalankan Windows secara langsung dari drive ini (Windows To Go).\"",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 232, 326",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 9, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Drive Properties\",IDS_DRIVE_PROPERTIES_TXT,8,6,53,12,NOT WS_GROUP",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 3.0.1279\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 3.0.1280\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "391: VS_VERSION_INFO VERSIONINFO",
          "394:  FILEFLAGSMASK 0x3fL",
          "395: #ifdef _DEBUG",
          "396:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "392:  FILEVERSION 3,0,1279,0",
          "393:  PRODUCTVERSION 3,0,1279,0",
          "",
          "[Added Lines]",
          "392:  FILEVERSION 3,0,1280,0",
          "393:  PRODUCTVERSION 3,0,1280,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "407:         BEGIN",
          "408:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
          "409:             VALUE \"FileDescription\", \"Rufus\"",
          "411:             VALUE \"InternalName\", \"Rufus\"",
          "412:             VALUE \"LegalCopyright\", \"\ufffd 2011-2018 Pete Batard (GPL v3)\"",
          "413:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
          "414:             VALUE \"OriginalFilename\", \"rufus.exe\"",
          "415:             VALUE \"ProductName\", \"Rufus\"",
          "417:         END",
          "418:     END",
          "419:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "410:             VALUE \"FileVersion\", \"3.0.1279\"",
          "416:             VALUE \"ProductVersion\", \"3.0.1279\"",
          "",
          "[Added Lines]",
          "410:             VALUE \"FileVersion\", \"3.0.1280\"",
          "416:             VALUE \"ProductVersion\", \"3.0.1280\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "08873689884ee11554dae5c9b1e21354265e775b",
      "candidate_info": {
        "commit_hash": "08873689884ee11554dae5c9b1e21354265e775b",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/08873689884ee11554dae5c9b1e21354265e775b",
        "files": [
          "res/localization/rufus.loc",
          "src/rufus.rc"
        ],
        "message": "[loc] update Slovenian translation to latest",
        "before_after_code_files": [
          "res/localization/rufus.loc||res/localization/rufus.loc",
          "src/rufus.rc||src/rufus.rc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "res/localization/rufus.loc||res/localization/rufus.loc",
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "res/localization/rufus.loc||res/localization/rufus.loc",
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "res/localization/rufus.loc||res/localization/rufus.loc": [
          "File: res/localization/rufus.loc -> res/localization/rufus.loc",
          "--- Hunk 1 ---",
          "[Context before]",
          "15046: ################################################################################",
          "15047: l \"sl-SI\" \"Slovenian (Sloven\u0161\u010dina)\" 0x0424",
          "15049: b \"en-US\"",
          "15051: # Main dialog",
          "",
          "[Removed Lines]",
          "15048: v 1.0.21",
          "",
          "[Added Lines]",
          "15048: v 1.0.22",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15491: t MSG_292 \"Izberite, katero verzijo operacijskega sistema Windows \u017eelite namestiti:\"",
          "15492: t MSG_293 \"Operacijski sistem ni podprt\"",
          "15493: t MSG_294 \"Rufus ve\u010d ne podpira tega operacijskega sistema.\"",
          "15495: ################################################################################",
          "15496: l \"es-ES\" \"Spanish (Espa\u00f1ol)\" 0x040a, 0x080a, 0x0c0a, 0x100a, 0x140a, 0x180a, 0x1c0a, 0x200a, 0x240a, 0x280a, 0x2c0a, 0x300a, 0x340a, 0x380a, 0x3c0a, 0x400a, 0x440a, 0x480a, 0x4c0a, 0x500a, 0x540a, 0x580a",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15494: t MSG_295 \"Opozorilo: neuradna verzija\"",
          "15495: t MSG_296 \"Te verzije Rufusa ni izdelal njegov uradni razvijalec.\\n\\nAli ste prepri\u010dani, da jo \u017eelite uporabljati?\"",
          "15496: t MSG_297 \"Odrezana datoteka ISO\"",
          "15497: t MSG_298 \"Datoteka ISO, ki ste jo izbrali, ni pri\u010dakovane velikosti: %s njenih podatkov manjka.\\n\\n\"",
          "15498:  \"\u010ce ste jo prenesli z interneta, jo prenesite \u0161e enkrat in preverite, ali se vrednosti MD5 in SHA \"",
          "15499:  \"ujemata z uradnima.\\n\\nV Rufusu ju lahko izra\u010dunate z gumbom '#'.\"",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 242, 376",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 8, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Device\",IDS_DEVICE_TXT,9,6,200,8",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 2.16.1163\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 2.16.1164\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "368: VS_VERSION_INFO VERSIONINFO",
          "371:  FILEFLAGSMASK 0x3fL",
          "372: #ifdef _DEBUG",
          "373:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "369:  FILEVERSION 2,16,1163,0",
          "370:  PRODUCTVERSION 2,16,1163,0",
          "",
          "[Added Lines]",
          "369:  FILEVERSION 2,16,1164,0",
          "370:  PRODUCTVERSION 2,16,1164,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "384:         BEGIN",
          "385:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
          "386:             VALUE \"FileDescription\", \"Rufus\"",
          "388:             VALUE \"InternalName\", \"Rufus\"",
          "389:             VALUE \"LegalCopyright\", \"\ufffd 2011-2017 Pete Batard (GPL v3)\"",
          "390:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
          "391:             VALUE \"OriginalFilename\", \"rufus.exe\"",
          "392:             VALUE \"ProductName\", \"Rufus\"",
          "394:         END",
          "395:     END",
          "396:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "387:             VALUE \"FileVersion\", \"2.16.1163\"",
          "393:             VALUE \"ProductVersion\", \"2.16.1163\"",
          "",
          "[Added Lines]",
          "387:             VALUE \"FileVersion\", \"2.16.1164\"",
          "393:             VALUE \"ProductVersion\", \"2.16.1164\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2d262df8f3b8c5917f0a81928b33c65197374aed",
      "candidate_info": {
        "commit_hash": "2d262df8f3b8c5917f0a81928b33c65197374aed",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/2d262df8f3b8c5917f0a81928b33c65197374aed",
        "files": [
          "configure",
          "configure.ac",
          "res/appstore/AppxManifest.xml",
          "res/appstore/packme.cmd",
          "res/localization/ChangeLog.txt",
          "res/localization/rufus.loc",
          "src/badblocks.c",
          "src/badblocks.h",
          "src/format.c",
          "src/rufus.c",
          "src/rufus.h",
          "src/rufus.rc"
        ],
        "message": "[bb] bad blocks check improvement\n\n* Use a default block size of 128 KB (can speed up read operations)\n* Reorganise patterns to suit different types of NAND cells (SLC, MLC and TLC)\n* Only run fake drive test on first pass\n* Also update rufus-next to 3.2",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "res/appstore/packme.cmd||res/appstore/packme.cmd",
          "res/localization/rufus.loc||res/localization/rufus.loc",
          "src/badblocks.c||src/badblocks.c",
          "src/badblocks.h||src/badblocks.h",
          "src/format.c||src/format.c",
          "src/rufus.c||src/rufus.c",
          "src/rufus.h||src/rufus.h",
          "src/rufus.rc||src/rufus.rc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "res/localization/rufus.loc||res/localization/rufus.loc",
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "res/localization/rufus.loc||res/localization/rufus.loc",
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: AM_INIT_AUTOMAKE([-Wno-portability foreign no-dist no-dependencies])",
          "3: AC_CONFIG_SRCDIR([src/rufus.c])",
          "4: AC_CONFIG_MACRO_DIR([m4])",
          "",
          "[Removed Lines]",
          "1: AC_INIT([rufus], [3.1], [https://github.com/pbatard/rufus/issues], [rufus], [https://rufus.akeo.ie])",
          "",
          "[Added Lines]",
          "1: AC_INIT([rufus], [3.2], [https://github.com/pbatard/rufus/issues], [rufus], [https://rufus.akeo.ie])",
          "",
          "---------------"
        ],
        "res/appstore/packme.cmd||res/appstore/packme.cmd": [
          "File: res/appstore/packme.cmd -> res/appstore/packme.cmd",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: @echo off",
          "4: rem Make sure you don't have anything you don't want included in the package, as anything residing in the",
          "5: rem current directory will be included, including any previous .appx, which makes for nice recursion...",
          "",
          "[Removed Lines]",
          "2: set VERSION=3.1",
          "",
          "[Added Lines]",
          "2: set VERSION=3.2",
          "",
          "---------------"
        ],
        "res/localization/rufus.loc||res/localization/rufus.loc": [
          "File: res/localization/rufus.loc -> res/localization/rufus.loc",
          "--- Hunk 1 ---",
          "[Context before]",
          "208: t MSG_033 \"BIOS or UEFI\"",
          "209: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "210: t MSG_034 \"%d pass\"",
          "212: t MSG_036 \"ISO Image\"",
          "213: t MSG_037 \"Application\"",
          "214: t MSG_038 \"Abort\"",
          "",
          "[Removed Lines]",
          "211: t MSG_035 \"%d passes\"",
          "",
          "[Added Lines]",
          "211: t MSG_035 \"%d passes %s\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "277:  \"'%s' exists there, it will be reused automatically.\"",
          "278: t MSG_085 \"Downloading '%s'\"",
          "279: t MSG_086 \"No image selected\"",
          "280: t MSG_088 \"Image is too big\"",
          "281: t MSG_089 \"The image is too big for the selected target.\"",
          "282: t MSG_090 \"Unsupported ISO\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "280: t MSG_087 \"for %s devices\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "683: t MSG_033 \"BIOS \u0623\u0648 UEFI\"",
          "684: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "685: t MSG_034 \"%d \u062a\u062c\u0627\u0648\u0632\"",
          "687: t MSG_036 \"ISO \u0635\u0648\u0631\u0629\"",
          "688: t MSG_037 \"\u062a\u0637\u0628\u064a\u0642\"",
          "689: t MSG_038 \"\u062a\u0648\u0642\u0641\"",
          "",
          "[Removed Lines]",
          "686: t MSG_035 \"%d \u062a\u062c\u0627\u0648\u0632\u0627\u062a\"",
          "",
          "[Added Lines]",
          "687: t MSG_035 \"%d \u062a\u062c\u0627\u0648\u0632\u0627\u062a %s\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1135: t MSG_033 \"BIOS v\u0259 ya UEFI\"",
          "1136: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "1137: t MSG_034 \"%d Ke\u00e7id\"",
          "1139: t MSG_036 \"ISO \u018fksi\"",
          "1140: t MSG_037 \"Proqram\"",
          "1141: t MSG_038 \"\u0130mtina et\"",
          "",
          "[Removed Lines]",
          "1138: t MSG_035 \"%d Ke\u00e7id\"",
          "",
          "[Added Lines]",
          "1139: t MSG_035 \"%d Ke\u00e7id %s\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1582: #t MSG_033 \"%s \u0434\u044f\u043b\u043e\u0432\u0430 \u0441\u0445\u0435\u043c\u0430 \u0437\u0430 UEFI\"",
          "1583: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "1584: t MSG_034 \"%d \u041f\u0440\u043e\u0431\u0435\u0433\"",
          "1586: t MSG_036 \"ISO \u043e\u0431\u0440\u0430\u0437\"",
          "1587: t MSG_037 \"\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435\"",
          "1588: t MSG_038 \"\u041f\u0440\u0435\u043a\u0440\u0430\u0442\u0438\"",
          "",
          "[Removed Lines]",
          "1585: t MSG_035 \"%d \u041f\u0440\u043e\u0431\u0435\u0433\u0430\"",
          "",
          "[Added Lines]",
          "1586: t MSG_035 \"%d \u041f\u0440\u043e\u0431\u0435\u0433\u0430 %s\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2027: t MSG_033 \"BIOS \u6216 UEFI\"",
          "2028: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "2029: t MSG_034 \"%d \u904d\"",
          "2031: t MSG_036 \"ISO \u955c\u50cf\"",
          "2032: t MSG_037 \"\u7a0b\u5e8f\"",
          "2033: t MSG_038 \"\u4e2d\u6b62\"",
          "",
          "[Removed Lines]",
          "2030: t MSG_035 \"%d \u904d\"",
          "",
          "[Added Lines]",
          "2031: t MSG_035 \"%d \u904d %s\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2470: t MSG_033 \"BIOS \u6216 UEFI\"",
          "2471: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "2472: t MSG_034 \"%d \u56de\"",
          "2474: t MSG_036 \"ISO \u6620\u50cf\"",
          "2475: t MSG_037 \"\u7a0b\u5f0f\"",
          "2476: t MSG_038 \"\u7d42\u6b62\"",
          "",
          "[Removed Lines]",
          "2473: t MSG_035 \"%d \u56de\"",
          "",
          "[Added Lines]",
          "2474: t MSG_035 \"%d \u56de %s\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2884: t MSG_033 \"BIOS ili UEFI\"",
          "2885: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "2886: t MSG_034 \"%d prolaz\"",
          "2888: t MSG_036 \"ISO slika\"",
          "2889: t MSG_037 \"Aplikacija\"",
          "2890: t MSG_038 \"Prekini\"",
          "",
          "[Removed Lines]",
          "2887: t MSG_035 \"%d prolaza\"",
          "",
          "[Added Lines]",
          "2888: t MSG_035 \"%d prolaza %s\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "3339: t MSG_033 \"BIOS nebo UEFI\"",
          "3340: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "3341: t MSG_034 \"%d pokus\"",
          "3343: t MSG_036 \"Obraz ISO\"",
          "3344: t MSG_037 \"Aplikace\"",
          "3345: t MSG_038 \"P\u0159eru\u0161it\"",
          "",
          "[Removed Lines]",
          "3342: t MSG_035 \"%d pokusy\"",
          "",
          "[Added Lines]",
          "3343: t MSG_035 \"%d pokusy %s\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "3791: t MSG_033 \"BIOS eller UEFI\"",
          "3792: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "3793: t MSG_034 \"%d genneml\u00f8b\"",
          "3795: t MSG_036 \"ISO-image\"",
          "3796: t MSG_037 \"Applikation\"",
          "3797: t MSG_038 \"Annuller\"",
          "",
          "[Removed Lines]",
          "3794: t MSG_035 \"%d genneml\u00f8b\"",
          "",
          "[Added Lines]",
          "3795: t MSG_035 \"%d genneml\u00f8b %s\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "4227: t MSG_033 \"BIOS of UEFI\"",
          "4228: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "4229: t MSG_034 \"%d Ronde\"",
          "4231: t MSG_036 \"ISO image\"",
          "4232: t MSG_037 \"Applicatie\"",
          "4233: t MSG_038 \"Afbreken\"",
          "",
          "[Removed Lines]",
          "4230: t MSG_035 \"%d Rondes\"",
          "",
          "[Added Lines]",
          "4231: t MSG_035 \"%d Rondes %s\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "4665: t MSG_033 \"BIOS tai UEFI\"",
          "4666: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "4667: t MSG_034 \"%d testi\"",
          "4669: t MSG_036 \"ISO-kuva\"",
          "4670: t MSG_037 \"Sovellus\"",
          "4671: t MSG_038 \"Keskeyt\u00e4\"",
          "",
          "[Removed Lines]",
          "4668: t MSG_035 \"%d testi\u00e4\"",
          "",
          "[Added Lines]",
          "4669: t MSG_035 \"%d testi\u00e4 %s\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "5103: t MSG_032 \"UEFI (non CSM)\"",
          "5104: t MSG_033 \"BIOS ou UEFI\"",
          "5105: t MSG_034 \"%d passe\"",
          "5107: t MSG_036 \"Image ISO\"",
          "5108: t MSG_037 \"Application\"",
          "5109: t MSG_038 \"Annuler\"",
          "",
          "[Removed Lines]",
          "5106: t MSG_035 \"%d passes\"",
          "",
          "[Added Lines]",
          "5107: t MSG_035 \"%d passes %s\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "5526: t MSG_033 \"BIOS oder UEFI\"",
          "5527: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "5528: t MSG_034 \"%d Durchgang\"",
          "5530: t MSG_036 \"ISO-Abbild\"",
          "5531: t MSG_037 \"Programm\"",
          "5532: t MSG_038 \"Abbruch\"",
          "",
          "[Removed Lines]",
          "5529: t MSG_035 \"%d Durchg\u00e4nge\"",
          "",
          "[Added Lines]",
          "5530: t MSG_035 \"%d Durchg\u00e4nge %s\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "5954: t MSG_033 \"BIOS \u03ae UEFI\"",
          "5955: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "5956: t MSG_034 \"%d \u03a0\u03ad\u03c1\u03b1\u03c3\u03bc\u03b1\"",
          "5958: t MSG_036 \"\u0395\u03af\u03b4\u03c9\u03bb\u03bf ISO\"",
          "5959: t MSG_037 \"\u0395\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ae\"",
          "5960: t MSG_038 \"\u03a4\u03b5\u03c1\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2\"",
          "",
          "[Removed Lines]",
          "5957: t MSG_035 \"%d \u03a0\u03b5\u03c1\u03ac\u03c3\u03bc\u03b1\u03c4\u03b1\"",
          "",
          "[Added Lines]",
          "5958: t MSG_035 \"%d \u03a0\u03b5\u03c1\u03ac\u03c3\u03bc\u03b1\u03c4\u03b1 %s\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "6410: t MSG_033 \"BIOS \u05d0\u05d5 UEFI\"",
          "6411: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "6412: t MSG_034 \"\u05de\u05e2\u05d1\u05e8 \u05d0\u05d7\u05d3\"",
          "6414: t MSG_036 \"\u05e7\u05d5\u05d1\u05e5 ISO\"",
          "6415: t MSG_037 \"\u05d9\u05d9\u05e9\u05d5\u05dd\"",
          "6416: t MSG_038 \"\u05d1\u05d9\u05d8\u05d5\u05dc\"",
          "",
          "[Removed Lines]",
          "6413: t MSG_035 \"%d \u05de\u05e2\u05d1\u05e8\u05d9\u05dd\"",
          "",
          "[Added Lines]",
          "6414: t MSG_035 \"%d \u05de\u05e2\u05d1\u05e8\u05d9\u05dd %s\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "6887: t MSG_033 \"BIOS vagy UEFI\"",
          "6888: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "6889: t MSG_034 \"%d vizsg\u00e1lva\"",
          "6891: t MSG_036 \"ISO k\u00e9p\"",
          "6892: t MSG_037 \"Alkalmaz\u00e1s\"",
          "6893: t MSG_038 \"Megszak\u00edt\"",
          "",
          "[Removed Lines]",
          "6890: t MSG_035 \"%d vizsg\u00e1lva\"",
          "",
          "[Added Lines]",
          "6891: t MSG_035 \"%d vizsg\u00e1lva %s\"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "7339: t MSG_033 \"BIOS atau UEFI\"",
          "7340: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "7341: t MSG_034 \"%d kali uji\"",
          "7343: t MSG_036 \"ISO Image\"",
          "7344: t MSG_037 \"Aplikasi\"",
          "7345: t MSG_038 \"Batal\"",
          "",
          "[Removed Lines]",
          "7342: t MSG_035 \"%d kali uji\"",
          "",
          "[Added Lines]",
          "7343: t MSG_035 \"%d kali uji %s\"",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "7787: t MSG_032 \"UEFI (non CSM)\"",
          "7788: t MSG_033 \"BIOS o UEFI\"",
          "7789: t MSG_034 \"%d test\"",
          "7791: t MSG_036 \"Immagine ISO\"",
          "7792: t MSG_037 \"Applicazione\"",
          "7793: t MSG_038 \"Annulla\"",
          "",
          "[Removed Lines]",
          "7790: t MSG_035 \"%d test\"",
          "",
          "[Added Lines]",
          "7791: t MSG_035 \"%d test %s\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "8227: t MSG_033 \"BIOS\u307e\u305f\u306fUEFI\"",
          "8228: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "8229: t MSG_034 \"%d \u30d1\u30b9\"",
          "8231: t MSG_036 \"ISO\u30a4\u30e1\u30fc\u30b8\"",
          "8232: t MSG_037 \"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\"",
          "8233: t MSG_038 \"\u4e2d\u6b62\"",
          "",
          "[Removed Lines]",
          "8230: t MSG_035 \"%d \u30d1\u30b9\"",
          "",
          "[Added Lines]",
          "8231: t MSG_035 \"%d \u30d1\u30b9 %s\"",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "8696: t MSG_033 \"BIOS \ub610\ub294 UEFI\"",
          "8697: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "8698: t MSG_034 \"\ud55c\ubc88\ub9cc \uac80\uc0ac\"",
          "8700: t MSG_036 \"ISO \uc774\ubbf8\uc9c0\"",
          "8701: t MSG_037 \"\ud504\ub85c\uadf8\ub7a8\"",
          "8702: t MSG_038 \"\ucde8\uc18c\"",
          "",
          "[Removed Lines]",
          "8699: t MSG_035 \"%d\ud68c \uac80\uc0ac\"",
          "",
          "[Added Lines]",
          "8700: t MSG_035 \"%d\ud68c \uac80\uc0ac %s\"",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "9144: t MSG_033 \"BIOS vai UEFI\"",
          "9145: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "9146: t MSG_034 \"%d m\u0113\u0123.\"",
          "9148: t MSG_036 \"ISO virtu\u0101lais att\u0113ls\"",
          "9149: t MSG_037 \"Programma\"",
          "9150: t MSG_038 \"P\u0101rtraukt\"",
          "",
          "[Removed Lines]",
          "9147: t MSG_035 \"%d m\u0113\u0123.\"",
          "",
          "[Added Lines]",
          "9148: t MSG_035 \"%d m\u0113\u0123. %s\"",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "9594: t MSG_033 \"BIOS arba UEFI\"",
          "9595: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "9596: t MSG_034 \"%d bandymas\"",
          "9598: t MSG_036 \"ISO atvaizdas\"",
          "9599: t MSG_037 \"Programa\"",
          "9600: t MSG_038 \"Nutraukti\"",
          "",
          "[Removed Lines]",
          "9597: t MSG_035 \"%d bandymai\"",
          "",
          "[Added Lines]",
          "9598: t MSG_035 \"%d bandymai %s\"",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "10050: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "10051: t MSG_034 \"%d kali lulus\"",
          "10053: t MSG_036 \"Imej ISO\"",
          "10054: t MSG_037 \"Aplikasi\"",
          "10055: t MSG_038 \"Batal\"",
          "",
          "[Removed Lines]",
          "10052: t MSG_035 \"%d kali lulus\"",
          "",
          "[Added Lines]",
          "10053: t MSG_035 \"%d kali lulus %s\"",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "10478: t MSG_033 \"BIOS eller UEFI\"",
          "10479: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "10480: t MSG_034 \"%d Passering\"",
          "10482: t MSG_036 \"ISO-bilde\"",
          "10483: t MSG_037 \"Applikasjon\"",
          "10484: t MSG_038 \"Avbryt\"",
          "",
          "[Removed Lines]",
          "10481: t MSG_035 \"%d Passeringer\"",
          "",
          "[Added Lines]",
          "10482: t MSG_035 \"%d Passeringer %s\"",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "10957: t MSG_033 \"BIOS \u06cc\u0627 UEFI\"",
          "10958: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "10959: t MSG_034 \"%d \u06af\u0630\u0631\u0647\"",
          "10961: t MSG_036 \"\u0627\u06cc\u0645\u06cc\u062c ISO\"",
          "10962: t MSG_037 \"\u0628\u0631\u0646\u0627\u0645\u0647\"",
          "10963: t MSG_038 \"\u0644\u063a\u0648\"",
          "",
          "[Removed Lines]",
          "10960: t MSG_035 \"%d \u06af\u0630\u0631\u0647\"",
          "",
          "[Added Lines]",
          "10961: t MSG_035 \"%d \u06af\u0630\u0631\u0647 %s\"",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "11425: t MSG_033 \"BIOS lub UEFI\"",
          "11426: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "11427: t MSG_034 \"%d Przebieg\"",
          "11429: t MSG_036 \"Obraz ISO\"",
          "11430: t MSG_037 \"Aplikacja\"",
          "11431: t MSG_038 \"Przerwij\"",
          "",
          "[Removed Lines]",
          "11428: t MSG_035 \"%d Przebiegi\"",
          "",
          "[Added Lines]",
          "11429: t MSG_035 \"%d Przebiegi %s\"",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "11889: t MSG_033 \"BIOS ou UEFI\"",
          "11890: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "11891: t MSG_034 \"%d passo\"",
          "11893: t MSG_036 \"Imagem ISO\"",
          "11894: t MSG_037 \"Aplicativo\"",
          "11895: t MSG_038 \"Abortar\"",
          "",
          "[Removed Lines]",
          "11892: t MSG_035 \"%d passos\"",
          "",
          "[Added Lines]",
          "11893: t MSG_035 \"%d passos %s\"",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "12362: t MSG_033 \"BIOS ou UEFI\"",
          "12363: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "12364: t MSG_034 \"%d passo\"",
          "12366: t MSG_036 \"Imagem ISO\"",
          "12367: t MSG_037 \"Aplica\u00e7\u00e3o\"",
          "12368: t MSG_038 \"Abortar\"",
          "",
          "[Removed Lines]",
          "12365: t MSG_035 \"%d passos\"",
          "",
          "[Added Lines]",
          "12366: t MSG_035 \"%d passos %s\"",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "12806: t MSG_032 \"UEFI (non CSM)\"",
          "12807: t MSG_033 \"BIOS sau UEFI\"",
          "12808: t MSG_034 \"%d pas\"",
          "12810: t MSG_036 \"Imagine ISO\"",
          "12811: t MSG_037 \"Cerere\"",
          "12812: t MSG_038 \"Anuleaz\u0103\"",
          "",
          "[Removed Lines]",
          "12809: t MSG_035 \"%d pa\u0219i\"",
          "",
          "[Added Lines]",
          "12810: t MSG_035 \"%d pa\u0219i %s\"",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "13231: t MSG_033 \"BIOS \u0438\u043b\u0438 UEFI\"",
          "13232: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "13233: t MSG_034 \"%d \u043f\u0440\u043e\u0445\u043e\u0434\"",
          "13235: t MSG_036 \"ISO-\u043e\u0431\u0440\u0430\u0437\"",
          "13236: t MSG_037 \"\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435\"",
          "13237: t MSG_038 \"\u041e\u0442\u043c\u0435\u043d\u0438\u0442\u044c\"",
          "",
          "[Removed Lines]",
          "13234: t MSG_035 \"%d \u043f\u0440\u043e\u0445\u043e\u0434\u0430\"",
          "",
          "[Added Lines]",
          "13235: t MSG_035 \"%d \u043f\u0440\u043e\u0445\u043e\u0434\u0430 %s\"",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "13673: #t MSG_033 \"%s particijska \u0161ema za UEFI\"",
          "13674: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "13675: t MSG_034 \"%d sekvenca\"",
          "13677: t MSG_036 \"ISO datoteke\"",
          "13678: t MSG_037 \"Aplikacija\"",
          "13679: t MSG_038 \"Prekini\"",
          "",
          "[Removed Lines]",
          "13676: t MSG_035 \"%d sekvence\"",
          "",
          "[Added Lines]",
          "13677: t MSG_035 \"%d sekvence %s\"",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "14120: t MSG_033 \"BIOS alebo UEFI\"",
          "14121: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "14122: t MSG_034 \"%d pokus\"",
          "14124: t MSG_036 \"Obraz ISO\"",
          "14125: t MSG_037 \"Aplik\u00e1cia\"",
          "14126: t MSG_038 \"Ukon\u010di\u0165\"",
          "",
          "[Removed Lines]",
          "14123: t MSG_035 \"%d pokusy\"",
          "",
          "[Added Lines]",
          "14124: t MSG_035 \"%d pokusy %s\"",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "14574: t MSG_033 \"BIOS ali UEFI\"",
          "14575: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "14576: t MSG_034 \"%d prehod\"",
          "14578: t MSG_036 \"sliko ISO\"",
          "14579: t MSG_037 \"Aplikacija\"",
          "14580: t MSG_038 \"Prekini\"",
          "",
          "[Removed Lines]",
          "14577: t MSG_035 \"%d prehoda/-i\"",
          "",
          "[Added Lines]",
          "14578: t MSG_035 \"%d prehoda/-i %s\"",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "15008: t MSG_033 \"BIOS o UEFI\"",
          "15009: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "15010: t MSG_034 \"%d paso\"",
          "15012: t MSG_036 \"Imagen ISO\"",
          "15013: t MSG_037 \"Aplicaci\u00f3n\"",
          "15014: t MSG_038 \"Abortar\"",
          "",
          "[Removed Lines]",
          "15011: t MSG_035 \"%d pasos\"",
          "",
          "[Added Lines]",
          "15012: t MSG_035 \"%d pasos %s\"",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "15465: t MSG_033 \"BIOS eller UEFI\"",
          "15466: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "15467: t MSG_034 \"%d g\u00e5ng\"",
          "15469: t MSG_036 \"ISO-avbild\"",
          "15470: t MSG_037 \"Program\"",
          "15471: t MSG_038 \"Avbryt\"",
          "",
          "[Removed Lines]",
          "15468: t MSG_035 \"%d g\u00e5nger\"",
          "",
          "[Added Lines]",
          "15469: t MSG_035 \"%d g\u00e5nger %s\"",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "15924: t MSG_033 \"BIOS \u0e2b\u0e23\u0e37\u0e2d UEFI\"",
          "15925: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "15926: t MSG_034 \"%d \u0e23\u0e2d\u0e1a\"",
          "15928: t MSG_036 \"\u0e2d\u0e34\u0e21\u0e40\u0e21\u0e08 ISO\"",
          "15929: t MSG_037 \"\u0e41\u0e2d\u0e1e\u0e1e\u0e25\u0e34\u0e40\u0e04\u0e0a\u0e31\u0e48\u0e19\"",
          "15930: t MSG_038 \"\u0e22\u0e01\u0e40\u0e25\u0e34\u0e01\"",
          "",
          "[Removed Lines]",
          "15927: t MSG_035 \"%d \u0e23\u0e2d\u0e1a\"",
          "",
          "[Added Lines]",
          "15928: t MSG_035 \"%d \u0e23\u0e2d\u0e1a %s\"",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "16391: t MSG_033 \"BIOS ya da UEFI\"",
          "16392: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "16393: t MSG_034 \"%d Ge\u00e7i\u015f\"",
          "16395: t MSG_036 \"ISO Yans\u0131mas\u0131\"",
          "16396: t MSG_037 \"Uygulama\"",
          "16397: t MSG_038 \"Vazge\u00e7\"",
          "",
          "[Removed Lines]",
          "16394: t MSG_035 \"%d Ge\u00e7i\u015f\"",
          "",
          "[Added Lines]",
          "16395: t MSG_035 \"%d Ge\u00e7i\u015f %s\"",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "16845: t MSG_033 \"BIOS \u0447\u0438 UEFI\"",
          "16846: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "16847: t MSG_034 \"%d \u043f\u0440\u043e\u0445\u0456\u0434\"",
          "16849: t MSG_036 \"ISO-\u043e\u0431\u0440\u0430\u0437\"",
          "16850: t MSG_037 \"\u0414\u043e\u0434\u0430\u0442\u043e\u043a\"",
          "16851: t MSG_038 \"\u0412\u0456\u0434\u043c\u0456\u043d\u0438\u0442\u0438\"",
          "",
          "[Removed Lines]",
          "16848: t MSG_035 \"%d \u043f\u0440\u043e\u0445\u043e\u0434\u0438\"",
          "",
          "[Added Lines]",
          "16849: t MSG_035 \"%d \u043f\u0440\u043e\u0445\u043e\u0434\u0438 %s\"",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "17281: #t MSG_033 \"S\u1eafp x\u1ebfp ph\u00e2n v\u00f9ng %s cho UEFI\"",
          "17282: # Number of bad block check passes (singular for 1 pass, plural for 2 or more passes)",
          "17283: t MSG_034 \"Qua %d l\u1ea7n\"",
          "17285: t MSG_036 \"\u1ea2nh ISO\"",
          "17286: t MSG_037 \"\u1ee8ng d\u1ee5ng\"",
          "17287: t MSG_038 \"Hu\u1ef7 b\u1ecf\"",
          "",
          "[Removed Lines]",
          "17284: t MSG_035 \"Qua %d l\u1ea7n\"",
          "",
          "[Added Lines]",
          "17285: t MSG_035 \"Qua %d l\u1ea7n %s\"",
          "",
          "---------------"
        ],
        "src/badblocks.c||src/badblocks.c": [
          "File: src/badblocks.c -> src/badblocks.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "350:  unsigned char bpattern[sizeof(pattern)], *ptr;",
          "352:  if (pattern == (unsigned int) ~0) {",
          "353:   srand((unsigned int)GetTickCount64());",
          "354:   for (ptr = buffer; ptr < buffer + n; ptr++) {",
          "356:    (*ptr) = rand() % (1 << (8 * sizeof(char)));",
          "357:   }",
          "359:  } else {",
          "360:   bpattern[0] = 0;",
          "361:   for (i = 0; i < sizeof(bpattern); i++) {",
          "362:    if (pattern == 0)",
          "",
          "[Removed Lines]",
          "358:   PrintInfo(3500, MSG_236);",
          "",
          "[Added Lines]",
          "353:   PrintInfo(3500, MSG_236);",
          "360:   PrintInfo(3500, MSG_237, pattern);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "372:    else",
          "373:     i--;",
          "374:   }",
          "376:   cur_pattern++;",
          "377:  }",
          "378: }",
          "",
          "[Removed Lines]",
          "375:   PrintInfo(3500, MSG_237, bpattern[i]);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "422: }",
          "424: static unsigned int test_rw(HANDLE hDrive, blk_t last_block, size_t block_size, blk_t first_block,",
          "426: {",
          "427:  unsigned char *buffer = NULL, *read_buffer;",
          "429:  int i, pat_idx;",
          "430:  unsigned int bb_count = 0;",
          "431:  blk_t got, tryout, recover_block = ~0, *blk_id;",
          "432:  size_t id_offset;",
          "435:   uprintf(\"%sInvalid number of passes\\n\", bb_prefix);",
          "436:   cancel_ops = -1;",
          "437:   return 0;",
          "",
          "[Removed Lines]",
          "425:  size_t blocks_at_once, int nb_passes)",
          "428:  const unsigned int pattern[] = BADBLOCK_PATTERNS;",
          "434:  if ((nb_passes < 1) || (nb_passes > 4)) {",
          "",
          "[Added Lines]",
          "425:  size_t blocks_at_once, int pattern_type, int nb_passes)",
          "427:  const unsigned int pattern[BADLOCKS_PATTERN_TYPES][BADBLOCK_PATTERN_COUNT] =",
          "428:   { BADBLOCK_PATTERN_SLC, BADCLOCK_PATTERN_MLC, BADBLOCK_PATTERN_TLC };",
          "435:  if ((pattern_type < 0) || (pattern_type >= BADLOCKS_PATTERN_TYPES)) {",
          "436:   uprintf(\"%sInvalid pattern type\\n\", bb_prefix);",
          "437:   cancel_ops = -1;",
          "438:   return 0;",
          "439:  }",
          "440:  if ((nb_passes < 1) || (nb_passes > BADBLOCK_PATTERN_COUNT)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "446:   return 0;",
          "447:  }",
          "451:  nr_pattern = nb_passes;",
          "452:  cur_pattern = 0;",
          "454:  for (pat_idx = 0; pat_idx < nb_passes; pat_idx++) {",
          "461:   num_blocks = last_block - 1;",
          "462:   currently_testing = first_block;",
          "463:   if (s_flag | v_flag)",
          "465:   cur_op = OP_WRITE;",
          "466:   tryout = blocks_at_once;",
          "467:   while (currently_testing < last_block) {",
          "469:    if (max_bb && bb_count >= max_bb) {",
          "470:     if (s_flag || v_flag) {",
          "471:      uprintf(abort_msg);",
          "",
          "[Removed Lines]",
          "449:  uprintf(\"%sChecking from block %lu to %lu\\n\", bb_prefix,",
          "450:   (unsigned long) first_block, (unsigned long) last_block - 1);",
          "455:   srand((unsigned int)GetTickCount64());",
          "456:   if (cancel_ops) goto out;",
          "458:   id_offset = rand() * (block_size-sizeof(blk_t)) / RAND_MAX;",
          "459:   pattern_fill(buffer, pattern[pat_idx], blocks_at_once * block_size);",
          "460:   uprintf(\"%sUsing offset %d for fake device check\\n\", bb_prefix, id_offset);",
          "464:    uprintf(\"%sWriting test pattern 0x%02X\\n\", bb_prefix, pattern[pat_idx]);",
          "468:    if (cancel_ops) goto out;",
          "",
          "[Added Lines]",
          "455:  uprintf(\"%sChecking from block %lu to %lu (1 block = %s)\\n\", bb_prefix,",
          "456:   (unsigned long) first_block, (unsigned long) last_block - 1,",
          "457:   SizeToHumanReadable(BADBLOCK_BLOCK_SIZE, FALSE, FALSE));",
          "462:   if (cancel_ops)",
          "463:    goto out;",
          "464:   if (detect_fakes && (pat_idx == 0)) {",
          "465:    srand((unsigned int)GetTickCount64());",
          "466:    id_offset = rand() * (block_size - sizeof(blk_t)) / RAND_MAX;",
          "467:    uprintf(\"%sUsing offset %d for fake device check\\n\", bb_prefix, id_offset);",
          "468:   }",
          "470:   pattern_fill(buffer, pattern[pattern_type][pat_idx], blocks_at_once * block_size);",
          "474:    uprintf(\"%sWriting test pattern 0x%02X\\n\", bb_prefix, pattern[pattern_type][pat_idx]);",
          "478:    if (cancel_ops)",
          "479:     goto out;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "477:    }",
          "478:    if (currently_testing + tryout > last_block)",
          "479:     tryout = last_block - currently_testing;",
          "483:     for (i=0; i<(int)blocks_at_once; i++) {",
          "",
          "[Removed Lines]",
          "480:    if (detect_fakes) {",
          "",
          "[Added Lines]",
          "491:    if (detect_fakes && (pat_idx == 0)) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "525:    }",
          "526:    if (currently_testing + tryout > last_block)",
          "527:     tryout = last_block - currently_testing;",
          "529:     for (i=0; i<(int)blocks_at_once; i++) {",
          "530:      blk_id = (blk_t*)(intptr_t)(buffer + id_offset+ i*block_size);",
          "",
          "[Removed Lines]",
          "528:    if (detect_fakes) {",
          "",
          "[Added Lines]",
          "539:    if (detect_fakes && (pat_idx == 0)) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "563:  return bb_count;",
          "564: }",
          "568: {",
          "569:  errcode_t error_code;",
          "572:  if (report == NULL) return FALSE;",
          "573:  num_read_errors = 0;",
          "",
          "[Removed Lines]",
          "566: BOOL BadBlocks(HANDLE hPhysicalDrive, ULONGLONG disk_size, size_t block_size,",
          "567:  int nb_passes, badblocks_report *report, FILE* fd)",
          "570:  blk_t first_block = 0, last_block = disk_size/block_size;",
          "",
          "[Added Lines]",
          "577: BOOL BadBlocks(HANDLE hPhysicalDrive, ULONGLONG disk_size, int nb_passes,",
          "578:  int flash_type, badblocks_report *report, FILE* fd)",
          "581:  blk_t last_block = disk_size / BADBLOCK_BLOCK_SIZE;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "589:  cancel_ops = 0;",
          "591:  SetTimer(hMainDialog, TID_BADBLOCKS_UPDATE, 1000, alarm_intr);",
          "593:  KillTimer(hMainDialog, TID_BADBLOCKS_UPDATE);",
          "594:  free(bb_list->list);",
          "595:  free(bb_list);",
          "",
          "[Removed Lines]",
          "592:  report->bb_count = test_rw(hPhysicalDrive, last_block, block_size, first_block, BB_BLOCKS_AT_ONCE, nb_passes);",
          "",
          "[Added Lines]",
          "603:  report->bb_count = test_rw(hPhysicalDrive, last_block, BADBLOCK_BLOCK_SIZE, 0, BB_BLOCKS_AT_ONCE, flash_type, nb_passes);",
          "",
          "---------------"
        ],
        "src/badblocks.h||src/badblocks.h": [
          "File: src/badblocks.h -> src/badblocks.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "58: BOOL BadBlocks(HANDLE hPhysicalDrive, ULONGLONG disk_size, size_t block_size,",
          "59:  int test_type, badblocks_report *report, FILE* fd);",
          "",
          "[Added Lines]",
          "58: BOOL BadBlocks(HANDLE hPhysicalDrive, ULONGLONG disk_size, int nb_passes,",
          "59:  int flash_type, badblocks_report *report, FILE* fd);",
          "",
          "---------------"
        ],
        "src/format.c||src/format.c": [
          "File: src/format.c -> src/format.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1784:  if (IsChecked(IDC_BAD_BLOCKS)) {",
          "1785:   do {",
          "1788:    userdir = getenvU(\"USERPROFILE\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1786:    int sel = ComboBox_GetCurSel(hNBPasses);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1801:     fflush(log_fd);",
          "1802:    }",
          "1806:     uprintf(\"Bad blocks: Check failed.\\n\");",
          "1807:     if (!IS_ERROR(FormatStatus))",
          "1808:      FormatStatus = ERROR_SEVERITY_ERROR|FAC(FACILITY_STORAGE)|APPERR(ERROR_BADBLOCKS_FAILURE);",
          "",
          "[Removed Lines]",
          "1804:    if (!BadBlocks(hPhysicalDrive, SelectedDrive.DiskSize, SelectedDrive.SectorSize,",
          "1805:     ComboBox_GetCurSel(hNBPasses)+1, &report, log_fd)) {",
          "",
          "[Added Lines]",
          "1805:    if (!BadBlocks(hPhysicalDrive, SelectedDrive.DiskSize, (sel >= 2) ? 4 : sel +1,",
          "1806:     (sel < 2) ? 0 : sel - 2, &report, log_fd)) {",
          "",
          "---------------"
        ],
        "src/rufus.c||src/rufus.c": [
          "File: src/rufus.c -> src/rufus.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "52: static const char* cmdline_hogger = \"rufus.com\";",
          "53: static const char* FileSystemLabel[FS_MAX] = { \"FAT\", \"FAT32\", \"NTFS\", \"UDF\", \"exFAT\", \"ReFS\" };",
          "54: static const char* ep_reg = \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\Explorer\";",
          "55: static const char* vs_reg = \"Software\\\\Microsoft\\\\VisualStudio\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "54: static const char* flash_type[BADLOCKS_PATTERN_TYPES] = { \"SLC\", \"MLC\", \"TLC\" };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1165: static void SetPassesTooltip(void)",
          "1166: {",
          "1170: }",
          "1172: static void ResizeDialogs(int shift)",
          "",
          "[Removed Lines]",
          "1167:  const unsigned char pattern[] = BADBLOCK_PATTERNS;",
          "1168:  CreateTooltip(hNBPasses, lmprintf(MSG_153 + ComboBox_GetCurSel(hNBPasses),",
          "1169:   pattern[0], pattern[1], pattern[2], pattern[3]), -1);",
          "",
          "[Added Lines]",
          "1168:  const unsigned int pattern[BADLOCKS_PATTERN_TYPES][BADBLOCK_PATTERN_COUNT] =",
          "1169:   { BADBLOCK_PATTERN_SLC, BADCLOCK_PATTERN_MLC, BADBLOCK_PATTERN_TLC };",
          "1170:  int sel = ComboBox_GetCurSel(hNBPasses);",
          "1171:  int type = (sel < 2) ? 0 : sel - 2;",
          "1172:  CreateTooltip(hNBPasses, lmprintf(MSG_153 + ((sel >= 2) ? 3 : sel),",
          "1173:   pattern[type][0], pattern[type][1], pattern[type][2], pattern[type][3]), -1);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2196:   hw = max(hw, GetTextSize(GetDlgItem(hDlg, IDC_TARGET_SYSTEM), lmprintf(msg_id)).cx);",
          "",
          "[Removed Lines]",
          "2199:  for (i = 1; i <= 4; i++)",
          "2200:   hw = max(hw, GetTextSize(GetDlgItem(hDlg, IDC_TARGET_SYSTEM),",
          "2201:    lmprintf((i == 1) ? MSG_034 : MSG_035, i)).cx);",
          "",
          "[Added Lines]",
          "2203:  for (i = 1; i <= 5; i++) {",
          "2204:   char* msg = (i == 1) ? lmprintf(MSG_034, 1) : lmprintf(MSG_035, (i == 2) ? 2 : 4, (i == 2) ? \"\" : lmprintf(MSG_087, flash_type[i - 3]));",
          "2205:   hw = max(hw, GetTextSize(GetDlgItem(hDlg, IDC_TARGET_SYSTEM), msg).cx);",
          "2206:  }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2528:  DWORD len;",
          "2529:  HDC hDC;",
          "2530:  int i, lfHeight;",
          "2532:  static char* resource[2] = { MAKEINTRESOURCEA(IDR_SL_LDLINUX_V4_SYS), MAKEINTRESOURCEA(IDR_SL_LDLINUX_V6_SYS) };",
          "2534: #ifdef RUFUS_TEST",
          "",
          "[Removed Lines]",
          "2531:  char tmp[128], *token, *buf, *ext;",
          "",
          "[Added Lines]",
          "2536:  char tmp[128], *token, *buf, *ext, *msg;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2634:  SendMessage(hProgress, PBM_SETRANGE, 0, (MAX_PROGRESS<<16) & 0xFFFF0000);",
          "2639:  }",
          "2640:  IGNORE_RETVAL(ComboBox_SetCurSel(hNBPasses, 0));",
          "2641:  SetPassesTooltip();",
          "",
          "[Removed Lines]",
          "2637:  for (i=0; i<4; i++) {",
          "2638:   IGNORE_RETVAL(ComboBox_AddStringU(hNBPasses, lmprintf((i==0)?MSG_034:MSG_035, i+1)));",
          "",
          "[Added Lines]",
          "2642:  for (i = 1; i <= 5; i++) {",
          "2643:   msg = (i == 1) ? lmprintf(MSG_034, 1) : lmprintf(MSG_035, (i == 2) ? 2 : 4, (i == 2) ? \"\" : lmprintf(MSG_087, flash_type[i - 3]));",
          "2644:   IGNORE_RETVAL(ComboBox_AddStringU(hNBPasses, msg));",
          "",
          "---------------"
        ],
        "src/rufus.h||src/rufus.h": [
          "File: src/rufus.h -> src/rufus.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "67: #define MARQUEE_TIMER_REFRESH       10   // Time between progress bar marquee refreshes, in ms",
          "68: #define FS_DEFAULT                  FS_FAT32",
          "69: #define SINGLE_CLUSTERSIZE_DEFAULT  0x00000100",
          "71: #define LARGE_FAT32_SIZE            (32*1073741824LL) // Size at which we need to use fat32format",
          "72: #define UDF_FORMAT_SPEED            3.1f  // Speed estimate at which we expect UDF drives to be formatted (GB/s)",
          "73: #define UDF_FORMAT_WARN             20   // Duration (in seconds) above which we warn about long UDF formatting times",
          "",
          "[Removed Lines]",
          "70: #define BADBLOCK_PATTERNS           {0xaa, 0x55, 0xff, 0x00}",
          "",
          "[Added Lines]",
          "70: #define BADLOCKS_PATTERN_TYPES      3",
          "71: #define BADBLOCK_PATTERN_COUNT      4",
          "72: #define BADBLOCK_PATTERN_SLC        {0x00, 0xff, 0x55, 0xaa}",
          "73: #define BADCLOCK_PATTERN_MLC        {0x00, 0xff, 0x33, 0xcc}",
          "74: #define BADBLOCK_PATTERN_TLC        {0x00, 0xff, 0x1c71c7, 0xe38e38}",
          "75: #define BADBLOCK_BLOCK_SIZE         (128 * 1024)",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 232, 326",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 9, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Drive Properties\",IDS_DRIVE_PROPERTIES_TXT,8,6,53,12,NOT WS_GROUP",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 3.1.1323\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 3.2.1324\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "391: VS_VERSION_INFO VERSIONINFO",
          "394:  FILEFLAGSMASK 0x3fL",
          "395: #ifdef _DEBUG",
          "396:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "392:  FILEVERSION 3,1,1323,0",
          "393:  PRODUCTVERSION 3,1,1323,0",
          "",
          "[Added Lines]",
          "392:  FILEVERSION 3,2,1324,0",
          "393:  PRODUCTVERSION 3,2,1324,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "407:         BEGIN",
          "408:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
          "409:             VALUE \"FileDescription\", \"Rufus\"",
          "411:             VALUE \"InternalName\", \"Rufus\"",
          "412:             VALUE \"LegalCopyright\", \"\ufffd 2011-2018 Pete Batard (GPL v3)\"",
          "413:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
          "414:             VALUE \"OriginalFilename\", \"rufus.exe\"",
          "415:             VALUE \"ProductName\", \"Rufus\"",
          "417:         END",
          "418:     END",
          "419:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "410:             VALUE \"FileVersion\", \"3.1.1323\"",
          "416:             VALUE \"ProductVersion\", \"3.1.1323\"",
          "",
          "[Added Lines]",
          "410:             VALUE \"FileVersion\", \"3.2.1324\"",
          "416:             VALUE \"ProductVersion\", \"3.2.1324\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}