{
  "cve_id": "CVE-2021-40540",
  "cve_desc": "ulfius_uri_logger in Ulfius HTTP Framework before 2.7.4 omits con_info initialization and a con_info->request NULL check for certain malformed HTTP requests.",
  "repo": "babelouest/ulfius",
  "patch_hash": "c83f564c184a27145e07c274b305cabe943bbfaa",
  "patch_info": {
    "commit_hash": "c83f564c184a27145e07c274b305cabe943bbfaa",
    "repo": "babelouest/ulfius",
    "commit_url": "https://github.com/babelouest/ulfius/commit/c83f564c184a27145e07c274b305cabe943bbfaa",
    "files": [
      "src/ulfius.c"
    ],
    "message": "Fix bug when malformed HTTP requests are sent, thanks Jeremy Brown!",
    "before_after_code_files": [
      "src/ulfius.c||src/ulfius.c"
    ]
  },
  "patch_diff": {
    "src/ulfius.c||src/ulfius.c": [
      "File: src/ulfius.c -> src/ulfius.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "207:   UNUSED(cls);",
      "209:   if (con_info != NULL) {",
      "210:     con_info->callback_first_iteration = 1;",
      "211:     con_info->u_instance = NULL;",
      "212:     u_map_init(&con_info->map_url_initial);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "210:     memset(con_info, 0, sizeof(struct connection_info_struct));",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "217:       return NULL;",
      "218:     }",
      "221:       ulfius_clean_request_full(con_info->request);",
      "222:       o_free(con_info);",
      "223:       return NULL;",
      "",
      "[Removed Lines]",
      "220:     if (NULL == con_info->request || ulfius_init_request(con_info->request) != U_OK) {",
      "",
      "[Added Lines]",
      "221:     if (ulfius_init_request(con_info->request) != U_OK) {",
      "222:       y_log_message(Y_LOG_LEVEL_ERROR, \"Ulfius - Error initializing con_info->request\");",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "22933dc3201b01c5eed2d2b6da39088eb46ad990",
      "candidate_info": {
        "commit_hash": "22933dc3201b01c5eed2d2b6da39088eb46ad990",
        "repo": "babelouest/ulfius",
        "commit_url": "https://github.com/babelouest/ulfius/commit/22933dc3201b01c5eed2d2b6da39088eb46ad990",
        "files": [
          "include/u_private.h",
          "include/ulfius-cfg.h.in",
          "include/ulfius.h",
          "src/Makefile",
          "src/u_map.c",
          "src/u_request.c",
          "src/u_response.c",
          "src/u_send_request.c",
          "src/u_websocket.c",
          "src/ulfius.c"
        ],
        "message": "Remove trailing spaces",
        "before_after_code_files": [
          "include/u_private.h||include/u_private.h",
          "include/ulfius-cfg.h.in||include/ulfius-cfg.h.in",
          "include/ulfius.h||include/ulfius.h",
          "src/u_map.c||src/u_map.c",
          "src/u_request.c||src/u_request.c",
          "src/u_response.c||src/u_response.c",
          "src/u_send_request.c||src/u_send_request.c",
          "src/u_websocket.c||src/u_websocket.c",
          "src/ulfius.c||src/ulfius.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/ulfius.c||src/ulfius.c"
          ],
          "candidate": [
            "src/ulfius.c||src/ulfius.c"
          ]
        }
      },
      "candidate_diff": {
        "include/u_private.h||include/u_private.h": [
          "File: include/u_private.h -> include/u_private.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "190: int ulfius_instance_remove_websocket_active(struct _u_instance * instance, struct _websocket * websocket);",
          "",
          "[Added Lines]",
          "190: int ulfius_instance_remove_websocket_active(struct _u_instance * instance, struct _websocket * websocket);",
          "",
          "---------------"
        ],
        "include/ulfius-cfg.h.in||include/ulfius-cfg.h.in": [
          "File: include/ulfius-cfg.h.in -> include/ulfius-cfg.h.in"
        ],
        "include/ulfius.h||include/ulfius.h": [
          "File: include/ulfius.h -> include/ulfius.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "334:                                                        void * cls);",
          "",
          "[Removed Lines]",
          "327:                                                        const char * key,",
          "328:                                                        const char * filename,",
          "329:                                                        const char * content_type,",
          "330:                                                        const char * transfer_encoding,",
          "331:                                                        const char * data,",
          "332:                                                        uint64_t off,",
          "333:                                                        size_t size,",
          "",
          "[Added Lines]",
          "327:                                                        const char * key,",
          "328:                                                        const char * filename,",
          "329:                                                        const char * content_type,",
          "330:                                                        const char * transfer_encoding,",
          "331:                                                        const char * data,",
          "332:                                                        uint64_t off,",
          "333:                                                        size_t size,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "526: int ulfius_set_upload_file_callback_function(struct _u_instance * u_instance,",
          "535:                                                                            void * cls),",
          "536:                                              void * cls);",
          "",
          "[Removed Lines]",
          "527:                                              int (* file_upload_callback) (const struct _u_request * request,",
          "528:                                                                            const char * key,",
          "529:                                                                            const char * filename,",
          "530:                                                                            const char * content_type,",
          "531:                                                                            const char * transfer_encoding,",
          "532:                                                                            const char * data,",
          "533:                                                                            uint64_t off,",
          "534:                                                                            size_t size,",
          "",
          "[Added Lines]",
          "527:                                              int (* file_upload_callback) (const struct _u_request * request,",
          "528:                                                                            const char * key,",
          "529:                                                                            const char * filename,",
          "530:                                                                            const char * content_type,",
          "531:                                                                            const char * transfer_encoding,",
          "532:                                                                            const char * data,",
          "533:                                                                            uint64_t off,",
          "534:                                                                            size_t size,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "749:                             const char * mail_body);",
          "",
          "[Removed Lines]",
          "738: int ulfius_send_smtp_email(const char * host,",
          "739:                             const int port,",
          "740:                             const int use_tls,",
          "741:                             const int verify_certificate,",
          "742:                             const char * user,",
          "743:                             const char * password,",
          "744:                             const char * from,",
          "745:                             const char * to,",
          "746:                             const char * cc,",
          "747:                             const char * bcc,",
          "748:                             const char * subject,",
          "",
          "[Added Lines]",
          "738: int ulfius_send_smtp_email(const char * host,",
          "739:                             const int port,",
          "740:                             const int use_tls,",
          "741:                             const int verify_certificate,",
          "742:                             const char * user,",
          "743:                             const char * password,",
          "744:                             const char * from,",
          "745:                             const char * to,",
          "746:                             const char * cc,",
          "747:                             const char * bcc,",
          "748:                             const char * subject,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "780:                                 const char * content_type,",
          "782:                                 const char * mail_body);",
          "783: #endif",
          "",
          "[Removed Lines]",
          "770: int ulfius_send_smtp_rich_email(const char * host,",
          "771:                                 const int port,",
          "772:                                 const int use_tls,",
          "773:                                 const int verify_certificate,",
          "774:                                 const char * user,",
          "775:                                 const char * password,",
          "776:                                 const char * from,",
          "777:                                 const char * to,",
          "778:                                 const char * cc,",
          "779:                                 const char * bcc,",
          "781:                                 const char * subject,",
          "",
          "[Added Lines]",
          "770: int ulfius_send_smtp_rich_email(const char * host,",
          "771:                                 const int port,",
          "772:                                 const int use_tls,",
          "773:                                 const int verify_certificate,",
          "774:                                 const char * user,",
          "775:                                 const char * password,",
          "776:                                 const char * from,",
          "777:                                 const char * to,",
          "778:                                 const char * cc,",
          "779:                                 const char * bcc,",
          "781:                                 const char * subject,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "810:                                   const char * domain, const char * path, const int secure, const int http_only);",
          "",
          "[Removed Lines]",
          "809: int ulfius_add_cookie_to_response(struct _u_response * response, const char * key, const char * value, const char * expires, const unsigned int max_age,",
          "",
          "[Added Lines]",
          "809: int ulfius_add_cookie_to_response(struct _u_response * response, const char * key, const char * value, const char * expires, const unsigned int max_age,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "831:                                             const char * domain, const char * path, const int secure, const int http_only, const int same_site);",
          "",
          "[Removed Lines]",
          "830: int ulfius_add_same_site_cookie_to_response(struct _u_response * response, const char * key, const char * value, const char * expires, const unsigned int max_age,",
          "",
          "[Added Lines]",
          "830: int ulfius_add_same_site_cookie_to_response(struct _u_response * response, const char * key, const char * value, const char * expires, const unsigned int max_age,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "933:                                 const unsigned int status,",
          "934:                                 ssize_t (* stream_callback) (void * stream_user_data, uint64_t offset, char * out_buf, size_t max),",
          "935:                                 void (* stream_callback_free) (void * stream_user_data),",
          "",
          "[Removed Lines]",
          "932: int ulfius_set_stream_response(struct _u_response * response,",
          "",
          "[Added Lines]",
          "932: int ulfius_set_stream_response(struct _u_response * response,",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1688: int ulfius_set_websocket_response(struct _u_response * response,",
          "1689:                                    const char * websocket_protocol,",
          "1691:                                    void (* websocket_manager_callback) (const struct _u_request * request,",
          "1692:                                                                         struct _websocket_manager * websocket_manager,",
          "1693:                                                                         void * websocket_manager_user_data),",
          "",
          "[Removed Lines]",
          "1690:                                    const char * websocket_extensions,",
          "",
          "[Added Lines]",
          "1690:                                    const char * websocket_extensions,",
          "",
          "---------------"
        ],
        "src/u_map.c||src/u_map.c": [
          "File: src/u_map.c -> src/u_map.c"
        ],
        "src/u_request.c||src/u_request.c": [
          "File: src/u_request.c -> src/u_request.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "151:           pstr += 2;",
          "152:         }",
          "155:       } else {",
          "",
          "[Removed Lines]",
          "153:       } else if (* pstr == '+') {",
          "",
          "[Added Lines]",
          "153:       } else if (* pstr == '+') {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "307:     request->map_header = o_malloc(sizeof(struct _u_map));",
          "308:     request->map_cookie = o_malloc(sizeof(struct _u_map));",
          "309:     request->map_post_body = o_malloc(sizeof(struct _u_map));",
          "311:         request->map_url == NULL || request->map_header == NULL) {",
          "312:       y_log_message(Y_LOG_LEVEL_ERROR, \"Ulfius - Error allocating memory for request->map*\");",
          "313:       ulfius_clean_request(request);",
          "",
          "[Removed Lines]",
          "310:     if (request->map_post_body == NULL || request->map_cookie == NULL ||",
          "",
          "[Added Lines]",
          "310:     if (request->map_post_body == NULL || request->map_cookie == NULL ||",
          "",
          "---------------"
        ],
        "src/u_response.c||src/u_response.c": [
          "File: src/u_response.c -> src/u_response.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "197:   }",
          "198: }",
          "201:                                   const char * domain, const char * path, const int secure, const int http_only) {",
          "202:   return ulfius_add_same_site_cookie_to_response(response, key, value, expires, max_age, domain, path, secure, http_only, U_COOKIE_SAME_SITE_NONE);",
          "203: }",
          "206:                                             const char * domain, const char * path, const int secure, const int http_only, const int same_site) {",
          "207:   unsigned int i;",
          "208:   if (response != NULL && key != NULL && (same_site == U_COOKIE_SAME_SITE_NONE || same_site == U_COOKIE_SAME_SITE_STRICT || same_site == U_COOKIE_SAME_SITE_LAX)) {",
          "",
          "[Removed Lines]",
          "200: int ulfius_add_cookie_to_response(struct _u_response * response, const char * key, const char * value, const char * expires, const unsigned int max_age,",
          "205: int ulfius_add_same_site_cookie_to_response(struct _u_response * response, const char * key, const char * value, const char * expires, const unsigned int max_age,",
          "",
          "[Added Lines]",
          "200: int ulfius_add_cookie_to_response(struct _u_response * response, const char * key, const char * value, const char * expires, const unsigned int max_age,",
          "205: int ulfius_add_same_site_cookie_to_response(struct _u_response * response, const char * key, const char * value, const char * expires, const unsigned int max_age,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "261:     response->map_cookie[response->nb_cookies].secure = secure;",
          "262:     response->map_cookie[response->nb_cookies].http_only = http_only;",
          "263:     response->map_cookie[response->nb_cookies].same_site = same_site;",
          "265:         (expires != NULL && response->map_cookie[response->nb_cookies].expires == NULL) || (domain != NULL && response->map_cookie[response->nb_cookies].domain == NULL) ||",
          "266:         (path != NULL && response->map_cookie[response->nb_cookies].path == NULL)) {",
          "267:       y_log_message(Y_LOG_LEVEL_ERROR, \"Ulfius - Error allocating memory for ulfius_add_cookie_to_response\");",
          "",
          "[Removed Lines]",
          "264:     if ((key != NULL && response->map_cookie[response->nb_cookies].key == NULL) || (value != NULL && response->map_cookie[response->nb_cookies].value == NULL) ||",
          "",
          "[Added Lines]",
          "264:     if ((key != NULL && response->map_cookie[response->nb_cookies].key == NULL) || (value != NULL && response->map_cookie[response->nb_cookies].value == NULL) ||",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "559:   }",
          "560: }",
          "563:                                 const unsigned int status,",
          "564:                                 ssize_t (* stream_callback) (void * stream_user_data, uint64_t offset, char * out_buf, size_t max),",
          "565:                                 void (* stream_callback_free) (void * stream_user_data),",
          "",
          "[Removed Lines]",
          "562: int ulfius_set_stream_response(struct _u_response * response,",
          "",
          "[Added Lines]",
          "562: int ulfius_set_stream_response(struct _u_response * response,",
          "",
          "---------------"
        ],
        "src/u_send_request.c||src/u_send_request.c": [
          "File: src/u_send_request.c -> src/u_send_request.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "191: int ulfius_send_http_streaming_request(const struct _u_request * request,",
          "194:                                        void * write_body_data) {",
          "195:   CURLcode res;",
          "196:   CURL * curl_handle = NULL;",
          "",
          "[Removed Lines]",
          "192:                                        struct _u_response * response,",
          "193:                                        size_t (* write_body_function)(void * contents, size_t size, size_t nmemb, void * user_data),",
          "",
          "[Added Lines]",
          "192:                                        struct _u_response * response,",
          "193:                                        size_t (* write_body_function)(void * contents, size_t size, size_t nmemb, void * user_data),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "713:                                 const char * content_type,",
          "715:                                 const char * mail_body) {",
          "716:   CURL * curl_handle;",
          "717:   CURLcode res = CURLE_OK;",
          "",
          "[Removed Lines]",
          "703: int ulfius_send_smtp_rich_email(const char * host,",
          "704:                                 const int port,",
          "705:                                 const int use_tls,",
          "706:                                 const int verify_certificate,",
          "707:                                 const char * user,",
          "708:                                 const char * password,",
          "709:                                 const char * from,",
          "710:                                 const char * to,",
          "711:                                 const char * cc,",
          "712:                                 const char * bcc,",
          "714:                                 const char * subject,",
          "",
          "[Added Lines]",
          "703: int ulfius_send_smtp_rich_email(const char * host,",
          "704:                                 const int port,",
          "705:                                 const int use_tls,",
          "706:                                 const int verify_certificate,",
          "707:                                 const char * user,",
          "708:                                 const char * password,",
          "709:                                 const char * from,",
          "710:                                 const char * to,",
          "711:                                 const char * cc,",
          "712:                                 const char * bcc,",
          "714:                                 const char * subject,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "917:                            const char * mail_body) {",
          "918:   return ulfius_send_smtp_rich_email(host, port, use_tls, verify_certificate, user, password, from, to, cc, bcc, \"text/plain; charset=utf-8\", subject, mail_body);",
          "919: }",
          "",
          "[Removed Lines]",
          "906: int ulfius_send_smtp_email(const char * host,",
          "907:                            const int port,",
          "908:                            const int use_tls,",
          "909:                            const int verify_certificate,",
          "910:                            const char * user,",
          "911:                            const char * password,",
          "912:                            const char * from,",
          "913:                            const char * to,",
          "914:                            const char * cc,",
          "915:                            const char * bcc,",
          "916:                            const char * subject,",
          "",
          "[Added Lines]",
          "906: int ulfius_send_smtp_email(const char * host,",
          "907:                            const int port,",
          "908:                            const int use_tls,",
          "909:                            const int verify_certificate,",
          "910:                            const char * user,",
          "911:                            const char * password,",
          "912:                            const char * from,",
          "913:                            const char * to,",
          "914:                            const char * cc,",
          "915:                            const char * bcc,",
          "916:                            const char * subject,",
          "",
          "---------------"
        ],
        "src/u_websocket.c||src/u_websocket.c": [
          "File: src/u_websocket.c -> src/u_websocket.c"
        ],
        "src/ulfius.c||src/ulfius.c": [
          "File: src/ulfius.c -> src/ulfius.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "477:       MHD_get_connection_values (connection, MHD_COOKIE_KIND, ulfius_fill_map, con_info->request->map_cookie);",
          "478:     }",
          "479:     content_type = (char*)u_map_get_case(con_info->request->map_header, ULFIUS_HTTP_HEADER_CONTENT);",
          "483:         0 == o_strncmp(MHD_HTTP_POST_ENCODING_MULTIPART_FORMDATA, content_type, o_strlen(MHD_HTTP_POST_ENCODING_MULTIPART_FORMDATA)))) {",
          "484:       con_info->has_post_processor = 1;",
          "485:       con_info->post_processor = MHD_create_post_processor (connection, ULFIUS_POSTBUFFERSIZE, mhd_iterate_post_data, (void *) con_info);",
          "",
          "[Removed Lines]",
          "482:     if (content_type != NULL && (0 == o_strncmp(MHD_HTTP_POST_ENCODING_FORM_URLENCODED, content_type, o_strlen(MHD_HTTP_POST_ENCODING_FORM_URLENCODED)) ||",
          "",
          "[Added Lines]",
          "482:     if (content_type != NULL && (0 == o_strncmp(MHD_HTTP_POST_ENCODING_FORM_URLENCODED, content_type, o_strlen(MHD_HTTP_POST_ENCODING_FORM_URLENCODED)) ||",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "509:         con_info->request->binary_body_length += upload_data_size_current;",
          "511:         const char * content_type = u_map_get_case(con_info->request->map_header, ULFIUS_HTTP_HEADER_CONTENT);",
          "513:             0 == o_strncmp(MHD_HTTP_POST_ENCODING_MULTIPART_FORMDATA, content_type, o_strlen(MHD_HTTP_POST_ENCODING_MULTIPART_FORMDATA))) {",
          "514:           MHD_post_process (con_info->post_processor, upload_data, *upload_data_size);",
          "515:         }",
          "",
          "[Removed Lines]",
          "512:         if (0 == o_strncmp(MHD_HTTP_POST_ENCODING_FORM_URLENCODED, content_type, o_strlen(MHD_HTTP_POST_ENCODING_FORM_URLENCODED)) ||",
          "",
          "[Added Lines]",
          "512:         if (0 == o_strncmp(MHD_HTTP_POST_ENCODING_FORM_URLENCODED, content_type, o_strlen(MHD_HTTP_POST_ENCODING_FORM_URLENCODED)) ||",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "654:                 } else {",
          "655:                   ret_extensions = ulfius_check_list_match(u_map_get_case(con_info->request->map_header, \"Sec-WebSocket-Extensions\"), ((struct _websocket_handle *)response->websocket_handle)->websocket_extensions, \",\", &extension);",
          "656:                 }",
          "658:                     (ret_protocol = ulfius_check_first_match(u_map_get_case(con_info->request->map_header, \"Sec-WebSocket-Protocol\"), ((struct _websocket_handle *)response->websocket_handle)->websocket_protocol, \",\", &protocol)) == U_OK) {",
          "659:                   char websocket_accept[32] = {0};",
          "660:                   if (ulfius_generate_handshake_answer(u_map_get_case(con_info->request->map_header, \"Sec-WebSocket-Key\"), websocket_accept)) {",
          "",
          "[Removed Lines]",
          "657:                 if (ret_extensions == U_OK &&",
          "",
          "[Added Lines]",
          "657:                 if (ret_extensions == U_OK &&",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1083:     mhd_ops[index].ptr_value = NULL;",
          "1085:     return MHD_start_daemon (",
          "1087:       MHD_OPTION_ARRAY, mhd_ops,",
          "1088:       MHD_OPTION_END",
          "1089:     );",
          "",
          "[Removed Lines]",
          "1086:       mhd_flags, u_instance->port, NULL, NULL, &ulfius_webservice_dispatcher, (void *)u_instance,",
          "",
          "[Added Lines]",
          "1086:       mhd_flags, u_instance->port, NULL, NULL, &ulfius_webservice_dispatcher, (void *)u_instance,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1272:       pthread_cond_wait(&((struct _websocket_handler *)u_instance->websocket_handler)->websocket_close_cond, &((struct _websocket_handler *)u_instance->websocket_handler)->websocket_close_lock);",
          "1273:     }",
          "1274:     pthread_mutex_unlock(&((struct _websocket_handler *)u_instance->websocket_handler)->websocket_close_lock);",
          "1276:     MHD_stop_daemon (u_instance->mhd_daemon);",
          "1277:     u_instance->mhd_daemon = NULL;",
          "1278:     u_instance->status = U_STATUS_STOP;",
          "",
          "[Removed Lines]",
          "1275: #endif",
          "",
          "[Added Lines]",
          "1275: #endif",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1558: }",
          "1560: int ulfius_set_upload_file_callback_function(struct _u_instance * u_instance,",
          "1569:                                                                            void * cls),",
          "1570:                                              void * cls) {",
          "1571:   if (u_instance != NULL && file_upload_callback != NULL) {",
          "",
          "[Removed Lines]",
          "1561:                                              int (* file_upload_callback) (const struct _u_request * request,",
          "1562:                                                                            const char * key,",
          "1563:                                                                            const char * filename,",
          "1564:                                                                            const char * content_type,",
          "1565:                                                                            const char * transfer_encoding,",
          "1566:                                                                            const char * data,",
          "1567:                                                                            uint64_t off,",
          "1568:                                                                            size_t size,",
          "",
          "[Added Lines]",
          "1561:                                              int (* file_upload_callback) (const struct _u_request * request,",
          "1562:                                                                            const char * key,",
          "1563:                                                                            const char * filename,",
          "1564:                                                                            const char * content_type,",
          "1565:                                                                            const char * transfer_encoding,",
          "1566:                                                                            const char * data,",
          "1567:                                                                            uint64_t off,",
          "1568:                                                                            size_t size,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1591: #ifndef U_DISABLE_WEBSOCKET",
          "1593:     if ((struct _websocket_handler *)u_instance->websocket_handler) {",
          "1595:           (pthread_mutex_destroy(&((struct _websocket_handler *)u_instance->websocket_handler)->websocket_close_lock) ||",
          "1596:           pthread_cond_destroy(&((struct _websocket_handler *)u_instance->websocket_handler)->websocket_close_cond) ||",
          "1597:           pthread_mutex_destroy(&((struct _websocket_handler *)u_instance->websocket_handler)->websocket_active_lock))) {",
          "",
          "[Removed Lines]",
          "1594:       if (((struct _websocket_handler *)u_instance->websocket_handler)->pthread_init &&",
          "",
          "[Added Lines]",
          "1594:       if (((struct _websocket_handler *)u_instance->websocket_handler)->pthread_init &&",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1666:     ((struct _websocket_handler *)u_instance->websocket_handler)->pthread_init = 0;",
          "1667:     ((struct _websocket_handler *)u_instance->websocket_handler)->nb_websocket_active = 0;",
          "1668:     ((struct _websocket_handler *)u_instance->websocket_handler)->websocket_active = NULL;",
          "1670:         pthread_cond_init(&((struct _websocket_handler *)u_instance->websocket_handler)->websocket_close_cond, NULL)) {",
          "1671:       y_log_message(Y_LOG_LEVEL_ERROR, \"Ulfius - Error initializing websocket_close_lock or websocket_close_cond\");",
          "1672:       ulfius_clean_instance(u_instance);",
          "",
          "[Removed Lines]",
          "1669:     if (pthread_mutex_init(&((struct _websocket_handler *)u_instance->websocket_handler)->websocket_close_lock, NULL) ||",
          "",
          "[Added Lines]",
          "1669:     if (pthread_mutex_init(&((struct _websocket_handler *)u_instance->websocket_handler)->websocket_close_lock, NULL) ||",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1730:       i++;",
          "1731:     } else if ((s[0] & 0xe0) == 0xc0) {",
          "1734:           (s[1] & 0xc0) != 0x80 ||",
          "1736:         return s;",
          "",
          "[Removed Lines]",
          "1733:       if ((i+1 >= len) ||",
          "",
          "[Added Lines]",
          "1733:       if ((i+1 >= len) ||",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1740:       }",
          "1741:     } else if ((s[0] & 0xf0) == 0xe0) {",
          "1744:           (s[1] & 0xc0) != 0x80 ||",
          "1745:           (s[2] & 0xc0) != 0x80 ||",
          "",
          "[Removed Lines]",
          "1743:       if ((i+2 >= len) ||",
          "",
          "[Added Lines]",
          "1743:       if ((i+2 >= len) ||",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1754:       }",
          "1755:     } else if ((s[0] & 0xf8) == 0xf0) {",
          "1758:           (s[1] & 0xc0) != 0x80 ||",
          "1759:           (s[2] & 0xc0) != 0x80 ||",
          "1760:           (s[3] & 0xc0) != 0x80 ||",
          "",
          "[Removed Lines]",
          "1757:       if ((i+3 >= len) ||",
          "",
          "[Added Lines]",
          "1757:       if ((i+3 >= len) ||",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1804:         if (isalnum(* pstr) || * pstr == '$' || * pstr == '-' || * pstr == '_' ||",
          "1812:         pstr++;",
          "1813:       }",
          "",
          "[Removed Lines]",
          "1808:         else if (* pstr == ' ')",
          "1810:         else",
          "",
          "[Added Lines]",
          "1808:         else if (* pstr == ' ')",
          "1810:         else",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1840:             pstr += 2;",
          "1841:           }",
          "1844:         } else {",
          "",
          "[Removed Lines]",
          "1842:         } else if (* pstr == '+') {",
          "",
          "[Added Lines]",
          "1842:         } else if (* pstr == '+') {",
          "",
          "---------------"
        ]
      }
    }
  ]
}