{
  "cve_id": "CVE-2015-5279",
  "cve_desc": "Heap-based buffer overflow in the ne2000_receive function in hw/net/ne2000.c in QEMU before 2.4.0.1 allows guest OS users to cause a denial of service (instance crash) or possibly execute arbitrary code via vectors related to receiving packets.",
  "repo": "qemu/qemu",
  "patch_hash": "9bbdbc66e5765068dce76e9269dce4547afd8ad4",
  "patch_info": {
    "commit_hash": "9bbdbc66e5765068dce76e9269dce4547afd8ad4",
    "repo": "qemu/qemu",
    "commit_url": "https://github.com/qemu/qemu/commit/9bbdbc66e5765068dce76e9269dce4547afd8ad4",
    "files": [
      "hw/net/ne2000.c"
    ],
    "message": "net: add checks to validate ring buffer pointers(CVE-2015-5279)\n\nNe2000 NIC uses ring buffer of NE2000_MEM_SIZE(49152)\nbytes to process network packets. While receiving packets\nvia ne2000_receive() routine, a local 'index' variable\ncould exceed the ring buffer size, which could lead to a\nmemory buffer overflow. Added other checks at initialisation.\n\nReported-by: Qinghao Tang <luodalongde@gmail.com>\nSigned-off-by: P J P <pjp@fedoraproject.org>\nSigned-off-by: Stefan Hajnoczi <stefanha@redhat.com>",
    "before_after_code_files": [
      "hw/net/ne2000.c||hw/net/ne2000.c"
    ]
  },
  "patch_diff": {
    "hw/net/ne2000.c||hw/net/ne2000.c": [
      "File: hw/net/ne2000.c -> hw/net/ne2000.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "221:     }",
      "223:     index = s->curpag << 8;",
      "225:     total_len = size + 4;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "224:     if (index >= NE2000_PMEM_END) {",
      "225:         index = s->start;",
      "226:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "306:         offset = addr | (page << 4);",
      "307:         switch(offset) {",
      "308:         case EN0_STARTPG:",
      "310:             break;",
      "311:         case EN0_STOPPG:",
      "313:             break;",
      "314:         case EN0_BOUNDARY:",
      "316:             break;",
      "317:         case EN0_IMR:",
      "318:             s->imr = val;",
      "",
      "[Removed Lines]",
      "309:             s->start = val << 8;",
      "312:             s->stop = val << 8;",
      "315:             s->boundary = val;",
      "",
      "[Added Lines]",
      "312:             if (val << 8 <= NE2000_PMEM_END) {",
      "313:                 s->start = val << 8;",
      "314:             }",
      "317:             if (val << 8 <= NE2000_PMEM_END) {",
      "318:                 s->stop = val << 8;",
      "319:             }",
      "322:             if (val << 8 < NE2000_PMEM_END) {",
      "323:                 s->boundary = val;",
      "324:             }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "353:             s->phys[offset - EN1_PHYS] = val;",
      "354:             break;",
      "355:         case EN1_CURPAG:",
      "357:             break;",
      "358:         case EN1_MULT ... EN1_MULT + 7:",
      "359:             s->mult[offset - EN1_MULT] = val;",
      "",
      "[Removed Lines]",
      "356:             s->curpag = val;",
      "",
      "[Added Lines]",
      "365:             if (val << 8 < NE2000_PMEM_END) {",
      "366:                 s->curpag = val;",
      "367:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7aa2bcad0ca837dd6d4bf4fa38a80314b4a6b755",
      "candidate_info": {
        "commit_hash": "7aa2bcad0ca837dd6d4bf4fa38a80314b4a6b755",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/7aa2bcad0ca837dd6d4bf4fa38a80314b4a6b755",
        "files": [
          "hw/net/ne2000.c"
        ],
        "message": "net: add checks to validate ring buffer pointers(CVE-2015-5279)\n\nNe2000 NIC uses ring buffer of NE2000_MEM_SIZE(49152)\nbytes to process network packets. While receiving packets\nvia ne2000_receive() routine, a local 'index' variable\ncould exceed the ring buffer size, which could lead to a\nmemory buffer overflow. Added other checks at initialisation.\n\nReported-by: Qinghao Tang <luodalongde@gmail.com>\nSigned-off-by: P J P <pjp@fedoraproject.org>\nSigned-off-by: Stefan Hajnoczi <stefanha@redhat.com>\n(cherry picked from commit 9bbdbc66e5765068dce76e9269dce4547afd8ad4)\nSigned-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>",
        "before_after_code_files": [
          "hw/net/ne2000.c||hw/net/ne2000.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "olp_code_files": {
          "patch": [
            "hw/net/ne2000.c||hw/net/ne2000.c"
          ],
          "candidate": [
            "hw/net/ne2000.c||hw/net/ne2000.c"
          ]
        }
      },
      "candidate_diff": {
        "hw/net/ne2000.c||hw/net/ne2000.c": [
          "File: hw/net/ne2000.c -> hw/net/ne2000.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "230:     }",
          "232:     index = s->curpag << 8;",
          "234:     total_len = size + 4;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "233:     if (index >= NE2000_PMEM_END) {",
          "234:         index = s->start;",
          "235:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "315:         offset = addr | (page << 4);",
          "316:         switch(offset) {",
          "317:         case EN0_STARTPG:",
          "319:             break;",
          "320:         case EN0_STOPPG:",
          "322:             break;",
          "323:         case EN0_BOUNDARY:",
          "325:             break;",
          "326:         case EN0_IMR:",
          "327:             s->imr = val;",
          "",
          "[Removed Lines]",
          "318:             s->start = val << 8;",
          "321:             s->stop = val << 8;",
          "324:             s->boundary = val;",
          "",
          "[Added Lines]",
          "321:             if (val << 8 <= NE2000_PMEM_END) {",
          "322:                 s->start = val << 8;",
          "323:             }",
          "326:             if (val << 8 <= NE2000_PMEM_END) {",
          "327:                 s->stop = val << 8;",
          "328:             }",
          "331:             if (val << 8 < NE2000_PMEM_END) {",
          "332:                 s->boundary = val;",
          "333:             }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "362:             s->phys[offset - EN1_PHYS] = val;",
          "363:             break;",
          "364:         case EN1_CURPAG:",
          "366:             break;",
          "367:         case EN1_MULT ... EN1_MULT + 7:",
          "368:             s->mult[offset - EN1_MULT] = val;",
          "",
          "[Removed Lines]",
          "365:             s->curpag = val;",
          "",
          "[Added Lines]",
          "374:             if (val << 8 < NE2000_PMEM_END) {",
          "375:                 s->curpag = val;",
          "376:             }",
          "",
          "---------------"
        ]
      }
    }
  ]
}