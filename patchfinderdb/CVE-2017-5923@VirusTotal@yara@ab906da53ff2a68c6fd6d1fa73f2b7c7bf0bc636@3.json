{
  "cve_id": "CVE-2017-5923",
  "cve_desc": "libyara/grammar.y in YARA 3.5.0 allows remote attackers to cause a denial of service (heap-based out-of-bounds read and application crash) via a crafted rule that is mishandled in the yara_yyparse function.",
  "repo": "VirusTotal/yara",
  "patch_hash": "ab906da53ff2a68c6fd6d1fa73f2b7c7bf0bc636",
  "patch_info": {
    "commit_hash": "ab906da53ff2a68c6fd6d1fa73f2b7c7bf0bc636",
    "repo": "VirusTotal/yara",
    "commit_url": "https://github.com/VirusTotal/yara/commit/ab906da53ff2a68c6fd6d1fa73f2b7c7bf0bc636",
    "files": [
      "libyara/grammar.c",
      "libyara/grammar.y"
    ],
    "message": "Fix issue #597",
    "before_after_code_files": [
      "libyara/grammar.c||libyara/grammar.c",
      "libyara/grammar.y||libyara/grammar.y"
    ]
  },
  "patch_diff": {
    "libyara/grammar.c||libyara/grammar.c": [
      "File: libyara/grammar.c -> libyara/grammar.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "611:      347,   353,   356,   374,   387,   424,   425,   430,   446,   459,",
      "612:      472,   485,   502,   503,   509,   508,   524,   523,   539,   553,",
      "613:      554,   559,   560,   561,   562,   567,   652,   698,   756,   801,",
      "622: };",
      "623: #endif",
      "",
      "[Removed Lines]",
      "614:      802,   806,   831,   867,   913,   935,   944,   953,   968,   980,",
      "615:      994,  1007,  1018,  1027,  1057,  1026,  1171,  1170,  1249,  1255,",
      "616:     1262,  1261,  1324,  1323,  1384,  1393,  1402,  1411,  1420,  1429,",
      "617:     1438,  1442,  1450,  1451,  1456,  1478,  1490,  1506,  1505,  1511,",
      "618:     1522,  1523,  1528,  1535,  1546,  1547,  1551,  1559,  1563,  1573,",
      "619:     1587,  1603,  1613,  1622,  1647,  1659,  1671,  1687,  1699,  1715,",
      "620:     1760,  1779,  1797,  1815,  1833,  1859,  1877,  1887,  1897,  1907,",
      "621:     1917,  1927,  1937",
      "",
      "[Added Lines]",
      "614:      802,   806,   833,   871,   917,   939,   948,   957,   972,   984,",
      "615:      998,  1011,  1022,  1033,  1063,  1032,  1177,  1176,  1255,  1261,",
      "616:     1268,  1267,  1330,  1329,  1390,  1399,  1408,  1417,  1426,  1435,",
      "617:     1444,  1448,  1456,  1457,  1462,  1484,  1496,  1512,  1511,  1517,",
      "618:     1528,  1529,  1534,  1541,  1552,  1553,  1557,  1565,  1569,  1579,",
      "619:     1593,  1609,  1619,  1628,  1653,  1665,  1677,  1693,  1705,  1721,",
      "620:     1766,  1785,  1803,  1821,  1839,  1865,  1883,  1893,  1903,  1913,",
      "621:     1923,  1933,  1943",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2361:           case EXPRESSION_TYPE_REGEXP:",
      "2362:             strlcpy((yyval.c_string), \"r\", MAX_FUNCTION_ARGS);",
      "2363:             break;",
      "2364:         }",
      "2366:         ERROR_IF((yyval.c_string) == NULL);",
      "2367:       }",
      "2369:     break;",
      "2371:   case 52:",
      "2373:     {",
      "2374:         if (strlen((yyvsp[-2].c_string)) == MAX_FUNCTION_ARGS)",
      "2375:         {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2364:           default:",
      "2365:             assert(FALSE);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2394:             case EXPRESSION_TYPE_REGEXP:",
      "2395:               strlcat((yyvsp[-2].c_string), \"r\", MAX_FUNCTION_ARGS);",
      "2396:               break;",
      "2397:           }",
      "2398:         }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2399:             default:",
      "2400:               assert(FALSE);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2582:         (yyval.expression).type = EXPRESSION_TYPE_BOOLEAN;",
      "2583:       }",
      "2585:     break;",
      "2587:   case 62:",
      "2589:     {",
      "2590:         if (compiler->loop_depth > 0)",
      "2591:         {",
      "2592:           compiler->loop_depth--;",
      "2593:           compiler->loop_identifier[compiler->loop_depth] = NULL;",
      "2594:         }",
      "2595:       }",
      "2597:     break;",
      "2599:   case 63:",
      "2601:     {",
      "2602:         int var_index;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2600:         YYERROR;",
      "",
      "---------------"
    ],
    "libyara/grammar.y||libyara/grammar.y": [
      "File: libyara/grammar.y -> libyara/grammar.y",
      "--- Hunk 1 ---",
      "[Context before]",
      "824:           case EXPRESSION_TYPE_REGEXP:",
      "825:             strlcpy($$, \"r\", MAX_FUNCTION_ARGS);",
      "826:             break;",
      "827:         }",
      "829:         ERROR_IF($$ == NULL);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "827:           default:",
      "828:             assert(FALSE);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "853:             case EXPRESSION_TYPE_REGEXP:",
      "854:               strlcat($1, \"r\", MAX_FUNCTION_ARGS);",
      "855:               break;",
      "856:           }",
      "857:         }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "858:             default:",
      "859:               assert(FALSE);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1022:           compiler->loop_depth--;",
      "1023:           compiler->loop_identifier[compiler->loop_depth] = NULL;",
      "1024:         }",
      "1025:       }",
      "1026:     | _FOR_ for_expression _IDENTIFIER_ _IN_",
      "1027:       {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1030:         YYERROR;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4faaeee3c5fe2ca27016d970c428de305aa2c621",
      "candidate_info": {
        "commit_hash": "4faaeee3c5fe2ca27016d970c428de305aa2c621",
        "repo": "VirusTotal/yara",
        "commit_url": "https://github.com/VirusTotal/yara/commit/4faaeee3c5fe2ca27016d970c428de305aa2c621",
        "files": [
          "libyara/grammar.c",
          "libyara/grammar.h",
          "libyara/grammar.y"
        ],
        "message": "Use %PRId64 instead of %lld for printing int64_t",
        "before_after_code_files": [
          "libyara/grammar.c||libyara/grammar.c",
          "libyara/grammar.h||libyara/grammar.h",
          "libyara/grammar.y||libyara/grammar.y"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libyara/grammar.c||libyara/grammar.c",
            "libyara/grammar.y||libyara/grammar.y"
          ],
          "candidate": [
            "libyara/grammar.c||libyara/grammar.c",
            "libyara/grammar.y||libyara/grammar.y"
          ]
        }
      },
      "candidate_diff": {
        "libyara/grammar.c||libyara/grammar.c": [
          "File: libyara/grammar.c -> libyara/grammar.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "77: #include <string.h>",
          "78: #include <limits.h>",
          "79: #include <stddef.h>",
          "82: #include <yara/integers.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "80: #include <inttypes.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "613: static const yytype_uint16 yyrline[] =",
          "614: {",
          "628: };",
          "629: #endif",
          "",
          "[Removed Lines]",
          "615:        0,   226,   226,   228,   229,   230,   231,   232,   237,   250,",
          "616:      259,   249,   282,   285,   313,   316,   343,   348,   349,   354,",
          "617:      355,   361,   364,   382,   395,   432,   433,   438,   454,   467,",
          "618:      480,   493,   510,   511,   517,   516,   532,   531,   547,   561,",
          "619:      562,   567,   568,   569,   570,   575,   660,   706,   764,   809,",
          "620:      810,   814,   841,   879,   921,   943,   952,   961,   976,   988,",
          "621:     1002,  1015,  1026,  1037,  1067,  1036,  1181,  1180,  1259,  1265,",
          "622:     1272,  1271,  1325,  1324,  1376,  1385,  1394,  1403,  1412,  1421,",
          "623:     1430,  1434,  1442,  1443,  1448,  1470,  1482,  1498,  1497,  1503,",
          "624:     1514,  1515,  1520,  1527,  1538,  1539,  1543,  1551,  1555,  1565,",
          "625:     1579,  1595,  1605,  1614,  1639,  1651,  1663,  1679,  1691,  1707,",
          "626:     1752,  1771,  1799,  1828,  1856,  1881,  1899,  1909,  1919,  1929,",
          "627:     1939,  1949,  1959",
          "",
          "[Added Lines]",
          "616:        0,   227,   227,   229,   230,   231,   232,   233,   238,   251,",
          "617:      260,   250,   283,   286,   314,   317,   344,   349,   350,   355,",
          "618:      356,   362,   365,   383,   396,   433,   434,   439,   455,   468,",
          "619:      481,   494,   511,   512,   518,   517,   533,   532,   548,   562,",
          "620:      563,   568,   569,   570,   571,   576,   661,   707,   765,   810,",
          "621:      811,   815,   842,   880,   922,   944,   953,   962,   977,   989,",
          "622:     1003,  1016,  1027,  1038,  1068,  1037,  1182,  1181,  1260,  1266,",
          "623:     1273,  1272,  1326,  1325,  1377,  1386,  1395,  1404,  1413,  1422,",
          "624:     1431,  1435,  1443,  1444,  1449,  1471,  1483,  1499,  1498,  1504,",
          "625:     1515,  1516,  1521,  1528,  1539,  1540,  1544,  1552,  1556,  1566,",
          "626:     1580,  1596,  1606,  1615,  1640,  1652,  1664,  1680,  1692,  1708,",
          "627:     1753,  1772,  1804,  1833,  1861,  1886,  1904,  1914,  1924,  1934,",
          "628:     1944,  1954,  1964",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3508:               (yyvsp[-2].expression).value.integer > INT64_MAX - (yyvsp[0].expression).value.integer)",
          "3509:           {",
          "3510:             yr_compiler_set_error_extra_info_fmt(",
          "3512:             compiler->last_result = ERROR_INTEGER_OVERFLOW;",
          "3513:           }",
          "",
          "[Removed Lines]",
          "3511:                 compiler, \"%lld + %lld\", (yyvsp[-2].expression).value.integer, (yyvsp[0].expression).value.integer);",
          "",
          "[Added Lines]",
          "3512:                 compiler,",
          "3513:                 \"%\" PRId64 \" + %\" PRId64,",
          "3514:                 (yyvsp[-2].expression).value.integer,",
          "3515:                 (yyvsp[0].expression).value.integer);",
          "",
          "---------------"
        ],
        "libyara/grammar.h||libyara/grammar.h": [
          "File: libyara/grammar.h -> libyara/grammar.h"
        ],
        "libyara/grammar.y||libyara/grammar.y": [
          "File: libyara/grammar.y -> libyara/grammar.y",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #include <string.h>",
          "36: #include <limits.h>",
          "37: #include <stddef.h>",
          "40: #include <yara/integers.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38: #include <inttypes.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1782:               $1.value.integer > INT64_MAX - $3.value.integer)",
          "1783:           {",
          "1784:             yr_compiler_set_error_extra_info_fmt(",
          "1786:             compiler->last_result = ERROR_INTEGER_OVERFLOW;",
          "1787:           }",
          "",
          "[Removed Lines]",
          "1785:                 compiler, \"%lld + %lld\", $1.value.integer, $3.value.integer);",
          "",
          "[Added Lines]",
          "1786:                 compiler,",
          "1787:                 \"%\" PRId64 \" + %\" PRId64,",
          "1788:                 $1.value.integer,",
          "1789:                 $3.value.integer);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "15f831264acb82f7722cefd2cd9b7adea541826a",
      "candidate_info": {
        "commit_hash": "15f831264acb82f7722cefd2cd9b7adea541826a",
        "repo": "VirusTotal/yara",
        "commit_url": "https://github.com/VirusTotal/yara/commit/15f831264acb82f7722cefd2cd9b7adea541826a",
        "files": [
          "libyara/grammar.c",
          "libyara/grammar.y",
          "libyara/lexer.c",
          "libyara/lexer.l",
          "tests/test-rules.c"
        ],
        "message": "Fix issues with the integer overflow detection logic.",
        "before_after_code_files": [
          "libyara/grammar.c||libyara/grammar.c",
          "libyara/grammar.y||libyara/grammar.y",
          "libyara/lexer.c||libyara/lexer.c",
          "libyara/lexer.l||libyara/lexer.l",
          "tests/test-rules.c||tests/test-rules.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libyara/grammar.c||libyara/grammar.c",
            "libyara/grammar.y||libyara/grammar.y"
          ],
          "candidate": [
            "libyara/grammar.c||libyara/grammar.c",
            "libyara/grammar.y||libyara/grammar.y"
          ]
        }
      },
      "candidate_diff": {
        "libyara/grammar.c||libyara/grammar.c": [
          "File: libyara/grammar.c -> libyara/grammar.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "622:     1429,  1433,  1441,  1442,  1447,  1469,  1481,  1497,  1496,  1502,",
          "623:     1513,  1514,  1519,  1526,  1537,  1538,  1542,  1550,  1554,  1564,",
          "624:     1578,  1594,  1604,  1613,  1638,  1650,  1662,  1678,  1690,  1706,",
          "627: };",
          "628: #endif",
          "",
          "[Removed Lines]",
          "625:     1751,  1770,  1804,  1839,  1873,  1898,  1916,  1926,  1936,  1946,",
          "626:     1956,  1966,  1976",
          "",
          "[Added Lines]",
          "625:     1751,  1770,  1808,  1846,  1883,  1908,  1926,  1936,  1946,  1956,",
          "626:     1966,  1976,  1986",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3501:         if ((yyvsp[-2].expression).type == EXPRESSION_TYPE_INTEGER &&",
          "3502:             (yyvsp[0].expression).type == EXPRESSION_TYPE_INTEGER)",
          "3503:         {",
          "3508:           {",
          "3509:             yr_compiler_set_error_extra_info_fmt(",
          "3510:                 compiler,",
          "",
          "[Removed Lines]",
          "3504:           if (!IS_UNDEFINED((yyvsp[-2].expression).value.integer) &&",
          "3505:               !IS_UNDEFINED((yyvsp[0].expression).value.integer) &&",
          "3506:               (yyvsp[0].expression).value.integer > 0 &&",
          "3507:               (yyvsp[-2].expression).value.integer > INT64_MAX - (yyvsp[0].expression).value.integer)",
          "",
          "[Added Lines]",
          "3504:           int64_t i1 = (yyvsp[-2].expression).value.integer;",
          "3505:           int64_t i2 = (yyvsp[0].expression).value.integer;",
          "3507:           if (!IS_UNDEFINED(i1) && !IS_UNDEFINED(i2) &&",
          "3508:               (",
          "3509:                 (i2 > 0 && i1 > INT64_MAX - i2) ||",
          "3510:                 (i2 < 0 && i1 < INT64_MIN - i2)",
          "3511:               ))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3539:         if ((yyvsp[-2].expression).type == EXPRESSION_TYPE_INTEGER &&",
          "3540:             (yyvsp[0].expression).type == EXPRESSION_TYPE_INTEGER)",
          "3541:         {",
          "3547:           {",
          "3548:             yr_compiler_set_error_extra_info_fmt(",
          "3549:                 compiler,",
          "",
          "[Removed Lines]",
          "3542:           if (!IS_UNDEFINED((yyvsp[-2].expression).value.integer) &&",
          "3543:               !IS_UNDEFINED((yyvsp[0].expression).value.integer) &&",
          "3544:               (yyvsp[-2].expression).value.integer < 0 &&",
          "3545:               (yyvsp[0].expression).value.integer > 0 &&",
          "3546:               (yyvsp[-2].expression).value.integer < INT64_MIN + (yyvsp[0].expression).value.integer)",
          "",
          "[Added Lines]",
          "3546:           int64_t i1 = (yyvsp[-2].expression).value.integer;",
          "3547:           int64_t i2 = (yyvsp[0].expression).value.integer;",
          "3549:           if (!IS_UNDEFINED(i1) && !IS_UNDEFINED(i2) &&",
          "3550:               (",
          "3551:                 (i2 < 0 && i1 > INT64_MAX + i2) ||",
          "3552:                 (i2 > 0 && i1 < INT64_MIN + i2)",
          "3553:               ))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3578:         if ((yyvsp[-2].expression).type == EXPRESSION_TYPE_INTEGER &&",
          "3579:             (yyvsp[0].expression).type == EXPRESSION_TYPE_INTEGER)",
          "3580:         {",
          "3585:           {",
          "3586:             yr_compiler_set_error_extra_info_fmt(",
          "3587:                 compiler,",
          "",
          "[Removed Lines]",
          "3581:           if (!IS_UNDEFINED((yyvsp[-2].expression).value.integer) &&",
          "3582:               !IS_UNDEFINED((yyvsp[0].expression).value.integer) &&",
          "3583:               (yyvsp[0].expression).value.integer != 0 &&",
          "3584:               (yyvsp[-2].expression).value.integer > INT64_MAX / (yyvsp[0].expression).value.integer)",
          "",
          "[Added Lines]",
          "3588:           int64_t i1 = (yyvsp[-2].expression).value.integer;",
          "3589:           int64_t i2 = (yyvsp[0].expression).value.integer;",
          "3591:           if (!IS_UNDEFINED(i1) && !IS_UNDEFINED(i2) &&",
          "3592:               (",
          "3593:                 llabs(i1) > INT64_MAX / llabs(i2)",
          "3594:               ))",
          "",
          "---------------"
        ],
        "libyara/grammar.y||libyara/grammar.y": [
          "File: libyara/grammar.y -> libyara/grammar.y",
          "--- Hunk 1 ---",
          "[Context before]",
          "1775:         if ($1.type == EXPRESSION_TYPE_INTEGER &&",
          "1776:             $3.type == EXPRESSION_TYPE_INTEGER)",
          "1777:         {",
          "1782:           {",
          "1783:             yr_compiler_set_error_extra_info_fmt(",
          "1784:                 compiler,",
          "",
          "[Removed Lines]",
          "1778:           if (!IS_UNDEFINED($1.value.integer) &&",
          "1779:               !IS_UNDEFINED($3.value.integer) &&",
          "1780:               $3.value.integer > 0 &&",
          "1781:               $1.value.integer > INT64_MAX - $3.value.integer)",
          "",
          "[Added Lines]",
          "1778:           int64_t i1 = $1.value.integer;",
          "1779:           int64_t i2 = $3.value.integer;",
          "1781:           if (!IS_UNDEFINED(i1) && !IS_UNDEFINED(i2) &&",
          "1782:               (",
          "1783:                 (i2 > 0 && i1 > INT64_MAX - i2) ||",
          "1784:                 (i2 < 0 && i1 < INT64_MIN - i2)",
          "1785:               ))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1809:         if ($1.type == EXPRESSION_TYPE_INTEGER &&",
          "1810:             $3.type == EXPRESSION_TYPE_INTEGER)",
          "1811:         {",
          "1817:           {",
          "1818:             yr_compiler_set_error_extra_info_fmt(",
          "1819:                 compiler,",
          "",
          "[Removed Lines]",
          "1812:           if (!IS_UNDEFINED($1.value.integer) &&",
          "1813:               !IS_UNDEFINED($3.value.integer) &&",
          "1814:               $1.value.integer < 0 &&",
          "1815:               $3.value.integer > 0 &&",
          "1816:               $1.value.integer < INT64_MIN + $3.value.integer)",
          "",
          "[Added Lines]",
          "1816:           int64_t i1 = $1.value.integer;",
          "1817:           int64_t i2 = $3.value.integer;",
          "1819:           if (!IS_UNDEFINED(i1) && !IS_UNDEFINED(i2) &&",
          "1820:               (",
          "1821:                 (i2 < 0 && i1 > INT64_MAX + i2) ||",
          "1822:                 (i2 > 0 && i1 < INT64_MIN + i2)",
          "1823:               ))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1844:         if ($1.type == EXPRESSION_TYPE_INTEGER &&",
          "1845:             $3.type == EXPRESSION_TYPE_INTEGER)",
          "1846:         {",
          "1851:           {",
          "1852:             yr_compiler_set_error_extra_info_fmt(",
          "1853:                 compiler,",
          "",
          "[Removed Lines]",
          "1847:           if (!IS_UNDEFINED($1.value.integer) &&",
          "1848:               !IS_UNDEFINED($3.value.integer) &&",
          "1849:               $3.value.integer != 0 &&",
          "1850:               $1.value.integer > INT64_MAX / $3.value.integer)",
          "",
          "[Added Lines]",
          "1854:           int64_t i1 = $1.value.integer;",
          "1855:           int64_t i2 = $3.value.integer;",
          "1857:           if (!IS_UNDEFINED(i1) && !IS_UNDEFINED(i2) &&",
          "1858:               (",
          "1859:                 llabs(i1) > INT64_MAX / llabs(i2)",
          "1860:               ))",
          "",
          "---------------"
        ],
        "libyara/lexer.c||libyara/lexer.c": [
          "File: libyara/lexer.c -> libyara/lexer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "965:     { \\",
          "966:       compiler->last_result = error_code; \\",
          "967:       yyerror(yyscanner, compiler, NULL); \\",
          "969:     }",
          "971: #define syntax_error(error_msg) \\",
          "",
          "[Removed Lines]",
          "968:       yyterminate(); \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1010: #define snprintf _snprintf",
          "1011: #endif",
          "1014: #define YY_NO_UNISTD_H 1",
          "1015: #define YY_NO_INPUT 1",
          "1019: #define INITIAL 0",
          "1020: #define str 1",
          "",
          "[Removed Lines]",
          "1013: #line 1013 \"lexer.c\"",
          "1017: #line 1017 \"lexer.c\"",
          "",
          "[Added Lines]",
          "1012: #line 1012 \"lexer.c\"",
          "1016: #line 1016 \"lexer.c\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1290:   }",
          "1292:  {",
          "1299:   {",
          "",
          "[Removed Lines]",
          "1293: #line 144 \"lexer.l\"",
          "1296: #line 1296 \"lexer.c\"",
          "",
          "[Added Lines]",
          "1292: #line 143 \"lexer.l\"",
          "1295: #line 1295 \"lexer.c\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1361: case 1:",
          "1362: YY_RULE_SETUP",
          "1364: { return _DOT_DOT_;     }",
          "1365:  YY_BREAK",
          "1366: case 2:",
          "1367: YY_RULE_SETUP",
          "1369: { return _LT_;          }",
          "1370:  YY_BREAK",
          "1371: case 3:",
          "1372: YY_RULE_SETUP",
          "1374: { return _GT_;          }",
          "1375:  YY_BREAK",
          "1376: case 4:",
          "1377: YY_RULE_SETUP",
          "1379: { return _LE_;          }",
          "1380:  YY_BREAK",
          "1381: case 5:",
          "1382: YY_RULE_SETUP",
          "1384: { return _GE_;          }",
          "1385:  YY_BREAK",
          "1386: case 6:",
          "1387: YY_RULE_SETUP",
          "1389: { return _EQ_;          }",
          "1390:  YY_BREAK",
          "1391: case 7:",
          "1392: YY_RULE_SETUP",
          "1394: { return _NEQ_;         }",
          "1395:  YY_BREAK",
          "1396: case 8:",
          "1397: YY_RULE_SETUP",
          "1399: { return _SHIFT_LEFT_;  }",
          "1400:  YY_BREAK",
          "1401: case 9:",
          "1402: YY_RULE_SETUP",
          "1404: { return _SHIFT_RIGHT_; }",
          "1405:  YY_BREAK",
          "1406: case 10:",
          "1407: YY_RULE_SETUP",
          "1409: { return _PRIVATE_;     }",
          "1410:  YY_BREAK",
          "1411: case 11:",
          "1412: YY_RULE_SETUP",
          "1414: { return _GLOBAL_;      }",
          "1415:  YY_BREAK",
          "1416: case 12:",
          "1417: YY_RULE_SETUP",
          "1419: { return _RULE_;        }",
          "1420:  YY_BREAK",
          "1421: case 13:",
          "1422: YY_RULE_SETUP",
          "1424: { return _META_;        }",
          "1425:  YY_BREAK",
          "1426: case 14:",
          "1427: YY_RULE_SETUP",
          "1429: { return _STRINGS_;     }",
          "1430:  YY_BREAK",
          "1431: case 15:",
          "1432: YY_RULE_SETUP",
          "1434: { return _ASCII_;       }",
          "1435:  YY_BREAK",
          "1436: case 16:",
          "1437: YY_RULE_SETUP",
          "1439: { return _WIDE_;        }",
          "1440:  YY_BREAK",
          "1441: case 17:",
          "1442: YY_RULE_SETUP",
          "1444: { return _FULLWORD_;    }",
          "1445:  YY_BREAK",
          "1446: case 18:",
          "1447: YY_RULE_SETUP",
          "1449: { return _NOCASE_;      }",
          "1450:  YY_BREAK",
          "1451: case 19:",
          "1452: YY_RULE_SETUP",
          "1454: { return _CONDITION_;   }",
          "1455:  YY_BREAK",
          "1456: case 20:",
          "1457: YY_RULE_SETUP",
          "1459: { return _TRUE_;        }",
          "1460:  YY_BREAK",
          "1461: case 21:",
          "1462: YY_RULE_SETUP",
          "1464: { return _FALSE_;       }",
          "1465:  YY_BREAK",
          "1466: case 22:",
          "1467: YY_RULE_SETUP",
          "1469: { return _NOT_;         }",
          "1470:  YY_BREAK",
          "1471: case 23:",
          "1472: YY_RULE_SETUP",
          "1474: { return _AND_;         }",
          "1475:  YY_BREAK",
          "1476: case 24:",
          "1477: YY_RULE_SETUP",
          "1479: { return _OR_;          }",
          "1480:  YY_BREAK",
          "1481: case 25:",
          "1482: YY_RULE_SETUP",
          "1484: { return _AT_;          }",
          "1485:  YY_BREAK",
          "1486: case 26:",
          "1487: YY_RULE_SETUP",
          "1489: { return _IN_;          }",
          "1490:  YY_BREAK",
          "1491: case 27:",
          "1492: YY_RULE_SETUP",
          "1494: { return _OF_;          }",
          "1495:  YY_BREAK",
          "1496: case 28:",
          "1497: YY_RULE_SETUP",
          "1499: { return _THEM_;        }",
          "1500:  YY_BREAK",
          "1501: case 29:",
          "1502: YY_RULE_SETUP",
          "1504: { return _FOR_;         }",
          "1505:  YY_BREAK",
          "1506: case 30:",
          "1507: YY_RULE_SETUP",
          "1509: { return _ALL_;         }",
          "1510:  YY_BREAK",
          "1511: case 31:",
          "1512: YY_RULE_SETUP",
          "1514: { return _ANY_;         }",
          "1515:  YY_BREAK",
          "1516: case 32:",
          "1517: YY_RULE_SETUP",
          "1519: { return _ENTRYPOINT_;  }",
          "1520:  YY_BREAK",
          "1521: case 33:",
          "1522: YY_RULE_SETUP",
          "1524: { return _FILESIZE_;    }",
          "1525:  YY_BREAK",
          "1526: case 34:",
          "1527: YY_RULE_SETUP",
          "1529: { return _MATCHES_;     }",
          "1530:  YY_BREAK",
          "1531: case 35:",
          "1532: YY_RULE_SETUP",
          "1534: { return _CONTAINS_;    }",
          "1535:  YY_BREAK",
          "1536: case 36:",
          "1537: YY_RULE_SETUP",
          "1539: { return _IMPORT_;      }",
          "1540:  YY_BREAK",
          "1541: case 37:",
          "1542: YY_RULE_SETUP",
          "1544: { BEGIN(comment);       }",
          "1545:  YY_BREAK",
          "1546: case 38:",
          "1547: YY_RULE_SETUP",
          "1549: { BEGIN(INITIAL);       }",
          "1550:  YY_BREAK",
          "1551: case 39:",
          "1553: YY_RULE_SETUP",
          "1555: { /* skip comments */   }",
          "1556:  YY_BREAK",
          "1557: case 40:",
          "1558: YY_RULE_SETUP",
          "1560: { /* skip single-line comments */ }",
          "1561:  YY_BREAK",
          "1562: case 41:",
          "1563: YY_RULE_SETUP",
          "1565: {",
          "1566:                           yyextra->lex_buf_ptr = yyextra->lex_buf;",
          "1567:                           yyextra->lex_buf_len = 0;",
          "",
          "[Removed Lines]",
          "1363: #line 146 \"lexer.l\"",
          "1368: #line 147 \"lexer.l\"",
          "1373: #line 148 \"lexer.l\"",
          "1378: #line 149 \"lexer.l\"",
          "1383: #line 150 \"lexer.l\"",
          "1388: #line 151 \"lexer.l\"",
          "1393: #line 152 \"lexer.l\"",
          "1398: #line 153 \"lexer.l\"",
          "1403: #line 154 \"lexer.l\"",
          "1408: #line 155 \"lexer.l\"",
          "1413: #line 156 \"lexer.l\"",
          "1418: #line 157 \"lexer.l\"",
          "1423: #line 158 \"lexer.l\"",
          "1428: #line 159 \"lexer.l\"",
          "1433: #line 160 \"lexer.l\"",
          "1438: #line 161 \"lexer.l\"",
          "1443: #line 162 \"lexer.l\"",
          "1448: #line 163 \"lexer.l\"",
          "1453: #line 164 \"lexer.l\"",
          "1458: #line 165 \"lexer.l\"",
          "1463: #line 166 \"lexer.l\"",
          "1468: #line 167 \"lexer.l\"",
          "1473: #line 168 \"lexer.l\"",
          "1478: #line 169 \"lexer.l\"",
          "1483: #line 170 \"lexer.l\"",
          "1488: #line 171 \"lexer.l\"",
          "1493: #line 172 \"lexer.l\"",
          "1498: #line 173 \"lexer.l\"",
          "1503: #line 174 \"lexer.l\"",
          "1508: #line 175 \"lexer.l\"",
          "1513: #line 176 \"lexer.l\"",
          "1518: #line 177 \"lexer.l\"",
          "1523: #line 178 \"lexer.l\"",
          "1528: #line 179 \"lexer.l\"",
          "1533: #line 180 \"lexer.l\"",
          "1538: #line 181 \"lexer.l\"",
          "1543: #line 184 \"lexer.l\"",
          "1548: #line 185 \"lexer.l\"",
          "1554: #line 186 \"lexer.l\"",
          "1559: #line 189 \"lexer.l\"",
          "1564: #line 192 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1362: #line 145 \"lexer.l\"",
          "1367: #line 146 \"lexer.l\"",
          "1372: #line 147 \"lexer.l\"",
          "1377: #line 148 \"lexer.l\"",
          "1382: #line 149 \"lexer.l\"",
          "1387: #line 150 \"lexer.l\"",
          "1392: #line 151 \"lexer.l\"",
          "1397: #line 152 \"lexer.l\"",
          "1402: #line 153 \"lexer.l\"",
          "1407: #line 154 \"lexer.l\"",
          "1412: #line 155 \"lexer.l\"",
          "1417: #line 156 \"lexer.l\"",
          "1422: #line 157 \"lexer.l\"",
          "1427: #line 158 \"lexer.l\"",
          "1432: #line 159 \"lexer.l\"",
          "1437: #line 160 \"lexer.l\"",
          "1442: #line 161 \"lexer.l\"",
          "1447: #line 162 \"lexer.l\"",
          "1452: #line 163 \"lexer.l\"",
          "1457: #line 164 \"lexer.l\"",
          "1462: #line 165 \"lexer.l\"",
          "1467: #line 166 \"lexer.l\"",
          "1472: #line 167 \"lexer.l\"",
          "1477: #line 168 \"lexer.l\"",
          "1482: #line 169 \"lexer.l\"",
          "1487: #line 170 \"lexer.l\"",
          "1492: #line 171 \"lexer.l\"",
          "1497: #line 172 \"lexer.l\"",
          "1502: #line 173 \"lexer.l\"",
          "1507: #line 174 \"lexer.l\"",
          "1512: #line 175 \"lexer.l\"",
          "1517: #line 176 \"lexer.l\"",
          "1522: #line 177 \"lexer.l\"",
          "1527: #line 178 \"lexer.l\"",
          "1532: #line 179 \"lexer.l\"",
          "1537: #line 180 \"lexer.l\"",
          "1542: #line 183 \"lexer.l\"",
          "1547: #line 184 \"lexer.l\"",
          "1553: #line 185 \"lexer.l\"",
          "1558: #line 188 \"lexer.l\"",
          "1563: #line 191 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1571: case 42:",
          "1573: YY_RULE_SETUP",
          "1575: { yytext_to_buffer; }",
          "1576:  YY_BREAK",
          "1577: case 43:",
          "1578: YY_RULE_SETUP",
          "1580: {",
          "1582:   if (compiler->include_callback != NULL)",
          "",
          "[Removed Lines]",
          "1574: #line 199 \"lexer.l\"",
          "1579: #line 202 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1573: #line 198 \"lexer.l\"",
          "1578: #line 201 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1665: case YY_STATE_EOF(regexp):",
          "1666: case YY_STATE_EOF(include):",
          "1667: case YY_STATE_EOF(comment):",
          "1669: {",
          "1671:   YR_COMPILER* compiler = yyget_extra(yyscanner);",
          "",
          "[Removed Lines]",
          "1668: #line 286 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1667: #line 285 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1682:  YY_BREAK",
          "1683: case 44:",
          "1684: YY_RULE_SETUP",
          "1686: {",
          "1688:   yylval->c_string = yr_strdup(yytext);",
          "",
          "[Removed Lines]",
          "1685: #line 301 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1684: #line 300 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1695:  YY_BREAK",
          "1696: case 45:",
          "1697: YY_RULE_SETUP",
          "1699: {",
          "1701:   yylval->c_string = yr_strdup(yytext);",
          "",
          "[Removed Lines]",
          "1698: #line 312 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1697: #line 311 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1708:  YY_BREAK",
          "1709: case 46:",
          "1710: YY_RULE_SETUP",
          "1712: {",
          "1714:   yylval->c_string = yr_strdup(yytext);",
          "",
          "[Removed Lines]",
          "1711: #line 323 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1710: #line 322 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1722:  YY_BREAK",
          "1723: case 47:",
          "1724: YY_RULE_SETUP",
          "1726: {",
          "1728:   yylval->c_string = yr_strdup(yytext);",
          "",
          "[Removed Lines]",
          "1725: #line 335 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1724: #line 334 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1736:  YY_BREAK",
          "1737: case 48:",
          "1738: YY_RULE_SETUP",
          "1740: {",
          "1742:   yylval->c_string = yr_strdup(yytext);",
          "",
          "[Removed Lines]",
          "1739: #line 347 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1738: #line 346 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1750:  YY_BREAK",
          "1751: case 49:",
          "1752: YY_RULE_SETUP",
          "1754: {",
          "1756:   char* text = yytext;",
          "",
          "[Removed Lines]",
          "1753: #line 359 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1752: #line 358 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1791:  YY_BREAK",
          "1792: case 50:",
          "1793: YY_RULE_SETUP",
          "1795: {",
          "1797:   if (strlen(yytext) > 128)",
          "",
          "[Removed Lines]",
          "1794: #line 398 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1793: #line 397 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1807:  YY_BREAK",
          "1808: case 51:",
          "1809: YY_RULE_SETUP",
          "1811: {",
          "1813:   char *endptr;",
          "",
          "[Removed Lines]",
          "1810: #line 412 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1809: #line 411 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1845:  YY_BREAK",
          "1846: case 52:",
          "1847: YY_RULE_SETUP",
          "1849: {",
          "1850:   yylval->double_ = atof(yytext);",
          "1851:   return _DOUBLE_;",
          "",
          "[Removed Lines]",
          "1848: #line 447 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1847: #line 446 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1853:  YY_BREAK",
          "1854: case 53:",
          "1855: YY_RULE_SETUP",
          "1857: {",
          "1859:   char *endptr;",
          "",
          "[Removed Lines]",
          "1856: #line 452 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1855: #line 451 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1872:  YY_BREAK",
          "1873: case 54:",
          "1874: YY_RULE_SETUP",
          "1876: {",
          "1878:   char *endptr;",
          "",
          "[Removed Lines]",
          "1875: #line 468 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1874: #line 467 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1891:  YY_BREAK",
          "1892: case 55:",
          "1893: YY_RULE_SETUP",
          "1897:   alloc_sized_string(s, yyextra->lex_buf_len);",
          "",
          "[Removed Lines]",
          "1894: #line 485 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1893: #line 484 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1907:  YY_BREAK",
          "1908: case 56:",
          "1909: YY_RULE_SETUP",
          "1911: {",
          "1913:   lex_check_space_ok(\"\\t\", yyextra->lex_buf_len, LEX_BUF_SIZE);",
          "",
          "[Removed Lines]",
          "1910: #line 499 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1909: #line 498 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1917:  YY_BREAK",
          "1918: case 57:",
          "1919: YY_RULE_SETUP",
          "1921: {",
          "1923:   lex_check_space_ok(\"\\n\", yyextra->lex_buf_len, LEX_BUF_SIZE);",
          "",
          "[Removed Lines]",
          "1920: #line 507 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1919: #line 506 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1927:  YY_BREAK",
          "1928: case 58:",
          "1929: YY_RULE_SETUP",
          "1931: {",
          "1933:   lex_check_space_ok(\"\\\"\", yyextra->lex_buf_len, LEX_BUF_SIZE);",
          "",
          "[Removed Lines]",
          "1930: #line 515 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1929: #line 514 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1937:  YY_BREAK",
          "1938: case 59:",
          "1939: YY_RULE_SETUP",
          "1941: {",
          "1943:   lex_check_space_ok(\"\\\\\", yyextra->lex_buf_len, LEX_BUF_SIZE);",
          "",
          "[Removed Lines]",
          "1940: #line 523 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1939: #line 522 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1947:  YY_BREAK",
          "1948: case 60:",
          "1949: YY_RULE_SETUP",
          "1951: {",
          "1953:    int result;",
          "",
          "[Removed Lines]",
          "1950: #line 531 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1949: #line 530 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1960:  YY_BREAK",
          "1961: case 61:",
          "1962: YY_RULE_SETUP",
          "1964: { yytext_to_buffer; }",
          "1965:  YY_BREAK",
          "1966: case 62:",
          "1968: YY_RULE_SETUP",
          "1970: {",
          "1971:   syntax_error(\"unterminated string\");",
          "1972: }",
          "",
          "[Removed Lines]",
          "1963: #line 542 \"lexer.l\"",
          "1969: #line 545 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1962: #line 541 \"lexer.l\"",
          "1968: #line 544 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1974: case 63:",
          "1976: YY_RULE_SETUP",
          "1978: {",
          "1979:   syntax_error(\"illegal escape sequence\");",
          "1980: }",
          "1981:  YY_BREAK",
          "1982: case 64:",
          "1983: YY_RULE_SETUP",
          "1985: {",
          "1987:   if (yyextra->lex_buf_len > 0)",
          "",
          "[Removed Lines]",
          "1977: #line 549 \"lexer.l\"",
          "1984: #line 554 \"lexer.l\"",
          "",
          "[Added Lines]",
          "1976: #line 548 \"lexer.l\"",
          "1983: #line 553 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "2009:  YY_BREAK",
          "2010: case 65:",
          "2011: YY_RULE_SETUP",
          "2013: {",
          "2015:   lex_check_space_ok(\"/\", yyextra->lex_buf_len, LEX_BUF_SIZE);",
          "",
          "[Removed Lines]",
          "2012: #line 580 \"lexer.l\"",
          "",
          "[Added Lines]",
          "2011: #line 579 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "2019:  YY_BREAK",
          "2020: case 66:",
          "2021: YY_RULE_SETUP",
          "2023: {",
          "2025:   lex_check_space_ok(\"\\\\.\", yyextra->lex_buf_len, LEX_BUF_SIZE);",
          "",
          "[Removed Lines]",
          "2022: #line 588 \"lexer.l\"",
          "",
          "[Added Lines]",
          "2021: #line 587 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "2034:  YY_BREAK",
          "2035: case 67:",
          "2036: YY_RULE_SETUP",
          "2038: { yytext_to_buffer; }",
          "2039:  YY_BREAK",
          "2040: case 68:",
          "2042: YY_RULE_SETUP",
          "2044: {",
          "2045:   syntax_error(\"unterminated regular expression\");",
          "2046: }",
          "2047:  YY_BREAK",
          "2048: case 69:",
          "2049: YY_RULE_SETUP",
          "2051: {",
          "2053:   yyextra->lex_buf_ptr = yyextra->lex_buf;",
          "",
          "[Removed Lines]",
          "2037: #line 601 \"lexer.l\"",
          "2043: #line 604 \"lexer.l\"",
          "2050: #line 609 \"lexer.l\"",
          "",
          "[Added Lines]",
          "2036: #line 600 \"lexer.l\"",
          "2042: #line 603 \"lexer.l\"",
          "2049: #line 608 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "2057:  YY_BREAK",
          "2058: case 70:",
          "2059: YY_RULE_SETUP",
          "2061: {",
          "2063:   yyextra->lex_buf_ptr = yyextra->lex_buf;",
          "",
          "[Removed Lines]",
          "2060: #line 617 \"lexer.l\"",
          "",
          "[Added Lines]",
          "2059: #line 616 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "2068: case 71:",
          "2070: YY_RULE_SETUP",
          "2072: {",
          "",
          "[Removed Lines]",
          "2071: #line 625 \"lexer.l\"",
          "",
          "[Added Lines]",
          "2070: #line 624 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "2084: case 72:",
          "2086: YY_RULE_SETUP",
          "2089:  YY_BREAK",
          "2090: case 73:",
          "2091: YY_RULE_SETUP",
          "2093: {",
          "2095:   if (yytext[0] >= 32 && yytext[0] < 127)",
          "",
          "[Removed Lines]",
          "2087: #line 638 \"lexer.l\"",
          "2092: #line 640 \"lexer.l\"",
          "",
          "[Added Lines]",
          "2086: #line 637 \"lexer.l\"",
          "2091: #line 639 \"lexer.l\"",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "2104:  YY_BREAK",
          "2105: case 74:",
          "2106: YY_RULE_SETUP",
          "2108: ECHO;",
          "2109:  YY_BREAK",
          "2112:  case YY_END_OF_BUFFER:",
          "2113:   {",
          "",
          "[Removed Lines]",
          "2107: #line 652 \"lexer.l\"",
          "2110: #line 2110 \"lexer.c\"",
          "",
          "[Added Lines]",
          "2106: #line 651 \"lexer.l\"",
          "2109: #line 2109 \"lexer.c\"",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "3257: #define YYTABLES_NAME \"yytables\"",
          "",
          "[Removed Lines]",
          "3259: #line 652 \"lexer.l\"",
          "",
          "[Added Lines]",
          "3258: #line 651 \"lexer.l\"",
          "",
          "---------------"
        ],
        "libyara/lexer.l||libyara/lexer.l": [
          "File: libyara/lexer.l -> libyara/lexer.l",
          "--- Hunk 1 ---",
          "[Context before]",
          "71:     { \\",
          "72:       compiler->last_result = error_code; \\",
          "73:       yyerror(yyscanner, compiler, NULL); \\",
          "75:     }",
          "77: #define syntax_error(error_msg) \\",
          "",
          "[Removed Lines]",
          "74:       yyterminate(); \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/test-rules.c||tests/test-rules.c": [
          "File: tests/test-rules.c -> tests/test-rules.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "187:   assert_true_rule(",
          "188:       \"rule test { condition: 1--1 == 2}\", NULL);",
          "190:   assert_true_rule(",
          "191:       \"rule test { condition: -0x01 == -1}\", NULL);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "190:   assert_true_rule(",
          "191:       \"rule test { condition: 2 * -2 == -4}\", NULL);",
          "193:   assert_true_rule(",
          "194:       \"rule test { condition: -4 * 2 == -8}\", NULL);",
          "196:   assert_true_rule(",
          "197:       \"rule test { condition: -4 * -4 == 16}\", NULL);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "202:   assert_error(  // integer too long",
          "203:       \"rule test { condition: 9223372036854775808 > 0 }\",",
          "206:   assert_error(  // integer too long",
          "207:       \"rule test { condition: 9007199254740992KB > 0 }\",",
          "210:   assert_error(  // integer too long",
          "214:   assert_error(  // integer too long",
          "218:   assert_error(  // integer too long",
          "222:   assert_error(  // integer overflow",
          "226:   assert_error(  // integer overflow",
          "230:   assert_error(  // integer overflow",
          "234:   assert_error(  // integer overflow",
          "238: }",
          "",
          "[Removed Lines]",
          "204:       ERROR_SYNTAX_ERROR);",
          "208:       ERROR_SYNTAX_ERROR);",
          "211:      \"rule test { condition: 8796093022208MB > 0 }\",",
          "212:      ERROR_SYNTAX_ERROR);",
          "215:     \"rule test { condition: 0x8000000000000000 > 0 }\",",
          "216:     ERROR_SYNTAX_ERROR);",
          "219:     \"rule test { condition: 0o1000000000000000000000 > 0 }\",",
          "220:     ERROR_SYNTAX_ERROR);",
          "223:     \"rule test { condition: 0x7FFFFFFFFFFFFFFF + 1 > 0 }\",",
          "224:     ERROR_INTEGER_OVERFLOW);",
          "227:     \"rule test { condition: 9223372036854775807 + 1 > 0 }\",",
          "228:     ERROR_INTEGER_OVERFLOW);",
          "231:     \"rule test { condition: -9223372036854775807 - 2 > 0 }\",",
          "232:     ERROR_INTEGER_OVERFLOW);",
          "235:     \"rule test { condition: 0x4000000000000000 * 2 }\",",
          "236:     ERROR_INTEGER_OVERFLOW);",
          "",
          "[Added Lines]",
          "213:       ERROR_INTEGER_OVERFLOW);",
          "217:       ERROR_INTEGER_OVERFLOW);",
          "220:       \"rule test { condition: 8796093022208MB > 0 }\",",
          "221:       ERROR_INTEGER_OVERFLOW);",
          "224:      \"rule test { condition: 0x8000000000000000 > 0 }\",",
          "225:      ERROR_INTEGER_OVERFLOW);",
          "228:      \"rule test { condition: 0o1000000000000000000000 > 0 }\",",
          "229:      ERROR_INTEGER_OVERFLOW);",
          "231:   assert_error(  // integer overflow",
          "232:      \"rule test { condition: 0x7FFFFFFFFFFFFFFF + 1 > 0 }\",",
          "233:      ERROR_INTEGER_OVERFLOW);",
          "236:      \"rule test { condition: 9223372036854775807 + 1 > 0 }\",",
          "237:      ERROR_INTEGER_OVERFLOW);",
          "240:      \"rule test { condition: -9223372036854775807 - 2 > 0 }\",",
          "241:      ERROR_INTEGER_OVERFLOW);",
          "244:      \"rule test { condition: -2 + -9223372036854775807 > 0 }\",",
          "245:      ERROR_INTEGER_OVERFLOW);",
          "248:      \"rule test { condition: 1 - -9223372036854775807 > 0 }\",",
          "249:      ERROR_INTEGER_OVERFLOW);",
          "251:   assert_error(  // integer overflow",
          "252:      \"rule test { condition: 0x4000000000000000 * 2 }\",",
          "253:      ERROR_INTEGER_OVERFLOW);",
          "255:   assert_error(  // integer overflow",
          "256:      \"rule test { condition: 4611686018427387904 * 2 }\",",
          "257:      ERROR_INTEGER_OVERFLOW);",
          "259:   assert_error(  // integer overflow",
          "260:      \"rule test { condition: 4611686018427387904 * -2 }\",",
          "261:      ERROR_INTEGER_OVERFLOW);",
          "263:   assert_error(  // integer overflow",
          "264:      \"rule test { condition: -4611686018427387904 * 2 }\",",
          "265:      ERROR_INTEGER_OVERFLOW);",
          "267:   assert_error(  // integer overflow",
          "268:      \"rule test { condition: -4611686018427387904 * -2 }\",",
          "269:      ERROR_INTEGER_OVERFLOW);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "784dba7c83043c2220e3daa2ebfdc9c44aefe54a",
      "candidate_info": {
        "commit_hash": "784dba7c83043c2220e3daa2ebfdc9c44aefe54a",
        "repo": "VirusTotal/yara",
        "commit_url": "https://github.com/VirusTotal/yara/commit/784dba7c83043c2220e3daa2ebfdc9c44aefe54a",
        "files": [
          "libyara/grammar.c",
          "libyara/re_lexer.c"
        ],
        "message": "Update grammars",
        "before_after_code_files": [
          "libyara/grammar.c||libyara/grammar.c",
          "libyara/re_lexer.c||libyara/re_lexer.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libyara/grammar.c||libyara/grammar.c"
          ],
          "candidate": [
            "libyara/grammar.c||libyara/grammar.c"
          ]
        }
      },
      "candidate_diff": {
        "libyara/grammar.c||libyara/grammar.c": [
          "File: libyara/grammar.c -> libyara/grammar.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "612:      472,   485,   502,   503,   509,   508,   524,   523,   539,   553,",
          "613:      554,   559,   560,   561,   562,   567,   652,   698,   756,   801,",
          "614:      802,   806,   831,   867,   913,   935,   944,   953,   968,   980,",
          "622: };",
          "623: #endif",
          "",
          "[Removed Lines]",
          "615:      994,  1007,  1018,  1024,  1054,  1023,  1168,  1167,  1246,  1252,",
          "616:     1259,  1258,  1321,  1320,  1381,  1390,  1399,  1408,  1417,  1426,",
          "617:     1435,  1439,  1447,  1448,  1453,  1475,  1487,  1503,  1502,  1508,",
          "618:     1519,  1520,  1525,  1532,  1543,  1544,  1548,  1556,  1560,  1570,",
          "619:     1584,  1600,  1610,  1619,  1644,  1656,  1668,  1684,  1696,  1712,",
          "620:     1757,  1776,  1794,  1812,  1830,  1856,  1874,  1884,  1894,  1904,",
          "621:     1914,  1924,  1934",
          "",
          "[Added Lines]",
          "615:      994,  1007,  1018,  1027,  1057,  1026,  1171,  1170,  1249,  1255,",
          "616:     1262,  1261,  1324,  1323,  1384,  1393,  1402,  1411,  1420,  1429,",
          "617:     1438,  1442,  1450,  1451,  1456,  1478,  1490,  1506,  1505,  1511,",
          "618:     1522,  1523,  1528,  1535,  1546,  1547,  1551,  1559,  1563,  1573,",
          "619:     1587,  1603,  1613,  1622,  1647,  1659,  1671,  1687,  1699,  1715,",
          "620:     1760,  1779,  1797,  1815,  1833,  1859,  1877,  1887,  1897,  1907,",
          "621:     1917,  1927,  1937",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2587:   case 62:",
          "2589:     {",
          "2592:       }",
          "2594:     break;",
          "2596:   case 63:",
          "2598:     {",
          "2599:         int var_index;",
          "",
          "[Removed Lines]",
          "2590:         compiler->loop_depth--;",
          "2591:         compiler->loop_identifier[compiler->loop_depth] = NULL;",
          "",
          "[Added Lines]",
          "2590:         if (compiler->loop_depth > 0)",
          "2591:         {",
          "2592:           compiler->loop_depth--;",
          "2593:           compiler->loop_identifier[compiler->loop_depth] = NULL;",
          "2594:         }",
          "",
          "---------------"
        ],
        "libyara/re_lexer.c||libyara/re_lexer.c": [
          "File: libyara/re_lexer.c -> libyara/re_lexer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: #define FLEX_SCANNER",
          "10: #define YY_FLEX_MAJOR_VERSION 2",
          "11: #define YY_FLEX_MINOR_VERSION 6",
          "13: #if YY_FLEX_SUBMINOR_VERSION > 0",
          "14: #define FLEX_BETA",
          "15: #endif",
          "",
          "[Removed Lines]",
          "12: #define YY_FLEX_SUBMINOR_VERSION 1",
          "",
          "[Added Lines]",
          "12: #define YY_FLEX_SUBMINOR_VERSION 0",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "96: #else",
          "98: #endif",
          "",
          "[Removed Lines]",
          "92: #define yyconst const",
          "94: #if defined(__GNUC__) && __GNUC__ >= 3",
          "95: #define yynoreturn __attribute__((__noreturn__))",
          "97: #define yynoreturn",
          "",
          "[Added Lines]",
          "91: #ifdef __cplusplus",
          "94: #define YY_USE_CONST",
          "99: #if defined (__STDC__)",
          "101: #define YY_USE_CONST",
          "106: #ifdef YY_USE_CONST",
          "107: #define yyconst const",
          "109: #define yyconst",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "229:  int yy_buf_size;",
          "234:  int yy_n_chars;",
          "",
          "[Added Lines]",
          "241:  yy_size_t yy_buf_size;",
          "246:  yy_size_t yy_n_chars;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "311: YY_BUFFER_STATE re_yy_scan_buffer (char *base,yy_size_t size ,yyscan_t yyscanner );",
          "312: YY_BUFFER_STATE re_yy_scan_string (yyconst char *yy_str ,yyscan_t yyscanner );",
          "315: void *re_yyalloc (yy_size_t ,yyscan_t yyscanner );",
          "316: void *re_yyrealloc (void *,yy_size_t ,yyscan_t yyscanner );",
          "",
          "[Removed Lines]",
          "313: YY_BUFFER_STATE re_yy_scan_bytes (yyconst char *bytes,int len ,yyscan_t yyscanner );",
          "",
          "[Added Lines]",
          "325: YY_BUFFER_STATE re_yy_scan_bytes (yyconst char *bytes,yy_size_t len ,yyscan_t yyscanner );",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "354: static yy_state_type yy_get_previous_state (yyscan_t yyscanner );",
          "355: static yy_state_type yy_try_NUL_trans (yy_state_type current_state  ,yyscan_t yyscanner);",
          "356: static int yy_get_next_buffer (yyscan_t yyscanner );",
          "362: #define YY_DO_BEFORE_ACTION \\",
          "363:  yyg->yytext_ptr = yy_bp; \\",
          "365:  yyg->yy_hold_char = *yy_cp; \\",
          "367:  yyg->yy_c_buf_p = yy_cp;",
          "",
          "[Removed Lines]",
          "357: static void yynoreturn yy_fatal_error (yyconst char* msg ,yyscan_t yyscanner );",
          "364:  yyleng = (int) (yy_cp - yy_bp); \\",
          "",
          "[Added Lines]",
          "369: #if defined(__GNUC__) && __GNUC__ >= 3",
          "370: __attribute__((__noreturn__))",
          "371: #endif",
          "372: static void yy_fatal_error (yyconst char msg[] ,yyscan_t yyscanner );",
          "379:  yyleng = (size_t) (yy_cp - yy_bp); \\",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "568: #define YY_NO_UNISTD_H 1",
          "572: #define INITIAL 0",
          "573: #define char_class 1",
          "",
          "[Removed Lines]",
          "570: #line 571 \"re_lexer.c\"",
          "",
          "[Added Lines]",
          "585: #line 586 \"re_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "599:     char yy_hold_char;",
          "602:     char *yy_c_buf_p;",
          "603:     int yy_init;",
          "604:     int yy_start;",
          "",
          "[Removed Lines]",
          "600:     int yy_n_chars;",
          "601:     int yyleng_r;",
          "",
          "[Added Lines]",
          "615:     yy_size_t yy_n_chars;",
          "616:     yy_size_t yyleng_r;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "652: void re_yyset_out  (FILE * _out_str ,yyscan_t yyscanner );",
          "656: char *re_yyget_text (yyscan_t yyscanner );",
          "",
          "[Removed Lines]",
          "654:    int re_yyget_leng (yyscan_t yyscanner );",
          "",
          "[Added Lines]",
          "669: yy_size_t re_yyget_leng (yyscan_t yyscanner );",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "720: #endif",
          "",
          "[Removed Lines]",
          "719: #define ECHO do { if (fwrite( yytext, (size_t) yyleng, 1, yyout )) {} } while (0)",
          "",
          "[Added Lines]",
          "734: #define ECHO do { if (fwrite( yytext, yyleng, 1, yyout )) {} } while (0)",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "740:  else \\",
          "741:   { \\",
          "742:   errno=0; \\",
          "744:    { \\",
          "745:    if( errno != EINTR) \\",
          "746:     { \\",
          "",
          "[Removed Lines]",
          "743:   while ( (result = (int) fread(buf, 1, max_size, yyin))==0 && ferror(yyin)) \\",
          "",
          "[Added Lines]",
          "758:   while ( (result = fread(buf, 1, max_size, yyin))==0 && ferror(yyin)) \\",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "844: #line 99 \"re_lexer.l\"",
          "850:   {",
          "",
          "[Removed Lines]",
          "847: #line 848 \"re_lexer.c\"",
          "",
          "[Added Lines]",
          "862: #line 863 \"re_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "874:     if ( yy_current_state >= 45 )",
          "875:      yy_c = yy_meta[(unsigned int) yy_c];",
          "876:     }",
          "878:    ++yy_cp;",
          "879:    }",
          "880:   while ( yy_current_state != 44 );",
          "",
          "[Removed Lines]",
          "877:    yy_current_state = yy_nxt[yy_base[yy_current_state] + (flex_int16_t) yy_c];",
          "",
          "[Added Lines]",
          "892:    yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1339: #line 464 \"re_lexer.l\"",
          "1340: ECHO;",
          "1341:  YY_BREAK",
          "1344:  case YY_END_OF_BUFFER:",
          "1345:   {",
          "",
          "[Removed Lines]",
          "1342: #line 1343 \"re_lexer.c\"",
          "",
          "[Added Lines]",
          "1357: #line 1358 \"re_lexer.c\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1527:  else",
          "1528:   {",
          "1530:    YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;",
          "1532:   while ( num_to_read <= 0 )",
          "",
          "[Removed Lines]",
          "1529:    int num_to_read =",
          "",
          "[Added Lines]",
          "1544:    yy_size_t num_to_read =",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1541:    if ( b->yy_is_our_buffer )",
          "1542:     {",
          "1545:     if ( new_size <= 0 )",
          "1546:      b->yy_buf_size += b->yy_buf_size / 8;",
          "",
          "[Removed Lines]",
          "1543:     int new_size = b->yy_buf_size * 2;",
          "",
          "[Added Lines]",
          "1558:     yy_size_t new_size = b->yy_buf_size * 2;",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1553:     }",
          "1554:    else",
          "1558:    if ( ! b->yy_ch_buf )",
          "1559:     YY_FATAL_ERROR(",
          "",
          "[Removed Lines]",
          "1556:     b->yy_ch_buf = NULL;",
          "",
          "[Added Lines]",
          "1571:     b->yy_ch_buf = 0;",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1595:  else",
          "1596:   ret_val = EOB_ACT_CONTINUE_SCAN;",
          "1601:   YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) re_yyrealloc((void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf,new_size ,yyscanner );",
          "1602:   if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )",
          "1603:    YY_FATAL_ERROR( \"out of dynamic memory in yy_get_next_buffer()\" );",
          "",
          "[Removed Lines]",
          "1598:  if ((int) (yyg->yy_n_chars + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {",
          "1600:   int new_size = yyg->yy_n_chars + number_to_move + (yyg->yy_n_chars >> 1);",
          "",
          "[Added Lines]",
          "1613:  if ((yy_size_t) (yyg->yy_n_chars + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {",
          "1615:   yy_size_t new_size = yyg->yy_n_chars + number_to_move + (yyg->yy_n_chars >> 1);",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1636:    if ( yy_current_state >= 45 )",
          "1637:     yy_c = yy_meta[(unsigned int) yy_c];",
          "1638:    }",
          "1640:   }",
          "1642:  return yy_current_state;",
          "",
          "[Removed Lines]",
          "1639:   yy_current_state = yy_nxt[yy_base[yy_current_state] + (flex_int16_t) yy_c];",
          "",
          "[Added Lines]",
          "1654:   yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1665:   if ( yy_current_state >= 45 )",
          "1666:    yy_c = yy_meta[(unsigned int) yy_c];",
          "1667:   }",
          "1669:  yy_is_jam = (yy_current_state == 44);",
          "1671:  (void)yyg;",
          "",
          "[Removed Lines]",
          "1668:  yy_current_state = yy_nxt[yy_base[yy_current_state] + (flex_int16_t) yy_c];",
          "",
          "[Added Lines]",
          "1683:  yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1702:   else",
          "1705:    ++yyg->yy_c_buf_p;",
          "1707:    switch ( yy_get_next_buffer( yyscanner ) )",
          "",
          "[Removed Lines]",
          "1704:    int offset = yyg->yy_c_buf_p - yyg->yytext_ptr;",
          "",
          "[Added Lines]",
          "1719:    yy_size_t offset = yyg->yy_c_buf_p - yyg->yytext_ptr;",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1725:     case EOB_ACT_END_OF_FILE:",
          "1726:      {",
          "1727:      if ( re_yywrap(yyscanner ) )",
          "1730:      if ( ! yyg->yy_did_buffer_switch_on_eof )",
          "1731:       YY_NEW_FILE;",
          "",
          "[Removed Lines]",
          "1728:       return 0;",
          "",
          "[Added Lines]",
          "1743:       return EOF;",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1989: static void re_yyensure_buffer_stack (yyscan_t yyscanner)",
          "1990: {",
          "1992:     struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;",
          "1994:  if (!yyg->yy_buffer_stack) {",
          "",
          "[Removed Lines]",
          "1991:  int num_to_alloc;",
          "",
          "[Added Lines]",
          "2006:  yy_size_t num_to_alloc;",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "2001:   yyg->yy_buffer_stack = (struct yy_buffer_state**)re_yyalloc",
          "2002:         (num_to_alloc * sizeof(struct yy_buffer_state*)",
          "2003:         , yyscanner);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2015:   num_to_alloc = 1; // After all that talk, this was set to 1 anyways...",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "2044:       base[size-2] != YY_END_OF_BUFFER_CHAR ||",
          "2045:       base[size-1] != YY_END_OF_BUFFER_CHAR )",
          "2049:  b = (YY_BUFFER_STATE) re_yyalloc(sizeof( struct yy_buffer_state ) ,yyscanner );",
          "2050:  if ( ! b )",
          "",
          "[Removed Lines]",
          "2047:   return NULL;",
          "",
          "[Added Lines]",
          "2062:   return 0;",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "2054:  b->yy_buf_pos = b->yy_ch_buf = base;",
          "2055:  b->yy_is_our_buffer = 0;",
          "2057:  b->yy_n_chars = b->yy_buf_size;",
          "2058:  b->yy_is_interactive = 0;",
          "2059:  b->yy_at_bol = 1;",
          "",
          "[Removed Lines]",
          "2056:  b->yy_input_file = NULL;",
          "",
          "[Added Lines]",
          "2071:  b->yy_input_file = 0;",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "2076: YY_BUFFER_STATE re_yy_scan_string (yyconst char * yystr , yyscan_t yyscanner)",
          "2077: {",
          "2080: }",
          "",
          "[Removed Lines]",
          "2079:  return re_yy_scan_bytes(yystr,(int) strlen(yystr) ,yyscanner);",
          "",
          "[Added Lines]",
          "2094:  return re_yy_scan_bytes(yystr,strlen(yystr) ,yyscanner);",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "2090: {",
          "2091:  YY_BUFFER_STATE b;",
          "2092:  char *buf;",
          "",
          "[Removed Lines]",
          "2089: YY_BUFFER_STATE re_yy_scan_bytes  (yyconst char * yybytes, int  _yybytes_len , yyscan_t yyscanner)",
          "",
          "[Added Lines]",
          "2104: YY_BUFFER_STATE re_yy_scan_bytes  (yyconst char * yybytes, yy_size_t  _yybytes_len , yyscan_t yyscanner)",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "2094:  yy_size_t i;",
          "2098:  buf = (char *) re_yyalloc(n ,yyscanner );",
          "2099:  if ( ! buf )",
          "2100:   YY_FATAL_ERROR( \"out of dynamic memory in re_yy_scan_bytes()\" );",
          "",
          "[Removed Lines]",
          "2097:  n = (yy_size_t) _yybytes_len + 2;",
          "",
          "[Added Lines]",
          "2112:  n = _yybytes_len + 2;",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "2120: #define YY_EXIT_FAILURE 2",
          "2121: #endif",
          "2124: {",
          "2125:  struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;",
          "2126:  (void)yyg;",
          "",
          "[Removed Lines]",
          "2123: static void yynoreturn yy_fatal_error (yyconst char* msg , yyscan_t yyscanner)",
          "",
          "[Added Lines]",
          "2138: static void yy_fatal_error (yyconst char* msg , yyscan_t yyscanner)",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "2207: {",
          "2208:     struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;",
          "2209:     return yyleng;",
          "",
          "[Removed Lines]",
          "2206: int re_yyget_leng  (yyscan_t yyscanner)",
          "",
          "[Added Lines]",
          "2221: yy_size_t re_yyget_leng  (yyscan_t yyscanner)",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "2378:     yyg->yy_buffer_stack_top = 0;",
          "2379:     yyg->yy_buffer_stack_max = 0;",
          "2381:     yyg->yy_init = 0;",
          "2382:     yyg->yy_start = 0;",
          "",
          "[Removed Lines]",
          "2377:     yyg->yy_buffer_stack = NULL;",
          "2380:     yyg->yy_c_buf_p = NULL;",
          "",
          "[Added Lines]",
          "2392:     yyg->yy_buffer_stack = 0;",
          "2395:     yyg->yy_c_buf_p = (char *) 0;",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "2390:     yyin = stdin;",
          "2391:     yyout = stdout;",
          "2392: #else",
          "2395: #endif",
          "",
          "[Removed Lines]",
          "2393:     yyin = NULL;",
          "2394:     yyout = NULL;",
          "",
          "[Added Lines]",
          "2408:     yyin = (FILE *) 0;",
          "2409:     yyout = (FILE *) 0;",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "2461: {",
          "2462:  struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;",
          "2463:  (void)yyg;",
          "2465: }",
          "2467: void *re_yyrealloc  (void * ptr, yy_size_t  size , yyscan_t yyscanner)",
          "",
          "[Removed Lines]",
          "2464:  return malloc(size);",
          "",
          "[Added Lines]",
          "2479:  return (void *) malloc( size );",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "2480: }",
          "2482: void re_yyfree (void * ptr , yyscan_t yyscanner)",
          "",
          "[Removed Lines]",
          "2479:  return realloc(ptr, size);",
          "",
          "[Added Lines]",
          "2494:  return (void *) realloc( (char *) ptr, size );",
          "",
          "---------------"
        ]
      }
    }
  ]
}