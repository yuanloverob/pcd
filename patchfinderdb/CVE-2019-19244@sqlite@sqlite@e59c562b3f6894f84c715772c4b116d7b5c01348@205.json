{
  "cve_id": "CVE-2019-19244",
  "cve_desc": "sqlite3Select in select.c in SQLite 3.30.1 allows a crash if a sub-select uses both DISTINCT and window functions, and also has certain ORDER BY usage.",
  "repo": "sqlite/sqlite",
  "patch_hash": "e59c562b3f6894f84c715772c4b116d7b5c01348",
  "patch_info": {
    "commit_hash": "e59c562b3f6894f84c715772c4b116d7b5c01348",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/e59c562b3f6894f84c715772c4b116d7b5c01348",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/window1.test"
    ],
    "message": "Fix a crash that could occur if a sub-select that uses both DISTINCT and window functions also used an ORDER BY that is the same as its select list.\n\nFossilOrigin-Name: bcdd66c1691955c697f3d756c2b035acfe98f6aad72e90b0021bab6e9023b3ba",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/window1.test||test/window1.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 6a64fb6a2da6c98f1e87b55ad5689967e1db4eae2e08345471d95e28cd567e0f",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "6065:   if( (p->selFlags & (SF_Distinct|SF_Aggregate))==SF_Distinct",
      "6066:    && sqlite3ExprListCompare(sSort.pOrderBy, pEList, -1)==0",
      "6067:   ){",
      "6068:     p->selFlags &= ~SF_Distinct;",
      "6069:     pGroupBy = p->pGroupBy = sqlite3ExprListDup(db, pEList, 0);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6067:    && p->pWin==0",
      "",
      "---------------"
    ],
    "test/window1.test||test/window1.test": [
      "File: test/window1.test -> test/window1.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "1243:   ALTER TABLE a0 RENAME TO S;",
      "1244: } {1 {error in view a: 1st ORDER BY term does not match any column in the result set}}",
      "1246: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1246: reset_db",
      "1247: do_execsql_test 33.1 {",
      "1248:   CREATE TABLE t1(aa, bb);",
      "1249:   INSERT INTO t1 VALUES(1, 2);",
      "1250:   INSERT INTO t1 VALUES(5, 6);",
      "1251:   CREATE TABLE t2(x);",
      "1252:   INSERT INTO t2 VALUES(1);",
      "1253: }",
      "1254: do_execsql_test 33.2 {",
      "1255:   SELECT (SELECT DISTINCT sum(aa) OVER() FROM t1 ORDER BY 1), x FROM t2",
      "1256:   ORDER BY 1;",
      "1257: } {6 1}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ec9b2a132b7bd9d8e8d4890161d7ddbc79877729",
      "candidate_info": {
        "commit_hash": "ec9b2a132b7bd9d8e8d4890161d7ddbc79877729",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/ec9b2a132b7bd9d8e8d4890161d7ddbc79877729",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/os_unix.c"
        ],
        "message": "Call ioctl() with the correct signature on both Android and stock Linux.\n\nFossilOrigin-Name: 68e12e063fe41bcd65cf8a120f838b9b1723ed803ea85240fe0f2145b78df2d7",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/os_unix.c||src/os_unix.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 0fff105a3e501fd91877d67761459eb0323e6cf79916242027cce0d05697f554",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/os_unix.c||src/os_unix.c": [
          "File: src/os_unix.c -> src/os_unix.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "521: #if defined(__linux__) && defined(SQLITE_ENABLE_BATCH_ATOMIC_WRITE)",
          "522: # ifdef __ANDROID__",
          "523:   { \"ioctl\", (sqlite3_syscall_ptr)(int(*)(int, int, ...))ioctl, 0 },",
          "524: # else",
          "525:   { \"ioctl\",         (sqlite3_syscall_ptr)ioctl,          0 },",
          "526: # endif",
          "527: #else",
          "528:   { \"ioctl\",         (sqlite3_syscall_ptr)0,              0 },",
          "529: #endif",
          "",
          "[Removed Lines]",
          "530: #define osIoctl ((int(*)(int,int,...))aSyscall[28].pCurrent)",
          "",
          "[Added Lines]",
          "524: #define osIoctl ((int(*)(int,int,...))aSyscall[28].pCurrent)",
          "527: #define osIoctl ((int(*)(int,unsigned long,...))aSyscall[28].pCurrent)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "49b0572302bd0117210dff47021077b72e8829a9",
      "candidate_info": {
        "commit_hash": "49b0572302bd0117210dff47021077b72e8829a9",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/49b0572302bd0117210dff47021077b72e8829a9",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/msvc.h"
        ],
        "message": "Fix for 8-byte alignment asserts that can trigger in some circumstances with 32-bit MSVC.\n\nFossilOrigin-Name: 4c02832e0c4351ced9d2391f09ee071c65a74b85a0509bf58f045afeb166f48c",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/msvc.h||src/msvc.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 930842470da27d72650033ef2c1df413e70f7c40eb46f91027b35f5ee156af38",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/msvc.h||src/msvc.h": [
          "File: src/msvc.h -> src/msvc.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: #pragma warning(disable : 4706)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36: #if !defined(_WIN64)",
          "37: #undef SQLITE_4_BYTE_ALIGNED_MALLOC",
          "38: #define SQLITE_4_BYTE_ALIGNED_MALLOC",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "af5a2e166dfce85cfa195a9e48b2786b9a9e51b7",
      "candidate_info": {
        "commit_hash": "af5a2e166dfce85cfa195a9e48b2786b9a9e51b7",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/af5a2e166dfce85cfa195a9e48b2786b9a9e51b7",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/shell.c.in"
        ],
        "message": "Improvements to the help text in the CLI.\n\nFossilOrigin-Name: 919fec91dac4cb0d5f67404d4f47a65f353d752f5da0aa7b071bf3caf19e0522",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/shell.c.in||src/shell.c.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: f11c89595dc65f89be6df62830c8cddd3933acfd4baaecd348ecd99e71db5831",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/shell.c.in||src/shell.c.in": [
          "File: src/shell.c.in -> src/shell.c.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "3452:   \".archive ...             Manage SQL archives\",",
          "3453:   \"   Each command must have exactly one of the following options:\",",
          "3454:   \"     -c, --create               Create a new archive\",",
          "3456:   \"     -i, --insert               Like -u but always add even if mtime unchanged\",",
          "3457:   \"     -t, --list                 List contents of archive\",",
          "3458:   \"     -x, --extract              Extract files from archive\",",
          "",
          "[Removed Lines]",
          "3455:   \"     -u, --update               Add files or update files with newer mtime\",",
          "",
          "[Added Lines]",
          "3455:   \"     -u, --update               Add files or update files with changed mtime\",",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "16fd04cdbe01c2cd9f90383592555bae7f4d9927",
      "candidate_info": {
        "commit_hash": "16fd04cdbe01c2cd9f90383592555bae7f4d9927",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/16fd04cdbe01c2cd9f90383592555bae7f4d9927",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/tokenize.c",
          "src/update.c",
          "test/normalize.test"
        ],
        "message": "Enhancements to SQL query normalization for UPDATE statements.\n\nFossilOrigin-Name: bba975c7af3de9aeb5c62fb8b05d61b96e4ecd0b030008442bbdd345e1e5f134",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/tokenize.c||src/tokenize.c",
          "src/update.c||src/update.c",
          "test/normalize.test||test/normalize.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: eea1e7aa57e74c4329003f4550168e2aed9e33d2301a3ba84b10781a9cebbc1b",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/tokenize.c||src/tokenize.c": [
          "File: src/tokenize.c -> src/tokenize.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "801:       }",
          "802:       case TK_RP: {",
          "803:         if( iStartIN>0 && nParen==nParenAtIN ){",
          "805:           pStr->nChar = iStartIN+1;",
          "806:           sqlite3_str_append(pStr, \"?,?,?\", 5);",
          "807:           iStartIN = 0;",
          "",
          "[Removed Lines]",
          "804:           assert( pStr->nChar>=iStartIN );",
          "",
          "[Added Lines]",
          "804:           assert( pStr->nChar>=(u32)iStartIN );",
          "",
          "---------------"
        ],
        "src/update.c||src/update.c": [
          "File: src/update.c -> src/update.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "289:   sNC.uNC.pUpsert = pUpsert;",
          "290:   sNC.ncFlags = NC_UUpsert;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "293:   v = sqlite3GetVdbe(pParse);",
          "294:   if( v==0 ) goto update_cleanup;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "386:     memset(aToOpen, 1, nIdx+1);",
          "387:   }",
          "392:   if( pParse->nested==0 ) sqlite3VdbeCountChanges(v);",
          "393:   sqlite3BeginWriteOperation(pParse, pTrigger || hasFK, iDb);",
          "",
          "[Removed Lines]",
          "390:   v = sqlite3GetVdbe(pParse);",
          "391:   if( v==0 ) goto update_cleanup;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/normalize.test||test/normalize.test": [
          "File: test/normalize.test -> test/normalize.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "347:   {SELECT x FROM t1 WHERE x IN ([x] IS NOT NULL, NULL, 1, 'a', \"b\", x'00');}",
          "348:   0x2",
          "349:   {0 {SELECT x FROM t1 WHERE x IN(x IS NOT NULL,?,?,?,b,?);}}",
          "350: } {",
          "351:   do_test $tnum {",
          "352:     set code [catch {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "351:   800",
          "352:   {ATTACH \"normalize800.db\" AS somefile;}",
          "353:   0x2",
          "354:   {0 {ATTACH\"normalize800.db\"AS somefile;}}",
          "356:   810",
          "357:   {ATTACH DATABASE \"normalize810.db\" AS somefile;}",
          "358:   0x2",
          "359:   {0 {ATTACH DATABASE\"normalize810.db\"AS somefile;}}",
          "361:   900",
          "362:   {INSERT INTO t1 (x) VALUES(\"sl1\"), (1), (\"sl2\"), ('i');}",
          "363:   0x2",
          "364:   {0 {INSERT INTO t1(x)VALUES(?),(?),(?),(?);}}",
          "366:   910",
          "367:   {UPDATE t1 SET x = \"sl1\" WHERE x IN (1, \"sl2\", 'i');}",
          "368:   0x2",
          "369:   {0 {UPDATE t1 SET x=?WHERE x IN(?,?,?);}}",
          "371:   920",
          "372:   {UPDATE t1 SET x = \"y\" WHERE x IN (1, \"sl1\", 'i');}",
          "373:   0x2",
          "374:   {0 {UPDATE t1 SET x=y WHERE x IN(?,?,?);}}",
          "376:   930",
          "377:   {DELETE FROM t1 WHERE x IN (1, \"sl1\", 'i');}",
          "378:   0x2",
          "379:   {0 {DELETE FROM t1 WHERE x IN(?,?,?);}}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fa94d492c8f2279df00cf4891f816f6c1e0c7c1a",
      "candidate_info": {
        "commit_hash": "fa94d492c8f2279df00cf4891f816f6c1e0c7c1a",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/fa94d492c8f2279df00cf4891f816f6c1e0c7c1a",
        "files": [
          "ext/session/sqlite3session.c",
          "manifest",
          "manifest.uuid"
        ],
        "message": "Fix a harmless compiler warning in Sessions.\n\nFossilOrigin-Name: fc9791ea987352e3e1322fbb7f833c23b402432af8249f9d397c6f7456788637",
        "before_after_code_files": [
          "ext/session/sqlite3session.c||ext/session/sqlite3session.c",
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "ext/session/sqlite3session.c||ext/session/sqlite3session.c": [
          "File: ext/session/sqlite3session.c -> ext/session/sqlite3session.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1154:   int iHash;",
          "1155:   int bNull = 0;",
          "1156:   int rc = SQLITE_OK;",
          "1159:   if( pSession->rc ) return;",
          "",
          "[Removed Lines]",
          "1157:   SessionStat1Ctx stat1 = {0};",
          "",
          "[Added Lines]",
          "1157:   SessionStat1Ctx stat1 = {{0,0,0,0,0},0};",
          "",
          "---------------"
        ],
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 32754ca6f86da8165e274f98f35fc3df3aebd273e9da08387e2d0c3c89abda0f",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}