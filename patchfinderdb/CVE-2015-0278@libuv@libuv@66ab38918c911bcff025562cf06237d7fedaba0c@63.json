{
  "cve_id": "CVE-2015-0278",
  "cve_desc": "libuv before 0.10.34 does not properly drop group privileges, which allows context-dependent attackers to gain privileges via unspecified vectors.",
  "repo": "libuv/libuv",
  "patch_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
  "patch_info": {
    "commit_hash": "66ab38918c911bcff025562cf06237d7fedaba0c",
    "repo": "libuv/libuv",
    "commit_url": "https://github.com/libuv/libuv/commit/66ab38918c911bcff025562cf06237d7fedaba0c",
    "files": [
      "src/unix/process.c"
    ],
    "message": "unix: call setgoups before calling setuid/setgid\n\nPartial fix for #1093",
    "before_after_code_files": [
      "src/unix/process.c||src/unix/process.c"
    ]
  },
  "patch_diff": {
    "src/unix/process.c||src/unix/process.c": [
      "File: src/unix/process.c -> src/unix/process.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "330:     _exit(127);",
      "331:   }",
      "333:   if ((options->flags & UV_PROCESS_SETGID) && setgid(options->gid)) {",
      "334:     uv__write_int(error_fd, -errno);",
      "335:     perror(\"setgid()\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "333:   if (options->flags & (UV_PROCESS_SETUID | UV_PROCESS_SETGID)) {",
      "341:     SAVE_ERRNO(setgroups(0, NULL));",
      "342:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fb36c099668838defccd892bb7d2a9d1849951d2",
      "candidate_info": {
        "commit_hash": "fb36c099668838defccd892bb7d2a9d1849951d2",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/fb36c099668838defccd892bb7d2a9d1849951d2",
        "files": [
          "src/unix/stream.c"
        ],
        "message": "unix: move uv_shutdown() assertion\n\nAllows uv_shutdown() to return an error as intended if the stream has\nalready been closed.\n\nFixes #972, refs JuliaLang/julia#4229.",
        "before_after_code_files": [
          "src/unix/stream.c||src/unix/stream.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/unix/stream.c||src/unix/stream.c": [
          "File: src/unix/stream.c -> src/unix/stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1092: int uv_shutdown(uv_shutdown_t* req, uv_stream_t* stream, uv_shutdown_cb cb) {",
          "1093:   assert((stream->type == UV_TCP || stream->type == UV_NAMED_PIPE) &&",
          "1094:          \"uv_shutdown (unix) only supports uv_handle_t right now\");",
          "1097:   if (!(stream->flags & UV_STREAM_WRITABLE) ||",
          "1098:       stream->flags & UV_STREAM_SHUT ||",
          "",
          "[Removed Lines]",
          "1095:   assert(uv__stream_fd(stream) >= 0);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1101:     return -ENOTCONN;",
          "1102:   }",
          "1105:   uv__req_init(stream->loop, req, UV_SHUTDOWN);",
          "1106:   req->handle = stream;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1103:   assert(uv__stream_fd(stream) >= 0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d6464c87bdd36a1c491a47fcc7ced214b751d955",
      "candidate_info": {
        "commit_hash": "d6464c87bdd36a1c491a47fcc7ced214b751d955",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/d6464c87bdd36a1c491a47fcc7ced214b751d955",
        "files": [
          "README.md",
          "uv.gyp"
        ],
        "message": "build: remove _GNU_SOURCE macro definition\n\nCompile libuv without -D_GNU_SOURCE, remove mention from the README.\n\nThe only place where it's still used is in the test suite and only\nbecause test/test-fs.c uses struct stat directly.",
        "before_after_code_files": [
          "uv.gyp||uv.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "uv.gyp||uv.gyp": [
          "File: uv.gyp -> uv.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "15:         'defines': [",
          "16:           '_LARGEFILE_SOURCE',",
          "17:           '_FILE_OFFSET_BITS=64',",
          "19:         ],",
          "20:         'conditions': [",
          "21:           ['OS==\"solaris\"', {",
          "",
          "[Removed Lines]",
          "18:           '_GNU_SOURCE',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "875814adc57cb9b607c8fd489837826d223707c2",
      "candidate_info": {
        "commit_hash": "875814adc57cb9b607c8fd489837826d223707c2",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/875814adc57cb9b607c8fd489837826d223707c2",
        "files": [
          "src/fs-poll.c",
          "src/unix/stream.c",
          "src/unix/udp.c"
        ],
        "message": "unix: replace some asserts with returning errors",
        "before_after_code_files": [
          "src/fs-poll.c||src/fs-poll.c",
          "src/unix/stream.c||src/unix/stream.c",
          "src/unix/udp.c||src/unix/udp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/fs-poll.c||src/fs-poll.c": [
          "File: src/fs-poll.c -> src/fs-poll.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "60:   struct poll_ctx* ctx;",
          "61:   uv_loop_t* loop;",
          "62:   size_t len;",
          "64:   if (uv__is_active(handle))",
          "65:     return 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63:   int err;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "78:   ctx->parent_handle = handle;",
          "79:   memcpy(ctx->path, path, len + 1);",
          "84:   ctx->timer_handle.flags |= UV__HANDLE_INTERNAL;",
          "85:   uv__handle_unref(&ctx->timer_handle);",
          "90:   handle->poll_ctx = ctx;",
          "91:   uv__handle_start(handle);",
          "93:   return 0;",
          "94: }",
          "",
          "[Removed Lines]",
          "81:   if (uv_timer_init(loop, &ctx->timer_handle))",
          "82:     abort();",
          "87:   if (uv_fs_stat(loop, &ctx->fs_req, ctx->path, poll_cb))",
          "88:     abort();",
          "",
          "[Added Lines]",
          "82:   err = uv_timer_init(loop, &ctx->timer_handle);",
          "83:   if (err < 0)",
          "84:     goto error;",
          "89:   err = uv_fs_stat(loop, &ctx->fs_req, ctx->path, poll_cb);",
          "90:   if (err < 0)",
          "91:     goto error;",
          "98: error:",
          "99:   free(ctx);",
          "100:   return err;",
          "",
          "---------------"
        ],
        "src/unix/stream.c||src/unix/stream.c": [
          "File: src/unix/stream.c -> src/unix/stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "537:       break;",
          "539:     default:",
          "541:   }",
          "543: done:",
          "",
          "[Removed Lines]",
          "540:       assert(0);",
          "",
          "[Added Lines]",
          "540:       return -EINVAL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "573: int uv_listen(uv_stream_t* stream, int backlog, uv_connection_cb cb) {",
          "574:   int err;",
          "577:   switch (stream->type) {",
          "578:   case UV_TCP:",
          "579:     err = uv_tcp_listen((uv_tcp_t*)stream, backlog, cb);",
          "",
          "[Removed Lines]",
          "576:   err = -EINVAL;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "584:     break;",
          "586:   default:",
          "588:   }",
          "590:   if (err == 0)",
          "",
          "[Removed Lines]",
          "587:     assert(0);",
          "",
          "[Added Lines]",
          "586:     err = -EINVAL;",
          "",
          "---------------"
        ],
        "src/unix/udp.c||src/unix/udp.c": [
          "File: src/unix/udp.c -> src/unix/udp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "340:   unsigned char taddr[sizeof(struct sockaddr_in6)];",
          "341:   socklen_t addrlen;",
          "345:   if (handle->io_watcher.fd != -1)",
          "346:     return 0;",
          "",
          "[Removed Lines]",
          "343:   assert(domain == AF_INET || domain == AF_INET6);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "336a1825309744f920230ec3e427e78571772347",
      "candidate_info": {
        "commit_hash": "336a1825309744f920230ec3e427e78571772347",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/336a1825309744f920230ec3e427e78571772347",
        "files": [
          "ChangeLog",
          "src/version.c"
        ],
        "message": "2014.01.30, Version 0.11.19 (Unstable)\n\nChanges since version 0.11.18:\n\n* linux: move sscanf() out of the assert() (Trevor Norris)\n\n* linux: fix C99/C++ comment (Fedor Indutny)",
        "before_after_code_files": [
          "src/version.c||src/version.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/version.c||src/version.c": [
          "File: src/version.c -> src/version.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #define UV_VERSION_MAJOR 0",
          "33: #define UV_VERSION_MINOR 11",
          "34: #define UV_VERSION_PATCH 19",
          "38: #define UV_VERSION  ((UV_VERSION_MAJOR << 16) | \\",
          "",
          "[Removed Lines]",
          "35: #define UV_VERSION_IS_RELEASE 0",
          "",
          "[Added Lines]",
          "35: #define UV_VERSION_IS_RELEASE 1",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f55b853be5cb5058ec4988c6690b594dcb40f1d6",
      "candidate_info": {
        "commit_hash": "f55b853be5cb5058ec4988c6690b594dcb40f1d6",
        "repo": "libuv/libuv",
        "commit_url": "https://github.com/libuv/libuv/commit/f55b853be5cb5058ec4988c6690b594dcb40f1d6",
        "files": [
          "src/unix/udp.c"
        ],
        "message": "unix: handle case when addr is not initialized after recvmsg\n\nIf the handle was opened using `uv_udp_open` ift's possible that the\nkernel doesn't fill in the msg_name field, so return NULL as the address\nin that case.\n\nfixes #1252",
        "before_after_code_files": [
          "src/unix/udp.c||src/unix/udp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libuv/libuv/pull/41"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/unix/udp.c||src/unix/udp.c": [
          "File: src/unix/udp.c -> src/unix/udp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "221:         handle->recv_cb(handle, -errno, &buf, NULL, 0);",
          "222:     }",
          "223:     else {",
          "226:       if (h.msg_flags & MSG_TRUNC)",
          "227:         flags |= UV_UDP_PARTIAL;",
          "234:     }",
          "235:   }",
          "",
          "[Removed Lines]",
          "224:       flags = 0;",
          "229:       handle->recv_cb(handle,",
          "230:                       nread,",
          "231:                       &buf,",
          "232:                       (const struct sockaddr*) &peer,",
          "233:                       flags);",
          "",
          "[Added Lines]",
          "224:       const struct sockaddr *addr;",
          "225:       if (h.msg_namelen == 0)",
          "226:         addr = NULL;",
          "227:       else",
          "228:         addr = (const struct sockaddr*) &peer;",
          "230:       flags = 0;",
          "234:       handle->recv_cb(handle, nread, &buf, addr, flags);",
          "",
          "---------------"
        ]
      }
    }
  ]
}