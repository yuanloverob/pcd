{
  "cve_id": "CVE-2016-1904",
  "cve_desc": "Multiple integer overflows in ext/standard/exec.c in PHP 7.x before 7.0.2 allow remote attackers to cause a denial of service or possibly have unspecified other impact via a long string to the (1) php_escape_shell_cmd or (2) php_escape_shell_arg function, leading to a heap-based buffer overflow.",
  "repo": "php/php-src",
  "patch_hash": "2871c70efaaaa0f102557a17c727fd4d5204dd4b",
  "patch_info": {
    "commit_hash": "2871c70efaaaa0f102557a17c727fd4d5204dd4b",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/2871c70efaaaa0f102557a17c727fd4d5204dd4b",
    "files": [
      "ext/standard/exec.c"
    ],
    "message": "Patch for Heap Buffer Overflow in EscapeShell\n\nProposed patch for bug #71270",
    "before_after_code_files": [
      "ext/standard/exec.c||ext/standard/exec.c"
    ]
  },
  "patch_diff": {
    "ext/standard/exec.c||ext/standard/exec.c": [
      "File: ext/standard/exec.c -> ext/standard/exec.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "253: #endif",
      "258:  for (x = 0, y = 0; x < l; x++) {",
      "259:   int mb_len = php_mblen(str + x, (l - x));",
      "",
      "[Removed Lines]",
      "256:  cmd = zend_string_alloc(2 * l, 0);",
      "",
      "[Added Lines]",
      "256:  cmd = zend_string_safe_alloc(2, l, 0, 0);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "22a5ccab720fdff4bb56f2af6efe9ca7d3045a48",
      "candidate_info": {
        "commit_hash": "22a5ccab720fdff4bb56f2af6efe9ca7d3045a48",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/22a5ccab720fdff4bb56f2af6efe9ca7d3045a48",
        "files": [
          "ext/standard/basic_functions.c",
          "ext/standard/exec.c",
          "ext/standard/exec.h",
          "ext/standard/tests/general_functions/escapeshellarg_bug71270.phpt",
          "ext/standard/tests/general_functions/escapeshellcmd_bug71270.phpt"
        ],
        "message": "Follow up on bug #71270\n\nUsing the max allowed command line length for an underlying OS.",
        "before_after_code_files": [
          "ext/standard/basic_functions.c||ext/standard/basic_functions.c",
          "ext/standard/exec.c||ext/standard/exec.c",
          "ext/standard/exec.h||ext/standard/exec.h",
          "ext/standard/tests/general_functions/escapeshellarg_bug71270.phpt||ext/standard/tests/general_functions/escapeshellarg_bug71270.phpt",
          "ext/standard/tests/general_functions/escapeshellcmd_bug71270.phpt||ext/standard/tests/general_functions/escapeshellcmd_bug71270.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/exec.c||ext/standard/exec.c"
          ],
          "candidate": [
            "ext/standard/exec.c||ext/standard/exec.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/standard/basic_functions.c||ext/standard/basic_functions.c": [
          "File: ext/standard/basic_functions.c -> ext/standard/basic_functions.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3657: #ifdef PHP_CAN_SUPPORT_PROC_OPEN",
          "3658:  BASIC_MINIT_SUBMODULE(proc_open)",
          "3659: #endif",
          "3661:  BASIC_MINIT_SUBMODULE(user_streams)",
          "3662:  BASIC_MINIT_SUBMODULE(imagetypes)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3660:  BASIC_MINIT_SUBMODULE(exec)",
          "",
          "---------------"
        ],
        "ext/standard/exec.c||ext/standard/exec.c": [
          "File: ext/standard/exec.c -> ext/standard/exec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: #include <fcntl.h>",
          "47: #endif",
          "50: #include <unistd.h>",
          "51: #endif",
          "",
          "[Removed Lines]",
          "49: #if HAVE_NICE && HAVE_UNISTD_H",
          "",
          "[Added Lines]",
          "49: #if (HAVE_NICE || defined(__linux__)) && HAVE_UNISTD_H",
          "53: static int cmd_max_len;",
          "56: PHP_MINIT_FUNCTION(exec)",
          "57: {",
          "58: #ifdef __linux__",
          "59:  cmd_max_len = sysconf(_SC_ARG_MAX);",
          "60: #elif defined(ARG_MAX)",
          "61:  cmd_max_len = ARG_MAX;",
          "62: #elif defined(PHP_WIN32)",
          "65:  cmd_max_len = 8192;",
          "66: #else",
          "68:  cmd_max_len = 4096;",
          "69: #endif",
          "71:  return SUCCESS;",
          "72: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "246: PHPAPI zend_string *php_escape_shell_cmd(char *str)",
          "247: {",
          "250:  zend_string *cmd;",
          "251: #ifndef PHP_WIN32",
          "252:  char *p = NULL;",
          "253: #endif",
          "256:  cmd = zend_string_safe_alloc(2, l, 0, 0);",
          "",
          "[Removed Lines]",
          "248:  register int x, y, l = (int)strlen(str);",
          "249:  size_t estimate = (2 * l) + 1;",
          "",
          "[Added Lines]",
          "270:  register int x, y;",
          "271:  size_t l = strlen(str);",
          "272:  uint64_t estimate = (2 * (uint64_t)l) + 1;",
          "279:  if (l > cmd_max_len - 2 - 1) {",
          "280:   php_error_docref(NULL, E_ERROR, \"Command exceeds the allowed length of %d bytes\", cmd_max_len);",
          "281:   return ZSTR_EMPTY_ALLOC();",
          "282:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "324:  }",
          "325:  ZSTR_VAL(cmd)[y] = '\\0';",
          "327:  if ((estimate - y) > 4096) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "355:  if (y - 1 > cmd_max_len) {",
          "356:   php_error_docref(NULL, E_ERROR, \"Escaped command exceeds the allowed length of %d bytes\", cmd_max_len);",
          "357:   zend_string_release(cmd);",
          "358:   return ZSTR_EMPTY_ALLOC();",
          "359:  }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "341: PHPAPI zend_string *php_escape_shell_arg(char *str)",
          "342: {",
          "344:  zend_string *cmd;",
          "",
          "[Removed Lines]",
          "343:  int x, y = 0, l = (int)strlen(str);",
          "345:  size_t estimate = (4 * l) + 3;",
          "",
          "[Added Lines]",
          "377:  int x, y = 0;",
          "378:  size_t l = strlen(str);",
          "380:  uint64_t estimate = (4 * (uint64_t)l) + 3;",
          "383:  if (l > cmd_max_len - 2 - 1) {",
          "384:   php_error_docref(NULL, E_ERROR, \"Argument exceeds the allowed length of %d bytes\", cmd_max_len);",
          "385:   return ZSTR_EMPTY_ALLOC();",
          "386:  }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "399: #endif",
          "400:  ZSTR_VAL(cmd)[y] = '\\0';",
          "402:  if ((estimate - y) > 4096) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "442:  if (y - 1 > cmd_max_len) {",
          "443:   php_error_docref(NULL, E_ERROR, \"Escaped argument exceeds the allowed length of %d bytes\", cmd_max_len);",
          "444:   zend_string_release(cmd);",
          "445:   return ZSTR_EMPTY_ALLOC();",
          "446:  }",
          "",
          "---------------"
        ],
        "ext/standard/exec.h||ext/standard/exec.h": [
          "File: ext/standard/exec.h -> ext/standard/exec.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: PHP_FUNCTION(proc_terminate);",
          "34: PHP_FUNCTION(proc_nice);",
          "35: PHP_MINIT_FUNCTION(proc_open);",
          "37: PHPAPI zend_string *php_escape_shell_cmd(char *);",
          "38: PHPAPI zend_string *php_escape_shell_arg(char *);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36: PHP_MINIT_FUNCTION(exec);",
          "",
          "---------------"
        ],
        "ext/standard/tests/general_functions/escapeshellarg_bug71270.phpt||ext/standard/tests/general_functions/escapeshellarg_bug71270.phpt": [
          "File: ext/standard/tests/general_functions/escapeshellarg_bug71270.phpt -> ext/standard/tests/general_functions/escapeshellarg_bug71270.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Test escapeshellarg() allowed argument length",
          "3: --FILE--",
          "4: <?php",
          "5: ini_set('memory_limit', -1);",
          "6: $var_2  = str_repeat('A', 1024*1024*64);",
          "7: escapeshellarg($var_2);",
          "9: ?>",
          "10: ===DONE===",
          "11: --EXPECTF--",
          "12: Fatal error: escapeshellarg(): Argument exceeds the allowed length of %d bytes in %s on line %d",
          "",
          "---------------"
        ],
        "ext/standard/tests/general_functions/escapeshellcmd_bug71270.phpt||ext/standard/tests/general_functions/escapeshellcmd_bug71270.phpt": [
          "File: ext/standard/tests/general_functions/escapeshellcmd_bug71270.phpt -> ext/standard/tests/general_functions/escapeshellcmd_bug71270.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Test escapeshellcmd() allowed argument length",
          "3: --FILE--",
          "4: <?php",
          "5: ini_set('memory_limit', -1);",
          "6: $var_2  = str_repeat('A', 1024*1024*64);",
          "7: escapeshellcmd($var_2);",
          "9: ?>",
          "10: ===DONE===",
          "11: --EXPECTF--",
          "12: Fatal error: escapeshellcmd(): Command exceeds the allowed length of %d bytes in %s on line %d",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c666a67a9873707a6cd9c83bbd09c3ac1b76e0d2",
      "candidate_info": {
        "commit_hash": "c666a67a9873707a6cd9c83bbd09c3ac1b76e0d2",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/c666a67a9873707a6cd9c83bbd09c3ac1b76e0d2",
        "files": [
          "ext/standard/exec.c"
        ],
        "message": "Patch for Heap Buffer Overflow in EscapeShell\n\nProposed patch for bug #71270",
        "before_after_code_files": [
          "ext/standard/exec.c||ext/standard/exec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ext/standard/exec.c||ext/standard/exec.c"
          ],
          "candidate": [
            "ext/standard/exec.c||ext/standard/exec.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/standard/exec.c||ext/standard/exec.c": [
          "File: ext/standard/exec.c -> ext/standard/exec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "253: #endif",
          "258:  for (x = 0, y = 0; x < l; x++) {",
          "259:   int mb_len = php_mblen(str + x, (l - x));",
          "",
          "[Removed Lines]",
          "256:  cmd = zend_string_alloc(2 * l, 0);",
          "",
          "[Added Lines]",
          "256:  cmd = zend_string_safe_alloc(2, l, 0, 0);",
          "",
          "---------------"
        ]
      }
    }
  ]
}