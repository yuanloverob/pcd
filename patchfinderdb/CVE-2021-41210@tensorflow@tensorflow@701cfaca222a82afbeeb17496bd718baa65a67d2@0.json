{
  "cve_id": "CVE-2021-41210",
  "cve_desc": "TensorFlow is an open source platform for machine learning. In affected versions the shape inference functions for `SparseCountSparseOutput` can trigger a read outside of bounds of heap allocated array. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "701cfaca222a82afbeeb17496bd718baa65a67d2",
  "patch_info": {
    "commit_hash": "701cfaca222a82afbeeb17496bd718baa65a67d2",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/701cfaca222a82afbeeb17496bd718baa65a67d2",
    "files": [
      "tensorflow/core/ops/count_ops.cc",
      "tensorflow/python/ops/bincount_ops_test.py"
    ],
    "message": "Fix heap out of bounds error in tf.raw_ops.SparseCountSparseOutput shape inference when it is called with invalid inputs, and add a test for it.\n\nPiperOrigin-RevId: 405766415\nChange-Id: I77d244ef35f351ef7b6f821efd959cac2c66db24",
    "before_after_code_files": [
      "tensorflow/core/ops/count_ops.cc||tensorflow/core/ops/count_ops.cc",
      "tensorflow/python/ops/bincount_ops_test.py||tensorflow/python/ops/bincount_ops_test.py"
    ]
  },
  "patch_diff": {
    "tensorflow/core/ops/count_ops.cc||tensorflow/core/ops/count_ops.cc": [
      "File: tensorflow/core/ops/count_ops.cc -> tensorflow/core/ops/count_ops.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "41: }",
      "43: Status SparseCountSparseOutputShapeFn(InferenceContext *c) {",
      "44:   auto rank = c->Dim(c->input(0), 1);",
      "45:   auto nvals = c->UnknownDim();",
      "46:   c->set_output(0, c->Matrix(nvals, rank));  // out.indices",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "44:   ShapeHandle unused;",
      "45:   TF_RETURN_IF_ERROR(c->WithRank(c->input(0), 2, &unused));",
      "",
      "---------------"
    ],
    "tensorflow/python/ops/bincount_ops_test.py||tensorflow/python/ops/bincount_ops_test.py": [
      "File: tensorflow/python/ops/bincount_ops_test.py -> tensorflow/python/ops/bincount_ops_test.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "831:       self.evaluate(bincount_ops.sparse_bincount(x, weights=weights, axis=-1))",
      "834: @test_util.run_all_in_graph_and_eager_modes",
      "835: @test_util.disable_tfrt",
      "836: class RawOpsTest(test.TestCase, parameterized.TestCase):",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "834: class RawOpsHeapOobTest(test.TestCase, parameterized.TestCase):",
      "836:   @test_util.run_v1_only(\"Test security error\")",
      "837:   def testSparseCountSparseOutputBadIndicesShapeTooSmall(self):",
      "838:     indices = [1]",
      "839:     values = [[1]]",
      "840:     weights = []",
      "841:     dense_shape = [10]",
      "842:     with self.assertRaisesRegex(ValueError,",
      "843:                                 \"Shape must be rank 2 but is rank 1 for\"):",
      "844:       self.evaluate(",
      "845:           gen_count_ops.SparseCountSparseOutput(",
      "846:               indices=indices,",
      "847:               values=values,",
      "848:               dense_shape=dense_shape,",
      "849:               weights=weights,",
      "850:               binary_output=True))",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b7e29044d0cda93696008f502e2fa14a33ff5b18",
      "candidate_info": {
        "commit_hash": "b7e29044d0cda93696008f502e2fa14a33ff5b18",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/b7e29044d0cda93696008f502e2fa14a33ff5b18",
        "files": [
          "tensorflow/core/ops/count_ops.cc",
          "tensorflow/python/ops/bincount_ops_test.py"
        ],
        "message": "Fix heap out of bounds error in tf.raw_ops.SparseCountSparseOutput shape inference when it is called with invalid inputs, and add a test for it.\n\nPiperOrigin-RevId: 405766415\nChange-Id: I77d244ef35f351ef7b6f821efd959cac2c66db24",
        "before_after_code_files": [
          "tensorflow/core/ops/count_ops.cc||tensorflow/core/ops/count_ops.cc",
          "tensorflow/python/ops/bincount_ops_test.py||tensorflow/python/ops/bincount_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/ops/count_ops.cc||tensorflow/core/ops/count_ops.cc",
            "tensorflow/python/ops/bincount_ops_test.py||tensorflow/python/ops/bincount_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/ops/count_ops.cc||tensorflow/core/ops/count_ops.cc",
            "tensorflow/python/ops/bincount_ops_test.py||tensorflow/python/ops/bincount_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/ops/count_ops.cc||tensorflow/core/ops/count_ops.cc": [
          "File: tensorflow/core/ops/count_ops.cc -> tensorflow/core/ops/count_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "41: }",
          "43: Status SparseCountSparseOutputShapeFn(InferenceContext *c) {",
          "44:   auto rank = c->Dim(c->input(0), 1);",
          "45:   auto nvals = c->UnknownDim();",
          "46:   c->set_output(0, c->Matrix(nvals, rank));  // out.indices",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44:   ShapeHandle unused;",
          "45:   TF_RETURN_IF_ERROR(c->WithRank(c->input(0), 2, &unused));",
          "",
          "---------------"
        ],
        "tensorflow/python/ops/bincount_ops_test.py||tensorflow/python/ops/bincount_ops_test.py": [
          "File: tensorflow/python/ops/bincount_ops_test.py -> tensorflow/python/ops/bincount_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "835:       self.evaluate(bincount_ops.sparse_bincount(x, weights=weights, axis=-1))",
          "838: @test_util.run_all_in_graph_and_eager_modes",
          "839: @test_util.disable_tfrt",
          "840: class RawOpsTest(test.TestCase, parameterized.TestCase):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "838: class RawOpsHeapOobTest(test.TestCase, parameterized.TestCase):",
          "840:   @test_util.run_v1_only(\"Test security error\")",
          "841:   def testSparseCountSparseOutputBadIndicesShapeTooSmall(self):",
          "842:     indices = [1]",
          "843:     values = [[1]]",
          "844:     weights = []",
          "845:     dense_shape = [10]",
          "846:     with self.assertRaisesRegex(ValueError,",
          "847:                                 \"Shape must be rank 2 but is rank 1 for\"):",
          "848:       self.evaluate(",
          "849:           gen_count_ops.SparseCountSparseOutput(",
          "850:               indices=indices,",
          "851:               values=values,",
          "852:               dense_shape=dense_shape,",
          "853:               weights=weights,",
          "854:               binary_output=True))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2ab1d39f2577c3c7d370fff984c47264936f5463",
      "candidate_info": {
        "commit_hash": "2ab1d39f2577c3c7d370fff984c47264936f5463",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/2ab1d39f2577c3c7d370fff984c47264936f5463",
        "files": [
          "tensorflow/core/ops/count_ops.cc",
          "tensorflow/python/ops/bincount_ops_test.py"
        ],
        "message": "Fix heap out of bounds error in tf.raw_ops.SparseCountSparseOutput shape inference when it is called with invalid inputs, and add a test for it.\n\nPiperOrigin-RevId: 405766415\nChange-Id: I77d244ef35f351ef7b6f821efd959cac2c66db24",
        "before_after_code_files": [
          "tensorflow/core/ops/count_ops.cc||tensorflow/core/ops/count_ops.cc",
          "tensorflow/python/ops/bincount_ops_test.py||tensorflow/python/ops/bincount_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/ops/count_ops.cc||tensorflow/core/ops/count_ops.cc",
            "tensorflow/python/ops/bincount_ops_test.py||tensorflow/python/ops/bincount_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/ops/count_ops.cc||tensorflow/core/ops/count_ops.cc",
            "tensorflow/python/ops/bincount_ops_test.py||tensorflow/python/ops/bincount_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/ops/count_ops.cc||tensorflow/core/ops/count_ops.cc": [
          "File: tensorflow/core/ops/count_ops.cc -> tensorflow/core/ops/count_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "41: }",
          "43: Status SparseCountSparseOutputShapeFn(InferenceContext *c) {",
          "44:   auto rank = c->Dim(c->input(0), 1);",
          "45:   auto nvals = c->UnknownDim();",
          "46:   c->set_output(0, c->Matrix(nvals, rank));  // out.indices",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44:   ShapeHandle unused;",
          "45:   TF_RETURN_IF_ERROR(c->WithRank(c->input(0), 2, &unused));",
          "",
          "---------------"
        ],
        "tensorflow/python/ops/bincount_ops_test.py||tensorflow/python/ops/bincount_ops_test.py": [
          "File: tensorflow/python/ops/bincount_ops_test.py -> tensorflow/python/ops/bincount_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "836:       self.evaluate(bincount_ops.sparse_bincount(x, weights=weights, axis=-1))",
          "839: @test_util.run_all_in_graph_and_eager_modes",
          "840: @test_util.disable_tfrt",
          "841: class RawOpsTest(test.TestCase, parameterized.TestCase):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "839: class RawOpsHeapOobTest(test.TestCase, parameterized.TestCase):",
          "841:   @test_util.run_v1_only(\"Test security error\")",
          "842:   def testSparseCountSparseOutputBadIndicesShapeTooSmall(self):",
          "843:     indices = [1]",
          "844:     values = [[1]]",
          "845:     weights = []",
          "846:     dense_shape = [10]",
          "847:     with self.assertRaisesRegex(ValueError,",
          "848:                                 \"Shape must be rank 2 but is rank 1 for\"):",
          "849:       self.evaluate(",
          "850:           gen_count_ops.SparseCountSparseOutput(",
          "851:               indices=indices,",
          "852:               values=values,",
          "853:               dense_shape=dense_shape,",
          "854:               weights=weights,",
          "855:               binary_output=True))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "54ee8972c1512b063deba1e17805eade4eb5d404",
      "candidate_info": {
        "commit_hash": "54ee8972c1512b063deba1e17805eade4eb5d404",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/54ee8972c1512b063deba1e17805eade4eb5d404",
        "files": [
          "tensorflow/core/ops/count_ops.cc",
          "tensorflow/python/ops/bincount_ops_test.py"
        ],
        "message": "Fix heap out of bounds error in tf.raw_ops.SparseCountSparseOutput shape inference when it is called with invalid inputs, and add a test for it.\n\nPiperOrigin-RevId: 405766415\nChange-Id: I77d244ef35f351ef7b6f821efd959cac2c66db24",
        "before_after_code_files": [
          "tensorflow/core/ops/count_ops.cc||tensorflow/core/ops/count_ops.cc",
          "tensorflow/python/ops/bincount_ops_test.py||tensorflow/python/ops/bincount_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/ops/count_ops.cc||tensorflow/core/ops/count_ops.cc",
            "tensorflow/python/ops/bincount_ops_test.py||tensorflow/python/ops/bincount_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/ops/count_ops.cc||tensorflow/core/ops/count_ops.cc",
            "tensorflow/python/ops/bincount_ops_test.py||tensorflow/python/ops/bincount_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/ops/count_ops.cc||tensorflow/core/ops/count_ops.cc": [
          "File: tensorflow/core/ops/count_ops.cc -> tensorflow/core/ops/count_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "41: }",
          "43: Status SparseCountSparseOutputShapeFn(InferenceContext *c) {",
          "44:   auto rank = c->Dim(c->input(0), 1);",
          "45:   auto nvals = c->UnknownDim();",
          "46:   c->set_output(0, c->Matrix(nvals, rank));  // out.indices",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44:   ShapeHandle unused;",
          "45:   TF_RETURN_IF_ERROR(c->WithRank(c->input(0), 2, &unused));",
          "",
          "---------------"
        ],
        "tensorflow/python/ops/bincount_ops_test.py||tensorflow/python/ops/bincount_ops_test.py": [
          "File: tensorflow/python/ops/bincount_ops_test.py -> tensorflow/python/ops/bincount_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "835:       self.evaluate(bincount_ops.sparse_bincount(x, weights=weights, axis=-1))",
          "838: @test_util.run_all_in_graph_and_eager_modes",
          "839: @test_util.disable_tfrt",
          "840: class RawOpsTest(test.TestCase, parameterized.TestCase):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "838: class RawOpsHeapOobTest(test.TestCase, parameterized.TestCase):",
          "840:   @test_util.run_v1_only(\"Test security error\")",
          "841:   def testSparseCountSparseOutputBadIndicesShapeTooSmall(self):",
          "842:     indices = [1]",
          "843:     values = [[1]]",
          "844:     weights = []",
          "845:     dense_shape = [10]",
          "846:     with self.assertRaisesRegex(ValueError,",
          "847:                                 \"Shape must be rank 2 but is rank 1 for\"):",
          "848:       self.evaluate(",
          "849:           gen_count_ops.SparseCountSparseOutput(",
          "850:               indices=indices,",
          "851:               values=values,",
          "852:               dense_shape=dense_shape,",
          "853:               weights=weights,",
          "854:               binary_output=True))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c0564497c0502c30826826389e639acac2383960",
      "candidate_info": {
        "commit_hash": "c0564497c0502c30826826389e639acac2383960",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/c0564497c0502c30826826389e639acac2383960",
        "files": [
          "tensorflow/core/ops/count_ops.cc",
          "tensorflow/python/ops/bincount_ops_test.py"
        ],
        "message": "Fix heap out of bounds error in tf.raw_ops.SparseCountSparseOutput shape inference when it is called with invalid inputs, and add a test for it.\n\nPiperOrigin-RevId: 405766415\nChange-Id: I77d244ef35f351ef7b6f821efd959cac2c66db24",
        "before_after_code_files": [
          "tensorflow/core/ops/count_ops.cc||tensorflow/core/ops/count_ops.cc",
          "tensorflow/python/ops/bincount_ops_test.py||tensorflow/python/ops/bincount_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/ops/count_ops.cc||tensorflow/core/ops/count_ops.cc",
            "tensorflow/python/ops/bincount_ops_test.py||tensorflow/python/ops/bincount_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/ops/count_ops.cc||tensorflow/core/ops/count_ops.cc",
            "tensorflow/python/ops/bincount_ops_test.py||tensorflow/python/ops/bincount_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/ops/count_ops.cc||tensorflow/core/ops/count_ops.cc": [
          "File: tensorflow/core/ops/count_ops.cc -> tensorflow/core/ops/count_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "41: }",
          "43: Status SparseCountSparseOutputShapeFn(InferenceContext *c) {",
          "44:   auto rank = c->Dim(c->input(0), 1);",
          "45:   auto nvals = c->UnknownDim();",
          "46:   c->set_output(0, c->Matrix(nvals, rank));  // out.indices",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44:   ShapeHandle unused;",
          "45:   TF_RETURN_IF_ERROR(c->WithRank(c->input(0), 2, &unused));",
          "",
          "---------------"
        ],
        "tensorflow/python/ops/bincount_ops_test.py||tensorflow/python/ops/bincount_ops_test.py": [
          "File: tensorflow/python/ops/bincount_ops_test.py -> tensorflow/python/ops/bincount_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "835:       self.evaluate(bincount_ops.sparse_bincount(x, weights=weights, axis=-1))",
          "838: @test_util.run_all_in_graph_and_eager_modes",
          "839: @test_util.disable_tfrt",
          "840: class RawOpsTest(test.TestCase, parameterized.TestCase):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "838: class RawOpsHeapOobTest(test.TestCase, parameterized.TestCase):",
          "840:   @test_util.run_v1_only(\"Test security error\")",
          "841:   def testSparseCountSparseOutputBadIndicesShapeTooSmall(self):",
          "842:     indices = [1]",
          "843:     values = [[1]]",
          "844:     weights = []",
          "845:     dense_shape = [10]",
          "846:     with self.assertRaisesRegex(ValueError,",
          "847:                                 \"Shape must be rank 2 but is rank 1 for\"):",
          "848:       self.evaluate(",
          "849:           gen_count_ops.SparseCountSparseOutput(",
          "850:               indices=indices,",
          "851:               values=values,",
          "852:               dense_shape=dense_shape,",
          "853:               weights=weights,",
          "854:               binary_output=True))",
          "",
          "---------------"
        ]
      }
    }
  ]
}