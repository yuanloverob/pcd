{
  "cve_id": "CVE-2017-3733",
  "cve_desc": "During a renegotiation handshake if the Encrypt-Then-Mac extension is negotiated where it was not in the original handshake (or vice-versa) then this can cause OpenSSL 1.1.0 before 1.1.0e to crash (dependent on ciphersuite). Both clients and servers are affected.",
  "repo": "openssl/openssl",
  "patch_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
  "patch_info": {
    "commit_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "files": [
      "include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h",
      "ssl/t1_enc.c",
      "ssl/t1_lib.c"
    ],
    "message": "Don't change the state of the ETM flags until CCS processing\n\nChanging the ciphersuite during a renegotiation can result in a crash\nleading to a DoS attack. ETM has not been implemented in 1.1.0 for DTLS\nso this is TLS only.\n\nThe problem is caused by changing the flag indicating whether to use ETM\nor not immediately on negotiation of ETM, rather than at CCS. Therefore,\nduring a renegotiation, if the ETM state is changing (usually due to a\nchange of ciphersuite), then an error/crash will occur.\n\nDue to the fact that there are separate CCS messages for read and write\nwe actually now need two flags to determine whether to use ETM or not.\n\nCVE-2017-3733\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
    "before_after_code_files": [
      "include/openssl/ssl3.h||include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h||ssl/ssl_locl.h",
      "ssl/t1_enc.c||ssl/t1_enc.c",
      "ssl/t1_lib.c||ssl/t1_lib.c"
    ]
  },
  "patch_diff": {
    "include/openssl/ssl3.h||include/openssl/ssl3.h": [
      "File: include/openssl/ssl3.h -> include/openssl/ssl3.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "264: # define TLS1_FLAGS_SKIP_CERT_VERIFY             0x0010",
      "270: # define TLS1_FLAGS_RECEIVED_EXTMS               0x0200",
      "272: # define SSL3_MT_HELLO_REQUEST                   0",
      "273: # define SSL3_MT_CLIENT_HELLO                    1",
      "274: # define SSL3_MT_SERVER_HELLO                    2",
      "",
      "[Removed Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             0x0100",
      "",
      "[Added Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_READ        0x0100",
      "268: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             TLS1_FLAGS_ENCRYPT_THEN_MAC_READ",
      "273: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE       0x0400",
      "",
      "---------------"
    ],
    "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
      "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:     if (type == SSL3_RT_APPLICATION_DATA &&",
      "396:         u_len >= 4 * (max_send_fragment = s->max_send_fragment) &&",
      "397:         s->compress == NULL && s->msg_callback == NULL &&",
      "399:         EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(s->enc_write_ctx)) &",
      "400:         EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK) {",
      "401:         unsigned char aad[13];",
      "",
      "[Removed Lines]",
      "398:         !SSL_USE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "[Added Lines]",
      "398:         !SSL_WRITE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "795:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "796:                                          &(outbuf[j][wr[j].length + eivlen]),",
      "797:                                          1) < 0)",
      "",
      "[Removed Lines]",
      "794:         if (!SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "794:         if (!SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "814:         goto err;",
      "816:     for (j = 0; j < numpipes; j++) {",
      "818:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "819:                                          outbuf[j] + wr[j].length, 1) < 0)",
      "820:                 goto err;",
      "",
      "[Removed Lines]",
      "817:         if (SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "817:         if (SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------"
    ],
    "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c": [
      "File: ssl/record/ssl3_record.c -> ssl/record/ssl3_record.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "350:         unsigned char *mac;",
      "351:         mac_size = EVP_MD_CTX_size(s->read_hash);",
      "352:         OPENSSL_assert(mac_size <= EVP_MAX_MD_SIZE);",
      "",
      "[Removed Lines]",
      "349:     if (SSL_USE_ETM(s) && s->read_hash) {",
      "",
      "[Added Lines]",
      "349:     if (SSL_READ_ETM(s) && s->read_hash) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "394:     if ((sess != NULL) &&",
      "395:         (s->enc_read_ctx != NULL) &&",
      "398:         unsigned char *mac = NULL;",
      "399:         unsigned char mac_tmp[EVP_MAX_MD_SIZE];",
      "",
      "[Removed Lines]",
      "396:         (EVP_MD_CTX_md(s->read_hash) != NULL) && !SSL_USE_ETM(s)) {",
      "",
      "[Added Lines]",
      "396:         (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "823:         }",
      "825:         ret = 1;",
      "827:             mac_size = EVP_MD_CTX_size(s->read_hash);",
      "828:         if ((bs != 1) && !send) {",
      "829:             int tmpret;",
      "",
      "[Removed Lines]",
      "826:         if (!SSL_USE_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "[Added Lines]",
      "826:         if (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "997:     header[11] = (rec->length) >> 8;",
      "998:     header[12] = (rec->length) & 0xff;",
      "1001:         EVP_CIPHER_CTX_mode(ssl->enc_read_ctx) == EVP_CIPH_CBC_MODE &&",
      "1002:         ssl3_cbc_record_digest_supported(mac_ctx)) {",
      "",
      "[Removed Lines]",
      "1000:     if (!send && !SSL_USE_ETM(ssl) &&",
      "",
      "[Added Lines]",
      "1000:     if (!send && !SSL_READ_ETM(ssl) &&",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1022:             EVP_MD_CTX_free(hmac);",
      "1023:             return -1;",
      "1024:         }",
      "1026:             if (!tls_fips_digest_extra(ssl->enc_read_ctx,",
      "1027:                                        mac_ctx, rec->input,",
      "1028:                                        rec->length, rec->orig_len)) {",
      "",
      "[Removed Lines]",
      "1025:         if (!send && !SSL_USE_ETM(ssl) && FIPS_mode())",
      "",
      "[Added Lines]",
      "1025:         if (!send && !SSL_READ_ETM(ssl) && FIPS_mode())",
      "",
      "---------------"
    ],
    "ssl/ssl_locl.h||ssl/ssl_locl.h": [
      "File: ssl/ssl_locl.h -> ssl/ssl_locl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "378: # define SSL_CLIENT_USE_SIGALGS(s)        \\",
      "379:     SSL_CLIENT_USE_TLS1_2_CIPHERS(s)",
      "384: # define SSL_PKEY_RSA_ENC        0",
      "",
      "[Removed Lines]",
      "381: # define SSL_USE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC)",
      "",
      "[Added Lines]",
      "381: # define SSL_READ_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_READ)",
      "382: # define SSL_WRITE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1111:     unsigned char *alpn_client_proto_list;",
      "1112:     unsigned alpn_client_proto_list_len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1116:     int tlsext_use_etm;",
      "",
      "---------------"
    ],
    "ssl/t1_enc.c||ssl/t1_enc.c": [
      "File: ssl/t1_enc.c -> ssl/t1_enc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "130: #endif",
      "132:     if (which & SSL3_CC_READ) {",
      "133:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "134:             s->mac_flags |= SSL_MAC_FLAG_READ_MAC_STREAM;",
      "135:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "133:         if (s->tlsext_use_etm)",
      "134:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "135:         else",
      "136:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "168:         mac_secret = &(s->s3->read_mac_secret[0]);",
      "169:         mac_secret_size = &(s->s3->read_mac_secret_size);",
      "170:     } else {",
      "171:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "172:             s->mac_flags |= SSL_MAC_FLAG_WRITE_MAC_STREAM;",
      "173:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "176:         if (s->tlsext_use_etm)",
      "177:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "178:         else",
      "179:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "367:     if (s->s3->tmp.key_block_length != 0)",
      "368:         return (1);",
      "373:         SSLerr(SSL_F_TLS1_SETUP_KEY_BLOCK, SSL_R_CIPHER_OR_HASH_UNAVAILABLE);",
      "374:         return (0);",
      "375:     }",
      "",
      "[Removed Lines]",
      "370:     if (!ssl_cipher_get_evp",
      "371:         (s->session, &c, &hash, &mac_type, &mac_secret_size, &comp,",
      "372:          SSL_USE_ETM(s))) {",
      "",
      "[Added Lines]",
      "380:     if (!ssl_cipher_get_evp(s->session, &c, &hash, &mac_type, &mac_secret_size,",
      "381:                             &comp, s->tlsext_use_etm)) {",
      "",
      "---------------"
    ],
    "ssl/t1_lib.c||ssl/t1_lib.c": [
      "File: ssl/t1_lib.c -> ssl/t1_lib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674: #endif",
      "1675:     if (!custom_ext_add(s, 1, &ret, limit, al))",
      "1676:         return NULL;",
      "",
      "[Removed Lines]",
      "1677:     if (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC) {",
      "",
      "[Added Lines]",
      "1677:     if (s->tlsext_use_etm) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1683:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_RC4",
      "1684:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT",
      "1685:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT12)",
      "1687:         else {",
      "",
      "[Removed Lines]",
      "1686:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1686:             s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1917:     OPENSSL_free(s->s3->tmp.peer_sigalgs);",
      "1918:     s->s3->tmp.peer_sigalgs = NULL;",
      "1921: #ifndef OPENSSL_NO_SRP",
      "1922:     OPENSSL_free(s->srp_ctx.login);",
      "",
      "[Removed Lines]",
      "1919:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1919:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2264:         }",
      "2265: #endif",
      "2266:         else if (type == TLSEXT_TYPE_encrypt_then_mac)",
      "",
      "[Removed Lines]",
      "2267:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2267:             s->tlsext_use_etm = 1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2366:                              SSL_DTLSEXT_HB_DONT_SEND_REQUESTS);",
      "2367: #endif",
      "2371:     s->s3->flags &= ~TLS1_FLAGS_RECEIVED_EXTMS;",
      "",
      "[Removed Lines]",
      "2369:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2369:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2586:             if (s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD",
      "2587:                 && s->s3->tmp.new_cipher->algorithm_enc != SSL_RC4)",
      "2589:         } else if (type == TLSEXT_TYPE_extended_master_secret) {",
      "2590:             s->s3->flags |= TLS1_FLAGS_RECEIVED_EXTMS;",
      "2591:             if (!s->hit)",
      "",
      "[Removed Lines]",
      "2588:                 s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2588:                 s->tlsext_use_etm = 1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "07bc93f479bb73567b23ceb6c2d96e7cc511edd3",
      "candidate_info": {
        "commit_hash": "07bc93f479bb73567b23ceb6c2d96e7cc511edd3",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/07bc93f479bb73567b23ceb6c2d96e7cc511edd3",
        "files": [
          "crypto/o_time.c"
        ],
        "message": "Remove obsolete comment\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1613)\n(cherry picked from commit 7c120357e5ef434c8a7d1d1c3ba4f2a33266374e)",
        "before_after_code_files": [
          "crypto/o_time.c||crypto/o_time.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/o_time.c||crypto/o_time.c": [
          "File: crypto/o_time.c -> crypto/o_time.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:     struct tm *ts = NULL;",
          "54: #if defined(OPENSSL_THREADS) && !defined(OPENSSL_SYS_WIN32) && (!defined(OPENSSL_SYS_VMS) || defined(gmtime_r)) && !defined(OPENSSL_SYS_MACOSX)",
          "60:     ts = result;",
          "61: #elif !defined(OPENSSL_SYS_VMS) || defined(VMS_GMTIME_OK)",
          "62:     ts = gmtime(timer);",
          "",
          "[Removed Lines]",
          "59:     gmtime_r(timer, result);",
          "",
          "[Added Lines]",
          "55:     if (gmtime_r(timer, result) == NULL)",
          "56:         return NULL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5229bbe73909c1f62b8696f20d0a291f7afc767c",
      "candidate_info": {
        "commit_hash": "5229bbe73909c1f62b8696f20d0a291f7afc767c",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/5229bbe73909c1f62b8696f20d0a291f7afc767c",
        "files": [
          "test/ct_test.c"
        ],
        "message": "Add test for CT_POLICY_EVAL_CTX default time\n\nChecks that the epoch_time_in_ms field of CT_POLICY_EVAL_CTX is initialized\nto approximately the current time (as returned by time()) by default. This\nprevents the addition of this field, and its verification during SCT\nvalidation, from breaking existing code that calls SCT_validate directly.\n\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1554)\n(cherry picked from commit ebcb536858a271e8812fb9bbafbc0b825e5ece24)",
        "before_after_code_files": [
          "test/ct_test.c||test/ct_test.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/ct_test.c||test/ct_test.c": [
          "File: test/ct_test.c -> test/ct_test.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #include <ctype.h>",
          "11: #include <stdio.h>",
          "12: #include <stdlib.h>",
          "13: #include <string.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: #include <math.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "548:     EXECUTE_CT_TEST();",
          "549: }",
          "551: int main(int argc, char *argv[])",
          "552: {",
          "553:     int result = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "556: static int test_default_ct_policy_eval_ctx_time_is_now()",
          "557: {",
          "558:     int success = 0;",
          "559:     CT_POLICY_EVAL_CTX *ct_policy_ctx = CT_POLICY_EVAL_CTX_new();",
          "560:     const time_t default_time = CT_POLICY_EVAL_CTX_get_time(ct_policy_ctx) /",
          "561:             1000;",
          "564:     if (fabs(difftime(time(NULL), default_time)) > time_tolerance) {",
          "565:         fprintf(stderr,",
          "566:                 \"Default CT_POLICY_EVAL_CTX time is not approximately now.\\n\");",
          "567:         goto end;",
          "568:     }",
          "570:     success = 1;",
          "571: end:",
          "572:     CT_POLICY_EVAL_CTX_free(ct_policy_ctx);",
          "573:     return success;",
          "574: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "571:     ADD_TEST(test_verify_fails_for_future_sct);",
          "572:     ADD_TEST(test_decode_tls_sct);",
          "573:     ADD_TEST(test_encode_tls_sct);",
          "575:     result = run_tests(argv[0]);",
          "576:     ERR_print_errors_fp(stderr);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "599:     ADD_TEST(test_default_ct_policy_eval_ctx_time_is_now);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c947fa492ea8d727929d02605a41979cfff7b261",
      "candidate_info": {
        "commit_hash": "c947fa492ea8d727929d02605a41979cfff7b261",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/c947fa492ea8d727929d02605a41979cfff7b261",
        "files": [
          "test/asynciotest.c"
        ],
        "message": "Make async_read and async_write return -1 on failure.\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n\nGH: #1966",
        "before_after_code_files": [
          "test/asynciotest.c||test/asynciotest.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "test/asynciotest.c||test/asynciotest.c": [
          "File: test/asynciotest.c -> test/asynciotest.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "85: static int async_read(BIO *bio, char *out, int outl)",
          "86: {",
          "87:     struct async_ctrs *ctrs;",
          "89:     BIO *next = BIO_next(bio);",
          "91:     if (outl <= 0)",
          "",
          "[Removed Lines]",
          "88:     int ret = 0;",
          "",
          "[Added Lines]",
          "88:     int ret = -1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "120: static int async_write(BIO *bio, const char *in, int inl)",
          "121: {",
          "122:     struct async_ctrs *ctrs;",
          "124:     size_t written = 0;",
          "125:     BIO *next = BIO_next(bio);",
          "",
          "[Removed Lines]",
          "123:     int ret = 0;",
          "",
          "[Added Lines]",
          "123:     int ret = -1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "93c2fb6f2706b2f2836128436f4541bd22e9ff40",
      "candidate_info": {
        "commit_hash": "93c2fb6f2706b2f2836128436f4541bd22e9ff40",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/93c2fb6f2706b2f2836128436f4541bd22e9ff40",
        "files": [
          "crypto/asn1/asn1_err.c",
          "include/openssl/asn1.h",
          "util/libcrypto.num"
        ],
        "message": "make update\n\nReviewed-by: Matt Caswell <matt@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3120)",
        "before_after_code_files": [
          "crypto/asn1/asn1_err.c||crypto/asn1/asn1_err.c",
          "include/openssl/asn1.h||include/openssl/asn1.h",
          "util/libcrypto.num||util/libcrypto.num"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/asn1/asn1_err.c||crypto/asn1/asn1_err.c": [
          "File: crypto/asn1/asn1_err.c -> crypto/asn1/asn1_err.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "85:     {ERR_FUNC(ASN1_F_C2I_ASN1_INTEGER), \"c2i_ASN1_INTEGER\"},",
          "86:     {ERR_FUNC(ASN1_F_C2I_ASN1_OBJECT), \"c2i_ASN1_OBJECT\"},",
          "87:     {ERR_FUNC(ASN1_F_C2I_IBUF), \"c2i_ibuf\"},",
          "88:     {ERR_FUNC(ASN1_F_COLLECT_DATA), \"collect_data\"},",
          "89:     {ERR_FUNC(ASN1_F_D2I_ASN1_OBJECT), \"d2i_ASN1_OBJECT\"},",
          "90:     {ERR_FUNC(ASN1_F_D2I_ASN1_UINTEGER), \"d2i_ASN1_UINTEGER\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "88:     {ERR_FUNC(ASN1_F_C2I_UINT64_INT), \"c2i_uint64_int\"},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "110:     {ERR_FUNC(ASN1_F_SMIME_READ_ASN1), \"SMIME_read_ASN1\"},",
          "111:     {ERR_FUNC(ASN1_F_SMIME_TEXT), \"SMIME_text\"},",
          "112:     {ERR_FUNC(ASN1_F_STBL_MODULE_INIT), \"stbl_module_init\"},",
          "113:     {ERR_FUNC(ASN1_F_X509_CRL_ADD0_REVOKED), \"X509_CRL_add0_revoked\"},",
          "114:     {ERR_FUNC(ASN1_F_X509_INFO_NEW), \"X509_INFO_new\"},",
          "115:     {ERR_FUNC(ASN1_F_X509_NAME_ENCODE), \"x509_name_encode\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "114:     {ERR_FUNC(ASN1_F_UINT32_C2I), \"uint32_c2i\"},",
          "115:     {ERR_FUNC(ASN1_F_UINT64_C2I), \"uint64_c2i\"},",
          "",
          "---------------"
        ],
        "include/openssl/asn1.h||include/openssl/asn1.h": [
          "File: include/openssl/asn1.h -> include/openssl/asn1.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "946: # define ASN1_F_C2I_ASN1_INTEGER                          194",
          "947: # define ASN1_F_C2I_ASN1_OBJECT                           196",
          "948: # define ASN1_F_C2I_IBUF                                  226",
          "949: # define ASN1_F_COLLECT_DATA                              140",
          "950: # define ASN1_F_D2I_ASN1_OBJECT                           147",
          "951: # define ASN1_F_D2I_ASN1_UINTEGER                         150",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "949: # define ASN1_F_C2I_UINT64_INT                            101",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "971: # define ASN1_F_SMIME_READ_ASN1                           212",
          "972: # define ASN1_F_SMIME_TEXT                                213",
          "973: # define ASN1_F_STBL_MODULE_INIT                          223",
          "974: # define ASN1_F_X509_CRL_ADD0_REVOKED                     169",
          "975: # define ASN1_F_X509_INFO_NEW                             170",
          "976: # define ASN1_F_X509_NAME_ENCODE                          203",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "975: # define ASN1_F_UINT32_C2I                                105",
          "976: # define ASN1_F_UINT64_C2I                                112",
          "",
          "---------------"
        ],
        "util/libcrypto.num||util/libcrypto.num": [
          "File: util/libcrypto.num -> util/libcrypto.num",
          "--- Hunk 1 ---",
          "[Context before]",
          "4214: X509_VERIFY_PARAM_get_inh_flags         4175 1_1_0d EXIST::FUNCTION:",
          "4215: X509_VERIFY_PARAM_get_time              4181 1_1_0d EXIST::FUNCTION:",
          "4216: DH_check_params                         4183 1_1_0d EXIST::FUNCTION:DH",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4217: INT32_it                                4208 1_1_0f EXIST:!EXPORT_VAR_AS_FUNCTION:VARIABLE:",
          "4218: INT32_it                                4208 1_1_0f EXIST:EXPORT_VAR_AS_FUNCTION:FUNCTION:",
          "4219: UINT64_it                               4209 1_1_0f EXIST:!EXPORT_VAR_AS_FUNCTION:VARIABLE:",
          "4220: UINT64_it                               4209 1_1_0f EXIST:EXPORT_VAR_AS_FUNCTION:FUNCTION:",
          "4221: ZINT32_it                               4210 1_1_0f EXIST:!EXPORT_VAR_AS_FUNCTION:VARIABLE:",
          "4222: ZINT32_it                               4210 1_1_0f EXIST:EXPORT_VAR_AS_FUNCTION:FUNCTION:",
          "4223: ZUINT64_it                              4211 1_1_0f EXIST:!EXPORT_VAR_AS_FUNCTION:VARIABLE:",
          "4224: ZUINT64_it                              4211 1_1_0f EXIST:EXPORT_VAR_AS_FUNCTION:FUNCTION:",
          "4225: INT64_it                                4212 1_1_0f EXIST:!EXPORT_VAR_AS_FUNCTION:VARIABLE:",
          "4226: INT64_it                                4212 1_1_0f EXIST:EXPORT_VAR_AS_FUNCTION:FUNCTION:",
          "4227: ZUINT32_it                              4213 1_1_0f EXIST:!EXPORT_VAR_AS_FUNCTION:VARIABLE:",
          "4228: ZUINT32_it                              4213 1_1_0f EXIST:EXPORT_VAR_AS_FUNCTION:FUNCTION:",
          "4229: UINT32_it                               4214 1_1_0f EXIST:!EXPORT_VAR_AS_FUNCTION:VARIABLE:",
          "4230: UINT32_it                               4214 1_1_0f EXIST:EXPORT_VAR_AS_FUNCTION:FUNCTION:",
          "4231: ZINT64_it                               4215 1_1_0f EXIST:!EXPORT_VAR_AS_FUNCTION:VARIABLE:",
          "4232: ZINT64_it                               4215 1_1_0f EXIST:EXPORT_VAR_AS_FUNCTION:FUNCTION:",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "aaec49fae2c4605ec578ad77b14913852fe4acca",
      "candidate_info": {
        "commit_hash": "aaec49fae2c4605ec578ad77b14913852fe4acca",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/aaec49fae2c4605ec578ad77b14913852fe4acca",
        "files": [
          "crypto/dsa/dsa_pmeth.c"
        ],
        "message": "Fix DSA parameter generation control error\n\nWhen setting the digest parameter for DSA parameter generation, the\nsignature MD was set instead of the parameter generation one.\nFortunately, that's also the one that was used for parameter\ngeneration, but it ultimately meant the parameter generator MD and the\nsignature MD would always be the same.\n\nFixes github issue #2016\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2250)\n(cherry picked from commit 8a05c4d3b5a1bfb9193ea24e71735e11de7168d2)",
        "before_after_code_files": [
          "crypto/dsdsa_pmeth.c||crypto/dsa/dsa_pmeth.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/dsdsa_pmeth.c||crypto/dsa/dsa_pmeth.c": [
          "File: crypto/dsdsa_pmeth.c -> crypto/dsa/dsa_pmeth.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "139:         dctx->pmd = p2;",
          "",
          "---------------"
        ]
      }
    }
  ]
}