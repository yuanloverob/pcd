{
  "cve_id": "CVE-2019-19923",
  "cve_desc": "flattenSubquery in select.c in SQLite 3.30.1 mishandles certain uses of SELECT DISTINCT involving a LEFT JOIN in which the right-hand side is a view. This can cause a NULL pointer dereference (or incorrect results).",
  "repo": "sqlite/sqlite",
  "patch_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
  "patch_info": {
    "commit_hash": "396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/396afe6f6aa90a31303c183e11b2b2d4b7956b35",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c",
      "test/join.test"
    ],
    "message": "Continue to back away from the LEFT JOIN optimization of check-in [41c27bc0ff1d3135] by disallowing query flattening if the outer query is DISTINCT.  Without this fix, if an index scan is run on the table within the view on the right-hand side of the LEFT JOIN, stale result registers might be accessed yielding incorrect results, and/or an OP_IfNullRow opcode might be invoked on the un-opened table, resulting in a NULL-pointer dereference.  This problem was found by the Yongheng and Rui fuzzer.\n\nFossilOrigin-Name: 862974312edf00e9d1068115d1a39b7235b7db68b6d86b81d38a12f025a4748e",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c",
      "test/join.test||test/join.test"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 289158aa24b066c453d2bce4bc2dead1c56fb0b23c3f7c4810b34b13627cef34",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3797:   if( (pSubitem->fg.jointype & JT_OUTER)!=0 ){",
      "3798:     isLeftJoin = 1;",
      "3801:       return 0;",
      "3802:     }",
      "3803:   }",
      "",
      "[Removed Lines]",
      "3799:     if( pSubSrc->nSrc>1 || isAgg || IsVirtual(pSubSrc->a[0].pTab) ){",
      "",
      "[Added Lines]",
      "3804:     ){",
      "",
      "---------------"
    ],
    "test/join.test||test/join.test": [
      "File: test/join.test -> test/join.test",
      "--- Hunk 1 ---",
      "[Context before]",
      "975:   SELECT 24, * FROM t1 LEFT JOIN t0 ON +aa ISNULL;",
      "976: } {13 1 {} 14 1 {} 23 1 {} 24 1 {}}",
      "978: finish_test",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "978: # 2019-12-18 problem with a LEFT JOIN where the RHS is a view.",
      "979: # Detected by Yongheng and Rui.",
      "980: # Follows from the optimization attempt of check-in 41c27bc0ff1d3135",
      "981: # on 2017-04-18",
      "982: #",
      "983: reset_db",
      "984: do_execsql_test join-22.10 {",
      "985:   CREATE TABLE t0(a, b);",
      "986:   CREATE INDEX t0a ON t0(a);",
      "987:   INSERT INTO t0 VALUES(10,10),(10,11),(10,12);",
      "988:   SELECT DISTINCT c FROM t0 LEFT JOIN (SELECT a+1 AS c FROM t0) ORDER BY c ;",
      "989: } {11}",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d5ddecb2f09f3949d309433a87d3225dd7ea96af",
      "candidate_info": {
        "commit_hash": "d5ddecb2f09f3949d309433a87d3225dd7ea96af",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/d5ddecb2f09f3949d309433a87d3225dd7ea96af",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/vdbemem.c"
        ],
        "message": "Minor simplification of NULL value handling for STAT4.\n\nFossilOrigin-Name: 69bad9257f8db6a2a761bdd298d972eb48d4f845ec11dedc802ba3bafb979915",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/vdbemem.c||src/vdbemem.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 0fe3c3fd30294d15cdfe29e9c49f3c8968e864ec8a114282561642f75586ab09",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/vdbemem.c||src/vdbemem.c": [
          "File: src/vdbemem.c -> src/vdbemem.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1511:   }else if( op==TK_NULL ){",
          "1512:     pVal = valueNew(db, pCtx);",
          "1513:     if( pVal==0 ) goto no_mem;",
          "1515:   }",
          "1516: #ifndef SQLITE_OMIT_BLOB_LITERAL",
          "1517:   else if( op==TK_BLOB ){",
          "",
          "[Removed Lines]",
          "1514:     sqlite3VdbeMemNumerify(pVal);",
          "",
          "[Added Lines]",
          "1514:     sqlite3VdbeMemSetNull(pVal);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b8852ae083d8e8ea60ca331f4c3b5619dda00aac",
      "candidate_info": {
        "commit_hash": "b8852ae083d8e8ea60ca331f4c3b5619dda00aac",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/b8852ae083d8e8ea60ca331f4c3b5619dda00aac",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/pager.c",
          "test/fallocate.test"
        ],
        "message": "Remove a broken assert() triggered by a \"PRAGMA max_page_count = N\" invocation, where N is larger than the number of pages in the database image, but smaller than the number of pages in the database file.\n\nFossilOrigin-Name: 7cd56cad5efead5097e9918c87313bb46e583fe62bae0df1be60e10117e2c3cb",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/pager.c||src/pager.c",
          "test/fallocate.test||test/fallocate.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 908ff7fffa302255a74e2334ca3a1779ed43acb0268fce5a83a56fd16794dc88",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/pager.c||src/pager.c": [
          "File: src/pager.c -> src/pager.c"
        ],
        "test/fallocate.test||test/fallocate.test": [
          "File: test/fallocate.test -> test/fallocate.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "70: } {1024}",
          "71: do_test fallocate-1.8 { execsql { COMMIT } } {}",
          "74: #-------------------------------------------------------------------------",
          "75: # The following tests - fallocate-2.* - test that things work in WAL",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "73: do_test 1.8 {",
          "74:   set nPg [db one {PRAGMA page_count}]",
          "75:   set nFile [expr [file size test.db] / 1024]",
          "76:   list [expr $nPg<100] [expr $nFile>100]",
          "77: } {1 1}",
          "79: do_execsql_test 1.9 {",
          "80:   PRAGMA max_page_count = 100;",
          "81: } {}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cd30064bd502b9b42a4e0c0e04850f09cefa2617",
      "candidate_info": {
        "commit_hash": "cd30064bd502b9b42a4e0c0e04850f09cefa2617",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/cd30064bd502b9b42a4e0c0e04850f09cefa2617",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/fuzzdata1.db",
          "test/gencol1.test"
        ],
        "message": "Add all fuzz-test cases received from Yongheng Chen and Rui Zhong.  Also fix a minor problem in gencol1.test cases.\n\nFossilOrigin-Name: ac080432b480062507452d3cdbe6c0f759e6f95b65d9862e0462017405ab2b8e",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/gencol1.test||test/gencol1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: a0ab42f779b9a96f4e43879210dfaba8fa593de77fc0ec0e2e6f116d9301ea59",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/gencol1.test||test/gencol1.test": [
          "File: test/gencol1.test -> test/gencol1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "246: # 2019-11-21 Problems in the new generated column logic",
          "247: # reported by Yongheng Chen and Rui Zhong",
          "248: do_execsql_test gencol1-9.10 {",
          "249:   DROP TABLE t1;",
          "250:   CREATE TABLE t1(aa , bb AS (17) UNIQUE);",
          "251:   INSERT INTO t1 VALUES(17);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "249:   PRAGMA foreign_keys=OFF;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "926f796e8feec15f3836aa0a060ed906f8ae04d3",
      "candidate_info": {
        "commit_hash": "926f796e8feec15f3836aa0a060ed906f8ae04d3",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/926f796e8feec15f3836aa0a060ed906f8ae04d3",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/resolve.c",
          "test/gencol1.test"
        ],
        "message": "Ensure that the SrcList_item.colUsed field is set correctly (set to have a 1 for all columns of the table) when a generated column appears in the USING clause of a join.\n\nFossilOrigin-Name: 1923efb283e8840fa7436eb20b9d2174ef7cace1690d3b97b572a0db2048b8e3",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/resolve.c||src/resolve.c",
          "test/gencol1.test||test/gencol1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: f3b39c71b88cb6721f443de56cdce4c08252453a5e340b00a2bd88dc10c42400",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/resolve.c||src/resolve.c": [
          "File: src/resolve.c -> src/resolve.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "624:   Expr *p = sqlite3ExprAlloc(db, TK_COLUMN, 0, 0);",
          "625:   if( p ){",
          "626:     struct SrcList_item *pItem = &pSrc->a[iSrc];",
          "628:     p->iTable = pItem->iCursor;",
          "629:     if( p->y.pTab->iPKey==iCol ){",
          "630:       p->iColumn = -1;",
          "631:     }else{",
          "632:       p->iColumn = (ynVar)iCol;",
          "636:     }",
          "637:   }",
          "638:   return p;",
          "",
          "[Removed Lines]",
          "627:     p->y.pTab = pItem->pTab;",
          "633:       testcase( iCol==BMS );",
          "634:       testcase( iCol==BMS-1 );",
          "635:       pItem->colUsed |= ((Bitmask)1)<<(iCol>=BMS ? BMS-1 : iCol);",
          "",
          "[Added Lines]",
          "627:     Table *pTab = p->y.pTab = pItem->pTab;",
          "633:       if( pTab->tabFlags & TF_HasGenerated ){",
          "634:         Column *pColumn = pTab->aCol + iCol;",
          "635:         if( pColumn->colFlags & COLFLAG_GENERATED ){",
          "636:           testcase( pTab->nCol==63 );",
          "637:           testcase( pTab->nCol==64 );",
          "638:           if( pTab->nCol>=64 ){",
          "639:             pItem->colUsed = ALLBITS;",
          "640:           }else{",
          "641:             pItem->colUsed = MASKBIT(pTab->nCol)-1;",
          "642:           }",
          "643:         }",
          "644:       }else{",
          "645:         testcase( iCol==BMS );",
          "646:         testcase( iCol==BMS-1 );",
          "647:         pItem->colUsed |= ((Bitmask)1)<<(iCol>=BMS ? BMS-1 : iCol);",
          "648:       }",
          "",
          "---------------"
        ],
        "test/gencol1.test||test/gencol1.test": [
          "File: test/gencol1.test -> test/gencol1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "342:   PRAGMA integrity_check;",
          "343: } {ok}",
          "345: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "345: # 2019-12-09 but report from Yongheng Chen",
          "346: # Ensure that the SrcList_item.colUsed field is set correctly when a",
          "347: # generated column appears in the USING clause of a join.",
          "348: #",
          "349: do_execsql_test gencol1-13.10 {",
          "350:   CREATE TABLE t1(x, y AS(x+1));",
          "351:   INSERT INTO t1 VALUES(10);",
          "352:   SELECT y FROM t1 JOIN t1 USING (y,y);",
          "353: } {11}",
          "354: do_execsql_test gencol1-13.11 {",
          "355:   CREATE INDEX t1y ON t1(y);",
          "356:   SELECT y FROM t1 JOIN t1 USING (y,y);",
          "357: } {11}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "af4d50c4a1be9a4caa06270d17ef9ea8bb7c5519",
      "candidate_info": {
        "commit_hash": "af4d50c4a1be9a4caa06270d17ef9ea8bb7c5519",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/af4d50c4a1be9a4caa06270d17ef9ea8bb7c5519",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/test_fs.c"
        ],
        "message": "Fix a bug in test module test_fs.c causing a segfault on OpenBSD.\n\nFossilOrigin-Name: ee886600297c2a03d9d1d10db88d3d107b48e5d4de5e5d91b0ab16cc7c447ede",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/test_fs.c||src/test_fs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 09fa0b3c4adf7f81a777975762029ad43dbdc76b02dc32d2307e1c42465213c9",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/test_fs.c||src/test_fs.c": [
          "File: src/test_fs.c -> src/test_fs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "131:   sqlite3_int64 iRowid;",
          "133: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "132:   struct DIRENT *pEntry;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "236:   FsdirCsr *pCsr = (FsdirCsr*)cur;",
          "238:   if( pCsr->pDir ){",
          "245:       closedir(pCsr->pDir);",
          "246:       pCsr->pDir = 0;",
          "247:     }",
          "",
          "[Removed Lines]",
          "239:     struct DIRENT *pRes = 0;",
          "240:     pRes = readdir(pCsr->pDir);",
          "241:     if( pRes!=0 ){",
          "242:       memcpy(&pCsr->entry, pRes, sizeof(struct DIRENT));",
          "243:     }",
          "244:     if( pRes==0 ){",
          "",
          "[Added Lines]",
          "239:     pCsr->pEntry = readdir(pCsr->pDir);",
          "240:     if( pCsr->pEntry==0 ){",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "304:       break;",
          "308:       break;",
          "310:     default:",
          "",
          "[Removed Lines]",
          "307:       sqlite3_result_text(ctx, pCsr->entry.d_name, -1, SQLITE_TRANSIENT);",
          "",
          "[Added Lines]",
          "303:       sqlite3_result_text(ctx, pCsr->pEntry->d_name, -1, SQLITE_TRANSIENT);",
          "",
          "---------------"
        ]
      }
    }
  ]
}