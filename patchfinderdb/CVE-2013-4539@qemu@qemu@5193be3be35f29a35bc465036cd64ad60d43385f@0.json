{
  "cve_id": "CVE-2013-4539",
  "cve_desc": "Multiple buffer overflows in the tsc210x_load function in hw/input/tsc210x.c in QEMU before 1.7.2 might allow remote attackers to execute arbitrary code via a crafted (1) precision, (2) nextprecision, (3) function, or (4) nextfunction value in a savevm image.",
  "repo": "qemu/qemu",
  "patch_hash": "5193be3be35f29a35bc465036cd64ad60d43385f",
  "patch_info": {
    "commit_hash": "5193be3be35f29a35bc465036cd64ad60d43385f",
    "repo": "qemu/qemu",
    "commit_url": "https://github.com/qemu/qemu/commit/5193be3be35f29a35bc465036cd64ad60d43385f",
    "files": [
      "hw/input/tsc210x.c"
    ],
    "message": "tsc210x: fix buffer overrun on invalid state load\n\nCVE-2013-4539\n\ns->precision, nextprecision, function and nextfunction\ncome from wire and are used\nas idx into resolution[] in TSC_CUT_RESOLUTION.\n\nValidate after load to avoid buffer overrun.\n\nCc: Andreas F\u00e4rber <afaerber@suse.de>\nSigned-off-by: Michael S. Tsirkin <mst@redhat.com>\nSigned-off-by: Juan Quintela <quintela@redhat.com>",
    "before_after_code_files": [
      "hw/input/tsc210x.c||hw/input/tsc210x.c"
    ]
  },
  "patch_diff": {
    "hw/input/tsc210x.c||hw/input/tsc210x.c": [
      "File: hw/input/tsc210x.c -> hw/input/tsc210x.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1070:     s->enabled = qemu_get_byte(f);",
      "1071:     s->host_mode = qemu_get_byte(f);",
      "1072:     s->function = qemu_get_byte(f);",
      "1073:     s->nextfunction = qemu_get_byte(f);",
      "1074:     s->precision = qemu_get_byte(f);",
      "1075:     s->nextprecision = qemu_get_byte(f);",
      "1076:     s->filter = qemu_get_byte(f);",
      "1077:     s->pin_func = qemu_get_byte(f);",
      "1078:     s->ref = qemu_get_byte(f);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1073:     if (s->function < 0 || s->function >= ARRAY_SIZE(mode_regs)) {",
      "1074:         return -EINVAL;",
      "1075:     }",
      "1077:     if (s->nextfunction < 0 || s->nextfunction >= ARRAY_SIZE(mode_regs)) {",
      "1078:         return -EINVAL;",
      "1079:     }",
      "1081:     if (s->precision < 0 || s->precision >= ARRAY_SIZE(resolution)) {",
      "1082:         return -EINVAL;",
      "1083:     }",
      "1085:     if (s->nextprecision < 0 || s->nextprecision >= ARRAY_SIZE(resolution)) {",
      "1086:         return -EINVAL;",
      "1087:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "894f179e8d206b8ef544ea3680c6b433e7a9e3f9",
      "candidate_info": {
        "commit_hash": "894f179e8d206b8ef544ea3680c6b433e7a9e3f9",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/894f179e8d206b8ef544ea3680c6b433e7a9e3f9",
        "files": [
          "hw/input/tsc210x.c"
        ],
        "message": "tsc210x: fix buffer overrun on invalid state load\n\nCVE-2013-4539\n\ns->precision, nextprecision, function and nextfunction\ncome from wire and are used\nas idx into resolution[] in TSC_CUT_RESOLUTION.\n\nValidate after load to avoid buffer overrun.\n\nCc: Andreas F\u00e4rber <afaerber@suse.de>\nSigned-off-by: Michael S. Tsirkin <mst@redhat.com>\nSigned-off-by: Juan Quintela <quintela@redhat.com>\n(cherry picked from commit 5193be3be35f29a35bc465036cd64ad60d43385f)\nSigned-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>",
        "before_after_code_files": [
          "hw/input/tsc210x.c||hw/input/tsc210x.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hw/input/tsc210x.c||hw/input/tsc210x.c"
          ],
          "candidate": [
            "hw/input/tsc210x.c||hw/input/tsc210x.c"
          ]
        }
      },
      "candidate_diff": {
        "hw/input/tsc210x.c||hw/input/tsc210x.c": [
          "File: hw/input/tsc210x.c -> hw/input/tsc210x.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1070:     s->enabled = qemu_get_byte(f);",
          "1071:     s->host_mode = qemu_get_byte(f);",
          "1072:     s->function = qemu_get_byte(f);",
          "1073:     s->nextfunction = qemu_get_byte(f);",
          "1074:     s->precision = qemu_get_byte(f);",
          "1075:     s->nextprecision = qemu_get_byte(f);",
          "1076:     s->filter = qemu_get_byte(f);",
          "1077:     s->pin_func = qemu_get_byte(f);",
          "1078:     s->ref = qemu_get_byte(f);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1073:     if (s->function < 0 || s->function >= ARRAY_SIZE(mode_regs)) {",
          "1074:         return -EINVAL;",
          "1075:     }",
          "1077:     if (s->nextfunction < 0 || s->nextfunction >= ARRAY_SIZE(mode_regs)) {",
          "1078:         return -EINVAL;",
          "1079:     }",
          "1081:     if (s->precision < 0 || s->precision >= ARRAY_SIZE(resolution)) {",
          "1082:         return -EINVAL;",
          "1083:     }",
          "1085:     if (s->nextprecision < 0 || s->nextprecision >= ARRAY_SIZE(resolution)) {",
          "1086:         return -EINVAL;",
          "1087:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c75e43b871fb0a777ae1101a26a42ea213f7aff6",
      "candidate_info": {
        "commit_hash": "c75e43b871fb0a777ae1101a26a42ea213f7aff6",
        "repo": "qemu/qemu",
        "commit_url": "https://github.com/qemu/qemu/commit/c75e43b871fb0a777ae1101a26a42ea213f7aff6",
        "files": [
          "hw/input/tsc210x.c"
        ],
        "message": "tsc210x: fix buffer overrun on invalid state load\n\nCVE-2013-4539\n\ns->precision, nextprecision, function and nextfunction\ncome from wire and are used\nas idx into resolution[] in TSC_CUT_RESOLUTION.\n\nValidate after load to avoid buffer overrun.\n\nCc: Andreas F\u00e4rber <afaerber@suse.de>\nSigned-off-by: Michael S. Tsirkin <mst@redhat.com>\nSigned-off-by: Juan Quintela <quintela@redhat.com>\n(cherry picked from commit 5193be3be35f29a35bc465036cd64ad60d43385f)\nSigned-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>",
        "before_after_code_files": [
          "hw/input/tsc210x.c||hw/input/tsc210x.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hw/input/tsc210x.c||hw/input/tsc210x.c"
          ],
          "candidate": [
            "hw/input/tsc210x.c||hw/input/tsc210x.c"
          ]
        }
      },
      "candidate_diff": {
        "hw/input/tsc210x.c||hw/input/tsc210x.c": [
          "File: hw/input/tsc210x.c -> hw/input/tsc210x.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1070:     s->enabled = qemu_get_byte(f);",
          "1071:     s->host_mode = qemu_get_byte(f);",
          "1072:     s->function = qemu_get_byte(f);",
          "1073:     s->nextfunction = qemu_get_byte(f);",
          "1074:     s->precision = qemu_get_byte(f);",
          "1075:     s->nextprecision = qemu_get_byte(f);",
          "1076:     s->filter = qemu_get_byte(f);",
          "1077:     s->pin_func = qemu_get_byte(f);",
          "1078:     s->ref = qemu_get_byte(f);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1073:     if (s->function < 0 || s->function >= ARRAY_SIZE(mode_regs)) {",
          "1074:         return -EINVAL;",
          "1075:     }",
          "1077:     if (s->nextfunction < 0 || s->nextfunction >= ARRAY_SIZE(mode_regs)) {",
          "1078:         return -EINVAL;",
          "1079:     }",
          "1081:     if (s->precision < 0 || s->precision >= ARRAY_SIZE(resolution)) {",
          "1082:         return -EINVAL;",
          "1083:     }",
          "1085:     if (s->nextprecision < 0 || s->nextprecision >= ARRAY_SIZE(resolution)) {",
          "1086:         return -EINVAL;",
          "1087:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}