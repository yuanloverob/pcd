{
  "cve_id": "CVE-2017-3733",
  "cve_desc": "During a renegotiation handshake if the Encrypt-Then-Mac extension is negotiated where it was not in the original handshake (or vice-versa) then this can cause OpenSSL 1.1.0 before 1.1.0e to crash (dependent on ciphersuite). Both clients and servers are affected.",
  "repo": "openssl/openssl",
  "patch_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
  "patch_info": {
    "commit_hash": "4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2",
    "files": [
      "include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h",
      "ssl/t1_enc.c",
      "ssl/t1_lib.c"
    ],
    "message": "Don't change the state of the ETM flags until CCS processing\n\nChanging the ciphersuite during a renegotiation can result in a crash\nleading to a DoS attack. ETM has not been implemented in 1.1.0 for DTLS\nso this is TLS only.\n\nThe problem is caused by changing the flag indicating whether to use ETM\nor not immediately on negotiation of ETM, rather than at CCS. Therefore,\nduring a renegotiation, if the ETM state is changing (usually due to a\nchange of ciphersuite), then an error/crash will occur.\n\nDue to the fact that there are separate CCS messages for read and write\nwe actually now need two flags to determine whether to use ETM or not.\n\nCVE-2017-3733\n\nReviewed-by: Richard Levitte <levitte@openssl.org>",
    "before_after_code_files": [
      "include/openssl/ssl3.h||include/openssl/ssl3.h",
      "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c",
      "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c",
      "ssl/ssl_locl.h||ssl/ssl_locl.h",
      "ssl/t1_enc.c||ssl/t1_enc.c",
      "ssl/t1_lib.c||ssl/t1_lib.c"
    ]
  },
  "patch_diff": {
    "include/openssl/ssl3.h||include/openssl/ssl3.h": [
      "File: include/openssl/ssl3.h -> include/openssl/ssl3.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "264: # define TLS1_FLAGS_SKIP_CERT_VERIFY             0x0010",
      "270: # define TLS1_FLAGS_RECEIVED_EXTMS               0x0200",
      "272: # define SSL3_MT_HELLO_REQUEST                   0",
      "273: # define SSL3_MT_CLIENT_HELLO                    1",
      "274: # define SSL3_MT_SERVER_HELLO                    2",
      "",
      "[Removed Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             0x0100",
      "",
      "[Added Lines]",
      "267: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_READ        0x0100",
      "268: # define TLS1_FLAGS_ENCRYPT_THEN_MAC             TLS1_FLAGS_ENCRYPT_THEN_MAC_READ",
      "273: # define TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE       0x0400",
      "",
      "---------------"
    ],
    "ssl/record/rec_layer_s3.c||ssl/record/rec_layer_s3.c": [
      "File: ssl/record/rec_layer_s3.c -> ssl/record/rec_layer_s3.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "395:     if (type == SSL3_RT_APPLICATION_DATA &&",
      "396:         u_len >= 4 * (max_send_fragment = s->max_send_fragment) &&",
      "397:         s->compress == NULL && s->msg_callback == NULL &&",
      "399:         EVP_CIPHER_flags(EVP_CIPHER_CTX_cipher(s->enc_write_ctx)) &",
      "400:         EVP_CIPH_FLAG_TLS1_1_MULTIBLOCK) {",
      "401:         unsigned char aad[13];",
      "",
      "[Removed Lines]",
      "398:         !SSL_USE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "[Added Lines]",
      "398:         !SSL_WRITE_ETM(s) && SSL_USE_EXPLICIT_IV(s) &&",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "795:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "796:                                          &(outbuf[j][wr[j].length + eivlen]),",
      "797:                                          1) < 0)",
      "",
      "[Removed Lines]",
      "794:         if (!SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "794:         if (!SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "814:         goto err;",
      "816:     for (j = 0; j < numpipes; j++) {",
      "818:             if (s->method->ssl3_enc->mac(s, &wr[j],",
      "819:                                          outbuf[j] + wr[j].length, 1) < 0)",
      "820:                 goto err;",
      "",
      "[Removed Lines]",
      "817:         if (SSL_USE_ETM(s) && mac_size != 0) {",
      "",
      "[Added Lines]",
      "817:         if (SSL_WRITE_ETM(s) && mac_size != 0) {",
      "",
      "---------------"
    ],
    "ssl/record/ssl3_record.c||ssl/record/ssl3_record.c": [
      "File: ssl/record/ssl3_record.c -> ssl/record/ssl3_record.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "350:         unsigned char *mac;",
      "351:         mac_size = EVP_MD_CTX_size(s->read_hash);",
      "352:         OPENSSL_assert(mac_size <= EVP_MAX_MD_SIZE);",
      "",
      "[Removed Lines]",
      "349:     if (SSL_USE_ETM(s) && s->read_hash) {",
      "",
      "[Added Lines]",
      "349:     if (SSL_READ_ETM(s) && s->read_hash) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "394:     if ((sess != NULL) &&",
      "395:         (s->enc_read_ctx != NULL) &&",
      "398:         unsigned char *mac = NULL;",
      "399:         unsigned char mac_tmp[EVP_MAX_MD_SIZE];",
      "",
      "[Removed Lines]",
      "396:         (EVP_MD_CTX_md(s->read_hash) != NULL) && !SSL_USE_ETM(s)) {",
      "",
      "[Added Lines]",
      "396:         (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "823:         }",
      "825:         ret = 1;",
      "827:             mac_size = EVP_MD_CTX_size(s->read_hash);",
      "828:         if ((bs != 1) && !send) {",
      "829:             int tmpret;",
      "",
      "[Removed Lines]",
      "826:         if (!SSL_USE_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "[Added Lines]",
      "826:         if (!SSL_READ_ETM(s) && EVP_MD_CTX_md(s->read_hash) != NULL)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "997:     header[11] = (rec->length) >> 8;",
      "998:     header[12] = (rec->length) & 0xff;",
      "1001:         EVP_CIPHER_CTX_mode(ssl->enc_read_ctx) == EVP_CIPH_CBC_MODE &&",
      "1002:         ssl3_cbc_record_digest_supported(mac_ctx)) {",
      "",
      "[Removed Lines]",
      "1000:     if (!send && !SSL_USE_ETM(ssl) &&",
      "",
      "[Added Lines]",
      "1000:     if (!send && !SSL_READ_ETM(ssl) &&",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1022:             EVP_MD_CTX_free(hmac);",
      "1023:             return -1;",
      "1024:         }",
      "1026:             if (!tls_fips_digest_extra(ssl->enc_read_ctx,",
      "1027:                                        mac_ctx, rec->input,",
      "1028:                                        rec->length, rec->orig_len)) {",
      "",
      "[Removed Lines]",
      "1025:         if (!send && !SSL_USE_ETM(ssl) && FIPS_mode())",
      "",
      "[Added Lines]",
      "1025:         if (!send && !SSL_READ_ETM(ssl) && FIPS_mode())",
      "",
      "---------------"
    ],
    "ssl/ssl_locl.h||ssl/ssl_locl.h": [
      "File: ssl/ssl_locl.h -> ssl/ssl_locl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "378: # define SSL_CLIENT_USE_SIGALGS(s)        \\",
      "379:     SSL_CLIENT_USE_TLS1_2_CIPHERS(s)",
      "384: # define SSL_PKEY_RSA_ENC        0",
      "",
      "[Removed Lines]",
      "381: # define SSL_USE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC)",
      "",
      "[Added Lines]",
      "381: # define SSL_READ_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_READ)",
      "382: # define SSL_WRITE_ETM(s) (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1111:     unsigned char *alpn_client_proto_list;",
      "1112:     unsigned alpn_client_proto_list_len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1116:     int tlsext_use_etm;",
      "",
      "---------------"
    ],
    "ssl/t1_enc.c||ssl/t1_enc.c": [
      "File: ssl/t1_enc.c -> ssl/t1_enc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "130: #endif",
      "132:     if (which & SSL3_CC_READ) {",
      "133:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "134:             s->mac_flags |= SSL_MAC_FLAG_READ_MAC_STREAM;",
      "135:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "133:         if (s->tlsext_use_etm)",
      "134:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "135:         else",
      "136:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_READ;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "168:         mac_secret = &(s->s3->read_mac_secret[0]);",
      "169:         mac_secret_size = &(s->s3->read_mac_secret_size);",
      "170:     } else {",
      "171:         if (s->s3->tmp.new_cipher->algorithm2 & TLS1_STREAM_MAC)",
      "172:             s->mac_flags |= SSL_MAC_FLAG_WRITE_MAC_STREAM;",
      "173:         else",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "176:         if (s->tlsext_use_etm)",
      "177:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "178:         else",
      "179:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC_WRITE;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "367:     if (s->s3->tmp.key_block_length != 0)",
      "368:         return (1);",
      "373:         SSLerr(SSL_F_TLS1_SETUP_KEY_BLOCK, SSL_R_CIPHER_OR_HASH_UNAVAILABLE);",
      "374:         return (0);",
      "375:     }",
      "",
      "[Removed Lines]",
      "370:     if (!ssl_cipher_get_evp",
      "371:         (s->session, &c, &hash, &mac_type, &mac_secret_size, &comp,",
      "372:          SSL_USE_ETM(s))) {",
      "",
      "[Added Lines]",
      "380:     if (!ssl_cipher_get_evp(s->session, &c, &hash, &mac_type, &mac_secret_size,",
      "381:                             &comp, s->tlsext_use_etm)) {",
      "",
      "---------------"
    ],
    "ssl/t1_lib.c||ssl/t1_lib.c": [
      "File: ssl/t1_lib.c -> ssl/t1_lib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674: #endif",
      "1675:     if (!custom_ext_add(s, 1, &ret, limit, al))",
      "1676:         return NULL;",
      "",
      "[Removed Lines]",
      "1677:     if (s->s3->flags & TLS1_FLAGS_ENCRYPT_THEN_MAC) {",
      "",
      "[Added Lines]",
      "1677:     if (s->tlsext_use_etm) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1683:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_RC4",
      "1684:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT",
      "1685:             || s->s3->tmp.new_cipher->algorithm_enc == SSL_eGOST2814789CNT12)",
      "1687:         else {",
      "",
      "[Removed Lines]",
      "1686:             s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1686:             s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1917:     OPENSSL_free(s->s3->tmp.peer_sigalgs);",
      "1918:     s->s3->tmp.peer_sigalgs = NULL;",
      "1921: #ifndef OPENSSL_NO_SRP",
      "1922:     OPENSSL_free(s->srp_ctx.login);",
      "",
      "[Removed Lines]",
      "1919:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "1919:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2264:         }",
      "2265: #endif",
      "2266:         else if (type == TLSEXT_TYPE_encrypt_then_mac)",
      "",
      "[Removed Lines]",
      "2267:             s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2267:             s->tlsext_use_etm = 1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2366:                              SSL_DTLSEXT_HB_DONT_SEND_REQUESTS);",
      "2367: #endif",
      "2371:     s->s3->flags &= ~TLS1_FLAGS_RECEIVED_EXTMS;",
      "",
      "[Removed Lines]",
      "2369:     s->s3->flags &= ~TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2369:     s->tlsext_use_etm = 0;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2586:             if (s->s3->tmp.new_cipher->algorithm_mac != SSL_AEAD",
      "2587:                 && s->s3->tmp.new_cipher->algorithm_enc != SSL_RC4)",
      "2589:         } else if (type == TLSEXT_TYPE_extended_master_secret) {",
      "2590:             s->s3->flags |= TLS1_FLAGS_RECEIVED_EXTMS;",
      "2591:             if (!s->hit)",
      "",
      "[Removed Lines]",
      "2588:                 s->s3->flags |= TLS1_FLAGS_ENCRYPT_THEN_MAC;",
      "",
      "[Added Lines]",
      "2588:                 s->tlsext_use_etm = 1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "58f5f4157bc3533ed7cace90e4e9a89e19497cba",
      "candidate_info": {
        "commit_hash": "58f5f4157bc3533ed7cace90e4e9a89e19497cba",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/58f5f4157bc3533ed7cace90e4e9a89e19497cba",
        "files": [
          "crypto/ui/ui_openssl.c"
        ],
        "message": "UI_OpenSSL()'s session opener fails on MacOS X\n\nIf on a non-tty stdin, TTY_get() will fail with errno == ENODEV.\nWe didn't catch that.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2039)\n(cherry picked from commit c901bccec6f747467e1af31473655c8290e32309)",
        "before_after_code_files": [
          "crypto/ui/ui_openssl.c||crypto/ui/ui_openssl.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ui/ui_openssl.c||crypto/ui/ui_openssl.c": [
          "File: crypto/ui/ui_openssl.c -> crypto/ui/ui_openssl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "423:         if (errno == EINVAL)",
          "424:             is_a_tty = 0;",
          "425:         else",
          "426: # endif",
          "427:             {",
          "428:                 char tmp_num[10];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "426: # endif",
          "427: # ifdef ENODEV",
          "432:         if (errno == ENODEV)",
          "433:             is_a_tty = 0;",
          "434:         else",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1cb83aff0e7e27f027fbe4fdf1b6c101ce4cff00",
      "candidate_info": {
        "commit_hash": "1cb83aff0e7e27f027fbe4fdf1b6c101ce4cff00",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/1cb83aff0e7e27f027fbe4fdf1b6c101ce4cff00",
        "files": [
          "crypto/aes/asm/vpaes-ppc.pl",
          "crypto/chacha/asm/chacha-ppc.pl"
        ],
        "message": "PPC assembler pack: add some PPC970/G5 performance data.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(cherry picked from commit cebb186989067b39fca6ebc378e4957408f6e701)",
        "before_after_code_files": [
          "crypto/aes/asm/vpaes-ppc.pl||crypto/aes/asm/vpaes-ppc.pl",
          "crypto/chachasm/chacha-ppc.pl||crypto/chacha/asm/chacha-ppc.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/aes/asm/vpaes-ppc.pl||crypto/aes/asm/vpaes-ppc.pl": [
          "File: crypto/aes/asm/vpaes-ppc.pl -> crypto/aes/asm/vpaes-ppc.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: # 128-bit key.",
          "22: #",
          "23: #  aes-ppc.pl  this",
          "25: # POWER6 42.7/54.3/(28.2) 63.0/92.8(**)",
          "26: # POWER7 32.3/42.9/(18.4) 18.5/23.3",
          "27: #",
          "",
          "[Removed Lines]",
          "24: # G4e  35.5/52.1/(23.8) 11.9(*)/15.4",
          "",
          "[Added Lines]",
          "24: # PPC74x0/G4e 35.5/52.1/(23.8) 11.9(*)/15.4",
          "25: # PPC970/G5 37.9/55.0/(28.5) 22.2/28.5",
          "",
          "---------------"
        ],
        "crypto/chachasm/chacha-ppc.pl||crypto/chacha/asm/chacha-ppc.pl": [
          "File: crypto/chachasm/chacha-ppc.pl -> crypto/chacha/asm/chacha-ppc.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: # PPC74x0/G4e  6.81/+310% 4.66",
          "27: # PPC970/G5  9.29/+160% 4.60",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0adaabf6cd9ef104468edd353d721cd2d7afca5e",
      "candidate_info": {
        "commit_hash": "0adaabf6cd9ef104468edd353d721cd2d7afca5e",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/0adaabf6cd9ef104468edd353d721cd2d7afca5e",
        "files": [
          "crypto/cmac/cmac.c"
        ],
        "message": "Don't free in cleanup routine\n\nCleanse instead, and free in the free routine.\n\nSeems to have been introduced in commit\n846ec07d904f9cc81d486db0db14fb84f61ff6e5 when EVP_CIPHER_CTX was made\nopaque.\n\nReviewed-by: Richard Levitte <levitte@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2798)\n(cherry picked from commit 5c6c4c5c333c8ac469e53521cf747ff527b8813a)",
        "before_after_code_files": [
          "crypto/cmac/cmac.c||crypto/cmac/cmac.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/cmac/cmac.c||crypto/cmac/cmac.c": [
          "File: crypto/cmac/cmac.c -> crypto/cmac/cmac.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "61: void CMAC_CTX_cleanup(CMAC_CTX *ctx)",
          "62: {",
          "64:     OPENSSL_cleanse(ctx->tbl, EVP_MAX_BLOCK_LENGTH);",
          "65:     OPENSSL_cleanse(ctx->k1, EVP_MAX_BLOCK_LENGTH);",
          "66:     OPENSSL_cleanse(ctx->k2, EVP_MAX_BLOCK_LENGTH);",
          "",
          "[Removed Lines]",
          "63:     EVP_CIPHER_CTX_free(ctx->cctx);",
          "",
          "[Added Lines]",
          "63:     EVP_CIPHER_CTX_cleanup(ctx->cctx);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "78:     if (!ctx)",
          "79:         return;",
          "80:     CMAC_CTX_cleanup(ctx);",
          "81:     OPENSSL_free(ctx);",
          "82: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "81:     EVP_CIPHER_CTX_free(ctx->cctx);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "030c7cc63dd6abc9a718306bf3bd34037cbfd294",
      "candidate_info": {
        "commit_hash": "030c7cc63dd6abc9a718306bf3bd34037cbfd294",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/030c7cc63dd6abc9a718306bf3bd34037cbfd294",
        "files": [
          "crypto/x509/t_x509.c"
        ],
        "message": "Print the X509 version signed, and convert to unsigned for the hex version.\n\nFound by tis-interpreter\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nGH: #1754\n(cherry picked from commit 676befbeb76ca19c9e7b2febfabda16bd26e00a0)",
        "before_after_code_files": [
          "crypto/x509/t_x509.c||crypto/x509/t_x509.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/x509/t_x509.c||crypto/x509/t_x509.c": [
          "File: crypto/x509/t_x509.c -> crypto/x509/t_x509.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "71:     }",
          "72:     if (!(cflag & X509_FLAG_NO_VERSION)) {",
          "73:         l = X509_get_version(x);",
          "76:     }",
          "77:     if (!(cflag & X509_FLAG_NO_SERIAL)) {",
          "",
          "[Removed Lines]",
          "74:         if (BIO_printf(bp, \"%8sVersion: %lu (0x%lx)\\n\", \"\", l + 1, l) <= 0)",
          "75:             goto err;",
          "",
          "[Added Lines]",
          "74:         if (l >= 0 && l <= 2) {",
          "75:             if (BIO_printf(bp, \"%8sVersion: %ld (0x%lx)\\n\", \"\", l + 1, (unsigned long)l) <= 0)",
          "76:                 goto err;",
          "77:         } else {",
          "78:             if (BIO_printf(bp, \"%8sVersion: Unknown (%ld)\\n\", \"\", l) <= 0)",
          "79:                 goto err;",
          "80:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f31c714e923e76f54ff3b492f646662ef57f7d59",
      "candidate_info": {
        "commit_hash": "f31c714e923e76f54ff3b492f646662ef57f7d59",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/f31c714e923e76f54ff3b492f646662ef57f7d59",
        "files": [
          "crypto/ui/ui_lib.c"
        ],
        "message": "Fix UI_get0_action_string()\n\nIt shouldn't try to return an action description for UIT_PROMPT type\nUI strings.\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2904)\n(cherry picked from commit 6e470e190853f59a394dc92fefd74666c94266f4)",
        "before_after_code_files": [
          "crypto/ui/ui_lib.c||crypto/ui/ui_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ui/ui_lib.c||crypto/ui/ui_lib.c": [
          "File: crypto/ui/ui_lib.c -> crypto/ui/ui_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "705: const char *UI_get0_action_string(UI_STRING *uis)",
          "706: {",
          "707:     switch (uis->type) {",
          "709:     case UIT_BOOLEAN:",
          "710:         return uis->_.boolean_data.action_desc;",
          "711:     default:",
          "",
          "[Removed Lines]",
          "708:     case UIT_PROMPT:",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}