{
  "cve_id": "CVE-2021-3732",
  "cve_desc": "A flaw was found in the Linux kernel's OverlayFS subsystem in the way the user mounts the TmpFS filesystem with OverlayFS. This flaw allows a local user to gain access to hidden files that should not be accessible.",
  "repo": "torvalds/linux",
  "patch_hash": "427215d85e8d1476da1a86b8d67aceb485eb3631",
  "patch_info": {
    "commit_hash": "427215d85e8d1476da1a86b8d67aceb485eb3631",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/427215d85e8d1476da1a86b8d67aceb485eb3631",
    "files": [
      "fs/namespace.c"
    ],
    "message": "ovl: prevent private clone if bind mount is not allowed\n\nAdd the following checks from __do_loopback() to clone_private_mount() as\nwell:\n\n - verify that the mount is in the current namespace\n\n - verify that there are no locked children\n\nReported-by: Alois Wohlschlager <alois1@gmx-topmail.de>\nFixes: c771d683a62e (\"vfs: introduce clone_private_mount()\")\nCc: <stable@vger.kernel.org> # v3.18\nSigned-off-by: Miklos Szeredi <mszeredi@redhat.com>",
    "before_after_code_files": [
      "fs/namespace.c||fs/namespace.c"
    ]
  },
  "patch_diff": {
    "fs/namespace.c||fs/namespace.c": [
      "File: fs/namespace.c -> fs/namespace.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1938:  namespace_unlock();",
      "1939: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1941: static bool has_locked_children(struct mount *mnt, struct dentry *dentry)",
      "1942: {",
      "1943:  struct mount *child;",
      "1945:  list_for_each_entry(child, &mnt->mnt_mounts, mnt_child) {",
      "1946:   if (!is_subdir(child->mnt_mountpoint, dentry))",
      "1947:    continue;",
      "1949:   if (child->mnt.mnt_flags & MNT_LOCKED)",
      "1950:    return true;",
      "1951:  }",
      "1952:  return false;",
      "1953: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1953:  struct mount *old_mnt = real_mount(path->mnt);",
      "1954:  struct mount *new_mnt;",
      "1956:  if (IS_MNT_UNBINDABLE(old_mnt))",
      "1959:  new_mnt = clone_mnt(old_mnt, path->dentry, CL_PRIVATE);",
      "1960:  if (IS_ERR(new_mnt))",
      "1961:   return ERR_CAST(new_mnt);",
      "",
      "[Removed Lines]",
      "1957:   return ERR_PTR(-EINVAL);",
      "",
      "[Added Lines]",
      "1970:  down_read(&namespace_sem);",
      "1972:   goto invalid;",
      "1974:  if (!check_mnt(old_mnt))",
      "1975:   goto invalid;",
      "1977:  if (has_locked_children(old_mnt, path->dentry))",
      "1978:   goto invalid;",
      "1981:  up_read(&namespace_sem);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1964:  new_mnt->mnt_ns = MNT_NS_INTERNAL;",
      "1966:  return &new_mnt->mnt;",
      "1967: }",
      "1968: EXPORT_SYMBOL_GPL(clone_private_mount);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1991: invalid:",
      "1992:  up_read(&namespace_sem);",
      "1993:  return ERR_PTR(-EINVAL);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2315:  return err;",
      "2316: }",
      "2331: static struct mount *__do_loopback(struct path *old_path, int recurse)",
      "2332: {",
      "2333:  struct mount *mnt = ERR_PTR(-EINVAL), *old = real_mount(old_path->mnt);",
      "",
      "[Removed Lines]",
      "2318: static bool has_locked_children(struct mount *mnt, struct dentry *dentry)",
      "2319: {",
      "2320:  struct mount *child;",
      "2321:  list_for_each_entry(child, &mnt->mnt_mounts, mnt_child) {",
      "2322:   if (!is_subdir(child->mnt_mountpoint, dentry))",
      "2323:    continue;",
      "2325:   if (child->mnt.mnt_flags & MNT_LOCKED)",
      "2326:    return true;",
      "2327:  }",
      "2328:  return false;",
      "2329: }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1f287bc4e2d073455bc21ed168ee3f67a75178b6",
      "candidate_info": {
        "commit_hash": "1f287bc4e2d073455bc21ed168ee3f67a75178b6",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/1f287bc4e2d073455bc21ed168ee3f67a75178b6",
        "files": [
          "fs/namespace.c"
        ],
        "message": "fs/namespace: correct/improve kernel-doc notation\n\nFix kernel-doc warnings in fs/namespace.c:\n\n./fs/namespace.c:1379: warning: Function parameter or member 'm' not described in 'may_umount_tree'\n./fs/namespace.c:1379: warning: Excess function parameter 'mnt' description in 'may_umount_tree'\n./fs/namespace.c:1950: warning: Function parameter or member 'path' not described in 'clone_private_mount'\n\nAlso convert path_is_mountpoint() comments to kernel-doc.\n\nSigned-off-by: Randy Dunlap <rdunlap@infradead.org>\nAllegedly-acked-by: Al Viro <viro@zeniv.linux.org.uk>\nLink: https://lore.kernel.org/r/20210318025227.4162-1-rdunlap@infradead.org\nSigned-off-by: Jonathan Corbet <corbet@lwn.net>",
        "before_after_code_files": [
          "fs/namespace.c||fs/namespace.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "fs/namespace.c||fs/namespace.c"
          ],
          "candidate": [
            "fs/namespace.c||fs/namespace.c"
          ]
        }
      },
      "candidate_diff": {
        "fs/namespace.c||fs/namespace.c": [
          "File: fs/namespace.c -> fs/namespace.c"
        ]
      }
    }
  ]
}