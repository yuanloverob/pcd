{
  "cve_id": "CVE-2017-8063",
  "cve_desc": "drivers/media/usb/dvb-usb/cxusb.c in the Linux kernel 4.9.x and 4.10.x before 4.10.12 interacts incorrectly with the CONFIG_VMAP_STACK option, which allows local users to cause a denial of service (system crash) or possibly have unspecified other impact by leveraging use of more than one virtual page for a DMA scatterlist.",
  "repo": "torvalds/linux",
  "patch_hash": "3f190e3aec212fc8c61e202c51400afa7384d4bc",
  "patch_info": {
    "commit_hash": "3f190e3aec212fc8c61e202c51400afa7384d4bc",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/3f190e3aec212fc8c61e202c51400afa7384d4bc",
    "files": [
      "drivers/media/usb/dvb-usb/cxusb.c"
    ],
    "message": "[media] cxusb: Use a dma capable buffer also for reading\n\nCommit 17ce039b4e54 (\"[media] cxusb: don't do DMA on stack\")\nadded a kmalloc'ed bounce buffer for writes, but missed to do the same\nfor reads. As the read only happens after the write is finished, we can\nreuse the same buffer.\n\nAs dvb_usb_generic_rw handles a read length of 0 by itself, avoid calling\nit using the dvb_usb_generic_read wrapper function.\n\nSigned-off-by: Stefan Br\u00fcns <stefan.bruens@rwth-aachen.de>\nSigned-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>",
    "before_after_code_files": [
      "drivers/mediusb/dvb-usb/cxusb.c||drivers/media/usdvb-uscxusb.c"
    ]
  },
  "patch_diff": {
    "drivers/mediusb/dvb-usb/cxusb.c||drivers/media/usdvb-uscxusb.c": [
      "File: drivers/mediusb/dvb-usb/cxusb.c -> drivers/media/usdvb-uscxusb.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "17ce039b4e5405c49d8c0d64e6d781cc6f4dc1ac",
      "candidate_info": {
        "commit_hash": "17ce039b4e5405c49d8c0d64e6d781cc6f4dc1ac",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/17ce039b4e5405c49d8c0d64e6d781cc6f4dc1ac",
        "files": [
          "drivers/media/usb/dvb-usb/cxusb.c",
          "drivers/media/usb/dvb-usb/cxusb.h"
        ],
        "message": "[media] cxusb: don't do DMA on stack\n\nThe USB control messages require DMA to work. We cannot pass\na stack-allocated buffer, as it is not warranted that the\nstack would be into a DMA enabled area.\n\nReviewed-by: Patrick Boettcher <patrick.boettcher@posteo.de>\nSigned-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>",
        "before_after_code_files": [
          "drivers/media/usb/dvb-usb/cxusb.c||drivers/media/usb/dvb-usb/cxusb.c",
          "drivers/media/usb/dvb-usb/cxusb.h||drivers/media/usb/dvb-usb/cxusb.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/media/usb/dvb-usb/cxusb.c||drivers/media/usb/dvb-usb/cxusb.c": [
          "File: drivers/media/usb/dvb-usb/cxusb.c -> drivers/media/usb/dvb-usb/cxusb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: #include \"si2168.h\"",
          "46: #include \"si2157.h\"",
          "52: static int dvb_usb_cxusb_debug;",
          "53: module_param_named(debug, dvb_usb_cxusb_debug, int, 0644);",
          "",
          "[Removed Lines]",
          "49: #define MAX_XFER_SIZE  80",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "61: static int cxusb_ctrl_msg(struct dvb_usb_device *d,",
          "62:      u8 cmd, u8 *wbuf, int wlen, u8 *rbuf, int rlen)",
          "63: {",
          "70:   return -EOPNOTSUPP;",
          "71:  }",
          "77:  if (wo)",
          "79:  else",
          "81: }",
          "",
          "[Removed Lines]",
          "65:  u8 sndbuf[MAX_XFER_SIZE];",
          "67:  if (1 + wlen > sizeof(sndbuf)) {",
          "68:   warn(\"i2c wr: len=%d is too big!\\n\",",
          "69:        wlen);",
          "73:  memset(sndbuf, 0, 1+wlen);",
          "75:  sndbuf[0] = cmd;",
          "76:  memcpy(&sndbuf[1], wbuf, wlen);",
          "78:   return dvb_usb_generic_write(d, sndbuf, 1+wlen);",
          "80:   return dvb_usb_generic_rw(d, sndbuf, 1+wlen, rbuf, rlen, 0);",
          "",
          "[Added Lines]",
          "61:  struct cxusb_state *st = d->priv;",
          "62:  int ret, wo;",
          "64:  if (1 + wlen > MAX_XFER_SIZE) {",
          "65:   warn(\"i2c wr: len=%d is too big!\\n\", wlen);",
          "71:  mutex_lock(&st->data_mutex);",
          "72:  st->data[0] = cmd;",
          "73:  memcpy(&st->data[1], wbuf, wlen);",
          "75:   ret = dvb_usb_generic_write(d, st->data, 1 + wlen);",
          "77:   ret = dvb_usb_generic_rw(d, st->data, 1 + wlen,",
          "78:       rbuf, rlen, 0);",
          "80:  mutex_unlock(&st->data_mutex);",
          "81:  return ret;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1460: static int cxusb_probe(struct usb_interface *intf,",
          "1461:          const struct usb_device_id *id)",
          "1462: {",
          "1463:  if (0 == dvb_usb_device_init(intf, &cxusb_medion_properties,",
          "1465:      0 == dvb_usb_device_init(intf, &cxusb_bluebird_lgh064f_properties,",
          "1467:      0 == dvb_usb_device_init(intf, &cxusb_bluebird_dee1601_properties,",
          "1469:      0 == dvb_usb_device_init(intf, &cxusb_bluebird_lgz201_properties,",
          "1471:      0 == dvb_usb_device_init(intf, &cxusb_bluebird_dtt7579_properties,",
          "1473:      0 == dvb_usb_device_init(intf, &cxusb_bluebird_dualdig4_properties,",
          "1475:      0 == dvb_usb_device_init(intf, &cxusb_bluebird_nano2_properties,",
          "1477:      0 == dvb_usb_device_init(intf,",
          "1478:     &cxusb_bluebird_nano2_needsfirmware_properties,",
          "1480:      0 == dvb_usb_device_init(intf, &cxusb_aver_a868r_properties,",
          "1482:      0 == dvb_usb_device_init(intf,",
          "1483:          &cxusb_bluebird_dualdig4_rev2_properties,",
          "1485:      0 == dvb_usb_device_init(intf, &cxusb_d680_dmb_properties,",
          "1487:      0 == dvb_usb_device_init(intf, &cxusb_mygica_d689_properties,",
          "1489:      0 == dvb_usb_device_init(intf, &cxusb_mygica_t230_properties,",
          "1492:   return 0;",
          "1494:  return -EINVAL;",
          "1495: }",
          "",
          "[Removed Lines]",
          "1464:          THIS_MODULE, NULL, adapter_nr) ||",
          "1466:          THIS_MODULE, NULL, adapter_nr) ||",
          "1468:          THIS_MODULE, NULL, adapter_nr) ||",
          "1470:          THIS_MODULE, NULL, adapter_nr) ||",
          "1472:          THIS_MODULE, NULL, adapter_nr) ||",
          "1474:          THIS_MODULE, NULL, adapter_nr) ||",
          "1476:          THIS_MODULE, NULL, adapter_nr) ||",
          "1479:          THIS_MODULE, NULL, adapter_nr) ||",
          "1481:          THIS_MODULE, NULL, adapter_nr) ||",
          "1484:          THIS_MODULE, NULL, adapter_nr) ||",
          "1486:          THIS_MODULE, NULL, adapter_nr) ||",
          "1488:          THIS_MODULE, NULL, adapter_nr) ||",
          "1490:          THIS_MODULE, NULL, adapter_nr) ||",
          "1491:      0)",
          "",
          "[Added Lines]",
          "1464:  struct dvb_usb_device *d;",
          "1465:  struct cxusb_state *st;",
          "1468:          THIS_MODULE, &d, adapter_nr) ||",
          "1470:          THIS_MODULE, &d, adapter_nr) ||",
          "1472:          THIS_MODULE, &d, adapter_nr) ||",
          "1474:          THIS_MODULE, &d, adapter_nr) ||",
          "1476:          THIS_MODULE, &d, adapter_nr) ||",
          "1478:          THIS_MODULE, &d, adapter_nr) ||",
          "1480:          THIS_MODULE, &d, adapter_nr) ||",
          "1483:          THIS_MODULE, &d, adapter_nr) ||",
          "1485:          THIS_MODULE, &d, adapter_nr) ||",
          "1488:          THIS_MODULE, &d, adapter_nr) ||",
          "1490:          THIS_MODULE, &d, adapter_nr) ||",
          "1492:          THIS_MODULE, &d, adapter_nr) ||",
          "1494:          THIS_MODULE, &d, adapter_nr) ||",
          "1495:      0) {",
          "1496:   st = d->priv;",
          "1497:   mutex_init(&st->data_mutex);",
          "1500:  }",
          "",
          "---------------"
        ],
        "drivers/media/usb/dvb-usb/cxusb.h||drivers/media/usb/dvb-usb/cxusb.h": [
          "File: drivers/media/usb/dvb-usb/cxusb.h -> drivers/media/usb/dvb-usb/cxusb.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: #define CMD_ANALOG        0x50",
          "29: #define CMD_DIGITAL       0x51",
          "31: struct cxusb_state {",
          "32:  u8 gpio_write_state[3];",
          "33:  struct i2c_client *i2c_client_demod;",
          "34:  struct i2c_client *i2c_client_tuner;",
          "35: };",
          "37: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32: #define MAX_XFER_SIZE  80",
          "39:  unsigned char data[MAX_XFER_SIZE];",
          "40:  struct mutex data_mutex;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7724325a19fb0a51d2a69bd2915b33f0ff197f5a",
      "candidate_info": {
        "commit_hash": "7724325a19fb0a51d2a69bd2915b33f0ff197f5a",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/7724325a19fb0a51d2a69bd2915b33f0ff197f5a",
        "files": [
          "drivers/media/usb/dvb-usb/af9005.c",
          "drivers/media/usb/dvb-usb/cinergyT2-core.c",
          "drivers/media/usb/dvb-usb/cxusb.c",
          "drivers/media/usb/dvb-usb/cxusb.h",
          "drivers/media/usb/dvb-usb/dtt200u.c",
          "drivers/media/usb/dvb-usb/dvb-usb-init.c",
          "drivers/media/usb/dvb-usb/dvb-usb.h"
        ],
        "message": "dvb-usb: move data_mutex to struct dvb_usb_device\n\nThe data_mutex is initialized too late, as it is needed for\neach device driver's power control, causing an OOPS:\n\n    dvb-usb: found a 'TerraTec/qanu USB2.0 Highspeed DVB-T Receiver' in warm state.\n    BUG: unable to handle kernel NULL pointer dereference at           (null)\n    IP: [<ffffffff846617af>] __mutex_lock_slowpath+0x6f/0x100 PGD 0\n    Oops: 0002 [#1] SMP\n    Modules linked in: dvb_usb_cinergyT2(+) dvb_usb\n    CPU: 0 PID: 2029 Comm: modprobe Not tainted 4.9.0-rc4-dvbmod #24\n    Hardware name: FUJITSU LIFEBOOK A544/FJNBB35 , BIOS Version 1.17 05/09/2014\n    task: ffff88020e943840 task.stack: ffff8801f36ec000\n    RIP: 0010:[<ffffffff846617af>]  [<ffffffff846617af>] __mutex_lock_slowpath+0x6f/0x100\n    RSP: 0018:ffff8801f36efb10  EFLAGS: 00010282\n    RAX: 0000000000000000 RBX: ffff88021509bdc8 RCX: 00000000c0000100\n    RDX: 0000000000000001 RSI: 0000000000000000 RDI: ffff88021509bdcc\n    RBP: ffff8801f36efb58 R08: ffff88021f216320 R09: 0000000000100000\n    R10: ffff88021f216320 R11: 00000023fee6c5a1 R12: ffff88020e943840\n    R13: ffff88021509bdcc R14: 00000000ffffffff R15: ffff88021509bdd0\n    FS:  00007f21adb86740(0000) GS:ffff88021f200000(0000) knlGS:0000000000000000\n    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n    CR2: 0000000000000000 CR3: 0000000215bce000 CR4: 00000000001406f0\n    Call Trace:\n       mutex_lock+0x16/0x25\n       cinergyt2_power_ctrl+0x1f/0x60 [dvb_usb_cinergyT2]\n       dvb_usb_device_init+0x21e/0x5d0 [dvb_usb]\n       cinergyt2_usb_probe+0x21/0x50 [dvb_usb_cinergyT2]\n       usb_probe_interface+0xf3/0x2a0\n       driver_probe_device+0x208/0x2b0\n       __driver_attach+0x87/0x90\n       driver_probe_device+0x2b0/0x2b0\n       bus_for_each_dev+0x52/0x80\n       bus_add_driver+0x1a3/0x220\n       driver_register+0x56/0xd0\n       usb_register_driver+0x77/0x130\n       do_one_initcall+0x46/0x180\n       free_vmap_area_noflush+0x38/0x70\n       kmem_cache_alloc+0x84/0xc0\n       do_init_module+0x50/0x1be\n       load_module+0x1d8b/0x2100\n       find_symbol_in_section+0xa0/0xa0\n       SyS_finit_module+0x89/0x90\n       entry_SYSCALL_64_fastpath+0x13/0x94\n    Code: e8 a7 1d 00 00 8b 03 83 f8 01 0f 84 97 00 00 00 48 8b 43 10 4c 8d 7b 08 48 89 63 10 4c 89 3c 24 41 be ff ff ff ff 48 89 44 24 08 <48> 89 20 4c 89 64 24 10 eb 1a 49 c7 44 24 08 02 00 00 00 c6 43 RIP  [<ffffffff846617af>] __mutex_lock_slowpath+0x6f/0x100 RSP <ffff8801f36efb10>\n    CR2: 0000000000000000\n\nSo, move it to the struct dvb_usb_device and initialize it\nbefore calling the driver's callbacks.\n\nReported-by: J\u00f6rg Otte <jrg.otte@gmail.com>\nTested-by: J\u00f6rg Otte <jrg.otte@gmail.com>\nSigned-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
        "before_after_code_files": [
          "drivers/media/usb/dvb-usb/af9005.c||drivers/media/usb/dvb-usb/af9005.c",
          "drivers/media/usb/dvb-usb/cinergyT2-core.c||drivers/media/usb/dvb-usb/cinergyT2-core.c",
          "drivers/media/usb/dvb-usb/cxusb.c||drivers/media/usb/dvb-usb/cxusb.c",
          "drivers/media/usb/dvb-usb/cxusb.h||drivers/media/usb/dvb-usb/cxusb.h",
          "drivers/media/usb/dvb-usb/dtt200u.c||drivers/media/usb/dvb-usb/dtt200u.c",
          "drivers/media/usb/dvb-usb/dvb-usb-init.c||drivers/media/usb/dvb-usb/dvb-usb-init.c",
          "drivers/media/usb/dvb-usb/dvb-usb.h||drivers/media/usb/dvb-usb/dvb-usb.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/media/usb/dvb-usb/af9005.c||drivers/media/usb/dvb-usb/af9005.c": [
          "File: drivers/media/usb/dvb-usb/af9005.c -> drivers/media/usb/dvb-usb/af9005.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:  u8 sequence;",
          "54:  int led_state;",
          "55:  unsigned char data[256];",
          "57: };",
          "59: static int af9005_generic_read_write(struct dvb_usb_device *d, u16 reg,",
          "",
          "[Removed Lines]",
          "56:  struct mutex data_mutex;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "72:   return -EINVAL;",
          "73:  }",
          "",
          "[Removed Lines]",
          "75:  mutex_lock(&st->data_mutex);",
          "",
          "[Added Lines]",
          "74:  mutex_lock(&d->data_mutex);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "140:    values[i] = st->data[8 + i];",
          "142: ret:",
          "144:  return ret;",
          "146: }",
          "",
          "[Removed Lines]",
          "143:  mutex_unlock(&st->data_mutex);",
          "",
          "[Added Lines]",
          "142:  mutex_unlock(&d->data_mutex);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "481:  }",
          "482:  packet_len = wlen + 5;",
          "486:  st->data[0] = (u8) (packet_len & 0xff);",
          "487:  st->data[1] = (u8) ((packet_len & 0xff00) >> 8);",
          "",
          "[Removed Lines]",
          "484:  mutex_lock(&st->data_mutex);",
          "",
          "[Added Lines]",
          "483:  mutex_lock(&d->data_mutex);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "512:    rbuf[i] = st->data[i + 7];",
          "513:  }",
          "516:  return ret;",
          "517: }",
          "",
          "[Removed Lines]",
          "515:  mutex_unlock(&st->data_mutex);",
          "",
          "[Added Lines]",
          "514:  mutex_unlock(&d->data_mutex);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "523:  u8 seq;",
          "524:  int ret, i;",
          "528:  memset(st->data, 0, sizeof(st->data));",
          "",
          "[Removed Lines]",
          "526:  mutex_lock(&st->data_mutex);",
          "",
          "[Added Lines]",
          "525:  mutex_lock(&d->data_mutex);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "559:   for (i = 0; i < len; i++)",
          "560:    values[i] = st->data[6 + i];",
          "561:  }",
          "564:  return ret;",
          "565: }",
          "",
          "[Removed Lines]",
          "562:  mutex_unlock(&st->data_mutex);",
          "",
          "[Added Lines]",
          "561:  mutex_unlock(&d->data_mutex);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "847:   return 0;",
          "848:  }",
          "",
          "[Removed Lines]",
          "850:  mutex_lock(&st->data_mutex);",
          "",
          "[Added Lines]",
          "849:  mutex_lock(&d->data_mutex);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "890:  }",
          "892: ret:",
          "894:  return ret;",
          "895: }",
          "",
          "[Removed Lines]",
          "893:  mutex_unlock(&st->data_mutex);",
          "",
          "[Added Lines]",
          "892:  mutex_unlock(&d->data_mutex);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1004: static int af9005_usb_probe(struct usb_interface *intf,",
          "1005:        const struct usb_device_id *id)",
          "1006: {",
          "1021: }",
          "1023: enum af9005_usb_table_entry {",
          "",
          "[Removed Lines]",
          "1007:  struct dvb_usb_device *d;",
          "1008:  struct af9005_device_state *st;",
          "1009:  int ret;",
          "1011:  ret = dvb_usb_device_init(intf, &af9005_properties,",
          "1012:       THIS_MODULE, &d, adapter_nr);",
          "1014:  if (ret < 0)",
          "1015:   return ret;",
          "1017:  st = d->priv;",
          "1018:  mutex_init(&st->data_mutex);",
          "1020:  return 0;",
          "",
          "[Added Lines]",
          "1006:  return dvb_usb_device_init(intf, &af9005_properties,",
          "1007:       THIS_MODULE, NULL, adapter_nr);",
          "",
          "---------------"
        ],
        "drivers/media/usb/dvb-usb/cinergyT2-core.c||drivers/media/usb/dvb-usb/cinergyT2-core.c": [
          "File: drivers/media/usb/dvb-usb/cinergyT2-core.c -> drivers/media/usb/dvb-usb/cinergyT2-core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "42: struct cinergyt2_state {",
          "43:  u8 rc_counter;",
          "44:  unsigned char data[64];",
          "46: };",
          "",
          "[Removed Lines]",
          "45:  struct mutex data_mutex;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "56:  struct cinergyt2_state *st = d->priv;",
          "57:  int ret;",
          "60:  st->data[0] = CINERGYT2_EP1_CONTROL_STREAM_TRANSFER;",
          "61:  st->data[1] = enable ? 1 : 0;",
          "63:  ret = dvb_usb_generic_rw(d, st->data, 2, st->data, 64, 0);",
          "66:  return ret;",
          "67: }",
          "",
          "[Removed Lines]",
          "59:  mutex_lock(&st->data_mutex);",
          "64:  mutex_unlock(&st->data_mutex);",
          "",
          "[Added Lines]",
          "58:  mutex_lock(&d->data_mutex);",
          "63:  mutex_unlock(&d->data_mutex);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "71:  struct cinergyt2_state *st = d->priv;",
          "72:  int ret;",
          "75:  st->data[0] = CINERGYT2_EP1_SLEEP_MODE;",
          "76:  st->data[1] = enable ? 0 : 1;",
          "78:  ret = dvb_usb_generic_rw(d, st->data, 2, st->data, 3, 0);",
          "81:  return ret;",
          "82: }",
          "",
          "[Removed Lines]",
          "74:  mutex_lock(&st->data_mutex);",
          "79:  mutex_unlock(&st->data_mutex);",
          "",
          "[Added Lines]",
          "73:  mutex_lock(&d->data_mutex);",
          "78:  mutex_unlock(&d->data_mutex);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "90:  adap->fe_adap[0].fe = cinergyt2_fe_attach(adap->dev);",
          "93:  st->data[0] = CINERGYT2_EP1_GET_FIRMWARE_VERSION;",
          "95:  ret = dvb_usb_generic_rw(d, st->data, 1, st->data, 3, 0);",
          "",
          "[Removed Lines]",
          "92:  mutex_lock(&st->data_mutex);",
          "",
          "[Added Lines]",
          "91:  mutex_lock(&d->data_mutex);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "97:   deb_rc(\"cinergyt2_power_ctrl() Failed to retrieve sleep \"",
          "98:    \"state info\\n\");",
          "99:  }",
          "103:  cinergyt2_usb_device = adap->dev;",
          "",
          "[Removed Lines]",
          "100:  mutex_unlock(&st->data_mutex);",
          "",
          "[Added Lines]",
          "99:  mutex_unlock(&d->data_mutex);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "170:  st->data[0] = CINERGYT2_EP1_GET_RC_EVENTS;",
          "172:  ret = dvb_usb_generic_rw(d, st->data, 1, st->data, 5, 0);",
          "",
          "[Removed Lines]",
          "169:  mutex_lock(&st->data_mutex);",
          "",
          "[Added Lines]",
          "168:  mutex_lock(&d->data_mutex);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "202:  }",
          "204: ret:",
          "206:  return ret;",
          "207: }",
          "209: static int cinergyt2_usb_probe(struct usb_interface *intf,",
          "210:     const struct usb_device_id *id)",
          "211: {",
          "225: }",
          "228: static struct usb_device_id cinergyt2_usb_table[] = {",
          "229:  { USB_DEVICE(USB_VID_TERRATEC, 0x0038) },",
          "230:  { 0 }",
          "",
          "[Removed Lines]",
          "205:  mutex_unlock(&st->data_mutex);",
          "212:  struct dvb_usb_device *d;",
          "213:  struct cinergyt2_state *st;",
          "214:  int ret;",
          "216:  ret = dvb_usb_device_init(intf, &cinergyt2_properties,",
          "217:       THIS_MODULE, &d, adapter_nr);",
          "218:  if (ret < 0)",
          "219:   return ret;",
          "221:  st = d->priv;",
          "222:  mutex_init(&st->data_mutex);",
          "224:  return 0;",
          "",
          "[Added Lines]",
          "204:  mutex_unlock(&d->data_mutex);",
          "211:  return dvb_usb_device_init(intf, &cinergyt2_properties,",
          "212:        THIS_MODULE, NULL, adapter_nr);",
          "",
          "---------------"
        ],
        "drivers/media/usb/dvb-usb/cxusb.c||drivers/media/usb/dvb-usb/cxusb.c": [
          "File: drivers/media/usb/dvb-usb/cxusb.c -> drivers/media/usb/dvb-usb/cxusb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "72:  st->data[0] = cmd;",
          "73:  memcpy(&st->data[1], wbuf, wlen);",
          "74:  if (wo)",
          "",
          "[Removed Lines]",
          "71:  mutex_lock(&st->data_mutex);",
          "",
          "[Added Lines]",
          "71:  mutex_lock(&d->data_mutex);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "77:   ret = dvb_usb_generic_rw(d, st->data, 1 + wlen,",
          "78:       rbuf, rlen, 0);",
          "81:  return ret;",
          "82: }",
          "",
          "[Removed Lines]",
          "80:  mutex_unlock(&st->data_mutex);",
          "",
          "[Added Lines]",
          "80:  mutex_unlock(&d->data_mutex);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1461: static int cxusb_probe(struct usb_interface *intf,",
          "1462:          const struct usb_device_id *id)",
          "1463: {",
          "1467:  if (0 == dvb_usb_device_init(intf, &cxusb_medion_properties,",
          "1469:      0 == dvb_usb_device_init(intf, &cxusb_bluebird_lgh064f_properties,",
          "1471:      0 == dvb_usb_device_init(intf, &cxusb_bluebird_dee1601_properties,",
          "1473:      0 == dvb_usb_device_init(intf, &cxusb_bluebird_lgz201_properties,",
          "1475:      0 == dvb_usb_device_init(intf, &cxusb_bluebird_dtt7579_properties,",
          "1477:      0 == dvb_usb_device_init(intf, &cxusb_bluebird_dualdig4_properties,",
          "1479:      0 == dvb_usb_device_init(intf, &cxusb_bluebird_nano2_properties,",
          "1481:      0 == dvb_usb_device_init(intf,",
          "1482:     &cxusb_bluebird_nano2_needsfirmware_properties,",
          "1484:      0 == dvb_usb_device_init(intf, &cxusb_aver_a868r_properties,",
          "1486:      0 == dvb_usb_device_init(intf,",
          "1487:          &cxusb_bluebird_dualdig4_rev2_properties,",
          "1489:      0 == dvb_usb_device_init(intf, &cxusb_d680_dmb_properties,",
          "1491:      0 == dvb_usb_device_init(intf, &cxusb_mygica_d689_properties,",
          "1493:      0 == dvb_usb_device_init(intf, &cxusb_mygica_t230_properties,",
          "1499:   return 0;",
          "1502:  return -EINVAL;",
          "1503: }",
          "",
          "[Removed Lines]",
          "1464:  struct dvb_usb_device *d;",
          "1465:  struct cxusb_state *st;",
          "1468:          THIS_MODULE, &d, adapter_nr) ||",
          "1470:          THIS_MODULE, &d, adapter_nr) ||",
          "1472:          THIS_MODULE, &d, adapter_nr) ||",
          "1474:          THIS_MODULE, &d, adapter_nr) ||",
          "1476:          THIS_MODULE, &d, adapter_nr) ||",
          "1478:          THIS_MODULE, &d, adapter_nr) ||",
          "1480:          THIS_MODULE, &d, adapter_nr) ||",
          "1483:          THIS_MODULE, &d, adapter_nr) ||",
          "1485:          THIS_MODULE, &d, adapter_nr) ||",
          "1488:          THIS_MODULE, &d, adapter_nr) ||",
          "1490:          THIS_MODULE, &d, adapter_nr) ||",
          "1492:          THIS_MODULE, &d, adapter_nr) ||",
          "1494:          THIS_MODULE, &d, adapter_nr) ||",
          "1495:      0) {",
          "1496:   st = d->priv;",
          "1497:   mutex_init(&st->data_mutex);",
          "1500:  }",
          "",
          "[Added Lines]",
          "1465:          THIS_MODULE, NULL, adapter_nr) ||",
          "1467:          THIS_MODULE, NULL, adapter_nr) ||",
          "1469:          THIS_MODULE, NULL, adapter_nr) ||",
          "1471:          THIS_MODULE, NULL, adapter_nr) ||",
          "1473:          THIS_MODULE, NULL, adapter_nr) ||",
          "1475:          THIS_MODULE, NULL, adapter_nr) ||",
          "1477:          THIS_MODULE, NULL, adapter_nr) ||",
          "1480:          THIS_MODULE, NULL, adapter_nr) ||",
          "1482:          THIS_MODULE, NULL, adapter_nr) ||",
          "1485:          THIS_MODULE, NULL, adapter_nr) ||",
          "1487:          THIS_MODULE, NULL, adapter_nr) ||",
          "1489:          THIS_MODULE, NULL, adapter_nr) ||",
          "1491:          THIS_MODULE, NULL, adapter_nr) ||",
          "1492:      0)",
          "",
          "---------------"
        ],
        "drivers/media/usb/dvb-usb/cxusb.h||drivers/media/usb/dvb-usb/cxusb.h": [
          "File: drivers/media/usb/dvb-usb/cxusb.h -> drivers/media/usb/dvb-usb/cxusb.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:  struct i2c_client *i2c_client_tuner;",
          "39:  unsigned char data[MAX_XFER_SIZE];",
          "41: };",
          "43: #endif",
          "",
          "[Removed Lines]",
          "40:  struct mutex data_mutex;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "drivers/media/usb/dvb-usb/dtt200u.c||drivers/media/usb/dvb-usb/dtt200u.c": [
          "File: drivers/media/usb/dvb-usb/dtt200u.c -> drivers/media/usb/dvb-usb/dtt200u.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: struct dtt200u_state {",
          "24:  unsigned char data[80];",
          "26: };",
          "28: static int dtt200u_power_ctrl(struct dvb_usb_device *d, int onoff)",
          "",
          "[Removed Lines]",
          "25:  struct mutex data_mutex;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30:  struct dtt200u_state *st = d->priv;",
          "31:  int ret = 0;",
          "35:  st->data[0] = SET_INIT;",
          "37:  if (onoff)",
          "38:   ret = dvb_usb_generic_write(d, st->data, 2);",
          "41:  return ret;",
          "42: }",
          "44: static int dtt200u_streaming_ctrl(struct dvb_usb_adapter *adap, int onoff)",
          "45: {",
          "47:  int ret;",
          "50:  st->data[0] = SET_STREAMING;",
          "51:  st->data[1] = onoff;",
          "",
          "[Removed Lines]",
          "33:  mutex_lock(&st->data_mutex);",
          "40:  mutex_unlock(&st->data_mutex);",
          "46:  struct dtt200u_state *st = adap->dev->priv;",
          "49:  mutex_lock(&st->data_mutex);",
          "",
          "[Added Lines]",
          "32:  mutex_lock(&d->data_mutex);",
          "39:  mutex_unlock(&d->data_mutex);",
          "45:  struct dvb_usb_device *d = adap->dev;",
          "46:  struct dtt200u_state *st = d->priv;",
          "49:  mutex_lock(&d->data_mutex);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "61:  ret = dvb_usb_generic_write(adap->dev, st->data, 1);",
          "63: ret:",
          "66:  return ret;",
          "67: }",
          "69: static int dtt200u_pid_filter(struct dvb_usb_adapter *adap, int index, u16 pid, int onoff)",
          "70: {",
          "72:  int ret;",
          "74:  pid = onoff ? pid : 0;",
          "77:  st->data[0] = SET_PID_FILTER;",
          "78:  st->data[1] = index;",
          "79:  st->data[2] = pid & 0xff;",
          "80:  st->data[3] = (pid >> 8) & 0x1f;",
          "82:  ret = dvb_usb_generic_write(adap->dev, st->data, 4);",
          "85:  return ret;",
          "86: }",
          "",
          "[Removed Lines]",
          "64:  mutex_unlock(&st->data_mutex);",
          "71:  struct dtt200u_state *st = adap->dev->priv;",
          "76:  mutex_lock(&st->data_mutex);",
          "83:  mutex_unlock(&st->data_mutex);",
          "",
          "[Added Lines]",
          "64:  mutex_unlock(&d->data_mutex);",
          "71:  struct dvb_usb_device *d = adap->dev;",
          "72:  struct dtt200u_state *st = d->priv;",
          "77:  mutex_lock(&d->data_mutex);",
          "84:  mutex_unlock(&d->data_mutex);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "91:  u32 scancode;",
          "92:  int ret;",
          "95:  st->data[0] = GET_RC_CODE;",
          "97:  ret = dvb_usb_generic_rw(d, st->data, 1, st->data, 5, 0);",
          "",
          "[Removed Lines]",
          "94:  mutex_lock(&st->data_mutex);",
          "",
          "[Added Lines]",
          "95:  mutex_lock(&d->data_mutex);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "126:   deb_info(\"st->data: %*ph\\n\", 5, st->data);",
          "128: ret:",
          "130:  return ret;",
          "131: }",
          "",
          "[Removed Lines]",
          "129:  mutex_unlock(&st->data_mutex);",
          "",
          "[Added Lines]",
          "130:  mutex_unlock(&d->data_mutex);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "145: static int dtt200u_usb_probe(struct usb_interface *intf,",
          "146:   const struct usb_device_id *id)",
          "147: {",
          "151:  if (0 == dvb_usb_device_init(intf, &dtt200u_properties,",
          "153:      0 == dvb_usb_device_init(intf, &wt220u_properties,",
          "155:      0 == dvb_usb_device_init(intf, &wt220u_fc_properties,",
          "157:      0 == dvb_usb_device_init(intf, &wt220u_zl0353_properties,",
          "159:      0 == dvb_usb_device_init(intf, &wt220u_miglia_properties,",
          "164:   return 0;",
          "167:  return -ENODEV;",
          "168: }",
          "",
          "[Removed Lines]",
          "148:  struct dvb_usb_device *d;",
          "149:  struct dtt200u_state *st;",
          "152:          THIS_MODULE, &d, adapter_nr) ||",
          "154:          THIS_MODULE, &d, adapter_nr) ||",
          "156:          THIS_MODULE, &d, adapter_nr) ||",
          "158:          THIS_MODULE, &d, adapter_nr) ||",
          "160:          THIS_MODULE, &d, adapter_nr)) {",
          "161:   st = d->priv;",
          "162:   mutex_init(&st->data_mutex);",
          "165:  }",
          "",
          "[Added Lines]",
          "150:          THIS_MODULE, NULL, adapter_nr) ||",
          "152:          THIS_MODULE, NULL, adapter_nr) ||",
          "154:          THIS_MODULE, NULL, adapter_nr) ||",
          "156:          THIS_MODULE, NULL, adapter_nr) ||",
          "158:          THIS_MODULE, NULL, adapter_nr))",
          "",
          "---------------"
        ],
        "drivers/media/usb/dvb-usb/dvb-usb-init.c||drivers/media/usb/dvb-usb/dvb-usb-init.c": [
          "File: drivers/media/usb/dvb-usb/dvb-usb-init.c -> drivers/media/usb/dvb-usb/dvb-usb-init.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "142: {",
          "143:  int ret = 0;",
          "145:  mutex_init(&d->usb_mutex);",
          "146:  mutex_init(&d->i2c_mutex);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "145:  mutex_init(&d->data_mutex);",
          "",
          "---------------"
        ],
        "drivers/media/usb/dvb-usb/dvb-usb.h||drivers/media/usb/dvb-usb/dvb-usb.h": [
          "File: drivers/media/usb/dvb-usb/dvb-usb.h -> drivers/media/usb/dvb-usb/dvb-usb.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "433:  int powered;",
          "436:  struct mutex usb_mutex;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "440:  struct mutex data_mutex;",
          "",
          "---------------"
        ]
      }
    }
  ]
}