{
  "cve_id": "CVE-2013-2496",
  "cve_desc": "The msrle_decode_8_16_24_32 function in msrledec.c in libavcodec in FFmpeg through 1.1.3 does not properly determine certain end pointers, which allows remote attackers to cause a denial of service (out-of-bounds array access and application crash) or possibly have unspecified other impact via crafted Microsoft RLE data.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "e398990eb87785e20e065cd3f14d1dbb69df4392",
  "patch_info": {
    "commit_hash": "e398990eb87785e20e065cd3f14d1dbb69df4392",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/e398990eb87785e20e065cd3f14d1dbb69df4392",
    "files": [
      "libavcodec/msrledec.c"
    ],
    "message": "msrledec: fix output_end checks\n\nFixes out of array accesses\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
    "before_after_code_files": [
      "libavcodec/msrledec.c||libavcodec/msrledec.c"
    ]
  },
  "patch_diff": {
    "libavcodec/msrledec.c||libavcodec/msrledec.c": [
      "File: libavcodec/msrledec.c -> libavcodec/msrledec.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "138:     unsigned int width= FFABS(pic->linesize[0]) / (depth >> 3);",
      "140:     output     = pic->data[0] + (avctx->height - 1) * pic->linesize[0];",
      "142:     while (bytestream2_get_bytes_left(gb) > 0) {",
      "143:         p1 = bytestream2_get_byteu(gb);",
      "144:         if(p1 == 0) { //Escape code",
      "",
      "[Removed Lines]",
      "141:     output_end = pic->data[0] +  avctx->height      * pic->linesize[0];",
      "",
      "[Added Lines]",
      "141:     output_end = output + FFABS(pic->linesize[0]);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "155:                     }",
      "156:                 }",
      "157:                 output = pic->data[0] + line * pic->linesize[0];",
      "158:                 pos = 0;",
      "159:                 continue;",
      "160:             } else if(p2 == 1) { //End-of-picture",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "159:                 output_end = output + FFABS(pic->linesize[0]);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "169:                     return -1;",
      "170:                 }",
      "171:                 output = pic->data[0] + line * pic->linesize[0] + pos * (depth >> 3);",
      "172:                 continue;",
      "173:             }",
      "177:                 bytestream2_skip(gb, 2 * (depth >> 3));",
      "178:                 continue;",
      "179:             } else if (bytestream2_get_bytes_left(gb) < p2 * (depth >> 3)) {",
      "",
      "[Removed Lines]",
      "175:             if ((pic->linesize[0] > 0 && output + p2 * (depth >> 3) > output_end) ||",
      "176:                 (pic->linesize[0] < 0 && output + p2 * (depth >> 3) < output_end)) {",
      "",
      "[Added Lines]",
      "174:                 output_end = pic->data[0] + line * pic->linesize[0] + FFABS(pic->linesize[0]);",
      "178:             if (output + p2 * (depth >> 3) > output_end) {",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "203:             pos += p2;",
      "204:         } else { //run of pixels",
      "205:             uint8_t pix[3]; //original pixel",
      "208:                 continue;",
      "210:             switch(depth){",
      "",
      "[Removed Lines]",
      "206:             if ((pic->linesize[0] > 0 && output + p1 * (depth >> 3) > output_end) ||",
      "207:                 (pic->linesize[0] < 0 && output + p1 * (depth >> 3) < output_end))",
      "",
      "[Added Lines]",
      "208:             if (output + p1 * (depth >> 3) > output_end)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f84ddb0c0fbb7f1c0ff34418426840f6ea79448e",
      "candidate_info": {
        "commit_hash": "f84ddb0c0fbb7f1c0ff34418426840f6ea79448e",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/f84ddb0c0fbb7f1c0ff34418426840f6ea79448e",
        "files": [
          "libavcodec/msrledec.c"
        ],
        "message": "msrledec: fix output_end checks\n\nFixes out of array accesses\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit e398990eb87785e20e065cd3f14d1dbb69df4392)\n\nConflicts:\n\n\tlibavcodec/msrledec.c",
        "before_after_code_files": [
          "libavcodec/msrledec.c||libavcodec/msrledec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/msrledec.c||libavcodec/msrledec.c"
          ],
          "candidate": [
            "libavcodec/msrledec.c||libavcodec/msrledec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/msrledec.c||libavcodec/msrledec.c": [
          "File: libavcodec/msrledec.c -> libavcodec/msrledec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "138:     unsigned int width= FFABS(pic->linesize[0]) / (depth >> 3);",
          "140:     output     = pic->data[0] + (avctx->height - 1) * pic->linesize[0];",
          "142:     while (bytestream2_get_bytes_left(gb) > 0) {",
          "143:         p1 = bytestream2_get_byteu(gb);",
          "144:         if(p1 == 0) { //Escape code",
          "",
          "[Removed Lines]",
          "141:     output_end = pic->data[0] +  avctx->height      * pic->linesize[0];",
          "",
          "[Added Lines]",
          "141:     output_end = output + FFABS(pic->linesize[0]);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "155:                         return AVERROR_INVALIDDATA;",
          "156:                     }",
          "157:                 }",
          "158:                 pos = 0;",
          "159:                 continue;",
          "160:             } else if(p2 == 1) { //End-of-picture",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "159:                 output_end = output + FFABS(pic->linesize[0]);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "169:                     return -1;",
          "170:                 }",
          "171:                 output = pic->data[0] + line * pic->linesize[0] + pos * (depth >> 3);",
          "172:                 continue;",
          "173:             }",
          "177:                 bytestream2_skip(gb, 2 * (depth >> 3));",
          "178:                 continue;",
          "179:             } else if (bytestream2_get_bytes_left(gb) < p2 * (depth >> 3)) {",
          "",
          "[Removed Lines]",
          "175:             if ((pic->linesize[0] > 0 && output + p2 * (depth >> 3) > output_end) ||",
          "176:                 (pic->linesize[0] < 0 && output + p2 * (depth >> 3) < output_end)) {",
          "",
          "[Added Lines]",
          "174:                 output_end = pic->data[0] + line * pic->linesize[0] + FFABS(pic->linesize[0]);",
          "178:             if (output + p2 * (depth >> 3) > output_end) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "203:             pos += p2;",
          "204:         } else { //run of pixels",
          "205:             uint8_t pix[3]; //original pixel",
          "208:                 continue;",
          "210:             switch(depth){",
          "",
          "[Removed Lines]",
          "206:             if ((pic->linesize[0] > 0 && output + p1 * (depth >> 3) > output_end) ||",
          "207:                 (pic->linesize[0] < 0 && output + p1 * (depth >> 3) < output_end))",
          "",
          "[Added Lines]",
          "208:             if (output + p1 * (depth >> 3) > output_end)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b9a1efa6f4d4cda20ce796614ff5b0c523df5672",
      "candidate_info": {
        "commit_hash": "b9a1efa6f4d4cda20ce796614ff5b0c523df5672",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/b9a1efa6f4d4cda20ce796614ff5b0c523df5672",
        "files": [
          "libavcodec/msrledec.c"
        ],
        "message": "msrledec: fix output_end checks\n\nFixes out of array accesses\n\nFound-by: Mateusz \"j00ru\" Jurczyk and Gynvael Coldwind\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n(cherry picked from commit e398990eb87785e20e065cd3f14d1dbb69df4392)\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>",
        "before_after_code_files": [
          "libavcodec/msrledec.c||libavcodec/msrledec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavcodec/msrledec.c||libavcodec/msrledec.c"
          ],
          "candidate": [
            "libavcodec/msrledec.c||libavcodec/msrledec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavcodec/msrledec.c||libavcodec/msrledec.c": [
          "File: libavcodec/msrledec.c -> libavcodec/msrledec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "138:     unsigned int width= FFABS(pic->linesize[0]) / (depth >> 3);",
          "140:     output     = pic->data[0] + (avctx->height - 1) * pic->linesize[0];",
          "142:     while (bytestream2_get_bytes_left(gb) > 0) {",
          "143:         p1 = bytestream2_get_byteu(gb);",
          "144:         if(p1 == 0) { //Escape code",
          "",
          "[Removed Lines]",
          "141:     output_end = pic->data[0] +  avctx->height      * pic->linesize[0];",
          "",
          "[Added Lines]",
          "141:     output_end = output + FFABS(pic->linesize[0]);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "155:                     }",
          "156:                 }",
          "157:                 output = pic->data[0] + line * pic->linesize[0];",
          "158:                 pos = 0;",
          "159:                 continue;",
          "160:             } else if(p2 == 1) { //End-of-picture",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "159:                 output_end = output + FFABS(pic->linesize[0]);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "169:                     return -1;",
          "170:                 }",
          "171:                 output = pic->data[0] + line * pic->linesize[0] + pos * (depth >> 3);",
          "172:                 continue;",
          "173:             }",
          "177:                 bytestream2_skip(gb, 2 * (depth >> 3));",
          "178:                 continue;",
          "179:             } else if (bytestream2_get_bytes_left(gb) < p2 * (depth >> 3)) {",
          "",
          "[Removed Lines]",
          "175:             if ((pic->linesize[0] > 0 && output + p2 * (depth >> 3) > output_end) ||",
          "176:                 (pic->linesize[0] < 0 && output + p2 * (depth >> 3) < output_end)) {",
          "",
          "[Added Lines]",
          "174:                 output_end = pic->data[0] + line * pic->linesize[0] + FFABS(pic->linesize[0]);",
          "178:             if (output + p2 * (depth >> 3) > output_end) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "203:             pos += p2;",
          "204:         } else { //run of pixels",
          "205:             uint8_t pix[3]; //original pixel",
          "208:                 continue;",
          "210:             switch(depth){",
          "",
          "[Removed Lines]",
          "206:             if ((pic->linesize[0] > 0 && output + p1 * (depth >> 3) > output_end) ||",
          "207:                 (pic->linesize[0] < 0 && output + p1 * (depth >> 3) < output_end))",
          "",
          "[Added Lines]",
          "208:             if (output + p1 * (depth >> 3) > output_end)",
          "",
          "---------------"
        ]
      }
    }
  ]
}