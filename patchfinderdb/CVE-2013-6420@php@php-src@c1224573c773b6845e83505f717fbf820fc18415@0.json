{
  "cve_id": "CVE-2013-6420",
  "cve_desc": "The asn1_time_to_time_t function in ext/openssl/openssl.c in PHP before 5.3.28, 5.4.x before 5.4.23, and 5.5.x before 5.5.7 does not properly parse (1) notBefore and (2) notAfter timestamps in X.509 certificates, which allows remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted certificate that is not properly handled by the openssl_x509_parse function.",
  "repo": "php/php-src",
  "patch_hash": "c1224573c773b6845e83505f717fbf820fc18415",
  "patch_info": {
    "commit_hash": "c1224573c773b6845e83505f717fbf820fc18415",
    "repo": "php/php-src",
    "commit_url": "https://github.com/php/php-src/commit/c1224573c773b6845e83505f717fbf820fc18415",
    "files": [
      "NEWS",
      "ext/openssl/openssl.c",
      "ext/openssl/tests/cve-2013-6420.crt",
      "ext/openssl/tests/cve-2013-6420.phpt"
    ],
    "message": "Fix CVE-2013-6420 - memory corruption in openssl_x509_parse",
    "before_after_code_files": [
      "ext/openssl/openssl.c||ext/openssl/openssl.c",
      "ext/openssl/tests/cve-2013-6420.crt||ext/openssl/tests/cve-2013-6420.crt",
      "ext/openssl/tests/cve-2013-6420.phpt||ext/openssl/tests/cve-2013-6420.phpt"
    ]
  },
  "patch_diff": {
    "ext/openssl/openssl.c||ext/openssl/openssl.c": [
      "File: ext/openssl/openssl.c -> ext/openssl/openssl.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "644:  char * thestr;",
      "645:  long gmadjust = 0;",
      "649:   return (time_t)-1;",
      "650:  }",
      "654:  memset(&thetime, 0, sizeof(thetime));",
      "660:  thetime.tm_sec = atoi(thestr);",
      "",
      "[Removed Lines]",
      "647:  if (timestr->length < 13) {",
      "648:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"extension author too lazy to parse %s correctly\", timestr->data);",
      "652:  strbuf = estrdup((char *)timestr->data);",
      "658:  thestr = strbuf + timestr->length - 3;",
      "",
      "[Added Lines]",
      "647:  if (ASN1_STRING_type(timestr) != V_ASN1_UTCTIME) {",
      "648:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"illegal ASN1 data type for timestamp\");",
      "652:  if (ASN1_STRING_length(timestr) != strlen(ASN1_STRING_data(timestr))) {",
      "653:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"illegal length in timestamp\");",
      "654:   return (time_t)-1;",
      "655:  }",
      "657:  if (ASN1_STRING_length(timestr) < 13) {",
      "658:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"unable to parse time string %s correctly\", timestr->data);",
      "659:   return (time_t)-1;",
      "660:  }",
      "662:  strbuf = estrdup((char *)ASN1_STRING_data(timestr));",
      "668:  thestr = strbuf + ASN1_STRING_length(timestr) - 3;",
      "",
      "---------------"
    ],
    "ext/openssl/tests/cve-2013-6420.crt||ext/openssl/tests/cve-2013-6420.crt": [
      "File: ext/openssl/tests/cve-2013-6420.crt -> ext/openssl/tests/cve-2013-6420.crt",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: -----BEGIN CERTIFICATE-----",
      "2: MIIEpDCCA4ygAwIBAgIJAJzu8r6u6eBcMA0GCSqGSIb3DQEBBQUAMIHDMQswCQYD",
      "3: VQQGEwJERTEcMBoGA1UECAwTTm9yZHJoZWluLVdlc3RmYWxlbjEQMA4GA1UEBwwH",
      "4: S8ODwrZsbjEUMBIGA1UECgwLU2VrdGlvbkVpbnMxHzAdBgNVBAsMFk1hbGljaW91",
      "5: cyBDZXJ0IFNlY3Rpb24xITAfBgNVBAMMGG1hbGljaW91cy5zZWt0aW9uZWlucy5k",
      "6: ZTEqMCgGCSqGSIb3DQEJARYbc3RlZmFuLmVzc2VyQHNla3Rpb25laW5zLmRlMHUY",
      "7: ZDE5NzAwMTAxMDAwMDAwWgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
      "8: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
      "9: AAAAAAAXDTE0MTEyODExMzkzNVowgcMxCzAJBgNVBAYTAkRFMRwwGgYDVQQIDBNO",
      "10: b3JkcmhlaW4tV2VzdGZhbGVuMRAwDgYDVQQHDAdLw4PCtmxuMRQwEgYDVQQKDAtT",
      "11: ZWt0aW9uRWluczEfMB0GA1UECwwWTWFsaWNpb3VzIENlcnQgU2VjdGlvbjEhMB8G",
      "12: A1UEAwwYbWFsaWNpb3VzLnNla3Rpb25laW5zLmRlMSowKAYJKoZIhvcNAQkBFhtz",
      "13: dGVmYW4uZXNzZXJAc2VrdGlvbmVpbnMuZGUwggEiMA0GCSqGSIb3DQEBAQUAA4IB",
      "14: DwAwggEKAoIBAQDDAf3hl7JY0XcFniyEJpSSDqn0OqBr6QP65usJPRt/8PaDoqBu",
      "15: wEYT/Na+6fsgPjC0uK9DZgWg2tHWWoanSblAMoz5PH6Z+S4SHRZ7e2dDIjPjdhjh",
      "16: 0mLg2UMO5yp0V797Ggs9lNt6JRfH81MN2obXWs4NtztLMuD6egqpr8dDbr34aOs8",
      "17: pkdui5UawTZksy5pLPHq5cMhFGm06v65CLo0V2Pd9+KAokPrPcN5KLKebz7mLpk6",
      "18: SMeEXOKP4idEqxyQ7O7fBuHMedsQhu+prY3si3BUyKfQtP5CZnX2bp0wKHxX12DX",
      "19: 1nfFIt9DbGvHTcyOuN+nZLPBm3vWxntyIIvVAgMBAAGjQjBAMAkGA1UdEwQCMAAw",
      "20: EQYJYIZIAYb4QgEBBAQDAgeAMAsGA1UdDwQEAwIFoDATBgNVHSUEDDAKBggrBgEF",
      "21: BQcDAjANBgkqhkiG9w0BAQUFAAOCAQEAG0fZYYCTbdj1XYc+1SnoaPR+vI8C8CaD",
      "22: 8+0UYhdnyU4gga0BAcDrY9e94eEAu6ZqycF6FjLqXXdAboppWocr6T6GD1x33Ckl",
      "23: VArzG/KxQohGD2JeqkhIMlDomxHO7ka39+Oa8i2vWLVyjU8AZvWMAruHa4EENyG7",
      "24: lW2AagaFKFCr9TnXTfrdxGVEbv7KVQ6bdhg5p5SjpWH1+Mq03uR3ZXPBYdyV8319",
      "25: o0lVj1KFI2DCL/liWisJRoof+1cR35Ctd0wYBcpB6TZslMcOPl76dwKwJgeJo2Qg",
      "26: Zsfmc2vC1/qOlNuNq/0TzzkVGv8ETT3CgaU+UXe4XOVvkccebJn2dg==",
      "27: -----END CERTIFICATE-----",
      "",
      "---------------"
    ],
    "ext/openssl/tests/cve-2013-6420.phpt||ext/openssl/tests/cve-2013-6420.phpt": [
      "File: ext/openssl/tests/cve-2013-6420.phpt -> ext/openssl/tests/cve-2013-6420.phpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: --TEST--",
      "2: CVE-2013-6420",
      "3: --SKIPIF--",
      "4: <?php",
      "5: if (!extension_loaded(\"openssl\")) die(\"skip\");",
      "6: ?>",
      "7: --FILE--",
      "8: <?php",
      "9: $crt = substr(__FILE__, 0, -4).'.crt';",
      "10: $info = openssl_x509_parse(\"file://$crt\");",
      "11: var_dump($info['issuer']['emailAddress'], $info[\"validFrom_time_t\"]);",
      "12: ?>",
      "13: Done",
      "14: --EXPECTF--",
      "15: %s openssl_x509_parse(): illegal ASN1 data type for timestamp in %s/cve-2013-6420.php on line 3",
      "16: string(27) \"stefan.esser@sektioneins.de\"",
      "17: int(-1)",
      "18: Done",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f1480260178376d3128e7dd49db70ecf843be27d",
      "candidate_info": {
        "commit_hash": "f1480260178376d3128e7dd49db70ecf843be27d",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/f1480260178376d3128e7dd49db70ecf843be27d",
        "files": [
          "ext/openssl/openssl.c",
          "ext/openssl/tests/bug65698.crt",
          "ext/openssl/tests/bug65698.phpt",
          "ext/openssl/tests/cve-2013-6420.phpt"
        ],
        "message": "Added support for parsing ssl certificates using GeneralizedTime format.\n\nfix bug #65698\nfix bug #66636",
        "before_after_code_files": [
          "ext/openssl/openssl.c||ext/openssl/openssl.c",
          "ext/openssl/tests/bug65698.crt||ext/openssl/tests/bug65698.crt",
          "ext/openssl/tests/bug65698.phpt||ext/openssl/tests/bug65698.phpt",
          "ext/openssl/tests/cve-2013-6420.phpt||ext/openssl/tests/cve-2013-6420.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/openssl/openssl.c||ext/openssl/openssl.c",
            "ext/openssl/tests/cve-2013-6420.phpt||ext/openssl/tests/cve-2013-6420.phpt"
          ],
          "candidate": [
            "ext/openssl/openssl.c||ext/openssl/openssl.c",
            "ext/openssl/tests/cve-2013-6420.phpt||ext/openssl/tests/cve-2013-6420.phpt"
          ]
        }
      },
      "candidate_diff": {
        "ext/openssl/openssl.c||ext/openssl/openssl.c": [
          "File: ext/openssl/openssl.c -> ext/openssl/openssl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "708:  char * thestr;",
          "709:  long gmadjust = 0;",
          "712:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"illegal ASN1 data type for timestamp\");",
          "713:   return (time_t)-1;",
          "714:  }",
          "",
          "[Removed Lines]",
          "711:  if (ASN1_STRING_type(timestr) != V_ASN1_UTCTIME) {",
          "",
          "[Added Lines]",
          "711:  if (ASN1_STRING_type(timestr) != V_ASN1_UTCTIME && ASN1_STRING_type(timestr) != V_ASN1_GENERALIZEDTIME) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "745:  thestr -= 2;",
          "746:  thetime.tm_mon = atoi(thestr)-1;",
          "753:  }",
          "755:  thetime.tm_isdst = -1;",
          "756:  ret = mktime(&thetime);",
          "",
          "[Removed Lines]",
          "748:  thestr -= 2;",
          "749:  thetime.tm_year = atoi(thestr);",
          "751:  if (thetime.tm_year < 68) {",
          "752:   thetime.tm_year += 100;",
          "",
          "[Added Lines]",
          "749:  if( ASN1_STRING_type(timestr) == V_ASN1_UTCTIME ) {",
          "750:   thestr -= 2;",
          "751:   thetime.tm_year = atoi(thestr);",
          "753:   if (thetime.tm_year < 68) {",
          "754:    thetime.tm_year += 100;",
          "755:   }",
          "756:  } else if( ASN1_STRING_type(timestr) == V_ASN1_GENERALIZEDTIME ) {",
          "757:   thestr -= 4;",
          "758:   thetime.tm_year = atoi(thestr) - 1900;",
          "",
          "---------------"
        ],
        "ext/openssl/tests/bug65698.crt||ext/openssl/tests/bug65698.crt": [
          "File: ext/openssl/tests/bug65698.crt -> ext/openssl/tests/bug65698.crt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: -----BEGIN CERTIFICATE-----",
          "2: MIIEsTCCA5mgAwIBAgIQdwrGwrpRpBwdXS+ZsmsMGjANBgkqhkiG9w0BAQUFADA+",
          "3: MQswCQYDVQQGEwJQTDEbMBkGA1UEChMSVW5pemV0byBTcC4geiBvLm8uMRIwEAYD",
          "4: VQQDEwlDZXJ0dW0gQ0EwIhgPMjAwOTAzMDMxMjUzMThaGA8yMDI0MDMwMzEyNTMx",
          "5: OFowdzELMAkGA1UEBhMCUEwxIjAgBgNVBAoTGVVuaXpldG8gVGVjaG5vbG9naWVz",
          "6: IFMuQS4xJzAlBgNVBAsTHkNlcnR1bSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEb",
          "7: MBkGA1UEAxMSQ2VydHVtIExldmVsIElJIENBMIIBIjANBgkqhkiG9w0BAQEFAAOC",
          "8: AQ8AMIIBCgKCAQEA4LE0Ixw8h5Lper9tHVtZkWIujxYsPVgUZABeZZgQsKTdJjaG",
          "9: VP64B/oiEV5Hd3AxRqaZ7dRRsf4Pg/PSS/2mHRQQ/SH3XACbrDHmucDvYgtU/WoZ",
          "10: yp9d6PXVPY4j7J5t/52s+EbZD5swSuQLGjZ9iwg9sXX3JdJ9Ty+B3z80oiajpK0B",
          "11: wqAxrcX3DekEOknj7LkAOK6iuQKI85REj4IVb9kD7KKIWdISGbfL4Ezh/TP51e0L",
          "12: /WhTJ7lHbHbRzFfPU/oi3Qyt5tEexrPKe+6N+Jrejdb5Ya7Ne3tKujDU7KlbO+dn",
          "13: pzFH7VHkBPJcQJ7QUrprPaqVsVg3JJ1PXTqVnwIDAQABo4IBbDCCAWgwDwYDVR0T",
          "14: AQH/BAUwAwEB/zAdBgNVHQ4EFgQUgGIR3sBrpxDhCPBVtDCDv/qPCGAwUgYDVR0j",
          "15: BEswSaFCpEAwPjELMAkGA1UEBhMCUEwxGzAZBgNVBAoTElVuaXpldG8gU3AuIHog",
          "16: by5vLjESMBAGA1UEAxMJQ2VydHVtIENBggMBACAwDgYDVR0PAQH/BAQDAgEGMCwG",
          "17: A1UdHwQlMCMwIaAfoB2GG2h0dHA6Ly9jcmwuY2VydHVtLnBsL2NhLmNybDBoBggr",
          "18: BgEFBQcBAQRcMFowKAYIKwYBBQUHMAGGHGh0dHA6Ly9zdWJjYS5vY3NwLWNlcnR1",
          "19: bS5jb20wLgYIKwYBBQUHMAKGImh0dHA6Ly9yZXBvc2l0b3J5LmNlcnR1bS5wbC9j",
          "20: YS5jZXIwOgYDVR0gBDMwMTAvBgRVHSAAMCcwJQYIKwYBBQUHAgEWGWh0dHBzOi8v",
          "21: d3d3LmNlcnR1bS5wbC9DUFMwDQYJKoZIhvcNAQEFBQADggEBAI/jSDAW/w9qLzF6",
          "22: 4oQiIRB7dGKp2Nlj27xZFYDBRINn4DKyZExkpanASF2of9eEzvrS+qoDY29mhXCi",
          "23: MkiGr0vCsVhn0ReUpjg4Z5SsiQhZ2BGSjXiOJgaDI7Dw1MH7Ru6jdfSbLyd97EFj",
          "24: ER0ERGdrcA2kLw7KfQm78IkClXEEKjKnAUTn1d/5Y4UuBWDCEL0FLgO9AqNXEzIy",
          "25: rlXVGIs73kdefAK+Z1T6dm83vUrDMyzemWNRBI2tVBujkN6zkaF6uPjE4hfoIkEQ",
          "26: Z4317byFkG4mxjATU+tQLG1Bs88HUAOrxtJOo/WoeCNsFJaxbYPt4oQGxIVYdz29",
          "27: OUX9CQA=",
          "28: -----END CERTIFICATE-----",
          "",
          "---------------"
        ],
        "ext/openssl/tests/bug65698.phpt||ext/openssl/tests/bug65698.phpt": [
          "File: ext/openssl/tests/bug65698.phpt -> ext/openssl/tests/bug65698.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #65689 (GeneralizedTime format parsing)",
          "3: --SKIPIF--",
          "4: <?php",
          "5: if (!extension_loaded(\"openssl\")) die(\"skip\");",
          "6: ?>",
          "7: --FILE--",
          "8: <?php",
          "9: $crt = substr(__FILE__, 0, -4).'.crt';",
          "10: $info = openssl_x509_parse(\"file://$crt\");",
          "11: var_dump($info[\"validFrom\"], $info[\"validFrom_time_t\"], $info[\"validTo\"], $info[\"validTo_time_t\"]);",
          "12: ?>",
          "13: Done",
          "14: --EXPECTF--",
          "15: string(15) \"20090303125318Z\"",
          "16: int(1236084798)",
          "17: string(15) \"20240303125318Z\"",
          "18: int(1709470398)",
          "19: Done",
          "",
          "---------------"
        ],
        "ext/openssl/tests/cve-2013-6420.phpt||ext/openssl/tests/cve-2013-6420.phpt": [
          "File: ext/openssl/tests/cve-2013-6420.phpt -> ext/openssl/tests/cve-2013-6420.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: ?>",
          "13: Done",
          "14: --EXPECTF--",
          "16: string(27) \"stefan.esser@sektioneins.de\"",
          "17: int(-1)",
          "18: Done",
          "",
          "[Removed Lines]",
          "15: %s openssl_x509_parse(): illegal ASN1 data type for timestamp in %s%ecve-2013-6420.php on line 3",
          "",
          "[Added Lines]",
          "15: %s openssl_x509_parse(): illegal length in timestamp in %s%ecve-2013-6420.php on line 3",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6f739318fd3dc04a01aec762d449949db481bf5d",
      "candidate_info": {
        "commit_hash": "6f739318fd3dc04a01aec762d449949db481bf5d",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/6f739318fd3dc04a01aec762d449949db481bf5d",
        "files": [
          "ext/openssl/tests/cve-2013-6420.phpt"
        ],
        "message": "fix dir separator in cve-2013-6420 test",
        "before_after_code_files": [
          "ext/openssl/tests/cve-2013-6420.phpt||ext/openssl/tests/cve-2013-6420.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/openssl/tests/cve-2013-6420.phpt||ext/openssl/tests/cve-2013-6420.phpt"
          ],
          "candidate": [
            "ext/openssl/tests/cve-2013-6420.phpt||ext/openssl/tests/cve-2013-6420.phpt"
          ]
        }
      },
      "candidate_diff": {
        "ext/openssl/tests/cve-2013-6420.phpt||ext/openssl/tests/cve-2013-6420.phpt": [
          "File: ext/openssl/tests/cve-2013-6420.phpt -> ext/openssl/tests/cve-2013-6420.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: ?>",
          "13: Done",
          "14: --EXPECTF--",
          "16: string(27) \"stefan.esser@sektioneins.de\"",
          "17: int(-1)",
          "18: Done",
          "",
          "[Removed Lines]",
          "15: %s openssl_x509_parse(): illegal ASN1 data type for timestamp in %s/cve-2013-6420.php on line 3",
          "",
          "[Added Lines]",
          "15: %s openssl_x509_parse(): illegal ASN1 data type for timestamp in %s%ecve-2013-6420.php on line 3",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "76a7fd893b7d6101300cc656058704a73254d593",
      "candidate_info": {
        "commit_hash": "76a7fd893b7d6101300cc656058704a73254d593",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/76a7fd893b7d6101300cc656058704a73254d593",
        "files": [
          "NEWS",
          "ext/openssl/openssl.c",
          "ext/openssl/tests/bug65698.crt",
          "ext/openssl/tests/bug65698.phpt",
          "ext/openssl/tests/cve-2013-6420.phpt"
        ],
        "message": "Added support for parsing ssl certificates using GeneralizedTime format.\n\nfix bug #65698\nfix bug #66636",
        "before_after_code_files": [
          "ext/openssl/openssl.c||ext/openssl/openssl.c",
          "ext/openssl/tests/bug65698.crt||ext/openssl/tests/bug65698.crt",
          "ext/openssl/tests/bug65698.phpt||ext/openssl/tests/bug65698.phpt",
          "ext/openssl/tests/cve-2013-6420.phpt||ext/openssl/tests/cve-2013-6420.phpt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/openssl/openssl.c||ext/openssl/openssl.c",
            "ext/openssl/tests/cve-2013-6420.phpt||ext/openssl/tests/cve-2013-6420.phpt"
          ],
          "candidate": [
            "ext/openssl/openssl.c||ext/openssl/openssl.c",
            "ext/openssl/tests/cve-2013-6420.phpt||ext/openssl/tests/cve-2013-6420.phpt"
          ]
        }
      },
      "candidate_diff": {
        "ext/openssl/openssl.c||ext/openssl/openssl.c": [
          "File: ext/openssl/openssl.c -> ext/openssl/openssl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "649:  char * thestr;",
          "650:  long gmadjust = 0;",
          "653:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"illegal ASN1 data type for timestamp\");",
          "654:   return (time_t)-1;",
          "655:  }",
          "",
          "[Removed Lines]",
          "652:  if (ASN1_STRING_type(timestr) != V_ASN1_UTCTIME) {",
          "",
          "[Added Lines]",
          "652:  if (ASN1_STRING_type(timestr) != V_ASN1_UTCTIME && ASN1_STRING_type(timestr) != V_ASN1_GENERALIZEDTIME) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "664:   return (time_t)-1;",
          "665:  }",
          "667:  strbuf = estrdup((char *)ASN1_STRING_data(timestr));",
          "669:  memset(&thetime, 0, sizeof(thetime));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "667:  if (ASN1_STRING_type(timestr) == V_ASN1_GENERALIZEDTIME && ASN1_STRING_length(timestr) < 15) {",
          "668:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"unable to parse time string %s correctly\", timestr->data);",
          "669:   return (time_t)-1;",
          "670:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "686:  thestr -= 2;",
          "687:  thetime.tm_mon = atoi(thestr)-1;",
          "694:  }",
          "696:  thetime.tm_isdst = -1;",
          "697:  ret = mktime(&thetime);",
          "",
          "[Removed Lines]",
          "689:  thestr -= 2;",
          "690:  thetime.tm_year = atoi(thestr);",
          "692:  if (thetime.tm_year < 68) {",
          "693:   thetime.tm_year += 100;",
          "",
          "[Added Lines]",
          "695:  if( ASN1_STRING_type(timestr) == V_ASN1_UTCTIME ) {",
          "696:   thestr -= 2;",
          "697:   thetime.tm_year = atoi(thestr);",
          "699:   if (thetime.tm_year < 68) {",
          "700:    thetime.tm_year += 100;",
          "701:   }",
          "702:  } else if( ASN1_STRING_type(timestr) == V_ASN1_GENERALIZEDTIME ) {",
          "703:   thestr -= 4;",
          "704:   thetime.tm_year = atoi(thestr) - 1900;",
          "",
          "---------------"
        ],
        "ext/openssl/tests/bug65698.crt||ext/openssl/tests/bug65698.crt": [
          "File: ext/openssl/tests/bug65698.crt -> ext/openssl/tests/bug65698.crt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: -----BEGIN CERTIFICATE-----",
          "2: MIIEsTCCA5mgAwIBAgIQdwrGwrpRpBwdXS+ZsmsMGjANBgkqhkiG9w0BAQUFADA+",
          "3: MQswCQYDVQQGEwJQTDEbMBkGA1UEChMSVW5pemV0byBTcC4geiBvLm8uMRIwEAYD",
          "4: VQQDEwlDZXJ0dW0gQ0EwIhgPMjAwOTAzMDMxMjUzMThaGA8yMDI0MDMwMzEyNTMx",
          "5: OFowdzELMAkGA1UEBhMCUEwxIjAgBgNVBAoTGVVuaXpldG8gVGVjaG5vbG9naWVz",
          "6: IFMuQS4xJzAlBgNVBAsTHkNlcnR1bSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEb",
          "7: MBkGA1UEAxMSQ2VydHVtIExldmVsIElJIENBMIIBIjANBgkqhkiG9w0BAQEFAAOC",
          "8: AQ8AMIIBCgKCAQEA4LE0Ixw8h5Lper9tHVtZkWIujxYsPVgUZABeZZgQsKTdJjaG",
          "9: VP64B/oiEV5Hd3AxRqaZ7dRRsf4Pg/PSS/2mHRQQ/SH3XACbrDHmucDvYgtU/WoZ",
          "10: yp9d6PXVPY4j7J5t/52s+EbZD5swSuQLGjZ9iwg9sXX3JdJ9Ty+B3z80oiajpK0B",
          "11: wqAxrcX3DekEOknj7LkAOK6iuQKI85REj4IVb9kD7KKIWdISGbfL4Ezh/TP51e0L",
          "12: /WhTJ7lHbHbRzFfPU/oi3Qyt5tEexrPKe+6N+Jrejdb5Ya7Ne3tKujDU7KlbO+dn",
          "13: pzFH7VHkBPJcQJ7QUrprPaqVsVg3JJ1PXTqVnwIDAQABo4IBbDCCAWgwDwYDVR0T",
          "14: AQH/BAUwAwEB/zAdBgNVHQ4EFgQUgGIR3sBrpxDhCPBVtDCDv/qPCGAwUgYDVR0j",
          "15: BEswSaFCpEAwPjELMAkGA1UEBhMCUEwxGzAZBgNVBAoTElVuaXpldG8gU3AuIHog",
          "16: by5vLjESMBAGA1UEAxMJQ2VydHVtIENBggMBACAwDgYDVR0PAQH/BAQDAgEGMCwG",
          "17: A1UdHwQlMCMwIaAfoB2GG2h0dHA6Ly9jcmwuY2VydHVtLnBsL2NhLmNybDBoBggr",
          "18: BgEFBQcBAQRcMFowKAYIKwYBBQUHMAGGHGh0dHA6Ly9zdWJjYS5vY3NwLWNlcnR1",
          "19: bS5jb20wLgYIKwYBBQUHMAKGImh0dHA6Ly9yZXBvc2l0b3J5LmNlcnR1bS5wbC9j",
          "20: YS5jZXIwOgYDVR0gBDMwMTAvBgRVHSAAMCcwJQYIKwYBBQUHAgEWGWh0dHBzOi8v",
          "21: d3d3LmNlcnR1bS5wbC9DUFMwDQYJKoZIhvcNAQEFBQADggEBAI/jSDAW/w9qLzF6",
          "22: 4oQiIRB7dGKp2Nlj27xZFYDBRINn4DKyZExkpanASF2of9eEzvrS+qoDY29mhXCi",
          "23: MkiGr0vCsVhn0ReUpjg4Z5SsiQhZ2BGSjXiOJgaDI7Dw1MH7Ru6jdfSbLyd97EFj",
          "24: ER0ERGdrcA2kLw7KfQm78IkClXEEKjKnAUTn1d/5Y4UuBWDCEL0FLgO9AqNXEzIy",
          "25: rlXVGIs73kdefAK+Z1T6dm83vUrDMyzemWNRBI2tVBujkN6zkaF6uPjE4hfoIkEQ",
          "26: Z4317byFkG4mxjATU+tQLG1Bs88HUAOrxtJOo/WoeCNsFJaxbYPt4oQGxIVYdz29",
          "27: OUX9CQA=",
          "28: -----END CERTIFICATE-----",
          "",
          "---------------"
        ],
        "ext/openssl/tests/bug65698.phpt||ext/openssl/tests/bug65698.phpt": [
          "File: ext/openssl/tests/bug65698.phpt -> ext/openssl/tests/bug65698.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Bug #65689 (GeneralizedTime format parsing)",
          "3: --SKIPIF--",
          "4: <?php",
          "5: if (!extension_loaded(\"openssl\")) die(\"skip\");",
          "6: ?>",
          "7: --FILE--",
          "8: <?php",
          "9: $crt = substr(__FILE__, 0, -4).'.crt';",
          "10: $info = openssl_x509_parse(\"file://$crt\");",
          "11: var_dump($info[\"validFrom\"], $info[\"validFrom_time_t\"], $info[\"validTo\"], $info[\"validTo_time_t\"]);",
          "12: ?>",
          "13: Done",
          "14: --EXPECTF--",
          "15: string(15) \"20090303125318Z\"",
          "16: int(1236084798)",
          "17: string(15) \"20240303125318Z\"",
          "18: int(1709470398)",
          "19: Done",
          "",
          "---------------"
        ],
        "ext/openssl/tests/cve-2013-6420.phpt||ext/openssl/tests/cve-2013-6420.phpt": [
          "File: ext/openssl/tests/cve-2013-6420.phpt -> ext/openssl/tests/cve-2013-6420.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: ?>",
          "13: Done",
          "14: --EXPECTF--",
          "16: string(27) \"stefan.esser@sektioneins.de\"",
          "17: int(-1)",
          "18: Done",
          "",
          "[Removed Lines]",
          "15: %s openssl_x509_parse(): illegal ASN1 data type for timestamp in %s%ecve-2013-6420.php on line 3",
          "",
          "[Added Lines]",
          "15: %s openssl_x509_parse(): illegal length in timestamp in %s%ecve-2013-6420.php on line 3",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c7220dc6c54f6d3fb57eb5c096f2195749489120",
      "candidate_info": {
        "commit_hash": "c7220dc6c54f6d3fb57eb5c096f2195749489120",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/c7220dc6c54f6d3fb57eb5c096f2195749489120",
        "files": [
          "ext/openssl/openssl.c"
        ],
        "message": "Fix Bug #65538 (cafile now supports stream wrappers)",
        "before_after_code_files": [
          "ext/openssl/openssl.c||ext/openssl/openssl.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/openssl/openssl.c||ext/openssl/openssl.c"
          ],
          "candidate": [
            "ext/openssl/openssl.c||ext/openssl/openssl.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/openssl/openssl.c||ext/openssl/openssl.c": [
          "File: ext/openssl/openssl.c -> ext/openssl/openssl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "695:   return (time_t)-1;",
          "696:  }",
          "699:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"illegal length in timestamp\");",
          "700:   return (time_t)-1;",
          "701:  }",
          "",
          "[Removed Lines]",
          "698:  if (ASN1_STRING_length(timestr) != strlen(ASN1_STRING_data(timestr))) {",
          "",
          "[Added Lines]",
          "698:  if (ASN1_STRING_length(timestr) != strlen((const char*)ASN1_STRING_data(timestr))) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5042:   ASN1_STRING_to_UTF8(&cert_name, san->d.dNSName);",
          "5046:    php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Peer SAN entry is malformed\");",
          "5047:   } else {",
          "5049:   }",
          "5051:   OPENSSL_free(cert_name);",
          "",
          "[Removed Lines]",
          "5045:   if (san_name_len != strlen(cert_name)) {",
          "5048:    is_match = strcasecmp(subject_name, cert_name) == 0;",
          "",
          "[Added Lines]",
          "5045:   if (san_name_len != strlen((const char*)cert_name)) {",
          "5048:    is_match = strcasecmp(subject_name, (const char*)cert_name) == 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5190: }",
          "5194: {",
          "5195:  zval **val = NULL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5194: {",
          "5195:  php_stream *stream;",
          "5196:  X509 *cert;",
          "5197:  BIO *buffer;",
          "5198:  int buffer_active;",
          "5199:  char *line;",
          "5200:  size_t line_len;",
          "5201:  long certs_added = 0;",
          "5202:  const char *begin_line = \"-----BEGIN CERTIFICATE-----\\n\";",
          "5203:  const char *end_line = \"-----END CERTIFICATE-----\\n\";",
          "5205:  stream = php_stream_open_wrapper(cafile, \"rb\", 0, NULL);",
          "5207:  if (stream == NULL) {",
          "5208:   php_error(E_WARNING, \"failed loading cafile stream: `%s'\", cafile);",
          "5209:   return 0;",
          "5210:  } else if (stream->wrapper->is_url) {",
          "5211:   php_stream_close(stream);",
          "5212:   php_error(E_WARNING, \"remote cafile streams are disabled for security purposes\");",
          "5213:   return 0;",
          "5214:  }",
          "5216:  cert_start: {",
          "5217:   line = php_stream_get_line(stream, NULL, 0, &line_len);",
          "5218:   if (line == NULL) {",
          "5219:    goto stream_complete;",
          "5220:   } else if (strcmp(line, begin_line)) {",
          "5221:    efree(line);",
          "5222:    goto cert_start;",
          "5223:   } else {",
          "5224:    buffer = BIO_new(BIO_s_mem());",
          "5225:    buffer_active = 1;",
          "5226:   }",
          "5227:  }",
          "5229:  cert_line: {",
          "5230:   BIO_puts(buffer, line);",
          "5231:   efree(line);",
          "5232:   line = php_stream_get_line(stream, NULL, 0, &line_len);",
          "5233:   if (line == NULL) {",
          "5234:    goto stream_complete;",
          "5235:   } else if (strcmp(line, end_line)) {",
          "5236:    goto cert_line;",
          "5237:   } else {",
          "5238:    goto add_cert;",
          "5239:   }",
          "5240:  }",
          "5242:  add_cert: {",
          "5243:   BIO_puts(buffer, line);",
          "5244:   efree(line);",
          "5245:   cert = PEM_read_bio_X509(buffer, NULL, 0, NULL);",
          "5246:   BIO_free(buffer);",
          "5247:   buffer_active = 0;",
          "5248:   if (cert && X509_STORE_add_cert(cert_store, cert)) {",
          "5249:    ++certs_added;",
          "5250:   }",
          "5251:   goto cert_start;",
          "5252:  }",
          "5254:  stream_complete: {",
          "5255:   php_stream_close(stream);",
          "5256:   if (buffer_active) {",
          "5257:    BIO_free(buffer);",
          "5258:   }",
          "5259:  }",
          "5261:  return certs_added;",
          "5262: }",
          "5266: {",
          "5267:  if (!cafile) {",
          "5268:   cafile = zend_ini_string(\"openssl.cafile\", sizeof(\"openssl.cafile\"), 0);",
          "5269:   cafile = strlen(cafile) ? cafile : NULL;",
          "5270:  }",
          "5272:  if (!capath) {",
          "5273:   capath = zend_ini_string(\"openssl.capath\", sizeof(\"openssl.capath\"), 0);",
          "5274:   capath = strlen(capath) ? capath : NULL;",
          "5275:  }",
          "5277:  if (cafile || capath) {",
          "5278:   if (!SSL_CTX_load_verify_locations(ctx, cafile, capath)) {",
          "5279:    if (cafile && !load_stream_cafile(SSL_CTX_get_cert_store(ctx), cafile TSRMLS_CC)) {",
          "5280:     return 0;",
          "5281:    }",
          "5282:   }",
          "5283:  } else {",
          "5284:   php_openssl_netstream_data_t *sslsock;",
          "5285:   sslsock = (php_openssl_netstream_data_t*)stream->abstract;",
          "5286:   if (sslsock->is_client && !SSL_CTX_set_default_verify_paths(ctx)) {",
          "5287:    php_error_docref(NULL TSRMLS_CC, E_WARNING,",
          "5288:     \"Unable to set default verify locations and no CA settings specified\");",
          "5289:    return 0;",
          "5290:   }",
          "5291:  }",
          "5293:  return 1;",
          "5294: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5213:   GET_VER_OPT_STRING(\"cafile\", cafile);",
          "5214:   GET_VER_OPT_STRING(\"capath\", capath);",
          "5239:   }",
          "5241:   if (GET_VER_OPT(\"verify_depth\")) {",
          "",
          "[Removed Lines]",
          "5216:   if (!cafile) {",
          "5217:    zend_bool exists = 1;",
          "5218:    cafile = zend_ini_string_ex(\"openssl.cafile\", sizeof(\"openssl.cafile\"), 0, &exists);",
          "5219:   }",
          "5221:   if (!capath) {",
          "5222:    zend_bool exists = 1;",
          "5223:    capath = zend_ini_string_ex(\"openssl.capath\", sizeof(\"openssl.capath\"), 0, &exists);",
          "5224:   }",
          "5226:   if (cafile || capath) {",
          "5227:    if (!SSL_CTX_load_verify_locations(ctx, cafile, capath)) {",
          "5228:     php_error_docref(NULL TSRMLS_CC, E_WARNING, \"Unable to set verify locations `%s' `%s'\", cafile, capath);",
          "5229:     return NULL;",
          "5230:    }",
          "5231:   } else {",
          "5232:    php_openssl_netstream_data_t *sslsock;",
          "5233:    sslsock = (php_openssl_netstream_data_t*)stream->abstract;",
          "5234:    if (sslsock->is_client && !SSL_CTX_set_default_verify_paths(ctx)) {",
          "5235:     php_error_docref(NULL TSRMLS_CC, E_WARNING,",
          "5236:      \"Unable to set default verify locations and no CA settings specified\");",
          "5237:     return NULL;",
          "5238:    }",
          "",
          "[Added Lines]",
          "5320:   if (!load_verify_locations(ctx, stream, cafile, capath TSRMLS_CC)) {",
          "5321:    return NULL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0fe07a0e7454b4e313ad9ef17e85638ae000f4e5",
      "candidate_info": {
        "commit_hash": "0fe07a0e7454b4e313ad9ef17e85638ae000f4e5",
        "repo": "php/php-src",
        "commit_url": "https://github.com/php/php-src/commit/0fe07a0e7454b4e313ad9ef17e85638ae000f4e5",
        "files": [
          "NEWS",
          "ext/com_dotnet/com_com.c",
          "ext/openssl/openssl.c",
          "ext/openssl/tests/026.phpt",
          "ext/session/session.c"
        ],
        "message": "Fix missing type checks in various functions",
        "before_after_code_files": [
          "ext/com_dotnet/com_com.c||ext/com_dotnet/com_com.c",
          "ext/openssl/openssl.c||ext/openssl/openssl.c",
          "ext/openssl/tests/026.phpt||ext/openssl/tests/026.phpt",
          "ext/session/session.c||ext/session/session.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "ext/openssl/openssl.c||ext/openssl/openssl.c"
          ],
          "candidate": [
            "ext/openssl/openssl.c||ext/openssl/openssl.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/com_dotnet/com_com.c||ext/com_dotnet/com_com.c": [
          "File: ext/com_dotnet/com_com.c -> ext/com_dotnet/com_com.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "699:   zval **tmp;",
          "702:    typelibname = Z_STRVAL_PP(tmp);",
          "704:    dispname = Z_STRVAL_PP(tmp);",
          "705:  } else if (sink != NULL) {",
          "706:   convert_to_string(sink);",
          "",
          "[Removed Lines]",
          "701:   if (zend_hash_index_find(Z_ARRVAL_P(sink), 0, (void**)&tmp) == SUCCESS)",
          "703:   if (zend_hash_index_find(Z_ARRVAL_P(sink), 1, (void**)&tmp) == SUCCESS)",
          "",
          "[Added Lines]",
          "701:   if (zend_hash_index_find(Z_ARRVAL_P(sink), 0, (void**)&tmp) == SUCCESS && Z_TYPE_PP(tmp) == IS_STRING)",
          "703:   if (zend_hash_index_find(Z_ARRVAL_P(sink), 1, (void**)&tmp) == SUCCESS && Z_TYPE_PP(tmp) == IS_STRING)",
          "",
          "---------------"
        ],
        "ext/openssl/openssl.c||ext/openssl/openssl.c": [
          "File: ext/openssl/openssl.c -> ext/openssl/openssl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "649:   return (time_t)-1;",
          "650:  }",
          "653:   php_error_docref(NULL TSRMLS_CC, E_WARNING, \"illegal length in timestamp\");",
          "654:   return (time_t)-1;",
          "655:  }",
          "",
          "[Removed Lines]",
          "652:  if (ASN1_STRING_length(timestr) != strlen(ASN1_STRING_data(timestr))) {",
          "",
          "[Added Lines]",
          "652:  if (ASN1_STRING_length(timestr) != strlen((char*)ASN1_STRING_data(timestr))) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "765:    req->config_filename, req->var, req->req_config TSRMLS_CC) == FAILURE) return FAILURE",
          "767: #define SET_OPTIONAL_STRING_ARG(key, varname, defval) \\",
          "769:   varname = Z_STRVAL_PP(item); \\",
          "770:  else \\",
          "771:   varname = defval",
          "773: #define SET_OPTIONAL_LONG_ARG(key, varname, defval) \\",
          "775:   varname = Z_LVAL_PP(item); \\",
          "776:  else \\",
          "777:   varname = defval",
          "",
          "[Removed Lines]",
          "768:  if (optional_args && zend_hash_find(Z_ARRVAL_P(optional_args), key, sizeof(key), (void**)&item) == SUCCESS) \\",
          "774:  if (optional_args && zend_hash_find(Z_ARRVAL_P(optional_args), key, sizeof(key), (void**)&item) == SUCCESS) \\",
          "",
          "[Added Lines]",
          "768:  if (optional_args && zend_hash_find(Z_ARRVAL_P(optional_args), key, sizeof(key), (void**)&item) == SUCCESS && Z_TYPE_PP(item) == IS_STRING) \\",
          "774:  if (optional_args && zend_hash_find(Z_ARRVAL_P(optional_args), key, sizeof(key), (void**)&item) == SUCCESS && Z_TYPE_PP(item) == IS_LONG) \\",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "814:  SET_OPTIONAL_LONG_ARG(\"private_key_type\", req->priv_key_type, OPENSSL_KEYTYPE_DEFAULT);",
          "817:   req->priv_key_encrypt = Z_BVAL_PP(item);",
          "818:  } else {",
          "819:   str = CONF_get_string(req->req_config, req->section_name, \"encrypt_rsa_key\");",
          "",
          "[Removed Lines]",
          "816:  if (optional_args && zend_hash_find(Z_ARRVAL_P(optional_args), \"encrypt_key\", sizeof(\"encrypt_key\"), (void**)&item) == SUCCESS) {",
          "",
          "[Added Lines]",
          "816:  if (optional_args && zend_hash_find(Z_ARRVAL_P(optional_args), \"encrypt_key\", sizeof(\"encrypt_key\"), (void**)&item) == SUCCESS && Z_TYPE_PP(item) == IS_BOOL) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1889:  }",
          "1893:   friendly_name = Z_STRVAL_PP(item);",
          "1895:     keypbe (default 3DES)",
          "",
          "[Removed Lines]",
          "1892:  if (args && zend_hash_find(Z_ARRVAL_P(args), \"friendly_name\", sizeof(\"friendly_name\"), (void**)&item) == SUCCESS)",
          "",
          "[Added Lines]",
          "1892:  if (args && zend_hash_find(Z_ARRVAL_P(args), \"friendly_name\", sizeof(\"friendly_name\"), (void**)&item) == SUCCESS && Z_TYPE_PP(item) == IS_STRING)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1967:  }",
          "1971:   friendly_name = Z_STRVAL_PP(item);",
          "1973:  if (args && zend_hash_find(Z_ARRVAL_P(args), \"extracerts\", sizeof(\"extracerts\"), (void**)&item) == SUCCESS)",
          "",
          "[Removed Lines]",
          "1970:  if (args && zend_hash_find(Z_ARRVAL_P(args), \"friendly_name\", sizeof(\"friendly_name\"), (void**)&item) == SUCCESS)",
          "",
          "[Added Lines]",
          "1970:  if (args && zend_hash_find(Z_ARRVAL_P(args), \"friendly_name\", sizeof(\"friendly_name\"), (void**)&item) == SUCCESS && Z_TYPE_PP(item) == IS_STRING)",
          "",
          "---------------"
        ],
        "ext/openssl/tests/026.phpt||ext/openssl/tests/026.phpt": [
          "File: ext/openssl/tests/026.phpt -> ext/openssl/tests/026.phpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: --TEST--",
          "2: Options type checks",
          "3: --SKIPIF--",
          "4: <?php if (!extension_loaded(\"openssl\")) print \"skip\"; ?>",
          "5: --FILE--",
          "6: <?php",
          "7: $x = openssl_pkey_new();",
          "8: $csr = openssl_csr_new([\"countryName\" => \"DE\"], $x, [\"x509_extensions\" => 0xDEADBEEF]);",
          "9: ?>",
          "10: DONE",
          "11: --EXPECT--",
          "12: DONE",
          "",
          "---------------"
        ],
        "ext/session/session.c||ext/session/session.c": [
          "File: ext/session/session.c -> ext/session/session.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "363:  if (zend_hash_find(&EG(symbol_table), \"_SERVER\", sizeof(\"_SERVER\"), (void **) &array) == SUCCESS &&",
          "364:   Z_TYPE_PP(array) == IS_ARRAY &&",
          "366:  ) {",
          "367:   remote_addr = Z_STRVAL_PP(token);",
          "368:  }",
          "",
          "[Removed Lines]",
          "365:   zend_hash_find(Z_ARRVAL_PP(array), \"REMOTE_ADDR\", sizeof(\"REMOTE_ADDR\"), (void **) &token) == SUCCESS",
          "",
          "[Added Lines]",
          "365:   zend_hash_find(Z_ARRVAL_PP(array), \"REMOTE_ADDR\", sizeof(\"REMOTE_ADDR\"), (void **) &token) == SUCCESS &&",
          "366:   Z_TYPE_PP(token) == IS_STRING",
          "",
          "---------------"
        ]
      }
    }
  ]
}