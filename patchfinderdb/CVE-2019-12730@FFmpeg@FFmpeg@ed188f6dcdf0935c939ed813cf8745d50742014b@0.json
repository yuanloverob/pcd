{
  "cve_id": "CVE-2019-12730",
  "cve_desc": "aa_read_header in libavformat/aadec.c in FFmpeg before 3.2.14 and 4.x before 4.1.4 does not check for sscanf failure and consequently allows use of uninitialized variables.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "ed188f6dcdf0935c939ed813cf8745d50742014b",
  "patch_info": {
    "commit_hash": "ed188f6dcdf0935c939ed813cf8745d50742014b",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/ed188f6dcdf0935c939ed813cf8745d50742014b",
    "files": [
      "libavformat/aadec.c"
    ],
    "message": "avformat/aadec: Check for scanf() failure\n\nFixes: use of uninitialized variables\nFixes: blank.aa\n\nFound-by: Chamal De Silva <chamal.desilva@gmail.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "before_after_code_files": [
      "libavformat/aadec.c||libavformat/aadec.c"
    ]
  },
  "patch_diff": {
    "libavformat/aadec.c||libavformat/aadec.c": [
      "File: libavformat/aadec.c -> libavformat/aadec.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "85:     AADemuxContext *c = s->priv_data;",
      "86:     AVIOContext *pb = s->pb;",
      "87:     AVStream *st;",
      "90:     avio_skip(pb, 4); // file size",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "88:     int ret;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "118:             header_seed = atoi(val);",
      "119:         } else if (!strcmp(key, \"HeaderKey\")) { // this looks like \"1234567890 1234567890 1234567890 1234567890\"",
      "120:             av_log(s, AV_LOG_DEBUG, \"HeaderKey is <%s>\\n\", val);",
      "122:                    &header_key_part[0], &header_key_part[1], &header_key_part[2], &header_key_part[3]);",
      "123:             for (idx = 0; idx < 4; idx++) {",
      "124:                 AV_WB32(&header_key[idx * 4], header_key_part[idx]); // convert each part to BE!",
      "125:             }",
      "",
      "[Removed Lines]",
      "121:             sscanf(val, \"%\"SCNu32\"%\"SCNu32\"%\"SCNu32\"%\"SCNu32,",
      "",
      "[Added Lines]",
      "123:             ret = sscanf(val, \"%\"SCNu32\"%\"SCNu32\"%\"SCNu32\"%\"SCNu32,",
      "125:             if (ret != 4)",
      "126:                 return AVERROR_INVALIDDATA;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "59ac4182583e4791a7f98b79099916fd96beedfd",
      "candidate_info": {
        "commit_hash": "59ac4182583e4791a7f98b79099916fd96beedfd",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/59ac4182583e4791a7f98b79099916fd96beedfd",
        "files": [
          "libavformat/aadec.c"
        ],
        "message": "avformat/aadec: Check for scanf() failure\n\nFixes: use of uninitialized variables\nFixes: blank.aa\n\nFound-by: Chamal De Silva <chamal.desilva@gmail.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit ed188f6dcdf0935c939ed813cf8745d50742014b)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavformat/aadec.c||libavformat/aadec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavformat/aadec.c||libavformat/aadec.c"
          ],
          "candidate": [
            "libavformat/aadec.c||libavformat/aadec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavformat/aadec.c||libavformat/aadec.c": [
          "File: libavformat/aadec.c -> libavformat/aadec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "79:     AADemuxContext *c = s->priv_data;",
          "80:     AVIOContext *pb = s->pb;",
          "81:     AVStream *st;",
          "84:     avio_skip(pb, 4); // file size",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82:     int ret;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "112:             header_seed = atoi(val);",
          "113:         } else if (!strcmp(key, \"HeaderKey\")) { // this looks like \"1234567890 1234567890 1234567890 1234567890\"",
          "114:             av_log(s, AV_LOG_DEBUG, \"HeaderKey is <%s>\\n\", val);",
          "116:                    &header_key_part[0], &header_key_part[1], &header_key_part[2], &header_key_part[3]);",
          "117:             for (idx = 0; idx < 4; idx++) {",
          "118:                 AV_WB32(&header_key[idx * 4], header_key_part[idx]); // convert each part to BE!",
          "119:             }",
          "",
          "[Removed Lines]",
          "115:             sscanf(val, \"%\"SCNu32\"%\"SCNu32\"%\"SCNu32\"%\"SCNu32,",
          "",
          "[Added Lines]",
          "117:             ret = sscanf(val, \"%\"SCNu32\"%\"SCNu32\"%\"SCNu32\"%\"SCNu32,",
          "119:             if (ret != 4)",
          "120:                 return AVERROR_INVALIDDATA;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b5b12e2189b4ed6527b43a4924c67e3b847d2a51",
      "candidate_info": {
        "commit_hash": "b5b12e2189b4ed6527b43a4924c67e3b847d2a51",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/b5b12e2189b4ed6527b43a4924c67e3b847d2a51",
        "files": [
          "libavformat/aadec.c"
        ],
        "message": "avformat/aadec: Check for scanf() failure\n\nFixes: use of uninitialized variables\nFixes: blank.aa\n\nFound-by: Chamal De Silva <chamal.desilva@gmail.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit ed188f6dcdf0935c939ed813cf8745d50742014b)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavformat/aadec.c||libavformat/aadec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavformat/aadec.c||libavformat/aadec.c"
          ],
          "candidate": [
            "libavformat/aadec.c||libavformat/aadec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavformat/aadec.c||libavformat/aadec.c": [
          "File: libavformat/aadec.c -> libavformat/aadec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "78:     AADemuxContext *c = s->priv_data;",
          "79:     AVIOContext *pb = s->pb;",
          "80:     AVStream *st;",
          "83:     avio_skip(pb, 4); // file size",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "81:     int ret;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "121:         }",
          "122:         if (!strcmp(key, \"HeaderKey\")) { // this looks like \"1234567890 1234567890 1234567890 1234567890\"",
          "123:             av_log(s, AV_LOG_DEBUG, \"HeaderKey is <%s>\\n\", val);",
          "125:             for (idx = 0; idx < 4; idx++) {",
          "126:                 AV_WB32(&header_key[idx * 4], header_key_part[idx]); // convert each part to BE!",
          "127:             }",
          "",
          "[Removed Lines]",
          "124:             sscanf(val, \"%u%u%u%u\", &header_key_part[0], &header_key_part[1], &header_key_part[2], &header_key_part[3]);",
          "",
          "[Added Lines]",
          "125:             ret = sscanf(val, \"%u%u%u%u\", &header_key_part[0], &header_key_part[1], &header_key_part[2], &header_key_part[3]);",
          "126:             if (ret != 4)",
          "127:                 return AVERROR_INVALIDDATA;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9b4004c054964a49c7ba44583f4cee22486dd8f2",
      "candidate_info": {
        "commit_hash": "9b4004c054964a49c7ba44583f4cee22486dd8f2",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/9b4004c054964a49c7ba44583f4cee22486dd8f2",
        "files": [
          "libavformat/aadec.c"
        ],
        "message": "avformat/aadec: Check for scanf() failure\n\nFixes: use of uninitialized variables\nFixes: blank.aa\n\nFound-by: Chamal De Silva <chamal.desilva@gmail.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit ed188f6dcdf0935c939ed813cf8745d50742014b)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavformat/aadec.c||libavformat/aadec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavformat/aadec.c||libavformat/aadec.c"
          ],
          "candidate": [
            "libavformat/aadec.c||libavformat/aadec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavformat/aadec.c||libavformat/aadec.c": [
          "File: libavformat/aadec.c -> libavformat/aadec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "85:     AADemuxContext *c = s->priv_data;",
          "86:     AVIOContext *pb = s->pb;",
          "87:     AVStream *st;",
          "90:     avio_skip(pb, 4); // file size",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "88:     int ret;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "118:             header_seed = atoi(val);",
          "119:         } else if (!strcmp(key, \"HeaderKey\")) { // this looks like \"1234567890 1234567890 1234567890 1234567890\"",
          "120:             av_log(s, AV_LOG_DEBUG, \"HeaderKey is <%s>\\n\", val);",
          "122:                    &header_key_part[0], &header_key_part[1], &header_key_part[2], &header_key_part[3]);",
          "123:             for (idx = 0; idx < 4; idx++) {",
          "124:                 AV_WB32(&header_key[idx * 4], header_key_part[idx]); // convert each part to BE!",
          "125:             }",
          "",
          "[Removed Lines]",
          "121:             sscanf(val, \"%\"SCNu32\"%\"SCNu32\"%\"SCNu32\"%\"SCNu32,",
          "",
          "[Added Lines]",
          "123:             ret = sscanf(val, \"%\"SCNu32\"%\"SCNu32\"%\"SCNu32\"%\"SCNu32,",
          "125:             if (ret != 4)",
          "126:                 return AVERROR_INVALIDDATA;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ef7bef2ba4c2f13bf89a28ff02c1c7352f028e7c",
      "candidate_info": {
        "commit_hash": "ef7bef2ba4c2f13bf89a28ff02c1c7352f028e7c",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/ef7bef2ba4c2f13bf89a28ff02c1c7352f028e7c",
        "files": [
          "libavformat/aadec.c"
        ],
        "message": "avformat/aadec: Check for scanf() failure\n\nFixes: use of uninitialized variables\nFixes: blank.aa\n\nFound-by: Chamal De Silva <chamal.desilva@gmail.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit ed188f6dcdf0935c939ed813cf8745d50742014b)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavformat/aadec.c||libavformat/aadec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavformat/aadec.c||libavformat/aadec.c"
          ],
          "candidate": [
            "libavformat/aadec.c||libavformat/aadec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavformat/aadec.c||libavformat/aadec.c": [
          "File: libavformat/aadec.c -> libavformat/aadec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "78:     AADemuxContext *c = s->priv_data;",
          "79:     AVIOContext *pb = s->pb;",
          "80:     AVStream *st;",
          "83:     avio_skip(pb, 4); // file size",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "81:     int ret;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "121:         }",
          "122:         if (!strcmp(key, \"HeaderKey\")) { // this looks like \"1234567890 1234567890 1234567890 1234567890\"",
          "123:             av_log(s, AV_LOG_DEBUG, \"HeaderKey is <%s>\\n\", val);",
          "125:             for (idx = 0; idx < 4; idx++) {",
          "126:                 AV_WB32(&header_key[idx * 4], header_key_part[idx]); // convert each part to BE!",
          "127:             }",
          "",
          "[Removed Lines]",
          "124:             sscanf(val, \"%u%u%u%u\", &header_key_part[0], &header_key_part[1], &header_key_part[2], &header_key_part[3]);",
          "",
          "[Added Lines]",
          "125:             ret = sscanf(val, \"%u%u%u%u\", &header_key_part[0], &header_key_part[1], &header_key_part[2], &header_key_part[3]);",
          "126:             if (ret != 4)",
          "127:                 return AVERROR_INVALIDDATA;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3935e8d967d6066a6f6667acf2a48f1337699039",
      "candidate_info": {
        "commit_hash": "3935e8d967d6066a6f6667acf2a48f1337699039",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/3935e8d967d6066a6f6667acf2a48f1337699039",
        "files": [
          "libavformat/aadec.c"
        ],
        "message": "avformat/aadec: Check for scanf() failure\n\nFixes: use of uninitialized variables\nFixes: blank.aa\n\nFound-by: Chamal De Silva <chamal.desilva@gmail.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit ed188f6dcdf0935c939ed813cf8745d50742014b)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavformat/aadec.c||libavformat/aadec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavformat/aadec.c||libavformat/aadec.c"
          ],
          "candidate": [
            "libavformat/aadec.c||libavformat/aadec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavformat/aadec.c||libavformat/aadec.c": [
          "File: libavformat/aadec.c -> libavformat/aadec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "79:     AADemuxContext *c = s->priv_data;",
          "80:     AVIOContext *pb = s->pb;",
          "81:     AVStream *st;",
          "84:     avio_skip(pb, 4); // file size",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82:     int ret;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "112:             header_seed = atoi(val);",
          "113:         } else if (!strcmp(key, \"HeaderKey\")) { // this looks like \"1234567890 1234567890 1234567890 1234567890\"",
          "114:             av_log(s, AV_LOG_DEBUG, \"HeaderKey is <%s>\\n\", val);",
          "116:                    &header_key_part[0], &header_key_part[1], &header_key_part[2], &header_key_part[3]);",
          "117:             for (idx = 0; idx < 4; idx++) {",
          "118:                 AV_WB32(&header_key[idx * 4], header_key_part[idx]); // convert each part to BE!",
          "119:             }",
          "",
          "[Removed Lines]",
          "115:             sscanf(val, \"%\"SCNu32\"%\"SCNu32\"%\"SCNu32\"%\"SCNu32,",
          "",
          "[Added Lines]",
          "117:             ret = sscanf(val, \"%\"SCNu32\"%\"SCNu32\"%\"SCNu32\"%\"SCNu32,",
          "119:             if (ret != 4)",
          "120:                 return AVERROR_INVALIDDATA;",
          "",
          "---------------"
        ]
      }
    }
  ]
}