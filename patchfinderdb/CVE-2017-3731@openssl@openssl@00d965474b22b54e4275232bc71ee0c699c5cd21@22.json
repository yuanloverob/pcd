{
  "cve_id": "CVE-2017-3731",
  "cve_desc": "If an SSL/TLS server or client is running on a 32-bit host, and a specific cipher is being used, then a truncated packet can cause that server or client to perform an out-of-bounds read, usually resulting in a crash. For OpenSSL 1.1.0, the crash can be triggered when using CHACHA20/POLY1305; users should upgrade to 1.1.0d. For Openssl 1.0.2, the crash can be triggered when using RC4-MD5; users who have not disabled that algorithm should update to 1.0.2k.",
  "repo": "openssl/openssl",
  "patch_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
  "patch_info": {
    "commit_hash": "00d965474b22b54e4275232bc71ee0c699c5cd21",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/00d965474b22b54e4275232bc71ee0c699c5cd21",
    "files": [
      "crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c"
    ],
    "message": "crypto/evp: harden AEAD ciphers.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory. Since hash\noperation is read-only it is not considered to be exploitable\nbeyond a DoS condition. Other ciphers were hardened.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>",
    "before_after_code_files": [
      "crypto/evp/e_aes.c||crypto/evp/e_aes.c",
      "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c"
    ]
  },
  "patch_diff": {
    "crypto/evp/e_aes.c||crypto/evp/e_aes.c": [
      "File: crypto/evp/e_aes.c -> crypto/evp/e_aes.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1388:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1389:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1391:             len -= EVP_GCM_TLS_EXPLICIT_IV_LEN;",
      "1394:                 len -= EVP_GCM_TLS_TAG_LEN;",
      "1395:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1396:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1397:         }",
      "",
      "[Removed Lines]",
      "1393:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1391:             if (len < EVP_GCM_TLS_EXPLICIT_IV_LEN)",
      "1392:                 return 0;",
      "1395:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1396:                 if (len < EVP_GCM_TLS_TAG_LEN)",
      "1397:                     return 0;",
      "1399:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1946:                 EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] << 8",
      "1947:                 | EVP_CIPHER_CTX_buf_noconst(c)[arg - 1];",
      "1949:             len -= EVP_CCM_TLS_EXPLICIT_IV_LEN;",
      "1952:                 len -= cctx->M;",
      "1953:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 2] = len >> 8;",
      "1954:             EVP_CIPHER_CTX_buf_noconst(c)[arg - 1] = len & 0xff;",
      "1955:         }",
      "",
      "[Removed Lines]",
      "1951:             if (!EVP_CIPHER_CTX_encrypting(c))",
      "",
      "[Added Lines]",
      "1954:             if (len < EVP_CCM_TLS_EXPLICIT_IV_LEN)",
      "1955:                 return 0;",
      "1958:             if (!EVP_CIPHER_CTX_encrypting(c)) {",
      "1959:                 if (len < cctx->M)",
      "1960:                     return 0;",
      "1962:             }",
      "",
      "---------------"
    ],
    "crypto/evp/e_chacha20_poly1305.c||crypto/evp/e_chacha20_poly1305.c": [
      "File: crypto/evp/e_chacha20_poly1305.c -> crypto/evp/e_chacha20_poly1305.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "398:             len = aad[EVP_AEAD_TLS1_AAD_LEN - 2] << 8 |",
      "399:                   aad[EVP_AEAD_TLS1_AAD_LEN - 1];",
      "400:             if (!ctx->encrypt) {",
      "402:                 memcpy(temp, aad, EVP_AEAD_TLS1_AAD_LEN - 2);",
      "403:                 aad = temp;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "401:                 if (len < POLY1305_BLOCK_SIZE)",
      "402:                     return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ddb618d93bf6531c28618f1aabfdc064168fdbfc",
      "candidate_info": {
        "commit_hash": "ddb618d93bf6531c28618f1aabfdc064168fdbfc",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/ddb618d93bf6531c28618f1aabfdc064168fdbfc",
        "files": [
          "crypto/threads_pthread.c"
        ],
        "message": "Removed tab spaces. Reviewed-by: Rich Salz <rsalz@openssl.org> Reviewed-by: Richard Levitte <levitte@openssl.org> (Merged from https://github.com/openssl/openssl/pull/1981) (cherry picked from commit 5d5eed4456ebc035893eedbcc4e32a9d065cecb3)",
        "before_after_code_files": [
          "crypto/threads_pthread.c||crypto/threads_pthread.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/threads_pthread.c||crypto/threads_pthread.c": [
          "File: crypto/threads_pthread.c -> crypto/threads_pthread.c"
        ]
      }
    },
    {
      "candidate_hash": "5f028d68016178bdc2b35962df950db4f2b6280b",
      "candidate_info": {
        "commit_hash": "5f028d68016178bdc2b35962df950db4f2b6280b",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/5f028d68016178bdc2b35962df950db4f2b6280b",
        "files": [
          "crypto/asn1/a_int.c",
          "crypto/asn1/asn1_par.c"
        ],
        "message": "Fix 0 -> NULL, indentation\n\nReviewed-by: Andy Polyakov <appro@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/3066)\n(cherry picked from commit a6ac1ed686346d2164c16446624c973e51d3ae92)",
        "before_after_code_files": [
          "crypto/asn1/a_int.c||crypto/asn1/a_int.c",
          "crypto/asn1/asn1_par.c||crypto/asn1/asn1_par.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/asn1/a_int.c||crypto/asn1/a_int.c": [
          "File: crypto/asn1/a_int.c -> crypto/asn1/a_int.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "522:     }",
          "524:     ret = BN_bin2bn(ai->data, ai->length, bn);",
          "526:         ASN1err(ASN1_F_ASN1_STRING_TO_BN, ASN1_R_BN_LIB);",
          "527:         return NULL;",
          "528:     }",
          "",
          "[Removed Lines]",
          "525:     if (ret == 0) {",
          "",
          "[Added Lines]",
          "525:     if (ret == NULL) {",
          "",
          "---------------"
        ],
        "crypto/asn1/asn1_par.c||crypto/asn1/asn1_par.c": [
          "File: crypto/asn1/asn1_par.c -> crypto/asn1/asn1_par.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "79:     int dump_indent, dump_cont = 0;",
          "81:     if (depth > ASN1_PARSE_MAXDEPTH) {",
          "84:     }",
          "",
          "[Removed Lines]",
          "82:             BIO_puts(bp, \"BAD RECURSION DEPTH\\n\");",
          "83:             return 0;",
          "",
          "[Added Lines]",
          "82:         BIO_puts(bp, \"BAD RECURSION DEPTH\\n\");",
          "83:         return 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2c4ee10c0aa231a30977aad47bae1d0dbe6bbef4",
      "candidate_info": {
        "commit_hash": "2c4ee10c0aa231a30977aad47bae1d0dbe6bbef4",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/2c4ee10c0aa231a30977aad47bae1d0dbe6bbef4",
        "files": [
          "crypto/ui/ui_lib.c"
        ],
        "message": "Remove extra bang\n\nA bang (!) slipped through in the recent UI cleanup\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/2051)\n(cherry picked from commit 949320c567811e714216ea987fe24eea1b56da5e)",
        "before_after_code_files": [
          "crypto/ui/ui_lib.c||crypto/ui/ui_lib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ui/ui_lib.c||crypto/ui/ui_lib.c": [
          "File: crypto/ui/ui_lib.c -> crypto/ui/ui_lib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "483:     }",
          "484:  err:",
          "485:     if (ui->meth->ui_close_session != NULL",
          "487:         if (state == NULL)",
          "488:             state = \"closing session\";",
          "489:         ok = -1;",
          "",
          "[Removed Lines]",
          "486:         && !ui->meth->ui_close_session(ui) <= 0) {",
          "",
          "[Added Lines]",
          "486:         && ui->meth->ui_close_session(ui) <= 0) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "609673d93b8d9d53b687d84afe40b7f30f43adf3",
      "candidate_info": {
        "commit_hash": "609673d93b8d9d53b687d84afe40b7f30f43adf3",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/609673d93b8d9d53b687d84afe40b7f30f43adf3",
        "files": [
          "crypto/ct/ct_policy.c"
        ],
        "message": "Default CT_POLICY_EVAL_CTX.epoch_time_in_ms to time()\n\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\nReviewed-by: Rich Salz <rsalz@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/1554)\n(cherry picked from commit e25233d99c30885bdf97bfb6df657e13ca2bf1da)",
        "before_after_code_files": [
          "crypto/ct/ct_policy.c||crypto/ct/ct_policy.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/ct/ct_policy.c||crypto/ct/ct_policy.c": [
          "File: crypto/ct/ct_policy.c -> crypto/ct/ct_policy.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: #include <openssl/ct.h>",
          "15: #include <openssl/err.h>",
          "17: #include \"ct_locl.h\"",
          "19: CT_POLICY_EVAL_CTX *CT_POLICY_EVAL_CTX_new(void)",
          "20: {",
          "21:     CT_POLICY_EVAL_CTX *ctx = OPENSSL_zalloc(sizeof(CT_POLICY_EVAL_CTX));",
          "23:     if (ctx == NULL) {",
          "24:         CTerr(CT_F_CT_POLICY_EVAL_CTX_NEW, ERR_R_MALLOC_FAILURE);",
          "25:         return NULL;",
          "26:     }",
          "28:     return ctx;",
          "29: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16: #include <time.h>",
          "23:     time_t epoch_time_in_s;",
          "31:     time(&epoch_time_in_s);",
          "32:     if (epoch_time_in_s != -1)",
          "33:         ctx->epoch_time_in_ms = epoch_time_in_s * 1000;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fadfc8ecfd277af189600648fcf1d28f33fd76fe",
      "candidate_info": {
        "commit_hash": "fadfc8ecfd277af189600648fcf1d28f33fd76fe",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/fadfc8ecfd277af189600648fcf1d28f33fd76fe",
        "files": [
          "crypto/asn1/a_int.c"
        ],
        "message": "Cast to an unsigned type before negating\n\nllvm's ubsan reported:\nruntime error: negation of -9223372036854775808 cannot be represented in\ntype 'int64_t' (aka 'long'); cast to an unsigned type to negate this\nvalue to itself\n\nFound using libfuzzer\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\n\nGH: #1908\n(cherry picked from commit e80f3b6af295133107ac709329eee16ccf9af61c)",
        "before_after_code_files": [
          "crypto/asn1/a_int.c||crypto/asn1/a_int.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/EktapopaT/openssl/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/asn1/a_int.c||crypto/asn1/a_int.c": [
          "File: crypto/asn1/a_int.c -> crypto/asn1/a_int.c"
        ]
      }
    }
  ]
}