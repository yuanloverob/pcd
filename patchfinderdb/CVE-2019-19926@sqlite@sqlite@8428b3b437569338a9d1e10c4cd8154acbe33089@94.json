{
  "cve_id": "CVE-2019-19926",
  "cve_desc": "multiSelect in select.c in SQLite 3.30.1 mishandles certain errors during parsing, as demonstrated by errors from sqlite3WindowRewrite() calls. NOTE: this vulnerability exists because of an incomplete fix for CVE-2019-19880.",
  "repo": "sqlite/sqlite",
  "patch_hash": "8428b3b437569338a9d1e10c4cd8154acbe33089",
  "patch_info": {
    "commit_hash": "8428b3b437569338a9d1e10c4cd8154acbe33089",
    "repo": "sqlite/sqlite",
    "commit_url": "https://github.com/sqlite/sqlite/commit/8428b3b437569338a9d1e10c4cd8154acbe33089",
    "files": [
      "manifest",
      "manifest.uuid",
      "src/select.c"
    ],
    "message": "Continuation of [e2bddcd4c55ba3cb]: Add another spot where it is necessary to abort early due to prior errors in sqlite3WindowRewrite().\n\nFossilOrigin-Name: cba2a2a44cdf138a629109bb0ad088ed4ef67fc66bed3e0373554681a39615d2",
    "before_after_code_files": [
      "manifest.uuid||manifest.uuid",
      "src/select.c||src/select.c"
    ]
  },
  "patch_diff": {
    "manifest.uuid||manifest.uuid": [
      "File: manifest.uuid -> manifest.uuid",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 3d4c0bf8904135fa68c75801bfa738715cacc3b19dc8ad6ef550b11798d4b121",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/select.c||src/select.c": [
      "File: src/select.c -> src/select.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2809:     }",
      "2810:   #endif",
      "2811:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2812:   if( pParse->nErr ) goto multi_select_end;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "57e141bc28db0ac6fee77e24fadb437758060830",
      "candidate_info": {
        "commit_hash": "57e141bc28db0ac6fee77e24fadb437758060830",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/57e141bc28db0ac6fee77e24fadb437758060830",
        "files": [
          "manifest",
          "manifest.uuid",
          "tool/dbtotxt.c"
        ],
        "message": "Fix the filename normalization in the dbtotxt utility program.\n\nFossilOrigin-Name: 29a00a05dd40ff59be340969e1aca4fee41e092f2faa1cea85a3448265a83c2c",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "tool/dbtotxt.c||tool/dbtotxt.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: b0a49d5e6df116bb5eacb60a0bb0f482760aec38bd417d4250d9e57d43bdbb13",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tool/dbtotxt.c||tool/dbtotxt.c": [
          "File: tool/dbtotxt.c -> tool/dbtotxt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "112:   }",
          "113:   zBaseName = zInputFile;",
          "114:   for(i=0; zInputFile[i]; i++){",
          "116:   }",
          "117:   printf(\"| size %d pagesize %d filename %s\\n\",(int)szFile,pgsz,zBaseName);",
          "118:   for(i=0; i<szFile; i+=16){",
          "",
          "[Removed Lines]",
          "115:     if( zInputFile[i]=='/' && zInputFile[i+1]!=0 ) zBaseName = zInputFile+1;",
          "",
          "[Added Lines]",
          "115:     if( zInputFile[i]=='/' && zInputFile[i+1]!=0 ) zBaseName = zInputFile+i+1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e04c1ec52aa2d6bbd1f6d9b815219a75abe965b1",
      "candidate_info": {
        "commit_hash": "e04c1ec52aa2d6bbd1f6d9b815219a75abe965b1",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/e04c1ec52aa2d6bbd1f6d9b815219a75abe965b1",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/fuzzdata8.db"
        ],
        "message": "New test cases added to test/fuzzdata8.db.\n\nFossilOrigin-Name: 39be3c61bd809cc89bdfdba90afc391ac9c2f81dfd8bb68a9b085b0ca8cd1fba",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: bbfb2908ecd113c88e69a0984cbe2550463cdd3a67648b0e4e3578e80630136e",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "06baba54b4d097113e8a425010d31f044df57f4b",
      "candidate_info": {
        "commit_hash": "06baba54b4d097113e8a425010d31f044df57f4b",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/06baba54b4d097113e8a425010d31f044df57f4b",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/insert.c",
          "src/vdbe.h",
          "src/vdbeaux.c",
          "test/trigger1.test"
        ],
        "message": "Correction to check-in [bec5b6d4d083556d] so that it detects *all* triggers that might perturb the insertion cursor. Ticket [50c09fc2cf0d91ce].\n\nFossilOrigin-Name: 521f1d36282549488a47a434484a24924ee970d29f05a8ae499b7d536bcd692b",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/insert.c||src/insert.c",
          "src/vdbe.h||src/vdbe.h",
          "src/vdbeaux.c||src/vdbeaux.c",
          "test/trigger1.test||test/trigger1.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 1a6e009372cf9571e540812c8607e95a86740112a1091f03e3f632339eccb629",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/insert.c||src/insert.c": [
          "File: src/insert.c -> src/insert.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1064:       sqlite3CompleteInsertion(pParse, pTab, iDataCur, iIdxCur,",
          "1065:           regIns, aRegIdx, 0, appendFlag, bUseSeek",
          "1066:       );",
          "",
          "[Removed Lines]",
          "1061:       bUseSeek = (isReplace==0 || (pTrigger==0 &&",
          "1062:           ((db->flags & SQLITE_ForeignKeys)==0 || sqlite3FkReferences(pTab)==0)",
          "1063:       ));",
          "",
          "[Added Lines]",
          "1061:       bUseSeek = (isReplace==0 || !sqlite3VdbeHasSubProgram(v));",
          "",
          "---------------"
        ],
        "src/vdbe.h||src/vdbe.h": [
          "File: src/vdbe.h -> src/vdbe.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "278: typedef int (*RecordCompare)(int,const void*,UnpackedRecord*);",
          "279: RecordCompare sqlite3VdbeFindCompare(UnpackedRecord*);",
          "282: void sqlite3VdbeLinkSubProgram(Vdbe *, SubProgram *);",
          "285: int sqlite3NotPureFunc(sqlite3_context*);",
          "",
          "[Removed Lines]",
          "281: #ifndef SQLITE_OMIT_TRIGGER",
          "283: #endif",
          "",
          "[Added Lines]",
          "282: int sqlite3VdbeHasSubProgram(Vdbe*);",
          "",
          "---------------"
        ],
        "src/vdbeaux.c||src/vdbeaux.c": [
          "File: src/vdbeaux.c -> src/vdbeaux.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1098:   pVdbe->pProgram = p;",
          "1099: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1104: int sqlite3VdbeHasSubProgram(Vdbe *pVdbe){",
          "1105:   return pVdbe->pProgram!=0;",
          "1106: }",
          "",
          "---------------"
        ],
        "test/trigger1.test||test/trigger1.test": [
          "File: test/trigger1.test -> test/trigger1.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "782:   DROP TRIGGER r20_3;",
          "783: } {}",
          "785: finish_test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "785: # 2019-10-24 ticket 50c09fc2cf0d91ce",
          "786: #",
          "787: db close",
          "788: sqlite3 db :memory:",
          "789: do_execsql_test trigger1-21.1 {",
          "790:   PRAGMA recursive_triggers = true;",
          "791:   CREATE TABLE t0(a, b, c UNIQUE);",
          "792:   CREATE UNIQUE INDEX i0 ON t0(b) WHERE a;",
          "793:   CREATE TRIGGER tr0 AFTER DELETE ON t0 BEGIN",
          "794:     DELETE FROM t0;",
          "795:   END;",
          "796:   INSERT INTO t0(a,b,c) VALUES(0,0,9),(1,1,1);",
          "797:   REPLACE INTO t0(a,b,c) VALUES(2,0,9);",
          "798:   SELECT * FROM t0;",
          "799: } {2 0 9}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b336d1ab83e9a7803e3247c6d87ec6ffdc568224",
      "candidate_info": {
        "commit_hash": "b336d1ab83e9a7803e3247c6d87ec6ffdc568224",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/b336d1ab83e9a7803e3247c6d87ec6ffdc568224",
        "files": [
          "manifest",
          "manifest.uuid",
          "src/btree.c"
        ],
        "message": "Add a call to sqlite3FaultSim(410) inside of btreeRestoreCursorPosition() to simplify testing of error scenarios.\n\nFossilOrigin-Name: bb643bac535ac7d5fb4c13edb8782cd13540bbc7d2b2deb689f4ca8d1914f422",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "src/btree.c||src/btree.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: fb125bd338ab32b33d02fe61b76497b6d4a2a160056d6e759e15c94903e61a41",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/btree.c||src/btree.c": [
          "File: src/btree.c -> src/btree.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "840:     return pCur->skipNext;",
          "841:   }",
          "842:   pCur->eState = CURSOR_INVALID;",
          "844:   if( rc==SQLITE_OK ){",
          "845:     sqlite3_free(pCur->pKey);",
          "846:     pCur->pKey = 0;",
          "",
          "[Removed Lines]",
          "843:   rc = btreeMoveto(pCur, pCur->pKey, pCur->nKey, 0, &skipNext);",
          "",
          "[Added Lines]",
          "843:   if( sqlite3FaultSim(410) ){",
          "844:     rc = SQLITE_IOERR;",
          "845:   }else{",
          "846:     rc = btreeMoveto(pCur, pCur->pKey, pCur->nKey, 0, &skipNext);",
          "847:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "baa3458920680941e93f9e9a382e9539fba44642",
      "candidate_info": {
        "commit_hash": "baa3458920680941e93f9e9a382e9539fba44642",
        "repo": "sqlite/sqlite",
        "commit_url": "https://github.com/sqlite/sqlite/commit/baa3458920680941e93f9e9a382e9539fba44642",
        "files": [
          "manifest",
          "manifest.uuid",
          "test/journal3.test"
        ],
        "message": "Modify journal3.test so that it can handle Tcl command \"file attr <file> -perm\" returning octal values in either \"00755\" or \"0o755\" format.\n\nFossilOrigin-Name: b0b655625cf491c832a259d29a67660b8d5943c201617900a83d0660b2673377",
        "before_after_code_files": [
          "manifest.uuid||manifest.uuid",
          "test/journal3.test||test/journal3.test"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "manifest.uuid||manifest.uuid"
          ],
          "candidate": [
            "manifest.uuid||manifest.uuid"
          ]
        }
      },
      "candidate_diff": {
        "manifest.uuid||manifest.uuid": [
          "File: manifest.uuid -> manifest.uuid",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 75e31b1d56781fc4d28aea6c7f1393a18fd34870a5beb92df81c088d61351b4a",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/journal3.test||test/journal3.test": [
          "File: test/journal3.test -> test/journal3.test",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:   } {",
          "39:     db close",
          "40:     #set effective [format %.5o [expr $permissions & ~$umask]]",
          "41:     if {$tcl_version>=8.7} {",
          "42:        regsub {^00} $permissions {0o} permissions",
          "43:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41:     set res \"/[regsub {^00} $permissions {0.}]/\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46:       catch { forcedelete test.db-journal }",
          "47:       file attributes test.db -permissions $permissions",
          "48:       file attributes test.db -permissions",
          "50:     do_test journal3-1.2.$tn.2 { file exists test.db-journal } {0}",
          "51:     do_test journal3-1.2.$tn.3 {",
          "52:       sqlite3 db test.db",
          "",
          "[Removed Lines]",
          "49:     } $permissions",
          "",
          "[Added Lines]",
          "50:     } $res",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "58:     } {1}",
          "59:     do_test journal3-1.2.$tn.4 {",
          "60:       file attr test.db-journal -perm",
          "62:     do_execsql_test journal3-1.2.$tn.5 { ROLLBACK } {}",
          "63:   }",
          "",
          "[Removed Lines]",
          "61:     } $effective",
          "",
          "[Added Lines]",
          "62:     } $res",
          "",
          "---------------"
        ]
      }
    }
  ]
}