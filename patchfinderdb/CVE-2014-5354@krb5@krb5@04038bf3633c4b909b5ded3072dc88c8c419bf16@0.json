{
  "cve_id": "CVE-2014-5354",
  "cve_desc": "plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c in MIT Kerberos 5 (aka krb5) 1.12.x and 1.13.x before 1.13.1, when the KDC uses LDAP, allows remote authenticated users to cause a denial of service (NULL pointer dereference and daemon crash) by creating a database entry for a keyless principal, as demonstrated by a kadmin \"add_principal -nokey\" or \"purgekeys -all\" command.",
  "repo": "krb5/krb5",
  "patch_hash": "04038bf3633c4b909b5ded3072dc88c8c419bf16",
  "patch_info": {
    "commit_hash": "04038bf3633c4b909b5ded3072dc88c8c419bf16",
    "repo": "krb5/krb5",
    "commit_url": "https://github.com/krb5/krb5/commit/04038bf3633c4b909b5ded3072dc88c8c419bf16",
    "files": [
      "src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c"
    ],
    "message": "Support keyless principals in LDAP [CVE-2014-5354]\n\nOperations like \"kadmin -q 'addprinc -nokey foo'\" or\n\"kadmin -q 'purgekeys -all foo'\" result in principal entries with\nno keys present, so krb5_encode_krbsecretkey() would just return\nNULL, which then got unconditionally dereferenced in\nkrb5_add_ber_mem_ldap_mod().\n\nApply some fixes to krb5_encode_krbsecretkey() to handle zero-key\nprincipals better, correct the test for an allocation failure, and\nslightly restructure the cleanup handler to be shorter and more\nappropriate for the usage.  Once it no longer short-circuits when\nn_key_data is zero, it will produce an array of length two with both\nentries NULL, which is treated as an empty list by the LDAP library,\nthe correct behavior for a keyless principal.\n\nHowever, attributes with empty values are only handled by the LDAP\nlibrary for Modify operations, not Add operations (which only get\na sequence of Attribute, with no operation field).  Therefore, only\nadd an empty krbprincipalkey to the modlist when we will be performing a\nModify, and not when we will be performing an Add, which is conditional\non the (misspelled) create_standalone_prinicipal boolean.\n\nCVE-2014-5354:\n\nIn MIT krb5, when kadmind is configured to use LDAP for the KDC\ndatabase, an authenticated remote attacker can cause a NULL\ndereference by inserting into the database a principal entry which\ncontains no long-term keys.\n\nIn order for the LDAP KDC backend to translate a principal entry\nfrom the database abstraction layer into the form expected by the\nLDAP schema, the principal's keys are encoded into a\nNULL-terminated array of length-value entries to be stored in the\nLDAP database.  However, the subroutine which produced this array\ndid not correctly handle the case where no keys were present,\nreturning NULL instead of an empty array, and the array was\nunconditionally dereferenced while adding to the list of LDAP\noperations to perform.\n\nVersions of MIT krb5 prior to 1.12 did not expose a way for\nprincipal entries to have no long-term key material, and\ntherefore are not vulnerable.\n\n    CVSSv2 Vector: AV:N/AC:M/Au:S/C:N/I:N/A:P/E:H/RL:OF/RC:C\n\nticket: 8041 (new)\ntags: pullup\ntarget_version: 1.13.1\nsubject: kadmind with ldap backend crashes when putting keyless entries",
    "before_after_code_files": [
      "src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c"
    ]
  },
  "patch_diff": {
    "src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c": [
      "File: src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c -> src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "406:     int num_versions = 1;",
      "407:     int i, j, last;",
      "408:     krb5_error_code err = 0;",
      "412:         return NULL;",
      "415:     key_data = k5calloc(n_key_data, sizeof(*key_data), &err);",
      "417:         goto cleanup;",
      "418:     memcpy(key_data, key_data_in, n_key_data * sizeof(*key_data));",
      "",
      "[Removed Lines]",
      "409:     krb5_key_data *key_data;",
      "411:     if (n_key_data <= 0)",
      "416:     if (key_data_in == NULL)",
      "",
      "[Added Lines]",
      "409:     krb5_key_data *key_data = NULL;",
      "411:     if (n_key_data < 0)",
      "416:     if (key_data == NULL)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "467:     free(key_data);",
      "468:     if (err != 0) {",
      "469:         if (ret != NULL) {",
      "473:             free (ret);",
      "474:             ret = NULL;",
      "475:         }",
      "",
      "[Removed Lines]",
      "470:             for (i = 0; i <= num_versions; i++)",
      "471:                 if (ret[i] != NULL)",
      "472:                     free (ret[i]);",
      "",
      "[Added Lines]",
      "470:             for (i = 0; ret[i] != NULL; i++)",
      "471:                 free (ret[i]);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1036:         bersecretkey = krb5_encode_krbsecretkey (entry->key_data,",
      "1037:                                                  entry->n_key_data, mkvno);",
      "1041:             goto cleanup;",
      "1043:         if (!(entry->mask & KADM5_PRINCIPAL)) {",
      "1044:             memset(strval, 0, sizeof(strval));",
      "",
      "[Removed Lines]",
      "1039:         if ((st=krb5_add_ber_mem_ldap_mod(&mods, \"krbprincipalkey\",",
      "1040:                                           LDAP_MOD_REPLACE | LDAP_MOD_BVALUES, bersecretkey)) != 0)",
      "",
      "[Added Lines]",
      "1038:         if (bersecretkey == NULL) {",
      "1039:             st = ENOMEM;",
      "1041:         }",
      "1044:         if (bersecretkey[0] != NULL || !create_standalone_prinicipal) {",
      "1045:             st = krb5_add_ber_mem_ldap_mod(&mods, \"krbprincipalkey\",",
      "1046:                                            LDAP_MOD_REPLACE | LDAP_MOD_BVALUES,",
      "1047:                                            bersecretkey);",
      "1048:             if (st != 0)",
      "1049:                 goto cleanup;",
      "1050:         }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "46a2d16a5006d61e98a971a8148d2a9574a35bc0",
      "candidate_info": {
        "commit_hash": "46a2d16a5006d61e98a971a8148d2a9574a35bc0",
        "repo": "krb5/krb5",
        "commit_url": "https://github.com/krb5/krb5/commit/46a2d16a5006d61e98a971a8148d2a9574a35bc0",
        "files": [
          "src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c"
        ],
        "message": "Support keyless principals in LDAP [CVE-2014-5354]\n\nOperations like \"kadmin -q 'addprinc -nokey foo'\" or\n\"kadmin -q 'purgekeys -all foo'\" result in principal entries with\nno keys present, so krb5_encode_krbsecretkey() would just return\nNULL, which then got unconditionally dereferenced in\nkrb5_add_ber_mem_ldap_mod().\n\nApply some fixes to krb5_encode_krbsecretkey() to handle zero-key\nprincipals better, correct the test for an allocation failure, and\nslightly restructure the cleanup handler to be shorter and more\nappropriate for the usage.  Once it no longer short-circuits when\nn_key_data is zero, it will produce an array of length two with both\nentries NULL, which is treated as an empty list by the LDAP library,\nthe correct behavior for a keyless principal.\n\nHowever, attributes with empty values are only handled by the LDAP\nlibrary for Modify operations, not Add operations (which only get\na sequence of Attribute, with no operation field).  Therefore, only\nadd an empty krbprincipalkey to the modlist when we will be performing a\nModify, and not when we will be performing an Add, which is conditional\non the (misspelled) create_standalone_prinicipal boolean.\n\nCVE-2014-5354:\n\nIn MIT krb5, when kadmind is configured to use LDAP for the KDC\ndatabase, an authenticated remote attacker can cause a NULL\ndereference by inserting into the database a principal entry which\ncontains no long-term keys.\n\nIn order for the LDAP KDC backend to translate a principal entry\nfrom the database abstraction layer into the form expected by the\nLDAP schema, the principal's keys are encoded into a\nNULL-terminated array of length-value entries to be stored in the\nLDAP database.  However, the subroutine which produced this array\ndid not correctly handle the case where no keys were present,\nreturning NULL instead of an empty array, and the array was\nunconditionally dereferenced while adding to the list of LDAP\noperations to perform.\n\nVersions of MIT krb5 prior to 1.12 did not expose a way for\nprincipal entries to have no long-term key material, and\ntherefore are not vulnerable.\n\n    CVSSv2 Vector: AV:N/AC:M/Au:S/C:N/I:N/A:P/E:H/RL:OF/RC:C\n\n(cherry picked from commit 04038bf3633c4b909b5ded3072dc88c8c419bf16)\n\nticket: 8138 (new)\nversion_fixed: 1.12.3\nsubject: kadmind with ldap backend crashes when putting keyless entries [CVE-2014-5354]\nstatus: resolved",
        "before_after_code_files": [
          "src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c"
          ],
          "candidate": [
            "src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c"
          ]
        }
      },
      "candidate_diff": {
        "src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c": [
          "File: src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c -> src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "413:     int num_versions = 1;",
          "414:     int i, j, last;",
          "415:     krb5_error_code err = 0;",
          "419:         return NULL;",
          "422:     key_data = k5calloc(n_key_data, sizeof(*key_data), &err);",
          "424:         goto cleanup;",
          "425:     memcpy(key_data, key_data_in, n_key_data * sizeof(*key_data));",
          "",
          "[Removed Lines]",
          "416:     krb5_key_data *key_data;",
          "418:     if (n_key_data <= 0)",
          "423:     if (key_data_in == NULL)",
          "",
          "[Added Lines]",
          "416:     krb5_key_data *key_data = NULL;",
          "418:     if (n_key_data < 0)",
          "423:     if (key_data == NULL)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "474:     free(key_data);",
          "475:     if (err != 0) {",
          "476:         if (ret != NULL) {",
          "480:             free (ret);",
          "481:             ret = NULL;",
          "482:         }",
          "",
          "[Removed Lines]",
          "477:             for (i = 0; i <= num_versions; i++)",
          "478:                 if (ret[i] != NULL)",
          "479:                     free (ret[i]);",
          "",
          "[Added Lines]",
          "477:             for (i = 0; ret[i] != NULL; i++)",
          "478:                 free (ret[i]);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1046:         bersecretkey = krb5_encode_krbsecretkey (entry->key_data,",
          "1047:                                                  entry->n_key_data, mkvno);",
          "1051:             goto cleanup;",
          "1053:         if (!(entry->mask & KADM5_PRINCIPAL)) {",
          "1054:             memset(strval, 0, sizeof(strval));",
          "",
          "[Removed Lines]",
          "1049:         if ((st=krb5_add_ber_mem_ldap_mod(&mods, \"krbprincipalkey\",",
          "1050:                                           LDAP_MOD_REPLACE | LDAP_MOD_BVALUES, bersecretkey)) != 0)",
          "",
          "[Added Lines]",
          "1048:         if (bersecretkey == NULL) {",
          "1049:             st = ENOMEM;",
          "1051:         }",
          "1054:         if (bersecretkey[0] != NULL || !create_standalone_prinicipal) {",
          "1055:             st = krb5_add_ber_mem_ldap_mod(&mods, \"krbprincipalkey\",",
          "1056:                                            LDAP_MOD_REPLACE | LDAP_MOD_BVALUES,",
          "1057:                                            bersecretkey);",
          "1058:             if (st != 0)",
          "1059:                 goto cleanup;",
          "1060:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "116dd62237cf19387a25b5f024472ffd06ae9973",
      "candidate_info": {
        "commit_hash": "116dd62237cf19387a25b5f024472ffd06ae9973",
        "repo": "krb5/krb5",
        "commit_url": "https://github.com/krb5/krb5/commit/116dd62237cf19387a25b5f024472ffd06ae9973",
        "files": [
          "src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c"
        ],
        "message": "Support keyless principals in LDAP [CVE-2014-5354]\n\nOperations like \"kadmin -q 'addprinc -nokey foo'\" or\n\"kadmin -q 'purgekeys -all foo'\" result in principal entries with\nno keys present, so krb5_encode_krbsecretkey() would just return\nNULL, which then got unconditionally dereferenced in\nkrb5_add_ber_mem_ldap_mod().\n\nApply some fixes to krb5_encode_krbsecretkey() to handle zero-key\nprincipals better, correct the test for an allocation failure, and\nslightly restructure the cleanup handler to be shorter and more\nappropriate for the usage.  Once it no longer short-circuits when\nn_key_data is zero, it will produce an array of length two with both\nentries NULL, which is treated as an empty list by the LDAP library,\nthe correct behavior for a keyless principal.\n\nHowever, attributes with empty values are only handled by the LDAP\nlibrary for Modify operations, not Add operations (which only get\na sequence of Attribute, with no operation field).  Therefore, only\nadd an empty krbprincipalkey to the modlist when we will be performing a\nModify, and not when we will be performing an Add, which is conditional\non the (misspelled) create_standalone_prinicipal boolean.\n\nCVE-2014-5354:\n\nIn MIT krb5, when kadmind is configured to use LDAP for the KDC\ndatabase, an authenticated remote attacker can cause a NULL\ndereference by inserting into the database a principal entry which\ncontains no long-term keys.\n\nIn order for the LDAP KDC backend to translate a principal entry\nfrom the database abstraction layer into the form expected by the\nLDAP schema, the principal's keys are encoded into a\nNULL-terminated array of length-value entries to be stored in the\nLDAP database.  However, the subroutine which produced this array\ndid not correctly handle the case where no keys were present,\nreturning NULL instead of an empty array, and the array was\nunconditionally dereferenced while adding to the list of LDAP\noperations to perform.\n\nVersions of MIT krb5 prior to 1.12 did not expose a way for\nprincipal entries to have no long-term key material, and\ntherefore are not vulnerable.\n\n    CVSSv2 Vector: AV:N/AC:M/Au:S/C:N/I:N/A:P/E:H/RL:OF/RC:C\n\n(cherry picked from commit 04038bf3633c4b909b5ded3072dc88c8c419bf16)\n\nticket: 8041\nversion_fixed: 1.13.1\nstatus: resolved",
        "before_after_code_files": [
          "src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c"
          ],
          "candidate": [
            "src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c"
          ]
        }
      },
      "candidate_diff": {
        "src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c||src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c": [
          "File: src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c -> src/plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "406:     int num_versions = 1;",
          "407:     int i, j, last;",
          "408:     krb5_error_code err = 0;",
          "412:         return NULL;",
          "415:     key_data = k5calloc(n_key_data, sizeof(*key_data), &err);",
          "417:         goto cleanup;",
          "418:     memcpy(key_data, key_data_in, n_key_data * sizeof(*key_data));",
          "",
          "[Removed Lines]",
          "409:     krb5_key_data *key_data;",
          "411:     if (n_key_data <= 0)",
          "416:     if (key_data_in == NULL)",
          "",
          "[Added Lines]",
          "409:     krb5_key_data *key_data = NULL;",
          "411:     if (n_key_data < 0)",
          "416:     if (key_data == NULL)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "467:     free(key_data);",
          "468:     if (err != 0) {",
          "469:         if (ret != NULL) {",
          "473:             free (ret);",
          "474:             ret = NULL;",
          "475:         }",
          "",
          "[Removed Lines]",
          "470:             for (i = 0; i <= num_versions; i++)",
          "471:                 if (ret[i] != NULL)",
          "472:                     free (ret[i]);",
          "",
          "[Added Lines]",
          "470:             for (i = 0; ret[i] != NULL; i++)",
          "471:                 free (ret[i]);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1037:         bersecretkey = krb5_encode_krbsecretkey (entry->key_data,",
          "1038:                                                  entry->n_key_data, mkvno);",
          "1042:             goto cleanup;",
          "1044:         if (!(entry->mask & KADM5_PRINCIPAL)) {",
          "1045:             memset(strval, 0, sizeof(strval));",
          "",
          "[Removed Lines]",
          "1040:         if ((st=krb5_add_ber_mem_ldap_mod(&mods, \"krbprincipalkey\",",
          "1041:                                           LDAP_MOD_REPLACE | LDAP_MOD_BVALUES, bersecretkey)) != 0)",
          "",
          "[Added Lines]",
          "1039:         if (bersecretkey == NULL) {",
          "1040:             st = ENOMEM;",
          "1042:         }",
          "1045:         if (bersecretkey[0] != NULL || !create_standalone_prinicipal) {",
          "1046:             st = krb5_add_ber_mem_ldap_mod(&mods, \"krbprincipalkey\",",
          "1047:                                            LDAP_MOD_REPLACE | LDAP_MOD_BVALUES,",
          "1048:                                            bersecretkey);",
          "1049:             if (st != 0)",
          "1050:                 goto cleanup;",
          "1051:         }",
          "",
          "---------------"
        ]
      }
    }
  ]
}