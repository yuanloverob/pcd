{
  "cve_id": "CVE-2017-13083",
  "cve_desc": "Akeo Consulting Rufus prior to version 2.17.1187 does not adequately validate the integrity of updates downloaded over HTTP, allowing an attacker to easily convince a user to execute arbitrary code",
  "repo": "pbatard/rufus",
  "patch_hash": "c3c39f7f8a11f612c4ebf7affce25ec6928eb1cb",
  "patch_info": {
    "commit_hash": "c3c39f7f8a11f612c4ebf7affce25ec6928eb1cb",
    "repo": "pbatard/rufus",
    "commit_url": "https://github.com/pbatard/rufus/commit/c3c39f7f8a11f612c4ebf7affce25ec6928eb1cb",
    "files": [
      "res/localization/rufus.loc",
      "src/pki.c",
      "src/rufus.rc",
      "src/stdlg.c"
    ],
    "message": "[pki] fix https://www.kb.cert.org/vuls/id/403768\n\n* This commit effectively fixes https://www.kb.cert.org/vuls/id/403768 (CVE-2017-13083) as\n  it is described per its revision 11, which is the latest revision at the time of this commit,\n  by disabling Windows prompts, enacted during signature validation, that allow the user to\n  bypass the intended signature verification checks.\n* It needs to be pointed out that the vulnerability (\"allow(ing) the use of a self-signed\n  certificate\"), which relies on the end-user actively ignoring a Windows prompt that tells\n  them that the update failed the signature validation whilst also advising against running it,\n  is being fully addressed, even as the update protocol remains HTTP.\n* It also need to be pointed out that the extended delay (48 hours) between the time the\n  vulnerability was reported and the moment it is fixed in our codebase has to do with\n  the fact that the reporter chose to deviate from standard security practices by not\n  disclosing the details of the vulnerability with us, be it publicly or privately,\n  before creating the cert.org report. The only advance notification we received was a\n  generic note about the use of HTTP vs HTTPS, which, as have established, is not\n  immediately relevant to addressing the reported vulnerability.\n* Closes #1009\n* Note: The other vulnerability scenario described towards the end of #1009, which\n  doesn't have to do with the \"lack of CA checking\", will be addressed separately.",
    "before_after_code_files": [
      "res/localization/rufus.loc||res/localization/rufus.loc",
      "src/pki.c||src/pki.c",
      "src/rufus.rc||src/rufus.rc",
      "src/stdlg.c||src/stdlg.c"
    ]
  },
  "patch_diff": {
    "res/localization/rufus.loc||res/localization/rufus.loc": [
      "File: res/localization/rufus.loc -> res/localization/rufus.loc",
      "--- Hunk 1 ---",
      "[Context before]",
      "487: # eg. \"Partitioning (MBR)...\"",
      "488: t MSG_238 \"Partitioning (%s)...\"",
      "489: t MSG_239 \"Deleting partitions...\"",
      "490: t MSG_241 \"Downloading: %0.1f%%\"",
      "491: t MSG_242 \"Failed to download file.\"",
      "492: t MSG_243 \"Checking for Rufus updates...\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "490: t MSG_240 \"The signature for the downloaded update can not be validated. This could mean that your \"",
      "491:  \"system is improperly configured for signature validation or indicate a malicious download.\\n\\n\"",
      "492:  \"The download will be deleted. Please check the log for more details.\"",
      "",
      "---------------"
    ],
    "src/pki.c||src/pki.c": [
      "File: src/pki.c -> src/pki.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "53:  static char error_string[64];",
      "54:  DWORD error_code = GetLastError();",
      "57:   return WindowsErrorString();",
      "59:  switch (error_code) {",
      "",
      "[Removed Lines]",
      "56:  if ((error_code >> 16) != 0x8009)",
      "",
      "[Added Lines]",
      "56:  if (((error_code >> 16) != 0x8009) && ((error_code >> 16) != 0x800B))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "113:   return \"Cannot complete usage check.\";",
      "114:  case CRYPT_E_NO_TRUSTED_SIGNER:",
      "115:   return \"None of the signers of the cryptographic message or certificate trust list is trusted.\";",
      "116:  default:",
      "117:   static_sprintf(error_string, \"Unknown PKI error 0x%08lX\", error_code);",
      "118:   return error_string;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "116:  case CERT_E_UNTRUSTEDROOT:",
      "117:   return \"The root certificate is not trusted.\";",
      "118:  case TRUST_E_NOSIGNATURE:",
      "119:   return \"Not digitally signed.\";",
      "120:  case TRUST_E_EXPLICIT_DISTRUST:",
      "121:   return \"One of the certificates used was marked as untrusted by the user.\";",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "268:  }",
      "270:  trust_data.cbStruct = sizeof(trust_data);",
      "273:  trust_data.fdwRevocationChecks = WTD_REVOKE_WHOLECHAIN;",
      "",
      "[Removed Lines]",
      "271:  trust_data.dwUIChoice = WTD_UI_ALL;",
      "",
      "[Added Lines]",
      "283:  trust_data.dwUIChoice = WTD_UI_NONE;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "279:  r = WinVerifyTrust(NULL, &guid_generic_verify, &trust_data);",
      "280:  safe_free(trust_file.pcwszFilePath);",
      "282:  return r;",
      "283: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "293:  switch (r) {",
      "294:  case ERROR_SUCCESS:",
      "295:   break;",
      "296:  case TRUST_E_NOSIGNATURE:",
      "298:   uprintf(\"PKI: File does not appear to be signed: %s\", WinPKIErrorString());",
      "299:   MessageBoxExU(hDlg, lmprintf(MSG_284), lmprintf(MSG_283), MB_OK | MB_ICONERROR | MB_IS_RTL, selected_langid);",
      "300:   break;",
      "301:  default:",
      "302:   uprintf(\"PKI: Failed to validate signature: %s\", WinPKIErrorString());",
      "303:   MessageBoxExU(hDlg, lmprintf(MSG_240), lmprintf(MSG_283), MB_OK | MB_ICONERROR | MB_IS_RTL, selected_langid);",
      "304:   break;",
      "305:  }",
      "",
      "---------------"
    ],
    "src/rufus.rc||src/rufus.rc": [
      "File: src/rufus.rc -> src/rufus.rc",
      "--- Hunk 1 ---",
      "[Context before]",
      "33: IDD_DIALOG DIALOGEX 12, 12, 242, 376",
      "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
      "35: EXSTYLE WS_EX_ACCEPTFILES",
      "37: FONT 8, \"Segoe UI Symbol\", 400, 0, 0x0",
      "38: BEGIN",
      "39:     LTEXT           \"Device\",IDS_DEVICE_TXT,9,6,200,8",
      "",
      "[Removed Lines]",
      "36: CAPTION \"Rufus 2.17.1186\"",
      "",
      "[Added Lines]",
      "36: CAPTION \"Rufus 2.17.1187\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "368: VS_VERSION_INFO VERSIONINFO",
      "371:  FILEFLAGSMASK 0x3fL",
      "372: #ifdef _DEBUG",
      "373:  FILEFLAGS 0x1L",
      "",
      "[Removed Lines]",
      "369:  FILEVERSION 2,17,1186,0",
      "370:  PRODUCTVERSION 2,17,1186,0",
      "",
      "[Added Lines]",
      "369:  FILEVERSION 2,17,1187,0",
      "370:  PRODUCTVERSION 2,17,1187,0",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "384:         BEGIN",
      "385:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
      "386:             VALUE \"FileDescription\", \"Rufus\"",
      "388:             VALUE \"InternalName\", \"Rufus\"",
      "389:             VALUE \"LegalCopyright\", \"\ufffd 2011-2017 Pete Batard (GPL v3)\"",
      "390:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
      "391:             VALUE \"OriginalFilename\", \"rufus.exe\"",
      "392:             VALUE \"ProductName\", \"Rufus\"",
      "394:         END",
      "395:     END",
      "396:     BLOCK \"VarFileInfo\"",
      "",
      "[Removed Lines]",
      "387:             VALUE \"FileVersion\", \"2.17.1186\"",
      "393:             VALUE \"ProductVersion\", \"2.17.1186\"",
      "",
      "[Added Lines]",
      "387:             VALUE \"FileVersion\", \"2.17.1187\"",
      "393:             VALUE \"ProductVersion\", \"2.17.1187\"",
      "",
      "---------------"
    ],
    "src/stdlg.c||src/stdlg.c": [
      "File: src/stdlg.c -> src/stdlg.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1674:    case 2:  // Launch newer version and close this one",
      "1675:     Sleep(1000); // Add a delay on account of antivirus scanners",
      "1678:      break;",
      "1680:     memset(&si, 0, sizeof(si));",
      "1681:     memset(&pi, 0, sizeof(pi));",
      "",
      "[Removed Lines]",
      "1677:     if (ValidateSignature(hDlg, filepath) != NO_ERROR)",
      "",
      "[Added Lines]",
      "1677:     if (ValidateSignature(hDlg, filepath) != NO_ERROR) {",
      "1679:      _unlinkU(filepath);",
      "1680:      EnableWindow(GetDlgItem(hDlg, IDC_DOWNLOAD), FALSE);",
      "1682:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8128d34e351a088485f4364f2699e99fb413a196",
      "candidate_info": {
        "commit_hash": "8128d34e351a088485f4364f2699e99fb413a196",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/8128d34e351a088485f4364f2699e99fb413a196",
        "files": [
          "src/badblocks.c",
          "src/rufus.c",
          "src/rufus.rc"
        ],
        "message": "[bb] fix rand() initialization\n\n* What do you know, srand() is thread-local...",
        "before_after_code_files": [
          "src/badblocks.c||src/badblocks.c",
          "src/rufus.c||src/rufus.c",
          "src/rufus.rc||src/rufus.rc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "src/badblocks.c||src/badblocks.c": [
          "File: src/badblocks.c -> src/badblocks.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "349:  unsigned char bpattern[sizeof(pattern)], *ptr;",
          "351:  if (pattern == (unsigned int) ~0) {",
          "352:   for (ptr = buffer; ptr < buffer + n; ptr++) {",
          "354:    (*ptr) = rand() % (1 << (8 * sizeof(char)));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "352:   srand((unsigned int)_GetTickCount64());",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "450:  cur_pattern = 0;",
          "452:  for (pat_idx = 0; pat_idx < nb_passes; pat_idx++) {",
          "453:   if (cancel_ops) goto out;",
          "455:   id_offset = rand() * (block_size-sizeof(blk_t)) / RAND_MAX;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "454:   srand((unsigned int)_GetTickCount64());",
          "",
          "---------------"
        ],
        "src/rufus.c||src/rufus.c": [
          "File: src/rufus.c -> src/rufus.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3073:     uprintf(\"Failed to enable AutoMount\");",
          "3074:   }",
          "3075:  }",
          "3078: relaunch:",
          "3079:  uprintf(\"localization: using locale '%s'\\n\", selected_locale->txt[0]);",
          "",
          "[Removed Lines]",
          "3076:  srand((unsigned int)_GetTickCount64());",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 242, 376",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 8, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Device\",IDS_DEVICE_TXT,9,6,200,8",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 2.11.1002\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 2.11.1003\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "322: VS_VERSION_INFO VERSIONINFO",
          "325:  FILEFLAGSMASK 0x3fL",
          "326: #ifdef _DEBUG",
          "327:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "323:  FILEVERSION 2,11,1002,0",
          "324:  PRODUCTVERSION 2,11,1002,0",
          "",
          "[Added Lines]",
          "323:  FILEVERSION 2,11,1003,0",
          "324:  PRODUCTVERSION 2,11,1003,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "338:         BEGIN",
          "339:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
          "340:             VALUE \"FileDescription\", \"Rufus\"",
          "342:             VALUE \"InternalName\", \"Rufus\"",
          "343:             VALUE \"LegalCopyright\", \"\ufffd 2011-2016 Pete Batard (GPL v3)\"",
          "344:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
          "345:             VALUE \"OriginalFilename\", \"rufus.exe\"",
          "346:             VALUE \"ProductName\", \"Rufus\"",
          "348:         END",
          "349:     END",
          "350:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "341:             VALUE \"FileVersion\", \"2.11.1002\"",
          "347:             VALUE \"ProductVersion\", \"2.11.1002\"",
          "",
          "[Added Lines]",
          "341:             VALUE \"FileVersion\", \"2.11.1003\"",
          "347:             VALUE \"ProductVersion\", \"2.11.1003\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e5bf18d4569411b0106fc517abc317c3fed48b38",
      "candidate_info": {
        "commit_hash": "e5bf18d4569411b0106fc517abc317c3fed48b38",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/e5bf18d4569411b0106fc517abc317c3fed48b38",
        "files": [
          "res/loc/po/zh-CN.po",
          "res/loc/rufus.loc",
          "src/rufus.rc"
        ],
        "message": "[loc] update Simplified Chinese translation to latest",
        "before_after_code_files": [
          "res/loc/po/zh-CN.po||res/loc/po/zh-CN.po",
          "res/loc/rufus.loc||res/loc/rufus.loc",
          "src/rufus.rc||src/rufus.rc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "res/loc/po/zh-CN.po||res/loc/po/zh-CN.po": [
          "File: res/loc/po/zh-CN.po -> res/loc/po/zh-CN.po",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: msgid \"\"",
          "2: msgstr \"\"",
          "3: \"Project-Id-Version: 3.2\\n\"",
          "4: \"Report-Msgid-Bugs-To: pete@akeo.ie\\n\"",
          "5: \"POT-Creation-Date: 2018-08-06 22:12+0800\\n\"",
          "6: \"PO-Revision-Date: 2018-08-06 22:36+0800\\n\"",
          "7: \"Language: zh_CN\\n\"",
          "8: \"MIME-Version: 1.0\\n\"",
          "9: \"Content-Type: text/plain; charset=UTF-8\\n\"",
          "10: \"Content-Transfer-Encoding: 8bit\\n\"",
          "11: \"X-Poedit-SourceCharset: UTF-8\\n\"",
          "12: \"X-Rufus-LanguageName: Chinese Simplified (\u7b80\u4f53\u4e2d\u6587)\\n\"",
          "13: \"X-Rufus-LCID: 0x0804, 0x1004\\n\"",
          "14: \"Last-Translator: \\n\"",
          "15: \"Language-Team: \\n\"",
          "16: \"X-Generator: Poedit 2.1.1\\n\"",
          "18: #. \u2022 IDD_DIALOG \u2192 IDS_DRIVE_PROPERTIES_TXT",
          "19: msgid \"Drive Properties\"",
          "20: msgstr \"\u8bbe\u5907\u9009\u9879\"",
          "22: #. \u2022 IDD_DIALOG \u2192 IDS_DEVICE_TXT",
          "23: msgid \"Device\"",
          "24: msgstr \"\u8bbe\u5907\"",
          "26: #. \u2022 IDD_DIALOG \u2192 IDS_BOOT_SELECTION_TXT",
          "27: msgid \"Boot selection\"",
          "28: msgstr \"\u5f15\u5bfc\u7c7b\u578b\u9009\u62e9\"",
          "30: #. \u2022 IDD_DIALOG \u2192 IDC_SELECT",
          "31: msgid \"Select\"",
          "32: msgstr \"\u9009\u62e9\"",
          "34: #. \u2022 IDD_DIALOG \u2192 IDS_IMAGE_OPTION_TXT",
          "35: msgid \"Image Option\"",
          "36: msgstr \"\u955c\u50cf\u9009\u9879\"",
          "38: #. \u2022 IDD_DIALOG \u2192 IDS_PARTITION_TYPE_TXT",
          "39: msgid \"Partition scheme\"",
          "40: msgstr \"\u5206\u533a\u7c7b\u578b\"",
          "42: #. \u2022 IDD_DIALOG \u2192 IDS_TARGET_SYSTEM_TXT",
          "43: msgid \"Target system\"",
          "44: msgstr \"\u76ee\u6807\u7cfb\u7edf\u7c7b\u578b\"",
          "46: #. \u2022 IDD_DIALOG \u2192 IDC_LIST_USB_HDD",
          "47: msgid \"List USB Hard Drives\"",
          "48: msgstr \"\u663e\u793a USB \u5916\u7f6e\u786c\u76d8\"",
          "50: #. \u2022 IDD_DIALOG \u2192 IDC_OLD_BIOS_FIXES",
          "51: #.",
          "52: #. It is acceptable to drop the parenthesis () if you are running out of space",
          "53: #. as there is a tooltip (MSG_169) providing these details.",
          "54: msgid \"Add fixes for old BIOSes (extra partition, align, etc.)\"",
          "55: msgstr \"\u6dfb\u52a0\u5bf9\u65e7 BIOS \u4fee\u6b63(\u989d\u5916\u7684\u5206\u533a\uff0c\u6821\u51c6\u7b49)\"",
          "57: #. \u2022 IDD_DIALOG \u2192 IDC_RUFUS_MBR",
          "58: #.",
          "59: #. 'MBR': See http://en.wikipedia.org/wiki/Master_boot_record",
          "60: #. Rufus can install it's own custom MBR (the Rufus MBR), which also allows users to",
          "61: #. specify a custom disk ID for the BIOS. The tooltip for this control is MSG_167.",
          "62: msgid \"Use Rufus MBR with BIOS ID\"",
          "63: msgstr \"\u4f7f\u7528 Rufus MBR \u914d\u5408 BIOS ID\"",
          "65: #. \u2022 IDD_DIALOG \u2192 IDS_FORMAT_OPTIONS_TXT",
          "66: msgid \"Format Options\"",
          "67: msgstr \"\u683c\u5f0f\u5316\u9009\u9879\"",
          "69: #. \u2022 IDD_DIALOG \u2192 IDS_FILE_SYSTEM_TXT",
          "70: msgid \"File system\"",
          "71: msgstr \"\u6587\u4ef6\u7cfb\u7edf\"",
          "73: #. \u2022 IDD_DIALOG \u2192 IDS_CLUSTER_SIZE_TXT",
          "74: msgid \"Cluster size\"",
          "75: msgstr \"\u7c07\u5927\u5c0f\"",
          "77: #. \u2022 IDD_DIALOG \u2192 IDS_LABEL_TXT",
          "78: msgid \"Volume label\"",
          "79: msgstr \"\u5377\u6807\"",
          "81: #. \u2022 IDD_DIALOG \u2192 IDC_QUICK_FORMAT",
          "82: msgid \"Quick format\"",
          "83: msgstr \"\u5feb\u901f\u683c\u5f0f\u5316\"",
          "85: #. \u2022 IDD_DIALOG \u2192 IDC_BAD_BLOCKS",
          "86: msgid \"Check device for bad blocks\"",
          "87: msgstr \"\u68c0\u67e5\u8bbe\u5907\u574f\u5757\"",
          "89: #. \u2022 IDD_DIALOG \u2192 IDC_EXTENDED_LABEL",
          "90: msgid \"Create extended label and icon files\"",
          "91: msgstr \"\u521b\u5efa\u6269\u5c55\u7684\u6807\u7b7e\u548c\u56fe\u6807\u6587\u4ef6\"",
          "93: #. \u2022 IDD_DIALOG \u2192 IDS_STATUS_TXT",
          "94: msgid \"Status\"",
          "95: msgstr \"\u72b6\u6001\"",
          "97: #. \u2022 IDD_DIALOG \u2192 IDCANCEL",
          "98: #. \u2022 IDD_LICENSE \u2192 IDCANCEL",
          "99: #. \u2022 IDD_LOG \u2192 IDCANCEL",
          "100: #. \u2022 IDD_UPDATE_POLICY \u2192 IDCANCEL",
          "101: #. \u2022 IDD_NEW_VERSION \u2192 IDCANCEL",
          "102: #. \u2022 MSG_006",
          "103: msgid \"Close\"",
          "104: msgstr \"\u5173\u95ed\"",
          "106: #. \u2022 IDD_DIALOG \u2192 IDC_START",
          "107: msgid \"Start\"",
          "108: msgstr \"\u5f00\u59cb\"",
          "110: #. \u2022 IDD_ABOUTBOX \u2192 IDD_ABOUTBOX",
          "111: msgid \"About Rufus\"",
          "112: msgstr \"\u5173\u4e8e Rufus\"",
          "114: #. \u2022 IDD_ABOUTBOX \u2192 IDC_ABOUT_LICENSE",
          "115: msgid \"License\"",
          "116: msgstr \"\u8bb8\u53ef\"",
          "118: #. \u2022 IDD_ABOUTBOX \u2192 IDOK",
          "119: msgid \"OK\"",
          "120: msgstr \"\u786e\u5b9a\"",
          "122: #. \u2022 IDD_LICENSE \u2192 IDD_LICENSE",
          "123: msgid \"Rufus License\"",
          "124: msgstr \"Rufus \u8bb8\u53ef\"",
          "126: #. \u2022 IDD_NOTIFICATION \u2192 IDC_MORE_INFO",
          "127: msgid \"More information\"",
          "128: msgstr \"\u66f4\u591a\u4fe1\u606f\"",
          "130: #. \u2022 IDD_NOTIFICATION \u2192 IDYES",
          "131: #. \u2022 MSG_008",
          "132: msgid \"Yes\"",
          "133: msgstr \"\u662f\"",
          "135: #. \u2022 IDD_NOTIFICATION \u2192 IDNO",
          "136: #. \u2022 MSG_009",
          "137: msgid \"No\"",
          "138: msgstr \"\u5426\"",
          "140: #. \u2022 IDD_LOG \u2192 IDD_LOG",
          "141: msgid \"Log\"",
          "142: msgstr \"\u65e5\u5fd7\"",
          "144: #. \u2022 IDD_LOG \u2192 IDC_LOG_CLEAR",
          "145: msgid \"Clear\"",
          "146: msgstr \"\u6e05\u9664\"",
          "148: #. \u2022 IDD_LOG \u2192 IDC_LOG_SAVE",
          "149: msgid \"Save\"",
          "150: msgstr \"\u4fdd\u5b58\"",
          "152: #. \u2022 IDD_UPDATE_POLICY \u2192 IDD_UPDATE_POLICY",
          "153: msgid \"Update policy and settings\"",
          "154: msgstr \"\u66f4\u65b0\u7b56\u7565\u548c\u8bbe\u7f6e\"",
          "156: #. \u2022 IDD_UPDATE_POLICY \u2192 IDS_UPDATE_SETTINGS_GRP",
          "157: msgid \"Settings\"",
          "158: msgstr \"\u8bbe\u7f6e\"",
          "160: #. \u2022 IDD_UPDATE_POLICY \u2192 IDS_UPDATE_FREQUENCY_TXT",
          "161: msgid \"Check for updates\"",
          "162: msgstr \"\u68c0\u67e5\u66f4\u65b0\"",
          "164: #. \u2022 IDD_UPDATE_POLICY \u2192 IDS_INCLUDE_BETAS_TXT",
          "165: msgid \"Include beta versions\"",
          "166: msgstr \"\u5305\u62ec\u6d4b\u8bd5\u7248\u672c\"",
          "168: #. \u2022 IDD_UPDATE_POLICY \u2192 IDC_CHECK_NOW",
          "169: msgid \"Check Now\"",
          "170: msgstr \"\u7acb\u5373\u68c0\u67e5\"",
          "172: #. \u2022 IDD_NEW_VERSION \u2192 IDD_NEW_VERSION",
          "173: msgid \"Check For Updates - Rufus\"",
          "174: msgstr \"\u68c0\u67e5\u66f4\u65b0 - Rufus\"",
          "176: #. \u2022 IDD_NEW_VERSION \u2192 IDS_NEW_VERSION_AVAIL_TXT",
          "177: msgid \"A newer version is available. Please download the latest version!\"",
          "178: msgstr \"\u6709\u66f4\u65b0\u7248\u672c\u53ef\u7528\u3002\u8bf7\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\uff01\"",
          "180: #. \u2022 IDD_NEW_VERSION \u2192 IDC_WEBSITE",
          "181: msgid \"Click here to go to the website\"",
          "182: msgstr \"\u70b9\u51fb\u8fd9\u91cc\u8f6c\u5230\u7f51\u7ad9\"",
          "184: #. \u2022 IDD_NEW_VERSION \u2192 IDS_NEW_VERSION_NOTES_GRP",
          "185: msgid \"Release Notes\"",
          "186: msgstr \"\u53d1\u884c\u8bf4\u660e\"",
          "188: #. \u2022 IDD_NEW_VERSION \u2192 IDS_NEW_VERSION_DOWNLOAD_GRP",
          "189: #. \u2022 IDD_NEW_VERSION \u2192 IDC_DOWNLOAD",
          "190: #. \u2022 MSG_040",
          "191: msgid \"Download\"",
          "192: msgstr \"\u4e0b\u8f7d\"",
          "194: #. \u2022 MSG_001",
          "195: msgid \"Other instance detected\"",
          "196: msgstr \"\u68c0\u6d4b\u5230\u5176\u5b83\u8fdb\u7a0b\"",
          "198: #. \u2022 MSG_002",
          "199: msgid \"\"",
          "200: \"Another Rufus application is running.\\n\"",
          "201: \"Please close the first application before running another one.\"",
          "202: msgstr \"\"",
          "203: \"\u53e6\u4e00\u4e2a Rufus \u5e94\u7528\u7a0b\u5e8f\u6b63\u5728\u8fd0\u884c\u3002\\n\"",
          "204: \"\u8bf7\u5728\u8fd0\u884c\u53e6\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u524d\u5173\u95ed\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\u3002\"",
          "206: #. \u2022 MSG_003",
          "207: msgid \"\"",
          "208: \"WARNING: ALL DATA ON DEVICE '%s' WILL BE DESTROYED.\\n\"",
          "209: \"To continue with this operation, click OK. To quit click CANCEL.\"",
          "210: msgstr \"\"",
          "211: \"\u8b66\u544a\uff1a\u8bbe\u5907 '%s' \u4e0a\u7684\u6240\u6709\u6570\u636e\u5c06\u4f1a\u88ab\u6e05\u9664\u3002\\n\"",
          "212: \"\u8981\u7ee7\u7eed\u672c\u64cd\u4f5c\uff0c\u8bf7\u70b9\u51fb\u3010\u786e\u5b9a\u3011\u3002\u8981\u9000\u51fa\u70b9\u51fb\u3010\u53d6\u6d88\u3011\u3002\"",
          "214: #. \u2022 MSG_004",
          "215: msgid \"Rufus update policy\"",
          "216: msgstr \"Rufus \u66f4\u65b0\u7b56\u7565\"",
          "218: #. \u2022 MSG_005",
          "219: msgid \"Do you want to allow Rufus to check for application updates online?\"",
          "220: msgstr \"\u4f60\u662f\u5426\u5141\u8bb8 Rufus \u8054\u7f51\u68c0\u67e5\u7a0b\u5e8f\u66f4\u65b0\uff1f\"",
          "222: #. \u2022 MSG_007",
          "223: msgid \"Cancel\"",
          "224: msgstr \"\u53d6\u6d88\"",
          "226: #. \u2022 MSG_010",
          "227: msgid \"Bad blocks found\"",
          "228: msgstr \"\u68c0\u6d4b\u5230\u574f\u5757\"",
          "230: #. \u2022 MSG_011",
          "231: msgid \"\"",
          "232: \"Check completed: %d bad block(s) found\\n\"",
          "233: \"  %d read error(s)\\n\"",
          "234: \"  %d write error(s)\\n\"",
          "235: \"  %d corruption error(s)\"",
          "236: msgstr \"\"",
          "237: \"\u68c0\u67e5\u5b8c\u6210\uff1a\u627e\u5230 %d \u4e2a\u574f\u5757\\n\"",
          "238: \"  %d \u4e2a\u8bfb\u53d6\u9519\u8bef\\n\"",
          "239: \"  %d \u4e2a\u5199\u5165\u9519\u8bef\\n\"",
          "240: \"  %d \u4e2a\u635f\u574f\u9519\u8bef\"",
          "242: #. \u2022 MSG_012",
          "243: #.",
          "244: #. This contains the formatted message from MSG_001 as well as the name of the bad blocks logfile",
          "245: msgid \"\"",
          "246: \"%s\\n\"",
          "247: \"A more detailed report can be found in:\\n\"",
          "248: \"%s\"",
          "249: msgstr \"\"",
          "250: \"%s\\n\"",
          "251: \"\u8be6\u7ec6\u7684\u62a5\u544a\u4f4d\u4e8e\uff1a\\n\"",
          "252: \"%s\"",
          "254: #. \u2022 MSG_013",
          "255: msgid \"Disabled\"",
          "256: msgstr \"\u7981\u7528\"",
          "258: #. \u2022 MSG_014",
          "259: msgid \"Daily\"",
          "260: msgstr \"\u6bcf\u65e5\"",
          "262: #. \u2022 MSG_015",
          "263: msgid \"Weekly\"",
          "264: msgstr \"\u6bcf\u5468\"",
          "266: #. \u2022 MSG_016",
          "267: msgid \"Monthly\"",
          "268: msgstr \"\u6bcf\u6708\"",
          "270: #. \u2022 MSG_017",
          "271: msgid \"Custom\"",
          "272: msgstr \"\u81ea\u5b9a\u4e49\"",
          "274: #. \u2022 MSG_018",
          "275: msgid \"Your version: %d.%d (Build %d)\"",
          "276: msgstr \"\u4f60\u7684\u7248\u672c\uff1a%d.%d (Build %d)\"",
          "278: #. \u2022 MSG_019",
          "279: msgid \"Latest version: %d.%d (Build %d)\"",
          "280: msgstr \"\u6700\u65b0\u7248\u672c\uff1a%d.%d (Build %d)\"",
          "282: #. \u2022 MSG_020",
          "283: #. \u2022 MSG_026",
          "284: msgid \"bytes\"",
          "285: msgstr \"\u5b57\u8282\"",
          "287: #. \u2022 MSG_021",
          "288: #.",
          "289: #. *Short* version of the kilobyte size suffix",
          "290: msgid \"KB\"",
          "291: msgstr \"\"",
          "293: #. \u2022 MSG_022",
          "294: #.",
          "295: #. *Short* version of the megabyte size suffix",
          "296: msgid \"MB\"",
          "297: msgstr \"\"",
          "299: #. \u2022 MSG_023",
          "300: #.",
          "301: #. *Short* version of the gigabyte size suffix",
          "302: msgid \"GB\"",
          "303: msgstr \"\"",
          "305: #. \u2022 MSG_024",
          "306: #.",
          "307: #. *Short* version of the terabyte size suffix",
          "308: msgid \"TB\"",
          "309: msgstr \"\"",
          "311: #. \u2022 MSG_025",
          "312: #.",
          "313: #. *Short* version of the pentabyte size suffix",
          "314: msgid \"PB\"",
          "315: msgstr \"\"",
          "317: #. \u2022 MSG_027",
          "318: msgid \"kilobytes\"",
          "319: msgstr \"K \u5b57\u8282\"",
          "321: #. \u2022 MSG_028",
          "322: msgid \"megabytes\"",
          "323: msgstr \"M \u5b57\u8282\"",
          "325: #. \u2022 MSG_029",
          "326: msgid \"Default\"",
          "327: msgstr \"\u9ed8\u8ba4\"",
          "329: #. \u2022 MSG_030",
          "330: #.",
          "331: #. This gets appended to the file system, cluster size, etc.",
          "332: msgid \"%s (Default)\"",
          "333: msgstr \"%s (\u9ed8\u8ba4)\"",
          "335: #. \u2022 MSG_031",
          "336: msgid \"BIOS (or UEFI-CSM)\"",
          "337: msgstr \"BIOS (\u6216 UEFI-CSM)\"",
          "339: #. \u2022 MSG_032",
          "340: msgid \"UEFI (non CSM)\"",
          "341: msgstr \"UEFI (\u975e CSM)\"",
          "343: #. \u2022 MSG_033",
          "344: msgid \"BIOS or UEFI\"",
          "345: msgstr \"BIOS \u6216 UEFI\"",
          "347: #. \u2022 MSG_034",
          "348: #.",
          "349: #. Number of bad block check passes (singular for 1 pass)",
          "350: msgid \"%d pass\"",
          "351: msgstr \"%d \u904d\"",
          "353: #. \u2022 MSG_035",
          "354: #.",
          "355: #. Number of bad block check passes (plural for 2 or more passes).",
          "356: #. See MSG_087 for the message that %s gets replaced with.",
          "357: msgid \"%d passes %s\"",
          "358: msgstr \"%d \u904d %s\"",
          "360: #. \u2022 MSG_036",
          "361: msgid \"ISO Image\"",
          "362: msgstr \"ISO \u955c\u50cf\"",
          "364: #. \u2022 MSG_037",
          "365: msgid \"Application\"",
          "366: msgstr \"\u7a0b\u5e8f\"",
          "368: #. \u2022 MSG_038",
          "369: msgid \"Abort\"",
          "370: msgstr \"\u4e2d\u6b62\"",
          "372: #. \u2022 MSG_039",
          "373: msgid \"Launch\"",
          "374: msgstr \"\u542f\u52a8\"",
          "376: #. \u2022 MSG_041",
          "377: msgid \"Operation cancelled by the user\"",
          "378: msgstr \"\u64cd\u4f5c\u88ab\u7528\u6237\u53d6\u6d88\"",
          "380: #. \u2022 MSG_042",
          "381: msgid \"Error\"",
          "382: msgstr \"\u9519\u8bef\"",
          "384: #. \u2022 MSG_043",
          "385: msgid \"Error: %s\"",
          "386: msgstr \"\u9519\u8bef\uff1a%s\"",
          "388: #. \u2022 MSG_044",
          "389: msgid \"File download\"",
          "390: msgstr \"\u6587\u4ef6\u4e0b\u8f7d\"",
          "392: #. \u2022 MSG_045",
          "393: msgid \"USB Storage Device (Generic)\"",
          "394: msgstr \"USB \u5b58\u50a8\u8bbe\u5907(\u901a\u7528)\"",
          "396: #. \u2022 MSG_046",
          "397: msgid \"%s (Disk %d) [%s]\"",
          "398: msgstr \"%s (\u78c1\u76d8 %d) [%s]\"",
          "400: #. \u2022 MSG_047",
          "401: #.",
          "402: #. Used when a drive is detected that contains more than one partition",
          "403: msgid \"Multiple Partitions\"",
          "404: msgstr \"\u591a\u5206\u533a\u78c1\u76d8\"",
          "406: #. \u2022 MSG_048",
          "407: msgid \"Rufus - Flushing buffers\"",
          "408: msgstr \"Rufus - \u5237\u65b0\u7f13\u51b2\u533a\"",
          "410: #. \u2022 MSG_049",
          "411: msgid \"Rufus - Cancellation\"",
          "412: msgstr \"Rufus - \u53d6\u6d88\"",
          "414: #. \u2022 MSG_050",
          "415: msgid \"Success.\"",
          "416: msgstr \"\u6210\u529f\u3002\"",
          "418: #. \u2022 MSG_051",
          "419: msgid \"Undetermined error while formatting.\"",
          "420: msgstr \"\u672a\u77e5\u683c\u5f0f\u5316\u9519\u8bef\u3002\"",
          "422: #. \u2022 MSG_052",
          "423: msgid \"Cannot use the selected file system for this media.\"",
          "424: msgstr \"\u672c\u4ecb\u8d28\u4e0d\u80fd\u4f7f\u7528\u9009\u62e9\u7684\u6587\u4ef6\u7cfb\u7edf\u3002\"",
          "426: #. \u2022 MSG_053",
          "427: msgid \"Access to the device is denied.\"",
          "428: msgstr \"\u8bbe\u5907\u88ab\u62d2\u7edd\u8bbf\u95ee\u3002\"",
          "430: #. \u2022 MSG_054",
          "431: msgid \"Media is write protected.\"",
          "432: msgstr \"\u4ecb\u8d28\u88ab\u5199\u4fdd\u62a4\u3002\"",
          "434: #. \u2022 MSG_055",
          "435: msgid \"The device is in use by another process. Please close any other process that may be accessing the device.\"",
          "436: msgstr \"\u8bbe\u5907\u6b63\u5728\u88ab\u53e6\u4e00\u4e2a\u4f7f\u7528\u4e2d\u3002\u8bf7\u5173\u95ed\u53ef\u80fd\u8bbf\u95ee\u8bbe\u5907\u7684\u4efb\u610f\u5176\u5b83\u8fdb\u7a0b\u3002\"",
          "438: #. \u2022 MSG_056",
          "439: msgid \"Quick format is not available for this device.\"",
          "440: msgstr \"\u672c\u8bbe\u5907\u4e0d\u53ef\u4f7f\u7528\u5feb\u901f\u683c\u5f0f\u5316\u3002\"",
          "442: #. \u2022 MSG_057",
          "443: msgid \"The volume label is invalid.\"",
          "444: msgstr \"\u5377\u6807\u65e0\u6548\u3002\"",
          "446: #. \u2022 MSG_058",
          "447: msgid \"The device handle is invalid.\"",
          "448: msgstr \"\u8bbe\u5907\u53e5\u67c4\u65e0\u6548\u3002\"",
          "450: #. \u2022 MSG_059",
          "451: msgid \"The selected cluster size is not valid for this device.\"",
          "452: msgstr \"\u9009\u62e9\u7684\u7c07\u5927\u5c0f\u5bf9\u672c\u8bbe\u5907\u6765\u8bf4\u65e0\u6548\u3002\"",
          "454: #. \u2022 MSG_060",
          "455: msgid \"The volume size is invalid.\"",
          "456: msgstr \"\u5377\u5927\u5c0f\u65e0\u6548\u3002\"",
          "458: #. \u2022 MSG_061",
          "459: msgid \"Please insert a removable media in drive.\"",
          "460: msgstr \"\u8bf7\u5728\u9a71\u52a8\u5668\u4e2d\u63d2\u5165\u53ef\u79fb\u52a8\u4ecb\u8d28\u3002\"",
          "462: #. \u2022 MSG_062",
          "463: msgid \"An unsupported command was received.\"",
          "464: msgstr \"\u63a5\u6536\u5230\u4e00\u4e2a\u4e0d\u88ab\u652f\u6301\u7684\u547d\u4ee4\u3002\"",
          "466: #. \u2022 MSG_063",
          "467: msgid \"Memory allocation error.\"",
          "468: msgstr \"\u5185\u5b58\u5206\u914d\u9519\u8bef\u3002\"",
          "470: #. \u2022 MSG_064",
          "471: msgid \"Read error.\"",
          "472: msgstr \"\u8bfb\u53d6\u9519\u8bef\u3002\"",
          "474: #. \u2022 MSG_065",
          "475: msgid \"Write error.\"",
          "476: msgstr \"\u5199\u5165\u9519\u8bef\u3002\"",
          "478: #. \u2022 MSG_066",
          "479: msgid \"Installation failure\"",
          "480: msgstr \"\u5b89\u88c5\u5931\u8d25\"",
          "482: #. \u2022 MSG_067",
          "483: msgid \"Could not open media. It may be in use by another process. Please re-plug the media and try again.\"",
          "484: msgstr \"\u4e0d\u80fd\u6253\u5f00\u4ecb\u8d28\u3002\u53ef\u80fd\u662f\u5176\u4ed6\u8fdb\u7a0b\u6b63\u5728\u4f7f\u7528\u8be5\u8bbe\u5907\u3002\u8bf7\u91cd\u65b0\u63d2\u5165\u8bbe\u5907\u540e\u518d\u8bd5\u3002\"",
          "486: #. \u2022 MSG_068",
          "487: msgid \"Error while partitioning drive.\"",
          "488: msgstr \"\u9a71\u52a8\u5668\u5206\u533a\u65f6\u9519\u8bef\u3002\"",
          "490: #. \u2022 MSG_069",
          "491: msgid \"Could not copy files to target drive.\"",
          "492: msgstr \"\u65e0\u6cd5\u590d\u5236\u6587\u4ef6\u5230\u76ee\u6807\u9a71\u52a8\u5668\u3002\"",
          "494: #. \u2022 MSG_070",
          "495: msgid \"Cancelled by user.\"",
          "496: msgstr \"\u7528\u6237\u53d6\u6d88\u64cd\u4f5c\u3002\"",
          "498: #. \u2022 MSG_071",
          "499: #.",
          "500: #. See http://en.wikipedia.org/wiki/Thread_%28computing%29",
          "501: msgid \"Unable to start thread.\"",
          "502: msgstr \"\u4e0d\u80fd\u521b\u5efa\u7ebf\u7a0b\u3002\"",
          "504: #. \u2022 MSG_072",
          "505: msgid \"Bad blocks check didn't complete.\"",
          "506: msgstr \"\u574f\u5757\u68c0\u67e5\u672a\u5b8c\u6210\u3002\"",
          "508: #. \u2022 MSG_073",
          "509: msgid \"ISO image scan failure.\"",
          "510: msgstr \"ISO \u955c\u50cf\u626b\u63cf\u5931\u8d25\u3002\"",
          "512: #. \u2022 MSG_074",
          "513: msgid \"ISO image extraction failure.\"",
          "514: msgstr \"ISO \u955c\u50cf\u63d0\u53d6\u5931\u8d25\u3002\"",
          "516: #. \u2022 MSG_075",
          "517: msgid \"Unable to remount volume.\"",
          "518: msgstr \"\u4e0d\u80fd\u91cd\u65b0\u88c5\u8f7d\u5377\u3002\"",
          "520: #. \u2022 MSG_076",
          "521: msgid \"Unable to patch/setup files for boot.\"",
          "522: msgstr \"\u4e0d\u80fd\u8865\u4e01/\u5b89\u88c5\u7528\u4e8e\u5f15\u5bfc\u7684\u6587\u4ef6\u3002\"",
          "524: #. \u2022 MSG_077",
          "525: msgid \"Unable to assign a drive letter.\"",
          "526: msgstr \"\u4e0d\u80fd\u6307\u6d3e\u76d8\u7b26\u3002\"",
          "528: #. \u2022 MSG_078",
          "529: msgid \"Can't mount GUID volume.\"",
          "530: msgstr \"\u672a\u80fd\u88c5\u8f7d GUID \u5377\u3002\"",
          "532: #. \u2022 MSG_079",
          "533: msgid \"The device is not ready.\"",
          "534: msgstr \"\u8bbe\u5907\u6ca1\u6709\u51c6\u5907\u597d\u3002\"",
          "536: #. \u2022 MSG_080",
          "537: msgid \"\"",
          "538: \"Rufus detected that Windows is still flushing its internal buffers onto the USB device.\\n\"",
          "539: \"\\n\"",
          "540: \"Depending on the speed of your USB device, this operation may take a long time to complete, especially for large files.\\n\"",
          "541: \"\\n\"",
          "542: \"We recommend that you let Windows finish, to avoid corruption. But if you grow tired of waiting, you can just unplug the device...\"",
          "543: msgstr \"\"",
          "544: \"Rufus \u68c0\u6d4b\u5230 Windows \u4ecd\u5728\u628a\u5b83\u7684\u5185\u90e8\u7f13\u51b2\u533a\u5237\u5230 USB \u8bbe\u5907\u4e0a\u3002\\n\"",
          "545: \"\\n\"",
          "546: \"\u6839\u636e\u4f60\u7684 USB \u8bbe\u5907\u7684\u901f\u5ea6\uff0c\u6b64\u64cd\u4f5c\u53ef\u80fd\u9700\u8981\u5f88\u957f\u65f6\u95f4\u624d\u80fd\u5b8c\u6210\uff0c\u5c24\u5176\u662f\u5927\u6587\u4ef6\u3002\\n\"",
          "547: \"\\n\"",
          "548: \"\u6211\u4eec\u5efa\u8bae\u4f60\u8ba9 Windows \u5b8c\u6210\uff0c\u907f\u514d\u6570\u636e\u635f\u574f\u3002\u4f46\u662f\u5982\u679c\u4f60\u538c\u5026\u4e86\u7b49\u5f85\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u5c31\u90a3\u6837\u62d4\u51fa\u8bbe\u5907...\"",
          "550: #. \u2022 MSG_081",
          "551: msgid \"Unsupported image\"",
          "552: msgstr \"\u4e0d\u652f\u6301\u7684\u955c\u50cf\"",
          "554: #. \u2022 MSG_082",
          "555: msgid \"This image is either non-bootable, or it uses a boot or compression method that is not supported by Rufus...\"",
          "556: msgstr \"\"",
          "557: \"\u672c\u955c\u50cf\u662f\u4e0d\u53ef\u5f15\u5bfc\u7684\uff0c\u6216\u8005\u4f7f\u7528\u4e86\u4e0d\u88ab Rufus \u6240\u652f\u6301\u7684\u5f15\u5bfc\u6216\u538b\u7f29\u65b9\u5f0f...\\n\"",
          "558: \"\u672c\u7248\u672c Rufus \u4ec5\u652f\u6301\u57fa\u4e8e bootmgr, EFI, Grub4DOS, GRUB 2, isolinux \u6216 WinPE \u7684\u542f\u52a8 ISO \u955c\u50cf\u3002\"",
          "560: #. \u2022 MSG_083",
          "561: msgid \"Replace %s?\"",
          "562: msgstr \"\u66ff\u6362 %s?\"",
          "564: #. \u2022 MSG_084",
          "565: msgid \"\"",
          "566: \"This ISO image seems to use an obsolete version of '%s'.\\n\"",
          "567: \"Boot menus may not display properly because of this.\\n\"",
          "568: \"\\n\"",
          "569: \"A newer version can be downloaded by Rufus to fix this issue:\\n\"",
          "570: \"- Choose 'Yes' to connect to the internet and download the file\\n\"",
          "571: \"- Choose 'No' to leave the existing ISO file unmodified\\n\"",
          "572: \"If you don't know what to do, you should select 'Yes'.\\n\"",
          "573: \"\\n\"",
          "574: \"Note: The new file will be downloaded in the current directory and once a '%s' exists there, it will be reused automatically.\"",
          "575: msgstr \"\"",
          "576: \"\u8fd9\u4e2a ISO \u955c\u50cf\u4f3c\u4e4e\u4f7f\u7528\u4e00\u4e2a\u8fc7\u65f6\u7684 '%s' \u7248\u672c\u3002\\n\"",
          "577: \"\u5f15\u5bfc\u83dc\u5355\u53ef\u80fd\u56e0\u6b64\u800c\u65e0\u6cd5\u6b63\u5e38\u663e\u793a\u3002\\n\"",
          "578: \"\\n\"",
          "579: \"Rufus \u53ef\u4ee5\u4e0b\u8f7d\u66f4\u65b0\u7684\u7248\u672c\u6765\u4fee\u590d\u8fd9\u4e2a\u95ee\u9898\uff1a\\n\"",
          "580: \"- \u9009\u62e9\u3010\u662f\u3011\u8fde\u63a5\u7f51\u7edc\u5e76\u4e0b\u8f7d\u6587\u4ef6\\n\"",
          "581: \"- \u9009\u62e9\u3010\u5426\u3011\u4fdd\u7559\u73b0\u6709\u7684 ISO \u6587\u4ef6\u4e0d\u53d8\\n\"",
          "582: \"\u5982\u679c\u4e0d\u77e5\u9053\u5982\u4f55\u9009\u62e9\uff0c\u8bf7\u9009\u62e9\u3010\u662f\u3011\u3002\\n\"",
          "583: \"\\n\"",
          "584: \"\u6ce8\u610f\uff1a\u65b0\u6587\u4ef6\u5c06\u4f1a\u4e0b\u8f7d\u5230\u5f53\u524d\u76ee\u5f55\uff0c\u4e00\u65e6 '%s' \u5b58\u5728\u5219\u4f1a\u88ab\u81ea\u52a8\u9009\u7528\u3002\"",
          "586: #. \u2022 MSG_085",
          "587: msgid \"Downloading '%s'\"",
          "588: msgstr \"\u4e0b\u8f7d '%s' \u4e2d\"",
          "590: #. \u2022 MSG_086",
          "591: msgid \"No image selected\"",
          "592: msgstr \"\u672a\u9009\u62e9\u955c\u50cf\"",
          "594: #. \u2022 MSG_087",
          "595: #.",
          "596: #. This message appears in Advanced format options \u2192 Check device for bad blocks \u2192 dropdown menu",
          "597: #. %s will be replaced with SLC, MLC or TLC, which is a type of NAND (or flash memory). In other",
          "598: #. words, this message should mean \"for a flash memory device of type %s\". *Please* try to keep",
          "599: #. the translation as short as possible so that it won't result in an overly large dropdown...",
          "600: #. If you prefer, it's okay to use \"type\" or \"device\" instead of \"NAND\" (e.g. \"for TLC type\").",
          "601: #. See also MSG_035.",
          "602: msgid \"for %s NAND\"",
          "603: msgstr \"\u5bf9 %s \u95ea\u5b58\"",
          "605: #. \u2022 MSG_088",
          "606: msgid \"Image is too big\"",
          "607: msgstr \"\u955c\u50cf\u6587\u4ef6\u8fc7\u5927\"",
          "609: #. \u2022 MSG_089",
          "610: msgid \"The image is too big for the selected target.\"",
          "611: msgstr \"\u955c\u50cf\u5bf9\u4e8e\u9009\u62e9\u76ee\u6807\u6765\u8bf4\u592a\u5927\u3002\"",
          "613: #. \u2022 MSG_090",
          "614: msgid \"Unsupported ISO\"",
          "615: msgstr \"\u4e0d\u652f\u6301\u7684 ISO\"",
          "617: #. \u2022 MSG_091",
          "618: msgid \"When using UEFI Target Type, only EFI bootable ISO images are supported. Please select an EFI bootable ISO or set the Target Type to BIOS.\"",
          "619: msgstr \"\"",
          "620: \"\u5f53\u4f7f\u7528 UEFI \u76ee\u6807\u7c7b\u578b\u65f6\uff0c\u53ea\u652f\u6301 EFI \u53ef\u5f15\u5bfc\u7684 ISO \u955c\u50cf\u3002\\n\"",
          "621: \"\u8bf7\u9009\u62e9\u4e00\u4e2a EFI \u53ef\u5f15\u5bfc\u7684 ISO \u955c\u50cf\uff0c\u6216\u8bbe\u7f6e\u201c\u76ee\u6807\u7c7b\u578b\u201d\u4e3a BIOS\u3002\"",
          "623: #. \u2022 MSG_092",
          "624: msgid \"Unsupported filesystem\"",
          "625: msgstr \"\u4e0d\u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\"",
          "627: #. \u2022 MSG_093",
          "628: msgid \"\"",
          "629: \"IMPORTANT: THIS DRIVE CONTAINS MULTIPLE PARTITIONS!!\\n\"",
          "630: \"\\n\"",
          "631: \"This may include partitions/volumes that aren't listed or even visible from Windows. Should you wish to proceed, you are responsible for any data loss on these partitions.\"",
          "632: msgstr \"\"",
          "633: \"\u8b66\u544a\uff1a\u672c\u76d8\u5305\u542b\u591a\u5206\u533a\uff01\\n\"",
          "634: \"\\n\"",
          "635: \"\u8fd9\u4e2a\u53ef\u80fd\u5305\u542b\u5728 Windows \u4e2d\u65e0\u6cd5\u5217\u51fa\u751a\u81f3\u770b\u5230\u7684\u5206\u533a/\u5377\u3002\u5982\u679c\u4f60\u60f3\u7ee7\u7eed\u64cd\u4f5c\u53ef\u80fd\u9020\u6210\u8fd9\u4e9b\u5206\u533a\u4e0a\u7684\u6570\u636e\u4e22\u5931\uff0c\u540e\u679c\u81ea\u8d1f\u3002\"",
          "637: #. \u2022 MSG_094",
          "638: msgid \"Multiple partitions detected\"",
          "639: msgstr \"\u68c0\u6d4b\u5230\u591a\u5206\u533a\u78c1\u76d8\"",
          "641: #. \u2022 MSG_095",
          "642: msgid \"DD Image\"",
          "643: msgstr \"DD \u955c\u50cf\"",
          "645: #. \u2022 MSG_096",
          "646: msgid \"The file system currently selected can not be used with this type of ISO. Please select a different file system or use a different ISO.\"",
          "647: msgstr \"\u5f53\u524d\u9009\u62e9\u7684\u6587\u4ef6\u7cfb\u7edf\u4e0d\u80fd\u914d\u5408\u8fd9\u4e2a\u7c7b\u578b\u7684 ISO \u4f7f\u7528\u3002\u8bf7\u9009\u62e9\u4e00\u4e2a\u4e0d\u540c\u7684\u6587\u4ef6\u7cfb\u7edf\u6216\u8005\u4f7f\u7528\u4e0d\u540c\u7684 ISO\u3002\"",
          "649: #. \u2022 MSG_097",
          "650: msgid \"'%s' can only be applied if the file system is NTFS.\"",
          "651: msgstr \"'%s' \u4ec5\u9002\u7528\u4e8e NTFS \u6587\u4ef6\u7cfb\u7edf\u3002\"",
          "653: #. \u2022 MSG_098",
          "654: msgid \"\"",
          "655: \"IMPORTANT: You are trying to install 'Windows To Go', but your target drive doesn't have the 'FIXED' attribute. Because of this Windows will most likely freeze during boot, as Microsoft hasn't designed it to work with drives that instead have the 'REMOVABLE' attribute.\\n\"",
          "656: \"\\n\"",
          "657: \"Do you still want to proceed?\\n\"",
          "658: \"\\n\"",
          "659: \"Note: The 'FIXED/REMOVABLE' attribute is a hardware property that can only be changed using custom tools from the drive manufacturer. However those tools are ALMOST NEVER provided to the public...\"",
          "660: msgstr \"\"",
          "661: \"\u91cd\u8981\u4e8b\u9879: \u4f60\u6b63\u5728\u5c1d\u8bd5\u5b89\u88c5 'Windows To Go'\uff0c\u7136\u800c\u4f60\u7684\u76ee\u6807\u76d8\u6ca1\u6709 'FIXED' (\u56fa\u5b9a)\u5c5e\u6027\u3002\u56e0\u6b64\uff0cWindows \u5728\u5f15\u5bfc\u65f6\u5c06\u5f88\u53ef\u80fd\u51bb\u4f4f\uff0c\u56e0\u4e3a\u5fae\u8f6f\u5e76\u6ca1\u6709\u9488\u5bf9\u914d\u5408\u62e5\u6709 'REMOVABLE' (\u53ef\u79fb\u52a8)\u5c5e\u6027\u7684\u9a71\u52a8\u5668\u4f7f\u7528\u800c\u8bbe\u8ba1\u3002\\n\"",
          "662: \"\\n\"",
          "663: \"\u4f60\u662f\u5426\u4ecd\u60f3\u7ee7\u7eed?\\n\"",
          "664: \"\\n\"",
          "665: \"\u6ce8\u610f: 'FIXED/REMOVABLE' \u5c5e\u6027\u662f\u5c3d\u53ef\u4ee5\u4f7f\u7528\u6765\u81ea\u9a71\u52a8\u5668\u5236\u9020\u5546\u7684\u5b9a\u5236\u5de5\u5177\u66f4\u6539\u7684\u786c\u4ef6\u6027\u8d28\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u90a3\u4e9b\u5de5\u5177\u51e0\u4e4e\u6c38\u8fdc\u4e0d\u4f1a\u516c\u5f00\u63d0\u4f9b...\"",
          "667: #. \u2022 MSG_099",
          "668: msgid \"Filesystem limitation\"",
          "669: msgstr \"\u6587\u4ef6\u7cfb\u7edf\u9650\u5236\"",
          "671: #. \u2022 MSG_100",
          "672: msgid \"This ISO image contains a file larger than 4GB, which is more than the maximum size allowed for a FAT or FAT32 file system.\"",
          "673: msgstr \"\u8fd9\u4e2a ISO \u955c\u50cf\u5305\u542b\u5927\u4e8e 4 GB \u7684\u5355\u4e00\u6587\u4ef6\uff0c\u5b83\u8d85\u51fa\u4e86 FAT/FAT32 \u6587\u4ef6\u7cfb\u7edf\u5141\u8bb8\u7684\u6700\u5927\u5c3a\u5bf8\u3002\"",
          "675: #. \u2022 MSG_101",
          "676: msgid \"Missing WIM support\"",
          "677: msgstr \"\u7f3a\u5c11 WIM \u652f\u6301\"",
          "679: #. \u2022 MSG_102",
          "680: msgid \"\"",
          "681: \"Your platform cannot extract files from WIM archives. WIM extraction is required to create EFI bootable Windows 7 and Windows Vista USB drives. You can fix that by installing a recent version of 7-Zip.\\n\"",
          "682: \"Do you want to visit the 7-zip download page?\"",
          "683: msgstr \"\"",
          "684: \"\u4f60\u7684\u5e73\u53f0\u4e0d\u80fd\u4ece WIM \u955c\u50cf\u63d0\u53d6\u6587\u4ef6\u3002\u521b\u5efa EFI \u53ef\u5f15\u5bfc\u7684 Windows 7 \u6216 Windows Vista USB \u76d8\u9700\u8981 WIM \u63d0\u53d6\u529f\u80fd\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u5b89\u88c5\u6700\u65b0\u7248\u672c\u7684 7-Zip \u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\\n\"",
          "685: \"\u4f60\u662f\u5426\u60f3\u8bbf\u95ee 7-Zip \u4e0b\u8f7d\u7f51\u9875\uff1f\"",
          "687: #. \u2022 MSG_103",
          "688: msgid \"Download %s?\"",
          "689: msgstr \"\u4e0b\u8f7d %s \u5417\uff1f\"",
          "691: #. \u2022 MSG_104",
          "692: #.",
          "693: #. Example: \"Grub4DOS v0.4 or later requires a 'grldr' file to be installed. Because this",
          "694: #. file is more than 100 KB in size, and always present on Grub4DOS ISO images (...)\"",
          "695: msgid \"\"",
          "696: \"%s or later requires a '%s' file to be installed.\\n\"",
          "697: \"Because this file is more than 100 KB in size, and always present on %s ISO images, it is not embedded in Rufus.\\n\"",
          "698: \"\\n\"",
          "699: \"Rufus can download the missing file for you:\\n\"",
          "700: \"- Select 'Yes' to connect to the internet and download the file\\n\"",
          "701: \"- Select 'No' if you want to manually copy this file on the drive later\\n\"",
          "702: \"\\n\"",
          "703: \"Note: The file will be downloaded in the current directory and once a '%s' exists there, it will be reused automatically.\"",
          "704: msgstr \"\"",
          "705: \"%s \u6216\u66f4\u65b0\u7248\u672c\u9700\u8981\u540c\u65f6\u5b89\u88c5\u4e00\u4e2a '%s' \u6587\u4ef6\u3002\\n\"",
          "706: \"\u7531\u4e8e\u8fd9\u4e2a\u6587\u4ef6\u5c3a\u5bf8\u5927\u4e8e 100 KB \u4e14\u603b\u662f\u5b58\u5728\u4e8e %s ISO \u955c\u50cf\u4e0a\uff0c\u800c\u672a\u5185\u7f6e\u4e8e Rufus \u4e2d\u3002\\n\"",
          "707: \"\\n\"",
          "708: \"Rufus \u53ef\u4ee5\u4e3a\u4f60\u4e0b\u8f7d\u7f3a\u5c11\u7684\u6587\u4ef6\uff1a\\n\"",
          "709: \"- \u9009\u62e9\u3010\u662f\u3011\u5219\u8fde\u63a5\u7f51\u7edc\u4e92\u8054\u7f51\u5e76\u4e0b\u8f7d\u6587\u4ef6\\n\"",
          "710: \"- \u9009\u62e9\u3010\u5426\u3011\u5219\u4f60\u81ea\u5df1\u7a0d\u540e\u81ea\u884c\u4e0b\u8f7d\u5230\u78c1\u76d8\\n\"",
          "711: \"\\n\"",
          "712: \"\u6ce8\u610f\uff1a\u6587\u4ef6\u5c06\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e2d\u4e0b\u8f7d\uff0c\u4e00\u65e6 '%s' \u6587\u4ef6\u5b58\u5728\uff0c\u5219\u5b83\u5c06\u4f1a\u88ab\u81ea\u52a8\u9009\u7528\u3002\"",
          "714: #. \u2022 MSG_105",
          "715: msgid \"\"",
          "716: \"Cancelling may leave the device in an UNUSABLE state.\\n\"",
          "717: \"If you are sure you want to cancel, click YES. Otherwise, click NO.\"",
          "718: msgstr \"\"",
          "719: \"\u73b0\u5728\u53d6\u6d88\u53ef\u80fd\u5bfc\u81f4\u8bbe\u5907\u5904\u4e8e\u4e0d\u7a33\u5b9a\u72b6\u6001\u3002\\n\"",
          "720: \"\u5982\u679c\u4f60\u786e\u5b9a\u4f60\u60f3\u53d6\u6d88\uff0c\u8bf7\u70b9\u51fb\u3010\u662f\u3011\u3002\u5426\u5219\u70b9\u51fb\u3010\u5426\u3011\u3002\"",
          "722: #. \u2022 MSG_106",
          "723: msgid \"Please select folder\"",
          "724: msgstr \"\u8bf7\u9009\u62e9\u6587\u4ef6\u5939\"",
          "726: #. \u2022 MSG_107",
          "727: msgid \"All files\"",
          "728: msgstr \"\u5168\u90e8\u6587\u4ef6\"",
          "730: #. \u2022 MSG_108",
          "731: msgid \"Rufus log\"",
          "732: msgstr \"Rufus \u65e5\u5fd7\"",
          "734: #. \u2022 MSG_109",
          "735: msgid \"0x%02X (Disk %d)\"",
          "736: msgstr \"0x%02X (\u78c1\u76d8 %d)\"",
          "738: #. \u2022 MSG_110",
          "739: #.",
          "740: #. \"Cluster size\" should be the same as the label for IDS_CLUSTER_SIZE_TXT",
          "741: #. \"kilobytes\" should be the same as in MSG_027",
          "742: msgid \"\"",
          "743: \"MS-DOS cannot boot from a drive using a 64 kilobytes Cluster size.\\n\"",
          "744: \"Please change the Cluster size or use FreeDOS.\"",
          "745: msgstr \"\"",
          "746: \"MS-DOS \u65e0\u6cd5\u4ece 64 KB \u7c07\u5927\u5c0f\u78c1\u76d8\u542f\u52a8\u3002\\n\"",
          "747: \"\u8bf7\u66f4\u6539\u7c07\u5927\u5c0f\u6216\u6539\u7528 FreeDOS\u3002\"",
          "749: #. \u2022 MSG_111",
          "750: msgid \"Incompatible Cluster size\"",
          "751: msgstr \"\u4e0d\u517c\u5bb9\u7684\u7c07\u5927\u5c0f\"",
          "753: #. \u2022 MSG_112",
          "754: #.",
          "755: #. \"%d:%02d\" is a duration (mins:secs)",
          "756: msgid \"Formatting a large UDF volumes can take a lot of time. At USB 2.0 speeds, the estimated formatting duration is %d:%02d, during which the progress bar will appear frozen. Please be patient!\"",
          "757: msgstr \"\u683c\u5f0f\u5316\u4e00\u4e2a\u5927 UDF \u5377\u53ef\u80fd\u9700\u8981\u5f88\u957f\u65f6\u95f4\u3002\u4ee5 USB 2.0 \u901f\u5ea6\u9884\u8ba1\u5269\u4f59\u65f6\u95f4\uff1a%d:%02d\uff0c\u5728\u6b64\u671f\u95f4\u8fdb\u5ea6\u6761\u53ef\u80fd\u4f1a\u5448\u7981\u6b62\u72b6\u6001\u3002\u8bf7\u8010\u5fc3\u7b49\u5f85\uff01\"",
          "759: #. \u2022 MSG_113",
          "760: msgid \"Large UDF volume\"",
          "761: msgstr \"\u5927\u5bb9\u91cf UDF \u5377\"",
          "763: #. \u2022 MSG_114",
          "764: msgid \"\"",
          "765: \"This image uses Syslinux %s%s but this application only includes the installation files for Syslinux %s%s.\\n\"",
          "766: \"\\n\"",
          "767: \"As new versions of Syslinux are not compatible with one another, and it wouldn't be possible for Rufus to include them all, two additional files must be downloaded from the Internet ('ldlinux.sys' and 'ldlinux.bss'):\\n\"",
          "768: \"- Select 'Yes' to connect to the Internet and download these files\\n\"",
          "769: \"- Select 'No' to cancel the operation\\n\"",
          "770: \"\\n\"",
          "771: \"Note: The files will be downloaded in the current application directory and will be reused automatically if present.\"",
          "772: msgstr \"\"",
          "773: \"\u8fd9\u4e2a\u955c\u50cf\u4f7f\u7528 Syslinux %s%s\uff0c\u800c\u672c\u7a0b\u5e8f\u4ec5\u5305\u542b Syslinux %s%s \u7684\u5b89\u88c5\u6587\u4ef6\u3002\\n\"",
          "774: \"\\n\"",
          "775: \"\u7531\u4e8e\u65b0\u7248\u672c\u7684 Syslinux \u548c\u5176\u5b83\u7248\u672c\u7684\u4e0d\u80fd\u517c\u5bb9\uff0c\u800c Rufus \u4e5f\u4e0d\u53ef\u80fd\u5305\u62ec\u5b83\u4eec\u5168\u90e8\uff0c\u9700\u8981\u4ece\u4e92\u8054\u7f51\u4e0b\u8f7d\u4e24\u4e2a\u989d\u5916\u7684\u6587\u4ef6('ldlinux.sys' \u548c 'ldlinux.bss'):\\n\"",
          "776: \"- \u9009\u62e9 '\u662f' \u8fde\u63a5\u7f51\u7edc\u5e76\u4e0b\u8f7d\u8fd9\u4e9b\u6587\u4ef6\\n\"",
          "777: \"- \u9009\u62e9 '\u5426' \u53d6\u6d88\u6b64\u9879\u64cd\u4f5c\\n\"",
          "778: \"\\n\"",
          "779: \"\u6ce8\u610f\uff1a\u6587\u4ef6\u5c06\u4f1a\u88ab\u4e0b\u8f7d\u5230\u5f53\u524d\u5e94\u7528\u7a0b\u5e8f\u76ee\u5f55\uff0c\u5982\u679c\u5b58\u5728\u5219\u4f1a\u81ea\u52a8\u9009\u7528\u3002\"",
          "781: #. \u2022 MSG_115",
          "782: msgid \"Download required\"",
          "783: msgstr \"\u9700\u8981\u4e0b\u8f7d\"",
          "785: #. \u2022 MSG_116",
          "786: #.",
          "787: #. You should be able to test this message with Super Grub2 Disk ISO:",
          "788: #. https://sourceforge.net/projects/supergrub2/files/2.00s2/super_grub2_disk_hybrid_2.00s2.iso/download (11.9 MB)",
          "789: msgid \"\"",
          "790: \"This image uses Grub %s but the application only includes the installation files for Grub %s.\\n\"",
          "791: \"\\n\"",
          "792: \"As different versions of Grub may not be compatible with one another, and it is not possible to include them all, Rufus will attempt to locate a version of the Grub installation file ('core.img') that matches the one from your image:\\n\"",
          "793: \"- Select 'Yes' to connect to the Internet and attempt to download it\\n\"",
          "794: \"- Select 'No' to use the default version from Rufus\\n\"",
          "795: \"- Select 'Cancel' to abort the operation\\n\"",
          "796: \"\\n\"",
          "797: \"Note: The file will be downloaded in the current application directory and will be reused automatically if present. If no match can be found online, then the default version will be used.\"",
          "798: msgstr \"\"",
          "799: \"\u672c\u955c\u50cf\u4f7f\u7528 Grub %s \u800c\u5e94\u7528\u7a0b\u5e8f\u53ea\u5305\u542b Grub %s \u7684\u5b89\u88c5\u6587\u4ef6\u3002\\n\"",
          "800: \"\\n\"",
          "801: \"\u7531\u4e8e\u4e0d\u540c\u7248\u672c\u7684 Grub \u5f7c\u6b64\u4e0d\u80fd\u517c\u5bb9\uff0c\u800c\u4e14\u4e0d\u53ef\u80fd\u5305\u542b\u5b83\u4eec\u5168\u90e8\uff0cRufus \u5c06\u5c1d\u8bd5\u5b9a\u4f4d\u4e00\u4e2a\u5339\u914d\u6765\u81ea\u4f60\u7684\u955c\u50cf\u7684 Grub \u7248\u672c\u7684 Grub \u5b89\u88c5\u6587\u4ef6('core.img'):\\n\"",
          "802: \"- \u9009\u62e9\u3010\u662f\u3011\u5219\u8fde\u63a5\u5230\u4e92\u8054\u7f51\u5e76\u5c1d\u8bd5\u4e0b\u8f7d\u5b83\\n\"",
          "803: \"- \u9009\u62e9\u3010\u5426\u3011\u5219\u4f7f\u7528\u6765\u81ea Rufus \u7684\u9ed8\u8ba4\u7248\u672c\\n\"",
          "804: \"- \u9009\u62e9\u3010\u53d6\u6d88\u3011\u5219\u653e\u5f03\u64cd\u4f5c\\n\"",
          "805: \"\\n\"",
          "806: \"\u6ce8\u610f: \u6587\u4ef6\u5c06\u4f1a\u5728\u5f53\u524d\u5e94\u7528\u7a0b\u5e8f\u76ee\u5f55\u4e0b\u8f7d\uff0c\u800c\u5982\u679c\u5b58\u5728\u7684\u8bdd\u5219\u5c06\u4f1a\u81ea\u52a8\u4f7f\u7528\u5b83\u3002\u5982\u679c\u5728\u7ebf\u627e\u4e0d\u5230\u5339\u914d\u7684\uff0c\u90a3\u4e48\u5c06\u4f1a\u4f7f\u7528\u9ed8\u8ba4\u7684\u7248\u672c\u3002\"",
          "808: #. \u2022 MSG_117",
          "809: msgid \"Standard Windows installation\"",
          "810: msgstr \"\u6807\u51c6 Windows \u5b89\u88c5\"",
          "812: #. \u2022 MSG_118",
          "813: #.",
          "814: #. Only translate this message *if* Microsoft has a specific name for",
          "815: #. http://en.wikipedia.org/wiki/Windows_To_Go in your language.",
          "816: #. Otherwise, you may add a parenthesis eg. \"Windows To Go (<hint at what it does>)\"",
          "817: msgid \"Windows To Go\"",
          "818: msgstr \"\"",
          "820: #. \u2022 MSG_119",
          "821: msgid \"advanced drive properties\"",
          "822: msgstr \"\u9ad8\u7ea7\u8bbe\u5907\u9009\u9879\"",
          "824: #. \u2022 MSG_120",
          "825: msgid \"advanced format options\"",
          "826: msgstr \"\u9ad8\u7ea7\u683c\u5f0f\u5316\u9009\u9879\"",
          "828: #. \u2022 MSG_121",
          "829: msgid \"Show %s\"",
          "830: msgstr \"\u663e\u793a%s\"",
          "832: #. \u2022 MSG_122",
          "833: msgid \"Hide %s\"",
          "834: msgstr \"\u9690\u85cf%s\"",
          "836: #. \u2022 MSG_123",
          "837: #.",
          "838: #. A persistent partitions can be used with \"Live\" USB media to store data.",
          "839: #. It means that data can be preserved across reboots on \"Live\" USB drives.",
          "840: #. To test this feature, please download and select 'casper_test.iso' from:",
          "841: #. https://github.com/pbatard/rufus/raw/master/res/loc/test/casper_test.iso",
          "842: msgid \"Persistent partition size\"",
          "843: msgstr \"\u6301\u4e45\u5206\u533a\u5927\u5c0f\"",
          "845: #. \u2022 MSG_124",
          "846: #.",
          "847: #. This message appears in the persistence 'Size' control when the slider is set to 0.",
          "848: #. It is okay to use \"No partition\" or \"None\" or \"Deactivated\" to indicate that a persistent partition will not be",
          "849: #. created if the width of the control is too small (since the 'Size' edit control is *not* adjusted for width).",
          "850: msgid \"No persistence\"",
          "851: msgstr \"\u65e0\u6301\u4e45\u5206\u533a\"",
          "853: #. \u2022 MSG_125",
          "854: #.",
          "855: #. Tooltips used for the peristence size slider and edit control",
          "856: msgid \"Set the size of the persistent partition for live USB media. Setting the size to 0 disables the persistent partition.\"",
          "857: msgstr \"\u8bbe\u7f6eLive USB\u9a71\u52a8\u5668\u7684\u6301\u4e45\u5206\u533a\u5927\u5c0f\u3002\u8bbe\u7f6e\u4e3a\u96f6\u5c06\u7981\u7528\u6301\u4e45\u5206\u533a\u3002\"",
          "859: #. \u2022 MSG_126",
          "860: msgid \"Set the partition size units.\"",
          "861: msgstr \"\u8bbe\u7f6e\u5206\u533a\u5927\u5c0f\u5355\u4f4d\u3002\"",
          "863: #. \u2022 MSG_150",
          "864: msgid \"Type of computer you plan to use this bootable drive with. It is your responsibility to determine whether your target is of BIOS or UEFI type before you start creating the drive, as it may fail to boot otherwise.\"",
          "865: msgstr \"\u8bf7\u9009\u62e9\u60a8\u8ba1\u7b97\u673a\u652f\u6301\u7684\u542f\u52a8\u7c7b\u578b\uff0c\u5982 BIOS \u6216 UEFI\uff0c\u5426\u5219\u542f\u52a8\u53ef\u80fd\u4f1a\u5931\u8d25\u3002\"",
          "867: #. \u2022 MSG_151",
          "868: #.",
          "869: #. You shouldn't translate 'Legacy Mode' as this is an option that usually appears in English in the UEFI settings.",
          "870: msgid \"'UEFI-CSM' means that the device will only boot in BIOS emulation mode (also known as 'Legacy Mode') under UEFI, and not in native UEFI mode.\"",
          "871: msgstr \"'UEFI-CSM' \u6307\u8bbe\u5907\u53ea\u4f1a\u5728 UEFI \u7cfb\u7edf\u7684\u7ecf\u5178\u6a21\u5f0f(Legacy Mode)\u4e0b\u542f\u52a8\uff0c\u4e0d\u4f1a\u5728\u539f\u751f\u6a21\u5f0f(UEFI Mode)\u4e0b\u542f\u52a8\u3002\"",
          "873: #. \u2022 MSG_152",
          "874: msgid \"'non CSM' means that the device will only boot in native UEFI mode, and not in BIOS emulation mode (also known as 'Legacy Mode').\"",
          "875: msgstr \"'\u975e CSM' \u6307\u8bbe\u5907\u53ea\u4f1a\u5728 UEFI \u7cfb\u7edf\u7684\u539f\u751f\u6a21\u5f0f(UEFI Mode)\u4e0b\u542f\u52a8\uff0c\u4e0d\u4f1a\u5728\u7ecf\u5178\u6a21\u5f0f(Legacy Mode)\u4e0b\u542f\u52a8\u3002\"",
          "877: #. \u2022 MSG_153",
          "878: msgid \"Test pattern: 0x%02X\"",
          "879: msgstr \"\u6d4b\u8bd5\u6a21\u5f0f\uff1a0x%02X\"",
          "881: #. \u2022 MSG_154",
          "882: msgid \"Test pattern: 0x%02X, 0x%02X\"",
          "883: msgstr \"\u6d4b\u8bd5\u6a21\u5f0f\uff1a0x%02X, 0x%02X\"",
          "885: #. \u2022 MSG_155",
          "886: msgid \"Test pattern: 0x%02X, 0x%02X, 0x%02X\"",
          "887: msgstr \"\u6d4b\u8bd5\u6a21\u5f0f\uff1a0x%02X, 0x%02X, 0x%02X\"",
          "889: #. \u2022 MSG_156",
          "890: msgid \"Test pattern: 0x%02X, 0x%02X, 0x%02X, 0x%02X\"",
          "891: msgstr \"\u6d4b\u8bd5\u6a21\u5f0f\uff1a0x%02X, 0x%02X, 0x%02X, 0x%02X\"",
          "893: #. \u2022 MSG_157",
          "894: msgid \"Sets the target filesystem\"",
          "895: msgstr \"\u8bbe\u7f6e\u76ee\u6807\u6587\u4ef6\u7cfb\u7edf\"",
          "897: #. \u2022 MSG_158",
          "898: msgid \"Minimum size that a block of data will occupy in the filesystem\"",
          "899: msgstr \"\u6587\u4ef6\u7cfb\u7edf\u7684\u6570\u636e\u5757\u6700\u5c11\u5360\u7528\u5927\u5c0f\"",
          "901: #. \u2022 MSG_159",
          "902: msgid \"\"",
          "903: \"Use this field to set the drive label.\\n\"",
          "904: \"International characters are accepted.\"",
          "905: msgstr \"\"",
          "906: \"\u4f7f\u7528\u672c\u6846\u4ee5\u8bbe\u7f6e\u9a71\u52a8\u5668\u5377\u6807\u3002\\n\"",
          "907: \"\u652f\u6301\u56fd\u9645\u5b57\u7b26\u3002\"",
          "909: #. \u2022 MSG_160",
          "910: msgid \"Toggle advanced options\"",
          "911: msgstr \"\u5207\u6362\u9ad8\u7ea7\u9009\u9879\"",
          "913: #. \u2022 MSG_161",
          "914: msgid \"Check the device for bad blocks using a test pattern\"",
          "915: msgstr \"\u4f7f\u7528\u6d4b\u8bd5\u6a21\u5f0f\u68c0\u67e5\u8bbe\u5907\u574f\u5757\"",
          "917: #. \u2022 MSG_162",
          "918: msgid \"Uncheck this box to use the \\\"slow\\\" format method\"",
          "919: msgstr \"\u53d6\u6d88\u672c\u590d\u9009\u6846\u4f7f\u7528\\\"\u6162\u901f\\\"\u5b8c\u5168\u683c\u5f0f\u5316\u65b9\u5f0f\"",
          "921: #. \u2022 MSG_163",
          "922: msgid \"Method that will be used to create partitions\"",
          "923: msgstr \"\u7528\u4e8e\u521b\u5efa\u5206\u533a\u7684\u65b9\u6cd5\"",
          "925: #. \u2022 MSG_164",
          "926: msgid \"Method that will be used to make the drive bootable\"",
          "927: msgstr \"\u7528\u4e8e\u4f7f\u9a71\u52a8\u5668\u53ef\u5f15\u5bfc\u7684\u65b9\u6cd5\"",
          "929: #. \u2022 MSG_165",
          "930: msgid \"Click to select an image...\"",
          "931: msgstr \"\u70b9\u51fb\u9009\u62e9\u955c\u50cf...\"",
          "933: #. \u2022 MSG_166",
          "934: msgid \"Check this box to allow the display of international labels and set a device icon (creates an autorun.inf)\"",
          "935: msgstr \"\u52fe\u9009\u672c\u6846\u5141\u8bb8\u56fd\u9645\u5377\u6807\u7684\u663e\u793a\u5e76\u8bbe\u7f6e\u4e00\u4e2a\u8bbe\u5907\u56fe\u6807(\u521b\u5efa\u4e00\u4e2a autorun.inf)\"",
          "937: #. \u2022 MSG_167",
          "938: msgid \"Install an MBR that allows boot selection and can masquerade the BIOS USB drive ID\"",
          "939: msgstr \"\u5b89\u88c5\u4e00\u4e2a\u53ef\u4ee5\u5f15\u5bfc\u9009\u62e9\u5185\u5bb9\u5e76\u53ef\u4ee5\u4f2a\u88c5 BIOS USB \u76d8 ID \u7684 MBR\"",
          "941: #. \u2022 MSG_168",
          "942: msgid \"\"",
          "943: \"Try to masquerade first bootable USB drive (usually 0x80) as a different disk.\\n\"",
          "944: \"This should only be necessary if you install Windows XP and have more than one disk.\"",
          "945: msgstr \"\"",
          "946: \"\u5c1d\u8bd5\u5c06\u9996\u4e2a\u53ef\u5f15\u5bfc\u7684 USB \u9a71\u52a8\u5668 (\u901a\u5e38\u4e3a 0x80) \u4f2a\u88c5\u4e3a\u4e0d\u540c\u7684\u78c1\u76d8\u3002\\n\"",
          "947: \"\u53ea\u6709\u5f53\u60a8\u5b89\u88c5 Windows XP\uff0c\u5e76\u62e5\u6709\u591a\u4e2a\u78c1\u76d8\u65f6\u624d\u9700\u8981\u6b64\u9009\u9879\u3002\"",
          "949: #. \u2022 MSG_169",
          "950: msgid \"\"",
          "951: \"Create an extra hidden partition and try to align partitions boundaries.\\n\"",
          "952: \"This can improve boot detection for older BIOSes.\"",
          "953: msgstr \"\"",
          "954: \"\u521b\u5efa\u4e00\u4e2a\u989d\u5916\u7684\u9690\u85cf\u5206\u533a\u5e76\u5c1d\u8bd5\u5bf9\u9f50\u5206\u533a\u5206\u754c\u3002\\n\"",
          "955: \"\u8fd9\u4e2a\u53ef\u63d0\u9ad8\u65e7 BIOS \u7684\u5f15\u5bfc\u68c0\u6d4b\u7387\u3002\"",
          "957: #. \u2022 MSG_170",
          "958: msgid \"Enable the listing of USB Hard Drive enclosures. USE AT YOUR OWN RISKS!!!\"",
          "959: msgstr \"\"",
          "960: \"\u542f\u7528\u6db5\u76d6 USB \u786c\u76d8\u7684\u663e\u793a\\n\"",
          "961: \"***\u8bf7\u8c28\u614e\u4f7f\u7528\uff0c\u540e\u679c\u81ea\u8d1f\uff01***\"",
          "963: #. \u2022 MSG_171",
          "964: msgid \"\"",
          "965: \"Start the formatting operation.\\n\"",
          "966: \"This will DESTROY any data on the target!\"",
          "967: msgstr \"\"",
          "968: \"\u5f00\u59cb\u683c\u5f0f\u5316\u64cd\u4f5c\u3002\\n\"",
          "969: \"\u8fd9\u5c06\u4f1a\u6e05\u9664\u76ee\u6807\u8bbe\u5907\u4e0a\u7684\u4efb\u4f55\u6570\u636e\uff01\"",
          "971: #. \u2022 MSG_172",
          "972: #.",
          "973: #. As of Rufus 3.2, *ALL* downloads from the servers are digitally signed, and their signature is validated using the",
          "974: #. public key that is embedded in the application. This message appears in an error dialog if the validation fails.",
          "975: msgid \"Invalid download signature\"",
          "976: msgstr \"\u4e0b\u8f7d\u6587\u4ef6\u7b7e\u540d\u6821\u9a8c\u5931\u8d25\"",
          "978: #. \u2022 MSG_173",
          "979: msgid \"Click to select...\"",
          "980: msgstr \"\u70b9\u51fb\u9009\u62e9...\"",
          "982: #. \u2022 MSG_174",
          "983: msgid \"Rufus - The Reliable USB Formatting Utility\"",
          "984: msgstr \"Rufus - \u53ef\u9760\u7684 USB \u683c\u5f0f\u5316\u5de5\u5177\"",
          "986: #. \u2022 MSG_175",
          "987: msgid \"Version %d.%d (Build %d)\"",
          "988: msgstr \"\u7248\u672c %d.%d (Build %d)\"",
          "990: #. \u2022 MSG_176",
          "991: msgid \"English translation: Pete Batard <mailto:pete@akeo.ie>\"",
          "992: msgstr \"\u7b80\u4f53\u4e2d\u6587\u7ffb\u8bd1\u8005\uff1a\u4f5a\u540d\u548c\u5c31\u4e0d\u544a\u8bc9\u4f60\"",
          "994: #. \u2022 MSG_177",
          "995: msgid \"Report bugs or request enhancements at:\"",
          "996: msgstr \"\u62a5\u544a\u9519\u8bef\u6216\u8bf7\u6c42\u65b0\u529f\u80fd\uff1a\"",
          "998: #. \u2022 MSG_178",
          "999: msgid \"Additional Copyrights:\"",
          "1000: msgstr \"\u66f4\u591a\u7248\u6743\u4fe1\u606f\uff1a\"",
          "1002: #. \u2022 MSG_179",
          "1003: msgid \"Update Policy:\"",
          "1004: msgstr \"\u66f4\u65b0\u7b56\u7565\uff1a\"",
          "1006: #. \u2022 MSG_180",
          "1007: msgid \"If you choose to allow this program to check for application updates, you agree that the following information may be collected on our server(s):\"",
          "1008: msgstr \"\u5982\u679c\u4f60\u9009\u62e9\u5141\u8bb8\u672c\u7a0b\u5e8f\u68c0\u67e5\u5e94\u7528\u7a0b\u5e8f\u66f4\u65b0\uff0c\u90a3\u4e48\u8868\u793a\u60a8\u540c\u610f\u88ab\u6211\u4eec\u7684\u670d\u52a1\u5668\u6536\u96c6\u4ee5\u4e0b\u4fe1\u606f\uff1a\"",
          "1010: #. \u2022 MSG_181",
          "1011: msgid \"Your operating system's architecture and version\"",
          "1012: msgstr \"\u4f60\u7684\u64cd\u4f5c\u7cfb\u7edf\u7684\u67b6\u6784\u548c\u7248\u672c\"",
          "1014: #. \u2022 MSG_182",
          "1015: msgid \"The version of the application you use\"",
          "1016: msgstr \"\u4f60\u4f7f\u7528\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u7248\u672c\"",
          "1018: #. \u2022 MSG_183",
          "1019: msgid \"Your IP address\"",
          "1020: msgstr \"\u60a8\u7684 IP \u5730\u5740\"",
          "1022: #. \u2022 MSG_184",
          "1023: msgid \"For the purpose of generating private usage statistics, we may keep the information collected, \\\\b for at most a year\\\\b0 . However, we will not willingly disclose any of this individual data to third parties.\"",
          "1024: msgstr \"\u4e3a\u4e86\u751f\u6210\u4e13\u7528\u7684\u4f7f\u7528\u60c5\u51b5\u7edf\u8ba1\uff0c\u6240\u6536\u96c6\u7684\u8d44\u6599\\\\b\u6700\u591a\u4fdd\u5b58\u4e00\u5e74\\\\b0\u3002\u7edd\u4e0d\u4f1a\u4e3b\u52a8\u5c06\u8d44\u6599\u63d0\u4f9b\u7ed9\u7b2c\u4e09\u65b9\u3002\"",
          "1026: #. \u2022 MSG_185",
          "1027: msgid \"Update Process:\"",
          "1028: msgstr \"\u66f4\u65b0\u8fdb\u7a0b\uff1a\"",
          "1030: #. \u2022 MSG_186",
          "1031: msgid \"\"",
          "1032: \"Rufus does not install or run background services, therefore update checks are performed only when the main application is running.\\\\line\\n\"",
          "1033: \"Internet access is of course required when checking for updates.\"",
          "1034: msgstr \"\"",
          "1035: \"Rufus \u6ca1\u6709\u5b89\u88c5\u6216\u8fd0\u884c\u540e\u53f0\u670d\u52a1\uff0c\u56e0\u6b64\u66f4\u65b0\u68c0\u67e5\u4ec5\u5728\u4e3b\u7a0b\u5e8f\u8fd0\u884c\u65f6\u8fdb\u884c\u3002\\\\line\\n\"",
          "1036: \"\u5f53\u7136\u68c0\u67e5\u66f4\u65b0\u65f6\u9700\u8981\u7f51\u7edc\u8fde\u63a5\u3002\"",
          "1038: #. \u2022 MSG_187",
          "1039: msgid \"Invalid image for selected boot option\"",
          "1040: msgstr \"\u955c\u50cf\u5bf9\u9009\u62e9\u7684\u5f15\u5bfc\u9009\u9879\u65e0\u6548\"",
          "1042: #. \u2022 MSG_188",
          "1043: msgid \"The current image doesn't match the boot option selected. Please use a different image or choose a different boot option.\"",
          "1044: msgstr \"\u5f53\u524d\u955c\u50cf\u4e0d\u5339\u914d\u9009\u62e9\u7684\u5f15\u5bfc\u9009\u9879\u3002\u8bf7\u4f7f\u7528\u4e0d\u540c\u7684\u955c\u50cf\u6216\u9009\u62e9\u4e0d\u540c\u7684\u5f15\u5bfc\u9009\u9879\u3002\"",
          "1046: #. \u2022 MSG_189",
          "1047: msgid \"This ISO image is not compatible with the selected filesystem\"",
          "1048: msgstr \"\u8fd9\u4e2a ISO \u955c\u50cf\u4e0d\u517c\u5bb9\u9009\u62e9\u7684\u6587\u4ef6\u7cfb\u7edf\"",
          "1050: #. \u2022 MSG_190",
          "1051: msgid \"Incompatible drive detected\"",
          "1052: msgstr \"\u68c0\u6d4b\u5230\u4e0d\u517c\u5bb9\u7684\u9a71\u52a8\u5668\"",
          "1054: #. \u2022 MSG_191",
          "1055: #.",
          "1056: #. Used in MSG_235",
          "1057: msgid \"Write pass\"",
          "1058: msgstr \"\u5199\u5165\u6b21\u6570\"",
          "1060: #. \u2022 MSG_192",
          "1061: #.",
          "1062: #. Used in MSG_235",
          "1063: msgid \"Read pass\"",
          "1064: msgstr \"\u8bfb\u53d6\u6b21\u6570\"",
          "1066: #. \u2022 MSG_193",
          "1067: msgid \"Downloaded %s\"",
          "1068: msgstr \"\u5df2\u4e0b\u8f7d %s\"",
          "1070: #. \u2022 MSG_194",
          "1071: msgid \"Could not download %s\"",
          "1072: msgstr \"\u4e0d\u80fd\u4e0b\u8f7d %s\"",
          "1074: #. \u2022 MSG_195",
          "1075: #.",
          "1076: #. Example: \"Using embedded version of Grub2 file(s)\"",
          "1077: msgid \"Using embedded version of %s file(s)\"",
          "1078: msgstr \"\u4f7f\u7528 %s \u6587\u4ef6\u7684\u5d4c\u5165\u7248\u672c\"",
          "1080: #. \u2022 MSG_196",
          "1081: msgid \"\"",
          "1082: \"IMPORTANT: THIS DRIVE USES A NONSTANDARD SECTOR SIZE!\\n\"",
          "1083: \"\\n\"",
          "1084: \"Conventional drives use a 512-byte sector size but this drive uses a %d-byte one. In many cases, this means that you will NOT be able to boot from this drive.\\n\"",
          "1085: \"Rufus can try to create a bootable drive, but there is NO WARRANTY that it will work.\"",
          "1086: msgstr \"\"",
          "1087: \"\u91cd\u8981\u4e8b\u9879: \u672c\u9a71\u52a8\u5668\u4f7f\u7528\u4e86\u975e\u6807\u51c6\u7684\u6247\u533a\u5927\u5c0f!\\n\"",
          "1088: \"\\n\"",
          "1089: \"\u4f20\u7edf\u7684\u9a71\u52a8\u5668\u4f7f\u7528 512 \u5b57\u8282\u6247\u533a\u5927\u5c0f\u800c\u672c\u9a71\u52a8\u5668\u4f7f\u7528 %d \u5b57\u8282\u7684\u6247\u533a\u3002\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u5c06\u4e0d\u53ef\u4ee5\u4ece\u672c\u9a71\u52a8\u5668\u5f15\u5bfc\u3002\\n\"",
          "1090: \"Rufus \u53ef\u4ee5\u5c1d\u8bd5\u521b\u5efa\u4e00\u4e2a\u53ef\u5f15\u5bfc\u9a71\u52a8\u5668\uff0c\u4f46\u662f\u4e0d\u4fdd\u8bc1\u5b83\u6709\u6548\u3002\"",
          "1092: #. \u2022 MSG_197",
          "1093: msgid \"Nonstandard sector size detected\"",
          "1094: msgstr \"\u68c0\u6d4b\u5230\u975e\u6807\u51c6\u6247\u533a\u5927\u5c0f\"",
          "1096: #. \u2022 MSG_198",
          "1097: msgid \"'Windows To Go' can only be installed on a GPT partitioned drive if it has the FIXED attribute set. The current drive was not detected as FIXED.\"",
          "1098: msgstr \"'Windows To Go' \u53ea\u53ef\u4ee5\u5728\u4e00\u4e2a GPT \u5206\u533a\u7684\u62e5\u6709 FIXED \u5c5e\u6027\u8bbe\u7f6e\u7684\u9a71\u52a8\u5668\u4e0a\u5b89\u88c5\u5f53\u524d\u9a71\u52a8\u5668\u6ca1\u6709\u88ab\u68c0\u6d4b\u4e3a FIXED(\u56fa\u5b9a\u76d8)\u3002\"",
          "1100: #. \u2022 MSG_201",
          "1101: msgid \"Cancelling - Please wait...\"",
          "1102: msgstr \"\u53d6\u6d88\u4e2d - \u8bf7\u7a0d\u5019...\"",
          "1104: #. \u2022 MSG_202",
          "1105: msgid \"Scanning image...\"",
          "1106: msgstr \"\u6b63\u5728\u626b\u63cf\u955c\u50cf...\"",
          "1108: #. \u2022 MSG_203",
          "1109: msgid \"Failed to scan image\"",
          "1110: msgstr \"\u672a\u80fd\u626b\u63cf\u955c\u50cf\"",
          "1112: #. \u2022 MSG_204",
          "1113: #.",
          "1114: #. %s is the name of an obsolete Syslinux .c32 module. Example: \"Obsolete vesamenu.c32 detected\"",
          "1115: msgid \"Obsolete %s detected\"",
          "1116: msgstr \"\u68c0\u6d4b\u5230\u8fc7\u65f6\u7684 %s\"",
          "1118: #. \u2022 MSG_205",
          "1119: #.",
          "1120: #. Display the name of the image selected. eg: \"Using image: en_win7_x64_sp1.iso\"",
          "1121: msgid \"Using image: %s\"",
          "1122: msgstr \"\u6b63\u5728\u4f7f\u7528\u955c\u50cf\uff1a%s\"",
          "1124: #. \u2022 MSG_206",
          "1125: #.",
          "1126: #. Example: \"Missing ldlinux.c32 file\"",
          "1127: msgid \"Missing %s file\"",
          "1128: msgstr \"\u7f3a\u5c11 %s \u6587\u4ef6\"",
          "1130: #. \u2022 MSG_207",
          "1131: #.",
          "1132: #. The name proposed by Windows' Computer Management \u2192 Disk Management when you try to format",
          "1133: #. a drive with an empty label. For an example, see https://rufus.ie/pics/default_name.png.",
          "1134: msgid \"New Volume\"",
          "1135: msgstr \"\u65b0\u52a0\u5377\"",
          "1137: #. \u2022 MSG_208",
          "1138: #.",
          "1139: #. Singular. Example: \"1 device found\"",
          "1140: msgid \"%d device found\"",
          "1141: msgstr \"\u68c0\u6d4b\u5230 %d \u4e2a\u8bbe\u5907\"",
          "1143: #. \u2022 MSG_209",
          "1144: #.",
          "1145: #. Plural. Example: \"3 devices found\"",
          "1146: msgid \"%d devices found\"",
          "1147: msgstr \"\u68c0\u6d4b\u5230 %d \u4e2a\u8bbe\u5907\"",
          "1149: #. \u2022 MSG_210",
          "1150: msgid \"READY\"",
          "1151: msgstr \"\u51c6\u5907\u5c31\u7eea\"",
          "1153: #. \u2022 MSG_211",
          "1154: msgid \"Cancelled\"",
          "1155: msgstr \"\u5df2\u53d6\u6d88\"",
          "1157: #. \u2022 MSG_212",
          "1158: msgid \"Failed\"",
          "1159: msgstr \"\u64cd\u4f5c\u5931\u8d25\"",
          "1161: #. \u2022 MSG_213",
          "1162: #.",
          "1163: #. Used when a new update has been downloaded and launched",
          "1164: msgid \"Launching new application...\"",
          "1165: msgstr \"\u6b63\u5728\u542f\u52a8\u65b0\u7a0b\u5e8f...\"",
          "1167: #. \u2022 MSG_214",
          "1168: msgid \"Failed to launch new application\"",
          "1169: msgstr \"\u672a\u80fd\u542f\u52a8\u65b0\u7a0b\u5e8f\"",
          "1171: #. \u2022 MSG_215",
          "1172: #.",
          "1173: #. Example: \"Opened some_file.txt\"",
          "1174: msgid \"Opened %s\"",
          "1175: msgstr \"\u5df2\u6253\u5f00 %s\"",
          "1177: #. \u2022 MSG_216",
          "1178: #.",
          "1179: #. Example: \"Saved rufus.log\"",
          "1180: msgid \"Saved %s\"",
          "1181: msgstr \"\u5df2\u4fdd\u5b58 %s\"",
          "1183: #. \u2022 MSG_217",
          "1184: #.",
          "1185: #. Formatting status (make sure you use a double % to print the percent sign)",
          "1186: msgid \"Formatting: %0.1f%% completed\"",
          "1187: msgstr \"\u6b63\u5728\u683c\u5f0f\u5316\uff1a\u5df2\u5b8c\u6210 %0.1f%%\"",
          "1189: #. \u2022 MSG_218",
          "1190: msgid \"Creating file system: Task %d/%d completed\"",
          "1191: msgstr \"\u6b63\u5728\u521b\u5efa\u6587\u4ef6\u7cfb\u7edf\uff1a\u5df2\u5b8c\u6210 %d/%d \u9879\u4efb\u52a1\"",
          "1193: #. \u2022 MSG_219",
          "1194: msgid \"NTFS Fixup: %d%% completed\"",
          "1195: msgstr \"\u4fee\u590d NTFS\uff1a\u5df2\u5b8c\u6210 %d%%\"",
          "1197: #. \u2022 MSG_220",
          "1198: #.",
          "1199: #. Parameter: the file system and an estimated duration in mins and secs.",
          "1200: #. Example: \"Formatting (UDF) - Estimated duration 3:21...\"",
          "1201: #. If \"estimated duration\" is too long, just use \"estimated\" or an abbreviation",
          "1202: msgid \"Formatting (%s) - estimated duration %d:%02d...\"",
          "1203: msgstr \"\u6b63\u5728\u683c\u5f0f\u5316 (%s) - \u4f30\u8ba1\u5269\u4f59\u65f6\u95f4 %d:%02d...\"",
          "1205: #. \u2022 MSG_221",
          "1206: msgid \"Setting Label (This may take a while)...\"",
          "1207: msgstr \"\u6b63\u5728\u8bbe\u7f6e\u5377\u6807\uff0c\u8bf7\u8010\u5fc3\u7b49\u5f85...\"",
          "1209: #. \u2022 MSG_222",
          "1210: #.",
          "1211: #. Example: \"Formatting (FAT32)...\"",
          "1212: msgid \"Formatting (%s)...\"",
          "1213: msgstr \"\u6b63\u5728\u683c\u5f0f\u5316 (%s)...\"",
          "1215: #. \u2022 MSG_223",
          "1216: msgid \"NTFS Fixup (Checkdisk)...\"",
          "1217: msgstr \"\u4fee\u590d NTFS (Checkdisk)...\"",
          "1219: #. \u2022 MSG_224",
          "1220: msgid \"Clearing MBR/PBR/GPT structures...\"",
          "1221: msgstr \"\u6b63\u5728\u6e05\u9664 MBR/PBR/GPT \u67b6\u6784...\"",
          "1223: #. \u2022 MSG_225",
          "1224: msgid \"Requesting disk access...\"",
          "1225: msgstr \"\u6b63\u5728\u8bf7\u6c42\u78c1\u76d8\u8bbf\u95ee...\"",
          "1227: #. \u2022 MSG_226",
          "1228: msgid \"Analyzing existing boot records...\"",
          "1229: msgstr \"\u6b63\u5728\u5206\u6790\u73b0\u6709\u5f15\u5bfc\u8bb0\u5f55...\"",
          "1231: #. \u2022 MSG_227",
          "1232: msgid \"Closing existing volume...\"",
          "1233: msgstr \"\u6b63\u5728\u5173\u95ed\u73b0\u6709\u5377...\"",
          "1235: #. \u2022 MSG_228",
          "1236: msgid \"Writing master boot record...\"",
          "1237: msgstr \"\u6b63\u5728\u5199\u5165\u4e3b\u5f15\u5bfc\u8bb0\u5f55...\"",
          "1239: #. \u2022 MSG_229",
          "1240: msgid \"Writing partition boot record...\"",
          "1241: msgstr \"\u6b63\u5728\u5199\u5165\u5206\u533a\u5f15\u5bfc\u8bb0\u5f55...\"",
          "1243: #. \u2022 MSG_230",
          "1244: msgid \"Copying DOS files...\"",
          "1245: msgstr \"\u6b63\u5728\u590d\u5236 DOS \u6587\u4ef6...\"",
          "1247: #. \u2022 MSG_231",
          "1248: msgid \"Copying ISO files...\"",
          "1249: msgstr \"\u6b63\u5728\u590d\u5236 ISO \u6587\u4ef6...\"",
          "1251: #. \u2022 MSG_232",
          "1252: msgid \"Win7 EFI boot setup (This may take a while)...\"",
          "1253: msgstr \"Win7 EFI \u5f15\u5bfc\u5b89\u88c5(\u8fd9\u53ef\u80fd\u9700\u8981\u4e00\u6bb5\u65f6\u95f4)...\"",
          "1255: #. \u2022 MSG_233",
          "1256: msgid \"Finalizing, please wait...\"",
          "1257: msgstr \"\u5b8c\u6210\u4e2d\uff0c\u8bf7\u7a0d\u5019...\"",
          "1259: #. \u2022 MSG_234",
          "1260: #.",
          "1261: #. Takes a Syslinux version as parameter.",
          "1262: #. Example: \"Installing Syslinux v5.10...\"",
          "1263: msgid \"Installing Syslinux %s...\"",
          "1264: msgstr \"\u6b63\u5728\u5b89\u88c5 Syslinux %s...\"",
          "1266: #. \u2022 MSG_235",
          "1267: #.",
          "1268: #. Bad blocks status. Example: \"Bad Blocks: Write pass 1/2 - 12.34% (0/0/1 errors)\"",
          "1269: #. See MSG_191 & MSG_192 for \"Write pass\"/\"Read pass\" translation.",
          "1270: msgid \"Bad Blocks: %s %d/%d - %0.2f%% (%d/%d/%d errors)\"",
          "1271: msgstr \"\u68c0\u67e5\u574f\u5757\uff1a%s \u7b2c %d/%d \u904d - %0.2f%% (%d/%d/%d \u9519\u8bef)\"",
          "1273: #. \u2022 MSG_236",
          "1274: msgid \"Bad Blocks: Testing with random pattern\"",
          "1275: msgstr \"\u68c0\u67e5\u574f\u5757\uff1a\u6b63\u5728\u4f7f\u7528\u968f\u673a\u6a21\u5f0f\u6d4b\u8bd5\"",
          "1277: #. \u2022 MSG_237",
          "1278: msgid \"Bad Blocks: Testing with pattern 0x%02X\"",
          "1279: msgstr \"\u68c0\u67e5\u574f\u5757\uff1a\u6b63\u5728\u4f7f\u7528\u6a21\u5f0f 0x%02X \u6d4b\u8bd5\"",
          "1281: #. \u2022 MSG_238",
          "1282: #.",
          "1283: #. Example: \"Partitioning (MBR)...\"",
          "1284: msgid \"Partitioning (%s)...\"",
          "1285: msgstr \"\u6b63\u5728\u5206\u533a (%s)...\"",
          "1287: #. \u2022 MSG_239",
          "1288: msgid \"Deleting partitions...\"",
          "1289: msgstr \"\u6b63\u5728\u5220\u9664\u5206\u533a...\"",
          "1291: #. \u2022 MSG_240",
          "1292: #.",
          "1293: #. This message has to do with the signature validation that Rufus uses when downloading an update.",
          "1294: msgid \"\"",
          "1295: \"The signature for the downloaded update can not be validated. This could mean that your system is improperly configured for signature validation or indicate a malicious download.\\n\"",
          "1296: \"\\n\"",
          "1297: \"The download will be deleted. Please check the log for more details.\"",
          "1298: msgstr \"\"",
          "1299: \"\u4e0b\u8f7d\u7684\u66f4\u65b0\u7b7e\u540d\u6821\u9a8c\u5931\u8d25\uff0c\u8fd9\u8868\u660e\u60a8\u7684\u7cfb\u7edf\u914d\u7f6e\u5f02\u5e38\u6216\u6536\u5230\u6076\u610f\u653b\u51fb\u3002\\n\"",
          "1300: \"\\n\"",
          "1301: \"\u4e0b\u8f7d\u6587\u4ef6\u5df2\u88ab\u5220\u9664\u3002\u8be6\u7ec6\u4fe1\u606f\u8bf7\u67e5\u770b\u65e5\u5fd7\u3002\"",
          "1303: #. \u2022 MSG_241",
          "1304: msgid \"Downloading: %0.1f%%\"",
          "1305: msgstr \"\u6b63\u5728\u4e0b\u8f7d\uff1a%0.1f%%\"",
          "1307: #. \u2022 MSG_242",
          "1308: msgid \"Failed to download file.\"",
          "1309: msgstr \"\u672a\u80fd\u4e0b\u8f7d\u6587\u4ef6\u3002\"",
          "1311: #. \u2022 MSG_243",
          "1312: msgid \"Checking for Rufus updates...\"",
          "1313: msgstr \"\u6b63\u5728\u68c0\u67e5 Rufus \u66f4\u65b0...\"",
          "1315: #. \u2022 MSG_244",
          "1316: msgid \"Updates: Unable to connect to the internet\"",
          "1317: msgstr \"\u66f4\u65b0\uff1a\u65e0\u6cd5\u8fde\u63a5\u5230\u7f51\u7edc\"",
          "1319: #. \u2022 MSG_245",
          "1320: msgid \"Updates: Unable to access version data\"",
          "1321: msgstr \"\u66f4\u65b0\uff1a\u65e0\u6cd5\u8bbf\u95ee\u7248\u672c\u6570\u636e\"",
          "1323: #. \u2022 MSG_246",
          "1324: msgid \"A new version of Rufus is available!\"",
          "1325: msgstr \"\u68c0\u67e5\u5230\u53ef\u7528\u7684\u65b0\u7248\u672c Rufus\uff01\"",
          "1327: #. \u2022 MSG_247",
          "1328: msgid \"No new version of Rufus was found\"",
          "1329: msgstr \"\u627e\u4e0d\u5230\u65b0\u7248\u672c\u7684 Rufus\"",
          "1331: #. \u2022 MSG_248",
          "1332: msgid \"Application registry keys successfully deleted\"",
          "1333: msgstr \"\u5df2\u6210\u529f\u5220\u9664\u7a0b\u5e8f\u6ce8\u518c\u8868\u952e\"",
          "1335: #. \u2022 MSG_249",
          "1336: msgid \"Failed to delete application registry keys\"",
          "1337: msgstr \"\u672a\u80fd\u5220\u9664\u7a0b\u5e8f\u6ce8\u518c\u8868\u952e\"",
          "1339: #. \u2022 MSG_250",
          "1340: #.",
          "1341: #. Example: \"Fixed disk detection enabled\", \"ISO size check disabled\", etc.",
          "1342: msgid \"%s enabled\"",
          "1343: msgstr \"%s \u5df2\u542f\u7528\"",
          "1345: #. \u2022 MSG_251",
          "1346: msgid \"%s disabled\"",
          "1347: msgstr \"%s \u5df2\u7981\u7528\"",
          "1349: #. \u2022 MSG_252",
          "1350: msgid \"Size checks\"",
          "1351: msgstr \"\u5927\u5c0f\u68c0\u67e5\"",
          "1353: #. \u2022 MSG_253",
          "1354: msgid \"Hard disk detection\"",
          "1355: msgstr \"\u786c\u76d8\u68c0\u6d4b\"",
          "1357: #. \u2022 MSG_254",
          "1358: msgid \"Force large FAT32 formatting\"",
          "1359: msgstr \"\u5f3a\u5236\u5927 FAT32 \u683c\u5f0f\u5316\"",
          "1361: #. \u2022 MSG_255",
          "1362: msgid \"NoDriveTypeAutorun will be deleted on exit\"",
          "1363: msgstr \"\u5728\u9000\u51fa\u65f6\u5c06\u4f1a\u5220\u9664 NoDriveTypeAutorun \u6ce8\u518c\u8868\u952e\"",
          "1365: #. \u2022 MSG_256",
          "1366: msgid \"Fake drive detection\"",
          "1367: msgstr \"\u68c0\u6d4b\u6269\u5bb9\u76d8\"",
          "1369: #. \u2022 MSG_257",
          "1370: msgid \"Joliet support\"",
          "1371: msgstr \"Joliet \u652f\u6301\"",
          "1373: #. \u2022 MSG_258",
          "1374: msgid \"Rock Ridge support\"",
          "1375: msgstr \"Rock Ridge \u652f\u6301\"",
          "1377: #. \u2022 MSG_259",
          "1378: msgid \"Force update\"",
          "1379: msgstr \"\u5f3a\u5236\u66f4\u65b0\"",
          "1381: #. \u2022 MSG_260",
          "1382: msgid \"NTFS compression\"",
          "1383: msgstr \"NTFS \u538b\u7f29\"",
          "1385: #. \u2022 MSG_261",
          "1386: msgid \"Writing image: %0.1f%% completed\"",
          "1387: msgstr \"\u6b63\u5728\u5199\u5165\u955c\u50cf\uff1a\u5df2\u5b8c\u6210 %0.1f%%\"",
          "1389: #. \u2022 MSG_262",
          "1390: #.",
          "1391: #. Cheat mode message to disable ISO Support, so that only DD images can be opened",
          "1392: msgid \"ISO Support\"",
          "1393: msgstr \"ISO \u955c\u50cf\u652f\u6301\"",
          "1395: #. \u2022 MSG_263",
          "1396: #.",
          "1397: #. Cheat mode to force legacy size units, where 1 KB is 1024 bytes and NOT that fake 1000 bytes abomination!",
          "1398: msgid \"Use PROPER size units\"",
          "1399: msgstr \"\u4f7f\u7528\u6070\u5f53\u7684\u5927\u5c0f\u5355\u4f4d\"",
          "1401: #. \u2022 MSG_264",
          "1402: msgid \"Deleting directory '%s'\"",
          "1403: msgstr \"\u6b63\u5728\u5220\u9664\u76ee\u5f55 '%s'\"",
          "1405: #. \u2022 MSG_265",
          "1406: msgid \"VMWare disk detection\"",
          "1407: msgstr \"VMWare \u78c1\u76d8\u68c0\u6d4b\"",
          "1409: #. \u2022 MSG_266",
          "1410: msgid \"Dual UEFI/BIOS mode\"",
          "1411: msgstr \"\u53cc UEFI/BIOS \u6a21\u5f0f\"",
          "1413: #. \u2022 MSG_267",
          "1414: msgid \"Applying Windows image: %0.1f%% completed\"",
          "1415: msgstr \"\u6b63\u5728\u5e94\u7528 Windows \u955c\u50cf: \u5df2\u5b8c\u6210 %0.1f%%\"",
          "1417: #. \u2022 MSG_268",
          "1418: msgid \"Applying Windows image...\"",
          "1419: msgstr \"\u6b63\u5728\u5e94\u7528 Windows \u955c\u50cf...\"",
          "1421: #. \u2022 MSG_269",
          "1422: msgid \"Preserve timestamps\"",
          "1423: msgstr \"\u4fdd\u7559\u65f6\u95f4\u6807\u8bb0\"",
          "1425: #. \u2022 MSG_270",
          "1426: msgid \"USB debug\"",
          "1427: msgstr \"USB \u8c03\u8bd5\"",
          "1429: #. \u2022 MSG_271",
          "1430: msgid \"Computing image checksums: %0.1f%% completed\"",
          "1431: msgstr \"\u6b63\u5728\u8ba1\u7b97\u955c\u50cf\u6821\u9a8c\u548c: \u5df2\u5b8c\u6210 %0.1f%%\"",
          "1433: #. \u2022 MSG_272",
          "1434: msgid \"Compute the MD5, SHA1 and SHA256 checksums for the selected image\"",
          "1435: msgstr \"\u8ba1\u7b97\u6240\u9009\u955c\u50cf\u7684 MD5, SHA1 \u548c SHA256 \u7684\u6821\u9a8c\u548c\"",
          "1437: #. \u2022 MSG_273",
          "1438: msgid \"Change the application language\"",
          "1439: msgstr \"\u8bed\u8a00\"",
          "1441: #. \u2022 MSG_274",
          "1442: msgid \"ISOHybrid image detected\"",
          "1443: msgstr \"\u68c0\u6d4b\u5230 ISOHybrid \u955c\u50cf\"",
          "1445: #. \u2022 MSG_275",
          "1446: #.",
          "1447: #. '%s' will be replaced with your translations for MSG_036 (\"ISO Image\") and MSG_095 (\"DD Image\")",
          "1448: msgid \"\"",
          "1449: \"The image you have selected is an 'ISOHybrid' image. This means it can be written either in %s (file copy) mode or %s (disk image) mode.\\n\"",
          "1450: \"Rufus recommends using %s mode, so that you always have full access to the drive after writing it.\\n\"",
          "1451: \"However, if you encounter issues during boot, you can try writing this image again in %s mode.\\n\"",
          "1452: \"\\n\"",
          "1453: \"Please select the mode that you want to use to write this image:\"",
          "1454: msgstr \"\"",
          "1455: \"\u60a8\u9009\u62e9\u7684\u955c\u50cf\u662f\u4e00\u4e2a 'ISOHybrid' (\u6df7\u5408\u5f0f)\u955c\u50cf\u3002\u8fd9\u610f\u5473\u7740\u5b83\u53ef\u4ee5\u4ee5%s (\u6587\u4ef6\u590d\u5236) \u6a21\u5f0f\u6216 %s (\u78c1\u76d8) \u955c\u50cf\u6a21\u5f0f\u5199\u5165\u3002\\n\"",
          "1456: \"Rufus \u63a8\u8350\u4f7f\u7528 %s \u6a21\u5f0f\uff0c\u4ee5\u4fbf\u60a8\u5728\u5199\u5165\u5b83\u4e4b\u540e\u603b\u662f\u53ef\u4ee5\u5bf9\u9a71\u52a8\u5668\u6709\u5b8c\u5168\u7684\u8bbf\u95ee\u6743\u3002\\n\"",
          "1457: \"\u5c3d\u7ba1\u5982\u6b64\uff0c\u5982\u679c\u60a8\u5728\u5f15\u5bfc\u65f6\u9047\u5230\u95ee\u9898\uff0c\u60a8\u53ef\u4ee5\u5c1d\u8bd5\u4ee5 %s \u6a21\u5f0f\u518d\u6b21\u5199\u5165\u8fd9\u4e2a\u955c\u50cf\u3002\\n\"",
          "1458: \"\\n\"",
          "1459: \"\u8bf7\u9009\u62e9\u60a8\u60f3\u7528\u4e8e\u5199\u5165\u8fd9\u4e2a\u955c\u50cf\u6240\u4f7f\u7528\u7684\u6a21\u5f0f:\"",
          "1461: #. \u2022 MSG_276",
          "1462: #.",
          "1463: #. '%s' will be replaced with your translation for MSG_036 (\"ISO Image\")",
          "1464: msgid \"Write in %s mode (Recommended)\"",
          "1465: msgstr \"\u4ee5 %s \u6a21\u5f0f\u5199\u5165(\u63a8\u8350)\"",
          "1467: #. \u2022 MSG_277",
          "1468: #.",
          "1469: #. '%s' will be replaced with your translation for MSG_095 (\"DD Image\")",
          "1470: msgid \"Write in %s mode\"",
          "1471: msgstr \"\u4ee5 %s \u6a21\u5f0f\u5199\u5165\"",
          "1473: #. \u2022 MSG_278",
          "1474: msgid \"Checking for conflicting processes...\"",
          "1475: msgstr \"\u68c0\u6d4b\u51b2\u7a81\u8fdb\u7a0b\u4e2d...\"",
          "1477: #. \u2022 MSG_279",
          "1478: msgid \"Non bootable\"",
          "1479: msgstr \"\u975e\u53ef\u5f15\u5bfc\"",
          "1481: #. \u2022 MSG_280",
          "1482: msgid \"Disk or ISO image\"",
          "1483: msgstr \"\u955c\u50cf\u6587\u4ef6\"",
          "1485: #. \u2022 MSG_281",
          "1486: msgid \"%s (Please select)\"",
          "1487: msgstr \"%s (\u8bf7\u9009\u62e9)\"",
          "1489: #. \u2022 MSG_282",
          "1490: msgid \"Exclusive USB drive locking\"",
          "1491: msgstr \"\u72ec\u5360 USB \u9a71\u52a8\u5668\u9501\u5b9a\"",
          "1493: #. \u2022 MSG_283",
          "1494: msgid \"Invalid signature\"",
          "1495: msgstr \"\u65e0\u6548\u7b7e\u540d\"",
          "1497: #. \u2022 MSG_284",
          "1498: msgid \"The downloaded executable is missing a digital signature.\"",
          "1499: msgstr \"\u5df2\u4e0b\u8f7d\u7684\u53ef\u6267\u884c\u6587\u4ef6\u7f3a\u5c11\u4e00\u4e2a\u6570\u5b57\u7b7e\u540d\u3002\"",
          "1501: #. \u2022 MSG_285",
          "1502: msgid \"\"",
          "1503: \"The downloaded executable is signed by '%s'.\\n\"",
          "1504: \"This is not a signature we recognize and could indicate some form of malicious activity...\\n\"",
          "1505: \"Are you sure you want to run this file?\"",
          "1506: msgstr \"\"",
          "1507: \"\u5df2\u4e0b\u8f7d\u7684\u53ef\u6267\u884c\u6587\u4ef6\u662f\u7531 '%s' \u7b7e\u7f72\u7684\u3002\\n\"",
          "1508: \"\u8fd9\u4e2a\u4e0d\u662f\u6211\u4eec\u80fd\u591f\u8bc6\u522b\u7684\u7b7e\u540d\uff0c\u800c\u4e14\u8fd9\u4e2a\u53ef\u80fd\u610f\u5473\u7740\u67d0\u79cd\u5f62\u5f0f\u7684\u6076\u610f\u6d3b\u52a8...\\n\"",
          "1509: \"\u60a8\u662f\u5426\u786e\u8ba4\u60a8\u60f3\u8fd0\u884c\u8fd9\u4e2a\u6587\u4ef6?\"",
          "1511: #. \u2022 MSG_286",
          "1512: msgid \"Zeroing drive: %0.1f%% completed\"",
          "1513: msgstr \"\u6b63\u5728\u6e05\u7a7a\u78c1\u76d8: %0.1f%% \u5df2\u5b8c\u6210\"",
          "1515: #. \u2022 MSG_287",
          "1516: msgid \"Detection of non-USB removable drives\"",
          "1517: msgstr \"\u68c0\u6d4b\u975eUSB\u7684\u53ef\u79fb\u9664\u8bbe\u5907\"",
          "1519: #. \u2022 MSG_288",
          "1520: msgid \"Missing elevated privileges\"",
          "1521: msgstr \"\u7f3a\u5c11\u7ba1\u7406\u5458\u6743\u9650\"",
          "1523: #. \u2022 MSG_289",
          "1524: msgid \"This application can only run with elevated privileges\"",
          "1525: msgstr \"\u6b64\u7a0b\u5e8f\u53ea\u80fd\u4ee5\u7ba1\u7406\u5458\u6743\u9650\u6267\u884c\"",
          "1527: #. \u2022 MSG_290",
          "1528: msgid \"File Indexing\"",
          "1529: msgstr \"\u6587\u4ef6\u7d22\u5f15\"",
          "1531: #. \u2022 MSG_291",
          "1532: msgid \"Version selection\"",
          "1533: msgstr \"\u7248\u672c\u9009\u62e9\"",
          "1535: #. \u2022 MSG_292",
          "1536: msgid \"Please select the version of Windows you want to install:\"",
          "1537: msgstr \"\u8bf7\u9009\u62e9\u4f60\u8981\u5b89\u88c5\u7684 Windows \u7248\u672c:\"",
          "1539: #. \u2022 MSG_293",
          "1540: msgid \"Unsupported Windows version\"",
          "1541: msgstr \"\u4e0d\u652f\u6301\u7684 Windows \u7248\u672c\"",
          "1543: #. \u2022 MSG_294",
          "1544: msgid \"This version of Windows is no longer supported by Rufus.\"",
          "1545: msgstr \"Rufus \u5df2\u4e0d\u518d\u652f\u6301\u6b64 Windows \u7248\u672c\u3002\"",
          "1547: #. \u2022 MSG_295",
          "1548: msgid \"Warning: Unofficial version\"",
          "1549: msgstr \"\u8b66\u544a\uff1a\u975e\u5b98\u65b9\u7248\u672c\"",
          "1551: #. \u2022 MSG_296",
          "1552: msgid \"\"",
          "1553: \"This version of Rufus was not produced by its official developer(s).\\n\"",
          "1554: \"\\n\"",
          "1555: \"Are you sure you want to run it?\"",
          "1556: msgstr \"\"",
          "1557: \"\u6b64\u7248\u672c\u7684 Rufus \u4e0d\u662f\u7531\u5b98\u65b9\u5f00\u53d1\u8005\u53d1\u5e03\u7684\u3002\\n\"",
          "1558: \"\\n\"",
          "1559: \"\u60a8\u786e\u5b9a\u8981\u8fd0\u884c\u5b83\u5417\uff1f\"",
          "1561: #. \u2022 MSG_297",
          "1562: msgid \"Truncated ISO detected\"",
          "1563: msgstr \"\u68c0\u6d4b\u5230\u4e0d\u5b8c\u6574\u955c\u50cf\"",
          "1565: #. \u2022 MSG_298",
          "1566: msgid \"\"",
          "1567: \"The ISO file you have selected does not match its declared size: %s of data is missing!\\n\"",
          "1568: \"\\n\"",
          "1569: \"If you obtained this file from the Internet, you should try to download a new copy and verify that the MD5 or SHA checksums match the official ones.\\n\"",
          "1570: \"\\n\"",
          "1571: \"Note that you can compute the MD5 or SHA in Rufus by clicking the (\u2713) button.\"",
          "1572: msgstr \"\"",
          "1573: \"\u60a8\u9009\u62e9\u7684\u955c\u50cf\u6587\u4ef6\u5927\u5c0f\u4e0e\u5176\u671f\u671b\u5927\u5c0f\u4e0d\u7b26\uff1a %s \u6570\u636e\u7f3a\u5931\uff01\\n\"",
          "1574: \"\\n\"",
          "1575: \"\u5982\u679c\u6b64\u955c\u50cf\u6587\u4ef6\u4e0b\u8f7d\u81ea\u4e92\u8054\u7f51\uff0c\u8bf7\u91cd\u65b0\u4e0b\u8f7d\u5e76\u6821\u9a8c\u5176 MD5 \u6216 SHA \u6821\u9a8c\u548c\u3002\\n\"",
          "1576: \"\\n\"",
          "1577: \"\u60a8\u53ef\u5728 Rufus \u4e2d\u70b9\u51fb (\u2713) \u952e\u6765\u8ba1\u7b97 MD5 \u6216 SHA \u6821\u9a8c\u548c\u3002\"",
          "1579: #. \u2022 MSG_299",
          "1580: msgid \"Timestamp validation error\"",
          "1581: msgstr \"\u65f6\u95f4\u6233\u6821\u9a8c\u9519\u8bef\"",
          "1583: #. \u2022 MSG_300",
          "1584: msgid \"\"",
          "1585: \"Rufus could not validate that the timestamp of the downloaded update is more recent than the one for the current executable.\\n\"",
          "1586: \"\\n\"",
          "1587: \"In order to prevent potential attack scenarios, the update process has been aborted and the download will be deleted. Please check the log for more details.\"",
          "1588: msgstr \"\"",
          "1589: \"Rufus \u4e0b\u8f7d\u7684\u66f4\u65b0\u6bd4\u5f53\u524d\u7a0b\u5e8f\u66f4\u65e7\u3002\\n\"",
          "1590: \"\\n\"",
          "1591: \"\u4e3a\u907f\u514d\u53ef\u80fd\u7684\u653b\u51fb\uff0c\u66f4\u65b0\u5df2\u88ab\u963b\u6b62\uff0c\u4e0b\u8f7d\u7684\u66f4\u65b0\u6587\u4ef6\u5df2\u88ab\u5220\u9664\u3002\u5982\u9700\u4e86\u89e3\u66f4\u591a\uff0c\u8bf7\u67e5\u770b\u8f6f\u4ef6\u65e5\u5fd7\u3002\"",
          "1593: #. \u2022 MSG_301",
          "1594: msgid \"Show application settings\"",
          "1595: msgstr \"\u8bbe\u7f6e\"",
          "1597: #. \u2022 MSG_302",
          "1598: msgid \"Show information about this application\"",
          "1599: msgstr \"\u5173\u4e8e\"",
          "1601: #. \u2022 MSG_303",
          "1602: msgid \"Show the log\"",
          "1603: msgstr \"\u65e5\u5fd7\"",
          "1605: #. \u2022 MSG_304",
          "1606: msgid \"Create a disk image of the selected device\"",
          "1607: msgstr \"\u521b\u5efa\u6240\u9009\u8bbe\u5907\u7684\u955c\u50cf\"",
          "1609: #. \u2022 MSG_305",
          "1610: msgid \"Use this option to indicate whether you want to use this device to install Windows on another disk, or if you want to run Windows directly from this drive (Windows To Go).\"",
          "1611: msgstr \"\u8bf7\u9009\u62e9\u60a8\u5e0c\u671b\u5c06 Windows \u5b89\u88c5\u81f3\u5176\u4ed6\u9a71\u52a8\u5668\uff0c\u8fd8\u662f\u76f4\u63a5\u4ece\u6b64\u9a71\u52a8\u5668\u8fd0\u884c(\u5373 Windows To Go)\u3002\"",
          "1613: #. \u2022 MSG_306",
          "1614: #.",
          "1615: #. You can see this status message by pressing <Ctrl>-<Alt>-<Z> and then selecting START.",
          "1616: #. It's the same as MSG_286 but with a process that *may* be faster, hence the name.",
          "1617: msgid \"Fast-zeroing drive: %0.1f%% completed\"",
          "1618: msgstr \"\u6b63\u5728\u5feb\u901f\u6e05\u7a7a\u78c1\u76d8: %0.1f%% \u5df2\u5b8c\u6210\"",
          "",
          "---------------"
        ],
        "res/loc/rufus.loc||res/loc/rufus.loc": [
          "File: res/loc/rufus.loc -> res/loc/rufus.loc",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: # \u2022 v3.2  \"ar-SA\" \"Arabic (\u0627\u0644\u0639\u0631\u0628\u064a\u0629)\"",
          "8: # \u2022 v3.0  \"az-AZ\" \"Azerbaijani (Az\u0259rbaycanca)\"",
          "9: # \u2022 v2.16 \"bg-BG\" \"Bulgarian (\u0411\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438)\"",
          "11: # \u2022 v3.2  \"zh-TW\" \"Chinese Traditional (\u6b63\u9ad4\u4e2d\u6587)\"",
          "12: # \u2022 v3.0  \"hr-HR\" \"Croatian (Hrvatski)\"",
          "13: # \u2022 v3.2  \"cs-CZ\" \"Czech (\u010ce\u0161tina)\"",
          "",
          "[Removed Lines]",
          "10: # \u2022 v3.0  \"zh-CN\" \"Chinese Simplified (\u7b80\u4f53\u4e2d\u6587)\"",
          "",
          "[Added Lines]",
          "10: # \u2022 v3.2  \"zh-CN\" \"Chinese Simplified (\u7b80\u4f53\u4e2d\u6587)\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1690: #########################################################################",
          "1691: l \"zh-CN\" \"Chinese Simplified (\u7b80\u4f53\u4e2d\u6587)\" 0x0804, 0x1004",
          "1693: b \"en-US\"",
          "1695: g IDD_DIALOG",
          "1696: t IDS_DRIVE_PROPERTIES_TXT \"\u8bbe\u5907\u9009\u9879\"",
          "1697: t IDS_DEVICE_TXT \"\u8bbe\u5907\"",
          "",
          "[Removed Lines]",
          "1692: v 3.0",
          "",
          "[Added Lines]",
          "1692: v 3.2",
          "1695: g IDD_ABOUTBOX",
          "1696: t IDD_ABOUTBOX \"\u5173\u4e8e Rufus\"",
          "1697: t IDC_ABOUT_LICENSE \"\u8bb8\u53ef\"",
          "1698: t IDOK \"\u786e\u5b9a\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1700: t IDS_IMAGE_OPTION_TXT \"\u955c\u50cf\u9009\u9879\"",
          "1701: t IDS_PARTITION_TYPE_TXT \"\u5206\u533a\u7c7b\u578b\"",
          "1702: t IDS_TARGET_SYSTEM_TXT \"\u76ee\u6807\u7cfb\u7edf\u7c7b\u578b\"",
          "1703: t IDS_FILE_SYSTEM_TXT \"\u6587\u4ef6\u7cfb\u7edf\"",
          "1704: t IDS_CLUSTER_SIZE_TXT \"\u7c07\u5927\u5c0f\"",
          "1705: t IDS_LABEL_TXT \"\u5377\u6807\"",
          "1708: t IDC_QUICK_FORMAT \"\u5feb\u901f\u683c\u5f0f\u5316\"",
          "1709: t IDC_EXTENDED_LABEL \"\u521b\u5efa\u6269\u5c55\u7684\u6807\u7b7e\u548c\u56fe\u6807\u6587\u4ef6\"",
          "1710: t IDS_STATUS_TXT \"\u72b6\u6001\"",
          "1711: t IDCANCEL \"\u5173\u95ed\"",
          "1712: t IDC_START \"\u5f00\u59cb\"",
          "1722: g IDD_LICENSE",
          "1724: t IDCANCEL \"\u5173\u95ed\"",
          "1731: g IDD_LOG",
          "1732: t IDD_LOG \"\u65e5\u5fd7\"",
          "1733: t IDC_LOG_CLEAR \"\u6e05\u9664\"",
          "1734: t IDC_LOG_SAVE \"\u4fdd\u5b58\"",
          "1745: g IDD_NEW_VERSION",
          "1746: t IDD_NEW_VERSION \"\u68c0\u67e5\u66f4\u65b0 - Rufus\"",
          "1747: t IDS_NEW_VERSION_AVAIL_TXT \"\u6709\u66f4\u65b0\u7248\u672c\u53ef\u7528\u3002\u8bf7\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\uff01\"",
          "1748: t IDC_WEBSITE \"\u70b9\u51fb\u8fd9\u91cc\u8f6c\u5230\u7f51\u7ad9\"",
          "1749: t IDS_NEW_VERSION_NOTES_GRP \"\u53d1\u884c\u8bf4\u660e\"",
          "1750: t IDS_NEW_VERSION_DOWNLOAD_GRP \"\u4e0b\u8f7d\"",
          "1751: t IDC_DOWNLOAD \"\u4e0b\u8f7d\"",
          "1752: t IDCANCEL \"\u5173\u95ed\"",
          "1754: t MSG_001 \"\u68c0\u6d4b\u5230\u5176\u5b83\u8fdb\u7a0b\"",
          "1755: t MSG_002 \"\u53e6\u4e00\u4e2a Rufus \u5e94\u7528\u7a0b\u5e8f\u6b63\u5728\u8fd0\u884c\u3002\\n\u8bf7\u5728\u8fd0\u884c\u53e6\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u524d\u5173\u95ed\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\u3002\"",
          "",
          "[Removed Lines]",
          "1706: t IDS_FORMAT_OPTIONS_TXT \"\u683c\u5f0f\u5316\u9009\u9879\"",
          "1707: t IDC_BAD_BLOCKS \"\u68c0\u67e5\u8bbe\u5907\u574f\u5757\"",
          "1713: t IDC_LIST_USB_HDD \"\u663e\u793a USB \u5916\u7f6e\u786c\u76d8\"",
          "1714: t IDC_OLD_BIOS_FIXES \"\u6dfb\u52a0\u5bf9\u65e7 BIOS \u4fee\u6b63(\u989d\u5916\u7684\u5206\u533a\uff0c\u6821\u51c6\u7b49)\"",
          "1715: t IDC_RUFUS_MBR \"\u4f7f\u7528 Rufus MBR \u914d\u5408 BIOS ID\"",
          "1717: g IDD_ABOUTBOX",
          "1718: t IDD_ABOUTBOX \"\u5173\u4e8e Rufus\"",
          "1719: t IDC_ABOUT_LICENSE \"\u8bb8\u53ef\"",
          "1720: t IDOK \"\u786e\u5b9a\"",
          "1723: t IDD_LICENSE \"Rufus \u8bb8\u53ef\"",
          "1726: g IDD_NOTIFICATION",
          "1727: t IDC_MORE_INFO \"\u66f4\u591a\u4fe1\u606f\"",
          "1728: t IDYES \"\u662f\"",
          "1729: t IDNO \"\u5426\"",
          "1735: t IDCANCEL \"\u5173\u95ed\"",
          "1737: g IDD_UPDATE_POLICY",
          "1738: t IDD_UPDATE_POLICY \"\u66f4\u65b0\u7b56\u7565\u548c\u8bbe\u7f6e\"",
          "1739: t IDS_UPDATE_SETTINGS_GRP \"\u8bbe\u7f6e\"",
          "1740: t IDS_UPDATE_FREQUENCY_TXT \"\u68c0\u67e5\u66f4\u65b0\"",
          "1741: t IDS_INCLUDE_BETAS_TXT \"\u5305\u62ec\u6d4b\u8bd5\u7248\u672c\"",
          "1742: t IDC_CHECK_NOW \"\u7acb\u5373\u68c0\u67e5\"",
          "1743: t IDCANCEL \"\u5173\u95ed\"",
          "",
          "[Added Lines]",
          "1708: t IDC_LIST_USB_HDD \"\u663e\u793a USB \u5916\u7f6e\u786c\u76d8\"",
          "1709: t IDC_OLD_BIOS_FIXES \"\u6dfb\u52a0\u5bf9\u65e7 BIOS \u4fee\u6b63(\u989d\u5916\u7684\u5206\u533a\uff0c\u6821\u51c6\u7b49)\"",
          "1710: t IDC_RUFUS_MBR \"\u4f7f\u7528 Rufus MBR \u914d\u5408 BIOS ID\"",
          "1711: t IDS_FORMAT_OPTIONS_TXT \"\u683c\u5f0f\u5316\u9009\u9879\"",
          "1716: t IDC_BAD_BLOCKS \"\u68c0\u67e5\u8bbe\u5907\u574f\u5757\"",
          "1724: t IDD_LICENSE \"Rufus \u8bb8\u53ef\"",
          "1727: t IDCANCEL \"\u5173\u95ed\"",
          "1733: t IDCANCEL \"\u5173\u95ed\"",
          "1741: g IDD_NOTIFICATION",
          "1742: t IDC_MORE_INFO \"\u66f4\u591a\u4fe1\u606f\"",
          "1743: t IDYES \"\u662f\"",
          "1744: t IDNO \"\u5426\"",
          "1746: g IDD_UPDATE_POLICY",
          "1748: t IDD_UPDATE_POLICY \"\u66f4\u65b0\u7b56\u7565\u548c\u8bbe\u7f6e\"",
          "1749: t IDS_UPDATE_SETTINGS_GRP \"\u8bbe\u7f6e\"",
          "1750: t IDS_UPDATE_FREQUENCY_TXT \"\u68c0\u67e5\u66f4\u65b0\"",
          "1751: t IDS_INCLUDE_BETAS_TXT \"\u5305\u62ec\u6d4b\u8bd5\u7248\u672c\"",
          "1752: t IDC_CHECK_NOW \"\u7acb\u5373\u68c0\u67e5\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1761: t MSG_008 \"\u662f\"",
          "1762: t MSG_009 \"\u5426\"",
          "1763: t MSG_010 \"\u68c0\u6d4b\u5230\u574f\u5757\"",
          "1766: t MSG_012 \"%s\\n\u8be6\u7ec6\u7684\u62a5\u544a\u4f4d\u4e8e\uff1a\\n%s\"",
          "1767: t MSG_013 \"\u7981\u7528\"",
          "1768: t MSG_014 \"\u6bcf\u65e5\"",
          "",
          "[Removed Lines]",
          "1764: t MSG_011 \"\u68c0\u67e5\u5b8c\u6210\uff1a\u627e\u5230 %d \u4e2a\u574f\u5757\\n\"",
          "1765:  \"  %d \u4e2a\u8bfb\u53d6\u9519\u8bef\\n  %d \u4e2a\u5199\u5165\u9519\u8bef\\n  %d \u4e2a\u635f\u574f\u9519\u8bef\"",
          "",
          "[Added Lines]",
          "1764: t MSG_011 \"\u68c0\u67e5\u5b8c\u6210\uff1a\u627e\u5230 %d \u4e2a\u574f\u5757\\n  %d \u4e2a\u8bfb\u53d6\u9519\u8bef\\n  %d \u4e2a\u5199\u5165\u9519\u8bef\\n  %d \u4e2a\u635f\u574f\u9519\u8bef\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1771: t MSG_017 \"\u81ea\u5b9a\u4e49\"",
          "1772: t MSG_018 \"\u4f60\u7684\u7248\u672c\uff1a%d.%d (Build %d)\"",
          "1773: t MSG_019 \"\u6700\u65b0\u7248\u672c\uff1a%d.%d (Build %d)\"",
          "1780: t MSG_026 \"\u5b57\u8282\"",
          "1781: t MSG_027 \"K \u5b57\u8282\"",
          "1782: t MSG_028 \"M \u5b57\u8282\"",
          "",
          "[Removed Lines]",
          "1774: t MSG_020 \"B\"",
          "1775: t MSG_021 \"KB\"",
          "1776: t MSG_022 \"MB\"",
          "1777: t MSG_023 \"GB\"",
          "1778: t MSG_024 \"TB\"",
          "1779: t MSG_025 \"PB\"",
          "",
          "[Added Lines]",
          "1773: t MSG_020 \"\u5b57\u8282\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1801: t MSG_047 \"\u591a\u5206\u533a\u78c1\u76d8\"",
          "1802: t MSG_048 \"Rufus - \u5237\u65b0\u7f13\u51b2\u533a\"",
          "1803: t MSG_049 \"Rufus - \u53d6\u6d88\"",
          "1805: t MSG_050 \"\u6210\u529f\u3002\"",
          "1806: t MSG_051 \"\u672a\u77e5\u683c\u5f0f\u5316\u9519\u8bef\u3002\"",
          "1807: t MSG_052 \"\u672c\u4ecb\u8d28\u4e0d\u80fd\u4f7f\u7528\u9009\u62e9\u7684\u6587\u4ef6\u7cfb\u7edf\u3002\"",
          "1808: t MSG_053 \"\u8bbe\u5907\u88ab\u62d2\u7edd\u8bbf\u95ee\u3002\"",
          "1809: t MSG_054 \"\u4ecb\u8d28\u88ab\u5199\u4fdd\u62a4\u3002\"",
          "1812: t MSG_056 \"\u672c\u8bbe\u5907\u4e0d\u53ef\u4f7f\u7528\u5feb\u901f\u683c\u5f0f\u5316\u3002\"",
          "1813: t MSG_057 \"\u5377\u6807\u65e0\u6548\u3002\"",
          "1814: t MSG_058 \"\u8bbe\u5907\u53e5\u67c4\u65e0\u6548\u3002\"",
          "",
          "[Removed Lines]",
          "1810: t MSG_055 \"\u8bbe\u5907\u6b63\u5728\u88ab\u53e6\u4e00\u4e2a\u4f7f\u7528\u4e2d\u3002\"",
          "1811:  \"\u8bf7\u5173\u95ed\u53ef\u80fd\u8bbf\u95ee\u8bbe\u5907\u7684\u4efb\u610f\u5176\u5b83\u8fdb\u7a0b\u3002\"",
          "",
          "[Added Lines]",
          "1803: t MSG_055 \"\u8bbe\u5907\u6b63\u5728\u88ab\u53e6\u4e00\u4e2a\u4f7f\u7528\u4e2d\u3002\u8bf7\u5173\u95ed\u53ef\u80fd\u8bbf\u95ee\u8bbe\u5907\u7684\u4efb\u610f\u5176\u5b83\u8fdb\u7a0b\u3002\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1819: t MSG_063 \"\u5185\u5b58\u5206\u914d\u9519\u8bef\u3002\"",
          "1820: t MSG_064 \"\u8bfb\u53d6\u9519\u8bef\u3002\"",
          "1821: t MSG_065 \"\u5199\u5165\u9519\u8bef\u3002\"",
          "1825: t MSG_068 \"\u9a71\u52a8\u5668\u5206\u533a\u65f6\u9519\u8bef\u3002\"",
          "1826: t MSG_069 \"\u65e0\u6cd5\u590d\u5236\u6587\u4ef6\u5230\u76ee\u6807\u9a71\u52a8\u5668\u3002\"",
          "1827: t MSG_070 \"\u7528\u6237\u53d6\u6d88\u64cd\u4f5c\u3002\"",
          "",
          "[Removed Lines]",
          "1822: t MSG_066 \"\u5b89\u88c5\u5931\u8d25\u3002\"",
          "1823: t MSG_067 \"\u4e0d\u80fd\u6253\u5f00\u4ecb\u8d28\u3002\u53ef\u80fd\u662f\u5176\u4ed6\u8fdb\u7a0b\u6b63\u5728\u4f7f\u7528\u8be5\u8bbe\u5907\u3002\"",
          "1824:  \"\u8bf7\u91cd\u65b0\u63d2\u5165\u8bbe\u5907\u540e\u518d\u8bd5\u3002\"",
          "",
          "[Added Lines]",
          "1814: t MSG_066 \"\u5b89\u88c5\u5931\u8d25\"",
          "1815: t MSG_067 \"\u4e0d\u80fd\u6253\u5f00\u4ecb\u8d28\u3002\u53ef\u80fd\u662f\u5176\u4ed6\u8fdb\u7a0b\u6b63\u5728\u4f7f\u7528\u8be5\u8bbe\u5907\u3002\u8bf7\u91cd\u65b0\u63d2\u5165\u8bbe\u5907\u540e\u518d\u8bd5\u3002\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1834: t MSG_077 \"\u4e0d\u80fd\u6307\u6d3e\u76d8\u7b26\u3002\"",
          "1835: t MSG_078 \"\u672a\u80fd\u88c5\u8f7d GUID \u5377\u3002\"",
          "1836: t MSG_079 \"\u8bbe\u5907\u6ca1\u6709\u51c6\u5907\u597d\u3002\"",
          "1841: t MSG_081 \"\u4e0d\u652f\u6301\u7684\u955c\u50cf\"",
          "1844: t MSG_083 \"\u66ff\u6362 %s?\"",
          "1852: t MSG_085 \"\u4e0b\u8f7d '%s' \u4e2d\"",
          "1853: t MSG_086 \"\u672a\u9009\u62e9\u955c\u50cf\"",
          "1854: t MSG_088 \"\u955c\u50cf\u6587\u4ef6\u8fc7\u5927\"",
          "1855: t MSG_089 \"\u955c\u50cf\u5bf9\u4e8e\u9009\u62e9\u76ee\u6807\u6765\u8bf4\u592a\u5927\u3002\"",
          "1856: t MSG_090 \"\u4e0d\u652f\u6301\u7684 ISO\"",
          "1859: t MSG_092 \"\u4e0d\u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\"",
          "1863: t MSG_094 \"\u68c0\u6d4b\u5230\u591a\u5206\u533a\u78c1\u76d8\"",
          "1864: t MSG_095 \"DD \u955c\u50cf\"",
          "1867: t MSG_097 \"'%s' \u4ec5\u9002\u7528\u4e8e NTFS \u6587\u4ef6\u7cfb\u7edf\u3002\"",
          "1874: t MSG_099 \"\u6587\u4ef6\u7cfb\u7edf\u9650\u5236\"",
          "1875: t MSG_100 \"\u8fd9\u4e2a ISO \u955c\u50cf\u5305\u542b\u5927\u4e8e 4 GB \u7684\u5355\u4e00\u6587\u4ef6\uff0c\u5b83\u8d85\u51fa\u4e86 FAT/FAT32 \u6587\u4ef6\u7cfb\u7edf\u5141\u8bb8\u7684\u6700\u5927\u5c3a\u5bf8\u3002\"",
          "1876: t MSG_101 \"\u7f3a\u5c11 WIM \u652f\u6301\"",
          "1880: t MSG_103 \"\u4e0b\u8f7d %s \u5417\uff1f\"",
          "1889: t MSG_106 \"\u8bf7\u9009\u62e9\u6587\u4ef6\u5939\"",
          "1890: t MSG_107 \"\u5168\u90e8\u6587\u4ef6\"",
          "1891: t MSG_108 \"Rufus \u65e5\u5fd7\"",
          "1892: t MSG_109 \"0x%02X (\u78c1\u76d8 %d)\"",
          "1895: t MSG_111 \"\u4e0d\u517c\u5bb9\u7684\u7c07\u5927\u5c0f\"",
          "1896: t MSG_112 \"\u683c\u5f0f\u5316\u4e00\u4e2a\u5927 UDF \u5377\u53ef\u80fd\u9700\u8981\u5f88\u957f\u65f6\u95f4\u3002\u4ee5 USB 2.0 \u901f\u5ea6\u9884\u8ba1\u5269\u4f59\u65f6\u95f4\uff1a%d:%02d\uff0c\u5728\u6b64\u671f\u95f4\u8fdb\u5ea6\u6761\u53ef\u80fd\u4f1a\u5448\u7981\u6b62\u72b6\u6001\u3002\u8bf7\u8010\u5fc3\u7b49\u5f85\uff01\"",
          "1897: t MSG_113 \"\u5927\u5bb9\u91cf UDF \u5377\"",
          "1903: t MSG_115 \"\u9700\u8981\u4e0b\u8f7d\"",
          "1913: t MSG_117 \"\u6807\u51c6 Windows \u5b89\u88c5\"",
          "1914: t MSG_119 \"\u9ad8\u7ea7\u8bbe\u5907\u9009\u9879\"",
          "1915: t MSG_120 \"\u9ad8\u7ea7\u683c\u5f0f\u5316\u9009\u9879\"",
          "1916: t MSG_121 \"\u663e\u793a%s\"",
          "1917: t MSG_122 \"\u9690\u85cf%s\"",
          "1918: t MSG_150 \"\u8bf7\u9009\u62e9\u60a8\u8ba1\u7b97\u673a\u652f\u6301\u7684\u542f\u52a8\u7c7b\u578b\uff0c\u5982 BIOS \u6216 UEFI\uff0c\u5426\u5219\u542f\u52a8\u53ef\u80fd\u4f1a\u5931\u8d25\u3002\"",
          "1919: t MSG_151 \"'UEFI-CSM' \u6307\u8bbe\u5907\u53ea\u4f1a\u5728 UEFI \u7cfb\u7edf\u7684\u7ecf\u5178\u6a21\u5f0f(Legacy Mode)\u4e0b\u542f\u52a8\uff0c\u4e0d\u4f1a\u5728\u539f\u751f\u6a21\u5f0f(UEFI Mode)\u4e0b\u542f\u52a8\u3002\"",
          "1920: t MSG_152 \"'\u975e CSM' \u6307\u8bbe\u5907\u53ea\u4f1a\u5728 UEFI \u7cfb\u7edf\u7684\u539f\u751f\u6a21\u5f0f(UEFI Mode)\u4e0b\u542f\u52a8\uff0c\u4e0d\u4f1a\u5728\u7ecf\u5178\u6a21\u5f0f(Legacy Mode)\u4e0b\u542f\u52a8\u3002\"",
          "",
          "[Removed Lines]",
          "1838: t MSG_080 \"Rufus \u68c0\u6d4b\u5230 Windows \u4ecd\u5728\u628a\u5b83\u7684\u5185\u90e8\u7f13\u51b2\u533a\u5237\u5230 USB \u8bbe\u5907\u4e0a\u3002\\n\\n\"",
          "1839:  \"\u6839\u636e\u4f60\u7684 USB \u8bbe\u5907\u7684\u901f\u5ea6\uff0c\u6b64\u64cd\u4f5c\u53ef\u80fd\u9700\u8981\u5f88\u957f\u65f6\u95f4\u624d\u80fd\u5b8c\u6210\uff0c\u5c24\u5176\u662f\u5927\u6587\u4ef6\u3002\\n\\n\"",
          "1840:  \"\u6211\u4eec\u5efa\u8bae\u4f60\u8ba9 Windows \u5b8c\u6210\uff0c\u907f\u514d\u6570\u636e\u635f\u574f\u3002\u4f46\u662f\u5982\u679c\u4f60\u538c\u5026\u4e86\u7b49\u5f85\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u5c31\u90a3\u6837\u62d4\u51fa\u8bbe\u5907...\"",
          "1842: t MSG_082 \"\u672c\u955c\u50cf\u662f\u4e0d\u53ef\u5f15\u5bfc\u7684\uff0c\u6216\u8005\u4f7f\u7528\u4e86\u4e0d\u88ab Rufus \u6240\u652f\u6301\u7684\u5f15\u5bfc\u6216\u538b\u7f29\u65b9\u5f0f...\\n\"",
          "1843:  \"\u672c\u7248\u672c Rufus \u4ec5\u652f\u6301\u57fa\u4e8e bootmgr, EFI, Grub4DOS, GRUB 2, isolinux \u6216 WinPE \u7684\u542f\u52a8 ISO \u955c\u50cf\u3002\"",
          "1845: t MSG_084 \"\u8fd9\u4e2a ISO \u955c\u50cf\u4f3c\u4e4e\u4f7f\u7528\u4e00\u4e2a\u8fc7\u65f6\u7684 '%s' \u7248\u672c\u3002\\n\"",
          "1846:  \"\u5f15\u5bfc\u83dc\u5355\u53ef\u80fd\u56e0\u6b64\u800c\u65e0\u6cd5\u6b63\u5e38\u663e\u793a\u3002\\n\\n\"",
          "1847:  \"Rufus \u53ef\u4ee5\u4e0b\u8f7d\u66f4\u65b0\u7684\u7248\u672c\u6765\u4fee\u590d\u8fd9\u4e2a\u95ee\u9898\uff1a\\n\"",
          "1848:  \"- \u9009\u62e9\u3010\u662f\u3011\u8fde\u63a5\u7f51\u7edc\u5e76\u4e0b\u8f7d\u6587\u4ef6\\n\"",
          "1849:  \"- \u9009\u62e9\u3010\u5426\u3011\u4fdd\u7559\u73b0\u6709\u7684 ISO \u6587\u4ef6\u4e0d\u53d8\\n\"",
          "1850:  \"\u5982\u679c\u4e0d\u77e5\u9053\u5982\u4f55\u9009\u62e9\uff0c\u8bf7\u9009\u62e9\u3010\u662f\u3011\u3002\\n\\n\"",
          "1851:  \"\u6ce8\u610f\uff1a\u65b0\u6587\u4ef6\u5c06\u4f1a\u4e0b\u8f7d\u5230\u5f53\u524d\u76ee\u5f55\uff0c\u4e00\u65e6 '%s' \u5b58\u5728\u5219\u4f1a\u88ab\u81ea\u52a8\u9009\u7528\u3002\"",
          "1857: t MSG_091 \"\u5f53\u4f7f\u7528 UEFI \u76ee\u6807\u7c7b\u578b\u65f6\uff0c\u53ea\u652f\u6301 EFI \u53ef\u5f15\u5bfc\u7684 ISO \u955c\u50cf\u3002\\n\"",
          "1858:  \"\u8bf7\u9009\u62e9\u4e00\u4e2a EFI \u53ef\u5f15\u5bfc\u7684 ISO \u955c\u50cf\uff0c\u6216\u8bbe\u7f6e\u201c\u76ee\u6807\u7c7b\u578b\u201d\u4e3a BIOS\u3002\"",
          "1860: t MSG_093 \"\u8b66\u544a\uff1a\u672c\u76d8\u5305\u542b\u591a\u5206\u533a\uff01\\n\\n\"",
          "1861:  \"\u8fd9\u4e2a\u53ef\u80fd\u5305\u542b\u5728 Windows \u4e2d\u65e0\u6cd5\u5217\u51fa\u751a\u81f3\u770b\u5230\u7684\u5206\u533a/\u5377\u3002\"",
          "1862:  \"\u5982\u679c\u4f60\u60f3\u7ee7\u7eed\u64cd\u4f5c\u53ef\u80fd\u9020\u6210\u8fd9\u4e9b\u5206\u533a\u4e0a\u7684\u6570\u636e\u4e22\u5931\uff0c\u540e\u679c\u81ea\u8d1f\u3002\"",
          "1865: t MSG_096 \"\u5f53\u524d\u9009\u62e9\u7684\u6587\u4ef6\u7cfb\u7edf\u4e0d\u80fd\u914d\u5408\u8fd9\u4e2a\u7c7b\u578b\u7684 ISO \u4f7f\u7528\u3002\"",
          "1866:  \"\u8bf7\u9009\u62e9\u4e00\u4e2a\u4e0d\u540c\u7684\u6587\u4ef6\u7cfb\u7edf\u6216\u8005\u4f7f\u7528\u4e0d\u540c\u7684 ISO\u3002\"",
          "1868: t MSG_098 \"\u91cd\u8981\u4e8b\u9879: \u4f60\u6b63\u5728\u5c1d\u8bd5\u5b89\u88c5 'Windows To Go'\uff0c\u7136\u800c\u4f60\u7684\u76ee\u6807\u76d8\u6ca1\u6709 'FIXED' (\u56fa\u5b9a)\u5c5e\u6027\u3002\"",
          "1869:  \"\u56e0\u6b64\uff0cWindows \u5728\u5f15\u5bfc\u65f6\u5c06\u5f88\u53ef\u80fd\u51bb\u4f4f\uff0c\"",
          "1870:  \"\u56e0\u4e3a\u5fae\u8f6f\u5e76\u6ca1\u6709\u9488\u5bf9\u914d\u5408\u62e5\u6709 'REMOVABLE' (\u53ef\u79fb\u52a8)\u5c5e\u6027\u7684\u9a71\u52a8\u5668\u4f7f\u7528\u800c\u8bbe\u8ba1\u3002\\n\\n\"",
          "1871:  \"\u4f60\u662f\u5426\u4ecd\u60f3\u7ee7\u7eed?\\n\\n\"",
          "1872:  \"\u6ce8\u610f: 'FIXED/REMOVABLE' \u5c5e\u6027\u662f\u5c3d\u53ef\u4ee5\u4f7f\u7528\u6765\u81ea\u9a71\u52a8\u5668\u5236\u9020\u5546\u7684\u5b9a\u5236\u5de5\u5177\u66f4\u6539\u7684\u786c\u4ef6\u6027\u8d28\u3002\"",
          "1873:  \"\u5c3d\u7ba1\u5982\u6b64\uff0c\u90a3\u4e9b\u5de5\u5177\u51e0\u4e4e\u6c38\u8fdc\u4e0d\u4f1a\u516c\u5f00\u63d0\u4f9b...\"",
          "1877: t MSG_102 \"\u4f60\u7684\u5e73\u53f0\u4e0d\u80fd\u4ece WIM \u955c\u50cf\u63d0\u53d6\u6587\u4ef6\u3002\"",
          "1878:  \"\u521b\u5efa EFI \u53ef\u5f15\u5bfc\u7684 Windows 7 \u6216 Windows Vista USB \u76d8\u9700\u8981 WIM \u63d0\u53d6\u529f\u80fd\u3002\"",
          "1879:  \"\u4f60\u53ef\u4ee5\u901a\u8fc7\u5b89\u88c5\u6700\u65b0\u7248\u672c\u7684 7-Zip \u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\\n\u4f60\u662f\u5426\u60f3\u8bbf\u95ee 7-Zip \u4e0b\u8f7d\u7f51\u9875\uff1f\"",
          "1881: t MSG_104 \"%s \u6216\u66f4\u65b0\u7248\u672c\u9700\u8981\u540c\u65f6\u5b89\u88c5\u4e00\u4e2a '%s' \u6587\u4ef6\u3002\\n\"",
          "1882:  \"\u7531\u4e8e\u8fd9\u4e2a\u6587\u4ef6\u5c3a\u5bf8\u5927\u4e8e 100 KB \u4e14\u603b\u662f\u5b58\u5728\u4e8e %s ISO \u955c\u50cf\u4e0a\uff0c\u800c\u672a\u5185\u7f6e\u4e8e Rufus \u4e2d\u3002\\n\\n\"",
          "1883:  \"Rufus \u53ef\u4ee5\u4e3a\u4f60\u4e0b\u8f7d\u7f3a\u5c11\u7684\u6587\u4ef6\uff1a\\n\"",
          "1884:  \"- \u9009\u62e9\u3010\u662f\u3011\u5219\u8fde\u63a5\u7f51\u7edc\u4e92\u8054\u7f51\u5e76\u4e0b\u8f7d\u6587\u4ef6\\n\"",
          "1885:  \"- \u9009\u62e9\u3010\u5426\u3011\u5219\u4f60\u81ea\u5df1\u7a0d\u540e\u81ea\u884c\u4e0b\u8f7d\u5230\u78c1\u76d8\\n\\n\"",
          "1886:  \"\u6ce8\u610f\uff1a\u6587\u4ef6\u5c06\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e2d\u4e0b\u8f7d\uff0c\u4e00\u65e6 '%s' \u6587\u4ef6\u5b58\u5728\uff0c\u5219\u5b83\u5c06\u4f1a\u88ab\u81ea\u52a8\u9009\u7528\u3002\"",
          "1887: t MSG_105 \"\u73b0\u5728\u53d6\u6d88\u53ef\u80fd\u5bfc\u81f4\u8bbe\u5907\u5904\u4e8e\u4e0d\u7a33\u5b9a\u72b6\u6001\u3002\\n\"",
          "1888:  \"\u5982\u679c\u4f60\u786e\u5b9a\u4f60\u60f3\u53d6\u6d88\uff0c\u8bf7\u70b9\u51fb\u3010\u662f\u3011\u3002\u5426\u5219\u70b9\u51fb\u3010\u5426\u3011\u3002\"",
          "1893: t MSG_110 \"MS-DOS \u65e0\u6cd5\u4ece 64 KB \u7c07\u5927\u5c0f\u78c1\u76d8\u542f\u52a8\u3002\\n\"",
          "1894:  \"\u8bf7\u66f4\u6539\u7c07\u5927\u5c0f\u6216\u6539\u7528 FreeDOS\u3002\"",
          "1898: t MSG_114 \"\u8fd9\u4e2a\u955c\u50cf\u4f7f\u7528 Syslinux %s%s\uff0c\u800c\u672c\u7a0b\u5e8f\u4ec5\u5305\u542b Syslinux %s%s \u7684\u5b89\u88c5\u6587\u4ef6\u3002\\n\\n\"",
          "1899:  \"\u7531\u4e8e\u65b0\u7248\u672c\u7684 Syslinux \u548c\u5176\u5b83\u7248\u672c\u7684\u4e0d\u80fd\u517c\u5bb9\uff0c\u800c Rufus \u4e5f\u4e0d\u53ef\u80fd\u5305\u62ec\u5b83\u4eec\u5168\u90e8\uff0c\u9700\u8981\u4ece\u4e92\u8054\u7f51\u4e0b\u8f7d\u4e24\u4e2a\u989d\u5916\u7684\u6587\u4ef6('ldlinux.sys' \u548c 'ldlinux.bss'):\\n\"",
          "1900:  \"- \u9009\u62e9 '\u662f' \u8fde\u63a5\u7f51\u7edc\u5e76\u4e0b\u8f7d\u8fd9\u4e9b\u6587\u4ef6\\n\"",
          "1901:  \"- \u9009\u62e9 '\u5426' \u53d6\u6d88\u6b64\u9879\u64cd\u4f5c\\n\\n\"",
          "1902:  \"\u6ce8\u610f\uff1a\u6587\u4ef6\u5c06\u4f1a\u88ab\u4e0b\u8f7d\u5230\u5f53\u524d\u5e94\u7528\u7a0b\u5e8f\u76ee\u5f55\uff0c\u5982\u679c\u5b58\u5728\u5219\u4f1a\u81ea\u52a8\u9009\u7528\u3002\"",
          "1904: t MSG_116 \"\u672c\u955c\u50cf\u4f7f\u7528 Grub %s \u800c\u5e94\u7528\u7a0b\u5e8f\u53ea\u5305\u542b Grub %s \u7684\u5b89\u88c5\u6587\u4ef6\u3002\\n\\n\"",
          "1905:  \"\u7531\u4e8e\u4e0d\u540c\u7248\u672c\u7684 Grub \u5f7c\u6b64\u4e0d\u80fd\u517c\u5bb9\uff0c\u800c\u4e14\u4e0d\u53ef\u80fd\u5305\u542b\u5b83\u4eec\u5168\u90e8\uff0c\"",
          "1906:  \"Rufus \u5c06\u5c1d\u8bd5\u5b9a\u4f4d\u4e00\u4e2a\u5339\u914d\u6765\u81ea\u4f60\u7684\u955c\u50cf\u7684 Grub \u7248\u672c\"",
          "1907:  \"\u7684 Grub \u5b89\u88c5\u6587\u4ef6('core.img'):\\n\"",
          "1908:  \"- \u9009\u62e9\u3010\u662f\u3011\u5219\u8fde\u63a5\u5230\u4e92\u8054\u7f51\u5e76\u5c1d\u8bd5\u4e0b\u8f7d\u5b83\\n\"",
          "1909:  \"- \u9009\u62e9\u3010\u5426\u3011\u5219\u4f7f\u7528\u6765\u81ea Rufus \u7684\u9ed8\u8ba4\u7248\u672c\\n\"",
          "1910:  \"- \u9009\u62e9\u3010\u53d6\u6d88\u3011\u5219\u653e\u5f03\u64cd\u4f5c\\n\\n\"",
          "1911:  \"\u6ce8\u610f: \u6587\u4ef6\u5c06\u4f1a\u5728\u5f53\u524d\u5e94\u7528\u7a0b\u5e8f\u76ee\u5f55\u4e0b\u8f7d\uff0c\u800c\u5982\u679c\u5b58\u5728\u7684\u8bdd\u5219\u5c06\u4f1a\u81ea\u52a8\u4f7f\u7528\u5b83\u3002\"",
          "1912:  \"\u5982\u679c\u5728\u7ebf\u627e\u4e0d\u5230\u5339\u914d\u7684\uff0c\u90a3\u4e48\u5c06\u4f1a\u4f7f\u7528\u9ed8\u8ba4\u7684\u7248\u672c\u3002\"",
          "",
          "[Added Lines]",
          "1828: t MSG_080 \"Rufus \u68c0\u6d4b\u5230 Windows \u4ecd\u5728\u628a\u5b83\u7684\u5185\u90e8\u7f13\u51b2\u533a\u5237\u5230 USB \u8bbe\u5907\u4e0a\u3002\\n\\n\u6839\u636e\u4f60\u7684 USB \u8bbe\u5907\u7684\u901f\u5ea6\uff0c\u6b64\u64cd\u4f5c\u53ef\u80fd\u9700\u8981\u5f88\u957f\u65f6\u95f4\u624d\u80fd\u5b8c\u6210\uff0c\u5c24\u5176\u662f\u5927\u6587\u4ef6\u3002\\n\\n\u6211\u4eec\u5efa\u8bae\u4f60\u8ba9 Windows \u5b8c\u6210\uff0c\u907f\u514d\u6570\u636e\u635f\u574f\u3002\u4f46\u662f\u5982\u679c\u4f60\u538c\u5026\u4e86\u7b49\u5f85\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u5c31\u90a3\u6837\u62d4\u51fa\u8bbe\u5907...\"",
          "1830: t MSG_082 \"\u672c\u955c\u50cf\u662f\u4e0d\u53ef\u5f15\u5bfc\u7684\uff0c\u6216\u8005\u4f7f\u7528\u4e86\u4e0d\u88ab Rufus \u6240\u652f\u6301\u7684\u5f15\u5bfc\u6216\u538b\u7f29\u65b9\u5f0f...\\n\u672c\u7248\u672c Rufus \u4ec5\u652f\u6301\u57fa\u4e8e bootmgr, EFI, Grub4DOS, GRUB 2, isolinux \u6216 WinPE \u7684\u542f\u52a8 ISO \u955c\u50cf\u3002\"",
          "1832: t MSG_084 \"\u8fd9\u4e2a ISO \u955c\u50cf\u4f3c\u4e4e\u4f7f\u7528\u4e00\u4e2a\u8fc7\u65f6\u7684 '%s' \u7248\u672c\u3002\\n\u5f15\u5bfc\u83dc\u5355\u53ef\u80fd\u56e0\u6b64\u800c\u65e0\u6cd5\u6b63\u5e38\u663e\u793a\u3002\\n\\nRufus \u53ef\u4ee5\u4e0b\u8f7d\u66f4\u65b0\u7684\u7248\u672c\u6765\u4fee\u590d\u8fd9\u4e2a\u95ee\u9898\uff1a\\n- \u9009\u62e9\u3010\u662f\u3011\u8fde\u63a5\u7f51\u7edc\u5e76\u4e0b\u8f7d\u6587\u4ef6\\n- \u9009\u62e9\u3010\u5426\u3011\u4fdd\u7559\u73b0\u6709\u7684 ISO \u6587\u4ef6\u4e0d\u53d8\\n\u5982\u679c\u4e0d\u77e5\u9053\u5982\u4f55\u9009\u62e9\uff0c\u8bf7\u9009\u62e9\u3010\u662f\u3011\u3002\\n\\n\u6ce8\u610f\uff1a\u65b0\u6587\u4ef6\u5c06\u4f1a\u4e0b\u8f7d\u5230\u5f53\u524d\u76ee\u5f55\uff0c\u4e00\u65e6 '%s' \u5b58\u5728\u5219\u4f1a\u88ab\u81ea\u52a8\u9009\u7528\u3002\"",
          "1835: t MSG_087 \"\u5bf9 %s \u95ea\u5b58\"",
          "1839: t MSG_091 \"\u5f53\u4f7f\u7528 UEFI \u76ee\u6807\u7c7b\u578b\u65f6\uff0c\u53ea\u652f\u6301 EFI \u53ef\u5f15\u5bfc\u7684 ISO \u955c\u50cf\u3002\\n\u8bf7\u9009\u62e9\u4e00\u4e2a EFI \u53ef\u5f15\u5bfc\u7684 ISO \u955c\u50cf\uff0c\u6216\u8bbe\u7f6e\u201c\u76ee\u6807\u7c7b\u578b\u201d\u4e3a BIOS\u3002\"",
          "1841: t MSG_093 \"\u8b66\u544a\uff1a\u672c\u76d8\u5305\u542b\u591a\u5206\u533a\uff01\\n\\n\u8fd9\u4e2a\u53ef\u80fd\u5305\u542b\u5728 Windows \u4e2d\u65e0\u6cd5\u5217\u51fa\u751a\u81f3\u770b\u5230\u7684\u5206\u533a/\u5377\u3002\u5982\u679c\u4f60\u60f3\u7ee7\u7eed\u64cd\u4f5c\u53ef\u80fd\u9020\u6210\u8fd9\u4e9b\u5206\u533a\u4e0a\u7684\u6570\u636e\u4e22\u5931\uff0c\u540e\u679c\u81ea\u8d1f\u3002\"",
          "1844: t MSG_096 \"\u5f53\u524d\u9009\u62e9\u7684\u6587\u4ef6\u7cfb\u7edf\u4e0d\u80fd\u914d\u5408\u8fd9\u4e2a\u7c7b\u578b\u7684 ISO \u4f7f\u7528\u3002\u8bf7\u9009\u62e9\u4e00\u4e2a\u4e0d\u540c\u7684\u6587\u4ef6\u7cfb\u7edf\u6216\u8005\u4f7f\u7528\u4e0d\u540c\u7684 ISO\u3002\"",
          "1846: t MSG_098 \"\u91cd\u8981\u4e8b\u9879: \u4f60\u6b63\u5728\u5c1d\u8bd5\u5b89\u88c5 'Windows To Go'\uff0c\u7136\u800c\u4f60\u7684\u76ee\u6807\u76d8\u6ca1\u6709 'FIXED' (\u56fa\u5b9a)\u5c5e\u6027\u3002\u56e0\u6b64\uff0cWindows \u5728\u5f15\u5bfc\u65f6\u5c06\u5f88\u53ef\u80fd\u51bb\u4f4f\uff0c\u56e0\u4e3a\u5fae\u8f6f\u5e76\u6ca1\u6709\u9488\u5bf9\u914d\u5408\u62e5\u6709 'REMOVABLE' (\u53ef\u79fb\u52a8)\u5c5e\u6027\u7684\u9a71\u52a8\u5668\u4f7f\u7528\u800c\u8bbe\u8ba1\u3002\\n\\n\u4f60\u662f\u5426\u4ecd\u60f3\u7ee7\u7eed?\\n\\n\u6ce8\u610f: 'FIXED/REMOVABLE' \u5c5e\u6027\u662f\u5c3d\u53ef\u4ee5\u4f7f\u7528\u6765\u81ea\u9a71\u52a8\u5668\u5236\u9020\u5546\u7684\u5b9a\u5236\u5de5\u5177\u66f4\u6539\u7684\u786c\u4ef6\u6027\u8d28\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u90a3\u4e9b\u5de5\u5177\u51e0\u4e4e\u6c38\u8fdc\u4e0d\u4f1a\u516c\u5f00\u63d0\u4f9b...\"",
          "1850: t MSG_102 \"\u4f60\u7684\u5e73\u53f0\u4e0d\u80fd\u4ece WIM \u955c\u50cf\u63d0\u53d6\u6587\u4ef6\u3002\u521b\u5efa EFI \u53ef\u5f15\u5bfc\u7684 Windows 7 \u6216 Windows Vista USB \u76d8\u9700\u8981 WIM \u63d0\u53d6\u529f\u80fd\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u5b89\u88c5\u6700\u65b0\u7248\u672c\u7684 7-Zip \u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\\n\u4f60\u662f\u5426\u60f3\u8bbf\u95ee 7-Zip \u4e0b\u8f7d\u7f51\u9875\uff1f\"",
          "1852: t MSG_104 \"%s \u6216\u66f4\u65b0\u7248\u672c\u9700\u8981\u540c\u65f6\u5b89\u88c5\u4e00\u4e2a '%s' \u6587\u4ef6\u3002\\n\u7531\u4e8e\u8fd9\u4e2a\u6587\u4ef6\u5c3a\u5bf8\u5927\u4e8e 100 KB \u4e14\u603b\u662f\u5b58\u5728\u4e8e %s ISO \u955c\u50cf\u4e0a\uff0c\u800c\u672a\u5185\u7f6e\u4e8e Rufus \u4e2d\u3002\\n\\nRufus \u53ef\u4ee5\u4e3a\u4f60\u4e0b\u8f7d\u7f3a\u5c11\u7684\u6587\u4ef6\uff1a\\n- \u9009\u62e9\u3010\u662f\u3011\u5219\u8fde\u63a5\u7f51\u7edc\u4e92\u8054\u7f51\u5e76\u4e0b\u8f7d\u6587\u4ef6\\n- \u9009\u62e9\u3010\u5426\u3011\u5219\u4f60\u81ea\u5df1\u7a0d\u540e\u81ea\u884c\u4e0b\u8f7d\u5230\u78c1\u76d8\\n\\n\u6ce8\u610f\uff1a\u6587\u4ef6\u5c06\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e2d\u4e0b\u8f7d\uff0c\u4e00\u65e6 '%s' \u6587\u4ef6\u5b58\u5728\uff0c\u5219\u5b83\u5c06\u4f1a\u88ab\u81ea\u52a8\u9009\u7528\u3002\"",
          "1853: t MSG_105 \"\u73b0\u5728\u53d6\u6d88\u53ef\u80fd\u5bfc\u81f4\u8bbe\u5907\u5904\u4e8e\u4e0d\u7a33\u5b9a\u72b6\u6001\u3002\\n\u5982\u679c\u4f60\u786e\u5b9a\u4f60\u60f3\u53d6\u6d88\uff0c\u8bf7\u70b9\u51fb\u3010\u662f\u3011\u3002\u5426\u5219\u70b9\u51fb\u3010\u5426\u3011\u3002\"",
          "1858: t MSG_110 \"MS-DOS \u65e0\u6cd5\u4ece 64 KB \u7c07\u5927\u5c0f\u78c1\u76d8\u542f\u52a8\u3002\\n\u8bf7\u66f4\u6539\u7c07\u5927\u5c0f\u6216\u6539\u7528 FreeDOS\u3002\"",
          "1862: t MSG_114 \"\u8fd9\u4e2a\u955c\u50cf\u4f7f\u7528 Syslinux %s%s\uff0c\u800c\u672c\u7a0b\u5e8f\u4ec5\u5305\u542b Syslinux %s%s \u7684\u5b89\u88c5\u6587\u4ef6\u3002\\n\\n\u7531\u4e8e\u65b0\u7248\u672c\u7684 Syslinux \u548c\u5176\u5b83\u7248\u672c\u7684\u4e0d\u80fd\u517c\u5bb9\uff0c\u800c Rufus \u4e5f\u4e0d\u53ef\u80fd\u5305\u62ec\u5b83\u4eec\u5168\u90e8\uff0c\u9700\u8981\u4ece\u4e92\u8054\u7f51\u4e0b\u8f7d\u4e24\u4e2a\u989d\u5916\u7684\u6587\u4ef6('ldlinux.sys' \u548c 'ldlinux.bss'):\\n- \u9009\u62e9 '\u662f' \u8fde\u63a5\u7f51\u7edc\u5e76\u4e0b\u8f7d\u8fd9\u4e9b\u6587\u4ef6\\n- \u9009\u62e9 '\u5426' \u53d6\u6d88\u6b64\u9879\u64cd\u4f5c\\n\\n\u6ce8\u610f\uff1a\u6587\u4ef6\u5c06\u4f1a\u88ab\u4e0b\u8f7d\u5230\u5f53\u524d\u5e94\u7528\u7a0b\u5e8f\u76ee\u5f55\uff0c\u5982\u679c\u5b58\u5728\u5219\u4f1a\u81ea\u52a8\u9009\u7528\u3002\"",
          "1864: t MSG_116 \"\u672c\u955c\u50cf\u4f7f\u7528 Grub %s \u800c\u5e94\u7528\u7a0b\u5e8f\u53ea\u5305\u542b Grub %s \u7684\u5b89\u88c5\u6587\u4ef6\u3002\\n\\n\u7531\u4e8e\u4e0d\u540c\u7248\u672c\u7684 Grub \u5f7c\u6b64\u4e0d\u80fd\u517c\u5bb9\uff0c\u800c\u4e14\u4e0d\u53ef\u80fd\u5305\u542b\u5b83\u4eec\u5168\u90e8\uff0cRufus \u5c06\u5c1d\u8bd5\u5b9a\u4f4d\u4e00\u4e2a\u5339\u914d\u6765\u81ea\u4f60\u7684\u955c\u50cf\u7684 Grub \u7248\u672c\u7684 Grub \u5b89\u88c5\u6587\u4ef6('core.img'):\\n- \u9009\u62e9\u3010\u662f\u3011\u5219\u8fde\u63a5\u5230\u4e92\u8054\u7f51\u5e76\u5c1d\u8bd5\u4e0b\u8f7d\u5b83\\n- \u9009\u62e9\u3010\u5426\u3011\u5219\u4f7f\u7528\u6765\u81ea Rufus \u7684\u9ed8\u8ba4\u7248\u672c\\n- \u9009\u62e9\u3010\u53d6\u6d88\u3011\u5219\u653e\u5f03\u64cd\u4f5c\\n\\n\u6ce8\u610f: \u6587\u4ef6\u5c06\u4f1a\u5728\u5f53\u524d\u5e94\u7528\u7a0b\u5e8f\u76ee\u5f55\u4e0b\u8f7d\uff0c\u800c\u5982\u679c\u5b58\u5728\u7684\u8bdd\u5219\u5c06\u4f1a\u81ea\u52a8\u4f7f\u7528\u5b83\u3002\u5982\u679c\u5728\u7ebf\u627e\u4e0d\u5230\u5339\u914d\u7684\uff0c\u90a3\u4e48\u5c06\u4f1a\u4f7f\u7528\u9ed8\u8ba4\u7684\u7248\u672c\u3002\"",
          "1870: t MSG_123 \"\u6301\u4e45\u5206\u533a\u5927\u5c0f\"",
          "1871: t MSG_124 \"\u65e0\u6301\u4e45\u5206\u533a\"",
          "1872: t MSG_125 \"\u8bbe\u7f6eLive USB\u9a71\u52a8\u5668\u7684\u6301\u4e45\u5206\u533a\u5927\u5c0f\u3002\u8bbe\u7f6e\u4e3a\u96f6\u5c06\u7981\u7528\u6301\u4e45\u5206\u533a\u3002\"",
          "1873: t MSG_126 \"\u8bbe\u7f6e\u5206\u533a\u5927\u5c0f\u5355\u4f4d\u3002\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1924: t MSG_156 \"\u6d4b\u8bd5\u6a21\u5f0f\uff1a0x%02X, 0x%02X, 0x%02X, 0x%02X\"",
          "1925: t MSG_157 \"\u8bbe\u7f6e\u76ee\u6807\u6587\u4ef6\u7cfb\u7edf\"",
          "1926: t MSG_158 \"\u6587\u4ef6\u7cfb\u7edf\u7684\u6570\u636e\u5757\u6700\u5c11\u5360\u7528\u5927\u5c0f\"",
          "1928: t MSG_160 \"\u5207\u6362\u9ad8\u7ea7\u9009\u9879\"",
          "1929: t MSG_161 \"\u4f7f\u7528\u6d4b\u8bd5\u6a21\u5f0f\u68c0\u67e5\u8bbe\u5907\u574f\u5757\"",
          "1930: t MSG_162 \"\u53d6\u6d88\u672c\u590d\u9009\u6846\u4f7f\u7528\\\"\u6162\u901f\\\"\u5b8c\u5168\u683c\u5f0f\u5316\u65b9\u5f0f\"",
          "",
          "[Removed Lines]",
          "1927: t MSG_159 \"\u4f7f\u7528\u672c\u6846\u8bbe\u7f6e\u5377\u6807\u3002\\n\u652f\u6301\u56fd\u9645\u5b57\u7b26\u3002\"",
          "",
          "[Added Lines]",
          "1883: t MSG_159 \"\u4f7f\u7528\u672c\u6846\u4ee5\u8bbe\u7f6e\u9a71\u52a8\u5668\u5377\u6807\u3002\\n\u652f\u6301\u56fd\u9645\u5b57\u7b26\u3002\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1933: t MSG_165 \"\u70b9\u51fb\u9009\u62e9\u955c\u50cf...\"",
          "1934: t MSG_166 \"\u52fe\u9009\u672c\u6846\u5141\u8bb8\u56fd\u9645\u5377\u6807\u7684\u663e\u793a\u5e76\u8bbe\u7f6e\u4e00\u4e2a\u8bbe\u5907\u56fe\u6807(\u521b\u5efa\u4e00\u4e2a autorun.inf)\"",
          "1935: t MSG_167 \"\u5b89\u88c5\u4e00\u4e2a\u53ef\u4ee5\u5f15\u5bfc\u9009\u62e9\u5185\u5bb9\u5e76\u53ef\u4ee5\u4f2a\u88c5 BIOS USB \u76d8 ID \u7684 MBR\"",
          "1940: t MSG_170 \"\u542f\u7528\u6db5\u76d6 USB \u786c\u76d8\u7684\u663e\u793a\\n***\u8bf7\u8c28\u614e\u4f7f\u7528\uff0c\u540e\u679c\u81ea\u8d1f\uff01***\"",
          "1941: t MSG_171 \"\u5f00\u59cb\u683c\u5f0f\u5316\u64cd\u4f5c\u3002\\n\u8fd9\u5c06\u4f1a\u6e05\u9664\u76ee\u6807\u8bbe\u5907\u4e0a\u7684\u4efb\u4f55\u6570\u636e\uff01\"",
          "1942: t MSG_173 \"\u70b9\u51fb\u9009\u62e9...\"",
          "1943: t MSG_174 \"Rufus - \u53ef\u9760\u7684 USB \u683c\u5f0f\u5316\u5de5\u5177\"",
          "1944: t MSG_175 \"\u7248\u672c %d.%d (Build %d)\"",
          "",
          "[Removed Lines]",
          "1936: t MSG_168 \"\u5c1d\u8bd5\u4f2a\u88c5\u9996\u4e2a\u53ef\u5f15\u5bfc USB \u76d8(\u901a\u5e38\u4e3a 0x80)\u4e3a\u4e0d\u540c\u7684\u78c1\u76d8\u3002\\n\"",
          "1937:  \"\u8fd9\u4e2a\u4e00\u822c\u662f\u5b89\u88c5 Windows XP \u5e76\u62e5\u6709\u591a\u76d8\u65f6\u6240\u9700\u3002\"",
          "1938: t MSG_169 \"\u521b\u5efa\u4e00\u4e2a\u989d\u5916\u7684\u9690\u85cf\u5206\u533a\u5e76\u5c1d\u8bd5\u5bf9\u9f50\u5206\u533a\u5206\u754c\u3002\\n\"",
          "1939:  \"\u8fd9\u4e2a\u53ef\u63d0\u9ad8\u65e7 BIOS \u7684\u5f15\u5bfc\u68c0\u6d4b\u7387\"",
          "",
          "[Added Lines]",
          "1892: t MSG_168 \"\u5c1d\u8bd5\u5c06\u9996\u4e2a\u53ef\u5f15\u5bfc\u7684 USB \u9a71\u52a8\u5668 (\u901a\u5e38\u4e3a 0x80) \u4f2a\u88c5\u4e3a\u4e0d\u540c\u7684\u78c1\u76d8\u3002\\n\u53ea\u6709\u5f53\u60a8\u5b89\u88c5 Windows XP\uff0c\u5e76\u62e5\u6709\u591a\u4e2a\u78c1\u76d8\u65f6\u624d\u9700\u8981\u6b64\u9009\u9879\u3002\"",
          "1893: t MSG_169 \"\u521b\u5efa\u4e00\u4e2a\u989d\u5916\u7684\u9690\u85cf\u5206\u533a\u5e76\u5c1d\u8bd5\u5bf9\u9f50\u5206\u533a\u5206\u754c\u3002\\n\u8fd9\u4e2a\u53ef\u63d0\u9ad8\u65e7 BIOS \u7684\u5f15\u5bfc\u68c0\u6d4b\u7387\u3002\"",
          "1896: t MSG_172 \"\u4e0b\u8f7d\u6587\u4ef6\u7b7e\u540d\u6821\u9a8c\u5931\u8d25\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1946: t MSG_177 \"\u62a5\u544a\u9519\u8bef\u6216\u8bf7\u6c42\u65b0\u529f\u80fd\uff1a\"",
          "1947: t MSG_178 \"\u66f4\u591a\u7248\u6743\u4fe1\u606f\uff1a\"",
          "1948: t MSG_179 \"\u66f4\u65b0\u7b56\u7565\uff1a\"",
          "1951: t MSG_181 \"\u4f60\u7684\u64cd\u4f5c\u7cfb\u7edf\u7684\u67b6\u6784\u548c\u7248\u672c\"",
          "1952: t MSG_182 \"\u4f60\u4f7f\u7528\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u7248\u672c\"",
          "1953: t MSG_183 \"\u60a8\u7684 IP \u5730\u5740\"",
          "",
          "[Removed Lines]",
          "1949: t MSG_180 \"\u5982\u679c\u4f60\u9009\u62e9\u5141\u8bb8\u672c\u7a0b\u5e8f\u68c0\u67e5\u5e94\u7528\u7a0b\u5e8f\u66f4\u65b0\uff0c\"",
          "1950:  \"\u90a3\u4e48\u8868\u793a\u60a8\u540c\u610f\u88ab\u6211\u4eec\u7684\u670d\u52a1\u5668\u6536\u96c6\u4ee5\u4e0b\u4fe1\u606f\uff1a\"",
          "",
          "[Added Lines]",
          "1904: t MSG_180 \"\u5982\u679c\u4f60\u9009\u62e9\u5141\u8bb8\u672c\u7a0b\u5e8f\u68c0\u67e5\u5e94\u7528\u7a0b\u5e8f\u66f4\u65b0\uff0c\u90a3\u4e48\u8868\u793a\u60a8\u540c\u610f\u88ab\u6211\u4eec\u7684\u670d\u52a1\u5668\u6536\u96c6\u4ee5\u4e0b\u4fe1\u606f\uff1a\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1956: t MSG_186 \"Rufus \u6ca1\u6709\u5b89\u88c5\u6216\u8fd0\u884c\u540e\u53f0\u670d\u52a1\uff0c\u56e0\u6b64\u66f4\u65b0\u68c0\u67e5\u4ec5\u5728\u4e3b\u7a0b\u5e8f\u8fd0\u884c\u65f6\u8fdb\u884c\u3002\\\\line\\n\u5f53\u7136\u68c0\u67e5\u66f4\u65b0\u65f6\u9700\u8981\u7f51\u7edc\u8fde\u63a5\u3002\"",
          "1957: t MSG_187 \"\u955c\u50cf\u5bf9\u9009\u62e9\u7684\u5f15\u5bfc\u9009\u9879\u65e0\u6548\"",
          "1958: t MSG_188 \"\u5f53\u524d\u955c\u50cf\u4e0d\u5339\u914d\u9009\u62e9\u7684\u5f15\u5bfc\u9009\u9879\u3002\u8bf7\u4f7f\u7528\u4e0d\u540c\u7684\u955c\u50cf\u6216\u9009\u62e9\u4e0d\u540c\u7684\u5f15\u5bfc\u9009\u9879\u3002\"",
          "1960: t MSG_190 \"\u68c0\u6d4b\u5230\u4e0d\u517c\u5bb9\u7684\u9a71\u52a8\u5668\"",
          "1961: t MSG_191 \"\u5199\u5165\u6b21\u6570\"",
          "1962: t MSG_192 \"\u8bfb\u53d6\u6b21\u6570\"",
          "1963: t MSG_193 \"\u5df2\u4e0b\u8f7d %s\"",
          "1964: t MSG_194 \"\u4e0d\u80fd\u4e0b\u8f7d %s\"",
          "1965: t MSG_195 \"\u4f7f\u7528 %s \u6587\u4ef6\u7684\u5d4c\u5165\u7248\u672c\"",
          "1970: t MSG_197 \"\u68c0\u6d4b\u5230\u975e\u6807\u51c6\u6247\u533a\u5927\u5c0f\"",
          "1973: t MSG_201 \"\u53d6\u6d88\u4e2d - \u8bf7\u7a0d\u5019...\"",
          "1974: t MSG_202 \"\u6b63\u5728\u626b\u63cf\u955c\u50cf...\"",
          "1975: t MSG_203 \"\u672a\u80fd\u626b\u63cf\u955c\u50cf\"",
          "",
          "[Removed Lines]",
          "1959: t MSG_189 \"\u8fd9\u4e2a ISO \u955c\u50cf\u4e0d\u517c\u5bb9\u9009\u62e9\u7684\u6587\u4ef6\u7cfb\u7edf\u3002\"",
          "1966: t MSG_196 \"\u91cd\u8981\u4e8b\u9879: \u672c\u9a71\u52a8\u5668\u4f7f\u7528\u4e86\u975e\u6807\u51c6\u7684\u6247\u533a\u5927\u5c0f!\\n\\n\"",
          "1967:  \"\u4f20\u7edf\u7684\u9a71\u52a8\u5668\u4f7f\u7528 512 \u5b57\u8282\u6247\u533a\u5927\u5c0f\u800c\u672c\u9a71\u52a8\u5668\u4f7f\u7528 %d \u5b57\u8282\u7684\u6247\u533a\u3002\"",
          "1968:  \"\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u5c06\u4e0d\u53ef\u4ee5\u4ece\u672c\u9a71\u52a8\u5668\u5f15\u5bfc\u3002\\n\"",
          "1969:  \"Rufus \u53ef\u4ee5\u5c1d\u8bd5\u521b\u5efa\u4e00\u4e2a\u53ef\u5f15\u5bfc\u9a71\u52a8\u5668\uff0c\u4f46\u662f\u4e0d\u4fdd\u8bc1\u5b83\u6709\u6548\u3002\"",
          "1971: t MSG_198 \"'Windows To Go' \u53ea\u53ef\u4ee5\u5728\u4e00\u4e2a GPT \u5206\u533a\u7684\u62e5\u6709 FIXED \u5c5e\u6027\u8bbe\u7f6e\u7684\u9a71\u52a8\u5668\u4e0a\u5b89\u88c5\"",
          "1972:  \"\u5f53\u524d\u9a71\u52a8\u5668\u6ca1\u6709\u88ab\u68c0\u6d4b\u4e3a FIXED(\u56fa\u5b9a\u76d8)\u3002\"",
          "",
          "[Added Lines]",
          "1913: t MSG_189 \"\u8fd9\u4e2a ISO \u955c\u50cf\u4e0d\u517c\u5bb9\u9009\u62e9\u7684\u6587\u4ef6\u7cfb\u7edf\"",
          "1920: t MSG_196 \"\u91cd\u8981\u4e8b\u9879: \u672c\u9a71\u52a8\u5668\u4f7f\u7528\u4e86\u975e\u6807\u51c6\u7684\u6247\u533a\u5927\u5c0f!\\n\\n\u4f20\u7edf\u7684\u9a71\u52a8\u5668\u4f7f\u7528 512 \u5b57\u8282\u6247\u533a\u5927\u5c0f\u800c\u672c\u9a71\u52a8\u5668\u4f7f\u7528 %d \u5b57\u8282\u7684\u6247\u533a\u3002\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u5c06\u4e0d\u53ef\u4ee5\u4ece\u672c\u9a71\u52a8\u5668\u5f15\u5bfc\u3002\\nRufus \u53ef\u4ee5\u5c1d\u8bd5\u521b\u5efa\u4e00\u4e2a\u53ef\u5f15\u5bfc\u9a71\u52a8\u5668\uff0c\u4f46\u662f\u4e0d\u4fdd\u8bc1\u5b83\u6709\u6548\u3002\"",
          "1922: t MSG_198 \"'Windows To Go' \u53ea\u53ef\u4ee5\u5728\u4e00\u4e2a GPT \u5206\u533a\u7684\u62e5\u6709 FIXED \u5c5e\u6027\u8bbe\u7f6e\u7684\u9a71\u52a8\u5668\u4e0a\u5b89\u88c5\u5f53\u524d\u9a71\u52a8\u5668\u6ca1\u6709\u88ab\u68c0\u6d4b\u4e3a FIXED(\u56fa\u5b9a\u76d8)\u3002\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2009: t MSG_237 \"\u68c0\u67e5\u574f\u5757\uff1a\u6b63\u5728\u4f7f\u7528\u6a21\u5f0f 0x%02X \u6d4b\u8bd5\"",
          "2010: t MSG_238 \"\u6b63\u5728\u5206\u533a (%s)...\"",
          "2011: t MSG_239 \"\u6b63\u5728\u5220\u9664\u5206\u533a...\"",
          "2012: t MSG_241 \"\u6b63\u5728\u4e0b\u8f7d\uff1a%0.1f%%\"",
          "2013: t MSG_242 \"\u672a\u80fd\u4e0b\u8f7d\u6587\u4ef6\u3002\"",
          "2014: t MSG_243 \"\u6b63\u5728\u68c0\u67e5 Rufus \u66f4\u65b0...\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1962: t MSG_240 \"\u4e0b\u8f7d\u7684\u66f4\u65b0\u7b7e\u540d\u6821\u9a8c\u5931\u8d25\uff0c\u8fd9\u8868\u660e\u60a8\u7684\u7cfb\u7edf\u914d\u7f6e\u5f02\u5e38\u6216\u6536\u5230\u6076\u610f\u653b\u51fb\u3002\\n\\n\u4e0b\u8f7d\u6587\u4ef6\u5df2\u88ab\u5220\u9664\u3002\u8be6\u7ec6\u4fe1\u606f\u8bf7\u67e5\u770b\u65e5\u5fd7\u3002\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2043: t MSG_272 \"\u8ba1\u7b97\u6240\u9009\u955c\u50cf\u7684 MD5, SHA1 \u548c SHA256 \u7684\u6821\u9a8c\u548c\"",
          "2044: t MSG_273 \"\u8bed\u8a00\"",
          "2045: t MSG_274 \"\u68c0\u6d4b\u5230 ISOHybrid \u955c\u50cf\"",
          "2051: t MSG_276 \"\u4ee5 %s \u6a21\u5f0f\u5199\u5165(\u63a8\u8350)\"",
          "2052: t MSG_277 \"\u4ee5 %s \u6a21\u5f0f\u5199\u5165\"",
          "2053: t MSG_278 \"\u68c0\u6d4b\u51b2\u7a81\u8fdb\u7a0b\u4e2d...\"",
          "",
          "[Removed Lines]",
          "2046: t MSG_275 \"\u60a8\u9009\u62e9\u7684\u955c\u50cf\u662f\u4e00\u4e2a 'ISOHybrid' (\u6df7\u5408\u5f0f)\u955c\u50cf\u3002\u8fd9\u610f\u5473\u7740\u5b83\u53ef\u4ee5\u4ee5\"",
          "2047:  \"%s (\u6587\u4ef6\u590d\u5236) \u6a21\u5f0f\u6216 %s (\u78c1\u76d8) \u955c\u50cf\u6a21\u5f0f\u5199\u5165\u3002\\n\"",
          "2048:  \"Rufus \u63a8\u8350\u4f7f\u7528 %s \u6a21\u5f0f\uff0c\u4ee5\u4fbf\u60a8\u5728\u5199\u5165\u5b83\u4e4b\u540e\u603b\u662f\u53ef\u4ee5\u5bf9\u9a71\u52a8\u5668\u6709\u5b8c\u5168\u7684\u8bbf\u95ee\u6743\u3002\\n\"",
          "2049:  \"\u5c3d\u7ba1\u5982\u6b64\uff0c\u5982\u679c\u60a8\u5728\u5f15\u5bfc\u65f6\u9047\u5230\u95ee\u9898\uff0c\u60a8\u53ef\u4ee5\u5c1d\u8bd5\u4ee5 %s \u6a21\u5f0f\u518d\u6b21\u5199\u5165\u8fd9\u4e2a\u955c\u50cf\u3002\\n\\n\"",
          "2050:  \"\u8bf7\u9009\u62e9\u60a8\u60f3\u7528\u4e8e\u5199\u5165\u8fd9\u4e2a\u955c\u50cf\u6240\u4f7f\u7528\u7684\u6a21\u5f0f:\"",
          "",
          "[Added Lines]",
          "1997: t MSG_275 \"\u60a8\u9009\u62e9\u7684\u955c\u50cf\u662f\u4e00\u4e2a 'ISOHybrid' (\u6df7\u5408\u5f0f)\u955c\u50cf\u3002\u8fd9\u610f\u5473\u7740\u5b83\u53ef\u4ee5\u4ee5%s (\u6587\u4ef6\u590d\u5236) \u6a21\u5f0f\u6216 %s (\u78c1\u76d8) \u955c\u50cf\u6a21\u5f0f\u5199\u5165\u3002\\nRufus \u63a8\u8350\u4f7f\u7528 %s \u6a21\u5f0f\uff0c\u4ee5\u4fbf\u60a8\u5728\u5199\u5165\u5b83\u4e4b\u540e\u603b\u662f\u53ef\u4ee5\u5bf9\u9a71\u52a8\u5668\u6709\u5b8c\u5168\u7684\u8bbf\u95ee\u6743\u3002\\n\u5c3d\u7ba1\u5982\u6b64\uff0c\u5982\u679c\u60a8\u5728\u5f15\u5bfc\u65f6\u9047\u5230\u95ee\u9898\uff0c\u60a8\u53ef\u4ee5\u5c1d\u8bd5\u4ee5 %s \u6a21\u5f0f\u518d\u6b21\u5199\u5165\u8fd9\u4e2a\u955c\u50cf\u3002\\n\\n\u8bf7\u9009\u62e9\u60a8\u60f3\u7528\u4e8e\u5199\u5165\u8fd9\u4e2a\u955c\u50cf\u6240\u4f7f\u7528\u7684\u6a21\u5f0f:\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2070: t MSG_295 \"\u8b66\u544a\uff1a\u975e\u5b98\u65b9\u7248\u672c\"",
          "2071: t MSG_296 \"\u6b64\u7248\u672c\u7684 Rufus \u4e0d\u662f\u7531\u5b98\u65b9\u5f00\u53d1\u8005\u53d1\u5e03\u7684\u3002\\n\\n\u60a8\u786e\u5b9a\u8981\u8fd0\u884c\u5b83\u5417\uff1f\"",
          "2072: t MSG_297 \"\u68c0\u6d4b\u5230\u4e0d\u5b8c\u6574\u955c\u50cf\"",
          "2076: t MSG_299 \"\u65f6\u95f4\u6233\u6821\u9a8c\u9519\u8bef\"",
          "2079: t MSG_301 \"\u8bbe\u7f6e\"",
          "2080: t MSG_302 \"\u5173\u4e8e\"",
          "2081: t MSG_303 \"\u65e5\u5fd7\"",
          "2082: t MSG_304 \"\u521b\u5efa\u6240\u9009\u8bbe\u5907\u7684\u955c\u50cf\"",
          "2083: t MSG_305 \"\u8bf7\u9009\u62e9\u60a8\u5e0c\u671b\u5c06 Windows \u5b89\u88c5\u81f3\u5176\u4ed6\u9a71\u52a8\u5668\uff0c\u8fd8\u662f\u76f4\u63a5\u4ece\u6b64\u9a71\u52a8\u5668\u8fd0\u884c(\u5373 Windows To Go)\u3002\"",
          "2085: #########################################################################",
          "2086: l \"zh-TW\" \"Chinese Traditional (\u6b63\u9ad4\u4e2d\u6587)\" 0x0404, 0x0c04, 0x1404, 0x7c04",
          "",
          "[Removed Lines]",
          "2073: t MSG_298 \"\u60a8\u9009\u62e9\u7684\u955c\u50cf\u6587\u4ef6\u5927\u5c0f\u4e0e\u5176\u671f\u671b\u5927\u5c0f\u4e0d\u7b26\uff1a %s \u6570\u636e\u7f3a\u5931\uff01\\n\\n\"",
          "2074:  \"\u5982\u679c\u6b64\u955c\u50cf\u6587\u4ef6\u4e0b\u8f7d\u81ea\u4e92\u8054\u7f51\uff0c\u8bf7\u91cd\u65b0\u4e0b\u8f7d\u5e76\u6821\u9a8c\u5176 MD5 \u6216 SHA \u6821\u9a8c\u548c\u3002\\n\\n\"",
          "2075:  \"\u60a8\u53ef\u5728 Rufus \u4e2d\u70b9\u51fb (\u2713) \u952e\u6765\u8ba1\u7b97 MD5 \u6216 SHA \u6821\u9a8c\u548c\u3002\"",
          "2077: t MSG_300 \"Rufus \u4e0b\u8f7d\u7684\u66f4\u65b0\u6bd4\u5f53\u524d\u7a0b\u5e8f\u66f4\u65e7\u3002\\n\\n\"",
          "2078:  \"\u4e3a\u907f\u514d\u53ef\u80fd\u7684\u653b\u51fb\uff0c\u66f4\u65b0\u5df2\u88ab\u963b\u6b62\uff0c\u4e0b\u8f7d\u7684\u66f4\u65b0\u6587\u4ef6\u5df2\u88ab\u5220\u9664\u3002\u5982\u9700\u4e86\u89e3\u66f4\u591a\uff0c\u8bf7\u67e5\u770b\u8f6f\u4ef6\u65e5\u5fd7\u3002\"",
          "",
          "[Added Lines]",
          "2020: t MSG_298 \"\u60a8\u9009\u62e9\u7684\u955c\u50cf\u6587\u4ef6\u5927\u5c0f\u4e0e\u5176\u671f\u671b\u5927\u5c0f\u4e0d\u7b26\uff1a %s \u6570\u636e\u7f3a\u5931\uff01\\n\\n\u5982\u679c\u6b64\u955c\u50cf\u6587\u4ef6\u4e0b\u8f7d\u81ea\u4e92\u8054\u7f51\uff0c\u8bf7\u91cd\u65b0\u4e0b\u8f7d\u5e76\u6821\u9a8c\u5176 MD5 \u6216 SHA \u6821\u9a8c\u548c\u3002\\n\\n\u60a8\u53ef\u5728 Rufus \u4e2d\u70b9\u51fb (\u2713) \u952e\u6765\u8ba1\u7b97 MD5 \u6216 SHA \u6821\u9a8c\u548c\u3002\"",
          "2022: t MSG_300 \"Rufus \u4e0b\u8f7d\u7684\u66f4\u65b0\u6bd4\u5f53\u524d\u7a0b\u5e8f\u66f4\u65e7\u3002\\n\\n\u4e3a\u907f\u514d\u53ef\u80fd\u7684\u653b\u51fb\uff0c\u66f4\u65b0\u5df2\u88ab\u963b\u6b62\uff0c\u4e0b\u8f7d\u7684\u66f4\u65b0\u6587\u4ef6\u5df2\u88ab\u5220\u9664\u3002\u5982\u9700\u4e86\u89e3\u66f4\u591a\uff0c\u8bf7\u67e5\u770b\u8f6f\u4ef6\u65e5\u5fd7\u3002\"",
          "2028: t MSG_306 \"\u6b63\u5728\u5feb\u901f\u6e05\u7a7a\u78c1\u76d8: %0.1f%% \u5df2\u5b8c\u6210\"",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 232, 326",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 9, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Drive Properties\",IDS_DRIVE_PROPERTIES_TXT,8,6,53,12,NOT WS_GROUP",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 3.2.1366\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 3.2.1367\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "394: VS_VERSION_INFO VERSIONINFO",
          "397:  FILEFLAGSMASK 0x3fL",
          "398: #ifdef _DEBUG",
          "399:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "395:  FILEVERSION 3,2,1366,0",
          "396:  PRODUCTVERSION 3,2,1366,0",
          "",
          "[Added Lines]",
          "395:  FILEVERSION 3,2,1367,0",
          "396:  PRODUCTVERSION 3,2,1367,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "411:             VALUE \"Comments\", \"https://akeo.ie\"",
          "412:             VALUE \"CompanyName\", \"Akeo Consulting\"",
          "413:             VALUE \"FileDescription\", \"Rufus\"",
          "415:             VALUE \"InternalName\", \"Rufus\"",
          "416:             VALUE \"LegalCopyright\", \"\ufffd 2011-2018 Pete Batard (GPL v3)\"",
          "417:             VALUE \"LegalTrademarks\", \"https://www.gnu.org/copyleft/gpl.html\"",
          "418:             VALUE \"OriginalFilename\", \"rufus-3.2.exe\"",
          "419:             VALUE \"ProductName\", \"Rufus\"",
          "421:         END",
          "422:     END",
          "423:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "414:             VALUE \"FileVersion\", \"3.2.1366\"",
          "420:             VALUE \"ProductVersion\", \"3.2.1366\"",
          "",
          "[Added Lines]",
          "414:             VALUE \"FileVersion\", \"3.2.1367\"",
          "420:             VALUE \"ProductVersion\", \"3.2.1367\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "eb5087d504aaf08aa1dc2aa92bfcc2490da42c3a",
      "candidate_info": {
        "commit_hash": "eb5087d504aaf08aa1dc2aa92bfcc2490da42c3a",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/eb5087d504aaf08aa1dc2aa92bfcc2490da42c3a",
        "files": [
          "src/format.c",
          "src/rufus.rc"
        ],
        "message": "[togo] fix a typo in index selection and add support for nonofficial ISOs\n\n* Closes #991",
        "before_after_code_files": [
          "src/format.c||src/format.c",
          "src/rufus.rc||src/rufus.rc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "src/format.c||src/format.c": [
          "File: src/format.c -> src/format.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1288:  char tmp_path[MAX_PATH] = \"\", xml_file[MAX_PATH] = \"\";",
          "1289:  StrArray version_name, version_index;",
          "1290:  int i, build_nr = 0;",
          "1293:  wintogo_index = -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1291:  BOOL bNonStandard = FALSE;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1322:  StrArrayCreate(&version_name, 16);",
          "1323:  StrArrayCreate(&version_index, 16);",
          "1327:  if (i > 1)",
          "1328:   i = SelectionDialog(lmprintf(MSG_291), lmprintf(MSG_292), version_name.String, i);",
          "",
          "[Removed Lines]",
          "1324:  for (i = 0; (StrArrayAdd(&version_name, get_token_data_file_indexed(\"DISPLAYNAME\", xml_file, i + 1), FALSE) >= 0) &&",
          "1325:   (StrArrayAdd(&version_index, get_token_data_file_indexed(\"IMAGE INDEX\", xml_file, i + 1), FALSE) >= 0); i++);",
          "",
          "[Added Lines]",
          "1325:  for (i = 0; StrArrayAdd(&version_index, get_token_data_file_indexed(\"IMAGE INDEX\", xml_file, i + 1), FALSE) >= 0; i++) {",
          "1333:   if (StrArrayAdd(&version_name, get_token_data_file_indexed(\"DISPLAYNAME\", xml_file, i + 1), FALSE) < 0) {",
          "1334:    bNonStandard = TRUE;",
          "1335:    if (StrArrayAdd(&version_name, get_token_data_file_indexed(\"DESCRIPTION\", xml_file, i + 1), FALSE) < 0) {",
          "1336:     uprintf(\"Warning: Could not find a description for image index %d\", i + 1);",
          "1337:     StrArrayAdd(&version_name, \"Unknown Windows Version\", TRUE);",
          "1338:    }",
          "1339:   }",
          "1340:  }",
          "1341:  if (bNonStandard)",
          "1342:   uprintf(\"Warning: Nonstandard Windows image (missing <DISPLAYNAME> entries)\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1333:  } else {",
          "1334:   wintogo_index = atoi(version_index.String[i - 1]);",
          "1335:  }",
          "1338:   build = get_token_data_file_indexed(\"BUILD\", xml_file, i);",
          "1339:   if (build != NULL)",
          "",
          "[Removed Lines]",
          "1336:  if (i >= 0) {",
          "",
          "[Added Lines]",
          "1353:  if (i > 0) {",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 242, 376",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 8, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Device\",IDS_DEVICE_TXT,9,6,200,8",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 2.16.1171\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 2.16.1172\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "368: VS_VERSION_INFO VERSIONINFO",
          "371:  FILEFLAGSMASK 0x3fL",
          "372: #ifdef _DEBUG",
          "373:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "369:  FILEVERSION 2,16,1171,0",
          "370:  PRODUCTVERSION 2,16,1171,0",
          "",
          "[Added Lines]",
          "369:  FILEVERSION 2,16,1172,0",
          "370:  PRODUCTVERSION 2,16,1172,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "384:         BEGIN",
          "385:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
          "386:             VALUE \"FileDescription\", \"Rufus\"",
          "388:             VALUE \"InternalName\", \"Rufus\"",
          "389:             VALUE \"LegalCopyright\", \"\ufffd 2011-2017 Pete Batard (GPL v3)\"",
          "390:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
          "391:             VALUE \"OriginalFilename\", \"rufus.exe\"",
          "392:             VALUE \"ProductName\", \"Rufus\"",
          "394:         END",
          "395:     END",
          "396:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "387:             VALUE \"FileVersion\", \"2.16.1171\"",
          "393:             VALUE \"ProductVersion\", \"2.16.1171\"",
          "",
          "[Added Lines]",
          "387:             VALUE \"FileVersion\", \"2.16.1172\"",
          "393:             VALUE \"ProductVersion\", \"2.16.1172\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b80f7c07851434e96e7638124bf8eb105aa633e0",
      "candidate_info": {
        "commit_hash": "b80f7c07851434e96e7638124bf8eb105aa633e0",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/b80f7c07851434e96e7638124bf8eb105aa633e0",
        "files": [
          "src/iso.c",
          "src/libcdio/cdio/bytesex.h",
          "src/libcdio/cdio/cdtext.h",
          "src/libcdio/cdio/device.h",
          "src/libcdio/cdio/ds.h",
          "src/libcdio/cdio/iso9660.h",
          "src/libcdio/cdio/types.h",
          "src/libcdio/cdio/udf_time.h",
          "src/libcdio/cdio/util.h",
          "src/libcdio/cdio/version.h",
          "src/libcdio/driver/_cdio_stream.c",
          "src/libcdio/driver/cdio_private.h",
          "src/libcdio/driver/ds.c",
          "src/libcdio/driver/utf8.c",
          "src/libcdio/iso9660/iso9660.c",
          "src/libcdio/iso9660/iso9660_fs.c",
          "src/libcdio/iso9660/rock.c",
          "src/libcdio/udf/udf_fs.c",
          "src/rufus.rc"
        ],
        "message": "[iso] update libcdio to latest\n\n* Also clean up some of the code in iso.c",
        "before_after_code_files": [
          "src/iso.c||src/iso.c",
          "src/libcdio/cdio/bytesex.h||src/libcdio/cdio/bytesex.h",
          "src/libcdio/cdio/cdtext.h||src/libcdio/cdio/cdtext.h",
          "src/libcdio/cdio/device.h||src/libcdio/cdio/device.h",
          "src/libcdio/cdio/ds.h||src/libcdio/cdio/ds.h",
          "src/libcdio/cdio/iso9660.h||src/libcdio/cdio/iso9660.h",
          "src/libcdio/cdio/types.h||src/libcdio/cdio/types.h",
          "src/libcdio/cdio/udf_time.h||src/libcdio/cdio/udf_time.h",
          "src/libcdio/cdio/util.h||src/libcdio/cdio/util.h",
          "src/libcdio/cdio/version.h||src/libcdio/cdio/version.h",
          "src/libcdio/driver/_cdio_stream.c||src/libcdio/driver/_cdio_stream.c",
          "src/libcdio/driver/cdio_private.h||src/libcdio/driver/cdio_private.h",
          "src/libcdio/driver/ds.c||src/libcdio/driver/ds.c",
          "src/libcdio/driver/utf8.c||src/libcdio/driver/utf8.c",
          "src/libcdio/iso9660/iso9660.c||src/libcdio/iso9660/iso9660.c",
          "src/libcdio/iso9660/iso9660_fs.c||src/libcdio/iso9660/iso9660_fs.c",
          "src/libcdio/iso9660/rock.c||src/libcdio/iso9660/rock.c",
          "src/libcdio/udf/udf_fs.c||src/libcdio/udf/udf_fs.c",
          "src/rufus.rc||src/rufus.rc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "src/iso.c||src/iso.c": [
          "File: src/iso.c -> src/iso.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "94:  \"look into using a *SMARTER* antivirus solution.\";",
          "95: const char* old_c32_name[NB_OLD_C32] = OLD_C32_NAMES;",
          "96: static const int64_t old_c32_threshold[NB_OLD_C32] = OLD_C32_THRESHOLD;",
          "98: static uint64_t total_blocks, nb_blocks;",
          "99: static BOOL scan_only = FALSE;",
          "100: static StrArray config_path, isolinux_path;",
          "",
          "[Removed Lines]",
          "97: static uint8_t i_joliet_level = 0;",
          "",
          "[Added Lines]",
          "97: static uint8_t joliet_level = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "144:  const char* psz_fullpath, EXTRACT_PROPS *props)",
          "145: {",
          "146:  size_t i, j, len;",
          "",
          "[Removed Lines]",
          "143: static BOOL check_iso_props(const char* psz_dirname, int64_t i_file_length, const char* psz_basename,",
          "",
          "[Added Lines]",
          "143: static BOOL check_iso_props(const char* psz_dirname, int64_t file_length, const char* psz_basename,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "159:  for (i=0; i<NB_OLD_C32; i++) {",
          "161:    props->is_old_c32[i] = TRUE;",
          "162:  }",
          "",
          "[Removed Lines]",
          "160:   if ((safe_stricmp(psz_basename, old_c32_name[i]) == 0) && (i_file_length <= old_c32_threshold[i]))",
          "",
          "[Added Lines]",
          "160:   if ((safe_stricmp(psz_basename, old_c32_name[i]) == 0) && (file_length <= old_c32_threshold[i]))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "244:    if (props->is_old_c32[i])",
          "245:     img_report.has_old_c32[i] = TRUE;",
          "246:   }",
          "248:    img_report.has_4GB_file = TRUE;",
          "253:    total_blocks++;",
          "254:   return TRUE;",
          "255:  }",
          "",
          "[Removed Lines]",
          "247:   if (i_file_length >= FOUR_GIGABYTES)",
          "250:   total_blocks += i_file_length / ISO_BLOCKSIZE;",
          "252:   if ((i_file_length != 0) && (i_file_length % ISO_BLOCKSIZE != 0))",
          "",
          "[Added Lines]",
          "247:   if (file_length >= FOUR_GIGABYTES)",
          "250:   total_blocks += file_length / ISO_BLOCKSIZE;",
          "252:   if ((file_length != 0) && (file_length % ISO_BLOCKSIZE != 0))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "315:  free(src);",
          "316: }",
          "319: {",
          "320:  size_t i, nul_pos;",
          "",
          "[Removed Lines]",
          "318: static void print_extracted_file(char* psz_fullpath, int64_t i_file_length)",
          "",
          "[Added Lines]",
          "318: static void print_extracted_file(char* psz_fullpath, int64_t file_length)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "325:  nul_pos = strlen(psz_fullpath);",
          "326:  for (i=0; i<nul_pos; i++)",
          "327:   if (psz_fullpath[i] == '/') psz_fullpath[i] = '\\\\';",
          "329:  uprintf(\"Extracting: %s\\n\", psz_fullpath);",
          "331:  PrintStatus(0, MSG_000, psz_fullpath); // MSG_000 is \"%s\"",
          "333:  for (i=0; i<nul_pos; i++)",
          "",
          "[Removed Lines]",
          "328:  safe_sprintf(&psz_fullpath[nul_pos], 24, \" (%s)\", SizeToHumanReadable(i_file_length, TRUE, FALSE));",
          "330:  safe_sprintf(&psz_fullpath[nul_pos], 24, \" (%s)\", SizeToHumanReadable(i_file_length, FALSE, FALSE));",
          "",
          "[Added Lines]",
          "328:  safe_sprintf(&psz_fullpath[nul_pos], 24, \" (%s)\", SizeToHumanReadable(file_length, TRUE, FALSE));",
          "330:  safe_sprintf(&psz_fullpath[nul_pos], 24, \" (%s)\", SizeToHumanReadable(file_length, FALSE, FALSE));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "368:  DWORD buf_size, wr_size, err;",
          "369:  EXTRACT_PROPS props;",
          "370:  BOOL r, is_identical;",
          "372:  size_t i;",
          "373:  char tmp[128], *psz_fullpath = NULL, *psz_sanpath = NULL;",
          "374:  const char* psz_basename;",
          "375:  udf_dirent_t *p_udf_dirent2;",
          "376:  uint8_t buf[UDF_BLOCKSIZE];",
          "379:  if ((p_udf_dirent == NULL) || (psz_path == NULL))",
          "380:   return 1;",
          "",
          "[Removed Lines]",
          "371:  int i_length;",
          "377:  int64_t i_read, i_file_length;",
          "",
          "[Added Lines]",
          "371:  int length;",
          "377:  int64_t read, file_length;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "384:   psz_basename = udf_get_filename(p_udf_dirent);",
          "385:   if (strlen(psz_basename) == 0)",
          "386:    continue;",
          "389:   if (psz_fullpath == NULL) {",
          "390:    uprintf(\"Error allocating file name\");",
          "391:    goto out;",
          "392:   }",
          "395:    goto out;",
          "396:   }",
          "397:   if (udf_is_dir(p_udf_dirent)) {",
          "",
          "[Removed Lines]",
          "387:   i_length = (int)(3 + strlen(psz_path) + strlen(psz_basename) + strlen(psz_extract_dir) + 24);",
          "388:   psz_fullpath = (char*)calloc(sizeof(char), i_length);",
          "393:   i_length = _snprintf(psz_fullpath, i_length, \"%s%s/%s\", psz_extract_dir, psz_path, psz_basename);",
          "394:   if (i_length < 0) {",
          "",
          "[Added Lines]",
          "387:   length = (int)(3 + strlen(psz_path) + strlen(psz_basename) + strlen(psz_extract_dir) + 24);",
          "388:   psz_fullpath = (char*)calloc(sizeof(char), length);",
          "393:   length = _snprintf(psz_fullpath, length, \"%s%s/%s\", psz_extract_dir, psz_path, psz_basename);",
          "394:   if (length < 0) {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "410:      goto out;",
          "411:    }",
          "412:   } else {",
          "415:     safe_free(psz_fullpath);",
          "416:     continue;",
          "417:    }",
          "419:    for (i=0; i<NB_OLD_C32; i++) {",
          "420:     if (props.is_old_c32[i] && use_own_c32[i]) {",
          "421:      static_sprintf(tmp, \"%s/syslinux-%s/%s\", FILES_DIR, embedded_sl_version_str[0], old_c32_name[i]);",
          "",
          "[Removed Lines]",
          "413:    i_file_length = udf_get_file_length(p_udf_dirent);",
          "414:    if (check_iso_props(psz_path, i_file_length, psz_basename, psz_fullpath, &props)) {",
          "418:    print_extracted_file(psz_fullpath, i_file_length);",
          "",
          "[Added Lines]",
          "413:    file_length = udf_get_file_length(p_udf_dirent);",
          "414:    if (check_iso_props(psz_path, file_length, psz_basename, psz_fullpath, &props)) {",
          "418:    print_extracted_file(psz_fullpath, file_length);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "440:      uprintf(stupid_antivirus);",
          "441:     else",
          "442:      goto out;",
          "444:     if (FormatStatus) goto out;",
          "445:     memset(buf, 0, UDF_BLOCKSIZE);",
          "448:      uprintf(\"  Error reading UDF file %s\", &psz_fullpath[strlen(psz_extract_dir)]);",
          "449:      goto out;",
          "450:     }",
          "452:     ISO_BLOCKING(r = WriteFileWithRetry(file_handle, buf, buf_size, &wr_size, WRITE_RETRIES));",
          "453:     if (!r) {",
          "454:      uprintf(\"  Error writing file: %s\", WindowsErrorString());",
          "455:      goto out;",
          "456:     }",
          "458:     if (nb_blocks++ % PROGRESS_THRESHOLD == 0)",
          "459:      UpdateProgress(OP_DOS, 100.0f*nb_blocks/total_blocks);",
          "460:    }",
          "",
          "[Removed Lines]",
          "443:    } else while (i_file_length > 0) {",
          "446:     i_read = udf_read_block(p_udf_dirent, buf, 1);",
          "447:     if (i_read < 0) {",
          "451:     buf_size = (DWORD)MIN(i_file_length, i_read);",
          "457:     i_file_length -= i_read;",
          "",
          "[Added Lines]",
          "443:    } else while (file_length > 0) {",
          "446:     read = udf_read_block(p_udf_dirent, buf, 1);",
          "447:     if (read < 0) {",
          "451:     buf_size = (DWORD)MIN(file_length, read);",
          "457:     file_length -= read;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "491:  DWORD buf_size, wr_size, err;",
          "492:  EXTRACT_PROPS props;",
          "493:  BOOL is_symlink, is_identical;",
          "495:  char tmp[128], psz_fullpath[MAX_PATH], *psz_basename, *psz_sanpath;",
          "496:  const char *psz_iso_name = &psz_fullpath[strlen(psz_extract_dir)];",
          "497:  unsigned char buf[ISO_BLOCKSIZE];",
          "498:  CdioListNode_t* p_entnode;",
          "499:  iso9660_stat_t *p_statbuf;",
          "501:  size_t i, j;",
          "502:  lsn_t lsn;",
          "505:  if ((p_iso == NULL) || (psz_path == NULL))",
          "506:   return 1;",
          "510:   return 1;",
          "513:  p_entlist = iso9660_ifs_readdir(p_iso, psz_path);",
          "514:  if (!p_entlist) {",
          "",
          "[Removed Lines]",
          "494:  int i_length, r = 1;",
          "500:  CdioList_t* p_entlist;",
          "503:  int64_t i_file_length;",
          "508:  i_length = _snprintf(psz_fullpath, sizeof(psz_fullpath), \"%s%s/\", psz_extract_dir, psz_path);",
          "509:  if (i_length < 0)",
          "511:  psz_basename = &psz_fullpath[i_length];",
          "",
          "[Added Lines]",
          "494:  int length, r = 1;",
          "500:  CdioISO9660FileList_t* p_entlist;",
          "503:  int64_t file_length, extent_length;",
          "508:  length = _snprintf(psz_fullpath, sizeof(psz_fullpath), \"%s%s/\", psz_extract_dir, psz_path);",
          "509:  if (length < 0)",
          "511:  psz_basename = &psz_fullpath[length];",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "527:   is_symlink = FALSE;",
          "528:   if ((p_statbuf->rr.b3_rock == yep) && enable_rockridge) {",
          "530:    if (safe_strlen(p_statbuf->filename) > 64)",
          "531:     img_report.has_long_filename = TRUE;",
          "",
          "[Removed Lines]",
          "529:    safe_strcpy(psz_basename, sizeof(psz_fullpath)-i_length-1, p_statbuf->filename);",
          "",
          "[Added Lines]",
          "529:    safe_strcpy(psz_basename, sizeof(psz_fullpath) - length - 1, p_statbuf->filename);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "537:    if (scan_only)",
          "538:     safe_free(p_statbuf->rr.psz_symlink);",
          "539:   } else {",
          "541:   }",
          "542:   if (p_statbuf->type == _STAT_DIR) {",
          "543:    if (!scan_only) {",
          "",
          "[Removed Lines]",
          "540:    iso9660_name_translate_ext(p_statbuf->filename, psz_basename, i_joliet_level);",
          "",
          "[Added Lines]",
          "540:    iso9660_name_translate_ext(p_statbuf->filename, psz_basename, joliet_level);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "552:    if (iso_extract_files(p_iso, psz_iso_name))",
          "553:     goto out;",
          "554:   } else {",
          "557:     continue;",
          "558:    }",
          "560:    for (i=0; i<NB_OLD_C32; i++) {",
          "561:     if (props.is_old_c32[i] && use_own_c32[i]) {",
          "562:      static_sprintf(tmp, \"%s/syslinux-%s/%s\", FILES_DIR, embedded_sl_version_str[0], old_c32_name[i]);",
          "",
          "[Removed Lines]",
          "555:    i_file_length = p_statbuf->total_size;",
          "556:    if (check_iso_props(psz_path, i_file_length, psz_basename, psz_fullpath, &props)) {",
          "559:    print_extracted_file(psz_fullpath, i_file_length);",
          "",
          "[Added Lines]",
          "555:    file_length = p_statbuf->size;",
          "556:    if (check_iso_props(psz_path, file_length, psz_basename, psz_fullpath, &props)) {",
          "559:    print_extracted_file(psz_fullpath, file_length);",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "573:    if (!is_identical)",
          "574:     uprintf(\"  File name sanitized to '%s'\", psz_sanpath);",
          "575:    if (is_symlink) {",
          "577:      uprintf(\"  Ignoring Rock Ridge symbolic link to '%s'\", p_statbuf->rr.psz_symlink);",
          "578:     safe_free(p_statbuf->rr.psz_symlink);",
          "579:    }",
          "",
          "[Removed Lines]",
          "576:     if (i_file_length == 0)",
          "",
          "[Added Lines]",
          "576:     if (file_length == 0)",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "587:     else",
          "588:      goto out;",
          "589:    } else for (j=0; j<p_statbuf->extents; j++) {",
          "592:      if (FormatStatus) goto out;",
          "593:      memset(buf, 0, ISO_BLOCKSIZE);",
          "594:      lsn = p_statbuf->lsn[j] + (lsn_t)i;",
          "",
          "[Removed Lines]",
          "590:     i_file_length = p_statbuf->size[j];",
          "591:     for (i=0; i_file_length>0; i++) {",
          "",
          "[Added Lines]",
          "590:     extent_length = p_statbuf->extsize[j];",
          "591:     for (i=0; extent_length>0; i++) {",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "597:        psz_iso_name, (long unsigned int)lsn);",
          "598:       goto out;",
          "599:      }",
          "601:      ISO_BLOCKING(r = WriteFileWithRetry(file_handle, buf, buf_size, &wr_size, WRITE_RETRIES));",
          "602:      if (!r) {",
          "603:       uprintf(\"  Error writing file: %s\", WindowsErrorString());",
          "604:       goto out;",
          "605:      }",
          "607:      if (nb_blocks++ % PROGRESS_THRESHOLD == 0)",
          "608:       UpdateProgress(OP_DOS, 100.0f*nb_blocks/total_blocks);",
          "609:     }",
          "",
          "[Removed Lines]",
          "600:      buf_size = (DWORD)MIN(i_file_length, ISO_BLOCKSIZE);",
          "606:      i_file_length -= ISO_BLOCKSIZE;",
          "",
          "[Added Lines]",
          "600:      buf_size = (DWORD)MIN(extent_length, ISO_BLOCKSIZE);",
          "606:      extent_length -= ISO_BLOCKSIZE;",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "624: out:",
          "625:  ISO_BLOCKING(safe_closehandle(file_handle));",
          "627:  return r;",
          "628: }",
          "",
          "[Removed Lines]",
          "626:  _cdio_list_free(p_entlist, true);",
          "",
          "[Added Lines]",
          "626:  iso9660_filelist_free(p_entlist);",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "738:   goto out;",
          "739:  }",
          "740:  uprintf(\"%sImage is an ISO9660 image\", spacing);",
          "742:  if (scan_only) {",
          "743:   if (iso9660_ifs_get_volume_id(p_iso, &tmp)) {",
          "744:    static_strcpy(img_report.label, tmp);",
          "",
          "[Removed Lines]",
          "741:  i_joliet_level = iso9660_ifs_get_joliet_level(p_iso);",
          "",
          "[Added Lines]",
          "741:  joliet_level = iso9660_ifs_get_joliet_level(p_iso);",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "949: {",
          "950:  size_t i, j;",
          "951:  ssize_t read_size;",
          "953:  char buf[UDF_BLOCKSIZE];",
          "954:  DWORD buf_size, wr_size;",
          "955:  iso9660_t* p_iso = NULL;",
          "",
          "[Removed Lines]",
          "952:  int64_t file_length, r = 0;",
          "",
          "[Added Lines]",
          "952:  int64_t file_length, extent_length, r = 0;",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1013:  }",
          "1015:  for (j = 0; j < p_statbuf->extents; j++) {",
          "1018:    memset(buf, 0, ISO_BLOCKSIZE);",
          "1019:    lsn = p_statbuf->lsn[j] + (lsn_t)i;",
          "1020:    if (iso9660_iso_seek_read(p_iso, buf, lsn, 1) != ISO_BLOCKSIZE) {",
          "1021:     uprintf(\"  Error reading ISO9660 file %s at LSN %lu\", iso_file, (long unsigned int)lsn);",
          "1022:     goto out;",
          "1023:    }",
          "1025:    if (!WriteFileWithRetry(file_handle, buf, buf_size, &wr_size, WRITE_RETRIES)) {",
          "1026:     uprintf(\"  Error writing file %s: %s\", dest_file, WindowsErrorString());",
          "1027:     goto out;",
          "1028:    }",
          "1030:    r += ISO_BLOCKSIZE;",
          "1031:   }",
          "1032:  }",
          "",
          "[Removed Lines]",
          "1016:   file_length = p_statbuf->size[j];",
          "1017:   for (i = 0; file_length > 0; i++) {",
          "1024:    buf_size = (DWORD)MIN(file_length, ISO_BLOCKSIZE);",
          "1029:    file_length -= ISO_BLOCKSIZE;",
          "",
          "[Added Lines]",
          "1016:   extent_length = p_statbuf->extsize[j];",
          "1017:   for (i = 0; extent_length > 0; i++) {",
          "1024:    buf_size = (DWORD)MIN(extent_length, ISO_BLOCKSIZE);",
          "1029:    extent_length -= ISO_BLOCKSIZE;",
          "",
          "---------------"
        ],
        "src/libcdio/cdio/bytesex.h||src/libcdio/cdio/bytesex.h": [
          "File: src/libcdio/cdio/bytesex.h -> src/libcdio/cdio/bytesex.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "172: static CDIO_INLINE uint16_t",
          "173: from_723 (uint32_t p)",
          "174: {",
          "175:   return (0xFFFF & p);",
          "176: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "174: {",
          "175:   uint8_t *u = (uint8_t *) &p;",
          "177:   return (u[0] | (u[1] << 8));",
          "178: }",
          "180: static CDIO_INLINE uint16_t",
          "181: from_723_with_err (uint32_t p, bool *err)",
          "182: {",
          "183:   if (uint32_swap_le_be (p) != p) {",
          "184:     cdio_warn (\"from_723: broken byte order\");",
          "186:   } else {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "198: static CDIO_INLINE uint32_t",
          "199: from_733 (uint64_t p)",
          "201:   return (UINT32_C(0xFFFFFFFF) & p);",
          "202: }",
          "",
          "[Removed Lines]",
          "200: {",
          "",
          "[Added Lines]",
          "214: {",
          "215:   uint8_t *u = (uint8_t *) &p;",
          "",
          "---------------"
        ],
        "src/libcdio/cdio/cdtext.h||src/libcdio/cdio/cdtext.h": [
          "File: src/libcdio/cdio/cdtext.h -> src/libcdio/cdio/cdtext.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: typedef struct cdtext_s cdtext_t;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2:     Copyright (C) 2004, 2005, 2008, 2012 Rocky Bernstein <rocky@gnu.org>",
          "3:     adapted from cuetools",
          "4:     Copyright (C) 2003 Svend Sanjay Sorensen <ssorensen@fastmail.fm>",
          "6:     This program is free software: you can redistribute it and/or modify",
          "7:     it under the terms of the GNU General Public License as published by",
          "8:     the Free Software Foundation, either version 3 of the License, or",
          "9:     (at your option) any later version.",
          "11:     This program is distributed in the hope that it will be useful,",
          "12:     but WITHOUT ANY WARRANTY; without even the implied warranty of",
          "13:     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
          "14:     GNU General Public License for more details.",
          "16:     You should have received a copy of the GNU General Public License",
          "17:     along with this program.  If not, see <http://www.gnu.org/licenses/>.",
          "28: #ifndef CDIO_CDTEXT_H_",
          "29: #define CDIO_CDTEXT_H_",
          "31: #include <cdio/types.h>",
          "33: #ifdef __cplusplus",
          "34: extern \"C\" {",
          "37: #define MIN_CDTEXT_FIELD          0",
          "38: #define MAX_CDTEXT_FIELDS         10",
          "41: typedef enum {",
          "53: } cdtext_field_t;",
          "56: typedef enum {",
          "86: } cdtext_genre_t;",
          "93: typedef enum {",
          "94:   CDTEXT_LANGUAGE_UNKNOWN     = 0x00,",
          "95:   CDTEXT_LANGUAGE_ALBANIAN    = 0x01,",
          "96:   CDTEXT_LANGUAGE_BRETON      = 0x02,",
          "97:   CDTEXT_LANGUAGE_CATALAN     = 0x03,",
          "98:   CDTEXT_LANGUAGE_CROATIAN    = 0x04,",
          "99:   CDTEXT_LANGUAGE_WELSH       = 0x05,",
          "100:   CDTEXT_LANGUAGE_CZECH       = 0x06,",
          "101:   CDTEXT_LANGUAGE_DANISH      = 0x07,",
          "102:   CDTEXT_LANGUAGE_GERMAN      = 0x08,",
          "103:   CDTEXT_LANGUAGE_ENGLISH     = 0x09,",
          "104:   CDTEXT_LANGUAGE_SPANISH     = 0x0A,",
          "105:   CDTEXT_LANGUAGE_ESPERANTO   = 0x0B,",
          "106:   CDTEXT_LANGUAGE_ESTONIAN    = 0x0C,",
          "107:   CDTEXT_LANGUAGE_BASQUE      = 0x0D,",
          "108:   CDTEXT_LANGUAGE_FAROESE     = 0x0E,",
          "109:   CDTEXT_LANGUAGE_FRENCH      = 0x0F,",
          "110:   CDTEXT_LANGUAGE_FRISIAN     = 0x10,",
          "111:   CDTEXT_LANGUAGE_IRISH       = 0x11,",
          "112:   CDTEXT_LANGUAGE_GAELIC      = 0x12,",
          "113:   CDTEXT_LANGUAGE_GALICIAN    = 0x13,",
          "114:   CDTEXT_LANGUAGE_ICELANDIC   = 0x14,",
          "115:   CDTEXT_LANGUAGE_ITALIAN     = 0x15,",
          "116:   CDTEXT_LANGUAGE_LAPPISH     = 0x16,",
          "117:   CDTEXT_LANGUAGE_LATIN       = 0x17,",
          "118:   CDTEXT_LANGUAGE_LATVIAN     = 0x18,",
          "119:   CDTEXT_LANGUAGE_LUXEMBOURGIAN = 0x19,",
          "120:   CDTEXT_LANGUAGE_LITHUANIAN  = 0x1A,",
          "121:   CDTEXT_LANGUAGE_HUNGARIAN   = 0x1B,",
          "122:   CDTEXT_LANGUAGE_MALTESE     = 0x1C,",
          "123:   CDTEXT_LANGUAGE_DUTCH       = 0x1D,",
          "124:   CDTEXT_LANGUAGE_NORWEGIAN   = 0x1E,",
          "125:   CDTEXT_LANGUAGE_OCCITAN     = 0x1F,",
          "126:   CDTEXT_LANGUAGE_POLISH      = 0x20,",
          "127:   CDTEXT_LANGUAGE_PORTUGUESE  = 0x21,",
          "128:   CDTEXT_LANGUAGE_ROMANIAN    = 0x22,",
          "129:   CDTEXT_LANGUAGE_ROMANSH     = 0x23,",
          "130:   CDTEXT_LANGUAGE_SERBIAN     = 0x24,",
          "131:   CDTEXT_LANGUAGE_SLOVAK      = 0x25,",
          "132:   CDTEXT_LANGUAGE_SLOVENIAN   = 0x26,",
          "133:   CDTEXT_LANGUAGE_FINNISH     = 0x27,",
          "134:   CDTEXT_LANGUAGE_SWEDISH     = 0x28,",
          "135:   CDTEXT_LANGUAGE_TURKISH     = 0x29,",
          "136:   CDTEXT_LANGUAGE_FLEMISH     = 0x2A,",
          "137:   CDTEXT_LANGUAGE_WALLON      = 0x2B,",
          "138:   CDTEXT_LANGUAGE_ZULU        = 0x45,",
          "139:   CDTEXT_LANGUAGE_VIETNAMESE  = 0x46,",
          "140:   CDTEXT_LANGUAGE_UZBEK       = 0x47,",
          "141:   CDTEXT_LANGUAGE_URDU        = 0x48,",
          "142:   CDTEXT_LANGUAGE_UKRAINIAN   = 0x49,",
          "143:   CDTEXT_LANGUAGE_THAI        = 0x4A,",
          "144:   CDTEXT_LANGUAGE_TELUGU      = 0x4B,",
          "145:   CDTEXT_LANGUAGE_TATAR       = 0x4C,",
          "146:   CDTEXT_LANGUAGE_TAMIL       = 0x4D,",
          "147:   CDTEXT_LANGUAGE_TADZHIK     = 0x4E,",
          "148:   CDTEXT_LANGUAGE_SWAHILI     = 0x4F,",
          "149:   CDTEXT_LANGUAGE_SRANANTONGO = 0x50,",
          "150:   CDTEXT_LANGUAGE_SOMALI      = 0x51,",
          "151:   CDTEXT_LANGUAGE_SINHALESE   = 0x52,",
          "152:   CDTEXT_LANGUAGE_SHONA       = 0x53,",
          "153:   CDTEXT_LANGUAGE_SERBO_CROAT = 0x54,",
          "154:   CDTEXT_LANGUAGE_RUTHENIAN   = 0x55,",
          "155:   CDTEXT_LANGUAGE_RUSSIAN     = 0x56,",
          "156:   CDTEXT_LANGUAGE_QUECHUA     = 0x57,",
          "157:   CDTEXT_LANGUAGE_PUSHTU      = 0x58,",
          "158:   CDTEXT_LANGUAGE_PUNJABI     = 0x59,",
          "159:   CDTEXT_LANGUAGE_PERSIAN     = 0x5A,",
          "160:   CDTEXT_LANGUAGE_PAPAMIENTO  = 0x5B,",
          "161:   CDTEXT_LANGUAGE_ORIYA       = 0x5C,",
          "162:   CDTEXT_LANGUAGE_NEPALI      = 0x5D,",
          "163:   CDTEXT_LANGUAGE_NDEBELE     = 0x5E,",
          "164:   CDTEXT_LANGUAGE_MARATHI     = 0x5F,",
          "165:   CDTEXT_LANGUAGE_MOLDAVIAN   = 0x60,",
          "166:   CDTEXT_LANGUAGE_MALAYSIAN   = 0x61,",
          "167:   CDTEXT_LANGUAGE_MALAGASAY   = 0x62,",
          "168:   CDTEXT_LANGUAGE_MACEDONIAN  = 0x63,",
          "169:   CDTEXT_LANGUAGE_LAOTIAN     = 0x64,",
          "170:   CDTEXT_LANGUAGE_KOREAN      = 0x65,",
          "171:   CDTEXT_LANGUAGE_KHMER       = 0x66,",
          "172:   CDTEXT_LANGUAGE_KAZAKH      = 0x67,",
          "173:   CDTEXT_LANGUAGE_KANNADA     = 0x68,",
          "174:   CDTEXT_LANGUAGE_JAPANESE    = 0x69,",
          "175:   CDTEXT_LANGUAGE_INDONESIAN  = 0x6A,",
          "176:   CDTEXT_LANGUAGE_HINDI       = 0x6B,",
          "177:   CDTEXT_LANGUAGE_HEBREW      = 0x6C,",
          "178:   CDTEXT_LANGUAGE_HAUSA       = 0x6D,",
          "179:   CDTEXT_LANGUAGE_GURANI      = 0x6E,",
          "180:   CDTEXT_LANGUAGE_GUJURATI    = 0x6F,",
          "181:   CDTEXT_LANGUAGE_GREEK       = 0x70,",
          "182:   CDTEXT_LANGUAGE_GEORGIAN    = 0x71,",
          "183:   CDTEXT_LANGUAGE_FULANI      = 0x72,",
          "184:   CDTEXT_LANGUAGE_DARI        = 0x73,",
          "185:   CDTEXT_LANGUAGE_CHURASH     = 0x74,",
          "186:   CDTEXT_LANGUAGE_CHINESE     = 0x75,",
          "187:   CDTEXT_LANGUAGE_BURMESE     = 0x76,",
          "188:   CDTEXT_LANGUAGE_BULGARIAN   = 0x77,",
          "189:   CDTEXT_LANGUAGE_BENGALI     = 0x78,",
          "190:   CDTEXT_LANGUAGE_BIELORUSSIAN = 0x79,",
          "191:   CDTEXT_LANGUAGE_BAMBORA     = 0x7A,",
          "192:   CDTEXT_LANGUAGE_AZERBAIJANI = 0x7B,",
          "193:   CDTEXT_LANGUAGE_ASSAMESE    = 0x7C,",
          "194:   CDTEXT_LANGUAGE_ARMENIAN    = 0x7D,",
          "195:   CDTEXT_LANGUAGE_ARABIC      = 0x7E,",
          "196:   CDTEXT_LANGUAGE_AMHARIC     = 0x7F",
          "197: } cdtext_lang_t;",
          "200:   Opaque type for CD-Text.",
          "205:   Return string representation of the given genre code.",
          "207: const char *cdtext_genre2str (cdtext_genre_t i);",
          "210:   Return string representation of the given language code.",
          "212: const char *cdtext_lang2str (cdtext_lang_t i);",
          "215:   Return string representation of given field type.",
          "217: const char *cdtext_field2str (cdtext_field_t i);",
          "220:   Initialize a new cdtext structure.",
          "222:   When the structure is no longer needed, release the",
          "223:   resources using cdtext_delete.",
          "225: cdtext_t *cdtext_init (void);",
          "228:   Read a binary CD-TEXT and fill a cdtext struct.",
          "230:   @param p_cdtext the CD-TEXT object",
          "231:   @param wdata the data",
          "232:   @param i_data size of wdata",
          "234:   @returns 0 on success, non-zero on failure",
          "236: int cdtext_data_init(cdtext_t *p_cdtext, uint8_t *wdata, size_t i_data);",
          "239:   Free memory associated with the given cdtext_t object.",
          "241:   @param p_cdtext the CD-TEXT object",
          "243: void cdtext_destroy (cdtext_t *p_cdtext);",
          "246:   Returns a copy of the return value of cdtext_get_const or NULL.",
          "248:   Must be freed using cdio_free() when done.",
          "249:   @see cdtext_get_const",
          "251: char *cdtext_get (const cdtext_t *p_cdtext, cdtext_field_t key, track_t track);",
          "254:   Returns value of the given field.",
          "256:   NULL is returned if key is CDTEXT_INVALID or the field is not set.",
          "257:   Strings are encoded in UTF-8.",
          "259:   @param p_cdtext the CD-TEXT object",
          "260:   @param field type of the field to return",
          "261:   @param track specifies the track, 0 stands for disc",
          "263: const char *cdtext_get_const (const cdtext_t *p_cdtext, cdtext_field_t field,",
          "264:                               track_t track);",
          "267:   Returns the discs genre code.",
          "269:   @param p_cdtext the CD-TEXT object",
          "271: cdtext_genre_t cdtext_get_genre (const cdtext_t *p_cdtext);",
          "274:   Returns the currently active language.",
          "276:   @param p_cdtext the CD-TEXT object",
          "278: cdtext_lang_t cdtext_get_language (const cdtext_t *p_cdtext);",
          "281:   Returns the first track number.",
          "283:   @param p_cdtext the CD-TEXT object",
          "285: track_t cdtext_get_first_track(const cdtext_t *p_cdtext);",
          "288:   Returns the last track number.",
          "290:   @param p_cdtext the CD-TEXT object",
          "292: track_t cdtext_get_last_track(const cdtext_t *p_cdtext);",
          "295:   Try to select the given language.",
          "297:   @param p_cdtext the CD-TEXT object",
          "298:   @param language string representation of the language",
          "300:   @return true on success, false if language is not available",
          "302: bool cdtext_select_language(cdtext_t *p_cdtext, cdtext_lang_t language);",
          "305:   Returns a list of available languages or NULL.",
          "307:   Internally the list is stored in a static array.",
          "309:   @param p_cdtext the CD-TEXT object",
          "311: cdtext_lang_t *cdtext_list_languages (const cdtext_t *p_cdtext);",
          "314:   Sets the given field at the given track to the given value.",
          "316:   Recodes to UTF-8 if charset is not NULL.",
          "318:   @param p_cdtext the CD-TEXT object",
          "319:   @param key field to set",
          "320:   @param value value to set",
          "321:   @param track track to work on",
          "322:   @param charset charset to convert from",
          "324: void cdtext_set (cdtext_t *p_cdtext, cdtext_field_t key, const uint8_t *value, track_t track, const char *charset);",
          "326: #ifdef __cplusplus",
          "327: }",
          "",
          "---------------"
        ],
        "src/libcdio/cdio/device.h||src/libcdio/cdio/device.h": [
          "File: src/libcdio/cdio/device.h -> src/libcdio/cdio/device.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "192:   extern const driver_id_t cdio_os_driver;",
          "208:       The following are status codes for completion of a given cdio",
          "209:       operation. By design 0 is successful completion and -1 is error",
          "",
          "[Removed Lines]",
          "196:      Those are deprecated; use cdio_drivers or cdio_device_drivers to",
          "197:      iterate over all drivers or only the device drivers.",
          "198:      Make sure what's listed for CDIO_MIN_DRIVER is the last",
          "199:      enumeration in driver_id_t. Since we have a bogus (but useful) 0th",
          "200:      entry above we don't have to add one.",
          "202: LIBCDIO_DEPRECATED(static const driver_id_t CDIO_MIN_DRIVER, \"please use cdio_drivers\") = DRIVER_AIX;",
          "203: LIBCDIO_DEPRECATED(static const driver_id_t CDIO_MIN_DEVICE_DRIVER, \"please use cdio_device_drivers\") = DRIVER_AIX;",
          "204: LIBCDIO_DEPRECATED(static const driver_id_t CDIO_MAX_DRIVER, \"please use cdio_drivers\") = DRIVER_NRG;",
          "205: LIBCDIO_DEPRECATED(static const driver_id_t CDIO_MAX_DEVICE_DRIVER, \"please use cdio_device_drivers\") = DRIVER_WIN32;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/libcdio/cdio/ds.h||src/libcdio/cdio/ds.h": [
          "File: src/libcdio/cdio/ds.h -> src/libcdio/cdio/ds.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "5:     Copyright (C) 2000, 2004 Herbert Valerio Riedel <hvr@gnu.org>",
          "7:     This program is free software: you can redistribute it and/or modify",
          "",
          "[Removed Lines]",
          "2:     $Id: ds.h,v 1.5 2008/03/25 15:59:09 karl Exp $",
          "4:     Copyright (C) 2005, 2008 Rocky Bernstein <rocky@gnu.org>",
          "",
          "[Added Lines]",
          "2:     Copyright (C) 2005, 2008, 2017 Rocky Bernstein <rocky@gnu.org>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "18:     along with this program.  If not, see <http://www.gnu.org/licenses/>.",
          "",
          "[Removed Lines]",
          "24:     Note: this header will is slated to get removed and libcdio will use",
          "25:     glib.h routines instead.",
          "",
          "[Added Lines]",
          "22:     Note: this header will is slated to get removed and libcdio will use",
          "23:     glib.h routines instead.",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "39: typedef int (*_cdio_list_cmp_func_t) (void *p_data1, void *p_data2);",
          "40: typedef int (*_cdio_list_iterfunc_t) (void *p_data, void *p_user_data);",
          "49: #ifdef __cplusplus",
          "50: extern \"C\" {",
          "",
          "[Removed Lines]",
          "44: #define CdioList CdioList_t",
          "45: #define CdioListNode CdioListNode_t",
          "46: #define _cdio_list_cmp_func _cdio_list_cmp_func_t",
          "47: #define _cdio_list_iterfunc _cdio_list_iterfunc_t",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "54: CdioList_t *_cdio_list_new (void);",
          "56: void _cdio_list_free (CdioList_t *p_list, int free_data);",
          "58: unsigned _cdio_list_length (const CdioList_t *list);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "60: void _cdio_list_prepend (CdioList_t *p_list, void *p_data);",
          "62: void _cdio_list_append (CdioList_t *p_list, void *p_data);",
          "64: void _cdio_list_foreach (CdioList_t *p_list, _cdio_list_iterfunc_t func,",
          "65:                          void *p_user_data);",
          "68:                                  _cdio_list_iterfunc_t cmp_func,",
          "69:                                  void *p_user_data);",
          "",
          "[Removed Lines]",
          "67: CdioListNode_t *_cdio_list_find (CdioList_t *p_list,",
          "",
          "[Added Lines]",
          "58: CdioListNode_t *_cdio_list_find (CdioList_t *p_list,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "78: CdioListNode_t *_cdio_list_end (CdioList_t *p_list);",
          "80: CdioListNode_t *_cdio_list_node_next (CdioListNode_t *p_node);",
          "82: void _cdio_list_node_free (CdioListNode_t *p_node, int i_free_data);",
          "84: void *_cdio_list_node_data (CdioListNode_t *p_node);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "73:   void _cdio_list_node_free (CdioListNode_t *p_node, int i_free_data,",
          "",
          "---------------"
        ],
        "src/libcdio/cdio/iso9660.h||src/libcdio/cdio/iso9660.h": [
          "File: src/libcdio/cdio/iso9660.h -> src/libcdio/cdio/iso9660.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "3:                   Rocky Bernstein <rocky@gnu.org>",
          "4:     Copyright (C) 2000 Herbert Valerio Riedel <hvr@gnu.org>",
          "",
          "[Removed Lines]",
          "2:     Copyright (C) 2003-2008, 2012-2013",
          "",
          "[Added Lines]",
          "2:     Copyright (C) 2003-2008, 2012-2013, 2017",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "509: typedef struct iso9660_svd_s  iso9660_svd_t;",
          "511: PRAGMA_END_PACKED",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "514:   statbuf file pointers returned from the various",
          "515:   Cdio iso9660 readdir routines.",
          "517: typedef CdioList_t CdioISO9660FileList_t;",
          "520:   statbuf drectory pointer returned from the variious",
          "521:   Cdio iso9660 readdir routines.",
          "523: typedef CdioList_t CdioISO9660DirList_t;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "526:   struct tm          tm;              /**< time on entry - FIXME merge with",
          "534:   enum { _STAT_FILE = 1, _STAT_DIR = 2 } type;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "543:   lsn_t              lsn[ISO_MAX_MULTIEXTENT];",
          "545:   uint32_t           extsize[ISO_MAX_MULTIEXTENT];",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "569:     associated with the image. Call this when done using using an ISO",
          "570:     9660 image.",
          "573:     false would be returned.",
          "575:   bool iso9660_close (iso9660_t * p_iso);",
          "",
          "[Removed Lines]",
          "572:     @return true is unconditionally returned. If there was an error",
          "",
          "[Added Lines]",
          "587:     @param p_iso the ISO-9660 file image to get data from",
          "589:     @return true is unconditionally returned. If there was an error",
          "590:     false would be returned. Resources associated with p_iso are",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "579:     Open an ISO 9660 image for reading. Maybe in the future we will have",
          "580:     a mode. NULL is returned on error.",
          "582:   iso9660_t *iso9660_open (const char *psz_path /*flags, mode */);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "600:     @param psz_path full path of ISO9660 file.",
          "603:     @return a IS9660 structure  is unconditionally returned. The caller",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "864:    Given a directory pointer, find the filesystem entry that contains",
          "865:    lsn and return information about it.",
          "867:    @return stat_t of entry if we found lsn, or NULL otherwise.",
          "868:    Caller must free return value using iso9660_stat_free().",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "891:    @param p_cdio the CD object to read from",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "876:    lsn and return information about it.",
          "878:    @return stat_t of entry if we found lsn, or NULL otherwise.",
          "879:    Caller must free return value using iso9660_stat_free().",
          "881: iso9660_stat_t *iso9660_fs_find_lsn_with_path(CdIo_t *p_cdio, lsn_t i_lsn,",
          "885:    Given a directory pointer, find the filesystem entry that contains",
          "886:    lsn and return information about it.",
          "888:    @return stat_t of entry if we found lsn, or NULL otherwise.",
          "889:    Caller must free return value using iso9660_stat_free().",
          "",
          "[Removed Lines]",
          "875:    Given a directory pointer, find the filesystem entry that contains",
          "",
          "[Added Lines]",
          "901:    Given a directory pointer, find the filesystem entry that contains",
          "902:    LSN and return information about it.",
          "904:    @param p_cdio the ISO-9660 file image to get data from.",
          "906:    @param i_lsn the LSN to find",
          "908:    @param ppsz_full_filename the place to store the name of the path that has LSN.",
          "909:    On entry this should point to NULL. If not, the value will be freed.",
          "910:    On exit a value is malloc'd and the caller is responsible for",
          "923:    @param p_iso the ISO-9660 file image to get data from.",
          "925:    @param i_lsn the LSN to find",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "913:   Free the passed iso9660_stat_t structure.",
          "915: void iso9660_stat_free(iso9660_stat_t *p_stat);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "956:   @param p_stat iso9660 stat buffer to free.",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "920:   @param p_cdio the CD object to read from",
          "922:   @param psz_path filename path to look up and get information about",
          "924:   @return ISO 9660 file information",
          "926:   Important note:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "968:   @return ISO 9660 file information. The caller must free the returned",
          "969:   result using iso9660_stat_free().",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "939:   Return file status for path name psz_path. NULL is returned on error.",
          "940:   pathname version numbers in the ISO 9660 name are dropped, i.e. ;1",
          "941:   is removed and if level 1 ISO-9660 names are lowercased.",
          "943:   b_mode2 is historical. It is not used.",
          "950:   Return file status for pathname. NULL is returned on error.",
          "952: iso9660_stat_t *iso9660_ifs_stat (iso9660_t *p_iso, const char psz_path[]);",
          "956:   error.  pathname version numbers in the ISO 9660 name are dropped,",
          "957:   i.e. ;1 is removed and if level 1 ISO-9660 names are lowercased.",
          "959: iso9660_stat_t *iso9660_ifs_stat_translate (iso9660_t *p_iso,",
          "960:                                             const char psz_path[]);",
          "964:   returned result using _cdio_list_free().",
          "966:   b_mode2 is historical. It is not used.",
          "969:                                  bool b_mode2);",
          "973:   the returned result using _cdio_list_free().",
          "975: CdioList_t * iso9660_ifs_readdir (iso9660_t *p_iso, const char psz_path[]);",
          "978:   Return the PVD's application ID.",
          "979:   NULL is returned if there is some problem in getting this.",
          "981: char * iso9660_get_application_id(iso9660_pvd_t *p_pvd);",
          "985:   is some problem in getting this and false is returned.",
          "987: bool iso9660_ifs_get_application_id(iso9660_t *p_iso,",
          "",
          "[Removed Lines]",
          "945: iso9660_stat_t *iso9660_fs_stat_translate (CdIo_t *p_cdio,",
          "946:                                            const char psz_path[],",
          "947:                                            bool b_mode2);",
          "963:   pointers for the files inside that directory. The caller must free the",
          "968: CdioList_t * iso9660_fs_readdir (CdIo_t *p_cdio, const char psz_path[],",
          "972:   pointers for the files inside that directory. The caller must free",
          "984:   Get the application ID.  psz_app_id is set to NULL if there",
          "",
          "[Added Lines]",
          "989:   @param p_cdio the CD object to read from",
          "991:   @param psz_path filename path to look up and get information about",
          "993:   @return ISO 9660 file information.  The caller must free the",
          "994:   returned result using iso9660_stat_free().",
          "997: iso9660_stat_t *iso9660_fs_stat_translate (CdIo_t *p_cdio,",
          "1001:   @param p_iso the ISO-9660 file image to get data from",
          "1003:   @param psz_path path the look up",
          "1005:   @return file status for pathname. NULL is returned on error.",
          "1012:   @param p_iso the ISO-9660 file image to get data from",
          "1014:   @param psz_path filename path translate",
          "1018:   i.e. ;1 is removed and if level 1 ISO-9660 names are lowercased.",
          "1026:   Create a new data structure to hold a list of",
          "1027:   ISO9660 statbuf-entry pointers for the files inside",
          "1028:   a directory.",
          "1030:   @return allocated list. Free with iso9660_filelist_free()",
          "1032: CdioISO9660FileList_t * iso9660_filelist_new(void);",
          "1036:   Create a new data structure to hold a list of",
          "1037:   ISO9660 statbuf entries for directory",
          "1038:   pointers for the files inside a directory.",
          "1040:   @return allocated list. Free with iso9660_dirlist_free()",
          "1042: CdioISO9660DirList_t * iso9660_dirlist_new(void);",
          "1047:   Free the passed CdioISOC9660FileList_t structure.",
          "1049: void iso9660_filelist_free(CdioISO9660FileList_t *p_filelist);",
          "1053:   Free the passed CdioISOC9660Dirlist_t structure.",
          "1055: void iso9660_dirlist_free(CdioISO9660DirList_t *p_filelist);",
          "1059:   Read psz_path (a directory) and return a list of iso9660_stat_t",
          "1060:   pointers for the files inside that directory.",
          "1062:   @param p_cdio the CD object to read from",
          "1064:   @param psz_path path the read the directory from.",
          "1066:   @return file status for psz_path. The caller must free the",
          "1069: CdioList_t * iso9660_fs_readdir (CdIo_t *p_cdio, const char psz_path[]);",
          "1072:   Read psz_path (a directory) and return a list of iso9660_stat_t",
          "1073:   pointers for the files inside that directory.",
          "1077:   @param psz_path path the read the directory from.",
          "1079:   @return file status for psz_path. The caller must free the",
          "1087:   @param p_pvd the PVD to get data from",
          "1090:   NULL is returned if there is some problem in getting this.",
          "1091:   The caller must free the resturned result using free() if",
          "1097:   Return the PVD's application ID.",
          "1099:   @param p_iso the ISO-9660 file image to get data from",
          "1101:   @param p_psz_app_id the application id set on success.",
          "1103:   NULL is returned if there is some problem in getting this.",
          "1104:   The caller must free the resturned result using free() if",
          "",
          "---------------"
        ],
        "src/libcdio/cdio/types.h||src/libcdio/cdio/types.h": [
          "File: src/libcdio/cdio/types.h -> src/libcdio/cdio/types.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "3:                   Rocky Bernstein <rocky@gnu.org>",
          "4:     Copyright (C) 2000 Herbert Valerio Riedel <hvr@gnu.org>",
          "",
          "[Removed Lines]",
          "2:     Copyright (C) 2002, 2003, 2004, 2005, 2006, 2008, 2012",
          "",
          "[Added Lines]",
          "2:     Copyright (C) 2002, 2003, 2004, 2005, 2006, 2008, 2012, 2017",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "155: #if defined(__MINGW32__)",
          "156: #  define PRAGMA_BEGIN_PACKED _Pragma(\"pack(push)\") \\",
          "157:                               _Pragma(\"pack(1)\")",
          "159: #elif __GNUC__ > 4  || (__STDC_VERSION__ >= 199901)",
          "",
          "[Removed Lines]",
          "158: #  define PRAGMA_END_PACKED   _Pragma(\"pack(pop)\")",
          "",
          "[Added Lines]",
          "158: #  define PRAGMA_END_PACKED   _Pragma(\"pack(pop)\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "337: } cdio_track_flag;",
          "339: #ifdef __cplusplus",
          "340: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "341: typedef void (*CdioDataFree_t)(void *ptr);",
          "",
          "---------------"
        ],
        "src/libcdio/cdio/udf_time.h||src/libcdio/cdio/udf_time.h": [
          "File: src/libcdio/cdio/udf_time.h -> src/libcdio/cdio/udf_time.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: #ifndef UDF_TIME_H",
          "28: #include <time.h>",
          "31: struct timespec {",
          "",
          "[Removed Lines]",
          "26: #define UDF_TIME_H",
          "30: #if defined(__MINGW32__) && !defined(__MINGW64_VERSION_MAJOR)",
          "",
          "[Added Lines]",
          "26: #define UDF_TIME_H",
          "30: #if defined(__MINGW32__) && !defined(__MINGW64_VERSION_MAJOR) && !defined(__struct_timespec_defined)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "62:     Return the modification timestamp of the file",
          "",
          "[Removed Lines]",
          "64:   udf_timestamp_t *udf_get_modification_timestamp(const udf_dirent_t",
          "",
          "[Added Lines]",
          "64:   udf_timestamp_t *udf_get_modification_timestamp(const udf_dirent_t",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "73:     Convert a UDF timestamp to a time_t. If microseconds are desired,",
          "76:      const udf_timestamp_t src);",
          "78:   udf_timestamp_t *udf_timespec_to_stamp(const struct timespec ts,",
          "",
          "[Removed Lines]",
          "75:   time_t *udf_stamp_to_time(time_t *dest, long int *dest_usec,",
          "",
          "[Added Lines]",
          "75:   time_t *udf_stamp_to_time(time_t *dest, long int *dest_usec,",
          "",
          "---------------"
        ],
        "src/libcdio/cdio/util.h||src/libcdio/cdio/util.h": [
          "File: src/libcdio/cdio/util.h -> src/libcdio/cdio/util.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: #ifndef CDIO_UTIL_H_",
          "22: #define CDIO_UTIL_H_",
          "26:    \\brief Miscellaneous utility functions.",
          "28:    Warning: this will probably get removed/replaced by using glib.h",
          "",
          "[Removed Lines]",
          "25:    \\file util.h",
          "",
          "[Added Lines]",
          "25:    \\file util.h",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "66:   return i_blocks;",
          "67: }",
          "70: static CDIO_INLINE unsigned",
          "71: _cdio_ceil2block (unsigned offset, uint16_t i_blocksize)",
          "72: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71: #define CDIO_FREE_IF_NOT_NULL(p_obj) \\",
          "72:   if (NULL != p_obj) { free(p_obj); p_obj=NULL; };",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "100: char *",
          "101: _cdio_strdup_upper (const char str[]);",
          "107: char *",
          "108: _cdio_strdup_fixpath (const char path[]);",
          "",
          "[Removed Lines]",
          "104:    MinGW/MSYS where a \"/c/...\" path must be translated to \"c:/...\" for",
          "105:    use with fopen(), etc. Returned string must be freed by the caller",
          "",
          "[Added Lines]",
          "110:     MinGW/MSYS where a \"/c/...\" path must be translated to \"c:/...\" for",
          "111:     use with fopen(), etc. Returned string must be freed by the caller",
          "",
          "---------------"
        ],
        "src/libcdio/cdio/version.h||src/libcdio/cdio/version.h": [
          "File: src/libcdio/cdio/version.h -> src/libcdio/cdio/version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:     version is used.  cdio_version_string has the same value, but it is a",
          "14:     testing in the C preprocessor. libcdio_version_num has the same",
          "15:     value, but it is a constant variable that can be accessed at run",
          "",
          "[Removed Lines]",
          "10: #define CDIO_VERSION \"0.94 (Rufus)\"",
          "17: #define LIBCDIO_VERSION_NUM 94",
          "",
          "[Added Lines]",
          "10: #define CDIO_VERSION \"2.0.0 (Rufus)\"",
          "17: #define LIBCDIO_VERSION_NUM 20000",
          "",
          "---------------"
        ],
        "src/libcdio/driver/_cdio_stream.c||src/libcdio/driver/_cdio_stream.c": [
          "File: src/libcdio/driver/_cdio_stream.c -> src/libcdio/driver/_cdio_stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:   cdio_stream_close(p_obj);",
          "76:   p_obj->op.free(p_obj->user_data);",
          "78:   free(p_obj);",
          "79: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76:   p_obj->op.free(p_obj->user_data);",
          "",
          "---------------"
        ],
        "src/libcdio/driver/cdio_private.h||src/libcdio/driver/cdio_private.h": [
          "File: src/libcdio/driver/cdio_private.h -> src/libcdio/driver/cdio_private.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "3:   Rocky Bernstein <rocky@gnu.org>",
          "5:   This program is free software: you can redistribute it and/or modify",
          "",
          "[Removed Lines]",
          "2:   Copyright (C) 2003-2005, 2008-2009, 2011-2012, 2016",
          "",
          "[Added Lines]",
          "2:   Copyright (C) 2003-2005, 2008-2009, 2011-2012, 2016-2017",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43: extern \"C\" {",
          "47: static inline char *strndup(const char *s, size_t n)",
          "48: {",
          "49:     char *result;",
          "",
          "[Removed Lines]",
          "46: #ifndef HAVE_STRNDUP",
          "",
          "[Added Lines]",
          "46: #ifndef HAVE_STRNDUP",
          "47: #undef  strndup",
          "48: #define strndup libcdio_strndup",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "528:   driver_return_code_t close_tray_bsdi    (const char *psz_drive);",
          "529:   driver_return_code_t close_tray_freebsd (const char *psz_drive);",
          "530:   driver_return_code_t close_tray_linux   (const char *psz_drive);",
          "532:   driver_return_code_t close_tray_os2     (const char *psz_drive);",
          "533:   driver_return_code_t close_tray_osx     (const char *psz_drive);",
          "534:   driver_return_code_t close_tray_solaris (const char *psz_drive);",
          "",
          "[Removed Lines]",
          "531:   driver_return_code_t close_tray_netbsd  (const char *psz_drive);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/libcdio/driver/ds.c||src/libcdio/driver/ds.c": [
          "File: src/libcdio/driver/ds.c -> src/libcdio/driver/ds.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:   return p_new_obj;",
          "62: }",
          "65: _cdio_list_free (CdioList_t *p_list, int free_data)",
          "66: {",
          "68:     _cdio_list_node_free (_cdio_list_begin (p_list), free_data);",
          "70:   free (p_list);",
          "",
          "[Removed Lines]",
          "64: void",
          "67:   while (_cdio_list_length (p_list))",
          "",
          "[Added Lines]",
          "64: void",
          "67:   while (_cdio_list_length (p_list))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "182:   return NULL;",
          "183: }",
          "186: _cdio_list_node_free (CdioListNode_t *p_node, int free_data)",
          "187: {",
          "188:   CdioList_t *p_list;",
          "",
          "[Removed Lines]",
          "185: void",
          "",
          "[Added Lines]",
          "185: void",
          "186: _cdio_list_node_free (CdioListNode_t *p_node,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "193:   p_list = p_node->list;",
          "195:   cdio_assert (_cdio_list_length (p_list) > 0);",
          "198:     free (_cdio_list_node_data (p_node));",
          "200:   if (_cdio_list_length (p_list) == 1)",
          "",
          "[Removed Lines]",
          "197:   if (free_data)",
          "",
          "[Added Lines]",
          "198:   if (free_data && free_fn)",
          "",
          "---------------"
        ],
        "src/libcdio/driver/utf8.c||src/libcdio/driver/utf8.c": [
          "File: src/libcdio/driver/utf8.c -> src/libcdio/driver/utf8.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "346:   free(le_src);",
          "348:   return (*dst != NULL);",
          "349: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "349: }",
          "350: #else",
          "",
          "---------------"
        ],
        "src/libcdio/iso9660/iso9660.c||src/libcdio/iso9660/iso9660.c": [
          "File: src/libcdio/iso9660/iso9660.c -> src/libcdio/iso9660/iso9660.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3:   Copyright (C) 2000 Herbert Valerio Riedel <hvr@gnu.org>",
          "5:   This program is free software: you can redistribute it and/or modify",
          "",
          "[Removed Lines]",
          "2:   Copyright (C) 2003-2009, 2013-2014, 2016 Rocky Bernstein <rocky@gnu.org>",
          "",
          "[Added Lines]",
          "2:   Copyright (C) 2003-2009, 2013-2014, 2016-2017 Rocky Bernstein",
          "3:   <rocky@gnu.org>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "204:   p_tm->tm_min    = idr_date->dt_minute;",
          "205:   p_tm->tm_sec    = idr_date->dt_second - idr_date->dt_gmtoff * (15 * 60);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "209: #ifdef HAVE_STRUCT_TM_TM_ZONE",
          "211:   p_tm->tm_zone   = 0;",
          "212: #endif",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "272: #ifndef HAVE_TM_GMTOFF",
          "273:   p_tm->tm_sec += p_ldate->lt_gmtoff * (15 * 60);",
          "274: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "280: #endif",
          "281: #ifdef HAVE_STRUCT_TM_TM_ZONE",
          "283:   p_tm->tm_zone = 0;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "365:   if (!p_tm) return;",
          "367:   _snprintf(_pvd_date, 17,",
          "368:            \"%4.4d%2.2d%2.2d\" \"%2.2d%2.2d%2.2d\" \"%2.2d\",",
          "369:            p_tm->tm_year + 1900, p_tm->tm_mon + 1, p_tm->tm_mday,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "776:   idr->filename.len = to_711(strlen(filename)",
          "780:   memcpy(&dir8[offset] + su_offset, su_data, su_size);",
          "781: }",
          "",
          "[Removed Lines]",
          "779:   memcpy(&idr->filename.str[1], filename, from_711(idr->filename.len));",
          "",
          "[Added Lines]",
          "789:   memcpy(&idr->filename.str[1], filename, from_711(idr->filename.len));",
          "790:   if (su_size > 0 && su_data)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1111:   char tmpbuf[1024] = { 0, };",
          "1113:   cdio_assert (strlen (pathname) < (sizeof (tmpbuf) - sizeof (\";65535\")));",
          "1115:   _snprintf (tmpbuf, sizeof(tmpbuf), \"%s;%d\", pathname, version);",
          "1117:   return strdup (tmpbuf);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/libcdio/iso9660/iso9660_fs.c||src/libcdio/iso9660/iso9660_fs.c": [
          "File: src/libcdio/iso9660/iso9660_fs.c -> src/libcdio/iso9660/iso9660_fs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3:   Copyright (C) 2001 Herbert Valerio Riedel <hvr@gnu.org>",
          "5:   This program is free software: you can redistribute it and/or modify",
          "",
          "[Removed Lines]",
          "2:   Copyright (C) 2003-2008, 2011-2015 Rocky Bernstein <rocky@gnu.org>",
          "",
          "[Added Lines]",
          "2:   Copyright (C) 2003-2008, 2011-2015, 2017 Rocky Bernstein <rocky@gnu.org>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "204:   Open an ISO 9660 image for reading. Maybe in the future we will have",
          "205:   a mode. NULL is returned on error.",
          "207: iso9660_t *",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "211:   @param psz_path full path of ISO9660 file.",
          "213:   @return a IS9660 structure  is unconditionally returned. The caller",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "210:   return iso9660_open_ext(psz_path, ISO_EXTENSION_NONE);",
          "211: }",
          "215:   a mode. NULL is returned on error.",
          "217: iso9660_t *",
          "",
          "[Removed Lines]",
          "214:   Open an ISO 9660 image for reading. Maybe in the future we will have",
          "",
          "[Added Lines]",
          "223:   Open an ISO 9660 image for reading allowing various ISO 9660",
          "224:   extensions.  Maybe in the future we will have a mode. NULL is",
          "225:   returned on error.",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "221:   return iso9660_open_ext_private(psz_path, iso_extension_mask, 0, false);",
          "222: }",
          "227:   a mode. NULL is returned on error.",
          "229: iso9660_t *",
          "",
          "[Removed Lines]",
          "226:   Open an ISO 9660 image for reading. Maybe in the future we will have",
          "",
          "[Added Lines]",
          "238:   will try to guess various internal offset based on internal",
          "239:   checks. This may be useful when trying to read an ISO 9660 image",
          "240:   contained in a file format that libiso9660 doesn't know natively",
          "241:   (or knows imperfectly.)",
          "243:   Some tolerence allowed for positioning the ISO 9660 image. We scan",
          "244:   for STANDARD_ID and use that to set the eventual offset to adjust",
          "245:   by (as long as that is <= i_fuzz).",
          "247:   Maybe in the future we will have a mode. NULL is returned on error.",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "232:   return iso9660_open_fuzzy_ext(psz_path, ISO_EXTENSION_NONE, i_fuzz);",
          "233: }",
          "237:   a mode. NULL is returned on error.",
          "239: iso9660_t *",
          "",
          "[Removed Lines]",
          "236:   Open an ISO 9660 image for reading. Maybe in the future we will have",
          "",
          "[Added Lines]",
          "258:   Open an ISO 9660 image for reading with some tolerence for positioning",
          "259:   of the ISO9660 image. We scan for ISO_STANDARD_ID and use that to set",
          "260:   the eventual offset to adjust by (as long as that is <= i_fuzz).",
          "262:   Maybe in the future we will have a mode. NULL is returned on error.",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "244:   return iso9660_open_ext_private(psz_path, iso_extension_mask, i_fuzz,",
          "245:       true);",
          "246: }",
          "251:   be returned.",
          "253: bool",
          "254: iso9660_close (iso9660_t *p_iso)",
          "255: {",
          "256:   if (NULL != p_iso) {",
          "257:     cdio_stdio_destroy(p_iso->stream);",
          "258:     free(p_iso);",
          "259:   }",
          "",
          "[Removed Lines]",
          "249:   Close previously opened ISO 9660 image.",
          "250:   True is unconditionally returned. If there was an error false would",
          "",
          "[Added Lines]",
          "276:     associated with the image. Call this when done using using an ISO",
          "277:     9660 image.",
          "279:     @return true is unconditionally returned. If there was an error",
          "286:     cdio_stdio_destroy(p_iso->stream);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "708: }",
          "712: static iso9660_stat_t *",
          "713: _iso9660_dir_to_statbuf (iso9660_dir_t *p_iso9660_dir,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "743:   Check for the end of a directory record list in a single directory",
          "744:   block.  If at the end, set the offset to start of the next block and",
          "745:   return \"true\". The caller often skips actions only when at the end",
          "746:   of a record list.",
          "748: static bool",
          "749: iso9660_check_dir_block_end(iso9660_dir_t *p_iso9660_dir, unsigned *offset)",
          "750: {",
          "751:   if (!iso9660_get_dir_len(p_iso9660_dir))",
          "752:     {",
          "754:   Length 0 indicates that no more directory records are in this",
          "755:   block. This matches how Linux and libburn's libisofs work.",
          "757:   Note that assignment below does not exactly round up.",
          "758:   If (offset % ISO_BLOCKSIZE) == 0  then offset is incremented",
          "759:   by ISO_BLOCKSIZE, i.e. the block is skipped.",
          "762:       return true;",
          "763:     }",
          "765:   if ((*offset + iso9660_get_dir_len(p_iso9660_dir) - 1) / ISO_BLOCKSIZE",
          "766:       != *offset / ISO_BLOCKSIZE)",
          "767:     {",
          "769:   Directory record spans over block limit.",
          "770:   Hop to next block where a new record is supposed to begin,",
          "771:   if it is not after the end of the directory data.",
          "774:       return true;",
          "775:     }",
          "777:   return false;",
          "778: }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "738:     }",
          "739:   p_stat->type    = (p_iso9660_dir->file_flags & ISO_DIRECTORY)",
          "740:     ? _STAT_DIR : _STAT_FILE;",
          "744:   p_stat->secsize[p_stat->extents] = _cdio_len2blocks (p_stat->size[p_stat->extents], ISO_BLOCKSIZE);",
          "746:   p_stat->b_xa    = false;",
          "",
          "[Removed Lines]",
          "741:   p_stat->lsn[p_stat->extents] = from_733 (p_iso9660_dir->extent);",
          "742:   p_stat->size[p_stat->extents] = from_733 (p_iso9660_dir->size);",
          "743:   p_stat->total_size += p_stat->size[p_stat->extents];",
          "",
          "[Added Lines]",
          "811:   p_stat->lsn[p_stat->extents] = from_733 (p_iso9660_dir->extent);",
          "812:   p_stat->extsize[p_stat->extents] = from_733 (p_iso9660_dir->size);",
          "813:   p_stat->size += p_stat->extsize[p_stat->extents];",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "806:   } else {",
          "808:       strncpy(p_stat->filename, &p_iso9660_dir->filename.str[1], i_fname);",
          "811:   if (p_stat->extents > ISO_MAX_MULTIEXTENT) {",
          "812:       cdio_warn(\"Warning: Too many multiextent file parts for '%s'\", p_stat->filename);",
          "813:       free(p_stat->rr.psz_symlink);",
          "814:       free(p_stat);",
          "815:       return NULL;",
          "816:   }",
          "818:   iso9660_get_dtime(&(p_iso9660_dir->recording_time), true, &(p_stat->tm));",
          "822:     free(p_stat);",
          "823:     return NULL;",
          "824:   }",
          "",
          "[Removed Lines]",
          "809:   }",
          "810:   p_stat->extents++;",
          "820:   if (dir_len < sizeof (iso9660_dir_t)) {",
          "821:     free(p_stat->rr.psz_symlink);",
          "",
          "[Added Lines]",
          "879:   }",
          "885:   }",
          "890:   if (dir_len < sizeof (iso9660_dir_t)) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1006:       iso9660_dir_t *p_iso9660_dir = (void *) &_dirbuf[offset];",
          "1007:       iso9660_stat_t *p_iso9660_stat;",
          "1008:       int cmp;",
          "1014:  }",
          "1016:       p_iso9660_stat = _iso9660_dir_to_statbuf (p_iso9660_dir, NULL,",
          "",
          "[Removed Lines]",
          "1010:       if (!iso9660_get_dir_len(p_iso9660_dir))",
          "1011:  {",
          "1012:    offset++;",
          "1013:    continue;",
          "",
          "[Added Lines]",
          "1079:       if (iso9660_check_dir_block_end(p_iso9660_dir, &offset))",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1041:       if (!cmp) {",
          "1042:  iso9660_stat_t *ret_stat",
          "1045:  free(p_iso9660_stat);",
          "1046:  free (_dirbuf);",
          "1047:  return ret_stat;",
          "1048:       }",
          "1051:       free(p_iso9660_stat);",
          "1053:       offset += iso9660_get_dir_len(p_iso9660_dir);",
          "",
          "[Removed Lines]",
          "1043:    = _fs_stat_traverse (p_cdio, p_iso9660_stat, &splitpath[1]);",
          "1044:  free(p_iso9660_stat->rr.psz_symlink);",
          "1050:       free(p_iso9660_stat->rr.psz_symlink);",
          "",
          "[Added Lines]",
          "1109:    = _fs_stat_traverse (p_cdio, p_iso9660_stat, &splitpath[1]);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1063: static iso9660_stat_t *",
          "1064: _fs_iso_stat_traverse (iso9660_t *p_iso, const iso9660_stat_t *_root,",
          "1065:          char **splitpath)",
          "1067:   unsigned offset;",
          "1069:   int ret;",
          "1070:   iso9660_stat_t *p_stat = NULL;",
          "1071:   iso9660_dir_t *p_iso9660_dir = NULL;",
          "",
          "[Removed Lines]",
          "1066: {",
          "1068:   uint8_t *_dirbuf = NULL;",
          "",
          "[Added Lines]",
          "1130: {",
          "1132:   uint8_t *_dirbuf = NULL;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1095:     return NULL;",
          "1096:     }",
          "1099:   if (ret!=ISO_BLOCKSIZE*_root->secsize[0]) return NULL;",
          "1101:   for (offset = 0; offset < (_root->secsize[0] * ISO_BLOCKSIZE);",
          "1102:        offset += iso9660_get_dir_len(p_iso9660_dir))",
          "1103:     {",
          "1105:       int cmp;",
          "1111:  }",
          "1113:       p_stat = _iso9660_dir_to_statbuf (p_iso9660_dir, p_stat,",
          "",
          "[Removed Lines]",
          "1098:   ret = iso9660_iso_seek_read (p_iso, _dirbuf, _root->lsn[0], _root->secsize[0]);",
          "1104:       p_iso9660_dir = (void *) &_dirbuf[offset];",
          "1107:       if (!iso9660_get_dir_len(p_iso9660_dir))",
          "1108:  {",
          "1109:    offset++;",
          "1110:    continue;",
          "",
          "[Added Lines]",
          "1162:   ret = iso9660_iso_seek_read (p_iso, _dirbuf, _root->lsn[0], _root->secsize[0]);",
          "1163:   if (ret!=ISO_BLOCKSIZE*_root->secsize[0]) {",
          "1164:     free(_dirbuf);",
          "1165:     return NULL;",
          "1173:       if (iso9660_check_dir_block_end(p_iso9660_dir, &offset))",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1120:       }",
          "1124:  continue;",
          "1126:       cmp = strcmp(splitpath[0], p_stat->filename);",
          "",
          "[Removed Lines]",
          "1123:       if (p_iso9660_dir->file_flags & ISO_MULTIEXTENT)",
          "",
          "[Added Lines]",
          "1186:       if (p_iso9660_dir->file_flags & ISO_MULTIEXTENT)",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1148:       if (!cmp) {",
          "1149:  iso9660_stat_t *ret_stat",
          "1152:  free(p_stat);",
          "1153:  free (_dirbuf);",
          "1154:  return ret_stat;",
          "1155:       }",
          "1158:       free(p_stat);",
          "1159:       p_stat = NULL;",
          "1160:     }",
          "",
          "[Removed Lines]",
          "1150:    = _fs_iso_stat_traverse (p_iso, p_stat, &splitpath[1]);",
          "1151:  free(p_stat->rr.psz_symlink);",
          "1157:       free(p_stat->rr.psz_symlink);",
          "",
          "[Added Lines]",
          "1213:    = _fs_iso_stat_traverse (p_iso, p_stat, &splitpath[1]);",
          "1217:       }",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1166:   return NULL;",
          "1167: }",
          "1170:   Get file status for psz_path into stat. NULL is returned on error.",
          "1172: iso9660_stat_t *",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1230:   Return file status for psz_path. NULL is returned on error.",
          "1232:   @param p_cdio the CD object to read from",
          "1234:   @param psz_path filename path to look up and get information about",
          "1236:   @return ISO 9660 file information",
          "1238:   Important note:",
          "1240:   You make get different results looking up \"/\" versus \"/.\" and the",
          "1241:   latter may give more complete information. \"/\" will take information",
          "1242:   from the PVD only, whereas \"/.\" will force a directory read of \"/\" and",
          "1243:   find \".\" and in that Rock-Ridge information might be found which fills",
          "1244:   in more stat information. Ideally iso9660_fs_stat should be fixed.",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1224:   return p_stat;",
          "1225: }",
          "1229:       bool b_mode2)",
          "1230: {",
          "1231:   return fs_stat_translate(p_cdio, (stat_root_t *) _fs_stat_root,",
          "",
          "[Removed Lines]",
          "1227: iso9660_stat_t *",
          "1228: iso9660_fs_stat_translate (CdIo_t *p_cdio, const char psz_path[],",
          "",
          "[Added Lines]",
          "1303:   Return file status for path name psz_path. NULL is returned on error.",
          "1304:   pathname version numbers in the ISO 9660 name are dropped, i.e. ;1",
          "1305:   is removed and if level 1 ISO-9660 names are lowercased.",
          "1307:   @param p_cdio the CD object to read from",
          "1309:   @param psz_path filename path to look up and get information about",
          "1311:   @return ISO 9660 file information.  The caller must free the",
          "1312:   returned result using iso9660_stat_free().",
          "1315: iso9660_stat_t *",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1233:       psz_path);",
          "1234: }",
          "1240:   are lowercased.",
          "1242: iso9660_stat_t *",
          "",
          "[Removed Lines]",
          "1237:   Get file status for psz_path into stat. NULL is returned on error.",
          "1238:   pathname version numbers in the ISO 9660",
          "1239:   name are dropped, i.e. ;1 is removed and if level 1 ISO-9660 names",
          "",
          "[Added Lines]",
          "1324:   @param p_iso the ISO-9660 file image to get data from",
          "1326:   @param psz_path filename path translate",
          "1328:   @return file status for path name psz_path. NULL is returned on",
          "1329:   error.  pathname version numbers in the ISO 9660 name are dropped,",
          "1330:   i.e. ;1 is removed and if level 1 ISO-9660 names are lowercased.",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1248: }",
          "1252:   Get file status for psz_path into stat. NULL is returned on error.",
          "1254: iso9660_stat_t *",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1344:   @param p_cdio the CD object to read from",
          "1346:   @param pzs_path path the look up",
          "1348:   @return file status for pathname. NULL is returned on error.",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1273: }",
          "1277:   of the files inside that. The caller must free the returned result.",
          "1279:   b_mode2 is historical. It is not used.",
          "1282: iso9660_fs_readdir (CdIo_t *p_cdio, const char psz_path[], bool b_mode2)",
          "1283: {",
          "1284:   generic_img_private_t *p_env;",
          "",
          "[Removed Lines]",
          "1276:   Read psz_path (a directory) and return a list of iso9660_stat_t",
          "1281: CdioList_t *",
          "",
          "[Added Lines]",
          "1373:   Read psz_path (a directory) and return a list of iso9660_stat_t",
          "1374:   pointers for the files inside that directory.",
          "1378:   @param pzs_path path the read the directory from.",
          "1380:   @return file status for psz_path. The caller must free the",
          "1383: CdioISO9660FileList_t *",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1294:   p_stat = iso9660_fs_stat (p_cdio, psz_path);",
          "1295:   if (!p_stat) return NULL;",
          "1299:     free(p_stat);",
          "1300:     return NULL;",
          "1301:   }",
          "1303:   {",
          "1304:     unsigned offset = 0;",
          "1306:     CdioList_t *retval = _cdio_list_new ();",
          "1308:     _dirbuf = calloc(1, p_stat->secsize[0] * ISO_BLOCKSIZE);",
          "1309:     if (!_dirbuf)",
          "1310:       {",
          "1312:       _cdio_list_free (retval, true);",
          "1313:       return NULL;",
          "1314:       }",
          "1316:     if (cdio_read_data_sectors (p_cdio, _dirbuf, p_stat->lsn[0],",
          "1318:       _cdio_list_free (retval, true);",
          "1319:       return NULL;",
          "1320:     }",
          "",
          "[Removed Lines]",
          "1297:   if (p_stat->type != _STAT_DIR) {",
          "1298:     free(p_stat->rr.psz_symlink);",
          "1305:     uint8_t *_dirbuf = NULL;",
          "1311:       cdio_warn(\"Couldn't calloc(1, %d)\", p_stat->secsize[0] * ISO_BLOCKSIZE);",
          "1317:     ISO_BLOCKSIZE, p_stat->secsize[0])) {",
          "",
          "[Added Lines]",
          "1399:   if (p_stat->type != _STAT_DIR) {",
          "1406:     uint8_t *_dirbuf = NULL;",
          "1412:       cdio_warn(\"Couldn't calloc(1, %d)\", p_stat->secsize[0] * ISO_BLOCKSIZE);",
          "1413:       iso9660_stat_free(p_stat);",
          "1419:     ISO_BLOCKSIZE, p_stat->secsize[0])) {",
          "1420:       iso9660_stat_free(p_stat);",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1322:     while (offset < (p_stat->secsize[0] * ISO_BLOCKSIZE))",
          "1323:       {",
          "1324:  p_iso9660_dir = (void *) &_dirbuf[offset];",
          "1330:    }",
          "1332:  p_iso9660_stat = _iso9660_dir_to_statbuf(p_iso9660_dir,",
          "",
          "[Removed Lines]",
          "1326:  if (!iso9660_get_dir_len(p_iso9660_dir))",
          "1327:    {",
          "1328:      offset++;",
          "1329:      continue;",
          "",
          "[Added Lines]",
          "1429:  if (iso9660_check_dir_block_end(p_iso9660_dir, &offset))",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1343:       }",
          "1345:     cdio_assert (offset == (p_stat->secsize[0] * ISO_BLOCKSIZE));",
          "1348:     free (p_stat);",
          "1349:     return retval;",
          "1350:   }",
          "",
          "[Removed Lines]",
          "1347:     free (_dirbuf);",
          "",
          "[Added Lines]",
          "1447:     free(_dirbuf);",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1354:   Read psz_path (a directory) and return a list of iso9660_stat_t",
          "1355:   of the files inside that. The caller must free the returned result.",
          "1357: CdioList_t *",
          "1358: iso9660_ifs_readdir (iso9660_t *p_iso, const char psz_path[])",
          "1359: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1367:   p_stat = iso9660_ifs_stat (p_iso, psz_path);",
          "1368:   if (!p_stat)   return NULL;",
          "1372:     free(p_stat);",
          "1373:     return NULL;",
          "1374:   }",
          "",
          "[Removed Lines]",
          "1370:   if (p_stat->type != _STAT_DIR) {",
          "1371:     free(p_stat->rr.psz_symlink);",
          "",
          "[Added Lines]",
          "1470:   if (p_stat->type != _STAT_DIR) {",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1384:     if (!dirbuf_len)",
          "1385:       {",
          "1389:  _cdio_list_free (retval, true);",
          "1390:         return NULL;",
          "1391:       }",
          "",
          "[Removed Lines]",
          "1386:         cdio_warn(\"Invalid directory buffer sector size %u\", p_stat->secsize[0]);",
          "1387:  free(p_stat->rr.psz_symlink);",
          "1388:  free(p_stat);",
          "",
          "[Added Lines]",
          "1485:         cdio_warn(\"Invalid directory buffer sector size %u\", p_stat->secsize[0]);",
          "1486:  iso9660_stat_free(p_stat);",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "1393:     _dirbuf = calloc(1, dirbuf_len);",
          "1394:     if (!_dirbuf)",
          "1395:       {",
          "1399:  _cdio_list_free (retval, true);",
          "1400:         return NULL;",
          "1401:       }",
          "1403:     ret = iso9660_iso_seek_read (p_iso, _dirbuf, p_stat->lsn[0], p_stat->secsize[0]);",
          "1407:       free(p_stat);",
          "1408:       free (_dirbuf);",
          "1409:       return NULL;",
          "",
          "[Removed Lines]",
          "1396:         cdio_warn(\"Couldn't calloc(1, %lu)\", (unsigned long)dirbuf_len);",
          "1397:  free(p_stat->rr.psz_symlink);",
          "1398:  free(p_stat);",
          "1404:     if (ret != dirbuf_len)    {",
          "1405:       _cdio_list_free (retval, true);",
          "1406:       free(p_stat->rr.psz_symlink);",
          "",
          "[Added Lines]",
          "1494:         cdio_warn(\"Couldn't calloc(1, %lu)\", (unsigned long)dirbuf_len);",
          "1495:  iso9660_stat_free(p_stat);",
          "1501:     if (ret != dirbuf_len)    {",
          "1502:       _cdio_list_free (retval, true, NULL);",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "1412:     while (offset < (dirbuf_len))",
          "1413:       {",
          "1414:  p_iso9660_dir = (void *) &_dirbuf[offset];",
          "1420:    }",
          "1422:  p_iso9660_stat = _iso9660_dir_to_statbuf(p_iso9660_dir,",
          "",
          "[Removed Lines]",
          "1416:  if (!iso9660_get_dir_len(p_iso9660_dir))",
          "1417:    {",
          "1418:      offset++;",
          "1419:      continue;",
          "",
          "[Added Lines]",
          "1512:  if (iso9660_check_dir_block_end(p_iso9660_dir, &offset))",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "1433:  offset += iso9660_get_dir_len(p_iso9660_dir);",
          "1434:       }",
          "1438:     free (p_stat);",
          "1441:       _cdio_list_free (retval, true);",
          "1442:       return NULL;",
          "1443:     }",
          "",
          "[Removed Lines]",
          "1436:     free (_dirbuf);",
          "1437:     free(p_stat->rr.psz_symlink);",
          "1440:     if (offset != dirbuf_len) {",
          "",
          "[Added Lines]",
          "1529:     free (_dirbuf);",
          "1532:     if (offset != dirbuf_len) {",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "1445:     return retval;",
          "1446:   }",
          "1447: }",
          "1449: typedef CdioList_t * (iso9660_readdir_t)",
          "1450:   (void *p_image,  const char * psz_path);",
          "1452: static iso9660_stat_t *",
          "1453: find_lsn_recurse (void *p_image, iso9660_readdir_t iso9660_readdir,",
          "1454:     const char psz_path[], lsn_t lsn,",
          "1458:   CdioList_t *dirlist =  _cdio_list_new ();",
          "1459:   CdioListNode_t *entnode;",
          "",
          "[Removed Lines]",
          "1456: {",
          "1457:   CdioList_t *entlist = iso9660_readdir (p_image, psz_path);",
          "",
          "[Added Lines]",
          "1544: CdioISO9660FileList_t *",
          "1545: iso9660_filelist_new(void) {",
          "1546:   return (CdioISO9660FileList_t *) _cdio_list_new ();",
          "1547: }",
          "1549: CdioISO9660DirList_t *",
          "1550: iso9660_dirlist_new(void) {",
          "1551:   return (CdioISO9660FileList_t *) _cdio_list_new ();",
          "1552: }",
          "1558: {",
          "1559:   CdioISO9660FileList_t *entlist = iso9660_readdir (p_image, psz_path);",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "1470:       size_t extent;",
          "1472:       if (*ppsz_full_filename != NULL) free(*ppsz_full_filename);",
          "1474:       _snprintf (*ppsz_full_filename, len, \"%s%s/\", psz_path, psz_filename);",
          "1476:       if (statbuf->type == _STAT_DIR",
          "1477:           && strcmp ((char *) statbuf->filename, \".\")",
          "1478:           && strcmp ((char *) statbuf->filename, \"..\")) {",
          "1479:         _cdio_list_append (dirlist, strdup(*ppsz_full_filename));",
          "1480:       }",
          "1493:           _cdio_list_free (dirlist, true);",
          "1495:  }",
          "1496:       }",
          "1498:     }",
          "1500:   _cdio_list_free (entlist, true);",
          "",
          "[Removed Lines]",
          "1482:       for (extent = 0; extent < statbuf->extents; extent++) {",
          "1483:  if (statbuf->lsn[extent] == lsn) {",
          "1484:    const unsigned int len2 = sizeof(iso9660_stat_t)+strlen(statbuf->filename)+1;",
          "1485:    iso9660_stat_t *ret_stat = calloc(1, len2);",
          "1486:    if (!ret_stat) {",
          "1487:      _cdio_list_free (dirlist, true);",
          "1488:      cdio_warn(\"Couldn't calloc(1, %d)\", len2);",
          "1489:      return NULL;",
          "1490:    }",
          "1491:    memcpy(ret_stat, statbuf, len2);",
          "1492:           _cdio_list_free (entlist, true);",
          "1494:           return ret_stat;",
          "",
          "[Added Lines]",
          "1580:           && strcmp ((char *) statbuf->filename, \"..\")) {",
          "1585:       for (extent = 0; extent < statbuf->extents; extent++) {",
          "1586:         if (statbuf->lsn[extent] == lsn) {",
          "1587:           const unsigned int len2 = sizeof(iso9660_stat_t)+strlen(statbuf->filename)+1;",
          "1588:           iso9660_stat_t *ret_stat = calloc(1, len2);",
          "1589:           if (!ret_stat) {",
          "1590:             iso9660_dirlist_free(dirlist);",
          "1591:             cdio_warn(\"Couldn't calloc(1, %d)\", len2);",
          "1592:             free(*ppsz_full_filename);",
          "1594:             return NULL;",
          "1595:           }",
          "1596:           memcpy(ret_stat, statbuf, len2);",
          "1597:           iso9660_filelist_free (entlist);",
          "1599:           return ret_stat;",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "1511:        psz_path_prefix, lsn,",
          "1512:        ppsz_full_filename);",
          "1515:         _cdio_list_free (dirlist, true);",
          "1516:         return ret_stat;",
          "1517:       }",
          "",
          "[Removed Lines]",
          "1514:       if (NULL != ret_stat) {",
          "",
          "[Added Lines]",
          "1619:       if (NULL != ret_stat) {",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "1520:   if (*ppsz_full_filename != NULL) {",
          "1521:     free(*ppsz_full_filename);",
          "1524:   _cdio_list_free (dirlist, true);",
          "1525:   return NULL;",
          "1526: }",
          "",
          "[Removed Lines]",
          "1523:   }",
          "",
          "[Added Lines]",
          "1628:   }",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "1534: iso9660_stat_t *",
          "1535: iso9660_fs_find_lsn(CdIo_t *p_cdio, lsn_t i_lsn)",
          "1536: {",
          "1539:       \"/\", i_lsn, &psz_full_filename);",
          "1540: }",
          "1544:    lsn and return information about it.",
          "1546:    Returns stat_t of entry if we found lsn, or NULL otherwise.",
          "1548: iso9660_stat_t *",
          "",
          "[Removed Lines]",
          "1537:   char *psz_full_filename = NULL;",
          "1538:   return find_lsn_recurse (p_cdio, (iso9660_readdir_t *) iso9660_fs_readdir,",
          "1543:    Given a directory pointer, find the filesystem entry that contains",
          "",
          "[Added Lines]",
          "1642:   char *psz_full_filename = NULL;",
          "1643:   iso9660_stat_t * p_statbuf;",
          "1644:   p_statbuf = find_lsn_recurse (p_cdio, (iso9660_readdir_t *) iso9660_fs_readdir,",
          "1645:     \"/\", i_lsn, &psz_full_filename);",
          "1646:   if (psz_full_filename != NULL)",
          "1647:     free(psz_full_filename);",
          "1652:    Given a directory pointer, find the filesystem entry that contains",
          "1655:    @param p_iso the ISO-9660 file image to get data from.",
          "1656:    @param i_lsn the LSN to find",
          "1657:    @param ppsz_full_filename the place to store the name of the path that has LSN.",
          "1658:    On entry this should point to NULL. If not, the value will be freed.",
          "1659:    On exit a value is malloc'd and the caller is responsible for",
          "1660:    freeing the result.",
          "1662:    @return stat_t of entry if we found lsn, or NULL otherwise.",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "1557:    Given a directory pointer, find the filesystem entry that contains",
          "1558:    lsn and return information about it.",
          "1560:    Returns stat_t of entry if we found lsn, or NULL otherwise.",
          "1562: iso9660_stat_t *",
          "1563: iso9660_ifs_find_lsn(iso9660_t *p_iso, lsn_t i_lsn)",
          "1564: {",
          "1567:       \"/\", i_lsn, &psz_full_filename);",
          "1568: }",
          "1571:    Given a directory pointer, find the filesystem entry that contains",
          "1572:    lsn and return information about it.",
          "1574:    Returns stat_t of entry if we found lsn, or NULL otherwise.",
          "1576: iso9660_stat_t *",
          "",
          "[Removed Lines]",
          "1565:   char *psz_full_filename = NULL;",
          "1566:   return find_lsn_recurse (p_iso, (iso9660_readdir_t *) iso9660_ifs_readdir,",
          "",
          "[Added Lines]",
          "1677:    @param p_iso the ISO-9660 file image to get data from.",
          "1679:    @param i_lsn the LSN to find",
          "1681:    @return stat_t of entry if we found lsn, or NULL otherwise.",
          "1687:   char *psz_full_filename = NULL;",
          "1688:   iso9660_stat_t *ret  =",
          "1689:     find_lsn_recurse (p_iso, (iso9660_readdir_t *) iso9660_ifs_readdir,",
          "1690:         \"/\", i_lsn, &psz_full_filename);",
          "1691:   if (psz_full_filename != NULL)",
          "1692:     free(psz_full_filename);",
          "1700:    @param p_iso pointer to iso_t",
          "1702:    @param i_lsn LSN to find",
          "1704:    @param ppsz_path  full path of lsn filename. On entry *ppsz_path should be",
          "1705:    NULL. On return it will be allocated an point to the full path of the",
          "1706:    file at lsn or NULL if the lsn is not found. You should deallocate",
          "1709:    @return stat_t of entry if we found lsn, or NULL otherwise.",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "1582: }",
          "1585:   Free the passed iso9660_stat_t structure.",
          "1587: void",
          "1588: iso9660_stat_free(iso9660_stat_t *p_stat)",
          "1590:   if (p_stat != NULL)",
          "1591:     free(p_stat);",
          "1592: }",
          "1595:   Return true if ISO 9660 image has extended attrributes (XA).",
          "",
          "[Removed Lines]",
          "1589: {",
          "",
          "[Added Lines]",
          "1723:   @param p_stat iso9660 stat buffer to free.",
          "1728: {",
          "1729:   if (p_stat != NULL) {",
          "1730:     if (p_stat->rr.psz_symlink) {",
          "1731:       CDIO_FREE_IF_NOT_NULL(p_stat->rr.psz_symlink);",
          "1733:     free(p_stat);",
          "1734:   }",
          "1735: }",
          "1738:   Free the passed CdioISOC9660FileList_t structure.",
          "1740: void",
          "1741: iso9660_filelist_free(CdioISO9660FileList_t *p_filelist) {",
          "1746:   Free the passed CdioISOC9660DirList_t structure.",
          "1748: void",
          "1749: iso9660_dirlist_free(CdioISO9660DirList_t *p_filelist) {",
          "1750:   _cdio_list_free(p_filelist, true, free);",
          "1751: }",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "1624:     return dunno;",
          "1625:     }",
          "1628:   if (ret!=ISO_BLOCKSIZE*_root->secsize[0]) return false;",
          "1630:   while (offset < (_root->secsize[0] * ISO_BLOCKSIZE))",
          "1631:     {",
          "1632:       iso9660_dir_t *p_iso9660_dir = (void *) &_dirbuf[offset];",
          "1633:       iso9660_stat_t *p_stat;",
          "1639:  }",
          "1641:       p_stat = _iso9660_dir_to_statbuf (p_iso9660_dir, NULL, p_iso->b_xa,",
          "1642:      p_iso->u_joliet_level);",
          "1643:       have_rr = p_stat->rr.b3_rock;",
          "1645:  have_rr = iso_have_rr_traverse (p_iso, p_stat, &splitpath[1], pu_file_limit);",
          "1646:       }",
          "1647:       free(p_stat);",
          "1650:  return have_rr;",
          "1651:       }",
          "1653:       offset += iso9660_get_dir_len(p_iso9660_dir);",
          "1657:  return dunno;",
          "1658:       }",
          "1659:     }",
          "",
          "[Removed Lines]",
          "1627:   ret = iso9660_iso_seek_read (p_iso, _dirbuf, _root->lsn[0], _root->secsize[0]);",
          "1635:       if (!iso9660_get_dir_len(p_iso9660_dir))",
          "1636:  {",
          "1637:    offset++;",
          "1638:    continue;",
          "1644:       if ( have_rr != yep) {",
          "1648:       if (have_rr != nope) {",
          "1649:  free (_dirbuf);",
          "1655:       if ((*pu_file_limit) == 0) {",
          "1656:  free (_dirbuf);",
          "",
          "[Added Lines]",
          "1787:   ret = iso9660_iso_seek_read (p_iso, _dirbuf, _root->lsn[0], _root->secsize[0]);",
          "1788:   if (ret!=ISO_BLOCKSIZE*_root->secsize[0]) {",
          "1789:     free(_dirbuf);",
          "1790:     return false;",
          "1796:       iso9660_stat_t *p_stat;",
          "1799:       if (iso9660_check_dir_block_end(p_iso9660_dir, &offset))",
          "1805:       if ( have_rr != yep) {",
          "1806:         if (strlen(splitpath[0]) == 0)",
          "1807:           have_rr = false;",
          "1808:         else",
          "1809:           have_rr = iso_have_rr_traverse (p_iso, p_stat, &splitpath[i_last_component],",
          "1813:       if (have_rr != nope) {",
          "1814:         free (_dirbuf);",
          "1820:       if ((*pu_file_limit) == 0) {",
          "1821:         free (_dirbuf);",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "1694:   if (u_file_limit == 0) u_file_limit = UINT64_MAX;",
          "1696:   is_rr = iso_have_rr_traverse (p_iso, p_root, p_psz_splitpath, &u_file_limit);",
          "1697:   free(p_root);",
          "1700:   return is_rr;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1862:   free(p_root);",
          "1863:   free(p_psz_splitpath[0]);",
          "",
          "---------------"
        ],
        "src/libcdio/iso9660/rock.c||src/libcdio/iso9660/rock.c": [
          "File: src/libcdio/iso9660/rock.c -> src/libcdio/iso9660/rock.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3:   Adapted from GNU/Linux fs/isofs/rock.c (C) 1992, 1993 Eric Youngdale",
          "5:   This program is free software: you can redistribute it and/or modify",
          "",
          "[Removed Lines]",
          "2:   Copyright (C) 2005, 2008, 2010-2011, 2014 Rocky Bernstein <rocky@gnu.org>",
          "",
          "[Added Lines]",
          "2:   Copyright (C) 2005, 2008, 2010-2011, 2014, 2017 Rocky Bernstein",
          "3:   <rocky@gnu.org>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "171:       rr = (iso_extension_record_t *) chr;",
          "192:       }",
          "",
          "[Removed Lines]",
          "172:       sig = *chr+(*(chr+1) << 8);",
          "173:       switch(sig){",
          "174:       case SIG('S','P'):",
          "175:       case SIG('C','E'):",
          "176:       case SIG('E','R'):",
          "177:       case SIG('R','R'):",
          "178:       case SIG('P','X'):",
          "179:       case SIG('P','N'):",
          "180:       case SIG('S','L'):",
          "181:       case SIG('N','M'):",
          "182:       case SIG('C','L'):",
          "183:       case SIG('P','L'):",
          "184:       case SIG('T','F'):",
          "185:       case SIG('Z','F'):",
          "186:       case SIG('A','L'): // libburnia's AAIP extension (used by Kali Linux)",
          "187:  break;",
          "188:       default:",
          "190:  cdio_warn(\"Unsupported Rock Ridge extension detected: '%c%c'\\n\", *chr, *(chr+1));",
          "191:  break;",
          "",
          "[Added Lines]",
          "177:   SP, CE, ER, RR, PX, PN, SL, NM, CL, PL, TF, and ZF.",
          "178:   However there are various extensions to this set. So we",
          "179:   skip checking now.",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "434:      rootflag = 0;",
          "435:      switch(p_sl->flags &~1){",
          "436:      case 0:",
          "439:        p_sl->text, p_sl->len);",
          "440:        p_stat->rr.i_symlink += p_sl->len;",
          "441:        break;",
          "",
          "[Removed Lines]",
          "437:        realloc_symlink(p_stat, p_sl->len);",
          "438:        memcpy(&(p_stat->rr.psz_symlink[p_stat->rr.i_symlink]),",
          "",
          "[Added Lines]",
          "425:        realloc_symlink(p_stat, p_sl->len);",
          "426:        if (p_sl->text && p_sl->len)",
          "427:   memcpy(&(p_stat->rr.psz_symlink[p_stat->rr.i_symlink]),",
          "",
          "---------------"
        ],
        "src/libcdio/udf/udf_fs.c||src/libcdio/udf/udf_fs.c": [
          "File: src/libcdio/udf/udf_fs.c -> src/libcdio/udf/udf_fs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3:   Rocky Bernstein <rocky@gnu.org>",
          "5:   This program is free software: you can redistribute it and/or modify",
          "",
          "[Removed Lines]",
          "2:   Copyright (C) 2005-2006, 2008, 2011, 2013-2014",
          "",
          "[Added Lines]",
          "2:   Copyright (C) 2005-2006, 2008, 2011, 2013-2014, 2017",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47: # include \"config.h\"",
          "48: # define __CDIO_CONFIG_H__ 1",
          "49: #endif",
          "51: #ifdef HAVE_STDIO_H",
          "52: #include <stdio.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "51: #include <cdio/util.h>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "634:   return NULL;",
          "635: }",
          "638:   free(x);   \\",
          "639:   x=NULL",
          "",
          "[Removed Lines]",
          "637: #define free_and_null(x) \\",
          "",
          "[Added Lines]",
          "639: #define free_and_null(x) \\",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 232, 326",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 9, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Drive Properties\",IDS_DRIVE_PROPERTIES_TXT,8,6,53,12,NOT WS_GROUP",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 3.0.1306\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 3.0.1307\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "391: VS_VERSION_INFO VERSIONINFO",
          "394:  FILEFLAGSMASK 0x3fL",
          "395: #ifdef _DEBUG",
          "396:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "392:  FILEVERSION 3,0,1306,0",
          "393:  PRODUCTVERSION 3,0,1306,0",
          "",
          "[Added Lines]",
          "392:  FILEVERSION 3,0,1307,0",
          "393:  PRODUCTVERSION 3,0,1307,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "407:         BEGIN",
          "408:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
          "409:             VALUE \"FileDescription\", \"Rufus\"",
          "411:             VALUE \"InternalName\", \"Rufus\"",
          "412:             VALUE \"LegalCopyright\", \"\ufffd 2011-2018 Pete Batard (GPL v3)\"",
          "413:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
          "414:             VALUE \"OriginalFilename\", \"rufus.exe\"",
          "415:             VALUE \"ProductName\", \"Rufus\"",
          "417:         END",
          "418:     END",
          "419:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "410:             VALUE \"FileVersion\", \"3.0.1306\"",
          "416:             VALUE \"ProductVersion\", \"3.0.1306\"",
          "",
          "[Added Lines]",
          "410:             VALUE \"FileVersion\", \"3.0.1307\"",
          "416:             VALUE \"ProductVersion\", \"3.0.1307\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a4cf6aea8f5a945480436c48ecc227f0505cedd1",
      "candidate_info": {
        "commit_hash": "a4cf6aea8f5a945480436c48ecc227f0505cedd1",
        "repo": "pbatard/rufus",
        "commit_url": "https://github.com/pbatard/rufus/commit/a4cf6aea8f5a945480436c48ecc227f0505cedd1",
        "files": [
          "res/localization/rufus.loc",
          "src/rufus.rc"
        ],
        "message": "[loc] update Swedish translation to latest",
        "before_after_code_files": [
          "res/localization/rufus.loc||res/localization/rufus.loc",
          "src/rufus.rc||src/rufus.rc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "res/localization/rufus.loc||res/localization/rufus.loc",
            "src/rufus.rc||src/rufus.rc"
          ],
          "candidate": [
            "res/localization/rufus.loc||res/localization/rufus.loc",
            "src/rufus.rc||src/rufus.rc"
          ]
        }
      },
      "candidate_diff": {
        "res/localization/rufus.loc||res/localization/rufus.loc": [
          "File: res/localization/rufus.loc -> res/localization/rufus.loc",
          "--- Hunk 1 ---",
          "[Context before]",
          "15905: ################################################################################",
          "15906: l \"sv-SE\" \"Swedish (Svenska)\" 0x041d, 0x081d",
          "15908: b \"en-US\"",
          "15910: # Main dialog",
          "",
          "[Removed Lines]",
          "15907: v 1.0.21",
          "",
          "[Added Lines]",
          "15907: v 1.0.22",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "16375: t MSG_292 \"V\u00e4lj den version av Windows du vill installera:\"",
          "16376: t MSG_293 \"Denna version st\u00f6ds inte\"",
          "16377: t MSG_294 \"Denna version av Windows st\u00f6ds inte l\u00e4ngre av Rufus.\"",
          "16379: ################################################################################",
          "16380: l \"th-TH\" \"Thai (\u0e44\u0e17\u0e22)\" 0x041e",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16378: t MSG_295 \"Varning: Inofficiell version\"",
          "16379: t MSG_296 \"Denna version av Rufus producerades inte av original utvecklaren.\\n\\n\u00c4r du s\u00e4ker p\u00e5 att du vill anv\u00e4nda den?\"",
          "16380: t MSG_297 \"Ej komplett ISO-fil\"",
          "16381: t MSG_298 \"ISO-filen du har valt matchar inte den angivna storleken: %s av data saknas!\\n\\nOm du har h\u00e4mtat den h\u00e4r filen fr\u00e5n internet, \"",
          "16382:  \"prova d\u00e5 med att ladda ned filen igen och verifiera att checksumman MD5 eller SHA st\u00e4mmer \u00f6verens med den officiella filen.\\n\\n\"",
          "16383:  \"Tips: Du kan ber\u00e4kna MD5 eller SHA i Rufus genom att klicka p\u00e5 knappen '#'.\"",
          "",
          "---------------"
        ],
        "src/rufus.rc||src/rufus.rc": [
          "File: src/rufus.rc -> src/rufus.rc",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: IDD_DIALOG DIALOGEX 12, 12, 242, 376",
          "34: STYLE DS_SETFONT | DS_MODALFRAME | DS_CENTER | WS_MINIMIZEBOX | WS_POPUP | WS_CAPTION | WS_SYSMENU",
          "35: EXSTYLE WS_EX_ACCEPTFILES",
          "37: FONT 8, \"Segoe UI Symbol\", 400, 0, 0x0",
          "38: BEGIN",
          "39:     LTEXT           \"Device\",IDS_DEVICE_TXT,9,6,200,8",
          "",
          "[Removed Lines]",
          "36: CAPTION \"Rufus 2.16.1131\"",
          "",
          "[Added Lines]",
          "36: CAPTION \"Rufus 2.16.1132\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "368: VS_VERSION_INFO VERSIONINFO",
          "371:  FILEFLAGSMASK 0x3fL",
          "372: #ifdef _DEBUG",
          "373:  FILEFLAGS 0x1L",
          "",
          "[Removed Lines]",
          "369:  FILEVERSION 2,16,1131,0",
          "370:  PRODUCTVERSION 2,16,1131,0",
          "",
          "[Added Lines]",
          "369:  FILEVERSION 2,16,1132,0",
          "370:  PRODUCTVERSION 2,16,1132,0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "384:         BEGIN",
          "385:             VALUE \"CompanyName\", \"Akeo Consulting (http://akeo.ie)\"",
          "386:             VALUE \"FileDescription\", \"Rufus\"",
          "388:             VALUE \"InternalName\", \"Rufus\"",
          "389:             VALUE \"LegalCopyright\", \"\ufffd 2011-2017 Pete Batard (GPL v3)\"",
          "390:             VALUE \"LegalTrademarks\", \"http://www.gnu.org/copyleft/gpl.html\"",
          "391:             VALUE \"OriginalFilename\", \"rufus.exe\"",
          "392:             VALUE \"ProductName\", \"Rufus\"",
          "394:         END",
          "395:     END",
          "396:     BLOCK \"VarFileInfo\"",
          "",
          "[Removed Lines]",
          "387:             VALUE \"FileVersion\", \"2.16.1131\"",
          "393:             VALUE \"ProductVersion\", \"2.16.1131\"",
          "",
          "[Added Lines]",
          "387:             VALUE \"FileVersion\", \"2.16.1132\"",
          "393:             VALUE \"ProductVersion\", \"2.16.1132\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}