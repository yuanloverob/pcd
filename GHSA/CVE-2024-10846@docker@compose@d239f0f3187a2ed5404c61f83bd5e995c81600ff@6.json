{
  "cve_id": "CVE-2024-10846",
  "cve_desc": "The compose-go library component in versions v2.10-v2.4.0 allows an authorized user who sends malicious YAML payloads to cause the compose-go to consume excessive amount of Memory and CPU cycles while parsing YAML, such as used by Docker Compose from versions  v2.27.0 to v2.29.7 included",
  "repo": "docker/compose",
  "patch_hash": "d239f0f3187a2ed5404c61f83bd5e995c81600ff",
  "patch_info": {
    "commit_hash": "d239f0f3187a2ed5404c61f83bd5e995c81600ff",
    "repo": "docker/compose",
    "commit_url": "https://github.com/docker/compose/commit/d239f0f3187a2ed5404c61f83bd5e995c81600ff#diff-33ef32bf6c23acb95f5902d7097b7a1d5128ca061167ec0716715b0b9eeaa5f6R10",
    "files": [
      "cmd/compose/config.go",
      "go.mod",
      "go.sum",
      "pkg/compose/create.go",
      "pkg/e2e/container_name_test.go",
      "pkg/e2e/fixtures/container_name/compose.yaml"
    ],
    "message": "check container_name is not in use by another service we will create\n\nSigned-off-by: Nicolas De Loof <nicolas.deloof@gmail.com>",
    "before_after_code_files": [
      "cmd/compose/config.go||cmd/compose/config.go",
      "go.mod||go.mod",
      "go.sum||go.sum",
      "pkg/compose/create.go||pkg/compose/create.go",
      "pkg/e2e/container_name_test.go||pkg/e2e/container_name_test.go"
    ]
  },
  "patch_diff": {
    "cmd/compose/config.go||cmd/compose/config.go": [
      "File: cmd/compose/config.go -> cmd/compose/config.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "169:    return err",
      "170:   }",
      "172:   switch opts.Format {",
      "173:   case \"json\":",
      "174:    content, err = project.MarshalJSON()",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "172:   if !opts.noConsistency {",
      "173:    err := project.CheckContainerNameUnicity()",
      "174:    if err != nil {",
      "175:     return err",
      "176:    }",
      "177:   }",
      "",
      "---------------"
    ],
    "go.mod||go.mod": [
      "File: go.mod -> go.mod",
      "--- Hunk 1 ---",
      "[Context before]",
      "7:  github.com/Microsoft/go-winio v0.6.1",
      "8:  github.com/acarl005/stripansi v0.0.0-20180116102854-5a71ef0e047d",
      "9:  github.com/buger/goterm v1.0.4",
      "11:  github.com/containerd/console v1.0.4",
      "12:  github.com/containerd/containerd v1.7.13",
      "13:  github.com/davecgh/go-spew v1.1.1",
      "",
      "[Removed Lines]",
      "10:  github.com/compose-spec/compose-go/v2 v2.0.3-0.20240407191136-f388192b8a39",
      "",
      "[Added Lines]",
      "10:  github.com/compose-spec/compose-go/v2 v2.0.3-0.20240416141209-60aa6409b2c4",
      "",
      "---------------"
    ],
    "go.sum||go.sum": [
      "File: go.sum -> go.sum",
      "--- Hunk 1 ---",
      "[Context before]",
      "90: github.com/cncf/xds/go v0.0.0-20230607035331-e9ce68804cb4/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=",
      "91: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb h1:EDmT6Q9Zs+SbUoc7Ik9EfrFqcylYqgPZ9ANSbTAntnE=",
      "92: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb/go.mod h1:ZjrT6AXHbDs86ZSdt/osfBi5qfexBrKUdONk989Wnk4=",
      "95: github.com/containerd/cgroups v1.1.0 h1:v8rEWFl6EoqHB+swVNjVoCJE8o3jX7e8nqBGPLaDFBM=",
      "96: github.com/containerd/cgroups v1.1.0/go.mod h1:6ppBcbh/NOOUU+dMKrykgaBnK9lCIBxHqJDGwsa1mIw=",
      "97: github.com/containerd/console v1.0.4 h1:F2g4+oChYvBTsASRTz8NP6iIAi97J3TtSAsLbIFn4ro=",
      "",
      "[Removed Lines]",
      "93: github.com/compose-spec/compose-go/v2 v2.0.3-0.20240407191136-f388192b8a39 h1:ZUpnv0xA75X9gy9Y7hjJm51nflGbr+2URaLXBtEic7A=",
      "94: github.com/compose-spec/compose-go/v2 v2.0.3-0.20240407191136-f388192b8a39/go.mod h1:bEPizBkIojlQ20pi2vNluBa58tevvj0Y18oUSHPyfdc=",
      "",
      "[Added Lines]",
      "93: github.com/compose-spec/compose-go/v2 v2.0.3-0.20240416141209-60aa6409b2c4 h1:WYiZ9D0WBykHUJLlpt+w7NXX0hy+cQKKdVe7vmsNZvg=",
      "94: github.com/compose-spec/compose-go/v2 v2.0.3-0.20240416141209-60aa6409b2c4/go.mod h1:bEPizBkIojlQ20pi2vNluBa58tevvj0Y18oUSHPyfdc=",
      "",
      "---------------"
    ],
    "pkg/compose/create.go||pkg/compose/create.go": [
      "File: pkg/compose/create.go -> pkg/compose/create.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "77:   options.Services = project.ServiceNames()",
      "78:  }",
      "80:  var observedState Containers",
      "82:  if err != nil {",
      "83:   return err",
      "84:  }",
      "",
      "[Removed Lines]",
      "81:  observedState, err := s.getContainers(ctx, project.Name, oneOffInclude, true)",
      "",
      "[Added Lines]",
      "80:  err := project.CheckContainerNameUnicity()",
      "81:  if err != nil {",
      "82:   return err",
      "83:  }",
      "86:  observedState, err = s.getContainers(ctx, project.Name, oneOffInclude, true)",
      "",
      "---------------"
    ],
    "pkg/e2e/container_name_test.go||pkg/e2e/container_name_test.go": [
      "File: pkg/e2e/container_name_test.go -> pkg/e2e/container_name_test.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5:    Copyright 2022 Docker Compose CLI authors",
      "7:    Licensed under the Apache License, Version 2.0 (the \"License\");",
      "8:    you may not use this file except in compliance with the License.",
      "9:    You may obtain a copy of the License at",
      "11:        http://www.apache.org/licenses/LICENSE-2.0",
      "13:    Unless required by applicable law or agreed to in writing, software",
      "14:    distributed under the License is distributed on an \"AS IS\" BASIS,",
      "15:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
      "16:    See the License for the specific language governing permissions and",
      "17:    limitations under the License.",
      "20: package e2e",
      "22: import (",
      "23:  \"testing\"",
      "25:  \"gotest.tools/v3/icmd\"",
      "26: )",
      "28: func TestUpContainerNameConflict(t *testing.T) {",
      "29:  c := NewParallelCLI(t)",
      "30:  const projectName = \"e2e-container_name_conflict\"",
      "32:  t.Cleanup(func() {",
      "33:   c.RunDockerComposeCmd(t, \"--project-name\", projectName, \"down\")",
      "34:  })",
      "36:  res := c.RunDockerComposeCmdNoCheck(t, \"-f\", \"fixtures/container_name/compose.yaml\", \"--project-name\", projectName, \"up\")",
      "37:  res.Assert(t, icmd.Expected{ExitCode: 1, Err: `container name \"test\" is already in use`})",
      "39:  c.RunDockerComposeCmd(t, \"--project-name\", projectName, \"down\")",
      "40:  c.RunDockerComposeCmd(t, \"-f\", \"fixtures/container_name/compose.yaml\", \"--project-name\", projectName, \"up\", \"test\")",
      "42:  c.RunDockerComposeCmd(t, \"--project-name\", projectName, \"down\")",
      "43:  c.RunDockerComposeCmd(t, \"-f\", \"fixtures/container_name/compose.yaml\", \"--project-name\", projectName, \"up\", \"another_test\")",
      "44: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9c03797f9dc653ba09d13a7427df9f0c8023fa76",
      "candidate_info": {
        "commit_hash": "9c03797f9dc653ba09d13a7427df9f0c8023fa76",
        "repo": "docker/compose",
        "commit_url": "https://github.com/docker/compose/commit/9c03797f9dc653ba09d13a7427df9f0c8023fa76",
        "files": [
          "go.mod",
          "go.sum",
          "pkg/compose/watch.go"
        ],
        "message": "initial sync files that modified after image creation\n\nSigned-off-by: Joana Hrotko <joana.hrotko@docker.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum",
          "pkg/compose/watch.go||pkg/compose/watch.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ],
          "candidate": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ]
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "9:  github.com/Microsoft/go-winio v0.6.2",
          "10:  github.com/acarl005/stripansi v0.0.0-20180116102854-5a71ef0e047d",
          "11:  github.com/buger/goterm v1.0.4",
          "13:  github.com/containerd/containerd v1.7.20",
          "14:  github.com/containerd/platforms v0.2.1",
          "15:  github.com/davecgh/go-spew v1.1.1",
          "",
          "[Removed Lines]",
          "12:  github.com/compose-spec/compose-go/v2 v2.1.5",
          "",
          "[Added Lines]",
          "12:  github.com/compose-spec/compose-go/v2 v2.1.6",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "85: github.com/cncf/xds/go v0.0.0-20230607035331-e9ce68804cb4/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=",
          "86: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb h1:EDmT6Q9Zs+SbUoc7Ik9EfrFqcylYqgPZ9ANSbTAntnE=",
          "87: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb/go.mod h1:ZjrT6AXHbDs86ZSdt/osfBi5qfexBrKUdONk989Wnk4=",
          "90: github.com/containerd/cgroups v1.1.0 h1:v8rEWFl6EoqHB+swVNjVoCJE8o3jX7e8nqBGPLaDFBM=",
          "91: github.com/containerd/cgroups v1.1.0/go.mod h1:6ppBcbh/NOOUU+dMKrykgaBnK9lCIBxHqJDGwsa1mIw=",
          "92: github.com/containerd/console v1.0.4 h1:F2g4+oChYvBTsASRTz8NP6iIAi97J3TtSAsLbIFn4ro=",
          "",
          "[Removed Lines]",
          "88: github.com/compose-spec/compose-go/v2 v2.1.5 h1:6YoC9ik3NXdSYtgRn51EMZ2DxzGPyGjZ8M0B7mXTXeQ=",
          "89: github.com/compose-spec/compose-go/v2 v2.1.5/go.mod h1:lFN0DrMxIncJGYAXTfWuajfwj5haBJqrBkarHcnjJKc=",
          "",
          "[Added Lines]",
          "88: github.com/compose-spec/compose-go/v2 v2.1.6 h1:d0Cs0DffmOwmSzs0YPHwKCskknGq2jfGg4uGowlEpps=",
          "89: github.com/compose-spec/compose-go/v2 v2.1.6/go.mod h1:lFN0DrMxIncJGYAXTfWuajfwj5haBJqrBkarHcnjJKc=",
          "",
          "---------------"
        ],
        "pkg/compose/watch.go||pkg/compose/watch.go": [
          "File: pkg/compose/watch.go -> pkg/compose/watch.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "163:     success, err := trigger.Extensions.Get(\"x-initialSync\", &initialSync)",
          "164:     if err == nil && success && initialSync && (trigger.Action == types.WatchActionSync || trigger.Action == types.WatchActionSyncRestart) {",
          "167:     }",
          "168:    }",
          "169:    paths = append(paths, trigger.Path)",
          "",
          "[Removed Lines]",
          "166:      s.initialSync(ctx, service, trigger, ignore, syncer)",
          "",
          "[Added Lines]",
          "166:      err := s.initialSync(ctx, project, service, trigger, ignore, syncer)",
          "167:      if err != nil {",
          "168:       return err",
          "169:      }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "583:  }",
          "584: }",
          "589:  ignoreInitialSync := watch.NewCompositeMatcher(ignore, dockerFileIgnore, triggerIgnore)",
          "592:  if err != nil {",
          "593:   return err",
          "594:  }",
          "",
          "[Removed Lines]",
          "586: func (s *composeService) initialSync(ctx context.Context, service types.ServiceConfig, trigger types.Trigger, ignore watch.PathMatcher, syncer sync.Syncer) error {",
          "587:  dockerFileIgnore, _ := watch.NewDockerPatternMatcher(\"/\", []string{\"Dockerfile\", \"*compose*.y*ml\"})",
          "588:  triggerIgnore, _ := watch.NewDockerPatternMatcher(\"/\", trigger.Ignore)",
          "591:  pathsToCopy, err := initialSyncFiles(service, trigger, ignoreInitialSync)",
          "",
          "[Added Lines]",
          "591: func (s *composeService) initialSync(ctx context.Context, project *types.Project, service types.ServiceConfig, trigger types.Trigger, ignore watch.PathMatcher, syncer sync.Syncer) error {",
          "592:  dockerFileIgnore, err := watch.NewDockerPatternMatcher(\"/\", []string{\"Dockerfile\", \"*compose*.y*ml\"})",
          "593:  if err != nil {",
          "594:   return err",
          "595:  }",
          "596:  triggerIgnore, err := watch.NewDockerPatternMatcher(\"/\", trigger.Ignore)",
          "597:  if err != nil {",
          "598:   return err",
          "599:  }",
          "602:  pathsToCopy, err := s.initialSyncFiles(ctx, project, service, trigger, ignoreInitialSync)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "596:  return syncer.Sync(ctx, service, pathsToCopy)",
          "597: }",
          "600:  fi, err := os.Stat(trigger.Path)",
          "601:  if err != nil {",
          "602:   return nil, err",
          "603:  }",
          "605:  var pathsToCopy []sync.PathMapping",
          "606:  switch mode := fi.Mode(); {",
          "607:  case mode.IsDir():",
          "609:   err = filepath.WalkDir(trigger.Path, func(path string, d fs.DirEntry, err error) error {",
          "610:    if err != nil {",
          "",
          "[Removed Lines]",
          "599: func initialSyncFiles(service types.ServiceConfig, trigger types.Trigger, ignore watch.PathMatcher) ([]sync.PathMapping, error) {",
          "",
          "[Added Lines]",
          "613: func (s *composeService) initialSyncFiles(ctx context.Context, project *types.Project, service types.ServiceConfig, trigger types.Trigger, ignore watch.PathMatcher) ([]sync.PathMapping, error) {",
          "618:  timeImageCreated, err := s.imageCreatedTime(ctx, project, service.Name)",
          "619:  if err != nil {",
          "620:   return nil, err",
          "621:  }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "616:     return nil",
          "617:    }",
          "621:     if d.IsDir() {",
          "623:     }",
          "625:    }",
          "630:    return nil",
          "631:   })",
          "632:  case mode.IsRegular():",
          "635:    pathsToCopy = append(pathsToCopy, sync.PathMapping{",
          "636:     HostPath:      trigger.Path,",
          "637:     ContainerPath: trigger.Target,",
          "638:    })",
          "639:   }",
          "640:  }",
          "642: }",
          "647:  return shouldIgnore",
          "648: }",
          "",
          "[Removed Lines]",
          "618:    rel, _ := filepath.Rel(trigger.Path, path)",
          "619:    if shouldIgnoreOrSkip(filepath.Base(path), ignore) || checkIfPathAlreadyBindMounted(path, service.Volumes) {",
          "622:      return fs.SkipDir // ignore or skip folder",
          "624:     return nil // ignore or skip file",
          "626:    pathsToCopy = append(pathsToCopy, sync.PathMapping{",
          "627:     HostPath:      path,",
          "628:     ContainerPath: filepath.Join(trigger.Target, rel),",
          "629:    })",
          "634:   if !shouldIgnoreOrSkip(filepath.Base(trigger.Path), ignore) && !checkIfPathAlreadyBindMounted(trigger.Path, service.Volumes) {",
          "641:  return pathsToCopy, nil",
          "644: func shouldIgnoreOrSkip(rel string, ignore watch.PathMatcher) bool {",
          "645:  shouldIgnore, _ := ignore.Matches(rel)",
          "",
          "[Added Lines]",
          "635:    if shouldIgnore(filepath.Base(path), ignore) || checkIfPathAlreadyBindMounted(path, service.Volumes) {",
          "639:      return fs.SkipDir",
          "641:     return nil // skip file",
          "642:    }",
          "643:    info, err := d.Info()",
          "644:    if err != nil {",
          "645:     return err",
          "646:    }",
          "647:    if !d.IsDir() {",
          "648:     if info.ModTime().Before(timeImageCreated) {",
          "650:      return nil",
          "651:     }",
          "652:     rel, err := filepath.Rel(trigger.Path, path)",
          "653:     if err != nil {",
          "654:      return err",
          "655:     }",
          "657:     pathsToCopy = append(pathsToCopy, sync.PathMapping{",
          "658:      HostPath:      path,",
          "659:      ContainerPath: filepath.Join(trigger.Target, rel),",
          "660:     })",
          "666:   if fi.ModTime().After(timeImageCreated) && !shouldIgnore(filepath.Base(trigger.Path), ignore) && !checkIfPathAlreadyBindMounted(trigger.Path, service.Volumes) {",
          "673:  return pathsToCopy, err",
          "676: func shouldIgnore(name string, ignore watch.PathMatcher) bool {",
          "677:  shouldIgnore, _ := ignore.Matches(name)",
          "683: func (s *composeService) imageCreatedTime(ctx context.Context, project *types.Project, serviceName string) (time.Time, error) {",
          "684:  containers, err := s.apiClient().ContainerList(ctx, container.ListOptions{",
          "685:   All: true,",
          "686:   Filters: filters.NewArgs(",
          "687:    filters.Arg(\"label\", fmt.Sprintf(\"%s=%s\", api.ProjectLabel, project.Name)),",
          "688:    filters.Arg(\"label\", fmt.Sprintf(\"%s=%s\", api.ServiceLabel, serviceName))),",
          "689:  })",
          "690:  if err != nil {",
          "691:   return time.Now(), err",
          "692:  }",
          "693:  if len(containers) == 0 {",
          "694:   return time.Now(), fmt.Errorf(\"Could not get created time for service's image\")",
          "695:  }",
          "697:  img, _, err := s.apiClient().ImageInspectWithRaw(ctx, containers[0].ImageID)",
          "698:  if err != nil {",
          "699:   return time.Now(), err",
          "700:  }",
          "702:  timeCreated, err := time.Parse(time.RFC3339Nano, img.Created)",
          "703:  if err != nil {",
          "704:   return time.Now(), err",
          "705:  }",
          "706:  return timeCreated, nil",
          "707: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "25cfa66a91b8be2377ad8f7befed515a283614b6",
      "candidate_info": {
        "commit_hash": "25cfa66a91b8be2377ad8f7befed515a283614b6",
        "repo": "docker/compose",
        "commit_url": "https://github.com/docker/compose/commit/25cfa66a91b8be2377ad8f7befed515a283614b6",
        "files": [
          "go.mod",
          "go.sum",
          "internal/ocipush/push.go",
          "pkg/compose/build.go"
        ],
        "message": "bump buildx v0.20.1 and docker v27.5.0\n\nSigned-off-by: Nicolas De Loof <nicolas.deloof@gmail.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum",
          "internal/ocipush/push.go||internal/ocipush/push.go",
          "pkg/compose/build.go||pkg/compose/build.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ],
          "candidate": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ]
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:  github.com/acarl005/stripansi v0.0.0-20180116102854-5a71ef0e047d",
          "11:  github.com/buger/goterm v1.0.4",
          "12:  github.com/compose-spec/compose-go/v2 v2.4.7",
          "16:  github.com/distribution/reference v0.6.0",
          "21:  github.com/docker/go-connections v0.5.0",
          "22:  github.com/docker/go-units v0.5.0",
          "23:  github.com/eiannone/keyboard v0.0.0-20220611211555-0d226195f203",
          "",
          "[Removed Lines]",
          "13:  github.com/containerd/containerd v1.7.24",
          "14:  github.com/containerd/platforms v0.2.1",
          "15:  github.com/davecgh/go-spew v1.1.1",
          "17:  github.com/docker/buildx v0.19.2",
          "18:  github.com/docker/cli v27.4.0+incompatible",
          "19:  github.com/docker/cli-docs-tool v0.8.0",
          "20:  github.com/docker/docker v27.4.0+incompatible",
          "",
          "[Added Lines]",
          "13:  github.com/containerd/containerd/v2 v2.0.2",
          "14:  github.com/containerd/platforms v1.0.0-rc.1",
          "15:  github.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc",
          "17:  github.com/docker/buildx v0.20.1",
          "18:  github.com/docker/cli v27.5.0+incompatible",
          "19:  github.com/docker/cli-docs-tool v0.9.0",
          "20:  github.com/docker/docker v27.5.0+incompatible",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "29:  github.com/mattn/go-shellwords v1.0.12",
          "30:  github.com/mitchellh/go-ps v1.0.0",
          "31:  github.com/mitchellh/mapstructure v1.5.0",
          "33:  github.com/moby/patternmatcher v0.6.0",
          "34:  github.com/moby/term v0.5.0",
          "35:  github.com/morikuni/aec v1.0.0",
          "",
          "[Removed Lines]",
          "32:  github.com/moby/buildkit v0.18.1",
          "",
          "[Added Lines]",
          "32:  github.com/moby/buildkit v0.19.0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "44:  github.com/stretchr/testify v1.10.0",
          "45:  github.com/theupdateframework/notary v0.7.0",
          "46:  github.com/tilt-dev/fsnotify v1.4.8-0.20220602155310-fff9c274a375",
          "54:  go.uber.org/goleak v1.3.0",
          "55:  go.uber.org/mock v0.5.0",
          "56:  golang.org/x/exp v0.0.0-20240909161429-701f63a606c0",
          "",
          "[Removed Lines]",
          "47:  go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.53.0",
          "48:  go.opentelemetry.io/otel v1.28.0",
          "49:  go.opentelemetry.io/otel/exporters/otlp/otlptrace v1.28.0",
          "50:  go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.28.0",
          "51:  go.opentelemetry.io/otel/metric v1.28.0",
          "52:  go.opentelemetry.io/otel/sdk v1.28.0",
          "53:  go.opentelemetry.io/otel/trace v1.28.0",
          "",
          "[Added Lines]",
          "47:  go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.56.0",
          "48:  go.opentelemetry.io/otel v1.31.0",
          "49:  go.opentelemetry.io/otel/exporters/otlp/otlptrace v1.31.0",
          "50:  go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.31.0",
          "51:  go.opentelemetry.io/otel/metric v1.31.0",
          "52:  go.opentelemetry.io/otel/sdk v1.31.0",
          "53:  go.opentelemetry.io/otel/trace v1.31.0",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "65: require (",
          "66:  dario.cat/mergo v1.0.1 // indirect",
          "68:  github.com/Azure/go-ansiterm v0.0.0-20210617225240-d185dfc1b5a1 // indirect",
          "69:  github.com/Masterminds/semver/v3 v3.2.1 // indirect",
          "83:  github.com/beorn7/perks v1.0.1 // indirect",
          "84:  github.com/cenkalti/backoff/v4 v4.3.0 // indirect",
          "85:  github.com/cespare/xxhash/v2 v2.3.0 // indirect",
          "86:  github.com/containerd/console v1.0.4 // indirect",
          "88:  github.com/containerd/continuity v0.4.5 // indirect",
          "90:  github.com/containerd/log v0.1.0 // indirect",
          "92:  github.com/containerd/typeurl/v2 v2.2.3 // indirect",
          "94:  github.com/docker/distribution v2.8.3+incompatible // indirect",
          "95:  github.com/docker/docker-credential-helpers v0.8.2 // indirect",
          "96:  github.com/docker/go v1.5.1-1.0.20160303222718-d30aec9fd63c // indirect",
          "",
          "[Removed Lines]",
          "67:  github.com/AdaLogics/go-fuzz-headers v0.0.0-20230811130428-ced1acdcaa24 // indirect",
          "70:  github.com/aws/aws-sdk-go-v2 v1.24.1 // indirect",
          "71:  github.com/aws/aws-sdk-go-v2/config v1.26.6 // indirect",
          "72:  github.com/aws/aws-sdk-go-v2/credentials v1.16.16 // indirect",
          "73:  github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.14.11 // indirect",
          "74:  github.com/aws/aws-sdk-go-v2/internal/configsources v1.2.10 // indirect",
          "75:  github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.5.10 // indirect",
          "76:  github.com/aws/aws-sdk-go-v2/internal/ini v1.7.3 // indirect",
          "77:  github.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.10.4 // indirect",
          "78:  github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.10.10 // indirect",
          "79:  github.com/aws/aws-sdk-go-v2/service/sso v1.18.7 // indirect",
          "80:  github.com/aws/aws-sdk-go-v2/service/ssooidc v1.21.7 // indirect",
          "81:  github.com/aws/aws-sdk-go-v2/service/sts v1.26.7 // indirect",
          "82:  github.com/aws/smithy-go v1.19.0 // indirect",
          "87:  github.com/containerd/containerd/api v1.7.19 // indirect",
          "89:  github.com/containerd/errdefs v0.3.0 // indirect",
          "91:  github.com/containerd/ttrpc v1.2.5 // indirect",
          "93:  github.com/cpuguy83/go-md2man/v2 v2.0.5 // indirect",
          "",
          "[Added Lines]",
          "67:  github.com/AdaLogics/go-fuzz-headers v0.0.0-20240806141605-e8a1dd7889d6 // indirect",
          "70:  github.com/apparentlymart/go-textseg/v15 v15.0.0 // indirect",
          "71:  github.com/aws/aws-sdk-go-v2 v1.30.3 // indirect",
          "72:  github.com/aws/aws-sdk-go-v2/config v1.27.27 // indirect",
          "73:  github.com/aws/aws-sdk-go-v2/credentials v1.17.27 // indirect",
          "74:  github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.11 // indirect",
          "75:  github.com/aws/aws-sdk-go-v2/internal/configsources v1.3.15 // indirect",
          "76:  github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.15 // indirect",
          "77:  github.com/aws/aws-sdk-go-v2/internal/ini v1.8.0 // indirect",
          "78:  github.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.11.3 // indirect",
          "79:  github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.11.17 // indirect",
          "80:  github.com/aws/aws-sdk-go-v2/service/sso v1.22.4 // indirect",
          "81:  github.com/aws/aws-sdk-go-v2/service/ssooidc v1.26.4 // indirect",
          "82:  github.com/aws/aws-sdk-go-v2/service/sts v1.30.3 // indirect",
          "83:  github.com/aws/smithy-go v1.20.3 // indirect",
          "88:  github.com/containerd/containerd/api v1.8.0 // indirect",
          "90:  github.com/containerd/errdefs v1.0.0 // indirect",
          "91:  github.com/containerd/errdefs/pkg v0.3.0 // indirect",
          "93:  github.com/containerd/ttrpc v1.2.7 // indirect",
          "95:  github.com/cpuguy83/go-md2man/v2 v2.0.6 // indirect",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "98:  github.com/emicklei/go-restful/v3 v3.11.0 // indirect",
          "99:  github.com/felixge/httpsnoop v1.0.4 // indirect",
          "100:  github.com/fvbommel/sortorder v1.1.0 // indirect",
          "101:  github.com/go-logr/logr v1.4.2 // indirect",
          "102:  github.com/go-logr/stdr v1.2.2 // indirect",
          "103:  github.com/go-openapi/jsonpointer v0.19.6 // indirect",
          "104:  github.com/go-openapi/jsonreference v0.20.2 // indirect",
          "106:  github.com/go-viper/mapstructure/v2 v2.0.0 // indirect",
          "107:  github.com/gofrs/flock v0.12.1 // indirect",
          "108:  github.com/gogo/protobuf v1.3.2 // indirect",
          "",
          "[Removed Lines]",
          "105:  github.com/go-openapi/swag v0.22.3 // indirect",
          "",
          "[Added Lines]",
          "103:  github.com/fxamacker/cbor/v2 v2.7.0 // indirect",
          "108:  github.com/go-openapi/swag v0.22.4 // indirect",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "113:  github.com/google/uuid v1.6.0 // indirect",
          "114:  github.com/gorilla/mux v1.8.1 // indirect",
          "115:  github.com/gorilla/websocket v1.5.0 // indirect",
          "117:  github.com/hashicorp/errwrap v1.1.0 // indirect",
          "118:  github.com/hashicorp/go-cleanhttp v0.5.2 // indirect",
          "119:  github.com/imdario/mergo v0.3.16 // indirect",
          "",
          "[Removed Lines]",
          "116:  github.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0 // indirect",
          "",
          "[Added Lines]",
          "119:  github.com/grpc-ecosystem/grpc-gateway/v2 v2.22.0 // indirect",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "132:  github.com/mitchellh/hashstructure/v2 v2.0.2 // indirect",
          "133:  github.com/moby/docker-image-spec v1.3.1 // indirect",
          "134:  github.com/moby/locker v1.0.1 // indirect",
          "136:  github.com/moby/sys/capability v0.4.0 // indirect",
          "137:  github.com/moby/sys/mountinfo v0.7.2 // indirect",
          "138:  github.com/moby/sys/sequential v0.6.0 // indirect",
          "139:  github.com/moby/sys/signal v0.7.1 // indirect",
          "141:  github.com/moby/sys/user v0.3.0 // indirect",
          "142:  github.com/moby/sys/userns v0.1.0 // indirect",
          "143:  github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect",
          "",
          "[Removed Lines]",
          "135:  github.com/moby/spdystream v0.2.0 // indirect",
          "140:  github.com/moby/sys/symlink v0.2.0 // indirect",
          "",
          "[Added Lines]",
          "138:  github.com/moby/spdystream v0.4.0 // indirect",
          "143:  github.com/moby/sys/symlink v0.3.0 // indirect",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "147:  github.com/pelletier/go-toml v1.9.5 // indirect",
          "148:  github.com/pkg/errors v0.9.1 // indirect",
          "149:  github.com/planetscale/vtprotobuf v0.6.1-0.20240319094008-0393e58bdf10 // indirect",
          "152:  github.com/prometheus/client_model v0.6.1 // indirect",
          "153:  github.com/prometheus/common v0.55.0 // indirect",
          "154:  github.com/prometheus/procfs v0.15.1 // indirect",
          "",
          "[Removed Lines]",
          "150:  github.com/pmezard/go-difflib v1.0.0 // indirect",
          "151:  github.com/prometheus/client_golang v1.20.2 // indirect",
          "",
          "[Added Lines]",
          "153:  github.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 // indirect",
          "154:  github.com/prometheus/client_golang v1.20.5 // indirect",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "158:  github.com/serialx/hashring v0.0.0-20200727003509-22c0c7ab6b1b // indirect",
          "159:  github.com/shibumi/go-pathspec v1.3.0 // indirect",
          "160:  github.com/tonistiigi/dchapes-mode v0.0.0-20241001053921-ca0759fec205 // indirect",
          "162:  github.com/tonistiigi/go-csvvalue v0.0.0-20240710180619-ddb21b71c0b4 // indirect",
          "163:  github.com/tonistiigi/units v0.0.0-20180711220420-6950e57a87ea // indirect",
          "164:  github.com/tonistiigi/vt100 v0.0.0-20240514184818-90bafcd6abab // indirect",
          "165:  github.com/xeipuuv/gojsonpointer v0.0.0-20190905194746-02993c407bfb // indirect",
          "166:  github.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415 // indirect",
          "167:  github.com/xeipuuv/gojsonschema v1.2.0 // indirect",
          "174:  go.opentelemetry.io/proto/otlp v1.3.1 // indirect",
          "175:  golang.org/x/crypto v0.31.0 // indirect",
          "176:  golang.org/x/net v0.33.0 // indirect",
          "",
          "[Removed Lines]",
          "161:  github.com/tonistiigi/fsutil v0.0.0-20241121093142-31cf1f437184 // indirect",
          "168:  go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.53.0 // indirect",
          "169:  go.opentelemetry.io/contrib/instrumentation/net/http/httptrace/otelhttptrace v0.53.0 // indirect",
          "170:  go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc v1.28.0 // indirect",
          "171:  go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp v1.28.0 // indirect",
          "172:  go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.28.0 // indirect",
          "173:  go.opentelemetry.io/otel/sdk/metric v1.28.0 // indirect",
          "",
          "[Added Lines]",
          "164:  github.com/tonistiigi/fsutil v0.0.0-20250113203817-b14e27f4135a // indirect",
          "168:  github.com/x448/float16 v0.8.4 // indirect",
          "172:  github.com/zclconf/go-cty v1.16.0 // indirect",
          "173:  go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.56.0 // indirect",
          "174:  go.opentelemetry.io/contrib/instrumentation/net/http/httptrace/otelhttptrace v0.56.0 // indirect",
          "175:  go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc v1.31.0 // indirect",
          "176:  go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp v1.31.0 // indirect",
          "177:  go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.31.0 // indirect",
          "178:  go.opentelemetry.io/otel/sdk/metric v1.31.0 // indirect",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "178:  golang.org/x/term v0.27.0 // indirect",
          "179:  golang.org/x/text v0.21.0 // indirect",
          "180:  golang.org/x/time v0.6.0 // indirect",
          "185:  gopkg.in/cenkalti/backoff.v1 v1.1.0 // indirect",
          "186:  gopkg.in/inf.v0 v0.9.1 // indirect",
          "187:  gopkg.in/yaml.v2 v2.4.0 // indirect",
          "194:  sigs.k8s.io/json v0.0.0-20221116044647-bc3834ca7abd // indirect",
          "195:  sigs.k8s.io/structured-merge-diff/v4 v4.4.1 // indirect",
          "197: )",
          "",
          "[Removed Lines]",
          "181:  google.golang.org/genproto v0.0.0-20240123012728-ef4313101c80 // indirect",
          "182:  google.golang.org/genproto/googleapis/api v0.0.0-20240903143218-8af14fe29dc1 // indirect",
          "183:  google.golang.org/genproto/googleapis/rpc v0.0.0-20240903143218-8af14fe29dc1 // indirect",
          "184:  google.golang.org/protobuf v1.35.1 // indirect",
          "188:  k8s.io/api v0.29.2 // indirect",
          "189:  k8s.io/apimachinery v0.29.2 // indirect",
          "190:  k8s.io/client-go v0.29.2 // indirect",
          "191:  k8s.io/klog/v2 v2.110.1 // indirect",
          "192:  k8s.io/kube-openapi v0.0.0-20231010175941-2dd684a91f00 // indirect",
          "193:  k8s.io/utils v0.0.0-20230726121419-3b25d923346b // indirect",
          "196:  sigs.k8s.io/yaml v1.3.0 // indirect",
          "",
          "[Added Lines]",
          "186:  google.golang.org/genproto/googleapis/api v0.0.0-20241007155032-5fefd90f89a9 // indirect",
          "187:  google.golang.org/genproto/googleapis/rpc v0.0.0-20241021214115-324edc3d5d38 // indirect",
          "188:  google.golang.org/protobuf v1.35.2 // indirect",
          "192:  k8s.io/api v0.31.2 // indirect",
          "193:  k8s.io/apimachinery v0.31.2 // indirect",
          "194:  k8s.io/client-go v0.31.2 // indirect",
          "195:  k8s.io/klog/v2 v2.130.1 // indirect",
          "196:  k8s.io/kube-openapi v0.0.0-20240228011516-70dd3763d340 // indirect",
          "197:  k8s.io/utils v0.0.0-20240711033017-18e509b52bc8 // indirect",
          "200:  sigs.k8s.io/yaml v1.4.0 // indirect",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dario.cat/mergo v1.0.1 h1:Ra4+bf83h2ztPIQYNP99R6m+Y7KfnARDfID+a+vLl4s=",
          "2: dario.cat/mergo v1.0.1/go.mod h1:uNxQE+84aUszobStD9th8a29P2fMDhsBdgRYvZOxGmk=",
          "7: github.com/AlecAivazis/survey/v2 v2.3.7 h1:6I/u8FvytdGsgonrYsVn2t8t4QiRnh6QSTqkkhIiSjQ=",
          "8: github.com/AlecAivazis/survey/v2 v2.3.7/go.mod h1:xUTIdE4KCOIjsBAE1JYsUPoCqYdZ1reCfTwbto0Fduo=",
          "9: github.com/Azure/go-ansiterm v0.0.0-20210617225240-d185dfc1b5a1 h1:UQHMgLO+TxOElx5B5HZ4hJQsoJ/PvUvKRhJHDQXO8P8=",
          "",
          "[Removed Lines]",
          "3: github.com/AdaLogics/go-fuzz-headers v0.0.0-20230811130428-ced1acdcaa24 h1:bvDV9vkmnHYOMsOr4WLk+Vo07yKIzd94sVoIqshQ4bU=",
          "4: github.com/AdaLogics/go-fuzz-headers v0.0.0-20230811130428-ced1acdcaa24/go.mod h1:8o94RPi1/7XTJvwPpRSzSUedZrtlirdB3r9Z20bi2f8=",
          "5: github.com/AdamKorcz/go-118-fuzz-build v0.0.0-20230306123547-8075edf89bb0 h1:59MxjQVfjXsBpLy+dbd2/ELV5ofnUkUZBvWSC85sheA=",
          "6: github.com/AdamKorcz/go-118-fuzz-build v0.0.0-20230306123547-8075edf89bb0/go.mod h1:OahwfttHWG6eJ0clwcfBAHoDI6X/LV/15hx/wlMZSrU=",
          "",
          "[Added Lines]",
          "3: github.com/AdaLogics/go-fuzz-headers v0.0.0-20240806141605-e8a1dd7889d6 h1:He8afgbRMd7mFxO99hRNu+6tazq8nFF9lIwo9JFroBk=",
          "4: github.com/AdaLogics/go-fuzz-headers v0.0.0-20240806141605-e8a1dd7889d6/go.mod h1:8o94RPi1/7XTJvwPpRSzSUedZrtlirdB3r9Z20bi2f8=",
          "5: github.com/AdamKorcz/go-118-fuzz-build v0.0.0-20231105174938-2b5cbb29f3e2 h1:dIScnXFlF784X79oi7MzVT6GWqr/W1uUt0pB5CsDs9M=",
          "6: github.com/AdamKorcz/go-118-fuzz-build v0.0.0-20231105174938-2b5cbb29f3e2/go.mod h1:gCLVsLfv1egrcZu+GoJATN5ts75F2s62ih/457eWzOw=",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "14: github.com/Masterminds/semver/v3 v3.2.1/go.mod h1:qvl/7zhW3nngYb5+80sSMF+FG2BjYrf8m9wsX0PNOMQ=",
          "15: github.com/Microsoft/go-winio v0.6.2 h1:F2VQgta7ecxGYO8k3ZZz3RS8fVIXVxONVUPlNERoyfY=",
          "16: github.com/Microsoft/go-winio v0.6.2/go.mod h1:yd8OoFMLzJbo9gZq8j5qaps8bJ9aShtEA8Ipt1oGCvU=",
          "19: github.com/Netflix/go-expect v0.0.0-20220104043353-73e0943537d2 h1:+vx7roKuyA63nhn5WAunQHLTznkw5W8b1Xc0dNjp83s=",
          "20: github.com/Netflix/go-expect v0.0.0-20220104043353-73e0943537d2/go.mod h1:HBCaDeC1lPdgDeDbhX8XFpy1jqjK0IBG8W5K+xYqA0w=",
          "21: github.com/Shopify/logrus-bugsnag v0.0.0-20170309145241-6dbc35f2c30d/go.mod h1:HI8ITrYtUY+O+ZhtlqUnD8+KwNPOyugEhfP9fdUIaEQ=",
          "",
          "[Removed Lines]",
          "17: github.com/Microsoft/hcsshim v0.12.8 h1:BtDWYlFMcWhorrvSSo2M7z0csPdw6t7no/C3FsSvqiI=",
          "18: github.com/Microsoft/hcsshim v0.12.8/go.mod h1:cibQ4BqhJ32FXDwPdQhKhwrwophnh3FuT4nwQZF907w=",
          "",
          "[Added Lines]",
          "17: github.com/Microsoft/hcsshim v0.12.9 h1:2zJy5KA+l0loz1HzEGqyNnjd3fyZA31ZBCGKacp6lLg=",
          "18: github.com/Microsoft/hcsshim v0.12.9/go.mod h1:fJ0gkFAna6ukt0bLdKB8djt4XIJhF/vEPuoIWYVvZ8Y=",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "27: github.com/alecthomas/units v0.0.0-20151022065526-2efee857e7cf/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=",
          "28: github.com/anchore/go-struct-converter v0.0.0-20221118182256-c68fdcfa2092 h1:aM1rlcoLz8y5B2r4tTLMiVTrMtpfY0O8EScKJxaSaEc=",
          "29: github.com/anchore/go-struct-converter v0.0.0-20221118182256-c68fdcfa2092/go.mod h1:rYqSE9HbjzpHTI74vwPvae4ZVYZd1lue2ta6xHPdblA=",
          "30: github.com/armon/go-socks5 v0.0.0-20160902184237-e75332964ef5 h1:0CwZNZbxp69SHPdPJAN/hZIm0C4OItdklCFmMRWYpio=",
          "31: github.com/armon/go-socks5 v0.0.0-20160902184237-e75332964ef5/go.mod h1:wHh0iHkYZB8zMSxRWpUBQtwG5a7fFgvEO+odwuTv2gs=",
          "58: github.com/beorn7/perks v0.0.0-20150223135152-b965b613227f/go.mod h1:Dwedo/Wpr24TaqPxmxbtue+5NUziq4I4S80YR8gNf3Q=",
          "59: github.com/beorn7/perks v0.0.0-20180321164747-3a771d992973/go.mod h1:Dwedo/Wpr24TaqPxmxbtue+5NUziq4I4S80YR8gNf3Q=",
          "60: github.com/beorn7/perks v1.0.0/go.mod h1:KWe93zE9D1o94FZ5RNwFwVgaQK1VOXiVxmqh+CedLV8=",
          "",
          "[Removed Lines]",
          "32: github.com/aws/aws-sdk-go-v2 v1.24.1 h1:xAojnj+ktS95YZlDf0zxWBkbFtymPeDP+rvUQIH3uAU=",
          "33: github.com/aws/aws-sdk-go-v2 v1.24.1/go.mod h1:LNh45Br1YAkEKaAqvmE1m8FUx6a5b/V0oAKV7of29b4=",
          "34: github.com/aws/aws-sdk-go-v2/config v1.26.6 h1:Z/7w9bUqlRI0FFQpetVuFYEsjzE3h7fpU6HuGmfPL/o=",
          "35: github.com/aws/aws-sdk-go-v2/config v1.26.6/go.mod h1:uKU6cnDmYCvJ+pxO9S4cWDb2yWWIH5hra+32hVh1MI4=",
          "36: github.com/aws/aws-sdk-go-v2/credentials v1.16.16 h1:8q6Rliyv0aUFAVtzaldUEcS+T5gbadPbWdV1WcAddK8=",
          "37: github.com/aws/aws-sdk-go-v2/credentials v1.16.16/go.mod h1:UHVZrdUsv63hPXFo1H7c5fEneoVo9UXiz36QG1GEPi0=",
          "38: github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.14.11 h1:c5I5iH+DZcH3xOIMlz3/tCKJDaHFwYEmxvlh2fAcFo8=",
          "39: github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.14.11/go.mod h1:cRrYDYAMUohBJUtUnOhydaMHtiK/1NZ0Otc9lIb6O0Y=",
          "40: github.com/aws/aws-sdk-go-v2/internal/configsources v1.2.10 h1:vF+Zgd9s+H4vOXd5BMaPWykta2a6Ih0AKLq/X6NYKn4=",
          "41: github.com/aws/aws-sdk-go-v2/internal/configsources v1.2.10/go.mod h1:6BkRjejp/GR4411UGqkX8+wFMbFbqsUIimfK4XjOKR4=",
          "42: github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.5.10 h1:nYPe006ktcqUji8S2mqXf9c/7NdiKriOwMvWQHgYztw=",
          "43: github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.5.10/go.mod h1:6UV4SZkVvmODfXKql4LCbaZUpF7HO2BX38FgBf9ZOLw=",
          "44: github.com/aws/aws-sdk-go-v2/internal/ini v1.7.3 h1:n3GDfwqF2tzEkXlv5cuy4iy7LpKDtqDMcNLfZDu9rls=",
          "45: github.com/aws/aws-sdk-go-v2/internal/ini v1.7.3/go.mod h1:6fQQgfuGmw8Al/3M2IgIllycxV7ZW7WCdVSqfBeUiCY=",
          "46: github.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.10.4 h1:/b31bi3YVNlkzkBrm9LfpaKoaYZUxIAj4sHfOTmLfqw=",
          "47: github.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.10.4/go.mod h1:2aGXHFmbInwgP9ZfpmdIfOELL79zhdNYNmReK8qDfdQ=",
          "48: github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.10.10 h1:DBYTXwIGQSGs9w4jKm60F5dmCQ3EEruxdc0MFh+3EY4=",
          "49: github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.10.10/go.mod h1:wohMUQiFdzo0NtxbBg0mSRGZ4vL3n0dKjLTINdcIino=",
          "50: github.com/aws/aws-sdk-go-v2/service/sso v1.18.7 h1:eajuO3nykDPdYicLlP3AGgOyVN3MOlFmZv7WGTuJPow=",
          "51: github.com/aws/aws-sdk-go-v2/service/sso v1.18.7/go.mod h1:+mJNDdF+qiUlNKNC3fxn74WWNN+sOiGOEImje+3ScPM=",
          "52: github.com/aws/aws-sdk-go-v2/service/ssooidc v1.21.7 h1:QPMJf+Jw8E1l7zqhZmMlFw6w1NmfkfiSK8mS4zOx3BA=",
          "53: github.com/aws/aws-sdk-go-v2/service/ssooidc v1.21.7/go.mod h1:ykf3COxYI0UJmxcfcxcVuz7b6uADi1FkiUz6Eb7AgM8=",
          "54: github.com/aws/aws-sdk-go-v2/service/sts v1.26.7 h1:NzO4Vrau795RkUdSHKEwiR01FaGzGOH1EETJ+5QHnm0=",
          "55: github.com/aws/aws-sdk-go-v2/service/sts v1.26.7/go.mod h1:6h2YuIoxaMSCFf5fi1EgZAwdfkGMgDY+DVfa61uLe4U=",
          "56: github.com/aws/smithy-go v1.19.0 h1:KWFKQV80DpP3vJrrA9sVAHQ5gc2z8i4EzrLhLlWXcBM=",
          "57: github.com/aws/smithy-go v1.19.0/go.mod h1:NukqUGpCZIILqqiV0NIjeFh24kd/FAa4beRb6nbIUPE=",
          "",
          "[Added Lines]",
          "30: github.com/apparentlymart/go-textseg/v15 v15.0.0 h1:uYvfpb3DyLSCGWnctWKGj857c6ew1u1fNQOlOtuGxQY=",
          "31: github.com/apparentlymart/go-textseg/v15 v15.0.0/go.mod h1:K8XmNZdhEBkdlyDdvbmmsvpAG721bKi0joRfFdHIWJ4=",
          "34: github.com/aws/aws-sdk-go-v2 v1.30.3 h1:jUeBtG0Ih+ZIFH0F4UkmL9w3cSpaMv9tYYDbzILP8dY=",
          "35: github.com/aws/aws-sdk-go-v2 v1.30.3/go.mod h1:nIQjQVp5sfpQcTc9mPSr1B0PaWK5ByX9MOoDadSN4lc=",
          "36: github.com/aws/aws-sdk-go-v2/config v1.27.27 h1:HdqgGt1OAP0HkEDDShEl0oSYa9ZZBSOmKpdpsDMdO90=",
          "37: github.com/aws/aws-sdk-go-v2/config v1.27.27/go.mod h1:MVYamCg76dFNINkZFu4n4RjDixhVr51HLj4ErWzrVwg=",
          "38: github.com/aws/aws-sdk-go-v2/credentials v1.17.27 h1:2raNba6gr2IfA0eqqiP2XiQ0UVOpGPgDSi0I9iAP+UI=",
          "39: github.com/aws/aws-sdk-go-v2/credentials v1.17.27/go.mod h1:gniiwbGahQByxan6YjQUMcW4Aov6bLC3m+evgcoN4r4=",
          "40: github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.11 h1:KreluoV8FZDEtI6Co2xuNk/UqI9iwMrOx/87PBNIKqw=",
          "41: github.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.11/go.mod h1:SeSUYBLsMYFoRvHE0Tjvn7kbxaUhl75CJi1sbfhMxkU=",
          "42: github.com/aws/aws-sdk-go-v2/internal/configsources v1.3.15 h1:SoNJ4RlFEQEbtDcCEt+QG56MY4fm4W8rYirAmq+/DdU=",
          "43: github.com/aws/aws-sdk-go-v2/internal/configsources v1.3.15/go.mod h1:U9ke74k1n2bf+RIgoX1SXFed1HLs51OgUSs+Ph0KJP8=",
          "44: github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.15 h1:C6WHdGnTDIYETAm5iErQUiVNsclNx9qbJVPIt03B6bI=",
          "45: github.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.15/go.mod h1:ZQLZqhcu+JhSrA9/NXRm8SkDvsycE+JkV3WGY41e+IM=",
          "46: github.com/aws/aws-sdk-go-v2/internal/ini v1.8.0 h1:hT8rVHwugYE2lEfdFE0QWVo81lF7jMrYJVDWI+f+VxU=",
          "47: github.com/aws/aws-sdk-go-v2/internal/ini v1.8.0/go.mod h1:8tu/lYfQfFe6IGnaOdrpVgEL2IrrDOf6/m9RQum4NkY=",
          "48: github.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.11.3 h1:dT3MqvGhSoaIhRseqw2I0yH81l7wiR2vjs57O51EAm8=",
          "49: github.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.11.3/go.mod h1:GlAeCkHwugxdHaueRr4nhPuY+WW+gR8UjlcqzPr1SPI=",
          "50: github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.11.17 h1:HGErhhrxZlQ044RiM+WdoZxp0p+EGM62y3L6pwA4olE=",
          "51: github.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.11.17/go.mod h1:RkZEx4l0EHYDJpWppMJ3nD9wZJAa8/0lq9aVC+r2UII=",
          "52: github.com/aws/aws-sdk-go-v2/service/sso v1.22.4 h1:BXx0ZIxvrJdSgSvKTZ+yRBeSqqgPM89VPlulEcl37tM=",
          "53: github.com/aws/aws-sdk-go-v2/service/sso v1.22.4/go.mod h1:ooyCOXjvJEsUw7x+ZDHeISPMhtwI3ZCB7ggFMcFfWLU=",
          "54: github.com/aws/aws-sdk-go-v2/service/ssooidc v1.26.4 h1:yiwVzJW2ZxZTurVbYWA7QOrAaCYQR72t0wrSBfoesUE=",
          "55: github.com/aws/aws-sdk-go-v2/service/ssooidc v1.26.4/go.mod h1:0oxfLkpz3rQ/CHlx5hB7H69YUpFiI1tql6Q6Ne+1bCw=",
          "56: github.com/aws/aws-sdk-go-v2/service/sts v1.30.3 h1:ZsDKRLXGWHk8WdtyYMoGNO7bTudrvuKpDKgMVRlepGE=",
          "57: github.com/aws/aws-sdk-go-v2/service/sts v1.30.3/go.mod h1:zwySh8fpFyXp9yOr/KVzxOl8SRqgf/IDw5aUt9UKFcQ=",
          "58: github.com/aws/smithy-go v1.20.3 h1:ryHwveWzPV5BIof6fyDvor6V3iUL7nTfiTKXHiW05nE=",
          "59: github.com/aws/smithy-go v1.20.3/go.mod h1:krry+ya/rV9RDcV/Q16kpu6ypI4K2czasz0NC3qS14E=",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "81: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb/go.mod h1:ZjrT6AXHbDs86ZSdt/osfBi5qfexBrKUdONk989Wnk4=",
          "82: github.com/compose-spec/compose-go/v2 v2.4.7 h1:WNpz5bIbKG+G+w9pfu72B1ZXr+Og9jez8TMEo8ecXPk=",
          "83: github.com/compose-spec/compose-go/v2 v2.4.7/go.mod h1:lFN0DrMxIncJGYAXTfWuajfwj5haBJqrBkarHcnjJKc=",
          "85: github.com/containerd/cgroups/v3 v3.0.3 h1:S5ByHZ/h9PMe5IOQoN7E+nMc2UcLEM/V48DGDJ9kip0=",
          "86: github.com/containerd/cgroups/v3 v3.0.3/go.mod h1:8HBe7V3aWGLFPd/k03swSIsGjZhHI2WzJmticMgVuz0=",
          "87: github.com/containerd/console v1.0.4 h1:F2g4+oChYvBTsASRTz8NP6iIAi97J3TtSAsLbIFn4ro=",
          "88: github.com/containerd/console v1.0.4/go.mod h1:YynlIjWYF8myEu6sdkwKIvGQq+cOckRm6So2avqoYAk=",
          "93: github.com/containerd/continuity v0.4.5 h1:ZRoN1sXq9u7V6QoHMcVWGhOwDFqZ4B9i5H6un1Wh0x4=",
          "94: github.com/containerd/continuity v0.4.5/go.mod h1:/lNJvtJKUQStBzpVQ1+rasXO1LAWtUQssk28EZvJ3nE=",
          "97: github.com/containerd/fifo v1.1.0 h1:4I2mbh5stb1u6ycIABlBw9zgtlK8viPI9QkQNRQEEmY=",
          "98: github.com/containerd/fifo v1.1.0/go.mod h1:bmC4NWMbXlt2EZ0Hc7Fx7QzTFxgPID13eH0Qu+MAb2o=",
          "99: github.com/containerd/log v0.1.0 h1:TCJt7ioM2cr/tfR8GPbGf9/VRAX8D2B4PjzCpfX540I=",
          "100: github.com/containerd/log v0.1.0/go.mod h1:VRRf09a7mHDIRezVKTRCrOq78v577GXq3bSa3EhrzVo=",
          "110: github.com/containerd/typeurl/v2 v2.2.3 h1:yNA/94zxWdvYACdYO8zofhrTVuQY73fFU1y++dYSw40=",
          "111: github.com/containerd/typeurl/v2 v2.2.3/go.mod h1:95ljDnPfD3bAbDJRugOiShd/DlAAsxGtUBhJxIn7SCk=",
          "112: github.com/cpuguy83/go-md2man/v2 v2.0.4/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=",
          "115: github.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=",
          "116: github.com/creack/pty v1.1.17/go.mod h1:MOBLtS5ELjhRRrroQr9kyvTxUAFNvYEK993ew/Vr4O4=",
          "119: github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=",
          "121: github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=",
          "122: github.com/denisenkom/go-mssqldb v0.0.0-20191128021309-1d7a30a10f73/go.mod h1:xbL0rPBG9cCiLr28tMa8zpbdarY27NDyej4t/EjAShU=",
          "123: github.com/distribution/reference v0.6.0 h1:0IXCQ5g4/QMHHkarYzh5l+u8T3t73zM5QvfrDyIgxBk=",
          "124: github.com/distribution/reference v0.6.0/go.mod h1:BbU0aIcezP1/5jX/8MP0YiH4SdvB5Y4f/wlDRiLyi3E=",
          "131: github.com/docker/distribution v2.7.1+incompatible/go.mod h1:J2gT2udsDAN96Uj4KfcMRqY0/ypR+oyYUYmja8H+y+w=",
          "132: github.com/docker/distribution v2.8.3+incompatible h1:AtKxIZ36LoNK51+Z6RpzLpddBirtxJnzDrHLEKxTAYk=",
          "133: github.com/docker/distribution v2.8.3+incompatible/go.mod h1:J2gT2udsDAN96Uj4KfcMRqY0/ypR+oyYUYmja8H+y+w=",
          "136: github.com/docker/docker-credential-helpers v0.8.2 h1:bX3YxiGzFP5sOXWc3bTPEXdEaZSeVMrFgOr3T+zrFAo=",
          "137: github.com/docker/docker-credential-helpers v0.8.2/go.mod h1:P3ci7E3lwkZg6XiHdRKft1KckHiO9a2rNtyFbZ/ry9M=",
          "138: github.com/docker/go v1.5.1-1.0.20160303222718-d30aec9fd63c h1:lzqkGL9b3znc+ZUgi7FlLnqjQhcXxkNM/quxIjBVMD0=",
          "",
          "[Removed Lines]",
          "84: github.com/containerd/cgroups v1.1.0 h1:v8rEWFl6EoqHB+swVNjVoCJE8o3jX7e8nqBGPLaDFBM=",
          "89: github.com/containerd/containerd v1.7.24 h1:zxszGrGjrra1yYJW/6rhm9cJ1ZQ8rkKBR48brqsa7nA=",
          "90: github.com/containerd/containerd v1.7.24/go.mod h1:7QUzfURqZWCZV7RLNEn1XjUCQLEf0bkaK4GjUaZehxw=",
          "91: github.com/containerd/containerd/api v1.7.19 h1:VWbJL+8Ap4Ju2mx9c9qS1uFSB1OVYr5JJrW2yT5vFoA=",
          "92: github.com/containerd/containerd/api v1.7.19/go.mod h1:fwGavl3LNwAV5ilJ0sbrABL44AQxmNjDRcwheXDb6Ig=",
          "95: github.com/containerd/errdefs v0.3.0 h1:FSZgGOeK4yuT/+DnF07/Olde/q4KBoMsaamhXxIMDp4=",
          "96: github.com/containerd/errdefs v0.3.0/go.mod h1:+YBYIdtsnF4Iw6nWZhJcqGSg/dwvV7tyJ/kCkyJ2k+M=",
          "101: github.com/containerd/nydus-snapshotter v0.14.0 h1:6/eAi6d7MjaeLLuMO8Udfe5GVsDudmrDNO4SGETMBco=",
          "102: github.com/containerd/nydus-snapshotter v0.14.0/go.mod h1:TT4jv2SnIDxEBu4H2YOvWQHPOap031ydTaHTuvc5VQk=",
          "103: github.com/containerd/platforms v0.2.1 h1:zvwtM3rz2YHPQsF2CHYM8+KtB5dvhISiXh5ZpSBQv6A=",
          "104: github.com/containerd/platforms v0.2.1/go.mod h1:XHCb+2/hzowdiut9rkudds9bE5yJ7npe7dG/wG+uFPw=",
          "105: github.com/containerd/stargz-snapshotter v0.15.1 h1:fpsP4kf/Z4n2EYnU0WT8ZCE3eiKDwikDhL6VwxIlgeA=",
          "106: github.com/containerd/stargz-snapshotter/estargz v0.15.1 h1:eXJjw9RbkLFgioVaTG+G/ZW/0kEe2oEKCdS/ZxIyoCU=",
          "107: github.com/containerd/stargz-snapshotter/estargz v0.15.1/go.mod h1:gr2RNwukQ/S9Nv33Lt6UC7xEx58C+LHRdoqbEKjz1Kk=",
          "108: github.com/containerd/ttrpc v1.2.5 h1:IFckT1EFQoFBMG4c3sMdT8EP3/aKfumK1msY+Ze4oLU=",
          "109: github.com/containerd/ttrpc v1.2.5/go.mod h1:YCXHsb32f+Sq5/72xHubdiJRQY9inL4a4ZQrAbN1q9o=",
          "113: github.com/cpuguy83/go-md2man/v2 v2.0.5 h1:ZtcqGrnekaHpVLArFSe4HK5DoKx1T0rq2DwVB0alcyc=",
          "114: github.com/cpuguy83/go-md2man/v2 v2.0.5/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=",
          "117: github.com/creack/pty v1.1.21 h1:1/QdRyBaHHJP61QkWMXlOIBfsgdDeeKfK8SYVUWJKf0=",
          "118: github.com/creack/pty v1.1.21/go.mod h1:MOBLtS5ELjhRRrroQr9kyvTxUAFNvYEK993ew/Vr4O4=",
          "120: github.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=",
          "125: github.com/docker/buildx v0.19.2 h1:2zXzgP2liQKgQ5BiOqMc+wz7hfWgAIMWw5MR6QDG++I=",
          "126: github.com/docker/buildx v0.19.2/go.mod h1:k4WP+XmGRYL0a7l4RZAI2TqpwhuAuSQ5U/rosRgFmAA=",
          "127: github.com/docker/cli v27.4.0+incompatible h1:/nJzWkcI1MDMN+U+px/YXnQWJqnu4J+QKGTfD6ptiTc=",
          "128: github.com/docker/cli v27.4.0+incompatible/go.mod h1:JLrzqnKDaYBop7H2jaqPtU4hHvMKP+vjCwu2uszcLI8=",
          "129: github.com/docker/cli-docs-tool v0.8.0 h1:YcDWl7rQJC3lJ7WVZRwSs3bc9nka97QLWfyJQli8yJU=",
          "130: github.com/docker/cli-docs-tool v0.8.0/go.mod h1:8TQQ3E7mOXoYUs811LiPdUnAhXrcVsBIrW21a5pUbdk=",
          "134: github.com/docker/docker v27.4.0+incompatible h1:I9z7sQ5qyzO0BfAb9IMOawRkAGxhYsidKiTMcm0DU+A=",
          "135: github.com/docker/docker v27.4.0+incompatible/go.mod h1:eEKB0N0r5NX/I1kEveEz05bcu8tLC/8azJZsviup8Sk=",
          "",
          "[Added Lines]",
          "90: github.com/containerd/containerd/api v1.8.0 h1:hVTNJKR8fMc/2Tiw60ZRijntNMd1U+JVMyTRdsD2bS0=",
          "91: github.com/containerd/containerd/api v1.8.0/go.mod h1:dFv4lt6S20wTu/hMcP4350RL87qPWLVa/OHOwmmdnYc=",
          "92: github.com/containerd/containerd/v2 v2.0.2 h1:GmH/tRBlTvrXOLwSpWE2vNAm8+MqI6nmxKpKBNKY8Wc=",
          "93: github.com/containerd/containerd/v2 v2.0.2/go.mod h1:wIqEvQ/6cyPFUGJ5yMFanspPabMLor+bF865OHvNTTI=",
          "96: github.com/containerd/errdefs v1.0.0 h1:tg5yIfIlQIrxYtu9ajqY42W3lpS19XqdxRQeEwYG8PI=",
          "97: github.com/containerd/errdefs v1.0.0/go.mod h1:+YBYIdtsnF4Iw6nWZhJcqGSg/dwvV7tyJ/kCkyJ2k+M=",
          "98: github.com/containerd/errdefs/pkg v0.3.0 h1:9IKJ06FvyNlexW690DXuQNx2KA2cUJXx151Xdx3ZPPE=",
          "99: github.com/containerd/errdefs/pkg v0.3.0/go.mod h1:NJw6s9HwNuRhnjJhM7pylWwMyAkmCQvQ4GpJHEqRLVk=",
          "104: github.com/containerd/nydus-snapshotter v0.15.0 h1:RqZRs1GPeM6T3wmuxJV9u+2Rg4YETVMwTmiDeX+iWC8=",
          "105: github.com/containerd/nydus-snapshotter v0.15.0/go.mod h1:biq0ijpeZe0I5yZFSJyHzFSjjRZQ7P7y/OuHyd7hYOw=",
          "106: github.com/containerd/platforms v1.0.0-rc.1 h1:83KIq4yy1erSRgOVHNk1HYdPvzdJ5CnsWaRoJX4C41E=",
          "107: github.com/containerd/platforms v1.0.0-rc.1/go.mod h1:J71L7B+aiM5SdIEqmd9wp6THLVRzJGXfNuWCZCllLA4=",
          "108: github.com/containerd/plugin v1.0.0 h1:c8Kf1TNl6+e2TtMHZt+39yAPDbouRH9WAToRjex483Y=",
          "109: github.com/containerd/plugin v1.0.0/go.mod h1:hQfJe5nmWfImiqT1q8Si3jLv3ynMUIBB47bQ+KexvO8=",
          "110: github.com/containerd/stargz-snapshotter v0.16.3 h1:zbQMm8dRuPHEOD4OqAYGajJJUwCeUzt4j7w9Iaw58u4=",
          "111: github.com/containerd/stargz-snapshotter/estargz v0.16.3 h1:7evrXtoh1mSbGj/pfRccTampEyKpjpOnS3CyiV1Ebr8=",
          "112: github.com/containerd/stargz-snapshotter/estargz v0.16.3/go.mod h1:uyr4BfYfOj3G9WBVE8cOlQmXAbPN9VEQpBBeJIuOipU=",
          "113: github.com/containerd/ttrpc v1.2.7 h1:qIrroQvuOL9HQ1X6KHe2ohc7p+HP/0VE6XPU7elJRqQ=",
          "114: github.com/containerd/ttrpc v1.2.7/go.mod h1:YCXHsb32f+Sq5/72xHubdiJRQY9inL4a4ZQrAbN1q9o=",
          "118: github.com/cpuguy83/go-md2man/v2 v2.0.6 h1:XJtiaUW6dEEqVuZiMTn1ldk455QWwEIsMIJlo5vtkx0=",
          "119: github.com/cpuguy83/go-md2man/v2 v2.0.6/go.mod h1:oOW0eioCTA6cOiMLiUPZOpcVxMig6NIQQ7OS05n1F4g=",
          "122: github.com/creack/pty v1.1.24 h1:bJrF4RRfyJnbTJqzRLHzcGaZK1NeM5kTC9jGgovnR1s=",
          "123: github.com/creack/pty v1.1.24/go.mod h1:08sCNb52WyoAwi2QDyzUCTgcvVFhUzewun7wtTfvcwE=",
          "126: github.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc h1:U9qPSI2PIWSS1VwoXQT9A3Wy9MM3WgvqSxFWenqJduM=",
          "127: github.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=",
          "131: github.com/docker/buildx v0.20.1 h1:q88EfoYwrWEKVqNb9stOFq8fUlFp/OPlDcFE+QUYZBM=",
          "132: github.com/docker/buildx v0.20.1/go.mod h1:VVi4Nvo4jd/IkRvwyExbIyW7u82fivK61MRx5I0oKic=",
          "133: github.com/docker/cli v27.5.0+incompatible h1:aMphQkcGtpHixwwhAXJT1rrK/detk2JIvDaFkLctbGM=",
          "134: github.com/docker/cli v27.5.0+incompatible/go.mod h1:JLrzqnKDaYBop7H2jaqPtU4hHvMKP+vjCwu2uszcLI8=",
          "135: github.com/docker/cli-docs-tool v0.9.0 h1:CVwQbE+ZziwlPqrJ7LRyUF6GvCA+6gj7MTCsayaK9t0=",
          "136: github.com/docker/cli-docs-tool v0.9.0/go.mod h1:ClrwlNW+UioiRyH9GiAOe1o3J/TsY3Tr1ipoypjAUtc=",
          "140: github.com/docker/docker v27.5.0+incompatible h1:um++2NcQtGRTz5eEgO6aJimo6/JxrTXC941hd05JO6U=",
          "141: github.com/docker/docker v27.5.0+incompatible/go.mod h1:eEKB0N0r5NX/I1kEveEz05bcu8tLC/8azJZsviup8Sk=",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "140: github.com/docker/go-connections v0.4.0/go.mod h1:Gbd7IOopHjR8Iph03tsViu4nIes5XhDvyHbTtUxmeec=",
          "141: github.com/docker/go-connections v0.5.0 h1:USnMq7hx7gwdVZq1L49hLXaFtUdTADjXGp+uj1Br63c=",
          "142: github.com/docker/go-connections v0.5.0/go.mod h1:ov60Kzw0kKElRwhNs9UlUHAE/F9Fe6GLaXnqyDdmEXc=",
          "145: github.com/docker/go-metrics v0.0.0-20180209012529-399ea8c73916/go.mod h1:/u0gXw0Gay3ceNrsHubL3BtdOL2fHf93USgMTe0W5dI=",
          "146: github.com/docker/go-metrics v0.0.1 h1:AgB/0SvBxihN0X8OR4SjsblXkbMvalQ8cjmtKQ2rQV8=",
          "147: github.com/docker/go-metrics v0.0.1/go.mod h1:cG1hvH2utMXtqgqqYE9plW6lDxS3/5ayHzueweSI3Vw=",
          "",
          "[Removed Lines]",
          "143: github.com/docker/go-events v0.0.0-20190806004212-e31b211e4f1c h1:+pKlWGMw7gf6bQ+oDZB4KHQFypsfjYlq/C4rfL7D3g8=",
          "144: github.com/docker/go-events v0.0.0-20190806004212-e31b211e4f1c/go.mod h1:Uw6UezgYA44ePAFQYUehOuCzmy5zmg/+nl2ZfMWGkpA=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "160: github.com/fsnotify/fsevents v0.2.0 h1:BRlvlqjvNTfogHfeBOFvSC9N0Ddy+wzQCQukyoD7o/c=",
          "161: github.com/fsnotify/fsevents v0.2.0/go.mod h1:B3eEk39i4hz8y1zaWS/wPrAP4O6wkIl7HQwKBr1qH/w=",
          "162: github.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=",
          "163: github.com/fvbommel/sortorder v1.1.0 h1:fUmoe+HLsBTctBDoaBwpQo5N+nrCp8g/BjKb/6ZQmYw=",
          "164: github.com/fvbommel/sortorder v1.1.0/go.mod h1:uk88iVf1ovNn1iLfgUVU2F9o5eO30ui720w+kxuqRs0=",
          "165: github.com/go-kit/kit v0.8.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=",
          "166: github.com/go-logfmt/logfmt v0.3.0/go.mod h1:Qt1PoO58o5twSAckw1HlFXLmHsOX5/0LbT9GBnD5lWE=",
          "167: github.com/go-logfmt/logfmt v0.4.0/go.mod h1:3RMwSq7FuexP4Kalkev3ejPJsZTpXXBr9+V4qmtdjCk=",
          "168: github.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=",
          "170: github.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=",
          "171: github.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=",
          "172: github.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=",
          "",
          "[Removed Lines]",
          "169: github.com/go-logr/logr v1.3.0/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=",
          "",
          "[Added Lines]",
          "167: github.com/fsnotify/fsnotify v1.7.0 h1:8JEhPFa5W2WU7YfeZzPNqzMP6Lwt7L2715Ggo0nosvA=",
          "168: github.com/fsnotify/fsnotify v1.7.0/go.mod h1:40Bi/Hjc2AVfZrqy+aj+yEI+/bRxZnMJyTJwOpGvigM=",
          "171: github.com/fxamacker/cbor/v2 v2.7.0 h1:iM5WgngdRBanHcxugY4JySA0nk1wZorNOpTgCMedv5E=",
          "172: github.com/fxamacker/cbor/v2 v2.7.0/go.mod h1:pxXPTn3joSm21Gbwsv0w9OSA2y1HFR9qXEeXQVeNoDQ=",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "175: github.com/go-openapi/jsonpointer v0.19.6/go.mod h1:osyAmYz/mB/C3I+WsTTSgw1ONzaLJoLCyoi6/zppojs=",
          "176: github.com/go-openapi/jsonreference v0.20.2 h1:3sVjiK66+uXK/6oQ8xgcRKcFgQ5KXa2KvnJRumpMGbE=",
          "177: github.com/go-openapi/jsonreference v0.20.2/go.mod h1:Bl1zwGIM8/wsvqjsOQLJ/SH+En5Ap4rVB5KVcIDZG2k=",
          "179: github.com/go-openapi/swag v0.22.3/go.mod h1:UzaqsxGiab7freDnrUUra0MwWfN/q7tE4j+VcZ0yl14=",
          "180: github.com/go-sql-driver/mysql v1.3.0 h1:pgwjLi/dvffoP9aabwkT3AKpXQM93QARkjFhDDqC1UE=",
          "181: github.com/go-sql-driver/mysql v1.3.0/go.mod h1:zAC/RDZ24gD3HViQzih4MyKcchzm+sOG5ZlKdlhCg5w=",
          "182: github.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=",
          "185: github.com/go-viper/mapstructure/v2 v2.0.0 h1:dhn8MZ1gZ0mzeodTG3jt5Vj/o87xZKuNAprG2mQfMfc=",
          "186: github.com/go-viper/mapstructure/v2 v2.0.0/go.mod h1:oJDH3BJKyqBA2TXFhDsKDGDTlndYOZ6rGS0BRZIxGhM=",
          "187: github.com/gofrs/flock v0.12.1 h1:MTLVXXHf8ekldpJk3AKicLij9MdwOWkZ+a/jHHZby9E=",
          "",
          "[Removed Lines]",
          "178: github.com/go-openapi/swag v0.22.3 h1:yMBqmnQ0gyZvEb/+KzuWZOXgllrXT4SADYbvDaXHv/g=",
          "183: github.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572 h1:tfuBGBXKqDEevZMzYi5KSi8KkcZtzBcTgAUUtapy0OI=",
          "184: github.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572/go.mod h1:9Pwr4B2jHnOSGXyyzV8ROjYa2ojvAY6HCGYYfMoC3Ls=",
          "",
          "[Added Lines]",
          "186: github.com/go-openapi/swag v0.22.4 h1:QLMzNJnMGPRNDCbySlcj1x01tzU8/9LTTL9hZZZogBU=",
          "187: github.com/go-openapi/swag v0.22.4/go.mod h1:UzaqsxGiab7freDnrUUra0MwWfN/q7tE4j+VcZ0yl14=",
          "191: github.com/go-task/slim-sprig/v3 v3.0.0 h1:sUs3vkvUymDpBKi3qH1YSqBQk9+9D/8M2mN1vB6EwHI=",
          "192: github.com/go-task/slim-sprig/v3 v3.0.0/go.mod h1:W848ghGpv3Qj3dhTPRyJypKRiqCdHZiAzKg9hl15HA8=",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "210: github.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=",
          "211: github.com/google/gofuzz v1.2.0 h1:xRy4A+RhZaiKjJ1bPfwQ8sedCA+YS2YcCHW6ec7JMi0=",
          "212: github.com/google/gofuzz v1.2.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=",
          "215: github.com/google/shlex v0.0.0-20191202100458-e7afc7fbc510 h1:El6M4kTTCOh6aBiKaUGG7oYTSPP8MxqL4YI3kZKwcP4=",
          "216: github.com/google/shlex v0.0.0-20191202100458-e7afc7fbc510/go.mod h1:pupxD2MaaD3pAXIBCelhxNneeOaAeabZDe5s4K6zSpQ=",
          "217: github.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=",
          "",
          "[Removed Lines]",
          "213: github.com/google/pprof v0.0.0-20240424215950-a892ee059fd6 h1:k7nVchz72niMH6YLQNvHSdIE7iqsQxK1P41mySCvssg=",
          "214: github.com/google/pprof v0.0.0-20240424215950-a892ee059fd6/go.mod h1:kf6iHlnVGwgKolg33glAes7Yg/8iWP8ukqeldJSO7jw=",
          "",
          "[Added Lines]",
          "221: github.com/google/pprof v0.0.0-20240525223248-4bfdf5a9a2af h1:kmjWCqn2qkEml422C2Rrd27c3VGxi6a/6HNq8QmHRKM=",
          "222: github.com/google/pprof v0.0.0-20240525223248-4bfdf5a9a2af/go.mod h1:K1liHPHnj73Fdn/EKuT8nrFqBihUSKXoLYU0BuatOYo=",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "219: github.com/gorilla/mux v1.7.0/go.mod h1:1lud6UwP+6orDFRuTfBEV8e9/aOM/c4fVVCaMa2zaAs=",
          "220: github.com/gorilla/mux v1.8.1 h1:TuBL49tXwgrFYWhqrNgrUNEY92u81SPhu7sTdzQEiWY=",
          "221: github.com/gorilla/mux v1.8.1/go.mod h1:AKf9I4AEqPTmMytcMc0KkNouC66V3BtZ4qD5fmWSiMQ=",
          "223: github.com/gorilla/websocket v1.5.0 h1:PPwGk2jz7EePpoHN/+ClbZu8SPxiqlu12wZP/3sWmnc=",
          "224: github.com/gorilla/websocket v1.5.0/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=",
          "227: github.com/hailocab/go-hostpool v0.0.0-20160125115350-e80d13ce29ed h1:5upAirOpQc1Q53c0bnx2ufif5kANL7bfZWcc6VJWJd8=",
          "228: github.com/hailocab/go-hostpool v0.0.0-20160125115350-e80d13ce29ed/go.mod h1:tMWxXQ9wFIaZeTI9F+hmhFiGpFmhOHzyShyFUhRm0H4=",
          "229: github.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=",
          "",
          "[Removed Lines]",
          "222: github.com/gorilla/websocket v1.4.2/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=",
          "225: github.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0 h1:bkypFPDjIYGfCYD5mRBvpqxfYX1YCS1PXdKYWi8FsN0=",
          "226: github.com/grpc-ecosystem/grpc-gateway/v2 v2.20.0/go.mod h1:P+Lt/0by1T8bfcF3z737NnSbmxQAppXMRziHUxPOC8k=",
          "",
          "[Added Lines]",
          "232: github.com/grpc-ecosystem/grpc-gateway/v2 v2.22.0 h1:asbCHRVmodnJTuQ3qamDwqVOIjwqUPTYmYuemVOx+Ys=",
          "233: github.com/grpc-ecosystem/grpc-gateway/v2 v2.22.0/go.mod h1:ggCgvZ2r7uOoQjOyu2Y1NhHmEPPzzuhWgcza5M1Ji1I=",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "309: github.com/mitchellh/mapstructure v0.0.0-20150613213606-2caf8efc9366/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=",
          "310: github.com/mitchellh/mapstructure v1.5.0 h1:jeMsZIYE/09sWLaz43PL7Gy6RuMjD2eJVyuac5Z2hdY=",
          "311: github.com/mitchellh/mapstructure v1.5.0/go.mod h1:bFUtVrKA4DC2yAKiSyO/QUcy7e+RRV2QTWOzhPopBRo=",
          "314: github.com/moby/docker-image-spec v1.3.1 h1:jMKff3w6PgbfSa69GfNg+zN/XLhfXJGnEx3Nl2EsFP0=",
          "315: github.com/moby/docker-image-spec v1.3.1/go.mod h1:eKmb5VW8vQEh/BAr2yvVNvuiJuY6UIocYsFu/DxxRpo=",
          "316: github.com/moby/locker v1.0.1 h1:fOXqR41zeveg4fFODix+1Ch4mj/gT0NE1XJbp/epuBg=",
          "317: github.com/moby/locker v1.0.1/go.mod h1:S7SDdo5zpBK84bzzVlKr2V0hz+7x9hWbYC/kq7oQppc=",
          "318: github.com/moby/patternmatcher v0.6.0 h1:GmP9lR19aU5GqSSFko+5pRqHi+Ohk1O69aFiKkVGiPk=",
          "319: github.com/moby/patternmatcher v0.6.0/go.mod h1:hDPoyOpDY7OrrMDLaYoY3hf52gNCR/YOUYxkhApJIxc=",
          "322: github.com/moby/sys/capability v0.4.0 h1:4D4mI6KlNtWMCM1Z/K0i7RV1FkX+DBDHKVJpCndZoHk=",
          "323: github.com/moby/sys/capability v0.4.0/go.mod h1:4g9IK291rVkms3LKCDOoYlnV8xKwoDTpIrNEE35Wq0I=",
          "324: github.com/moby/sys/mountinfo v0.7.2 h1:1shs6aH5s4o5H2zQLn796ADW1wMrIwHsyJ2v9KouLrg=",
          "",
          "[Removed Lines]",
          "312: github.com/moby/buildkit v0.18.1 h1:Iwrz2F/Za2Gjkpwu3aM2LX92AFfJCJe2oNnvGNvh2Rc=",
          "313: github.com/moby/buildkit v0.18.1/go.mod h1:vCR5CX8NGsPTthTg681+9kdmfvkvqJBXEv71GZe5msU=",
          "320: github.com/moby/spdystream v0.2.0 h1:cjW1zVyyoiM0T7b6UoySUFqzXMoqRckQtXwGPiBhOM8=",
          "321: github.com/moby/spdystream v0.2.0/go.mod h1:f7i0iNDQJ059oMTcWxx8MA/zKFIuD/lY+0GqbN2Wy8c=",
          "",
          "[Added Lines]",
          "319: github.com/moby/buildkit v0.19.0 h1:w9G1p7sArvCGNkpWstAqJfRQTXBKukMyMK1bsah1HNo=",
          "320: github.com/moby/buildkit v0.19.0/go.mod h1:WiHBFTgWV8eB1AmPxIWsAlKjUACAwm3X/14xOV4VWew=",
          "327: github.com/moby/spdystream v0.4.0 h1:Vy79D6mHeJJjiPdFEL2yku1kl0chZpJfZcPpb16BRl8=",
          "328: github.com/moby/spdystream v0.4.0/go.mod h1:xBAYlnt/ay+11ShkdFKNAG7LsyK/tmNBVvVOwrfMgdI=",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "327: github.com/moby/sys/sequential v0.6.0/go.mod h1:uyv8EUTrca5PnDsdMGXhZe6CCe8U/UiTWd+lL+7b/Ko=",
          "328: github.com/moby/sys/signal v0.7.1 h1:PrQxdvxcGijdo6UXXo/lU/TvHUWyPhj7UOpSo8tuvk0=",
          "329: github.com/moby/sys/signal v0.7.1/go.mod h1:Se1VGehYokAkrSQwL4tDzHvETwUZlnY7S5XtQ50mQp8=",
          "332: github.com/moby/sys/user v0.3.0 h1:9ni5DlcW5an3SvRSx4MouotOygvzaXbaSrc/wGDFWPo=",
          "333: github.com/moby/sys/user v0.3.0/go.mod h1:bG+tYYYJgaMtRKgEmuueC0hJEAZWwtIbZTB+85uoHjs=",
          "334: github.com/moby/sys/userns v0.1.0 h1:tVLXkFOxVu9A64/yh59slHVv9ahO9UIev4JZusOLG/g=",
          "",
          "[Removed Lines]",
          "330: github.com/moby/sys/symlink v0.2.0 h1:tk1rOM+Ljp0nFmfOIBtlV3rTDlWOwFRhjEeAhZB0nZc=",
          "331: github.com/moby/sys/symlink v0.2.0/go.mod h1:7uZVF2dqJjG/NsClqul95CqKOBRQyYSNnJ6BMgR/gFs=",
          "",
          "[Added Lines]",
          "337: github.com/moby/sys/symlink v0.3.0 h1:GZX89mEZ9u53f97npBy4Rc3vJKj7JBDj/PN2I22GrNU=",
          "338: github.com/moby/sys/symlink v0.3.0/go.mod h1:3eNdhduHmYPcgsJtZXW1W4XUJdZGBIkttZ8xKqPUJq0=",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "353: github.com/onsi/ginkgo v1.6.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=",
          "354: github.com/onsi/ginkgo v1.12.0 h1:Iw5WCbBcaAAd0fpRb1c9r5YCylv4XDoCSigm1zLevwU=",
          "355: github.com/onsi/ginkgo v1.12.0/go.mod h1:oUhWkIvk5aDxtKvDDuw8gItl8pKl42LzjC9KZE0HfGg=",
          "358: github.com/onsi/gomega v1.7.1/go.mod h1:XdKZgCCFLUoM/7CFJVPcG8C1xQ1AJ0vpAezJrB7JYyY=",
          "359: github.com/onsi/gomega v1.9.0/go.mod h1:Ho0h+IUsWyvy1OpqCwxlQ/21gkhVunqlU8fDGcoTdcA=",
          "362: github.com/opencontainers/go-digest v0.0.0-20170106003457-a6d0ee40d420/go.mod h1:cMLVZDEM3+U2I4VmLI6N8jQYUd2OVphdqWwCJHrFt2s=",
          "363: github.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=",
          "364: github.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=",
          "",
          "[Removed Lines]",
          "356: github.com/onsi/ginkgo/v2 v2.13.0 h1:0jY9lJquiL8fcf3M4LAXN5aMlS/b2BV86HFFPCPMgE4=",
          "357: github.com/onsi/ginkgo/v2 v2.13.0/go.mod h1:TE309ZR8s5FsKKpuB1YAQYBzCaAfUgatB/xlT/ETL/o=",
          "360: github.com/onsi/gomega v1.29.0 h1:KIA/t2t5UBzoirT4H9tsML45GEbo3ouUnBHsCfD2tVg=",
          "361: github.com/onsi/gomega v1.29.0/go.mod h1:9sxs+SwGrKI0+PWe4Fxa9tFQQBG5xSsSbMXOI8PPpoQ=",
          "",
          "[Added Lines]",
          "363: github.com/onsi/ginkgo/v2 v2.19.0 h1:9Cnnf7UHo57Hy3k6/m5k3dRfGTMXGvxhHFvkDTCTpvA=",
          "364: github.com/onsi/ginkgo/v2 v2.19.0/go.mod h1:rlwLi9PilAFJ8jCg9UE1QP6VBpd6/xj3SRC0d6TU0To=",
          "367: github.com/onsi/gomega v1.19.0 h1:4ieX6qQjPP/BfC3mpsAtIGGlxTWPeA3Inl/7DtXw1tw=",
          "368: github.com/onsi/gomega v1.19.0/go.mod h1:LY+I3pBVzYsTBU1AnDwOSxaYi9WoWiqgwooUqq9yPro=",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "367: github.com/opencontainers/image-spec v1.1.0/go.mod h1:W4s4sFTMaBeK1BQLXbG4AdM2szdn85PY75RI83NrTrM=",
          "368: github.com/opencontainers/runtime-spec v1.2.0 h1:z97+pHb3uELt/yiAWD691HNHQIF07bE7dzrbT927iTk=",
          "369: github.com/opencontainers/runtime-spec v1.2.0/go.mod h1:jwyrGlmzljRJv/Fgzds9SsS/C5hL+LL3ko9hs6T5lQ0=",
          "372: github.com/opentracing/opentracing-go v1.1.0 h1:pWlfV3Bxv7k65HYwkikxat0+s3pV4bsqf19k25Ur8rU=",
          "373: github.com/opentracing/opentracing-go v1.1.0/go.mod h1:UkNAQd3GIcIGf0SeVgPpRdFStlNbqXla1AfSYxPUl2o=",
          "374: github.com/otiai10/copy v1.14.0 h1:dCI/t1iTdYGtkvCuBG2BgR6KZa83PTclw4U5n2wAllU=",
          "",
          "[Removed Lines]",
          "370: github.com/opencontainers/selinux v1.11.0 h1:+5Zbo97w3Lbmb3PeqQtpmTkMwsW5nRI3YaLpt7tQ7oU=",
          "371: github.com/opencontainers/selinux v1.11.0/go.mod h1:E5dMC3VPuVvVHDYmi78qvhJp8+M586T4DlDRYpFkyec=",
          "",
          "[Added Lines]",
          "377: github.com/opencontainers/runtime-tools v0.9.1-0.20221107090550-2e043c6bd626 h1:DmNGcqH3WDbV5k8OJ+esPWbqUOX5rMLR2PMvziDMJi0=",
          "378: github.com/opencontainers/runtime-tools v0.9.1-0.20221107090550-2e043c6bd626/go.mod h1:BRHJJd0E+cx42OybVYSgUvZmU0B8P9gZuRXlZUP7TKI=",
          "379: github.com/opencontainers/selinux v1.11.1 h1:nHFvthhM0qY8/m+vfhJylliSshm8G1jJ2jDMcgULaH8=",
          "380: github.com/opencontainers/selinux v1.11.1/go.mod h1:E5dMC3VPuVvVHDYmi78qvhJp8+M586T4DlDRYpFkyec=",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "383: github.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=",
          "384: github.com/planetscale/vtprotobuf v0.6.1-0.20240319094008-0393e58bdf10 h1:GFCKgmp0tecUJ0sJuv4pzYCqS9+RGSn52M3FUwPs+uo=",
          "385: github.com/planetscale/vtprotobuf v0.6.1-0.20240319094008-0393e58bdf10/go.mod h1:t/avpk3KcrXxUnYOhZhMXJlSEyie6gQbtLq5NM3loB8=",
          "387: github.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=",
          "388: github.com/prometheus/client_golang v0.9.0-pre1.0.20180209125602-c332b6f63c06/go.mod h1:7SWBe2y4D6OKWSNQJUaRYU/AaXPKyh/dDVn+NZz0KFw=",
          "389: github.com/prometheus/client_golang v0.9.1/go.mod h1:7SWBe2y4D6OKWSNQJUaRYU/AaXPKyh/dDVn+NZz0KFw=",
          "390: github.com/prometheus/client_golang v1.0.0/go.mod h1:db9x61etRT2tGnBNRi70OPL5FsnadC4Ky3P0J6CfImo=",
          "391: github.com/prometheus/client_golang v1.1.0/go.mod h1:I1FGZT9+L76gKKOs5djB6ezCbFQP1xR9D75/vuwEF3g=",
          "394: github.com/prometheus/client_model v0.0.0-20171117100541-99fa1f4be8e5/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=",
          "395: github.com/prometheus/client_model v0.0.0-20180712105110-5c3871d89910/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=",
          "396: github.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=",
          "",
          "[Removed Lines]",
          "386: github.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=",
          "392: github.com/prometheus/client_golang v1.20.2 h1:5ctymQzZlyOON1666svgwn3s6IKWgfbjsejTMiXIyjg=",
          "393: github.com/prometheus/client_golang v1.20.2/go.mod h1:PIEt8X02hGcP8JWbeHyeZ53Y/jReSnHgO035n//V5WE=",
          "",
          "[Added Lines]",
          "396: github.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 h1:Jamvg5psRIccs7FGNTlIRMkT8wgtp5eCXdBlqhYGL6U=",
          "397: github.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=",
          "402: github.com/prometheus/client_golang v1.20.5 h1:cxppBPuYhUnsO6yo/aoRol4L7q7UFfdm+bR9r+8l63Y=",
          "403: github.com/prometheus/client_golang v1.20.5/go.mod h1:PIEt8X02hGcP8JWbeHyeZ53Y/jReSnHgO035n//V5WE=",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "411: github.com/r3labs/sse v0.0.0-20210224172625-26fe804710bc/go.mod h1:S8xSOnV3CgpNrWd0GQ/OoQfMtlg2uPRSuTzcSGrzwK8=",
          "412: github.com/rivo/uniseg v0.2.0 h1:S1pD9weZBuJdFmowNwbpi7BJ8TNftyUImj/0WQi72jY=",
          "413: github.com/rivo/uniseg v0.2.0/go.mod h1:J6wj4VEh+S6ZtnVlnTBMWIodfgj8LQOQFoIToxlJtxc=",
          "416: github.com/russross/blackfriday/v2 v2.1.0 h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=",
          "417: github.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=",
          "418: github.com/secure-systems-lab/go-securesystemslib v0.4.0 h1:b23VGrQhTA8cN2CbBw7/FulN9fTtqYUdS5+Oxzt+DUE=",
          "",
          "[Removed Lines]",
          "414: github.com/rogpeppe/go-internal v1.12.0 h1:exVL4IDcn6na9z1rAb56Vxr+CgyK3nn3O+epU5NdKM8=",
          "415: github.com/rogpeppe/go-internal v1.12.0/go.mod h1:E+RYuTGaKKdloAfM02xzb0FW3Paa99yedzYV+kq4uf4=",
          "",
          "[Added Lines]",
          "424: github.com/rogpeppe/go-internal v1.13.1 h1:KvO1DLK/DRN07sQ1LQKScxyZJuNnedQ5/wKSR38lUII=",
          "425: github.com/rogpeppe/go-internal v1.13.1/go.mod h1:uMEvuHeurkdAXX61udpOXGD/AzZDWNMNyH2VO9fmH0o=",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "458: github.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=",
          "459: github.com/stretchr/testify v1.10.0 h1:Xv5erBjTwe/5IxqUQTdXv5kgmIvbHo3QQyRwhJsOfJA=",
          "460: github.com/stretchr/testify v1.10.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=",
          "461: github.com/theupdateframework/notary v0.7.0 h1:QyagRZ7wlSpjT5N2qQAh/pN+DVqgekv4DzbAiAiEL3c=",
          "462: github.com/theupdateframework/notary v0.7.0/go.mod h1:c9DRxcmhHmVLDay4/2fUYdISnHqbFDGRSlXPO0AhYWw=",
          "463: github.com/tilt-dev/fsnotify v1.4.8-0.20220602155310-fff9c274a375 h1:QB54BJwA6x8QU9nHY3xJSZR2kX9bgpZekRKGkLTmEXA=",
          "464: github.com/tilt-dev/fsnotify v1.4.8-0.20220602155310-fff9c274a375/go.mod h1:xRroudyp5iVtxKqZCrA6n2TLFRBf8bmnjr1UD4x+z7g=",
          "465: github.com/tonistiigi/dchapes-mode v0.0.0-20241001053921-ca0759fec205 h1:eUk79E1w8yMtXeHSzjKorxuC8qJOnyXQnLaJehxpJaI=",
          "466: github.com/tonistiigi/dchapes-mode v0.0.0-20241001053921-ca0759fec205/go.mod h1:3Iuxbr0P7D3zUzBMAZB+ois3h/et0shEz0qApgHYGpY=",
          "469: github.com/tonistiigi/go-csvvalue v0.0.0-20240710180619-ddb21b71c0b4 h1:7I5c2Ig/5FgqkYOh/N87NzoyI9U15qUPXhDD8uCupv8=",
          "470: github.com/tonistiigi/go-csvvalue v0.0.0-20240710180619-ddb21b71c0b4/go.mod h1:278M4p8WsNh3n4a1eqiFcV2FGk7wE5fwUpUom9mK9lE=",
          "471: github.com/tonistiigi/units v0.0.0-20180711220420-6950e57a87ea h1:SXhTLE6pb6eld/v/cCndK0AMpt1wiVFb/YYmqB3/QG0=",
          "472: github.com/tonistiigi/units v0.0.0-20180711220420-6950e57a87ea/go.mod h1:WPnis/6cRcDZSUvVmezrxJPkiO87ThFYsoUiMwWNDJk=",
          "473: github.com/tonistiigi/vt100 v0.0.0-20240514184818-90bafcd6abab h1:H6aJ0yKQ0gF49Qb2z5hI1UHxSQt4JMyxebFR15KnApw=",
          "474: github.com/tonistiigi/vt100 v0.0.0-20240514184818-90bafcd6abab/go.mod h1:ulncasL3N9uLrVann0m+CDlJKWsIAP34MPcOJF6VRvc=",
          "477: github.com/xeipuuv/gojsonpointer v0.0.0-20180127040702-4e3ac2762d5f/go.mod h1:N2zxlSyiKSe5eX1tZViRH5QA0qijqEDrYZiPEAiq3wU=",
          "478: github.com/xeipuuv/gojsonpointer v0.0.0-20190905194746-02993c407bfb h1:zGWFAtiMcyryUHoUjUJX0/lt1H2+i2Ka2n+D3DImSNo=",
          "479: github.com/xeipuuv/gojsonpointer v0.0.0-20190905194746-02993c407bfb/go.mod h1:N2zxlSyiKSe5eX1tZViRH5QA0qijqEDrYZiPEAiq3wU=",
          "",
          "[Removed Lines]",
          "467: github.com/tonistiigi/fsutil v0.0.0-20241121093142-31cf1f437184 h1:RgyoSI38Y36zjQaszel/0RAcIehAnjA1B0RiUV9SDO4=",
          "468: github.com/tonistiigi/fsutil v0.0.0-20241121093142-31cf1f437184/go.mod h1:Dl/9oEjK7IqnjAm21Okx/XIxUCFJzvh+XdVHUlBwXTw=",
          "475: github.com/vbatts/tar-split v0.11.5 h1:3bHCTIheBm1qFTcgh9oPu+nNBtX+XJIupG/vacinCts=",
          "476: github.com/vbatts/tar-split v0.11.5/go.mod h1:yZbwRsSeGjusneWgA781EKej9HF8vme8okylkAeNKLk=",
          "",
          "[Added Lines]",
          "471: github.com/syndtr/gocapability v0.0.0-20200815063812-42c35b437635 h1:kdXcSzyDtseVEc4yCz2qF8ZrQvIDBJLl4S1c3GCXmoI=",
          "472: github.com/syndtr/gocapability v0.0.0-20200815063812-42c35b437635/go.mod h1:hkRG7XYTFWNJGYcbNJQlaLq0fg1yr4J4t/NcTQtrfww=",
          "479: github.com/tonistiigi/fsutil v0.0.0-20250113203817-b14e27f4135a h1:EfGw4G0x/8qXWgtcZ6KVaPS+wpWOQMaypczzP8ojkMY=",
          "480: github.com/tonistiigi/fsutil v0.0.0-20250113203817-b14e27f4135a/go.mod h1:Dl/9oEjK7IqnjAm21Okx/XIxUCFJzvh+XdVHUlBwXTw=",
          "487: github.com/vbatts/tar-split v0.11.6 h1:4SjTW5+PU11n6fZenf2IPoV8/tz3AaYHMWjf23envGs=",
          "488: github.com/vbatts/tar-split v0.11.6/go.mod h1:dqKNtesIOr2j2Qv3W/cHjnvk9I8+G7oAkFDFN6TCBEI=",
          "489: github.com/x448/float16 v0.8.4 h1:qLwI1I70+NjRFUR3zs1JPUCgaCXSh3SW62uAKT1mSBM=",
          "490: github.com/x448/float16 v0.8.4/go.mod h1:14CWIYCyZA/cWjXOioeEpHeN/83MdbZDRQHoFcYsOfg=",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "484: github.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=",
          "485: github.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=",
          "486: github.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=",
          "487: go.opencensus.io v0.24.0 h1:y73uSU6J157QMP2kn2r30vwW1A2W2WFwSCGnAVxeaD0=",
          "488: go.opencensus.io v0.24.0/go.mod h1:vNK8G9p7aAivkbmorf4v+7Hgx+Zs0yY+0fOtgBfjQKo=",
          "515: go.opentelemetry.io/proto/otlp v1.3.1 h1:TrMUixzpM0yuc/znrFTP9MMRh8trP93mkCiDVeXrui0=",
          "516: go.opentelemetry.io/proto/otlp v1.3.1/go.mod h1:0X1WI4de4ZsLrrJNLAQbFeLCm3T7yBkR0XqQ7niQU+8=",
          "517: go.uber.org/goleak v1.3.0 h1:2K3zAYmnTNqV73imy9J1T3WC+gmCePx2hEGkimedGto=",
          "",
          "[Removed Lines]",
          "489: go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.53.0 h1:9G6E0TXzGFVfTnawRzrPl83iHOAV7L8NJiR8RSGYV1g=",
          "490: go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.53.0/go.mod h1:azvtTADFQJA8mX80jIH/akaE7h+dbm/sVuaHqN13w74=",
          "491: go.opentelemetry.io/contrib/instrumentation/net/http/httptrace/otelhttptrace v0.53.0 h1:IVtyPth4Rs5P8wIf0mP2KVKFNTJ4paX9qQ4Hkh5gFdc=",
          "492: go.opentelemetry.io/contrib/instrumentation/net/http/httptrace/otelhttptrace v0.53.0/go.mod h1:ImRBLMJv177/pwiLZ7tU7HDGNdBv7rS0HQ99eN/zBl8=",
          "493: go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.53.0 h1:4K4tsIXefpVJtvA/8srF4V4y0akAoPHkIslgAkjixJA=",
          "494: go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.53.0/go.mod h1:jjdQuTGVsXV4vSs+CJ2qYDeDPf9yIJV23qlIzBm73Vg=",
          "495: go.opentelemetry.io/otel v1.28.0 h1:/SqNcYk+idO0CxKEUOtKQClMK/MimZihKYMruSMViUo=",
          "496: go.opentelemetry.io/otel v1.28.0/go.mod h1:q68ijF8Fc8CnMHKyzqL6akLO46ePnjkgfIMIjUIX9z4=",
          "497: go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc v1.28.0 h1:U2guen0GhqH8o/G2un8f/aG/y++OuW6MyCo6hT9prXk=",
          "498: go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc v1.28.0/go.mod h1:yeGZANgEcpdx/WK0IvvRFC+2oLiMS2u4L/0Rj2M2Qr0=",
          "499: go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp v1.28.0 h1:aLmmtjRke7LPDQ3lvpFz+kNEH43faFhzW7v8BFIEydg=",
          "500: go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp v1.28.0/go.mod h1:TC1pyCt6G9Sjb4bQpShH+P5R53pO6ZuGnHuuln9xMeE=",
          "501: go.opentelemetry.io/otel/exporters/otlp/otlptrace v1.28.0 h1:3Q/xZUyC1BBkualc9ROb4G8qkH90LXEIICcs5zv1OYY=",
          "502: go.opentelemetry.io/otel/exporters/otlp/otlptrace v1.28.0/go.mod h1:s75jGIWA9OfCMzF0xr+ZgfrB5FEbbV7UuYo32ahUiFI=",
          "503: go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.28.0 h1:R3X6ZXmNPRR8ul6i3WgFURCHzaXjHdm0karRG/+dj3s=",
          "504: go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.28.0/go.mod h1:QWFXnDavXWwMx2EEcZsf3yxgEKAqsxQ+Syjp+seyInw=",
          "505: go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.28.0 h1:j9+03ymgYhPKmeXGk5Zu+cIZOlVzd9Zv7QIiyItjFBU=",
          "506: go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.28.0/go.mod h1:Y5+XiUG4Emn1hTfciPzGPJaSI+RpDts6BnCIir0SLqk=",
          "507: go.opentelemetry.io/otel/metric v1.28.0 h1:f0HGvSl1KRAU1DLgLGFjrwVyismPlnuU6JD6bOeuA5Q=",
          "508: go.opentelemetry.io/otel/metric v1.28.0/go.mod h1:Fb1eVBFZmLVTMb6PPohq3TO9IIhUisDsbJoL/+uQW4s=",
          "509: go.opentelemetry.io/otel/sdk v1.28.0 h1:b9d7hIry8yZsgtbmM0DKyPWMMUMlK9NEKuIG4aBqWyE=",
          "510: go.opentelemetry.io/otel/sdk v1.28.0/go.mod h1:oYj7ClPUA7Iw3m+r7GeEjz0qckQRJK2B8zjcZEfu7Pg=",
          "511: go.opentelemetry.io/otel/sdk/metric v1.28.0 h1:OkuaKgKrgAbYrrY0t92c+cC+2F6hsFNnCQArXCKlg08=",
          "512: go.opentelemetry.io/otel/sdk/metric v1.28.0/go.mod h1:cWPjykihLAPvXKi4iZc1dpER3Jdq2Z0YLse3moQUCpg=",
          "513: go.opentelemetry.io/otel/trace v1.28.0 h1:GhQ9cUuQGmNDd5BTCP2dAvv75RdMxEfTmYejp+lkx9g=",
          "514: go.opentelemetry.io/otel/trace v1.28.0/go.mod h1:jPyXzNPg6da9+38HEwElrQiHlVMTnVfM3/yv2OlIHaI=",
          "",
          "[Added Lines]",
          "501: github.com/zclconf/go-cty v1.16.0 h1:xPKEhst+BW5D0wxebMZkxgapvOE/dw7bFTlgSc9nD6w=",
          "502: github.com/zclconf/go-cty v1.16.0/go.mod h1:VvMs5i0vgZdhYawQNq5kePSpLAoz8u1xvZgrPIxfnZE=",
          "505: go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.56.0 h1:yMkBS9yViCc7U7yeLzJPM2XizlfdVvBRSmsQDWu6qc0=",
          "506: go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.56.0/go.mod h1:n8MR6/liuGB5EmTETUBeU5ZgqMOlqKRxUaqPQBOANZ8=",
          "507: go.opentelemetry.io/contrib/instrumentation/net/http/httptrace/otelhttptrace v0.56.0 h1:4BZHA+B1wXEQoGNHxW8mURaLhcdGwvRnmhGbm+odRbc=",
          "508: go.opentelemetry.io/contrib/instrumentation/net/http/httptrace/otelhttptrace v0.56.0/go.mod h1:3qi2EEwMgB4xnKgPLqsDP3j9qxnHDZeHsnAxfjQqTko=",
          "509: go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.56.0 h1:UP6IpuHFkUgOQL9FFQFrZ+5LiwhhYRbi7VZSIx6Nj5s=",
          "510: go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.56.0/go.mod h1:qxuZLtbq5QDtdeSHsS7bcf6EH6uO6jUAgk764zd3rhM=",
          "511: go.opentelemetry.io/otel v1.31.0 h1:NsJcKPIW0D0H3NgzPDHmo0WW6SptzPdqg/L1zsIm2hY=",
          "512: go.opentelemetry.io/otel v1.31.0/go.mod h1:O0C14Yl9FgkjqcCZAsE053C13OaddMYr/hz6clDkEJE=",
          "513: go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc v1.31.0 h1:FZ6ei8GFW7kyPYdxJaV2rgI6M+4tvZzhYsQ2wgyVC08=",
          "514: go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetricgrpc v1.31.0/go.mod h1:MdEu/mC6j3D+tTEfvI15b5Ci2Fn7NneJ71YMoiS3tpI=",
          "515: go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp v1.31.0 h1:ZsXq73BERAiNuuFXYqP4MR5hBrjXfMGSO+Cx7qoOZiM=",
          "516: go.opentelemetry.io/otel/exporters/otlp/otlpmetric/otlpmetrichttp v1.31.0/go.mod h1:hg1zaDMpyZJuUzjFxFsRYBoccE86tM9Uf4IqNMUxvrY=",
          "517: go.opentelemetry.io/otel/exporters/otlp/otlptrace v1.31.0 h1:K0XaT3DwHAcV4nKLzcQvwAgSyisUghWoY20I7huthMk=",
          "518: go.opentelemetry.io/otel/exporters/otlp/otlptrace v1.31.0/go.mod h1:B5Ki776z/MBnVha1Nzwp5arlzBbE3+1jk+pGmaP5HME=",
          "519: go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.31.0 h1:FFeLy03iVTXP6ffeN2iXrxfGsZGCjVx0/4KlizjyBwU=",
          "520: go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.31.0/go.mod h1:TMu73/k1CP8nBUpDLc71Wj/Kf7ZS9FK5b53VapRsP9o=",
          "521: go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.31.0 h1:lUsI2TYsQw2r1IASwoROaCnjdj2cvC2+Jbxvk6nHnWU=",
          "522: go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.31.0/go.mod h1:2HpZxxQurfGxJlJDblybejHB6RX6pmExPNe517hREw4=",
          "523: go.opentelemetry.io/otel/metric v1.31.0 h1:FSErL0ATQAmYHUIzSezZibnyVlft1ybhy4ozRPcF2fE=",
          "524: go.opentelemetry.io/otel/metric v1.31.0/go.mod h1:C3dEloVbLuYoX41KpmAhOqNriGbA+qqH6PQ5E5mUfnY=",
          "525: go.opentelemetry.io/otel/sdk v1.31.0 h1:xLY3abVHYZ5HSfOg3l2E5LUj2Cwva5Y7yGxnSW9H5Gk=",
          "526: go.opentelemetry.io/otel/sdk v1.31.0/go.mod h1:TfRbMdhvxIIr/B2N2LQW2S5v9m3gOQ/08KsbbO5BPT0=",
          "527: go.opentelemetry.io/otel/sdk/metric v1.31.0 h1:i9hxxLJF/9kkvfHppyLL55aW7iIJz4JjxTeYusH7zMc=",
          "528: go.opentelemetry.io/otel/sdk/metric v1.31.0/go.mod h1:CRInTMVvNhUKgSAMbKyTMxqOBC0zgyxzW55lZzX43Y8=",
          "529: go.opentelemetry.io/otel/trace v1.31.0 h1:ffjsj1aRouKewfr85U2aGagJ46+MvodynlQ1HYdmJys=",
          "530: go.opentelemetry.io/otel/trace v1.31.0/go.mod h1:TXZkRk7SM2ZQLtR6eoAWQFIHPvzQ06FJAsO1tJg480A=",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "572: golang.org/x/sys v0.0.0-20210331175145-43e1dd70ce54/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "573: golang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "574: golang.org/x/sys v0.0.0-20210616094352-59db8d763f22/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "576: golang.org/x/sys v0.0.0-20220412211240-33da011f77ad/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "577: golang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "578: golang.org/x/sys v0.0.0-20220715151400-c0bba94af5f8/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "",
          "[Removed Lines]",
          "575: golang.org/x/sys v0.0.0-20211025201205-69cdffdb9359/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "605: golang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=",
          "606: golang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=",
          "607: golang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=",
          "614: google.golang.org/grpc v1.0.5/go.mod h1:yo6s7OP7yaDglbqo1J04qKzAhqBH6lvTonzMVmEdcZw=",
          "615: google.golang.org/grpc v1.68.1 h1:oI5oTa11+ng8r8XMMN7jAOmWfPZWbYpCFaMUTACxkM0=",
          "616: google.golang.org/grpc v1.68.1/go.mod h1:+q1XYFJjShcqn0QZHvCyeR4CXPA+llXIeUIfIe00waw=",
          "619: gopkg.in/airbrake/gobrake.v2 v2.0.9/go.mod h1:/h5ZAUhDkGaJfjzjKLSjv6zCL6O0LLBxU4K+aSYdM/U=",
          "620: gopkg.in/alecthomas/kingpin.v2 v2.2.6/go.mod h1:FMv+mEhP44yOT+4EoQTLFTRgOQ1FBLkstjWtayDeSgw=",
          "621: gopkg.in/cenkalti/backoff.v1 v1.1.0 h1:Arh75ttbsvlpVA7WtVpH4u9h6Zl46xuptxqLxPiSo4Y=",
          "",
          "[Removed Lines]",
          "608: google.golang.org/genproto v0.0.0-20240123012728-ef4313101c80 h1:KAeGQVN3M9nD0/bQXnr/ClcEMJ968gUXJQ9pwfSynuQ=",
          "609: google.golang.org/genproto v0.0.0-20240123012728-ef4313101c80/go.mod h1:cc8bqMqtv9gMOr0zHg2Vzff5ULhhL2IXP4sbcn32Dro=",
          "610: google.golang.org/genproto/googleapis/api v0.0.0-20240903143218-8af14fe29dc1 h1:hjSy6tcFQZ171igDaN5QHOw2n6vx40juYbC/x67CEhc=",
          "611: google.golang.org/genproto/googleapis/api v0.0.0-20240903143218-8af14fe29dc1/go.mod h1:qpvKtACPCQhAdu3PyQgV4l3LMXZEtft7y8QcarRsp9I=",
          "612: google.golang.org/genproto/googleapis/rpc v0.0.0-20240903143218-8af14fe29dc1 h1:pPJltXNxVzT4pK9yD8vR9X75DaWYYmLGMsEvBfFQZzQ=",
          "613: google.golang.org/genproto/googleapis/rpc v0.0.0-20240903143218-8af14fe29dc1/go.mod h1:UqMtugtsSgubUsoxbuAoiCXvqvErP7Gf0so0mK9tHxU=",
          "617: google.golang.org/protobuf v1.35.1 h1:m3LfL6/Ca+fqnjnlqQXNpFPABW1UD7mjh8KO2mKFytA=",
          "618: google.golang.org/protobuf v1.35.1/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=",
          "",
          "[Added Lines]",
          "623: google.golang.org/genproto/googleapis/api v0.0.0-20241007155032-5fefd90f89a9 h1:T6rh4haD3GVYsgEfWExoCZA2o2FmbNyKpTuAxbEFPTg=",
          "624: google.golang.org/genproto/googleapis/api v0.0.0-20241007155032-5fefd90f89a9/go.mod h1:wp2WsuBYj6j8wUdo3ToZsdxxixbvQNAHqVJrTgi5E5M=",
          "625: google.golang.org/genproto/googleapis/rpc v0.0.0-20241021214115-324edc3d5d38 h1:zciRKQ4kBpFgpfC5QQCVtnnNAcLIqweL7plyZRQHVpI=",
          "626: google.golang.org/genproto/googleapis/rpc v0.0.0-20241021214115-324edc3d5d38/go.mod h1:GX3210XPVPUjJbTUbvwI8f2IpZDMZuPJWDzDuebbviI=",
          "630: google.golang.org/protobuf v1.35.2 h1:8Ar7bF+apOIoThw1EdZl0p1oWvMqTHmpA2fRTyZO8io=",
          "631: google.golang.org/protobuf v1.35.2/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "644: gopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=",
          "645: gotest.tools/v3 v3.5.1 h1:EENdUnS3pdur5nybKYIh2Vfgc8IUNBjxDPSjtiJcOzU=",
          "646: gotest.tools/v3 v3.5.1/go.mod h1:isy3WKz7GK6uNw/sbHzfKBLvlvXwUyV06n6brMxxopU=",
          "659: sigs.k8s.io/json v0.0.0-20221116044647-bc3834ca7abd h1:EDPBXCAspyGV4jQlpZSudPeMmr1bNJefnuqLsRAsHZo=",
          "660: sigs.k8s.io/json v0.0.0-20221116044647-bc3834ca7abd/go.mod h1:B8JuhiUyNFVKdsE8h686QcCxMaH6HrOAZj4vswFpcB0=",
          "661: sigs.k8s.io/structured-merge-diff/v4 v4.4.1 h1:150L+0vs/8DA78h1u02ooW1/fFq/Lwr+sGiqlzvrtq4=",
          "662: sigs.k8s.io/structured-merge-diff/v4 v4.4.1/go.mod h1:N8hJocpFajUSSeSJ9bOZ77VzejKZaXsTtZo4/u7Io08=",
          "665: tags.cncf.io/container-device-interface v0.8.0 h1:8bCFo/g9WODjWx3m6EYl3GfUG31eKJbaggyBDxEldRc=",
          "666: tags.cncf.io/container-device-interface v0.8.0/go.mod h1:Apb7N4VdILW0EVdEMRYXIDVRZfNJZ+kmEUss2kRRQ6Y=",
          "",
          "[Removed Lines]",
          "647: k8s.io/api v0.29.2 h1:hBC7B9+MU+ptchxEqTNW2DkUosJpp1P+Wn6YncZ474A=",
          "648: k8s.io/api v0.29.2/go.mod h1:sdIaaKuU7P44aoyyLlikSLayT6Vb7bvJNCX105xZXY0=",
          "649: k8s.io/apimachinery v0.29.2 h1:EWGpfJ856oj11C52NRCHuU7rFDwxev48z+6DSlGNsV8=",
          "650: k8s.io/apimachinery v0.29.2/go.mod h1:6HVkd1FwxIagpYrHSwJlQqZI3G9LfYWRPAkUvLnXTKU=",
          "651: k8s.io/client-go v0.29.2 h1:FEg85el1TeZp+/vYJM7hkDlSTFZ+c5nnK44DJ4FyoRg=",
          "652: k8s.io/client-go v0.29.2/go.mod h1:knlvFZE58VpqbQpJNbCbctTVXcd35mMyAAwBdpt4jrA=",
          "653: k8s.io/klog/v2 v2.110.1 h1:U/Af64HJf7FcwMcXyKm2RPM22WZzyR7OSpYj5tg3cL0=",
          "654: k8s.io/klog/v2 v2.110.1/go.mod h1:YGtd1984u+GgbuZ7e08/yBuAfKLSO0+uR1Fhi6ExXjo=",
          "655: k8s.io/kube-openapi v0.0.0-20231010175941-2dd684a91f00 h1:aVUu9fTY98ivBPKR9Y5w/AuzbMm96cd3YHRTU83I780=",
          "656: k8s.io/kube-openapi v0.0.0-20231010175941-2dd684a91f00/go.mod h1:AsvuZPBlUDVuCdzJ87iajxtXuR9oktsTctW/R9wwouA=",
          "657: k8s.io/utils v0.0.0-20230726121419-3b25d923346b h1:sgn3ZU783SCgtaSJjpcVVlRqd6GSnlTLKgpAAttJvpI=",
          "658: k8s.io/utils v0.0.0-20230726121419-3b25d923346b/go.mod h1:OLgZIPagt7ERELqWJFomSt595RzquPNLL48iOWgYOg0=",
          "663: sigs.k8s.io/yaml v1.3.0 h1:a2VclLzOGrwOHDiV8EfBGhvjHvP46CtW5j6POvhYGGo=",
          "664: sigs.k8s.io/yaml v1.3.0/go.mod h1:GeOyir5tyXNByN85N/dRIT9es5UQNerPYEKK56eTBm8=",
          "",
          "[Added Lines]",
          "660: k8s.io/api v0.31.2 h1:3wLBbL5Uom/8Zy98GRPXpJ254nEFpl+hwndmk9RwmL0=",
          "661: k8s.io/api v0.31.2/go.mod h1:bWmGvrGPssSK1ljmLzd3pwCQ9MgoTsRCuK35u6SygUk=",
          "662: k8s.io/apimachinery v0.31.2 h1:i4vUt2hPK56W6mlT7Ry+AO8eEsyxMD1U44NR22CLTYw=",
          "663: k8s.io/apimachinery v0.31.2/go.mod h1:rsPdaZJfTfLsNJSQzNHQvYoTmxhoOEofxtOsF3rtsMo=",
          "664: k8s.io/client-go v0.31.2 h1:Y2F4dxU5d3AQj+ybwSMqQnpZH9F30//1ObxOKlTI9yc=",
          "665: k8s.io/client-go v0.31.2/go.mod h1:NPa74jSVR/+eez2dFsEIHNa+3o09vtNaWwWwb1qSxSs=",
          "666: k8s.io/klog/v2 v2.130.1 h1:n9Xl7H1Xvksem4KFG4PYbdQCQxqc/tTUyrgXaOhHSzk=",
          "667: k8s.io/klog/v2 v2.130.1/go.mod h1:3Jpz1GvMt720eyJH1ckRHK1EDfpxISzJ7I9OYgaDtPE=",
          "668: k8s.io/kube-openapi v0.0.0-20240228011516-70dd3763d340 h1:BZqlfIlq5YbRMFko6/PM7FjZpUb45WallggurYhKGag=",
          "669: k8s.io/kube-openapi v0.0.0-20240228011516-70dd3763d340/go.mod h1:yD4MZYeKMBwQKVht279WycxKyM84kkAx2DPrTXaeb98=",
          "670: k8s.io/utils v0.0.0-20240711033017-18e509b52bc8 h1:pUdcCO1Lk/tbT5ztQWOBi5HBgbBP1J8+AsQnQCKsi8A=",
          "671: k8s.io/utils v0.0.0-20240711033017-18e509b52bc8/go.mod h1:OLgZIPagt7ERELqWJFomSt595RzquPNLL48iOWgYOg0=",
          "676: sigs.k8s.io/yaml v1.4.0 h1:Mk1wCc2gy/F0THH0TAp1QYyJNzRm2KCLy3o5ASXVI5E=",
          "677: sigs.k8s.io/yaml v1.4.0/go.mod h1:Ejl7/uTz7PSA4eKMyQCUTnhZYNmLIl+5c2lQPGR2BPY=",
          "680: tags.cncf.io/container-device-interface/specs-go v0.8.0 h1:QYGFzGxvYK/ZLMrjhvY0RjpUavIn4KcmRmVP/JjdBTA=",
          "681: tags.cncf.io/container-device-interface/specs-go v0.8.0/go.mod h1:BhJIkjjPh4qpys+qm4DAYtUyryaTDg9zris+AczXyws=",
          "",
          "---------------"
        ],
        "internal/ocipush/push.go||internal/ocipush/push.go": [
          "File: internal/ocipush/push.go -> internal/ocipush/push.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:  \"path/filepath\"",
          "26:  \"time\"",
          "29:  \"github.com/distribution/reference\"",
          "30:  \"github.com/docker/buildx/util/imagetools\"",
          "31:  \"github.com/docker/compose/v2/pkg/api\"",
          "",
          "[Removed Lines]",
          "28:  pusherrors \"github.com/containerd/containerd/remotes/errors\"",
          "",
          "[Added Lines]",
          "28:  pusherrors \"github.com/containerd/containerd/v2/core/remotes/errors\"",
          "",
          "---------------"
        ],
        "pkg/compose/build.go||pkg/compose/build.go": [
          "File: pkg/compose/build.go -> pkg/compose/build.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "430:    DockerfilePath:   dockerFilePath(service.Build.Context, service.Build.Dockerfile),",
          "431:    NamedContexts:    toBuildContexts(service.Build.AdditionalContexts),",
          "432:   },",
          "435:   NoCache:      service.Build.NoCache,",
          "436:   Pull:         service.Build.Pull,",
          "437:   BuildArgs:    flatten(resolveAndMergeBuildArgs(s.dockerCli, project, service, options)),",
          "",
          "[Removed Lines]",
          "433:   CacheFrom:    pb.CreateCaches(cacheFrom),",
          "434:   CacheTo:      pb.CreateCaches(cacheTo),",
          "",
          "[Added Lines]",
          "433:   CacheFrom:    pb.CreateCaches(cacheFrom.ToPB()),",
          "434:   CacheTo:      pb.CreateCaches(cacheTo.ToPB()),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ce3cb2b00cd8bc58dd9dcbdd72b983a63b48b5e3",
      "candidate_info": {
        "commit_hash": "ce3cb2b00cd8bc58dd9dcbdd72b983a63b48b5e3",
        "repo": "docker/compose",
        "commit_url": "https://github.com/docker/compose/commit/ce3cb2b00cd8bc58dd9dcbdd72b983a63b48b5e3",
        "files": [
          "go.mod",
          "go.sum"
        ],
        "message": "bump compose-go to version v1.18.1\n\nSigned-off-by: Guillaume Lours <705411+glours@users.noreply.github.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ],
          "candidate": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ]
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "6:  github.com/AlecAivazis/survey/v2 v2.3.7",
          "7:  github.com/Microsoft/go-winio v0.6.1",
          "8:  github.com/buger/goterm v1.0.4",
          "10:  github.com/containerd/console v1.0.3",
          "11:  github.com/containerd/containerd v1.7.3",
          "12:  github.com/cucumber/godog v0.0.0-00010101000000-000000000000 // replaced; see replace for the actual version used",
          "",
          "[Removed Lines]",
          "9:  github.com/compose-spec/compose-go v1.18.0",
          "",
          "[Added Lines]",
          "9:  github.com/compose-spec/compose-go v1.18.1",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "141: github.com/cncf/xds/go v0.0.0-20230607035331-e9ce68804cb4/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=",
          "142: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb h1:EDmT6Q9Zs+SbUoc7Ik9EfrFqcylYqgPZ9ANSbTAntnE=",
          "143: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb/go.mod h1:ZjrT6AXHbDs86ZSdt/osfBi5qfexBrKUdONk989Wnk4=",
          "146: github.com/containerd/cgroups v1.1.0 h1:v8rEWFl6EoqHB+swVNjVoCJE8o3jX7e8nqBGPLaDFBM=",
          "147: github.com/containerd/cgroups v1.1.0/go.mod h1:6ppBcbh/NOOUU+dMKrykgaBnK9lCIBxHqJDGwsa1mIw=",
          "148: github.com/containerd/console v1.0.3 h1:lIr7SlA5PxZyMV30bDW0MGbiOPXwc63yRuCP0ARubLw=",
          "",
          "[Removed Lines]",
          "144: github.com/compose-spec/compose-go v1.18.0 h1:IMKwjRFgI81kFhNarNxmRyRG+PuhBZKA6VpGl3pV5NA=",
          "145: github.com/compose-spec/compose-go v1.18.0/go.mod h1:zR2tP1+kZHi5vJz7PjpW6oMoDji/Js3GHjP+hfjf70Q=",
          "",
          "[Added Lines]",
          "144: github.com/compose-spec/compose-go v1.18.1 h1:YVYYkV8fAHW/eCOgtqSe1tHrlaDVvwS8zgs6F5ukm/Y=",
          "145: github.com/compose-spec/compose-go v1.18.1/go.mod h1:zR2tP1+kZHi5vJz7PjpW6oMoDji/Js3GHjP+hfjf70Q=",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "06ec06472f0db4a42e36b20ed16e906f20c4b074",
      "candidate_info": {
        "commit_hash": "06ec06472f0db4a42e36b20ed16e906f20c4b074",
        "repo": "docker/compose",
        "commit_url": "https://github.com/docker/compose/commit/06ec06472f0db4a42e36b20ed16e906f20c4b074",
        "files": [
          "go.mod",
          "go.sum",
          "pkg/compose/create.go",
          "pkg/compose/dependencies.go",
          "pkg/compose/dependencies_test.go"
        ],
        "message": "up should not silently ignore missing depends_on service\n\nSigned-off-by: Nicolas De Loof <nicolas.deloof@gmail.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum",
          "pkg/compose/create.go||pkg/compose/create.go",
          "pkg/compose/dependencies.go||pkg/compose/dependencies.go",
          "pkg/compose/dependencies_test.go||pkg/compose/dependencies_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod",
            "go.sum||go.sum",
            "pkg/compose/create.go||pkg/compose/create.go"
          ],
          "candidate": [
            "go.mod||go.mod",
            "go.sum||go.sum",
            "pkg/compose/create.go||pkg/compose/create.go"
          ]
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: require (",
          "6:  github.com/AlecAivazis/survey/v2 v2.3.6",
          "7:  github.com/buger/goterm v1.0.4",
          "9:  github.com/containerd/console v1.0.3",
          "10:  github.com/containerd/containerd v1.6.21",
          "11:  github.com/cucumber/godog v0.0.0-00010101000000-000000000000 // replaced; see replace for the actual version used",
          "",
          "[Removed Lines]",
          "8:  github.com/compose-spec/compose-go v1.13.5",
          "",
          "[Added Lines]",
          "8:  github.com/compose-spec/compose-go v1.14.0",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "157: github.com/cncf/xds/go v0.0.0-20210922020428-25de7278fc84/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=",
          "158: github.com/cncf/xds/go v0.0.0-20211001041855-01bcc9b48dfe/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=",
          "159: github.com/cncf/xds/go v0.0.0-20211011173535-cb28da3451f1/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=",
          "162: github.com/containerd/cgroups v1.0.4 h1:jN/mbWBEaz+T1pi5OFtnkQ+8qnmEbAr1Oo1FRm5B0dA=",
          "163: github.com/containerd/console v1.0.3 h1:lIr7SlA5PxZyMV30bDW0MGbiOPXwc63yRuCP0ARubLw=",
          "164: github.com/containerd/console v1.0.3/go.mod h1:7LqA/THxQ86k76b8c/EMSiaJ3h1eZkMkXar0TQ1gf3U=",
          "",
          "[Removed Lines]",
          "160: github.com/compose-spec/compose-go v1.13.5 h1:ogqJOGEbe3uRxMg0ZEufOoCQTpX61l8tUeyW4UQgEBk=",
          "161: github.com/compose-spec/compose-go v1.13.5/go.mod h1:m0o4G6MQDHjjz9rY7No9FpnNi+9sKic262rzrwuCqic=",
          "",
          "[Added Lines]",
          "160: github.com/compose-spec/compose-go v1.14.0 h1:/+tQxBEPIrfsi87Qh7/VjMzcJN3BRNER/RO71ku+u6E=",
          "161: github.com/compose-spec/compose-go v1.14.0/go.mod h1:m0o4G6MQDHjjz9rY7No9FpnNi+9sKic262rzrwuCqic=",
          "",
          "---------------"
        ],
        "pkg/compose/create.go||pkg/compose/create.go": [
          "File: pkg/compose/create.go -> pkg/compose/create.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "106:   }",
          "107:  }",
          "114:  return newConvergence(options.Services, observedState, s).apply(ctx, project, options)",
          "115: }",
          "",
          "[Removed Lines]",
          "109:  err = prepareServicesDependsOn(project)",
          "110:  if err != nil {",
          "111:   return err",
          "112:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "147:  }",
          "148: }",
          "216: func (s *composeService) ensureNetworks(ctx context.Context, networks types.Networks) error {",
          "217:  for _, network := range networks {",
          "218:   err := s.ensureNetwork(ctx, network)",
          "",
          "[Removed Lines]",
          "150: func prepareServicesDependsOn(p *types.Project) error {",
          "151:  allServices := types.Project{}",
          "152:  allServices.Services = p.AllServices()",
          "154:  for i, service := range p.Services {",
          "155:   var dependencies []string",
          "156:   networkDependency := getDependentServiceFromMode(service.NetworkMode)",
          "157:   if networkDependency != \"\" {",
          "158:    dependencies = append(dependencies, networkDependency)",
          "159:   }",
          "161:   ipcDependency := getDependentServiceFromMode(service.Ipc)",
          "162:   if ipcDependency != \"\" {",
          "163:    dependencies = append(dependencies, ipcDependency)",
          "164:   }",
          "166:   pidDependency := getDependentServiceFromMode(service.Pid)",
          "167:   if pidDependency != \"\" {",
          "168:    dependencies = append(dependencies, pidDependency)",
          "169:   }",
          "171:   for _, vol := range service.VolumesFrom {",
          "172:    spec := strings.Split(vol, \":\")",
          "173:    if len(spec) == 0 {",
          "174:     continue",
          "175:    }",
          "176:    if spec[0] == \"container\" {",
          "177:     continue",
          "178:    }",
          "179:    dependencies = append(dependencies, spec[0])",
          "180:   }",
          "182:   for _, link := range service.Links {",
          "183:    dependencies = append(dependencies, strings.Split(link, \":\")[0])",
          "184:   }",
          "186:   for d := range service.DependsOn {",
          "187:    dependencies = append(dependencies, d)",
          "188:   }",
          "190:   if len(dependencies) == 0 {",
          "191:    continue",
          "192:   }",
          "195:   deps, err := allServices.GetServices(dependencies...)",
          "196:   if err != nil {",
          "197:    return err",
          "198:   }",
          "200:   if service.DependsOn == nil {",
          "201:    service.DependsOn = make(types.DependsOnConfig)",
          "202:   }",
          "204:   for _, d := range deps {",
          "205:    if _, ok := service.DependsOn[d.Name]; !ok {",
          "206:     service.DependsOn[d.Name] = types.ServiceDependency{",
          "207:      Condition: types.ServiceConditionStarted,",
          "208:     }",
          "209:    }",
          "210:   }",
          "211:   p.Services[i] = service",
          "212:  }",
          "213:  return nil",
          "214: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "640:    resources.NanoCPUs = int64(f * 1e9)",
          "641:   }",
          "642:  }",
          "645:  }",
          "646: }",
          "",
          "[Removed Lines]",
          "643:  if limits.PIds > 0 {",
          "644:   resources.PidsLimit = &limits.PIds",
          "",
          "[Added Lines]",
          "572:  if limits.Pids > 0 {",
          "573:   resources.PidsLimit = &limits.Pids",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "743: }",
          "745: func getDependentServiceFromMode(mode string) string {",
          "747:   return mode[len(types.NetworkModeServicePrefix):]",
          "748:  }",
          "749:  return \"\"",
          "",
          "[Removed Lines]",
          "746:  if strings.HasPrefix(mode, types.NetworkModeServicePrefix) {",
          "",
          "[Added Lines]",
          "675:  if strings.HasPrefix(",
          "676:   mode,",
          "677:   types.NetworkModeServicePrefix,",
          "678:  ) {",
          "",
          "---------------"
        ],
        "pkg/compose/dependencies.go||pkg/compose/dependencies.go": [
          "File: pkg/compose/dependencies.go -> pkg/compose/dependencies.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"sync\"",
          "25:  \"github.com/compose-spec/compose-go/types\"",
          "26:  \"golang.org/x/sync/errgroup\"",
          "28:  \"github.com/docker/compose/v2/pkg/utils\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26:  \"github.com/docker/compose/v2/pkg/api\"",
          "27:  \"github.com/pkg/errors\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "78: func InDependencyOrder(ctx context.Context, project *types.Project, fn func(context.Context, string) error, options ...func(*graphTraversal)) error {",
          "80:  if err != nil {",
          "81:   return err",
          "82:  }",
          "",
          "[Removed Lines]",
          "79:  graph, err := NewGraph(project.Services, ServiceStopped)",
          "",
          "[Added Lines]",
          "81:  graph, err := NewGraph(project, ServiceStopped)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "91: func InReverseDependencyOrder(ctx context.Context, project *types.Project, fn func(context.Context, string) error, options ...func(*graphTraversal)) error {",
          "93:  if err != nil {",
          "94:   return err",
          "95:  }",
          "",
          "[Removed Lines]",
          "92:  graph, err := NewGraph(project.Services, ServiceStarted)",
          "",
          "[Added Lines]",
          "94:  graph, err := NewGraph(project, ServiceStarted)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "252: }",
          "256:  graph := &Graph{",
          "257:   lock:     sync.RWMutex{},",
          "258:   Vertices: map[string]*Vertex{},",
          "259:  }",
          "262:   graph.AddVertex(s.Name, s.Name, initialStatus)",
          "263:  }",
          "266:   for _, name := range s.GetDependencies() {",
          "268:   }",
          "269:  }",
          "",
          "[Removed Lines]",
          "255: func NewGraph(services types.Services, initialStatus ServiceStatus) (*Graph, error) {",
          "261:  for _, s := range services {",
          "265:  for _, s := range services {",
          "267:    _ = graph.AddEdge(s.Name, name)",
          "",
          "[Added Lines]",
          "257: func NewGraph(project *types.Project, initialStatus ServiceStatus) (*Graph, error) {",
          "263:  for _, s := range project.Services {",
          "267:  for _, s := range project.Services {",
          "269:    err := graph.AddEdge(s.Name, name)",
          "270:    if err != nil {",
          "271:     if api.IsNotFoundError(err) {",
          "272:      ds, err := project.GetDisabledService(name)",
          "273:      if err == nil {",
          "274:       return nil, fmt.Errorf(\"service %s is required by %s but is disabled. Can be enabled by profiles %s\", name, s.Name, ds.Profiles)",
          "275:      }",
          "276:     }",
          "277:     return nil, err",
          "278:    }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "304:  destinationVertex := g.Vertices[destination]",
          "306:  if sourceVertex == nil {",
          "308:  }",
          "309:  if destinationVertex == nil {",
          "311:  }",
          "",
          "[Removed Lines]",
          "307:   return fmt.Errorf(\"could not find %s\", source)",
          "310:   return fmt.Errorf(\"could not find %s\", destination)",
          "",
          "[Added Lines]",
          "318:   return errors.Wrapf(api.ErrNotFound, \"could not find %s\", source)",
          "321:   return errors.Wrapf(api.ErrNotFound, \"could not find %s\", destination)",
          "",
          "---------------"
        ],
        "pkg/compose/dependencies_test.go||pkg/compose/dependencies_test.go": [
          "File: pkg/compose/dependencies_test.go -> pkg/compose/dependencies_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "270:     Services: tC.services,",
          "271:    }",
          "274:    assert.NilError(t, err, fmt.Sprintf(\"failed to build graph for: %s\", tC.desc))",
          "276:    for k, vertex := range graph.Vertices {",
          "",
          "[Removed Lines]",
          "273:    graph, err := NewGraph(project.Services, ServiceStopped)",
          "",
          "[Added Lines]",
          "273:    graph, err := NewGraph(&project, ServiceStopped)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1680f9a874cd0939cad98d4e1b1b017b33d2ecc3",
      "candidate_info": {
        "commit_hash": "1680f9a874cd0939cad98d4e1b1b017b33d2ecc3",
        "repo": "docker/compose",
        "commit_url": "https://github.com/docker/compose/commit/1680f9a874cd0939cad98d4e1b1b017b33d2ecc3",
        "files": [
          "cmd/compose/compose.go",
          "cmd/compose/config.go",
          "go.mod",
          "go.sum",
          "pkg/api/api.go",
          "pkg/compose/compose.go",
          "pkg/compose/publish.go",
          "pkg/compose/pull.go",
          "pkg/e2e/compose_test.go"
        ],
        "message": "restore support for `config --no-interpolate`\n\nSigned-off-by: Nicolas De Loof <nicolas.deloof@gmail.com>",
        "before_after_code_files": [
          "cmd/compose/compose.go||cmd/compose/compose.go",
          "cmd/compose/config.go||cmd/compose/config.go",
          "go.mod||go.mod",
          "go.sum||go.sum",
          "pkg/api/api.go||pkg/api/api.go",
          "pkg/compose/compose.go||pkg/compose/compose.go",
          "pkg/compose/publish.go||pkg/compose/publish.go",
          "pkg/compose/pull.go||pkg/compose/pull.go",
          "pkg/e2e/compose_test.go||pkg/e2e/compose_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "cmd/compose/config.go||cmd/compose/config.go",
            "go.mod||go.mod",
            "go.sum||go.sum"
          ],
          "candidate": [
            "cmd/compose/config.go||cmd/compose/config.go",
            "go.mod||go.mod",
            "go.sum||go.sum"
          ]
        }
      },
      "candidate_diff": {
        "cmd/compose/compose.go||cmd/compose/compose.go": [
          "File: cmd/compose/compose.go -> cmd/compose/compose.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "201:  return project.Name, nil",
          "202: }",
          "204: func (o *ProjectOptions) ToProject(ctx context.Context, dockerCli command.Cli, services []string, po ...cli.ProjectOptionsFn) (*types.Project, tracing.Metrics, error) {",
          "205:  var metrics tracing.Metrics",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "204: func (o *ProjectOptions) ToModel(ctx context.Context, dockerCli command.Cli, services []string, po ...cli.ProjectOptionsFn) (map[string]any, error) {",
          "205:  remotes := o.remoteLoaders(dockerCli)",
          "206:  for _, r := range remotes {",
          "207:   po = append(po, cli.WithResourceLoader(r))",
          "208:  }",
          "210:  options, err := o.toProjectOptions(po...)",
          "211:  if err != nil {",
          "212:   return nil, err",
          "213:  }",
          "215:  if o.Compatibility || utils.StringToBool(options.Environment[ComposeCompatibility]) {",
          "216:   api.Separator = \"_\"",
          "217:  }",
          "219:  return options.LoadModel(ctx)",
          "220: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "241:   api.Separator = \"_\"",
          "242:  }",
          "245:  if err != nil {",
          "246:   return nil, metrics, compose.WrapComposeError(err)",
          "247:  }",
          "",
          "[Removed Lines]",
          "244:  project, err := cli.ProjectFromOptions(ctx, options)",
          "",
          "[Added Lines]",
          "262:  project, err := options.LoadProject(ctx)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "468:   psCommand(&opts, dockerCli, backend),",
          "469:   listCommand(dockerCli, backend),",
          "470:   logsCommand(&opts, dockerCli, backend),",
          "472:   killCommand(&opts, dockerCli, backend),",
          "473:   runCommand(&opts, dockerCli, backend),",
          "474:   removeCommand(&opts, dockerCli, backend),",
          "",
          "[Removed Lines]",
          "471:   configCommand(&opts, dockerCli, backend),",
          "",
          "[Added Lines]",
          "489:   configCommand(&opts, dockerCli),",
          "",
          "---------------"
        ],
        "cmd/compose/config.go||cmd/compose/config.go": [
          "File: cmd/compose/config.go -> cmd/compose/config.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: import (",
          "20:  \"bytes\"",
          "21:  \"context\"",
          "22:  \"fmt\"",
          "23:  \"os\"",
          "24:  \"sort\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22:  \"encoding/json\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "28:  \"github.com/compose-spec/compose-go/v2/types\"",
          "29:  \"github.com/docker/cli/cli/command\"",
          "30:  \"github.com/spf13/cobra\"",
          "33:  \"github.com/docker/compose/v2/pkg/api\"",
          "34:  \"github.com/docker/compose/v2/pkg/compose\"",
          "35: )",
          "",
          "[Removed Lines]",
          "32:  \"github.com/docker/compose/v2/internal/tracing\"",
          "",
          "[Added Lines]",
          "32:  \"gopkg.in/yaml.v3\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "51:  noConsistency       bool",
          "52: }",
          "56:   cli.WithInterpolation(!o.noInterpolate),",
          "57:   cli.WithResolvedPaths(!o.noResolvePath),",
          "58:   cli.WithNormalization(!o.noNormalize),",
          "59:   cli.WithConsistency(!o.noConsistency),",
          "60:   cli.WithDefaultProfiles(o.Profiles...),",
          "63: }",
          "66:  opts := configOptions{",
          "67:   ProjectOptions: p,",
          "68:  }",
          "",
          "[Removed Lines]",
          "54: func (o *configOptions) ToProject(ctx context.Context, dockerCli command.Cli, services []string, po ...cli.ProjectOptionsFn) (*types.Project, tracing.Metrics, error) {",
          "55:  po = append(po,",
          "61:   cli.WithDiscardEnvFile)",
          "62:  return o.ProjectOptions.ToProject(ctx, dockerCli, services, po...)",
          "65: func configCommand(p *ProjectOptions, dockerCli command.Cli, backend api.Service) *cobra.Command {",
          "",
          "[Added Lines]",
          "55: func (o *configOptions) ToProject(ctx context.Context, dockerCli command.Cli, services []string, po ...cli.ProjectOptionsFn) (*types.Project, error) {",
          "56:  po = append(po, o.ToProjectOptions()...)",
          "57:  project, _, err := o.ProjectOptions.ToProject(ctx, dockerCli, services, po...)",
          "58:  return project, err",
          "59: }",
          "61: func (o *configOptions) ToModel(ctx context.Context, dockerCli command.Cli, services []string, po ...cli.ProjectOptionsFn) (map[string]any, error) {",
          "62:  po = append(po, o.ToProjectOptions()...)",
          "63:  return o.ProjectOptions.ToModel(ctx, dockerCli, services, po...)",
          "64: }",
          "66: func (o *configOptions) ToProjectOptions() []cli.ProjectOptionsFn {",
          "67:  return []cli.ProjectOptionsFn{",
          "73:   cli.WithDiscardEnvFile,",
          "74:  }",
          "77: func configCommand(p *ProjectOptions, dockerCli command.Cli) *cobra.Command {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "100:     return runConfigImages(ctx, dockerCli, opts, args)",
          "101:    }",
          "104:   }),",
          "105:   ValidArgsFunction: completeServiceNames(dockerCli, p),",
          "106:  }",
          "",
          "[Removed Lines]",
          "103:    return runConfig(ctx, dockerCli, backend, opts, args)",
          "",
          "[Added Lines]",
          "115:    return runConfig(ctx, dockerCli, opts, args)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "123:  return cmd",
          "124: }",
          "127:  var content []byte",
          "129:  if err != nil {",
          "130:   return err",
          "131:  }",
          "138:  if err != nil {",
          "139:   return err",
          "140:  }",
          "",
          "[Removed Lines]",
          "126: func runConfig(ctx context.Context, dockerCli command.Cli, backend api.Service, opts configOptions, services []string) error {",
          "128:  project, _, err := opts.ToProject(ctx, dockerCli, services)",
          "133:  content, err = backend.Config(ctx, project, api.ConfigOptions{",
          "134:   Format:              opts.Format,",
          "135:   Output:              opts.Output,",
          "136:   ResolveImageDigests: opts.resolveImageDigests,",
          "137:  })",
          "",
          "[Added Lines]",
          "138: func runConfig(ctx context.Context, dockerCli command.Cli, opts configOptions, services []string) error {",
          "140:  model, err := opts.ToModel(ctx, dockerCli, services)",
          "145:  if opts.resolveImageDigests {",
          "147:   p := &types.Project{",
          "148:    Services: types.Services{},",
          "149:   }",
          "150:   services := model[\"services\"].(map[string]any)",
          "151:   for name, s := range services {",
          "152:    service := s.(map[string]any)",
          "153:    if image, ok := service[\"image\"]; ok {",
          "154:     p.Services[name] = types.ServiceConfig{",
          "155:      Image: image.(string),",
          "156:     }",
          "157:    }",
          "158:   }",
          "160:   p, err = p.WithImagesResolved(compose.ImageDigestResolver(ctx, dockerCli.ConfigFile(), dockerCli.Client()))",
          "161:   if err != nil {",
          "162:    return err",
          "163:   }",
          "165:   for name, s := range services {",
          "166:    service := s.(map[string]any)",
          "167:    config := p.Services[name]",
          "168:    if config.Image != \"\" {",
          "169:     service[\"image\"] = config.Image",
          "170:    }",
          "171:    services[name] = service",
          "172:   }",
          "173:   model[\"services\"] = services",
          "174:  }",
          "176:  switch opts.Format {",
          "177:  case \"json\":",
          "178:   content, err = json.MarshalIndent(model, \"\", \"  \")",
          "179:  case \"yaml\":",
          "180:   buf := bytes.NewBuffer([]byte{})",
          "181:   encoder := yaml.NewEncoder(buf)",
          "182:   encoder.SetIndent(2)",
          "183:   err = encoder.Encode(model)",
          "184:   content = buf.Bytes()",
          "185:  default:",
          "186:   return fmt.Errorf(\"unsupported format %q\", opts.Format)",
          "187:  }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "155: }",
          "157: func runServices(ctx context.Context, dockerCli command.Cli, opts configOptions) error {",
          "159:  if err != nil {",
          "160:   return err",
          "161:  }",
          "",
          "[Removed Lines]",
          "158:  project, _, err := opts.ToProject(ctx, dockerCli, nil, cli.WithoutEnvironmentResolution)",
          "",
          "[Added Lines]",
          "208:  project, err := opts.ToProject(ctx, dockerCli, nil, cli.WithoutEnvironmentResolution)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "167: }",
          "169: func runVolumes(ctx context.Context, dockerCli command.Cli, opts configOptions) error {",
          "171:  if err != nil {",
          "172:   return err",
          "173:  }",
          "",
          "[Removed Lines]",
          "170:  project, _, err := opts.ToProject(ctx, dockerCli, nil, cli.WithoutEnvironmentResolution)",
          "",
          "[Added Lines]",
          "220:  project, err := opts.ToProject(ctx, dockerCli, nil, cli.WithoutEnvironmentResolution)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "182:  if opts.hash != \"*\" {",
          "183:   services = append(services, strings.Split(opts.hash, \",\")...)",
          "184:  }",
          "186:  if err != nil {",
          "187:   return err",
          "188:  }",
          "",
          "[Removed Lines]",
          "185:  project, _, err := opts.ToProject(ctx, dockerCli, nil, cli.WithoutEnvironmentResolution)",
          "",
          "[Added Lines]",
          "235:  project, err := opts.ToProject(ctx, dockerCli, nil, cli.WithoutEnvironmentResolution)",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "219: func runProfiles(ctx context.Context, dockerCli command.Cli, opts configOptions, services []string) error {",
          "220:  set := map[string]struct{}{}",
          "222:  if err != nil {",
          "223:   return err",
          "224:  }",
          "",
          "[Removed Lines]",
          "221:  project, _, err := opts.ToProject(ctx, dockerCli, services, cli.WithoutEnvironmentResolution)",
          "",
          "[Added Lines]",
          "271:  project, err := opts.ToProject(ctx, dockerCli, services, cli.WithoutEnvironmentResolution)",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "239: }",
          "241: func runConfigImages(ctx context.Context, dockerCli command.Cli, opts configOptions, services []string) error {",
          "243:  if err != nil {",
          "244:   return err",
          "245:  }",
          "",
          "[Removed Lines]",
          "242:  project, _, err := opts.ToProject(ctx, dockerCli, services, cli.WithoutEnvironmentResolution)",
          "",
          "[Added Lines]",
          "292:  project, err := opts.ToProject(ctx, dockerCli, services, cli.WithoutEnvironmentResolution)",
          "",
          "---------------"
        ],
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "6:  github.com/AlecAivazis/survey/v2 v2.3.7",
          "7:  github.com/Microsoft/go-winio v0.6.1",
          "8:  github.com/buger/goterm v1.0.4",
          "10:  github.com/containerd/console v1.0.3",
          "11:  github.com/containerd/containerd v1.7.12",
          "12:  github.com/davecgh/go-spew v1.1.1",
          "",
          "[Removed Lines]",
          "9:  github.com/compose-spec/compose-go/v2 v2.0.0-rc.8",
          "",
          "[Added Lines]",
          "9:  github.com/compose-spec/compose-go/v2 v2.0.0-rc.8.0.20240228111658-a0507e98fe60",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49:  golang.org/x/sync v0.6.0",
          "50:  golang.org/x/sys v0.16.0",
          "51:  google.golang.org/grpc v1.59.0",
          "52:  gotest.tools/v3 v3.5.1",
          "53: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "52:  gopkg.in/yaml.v3 v3.0.1",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "170:  google.golang.org/protobuf v1.31.0 // indirect",
          "171:  gopkg.in/inf.v0 v0.9.1 // indirect",
          "172:  gopkg.in/yaml.v2 v2.4.0 // indirect",
          "174:  k8s.io/api v0.26.7 // indirect",
          "175:  k8s.io/apimachinery v0.26.7 // indirect",
          "176:  k8s.io/apiserver v0.26.7 // indirect",
          "",
          "[Removed Lines]",
          "173:  gopkg.in/yaml.v3 v3.0.1 // indirect",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "86: github.com/cncf/xds/go v0.0.0-20230607035331-e9ce68804cb4/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=",
          "87: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb h1:EDmT6Q9Zs+SbUoc7Ik9EfrFqcylYqgPZ9ANSbTAntnE=",
          "88: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb/go.mod h1:ZjrT6AXHbDs86ZSdt/osfBi5qfexBrKUdONk989Wnk4=",
          "91: github.com/containerd/cgroups v1.1.0 h1:v8rEWFl6EoqHB+swVNjVoCJE8o3jX7e8nqBGPLaDFBM=",
          "92: github.com/containerd/cgroups v1.1.0/go.mod h1:6ppBcbh/NOOUU+dMKrykgaBnK9lCIBxHqJDGwsa1mIw=",
          "93: github.com/containerd/console v1.0.3 h1:lIr7SlA5PxZyMV30bDW0MGbiOPXwc63yRuCP0ARubLw=",
          "",
          "[Removed Lines]",
          "89: github.com/compose-spec/compose-go/v2 v2.0.0-rc.8 h1:b7l+GqFF+2W4M4kLQUDRTGhqmTiRwT3bYd9X7xrxp5Q=",
          "90: github.com/compose-spec/compose-go/v2 v2.0.0-rc.8/go.mod h1:bEPizBkIojlQ20pi2vNluBa58tevvj0Y18oUSHPyfdc=",
          "",
          "[Added Lines]",
          "89: github.com/compose-spec/compose-go/v2 v2.0.0-rc.8.0.20240228111658-a0507e98fe60 h1:NlkpaLBPFr05mNJWVMH7PP4L30gFG6k4z1QpypLUSh8=",
          "90: github.com/compose-spec/compose-go/v2 v2.0.0-rc.8.0.20240228111658-a0507e98fe60/go.mod h1:bEPizBkIojlQ20pi2vNluBa58tevvj0Y18oUSHPyfdc=",
          "",
          "---------------"
        ],
        "pkg/api/api.go||pkg/api/api.go": [
          "File: pkg/api/api.go -> pkg/api/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:  Ps(ctx context.Context, projectName string, options PsOptions) ([]ContainerSummary, error)",
          "54:  List(ctx context.Context, options ListOptions) ([]Stack, error)",
          "58:  Kill(ctx context.Context, projectName string, options KillOptions) error",
          "",
          "[Removed Lines]",
          "56:  Config(ctx context.Context, project *types.Project, options ConfigOptions) ([]byte, error)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "pkg/compose/compose.go||pkg/compose/compose.go": [
          "File: pkg/compose/compose.go -> pkg/compose/compose.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:  \"strings\"",
          "26:  \"sync\"",
          "30:  \"github.com/docker/docker/api/types/volume\"",
          "32:  \"github.com/compose-spec/compose-go/v2/types\"",
          "34:  \"github.com/docker/cli/cli/command\"",
          "35:  \"github.com/docker/cli/cli/config/configfile\"",
          "36:  \"github.com/docker/cli/cli/flags\"",
          "",
          "[Removed Lines]",
          "28:  \"github.com/jonboulle/clockwork\"",
          "33:  \"github.com/distribution/reference\"",
          "",
          "[Added Lines]",
          "29:  \"github.com/jonboulle/clockwork\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:  \"github.com/docker/docker/api/types/filters\"",
          "41:  \"github.com/docker/docker/api/types/swarm\"",
          "42:  \"github.com/docker/docker/client\"",
          "44: )",
          "46: var stdioToStdout bool",
          "",
          "[Removed Lines]",
          "43:  \"github.com/opencontainers/go-digest\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "147:  return name[len(project)+1:]",
          "148: }",
          "180: func (s *composeService) projectFromName(containers Containers, projectName string, services ...string) (*types.Project, error) {",
          "181:  project := &types.Project{",
          "",
          "[Removed Lines]",
          "150: func (s *composeService) Config(ctx context.Context, project *types.Project, options api.ConfigOptions) ([]byte, error) {",
          "151:  if options.ResolveImageDigests {",
          "152:   var err error",
          "153:   project, err = project.WithImagesResolved(func(named reference.Named) (digest.Digest, error) {",
          "154:    auth, err := encodedAuth(named, s.configFile())",
          "155:    if err != nil {",
          "156:     return \"\", err",
          "157:    }",
          "158:    inspect, err := s.apiClient().DistributionInspect(ctx, named.String(), auth)",
          "159:    if err != nil {",
          "160:     return \"\", err",
          "161:    }",
          "162:    return inspect.Descriptor.Digest, nil",
          "163:   })",
          "164:   if err != nil {",
          "165:    return nil, err",
          "166:   }",
          "167:  }",
          "169:  switch options.Format {",
          "170:  case \"json\":",
          "171:   return project.MarshalJSON()",
          "172:  case \"yaml\":",
          "173:   return project.MarshalYAML()",
          "174:  default:",
          "175:   return nil, fmt.Errorf(\"unsupported format %q\", options.Format)",
          "176:  }",
          "177: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "pkg/compose/publish.go||pkg/compose/publish.go": [
          "File: pkg/compose/publish.go -> pkg/compose/publish.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:  \"github.com/docker/compose/v2/internal/ocipush\"",
          "27:  \"github.com/docker/compose/v2/pkg/api\"",
          "28:  \"github.com/docker/compose/v2/pkg/progress\"",
          "30: )",
          "32: func (s *composeService) Publish(ctx context.Context, project *types.Project, repository string, options api.PublishOptions) error {",
          "",
          "[Removed Lines]",
          "29:  \"github.com/opencontainers/go-digest\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "111:  if err != nil {",
          "112:   return nil, err",
          "113:  }",
          "125:  if err != nil {",
          "126:   return nil, err",
          "127:  }",
          "",
          "[Removed Lines]",
          "114:  project, err = project.WithImagesResolved(func(named reference.Named) (digest.Digest, error) {",
          "115:   auth, err := encodedAuth(named, s.configFile())",
          "116:   if err != nil {",
          "117:    return \"\", err",
          "118:   }",
          "119:   inspect, err := s.apiClient().DistributionInspect(ctx, named.String(), auth)",
          "120:   if err != nil {",
          "121:    return \"\", err",
          "122:   }",
          "123:   return inspect.Descriptor.Digest, nil",
          "124:  })",
          "",
          "[Added Lines]",
          "113:  project, err = project.WithImagesResolved(ImageDigestResolver(ctx, s.configFile(), s.apiClient()))",
          "",
          "---------------"
        ],
        "pkg/compose/pull.go||pkg/compose/pull.go": [
          "File: pkg/compose/pull.go -> pkg/compose/pull.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:  \"github.com/compose-spec/compose-go/v2/types\"",
          "29:  \"github.com/distribution/reference\"",
          "30:  \"github.com/docker/buildx/driver\"",
          "31:  moby \"github.com/docker/docker/api/types\"",
          "32:  \"github.com/docker/docker/pkg/jsonmessage\"",
          "33:  \"github.com/docker/docker/registry\"",
          "34:  \"github.com/hashicorp/go-multierror\"",
          "35:  \"golang.org/x/sync/errgroup\"",
          "37:  \"github.com/docker/compose/v2/pkg/api\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31:  \"github.com/docker/cli/cli/config/configfile\"",
          "33:  \"github.com/docker/docker/client\"",
          "37:  \"github.com/opencontainers/go-digest\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "242:  return inspected.ID, nil",
          "243: }",
          "245: func encodedAuth(ref reference.Named, configFile driver.Auth) (string, error) {",
          "246:  repoInfo, err := registry.ParseRepositoryInfo(ref)",
          "247:  if err != nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "249: func ImageDigestResolver(ctx context.Context, file *configfile.ConfigFile, apiClient client.APIClient) func(named reference.Named) (digest.Digest, error) {",
          "250:  return func(named reference.Named) (digest.Digest, error) {",
          "251:   auth, err := encodedAuth(named, file)",
          "252:   if err != nil {",
          "253:    return \"\", err",
          "254:   }",
          "255:   inspect, err := apiClient.DistributionInspect(ctx, named.String(), auth)",
          "256:   if err != nil {",
          "257:    return \"\", err",
          "258:   }",
          "259:   return inspect.Descriptor.Digest, nil",
          "260:  }",
          "261: }",
          "",
          "---------------"
        ],
        "pkg/e2e/compose_test.go||pkg/e2e/compose_test.go": [
          "File: pkg/e2e/compose_test.go -> pkg/e2e/compose_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "235:  })",
          "236: }",
          "239:  const projectName = \"compose-e2e-convert\"",
          "240:  c := NewParallelCLI(t)",
          "",
          "[Removed Lines]",
          "238: func TestConvert(t *testing.T) {",
          "",
          "[Added Lines]",
          "238: func TestConfig(t *testing.T) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "245:  t.Run(\"up\", func(t *testing.T) {",
          "246:   res := c.RunDockerComposeCmd(t, \"-f\", \"./fixtures/simple-build-test/compose.yaml\", \"-p\", projectName, \"convert\")",
          "248:   nginx:",
          "249:     build:",
          "250:       context: %s",
          "251:       dockerfile: Dockerfile",
          "252:     networks:",
          "253:       default: null",
          "257:  })",
          "258: }",
          "261:  const projectName = \"compose-e2e-convert-interpolate\"",
          "262:  c := NewParallelCLI(t)",
          "",
          "[Removed Lines]",
          "247:   res.Assert(t, icmd.Expected{Out: fmt.Sprintf(`services:",
          "254: networks:",
          "255:   default:",
          "256:     name: compose-e2e-convert_default`, filepath.Join(wd, \"fixtures\", \"simple-build-test\", \"nginx-build\")), ExitCode: 0})",
          "260: func TestConvertInterpolate(t *testing.T) {",
          "",
          "[Added Lines]",
          "247:   res.Assert(t, icmd.Expected{Out: fmt.Sprintf(`name: %s",
          "248: networks:",
          "249:   default:",
          "250:     name: compose-e2e-convert_default",
          "251: services:",
          "258: `, projectName, filepath.Join(wd, \"fixtures\", \"simple-build-test\", \"nginx-build\")), ExitCode: 0})",
          "262: func TestConfigInterpolate(t *testing.T) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "267:  t.Run(\"convert\", func(t *testing.T) {",
          "268:   res := c.RunDockerComposeCmd(t, \"-f\", \"./fixtures/simple-build-test/compose-interpolate.yaml\", \"-p\", projectName, \"convert\", \"--no-interpolate\")",
          "270:   nginx:",
          "271:     build:",
          "272:       context: %s",
          "273:       dockerfile: ${MYVAR}",
          "274:     networks:",
          "275:       default: null",
          "279:  })",
          "280: }",
          "",
          "[Removed Lines]",
          "269:   res.Assert(t, icmd.Expected{Out: fmt.Sprintf(`services:",
          "276: networks:",
          "277:   default:",
          "278:     name: compose-e2e-convert-interpolate_default`, filepath.Join(wd, \"fixtures\", \"simple-build-test\", \"nginx-build\")), ExitCode: 0})",
          "",
          "[Added Lines]",
          "271:   res.Assert(t, icmd.Expected{Out: fmt.Sprintf(`name: %s",
          "272: networks:",
          "273:   default:",
          "274:     name: compose-e2e-convert-interpolate_default",
          "275: services:",
          "282: `, projectName, filepath.Join(wd, \"fixtures\", \"simple-build-test\", \"nginx-build\")), ExitCode: 0})",
          "",
          "---------------"
        ]
      }
    }
  ]
}