{
  "cve_id": "CVE-2024-22051",
  "cve_desc": "CommonMarker versions prior to 0.23.4 are at risk of an integer overflow vulnerability. This vulnerability can result in possibly unauthenticated remote attackers to cause heap memory corruption, potentially leading to an information leak or remote code execution, via parsing tables with marker rows that contain more than UINT16_MAX columns.\n\n",
  "repo": "gjtorikian/commonmarker",
  "patch_hash": "ab4504fd17460627a6ab255bc3c63e8e5fc6aed3",
  "patch_info": {
    "commit_hash": "ab4504fd17460627a6ab255bc3c63e8e5fc6aed3",
    "repo": "gjtorikian/commonmarker",
    "commit_url": "https://github.com/gjtorikian/commonmarker/commit/ab4504fd17460627a6ab255bc3c63e8e5fc6aed3",
    "files": [
      "ext/commonmarker/cmark-gfm_version.h",
      "ext/commonmarker/cmark-upstream",
      "ext/commonmarker/table.c",
      "lib/commonmarker/version.rb"
    ],
    "message": "Merge pull request from GHSA-fmx4-26r3-wxpf\n\nUpdate `cmark-gfm` to `0.29.0.gfm.3`, bump main to version `v0.23.3`",
    "before_after_code_files": [
      "ext/commonmarker/cmark-gfm_version.h||ext/commonmarker/cmark-gfm_version.h",
      "ext/commonmarker/table.c||ext/commonmarker/table.c",
      "lib/commonmarker/version.rb||lib/commonmarker/version.rb"
    ]
  },
  "patch_diff": {
    "ext/commonmarker/cmark-gfm_version.h||ext/commonmarker/cmark-gfm_version.h": [
      "File: ext/commonmarker/cmark-gfm_version.h -> ext/commonmarker/cmark-gfm_version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #ifndef CMARK_GFM_VERSION_H",
      "2: #define CMARK_GFM_VERSION_H",
      "7: #endif",
      "",
      "[Removed Lines]",
      "4: #define CMARK_GFM_VERSION ((0 << 24) | (29 << 16) | (0 << 8) | 2)",
      "5: #define CMARK_GFM_VERSION_STRING \"0.29.0.gfm.2\"",
      "",
      "[Added Lines]",
      "4: #define CMARK_GFM_VERSION ((0 << 24) | (29 << 16) | (0 << 8) | 3)",
      "5: #define CMARK_GFM_VERSION_STRING \"0.29.0.gfm.3\"",
      "",
      "---------------"
    ],
    "ext/commonmarker/table.c||ext/commonmarker/table.c": [
      "File: ext/commonmarker/table.c -> ext/commonmarker/table.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "129:   bufsize_t cell_matched = 1, pipe_matched = 1, offset;",
      "130:   int expect_more_cells = 1;",
      "131:   int row_end_offset = 0;",
      "133:   row = (table_row *)parser->mem->calloc(1, sizeof(table_row));",
      "134:   row->n_columns = 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "132:   int int_overflow_abort = 0;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "161:         ++cell->internal_offset;",
      "162:       }",
      "164:       row->n_columns += 1;",
      "165:       row->cells = cmark_llist_append(parser->mem, row->cells, cell);",
      "166:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "167:       if (row->n_columns == UINT16_MAX) {",
      "168:           int_overflow_abort = 1;",
      "169:           break;",
      "170:       }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "194:     }",
      "195:   }",
      "198:     free_table_row(parser->mem, row);",
      "199:     row = NULL;",
      "200:   }",
      "",
      "[Removed Lines]",
      "197:   if (offset != len || row->n_columns == 0) {",
      "",
      "[Added Lines]",
      "204:   if (offset != len || row->n_columns == 0 || int_overflow_abort) {",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "241:   marker_row = row_from_string(self, parser,",
      "242:                                input + cmark_parser_get_first_nonspace(parser),",
      "243:                                len - cmark_parser_get_first_nonspace(parser));",
      "244:   assert(marker_row);",
      "246:   cmark_arena_push();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "252:   if (!marker_row) {",
      "253:       return parent_container;",
      "254:   }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "264:         len - cmark_parser_get_first_nonspace(parser));",
      "265:     header_row = row_from_string(self, parser, (unsigned char *)parent_string,",
      "266:                                  (int)strlen(parent_string));",
      "267:   }",
      "269:   if (!cmark_node_set_type(parent_container, CMARK_NODE_TABLE)) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "280:     if (!marker_row || !header_row || header_row->n_columns != marker_row->n_columns) {",
      "281:         free_table_row(parser->mem, marker_row);",
      "282:         free_table_row(parser->mem, header_row);",
      "283:         return parent_container;",
      "284:     }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "281:   parent_container->as.opaque = parser->mem->calloc(1, sizeof(node_table));",
      "282:   set_n_table_columns(parent_container, header_row->n_columns);",
      "284:   uint8_t *alignments =",
      "286:   cmark_llist *it = marker_row->cells;",
      "287:   for (i = 0; it; it = it->next, ++i) {",
      "288:     node_cell *node = (node_cell *)it->data;",
      "",
      "[Removed Lines]",
      "285:       (uint8_t *)parser->mem->calloc(header_row->n_columns, sizeof(uint8_t));",
      "",
      "[Added Lines]",
      "305:       (uint8_t *)parser->mem->calloc(marker_row->n_columns, sizeof(uint8_t));",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "351:   row = row_from_string(self, parser, input + cmark_parser_get_first_nonspace(parser),",
      "352:       len - cmark_parser_get_first_nonspace(parser));",
      "354:   {",
      "355:     cmark_llist *tmp;",
      "356:     int i, table_columns = get_n_table_columns(parent_container);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "374:   if (!row) {",
      "376:       cmark_node_free(table_row_block);",
      "377:       return NULL;",
      "378:   }",
      "",
      "---------------"
    ],
    "lib/commonmarker/version.rb||lib/commonmarker/version.rb": [
      "File: lib/commonmarker/version.rb -> lib/commonmarker/version.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: # frozen_string_literal: true",
      "3: module CommonMarker",
      "5: end",
      "",
      "[Removed Lines]",
      "4:   VERSION = '0.23.2'",
      "",
      "[Added Lines]",
      "4:   VERSION = '0.23.3'",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "cee07d26c0efc056fe3b7ff8ff93a4d5b19a923f",
      "candidate_info": {
        "commit_hash": "cee07d26c0efc056fe3b7ff8ff93a4d5b19a923f",
        "repo": "gjtorikian/commonmarker",
        "commit_url": "https://github.com/gjtorikian/commonmarker/commit/cee07d26c0efc056fe3b7ff8ff93a4d5b19a923f",
        "files": [
          "ext/commonmarker/table.c",
          "lib/commonmarker/version.rb"
        ],
        "message": "Merge pull request from GHSA-fmx4-26r3-wxpf\n\nBackport fixes, create version v0.18.3",
        "before_after_code_files": [
          "ext/commonmarker/table.c||ext/commonmarker/table.c",
          "lib/commonmarker/version.rb||lib/commonmarker/version.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ext/commonmarker/table.c||ext/commonmarker/table.c",
            "lib/commonmarker/version.rb||lib/commonmarker/version.rb"
          ],
          "candidate": [
            "ext/commonmarker/table.c||ext/commonmarker/table.c",
            "lib/commonmarker/version.rb||lib/commonmarker/version.rb"
          ]
        }
      },
      "candidate_diff": {
        "ext/commonmarker/table.c||ext/commonmarker/table.c": [
          "File: ext/commonmarker/table.c -> ext/commonmarker/table.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "115:                                   int len) {",
          "116:   table_row *row = NULL;",
          "117:   bufsize_t cell_matched, pipe_matched, offset;",
          "119:   row = (table_row *)parser->mem->calloc(1, sizeof(table_row));",
          "120:   row->n_columns = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "118:   int int_overflow_abort = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "139:         --cell->start_offset;",
          "140:         ++cell->internal_offset;",
          "141:       }",
          "142:       row->n_columns += 1;",
          "143:       row->cells = cmark_llist_append(parser->mem, row->cells, cell);",
          "144:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "145:       if (row->n_columns == UINT16_MAX) {",
          "146:           int_overflow_abort = 1;",
          "147:           break;",
          "148:       }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "151:     }",
          "152:   } while ((cell_matched || pipe_matched) && offset < len);",
          "155:     free_table_row(parser->mem, row);",
          "156:     row = NULL;",
          "157:   }",
          "",
          "[Removed Lines]",
          "154:   if (offset != len || !row->n_columns) {",
          "",
          "[Added Lines]",
          "161:   if (offset != len || !row->n_columns || int_overflow_abort) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "192:                                input + cmark_parser_get_first_nonspace(parser),",
          "193:                                len - cmark_parser_get_first_nonspace(parser));",
          "195:   assert(marker_row);",
          "197:   if (header_row->n_columns != marker_row->n_columns) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "202:   if (!marker_row) {",
          "205:       free_table_row(parser->mem, marker_row);",
          "206:       cmark_arena_pop();",
          "207:       return parent_container;",
          "208:   }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "209:                                  len - cmark_parser_get_first_nonspace(parser));",
          "210:   }",
          "213:     free_table_row(parser->mem, header_row);",
          "214:     free_table_row(parser->mem, marker_row);",
          "215:     return parent_container;",
          "",
          "[Removed Lines]",
          "212:   if (!cmark_node_set_type(parent_container, CMARK_NODE_TABLE)) {",
          "",
          "[Added Lines]",
          "229:   if (!marker_row || !header_row || header_row->n_columns != marker_row->n_columns || !cmark_node_set_type(parent_container, CMARK_NODE_TABLE)) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "222:   set_n_table_columns(parent_container, header_row->n_columns);",
          "224:   uint8_t *alignments =",
          "226:   cmark_llist *it = marker_row->cells;",
          "227:   for (i = 0; it; it = it->next, ++i) {",
          "228:     node_cell *node = (node_cell *)it->data;",
          "",
          "[Removed Lines]",
          "225:       (uint8_t *)parser->mem->calloc(header_row->n_columns, sizeof(uint8_t));",
          "",
          "[Added Lines]",
          "244:       (uint8_t *)parser->mem->calloc(marker_row->n_columns, sizeof(uint8_t));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "291:   row = row_from_string(self, parser, input + cmark_parser_get_first_nonspace(parser),",
          "292:       len - cmark_parser_get_first_nonspace(parser));",
          "294:   {",
          "295:     cmark_llist *tmp;",
          "296:     int i, table_columns = get_n_table_columns(parent_container);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "313:   if (!row) {",
          "315:       cmark_node_free(table_row_block);",
          "316:       return NULL;",
          "317:   }",
          "",
          "---------------"
        ],
        "lib/commonmarker/version.rb||lib/commonmarker/version.rb": [
          "File: lib/commonmarker/version.rb -> lib/commonmarker/version.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: module CommonMarker",
          "3: end",
          "",
          "[Removed Lines]",
          "2:   VERSION = '0.18.2'.freeze",
          "",
          "[Added Lines]",
          "2:   VERSION = '0.18.3'.freeze",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2055cafda03c264a10a5ac3e7b677d4d70872fb0",
      "candidate_info": {
        "commit_hash": "2055cafda03c264a10a5ac3e7b677d4d70872fb0",
        "repo": "gjtorikian/commonmarker",
        "commit_url": "https://github.com/gjtorikian/commonmarker/commit/2055cafda03c264a10a5ac3e7b677d4d70872fb0",
        "files": [
          "ext/commonmarker/table.c",
          "lib/commonmarker/version.rb"
        ],
        "message": "Merge pull request from GHSA-fmx4-26r3-wxpf\n\nBackport fixes, create version v0.17.14",
        "before_after_code_files": [
          "ext/commonmarker/table.c||ext/commonmarker/table.c",
          "lib/commonmarker/version.rb||lib/commonmarker/version.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ext/commonmarker/table.c||ext/commonmarker/table.c",
            "lib/commonmarker/version.rb||lib/commonmarker/version.rb"
          ],
          "candidate": [
            "ext/commonmarker/table.c||ext/commonmarker/table.c",
            "lib/commonmarker/version.rb||lib/commonmarker/version.rb"
          ]
        }
      },
      "candidate_diff": {
        "ext/commonmarker/table.c||ext/commonmarker/table.c": [
          "File: ext/commonmarker/table.c -> ext/commonmarker/table.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:                                   int len) {",
          "115:   table_row *row = NULL;",
          "116:   bufsize_t cell_matched, pipe_matched, offset;",
          "118:   row = (table_row *)parser->mem->calloc(1, sizeof(table_row));",
          "119:   row->n_columns = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "117:   int int_overflow_abort = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "138:         --cell->start_offset;",
          "139:         ++cell->internal_offset;",
          "140:       }",
          "141:       row->n_columns += 1;",
          "142:       row->cells = cmark_llist_append(parser->mem, row->cells, cell);",
          "143:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "144:       if (row->n_columns == UINT16_MAX) {",
          "145:           int_overflow_abort = 1;",
          "146:           break;",
          "147:       }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "150:     }",
          "151:   } while ((cell_matched || pipe_matched) && offset < len);",
          "154:     free_table_row(parser->mem, row);",
          "155:     row = NULL;",
          "156:   }",
          "",
          "[Removed Lines]",
          "153:   if (offset != len || !row->n_columns) {",
          "",
          "[Added Lines]",
          "160:   if (offset != len || !row->n_columns || int_overflow_abort) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "191:                                input + cmark_parser_get_first_nonspace(parser),",
          "192:                                len - cmark_parser_get_first_nonspace(parser));",
          "194:   assert(marker_row);",
          "196:   if (header_row->n_columns != marker_row->n_columns) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "201:   if (!marker_row) {",
          "204:       free_table_row(parser->mem, marker_row);",
          "205:       cmark_arena_pop();",
          "206:       return parent_container;",
          "207:   }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "208:                                  len - cmark_parser_get_first_nonspace(parser));",
          "209:   }",
          "212:     free_table_row(parser->mem, header_row);",
          "213:     free_table_row(parser->mem, marker_row);",
          "214:     return parent_container;",
          "",
          "[Removed Lines]",
          "211:   if (!cmark_node_set_type(parent_container, CMARK_NODE_TABLE)) {",
          "",
          "[Added Lines]",
          "228:   if (!marker_row || !header_row || header_row->n_columns != marker_row->n_columns || !cmark_node_set_type(parent_container, CMARK_NODE_TABLE)) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "221:   set_n_table_columns(parent_container, header_row->n_columns);",
          "223:   uint8_t *alignments =",
          "225:   cmark_llist *it = marker_row->cells;",
          "226:   for (i = 0; it; it = it->next, ++i) {",
          "227:     node_cell *node = (node_cell *)it->data;",
          "",
          "[Removed Lines]",
          "224:       (uint8_t *)parser->mem->calloc(header_row->n_columns, sizeof(uint8_t));",
          "",
          "[Added Lines]",
          "243:       (uint8_t *)parser->mem->calloc(marker_row->n_columns, sizeof(uint8_t));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "290:   row = row_from_string(self, parser, input + cmark_parser_get_first_nonspace(parser),",
          "291:       len - cmark_parser_get_first_nonspace(parser));",
          "293:   {",
          "294:     cmark_llist *tmp;",
          "295:     int i, table_columns = get_n_table_columns(parent_container);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "312:   if (!row) {",
          "314:       cmark_node_free(table_row_block);",
          "315:       return NULL;",
          "316:   }",
          "",
          "---------------"
        ],
        "lib/commonmarker/version.rb||lib/commonmarker/version.rb": [
          "File: lib/commonmarker/version.rb -> lib/commonmarker/version.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: module CommonMarker",
          "3: end",
          "",
          "[Removed Lines]",
          "2:   VERSION = '0.17.13'.freeze",
          "",
          "[Added Lines]",
          "2:   VERSION = '0.17.14'.freeze",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "717233f0e15a29c26f967cba83f884ae935e6e11",
      "candidate_info": {
        "commit_hash": "717233f0e15a29c26f967cba83f884ae935e6e11",
        "repo": "gjtorikian/commonmarker",
        "commit_url": "https://github.com/gjtorikian/commonmarker/commit/717233f0e15a29c26f967cba83f884ae935e6e11",
        "files": [
          "ext/commonmarker/table.c"
        ],
        "message": "Manual backport of fixes from https://github.com/github/cmark-gfm/commit/b1687e6af1367c596ab75428b03af55666a66530 in order to fix GHSA-mc3g-88wq-6f4x.\n\nDue to merge conflicts given the age of this release, no attempt was\nmade to update `ext/commonmarker/cmark-upstream`.",
        "before_after_code_files": [
          "ext/commonmarker/table.c||ext/commonmarker/table.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "ext/commonmarker/table.c||ext/commonmarker/table.c"
          ],
          "candidate": [
            "ext/commonmarker/table.c||ext/commonmarker/table.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/commonmarker/table.c||ext/commonmarker/table.c": [
          "File: ext/commonmarker/table.c -> ext/commonmarker/table.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:                                   int len) {",
          "115:   table_row *row = NULL;",
          "116:   bufsize_t cell_matched, pipe_matched, offset;",
          "118:   row = (table_row *)parser->mem->calloc(1, sizeof(table_row));",
          "119:   row->n_columns = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "117:   int int_overflow_abort = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "138:         --cell->start_offset;",
          "139:         ++cell->internal_offset;",
          "140:       }",
          "141:       row->n_columns += 1;",
          "142:       row->cells = cmark_llist_append(parser->mem, row->cells, cell);",
          "143:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "144:       if (row->n_columns == UINT16_MAX) {",
          "145:           int_overflow_abort = 1;",
          "146:           break;",
          "147:       }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "150:     }",
          "151:   } while ((cell_matched || pipe_matched) && offset < len);",
          "154:     free_table_row(parser->mem, row);",
          "155:     row = NULL;",
          "156:   }",
          "",
          "[Removed Lines]",
          "153:   if (offset != len || !row->n_columns) {",
          "",
          "[Added Lines]",
          "160:   if (offset != len || !row->n_columns || int_overflow_abort) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "191:                                input + cmark_parser_get_first_nonspace(parser),",
          "192:                                len - cmark_parser_get_first_nonspace(parser));",
          "194:   assert(marker_row);",
          "196:   if (header_row->n_columns != marker_row->n_columns) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "201:   if (!marker_row) {",
          "204:       free_table_row(parser->mem, marker_row);",
          "205:       cmark_arena_pop();",
          "206:       return parent_container;",
          "207:   }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "208:                                  len - cmark_parser_get_first_nonspace(parser));",
          "209:   }",
          "212:     free_table_row(parser->mem, header_row);",
          "213:     free_table_row(parser->mem, marker_row);",
          "214:     return parent_container;",
          "",
          "[Removed Lines]",
          "211:   if (!cmark_node_set_type(parent_container, CMARK_NODE_TABLE)) {",
          "",
          "[Added Lines]",
          "228:   if (!marker_row || !header_row || header_row->n_columns != marker_row->n_columns || !cmark_node_set_type(parent_container, CMARK_NODE_TABLE)) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "221:   set_n_table_columns(parent_container, header_row->n_columns);",
          "223:   uint8_t *alignments =",
          "225:   cmark_llist *it = marker_row->cells;",
          "226:   for (i = 0; it; it = it->next, ++i) {",
          "227:     node_cell *node = (node_cell *)it->data;",
          "",
          "[Removed Lines]",
          "224:       (uint8_t *)parser->mem->calloc(header_row->n_columns, sizeof(uint8_t));",
          "",
          "[Added Lines]",
          "243:       (uint8_t *)parser->mem->calloc(marker_row->n_columns, sizeof(uint8_t));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "290:   row = row_from_string(self, parser, input + cmark_parser_get_first_nonspace(parser),",
          "291:       len - cmark_parser_get_first_nonspace(parser));",
          "293:   {",
          "294:     cmark_llist *tmp;",
          "295:     int i, table_columns = get_n_table_columns(parent_container);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "312:   if (!row) {",
          "314:       cmark_node_free(table_row_block);",
          "315:       return NULL;",
          "316:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "58ac1a2d3db1f8ec717d1a02966c7e80c5b9ad9e",
      "candidate_info": {
        "commit_hash": "58ac1a2d3db1f8ec717d1a02966c7e80c5b9ad9e",
        "repo": "gjtorikian/commonmarker",
        "commit_url": "https://github.com/gjtorikian/commonmarker/commit/58ac1a2d3db1f8ec717d1a02966c7e80c5b9ad9e",
        "files": [
          "ext/commonmarker/table.c"
        ],
        "message": "Manual backport of fixes from https://github.com/github/cmark-gfm/commit/b1687e6af1367c596ab75428b03af55666a66530 in order to fix GHSA-mc3g-88wq-6f4x.\n\nIn order to minimize potential breakage, and avoid upgrading this\nversion's cmark-gfm from 0.28.3.gfm.19 to 0.28.3.gfm.21, no attempt was\nmade to update `ext/commonmarker/cmark-upstream`.",
        "before_after_code_files": [
          "ext/commonmarker/table.c||ext/commonmarker/table.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "ext/commonmarker/table.c||ext/commonmarker/table.c"
          ],
          "candidate": [
            "ext/commonmarker/table.c||ext/commonmarker/table.c"
          ]
        }
      },
      "candidate_diff": {
        "ext/commonmarker/table.c||ext/commonmarker/table.c": [
          "File: ext/commonmarker/table.c -> ext/commonmarker/table.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "115:                                   int len) {",
          "116:   table_row *row = NULL;",
          "117:   bufsize_t cell_matched, pipe_matched, offset;",
          "119:   row = (table_row *)parser->mem->calloc(1, sizeof(table_row));",
          "120:   row->n_columns = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "118:   int int_overflow_abort = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "139:         --cell->start_offset;",
          "140:         ++cell->internal_offset;",
          "141:       }",
          "142:       row->n_columns += 1;",
          "143:       row->cells = cmark_llist_append(parser->mem, row->cells, cell);",
          "144:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "145:       if (row->n_columns == UINT16_MAX) {",
          "146:           int_overflow_abort = 1;",
          "147:           break;",
          "148:       }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "151:     }",
          "152:   } while ((cell_matched || pipe_matched) && offset < len);",
          "155:     free_table_row(parser->mem, row);",
          "156:     row = NULL;",
          "157:   }",
          "",
          "[Removed Lines]",
          "154:   if (offset != len || !row->n_columns) {",
          "",
          "[Added Lines]",
          "161:   if (offset != len || !row->n_columns || int_overflow_abort) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "192:                                input + cmark_parser_get_first_nonspace(parser),",
          "193:                                len - cmark_parser_get_first_nonspace(parser));",
          "195:   assert(marker_row);",
          "197:   if (header_row->n_columns != marker_row->n_columns) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "202:   if (!marker_row) {",
          "205:       free_table_row(parser->mem, marker_row);",
          "206:       cmark_arena_pop();",
          "207:       return parent_container;",
          "208:   }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "209:                                  len - cmark_parser_get_first_nonspace(parser));",
          "210:   }",
          "213:     free_table_row(parser->mem, header_row);",
          "214:     free_table_row(parser->mem, marker_row);",
          "215:     return parent_container;",
          "",
          "[Removed Lines]",
          "212:   if (!cmark_node_set_type(parent_container, CMARK_NODE_TABLE)) {",
          "",
          "[Added Lines]",
          "229:   if (!marker_row || !header_row || header_row->n_columns != marker_row->n_columns || !cmark_node_set_type(parent_container, CMARK_NODE_TABLE)) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "222:   set_n_table_columns(parent_container, header_row->n_columns);",
          "224:   uint8_t *alignments =",
          "226:   cmark_llist *it = marker_row->cells;",
          "227:   for (i = 0; it; it = it->next, ++i) {",
          "228:     node_cell *node = (node_cell *)it->data;",
          "",
          "[Removed Lines]",
          "225:       (uint8_t *)parser->mem->calloc(header_row->n_columns, sizeof(uint8_t));",
          "",
          "[Added Lines]",
          "244:       (uint8_t *)parser->mem->calloc(marker_row->n_columns, sizeof(uint8_t));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "291:   row = row_from_string(self, parser, input + cmark_parser_get_first_nonspace(parser),",
          "292:       len - cmark_parser_get_first_nonspace(parser));",
          "294:   {",
          "295:     cmark_llist *tmp;",
          "296:     int i, table_columns = get_n_table_columns(parent_container);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "313:   if (!row) {",
          "315:       cmark_node_free(table_row_block);",
          "316:       return NULL;",
          "317:   }",
          "",
          "---------------"
        ]
      }
    }
  ]
}