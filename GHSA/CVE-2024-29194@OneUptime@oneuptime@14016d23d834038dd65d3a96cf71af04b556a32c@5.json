{
  "cve_id": "CVE-2024-29194",
  "cve_desc": "OneUptime is a solution for monitoring and managing online services. The vulnerability lies in the improper validation of client-side stored data within the web application. Specifically, the is_master_admin key, stored in the local storage of the browser, can be manipulated by an attacker. By changing this key from false to true, the application grants administrative privileges to the user, without proper server-side validation.  This has been patched in 7.0.1815.",
  "repo": "OneUptime/oneuptime",
  "patch_hash": "14016d23d834038dd65d3a96cf71af04b556a32c",
  "patch_info": {
    "commit_hash": "14016d23d834038dd65d3a96cf71af04b556a32c",
    "repo": "OneUptime/oneuptime",
    "commit_url": "https://github.com/OneUptime/oneuptime/commit/14016d23d834038dd65d3a96cf71af04b556a32c",
    "files": [
      "CommonServer/Types/Database/ModelPermission.ts",
      "Model/Models/BillingInvoice.ts",
      "Model/Models/OnCallDutyPolicyEscalationRule.ts",
      "Model/Models/OnCallDutyPolicyEscalationRuleSchedule.ts",
      "Model/Models/OnCallDutyPolicyEscalationRuleTeam.ts",
      "Model/Models/OnCallDutyPolicyEscalationRuleUser.ts",
      "Model/Models/OnCallDutyPolicyExecutionLog.ts",
      "Model/Models/OnCallDutyPolicyExecutionLogTimeline.ts",
      "Model/Models/OnCallDutyPolicySchedule.ts",
      "Model/Models/OnCallDutyPolicyScheduleLayer.ts",
      "Model/Models/OnCallDutyPolicyScheduleLayerUser.ts",
      "Model/Models/User.ts"
    ],
    "message": "Add deletedByUserId property to several models",
    "before_after_code_files": [
      "CommonServer/Types/Database/ModelPermission.ts||CommonServer/Types/Database/ModelPermission.ts",
      "Model/Models/BillingInvoice.ts||Model/Models/BillingInvoice.ts",
      "Model/Models/OnCallDutyPolicyEscalationRule.ts||Model/Models/OnCallDutyPolicyEscalationRule.ts",
      "Model/Models/OnCallDutyPolicyEscalationRuleSchedule.ts||Model/Models/OnCallDutyPolicyEscalationRuleSchedule.ts",
      "Model/Models/OnCallDutyPolicyEscalationRuleTeam.ts||Model/Models/OnCallDutyPolicyEscalationRuleTeam.ts",
      "Model/Models/OnCallDutyPolicyEscalationRuleUser.ts||Model/Models/OnCallDutyPolicyEscalationRuleUser.ts",
      "Model/Models/OnCallDutyPolicyExecutionLog.ts||Model/Models/OnCallDutyPolicyExecutionLog.ts",
      "Model/Models/OnCallDutyPolicyExecutionLogTimeline.ts||Model/Models/OnCallDutyPolicyExecutionLogTimeline.ts",
      "Model/Models/OnCallDutyPolicySchedule.ts||Model/Models/OnCallDutyPolicySchedule.ts",
      "Model/Models/OnCallDutyPolicyScheduleLayer.ts||Model/Models/OnCallDutyPolicyScheduleLayer.ts",
      "Model/Models/OnCallDutyPolicyScheduleLayerUser.ts||Model/Models/OnCallDutyPolicyScheduleLayerUser.ts",
      "Model/Models/User.ts||Model/Models/User.ts"
    ]
  },
  "patch_diff": {
    "CommonServer/Types/Database/ModelPermission.ts||CommonServer/Types/Database/ModelPermission.ts": [
      "File: CommonServer/Types/Database/ModelPermission.ts -> CommonServer/Types/Database/ModelPermission.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "39: import ColumnBillingAccessControl from 'Common/Types/BaseDatabase/ColumnBillingAccessControl';",
      "40: import DatabaseCommonInteractionPropsUtil from 'Common/Types/BaseDatabase/DatabaseCommonInteractionPropsUtil';",
      "41: import Includes from 'Common/Types/BaseDatabase/Includes';",
      "43: export interface CheckReadPermissionType<TBaseModel extends BaseModel> {",
      "44:     query: Query<TBaseModel>;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "42: import UserModel from 'Common/Models/UserModel';",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "295:                 props",
      "296:             );",
      "298:             if (!props.isMultiTenantRequest) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "301:             query = await this.addUserScopeToQuery(modelType, query, props);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "854:         return query;",
      "855:     }",
      "857:     private static async addTenantScopeToQuery<TBaseModel extends BaseModel>(",
      "858:         modelType: { new (): TBaseModel },",
      "859:         query: Query<TBaseModel>,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "862:     private static async addUserScopeToQuery<TBaseModel extends BaseModel>(",
      "863:         modelType: { new (): TBaseModel },",
      "864:         query: Query<TBaseModel>,",
      "865:         props: DatabaseCommonInteractionProps",
      "866:     ): Promise<Query<TBaseModel>> {",
      "867:         const model: BaseModel = new modelType();",
      "869:         if (model instanceof UserModel) {",
      "870:             if (props.userId) {",
      "871:                 (query as any)['_id'] = props.userId;",
      "872:             } else if (!props.isRoot && !props.isMasterAdmin) {",
      "873:                 throw new NotAuthorizedException(",
      "874:                     `You do not have permissions to query on - ${model.singularName}.`",
      "875:                 );",
      "876:             }",
      "877:         }",
      "879:         return query;",
      "880:     }",
      "",
      "---------------"
    ],
    "Model/Models/BillingInvoice.ts||Model/Models/BillingInvoice.ts": [
      "File: Model/Models/BillingInvoice.ts -> Model/Models/BillingInvoice.ts"
    ],
    "Model/Models/OnCallDutyPolicyEscalationRule.ts||Model/Models/OnCallDutyPolicyEscalationRule.ts": [
      "File: Model/Models/OnCallDutyPolicyEscalationRule.ts -> Model/Models/OnCallDutyPolicyEscalationRule.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "355:     @JoinColumn({ name: 'deletedByUserId' })",
      "356:     public deletedByUser?: User = undefined;",
      "358:     @ColumnAccessControl({",
      "359:         create: [",
      "360:             Permission.ProjectOwner,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "358:     @ColumnAccessControl({",
      "359:         create: [],",
      "360:         read: [],",
      "361:         update: [],",
      "362:     })",
      "363:     @TableColumn({",
      "364:         type: TableColumnType.ObjectID,",
      "365:         title: 'Deleted by User ID',",
      "366:         description:",
      "367:             'User ID who deleted this object (if this object was deleted by a User)',",
      "368:     })",
      "369:     @Column({",
      "370:         type: ColumnType.ObjectID,",
      "371:         nullable: true,",
      "372:         transformer: ObjectID.getDatabaseTransformer(),",
      "373:     })",
      "374:     public deletedByUserId?: ObjectID = undefined;",
      "",
      "---------------"
    ],
    "Model/Models/OnCallDutyPolicyEscalationRuleSchedule.ts||Model/Models/OnCallDutyPolicyEscalationRuleSchedule.ts": [
      "File: Model/Models/OnCallDutyPolicyEscalationRuleSchedule.ts -> Model/Models/OnCallDutyPolicyEscalationRuleSchedule.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "420:     )",
      "421:     @JoinColumn({ name: 'deletedByUserId' })",
      "422:     public deletedByUser?: User = undefined;",
      "423: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "425:     @ColumnAccessControl({",
      "426:         create: [],",
      "427:         read: [],",
      "428:         update: [],",
      "429:     })",
      "430:     @TableColumn({",
      "431:         type: TableColumnType.ObjectID,",
      "432:         title: 'Deleted by User ID',",
      "433:         description:",
      "434:             'User ID who deleted this object (if this object was deleted by a User)',",
      "435:     })",
      "436:     @Column({",
      "437:         type: ColumnType.ObjectID,",
      "438:         nullable: true,",
      "439:         transformer: ObjectID.getDatabaseTransformer(),",
      "440:     })",
      "441:     public deletedByUserId?: ObjectID = undefined;",
      "",
      "---------------"
    ],
    "Model/Models/OnCallDutyPolicyEscalationRuleTeam.ts||Model/Models/OnCallDutyPolicyEscalationRuleTeam.ts": [
      "File: Model/Models/OnCallDutyPolicyEscalationRuleTeam.ts -> Model/Models/OnCallDutyPolicyEscalationRuleTeam.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "418:     )",
      "419:     @JoinColumn({ name: 'deletedByUserId' })",
      "420:     public deletedByUser?: User = undefined;",
      "421: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "422:     @ColumnAccessControl({",
      "423:         create: [],",
      "424:         read: [],",
      "425:         update: [],",
      "426:     })",
      "427:     @TableColumn({",
      "428:         type: TableColumnType.ObjectID,",
      "429:         title: 'Deleted by User ID',",
      "430:         description:",
      "431:             'User ID who deleted this object (if this object was deleted by a User)',",
      "432:     })",
      "433:     @Column({",
      "434:         type: ColumnType.ObjectID,",
      "435:         nullable: true,",
      "436:         transformer: ObjectID.getDatabaseTransformer(),",
      "437:     })",
      "438:     public deletedByUserId?: ObjectID = undefined;",
      "",
      "---------------"
    ],
    "Model/Models/OnCallDutyPolicyEscalationRuleUser.ts||Model/Models/OnCallDutyPolicyEscalationRuleUser.ts": [
      "File: Model/Models/OnCallDutyPolicyEscalationRuleUser.ts -> Model/Models/OnCallDutyPolicyEscalationRuleUser.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "417:     )",
      "418:     @JoinColumn({ name: 'deletedByUserId' })",
      "419:     public deletedByUser?: User = undefined;",
      "420: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "421:     @ColumnAccessControl({",
      "422:         create: [],",
      "423:         read: [],",
      "424:         update: [],",
      "425:     })",
      "426:     @TableColumn({",
      "427:         type: TableColumnType.ObjectID,",
      "428:         title: 'Deleted by User ID',",
      "429:         description:",
      "430:             'User ID who deleted this object (if this object was deleted by a User)',",
      "431:     })",
      "432:     @Column({",
      "433:         type: ColumnType.ObjectID,",
      "434:         nullable: true,",
      "435:         transformer: ObjectID.getDatabaseTransformer(),",
      "436:     })",
      "437:     public deletedByUserId?: ObjectID = undefined;",
      "",
      "---------------"
    ],
    "Model/Models/OnCallDutyPolicyExecutionLog.ts||Model/Models/OnCallDutyPolicyExecutionLog.ts": [
      "File: Model/Models/OnCallDutyPolicyExecutionLog.ts -> Model/Models/OnCallDutyPolicyExecutionLog.ts"
    ],
    "Model/Models/OnCallDutyPolicyExecutionLogTimeline.ts||Model/Models/OnCallDutyPolicyExecutionLogTimeline.ts": [
      "File: Model/Models/OnCallDutyPolicyExecutionLogTimeline.ts -> Model/Models/OnCallDutyPolicyExecutionLogTimeline.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "708:         unique: false,",
      "709:     })",
      "710:     public acknowledgedAt?: Date = undefined;",
      "711: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "712:     @ColumnAccessControl({",
      "713:         create: [],",
      "714:         read: [],",
      "715:         update: [],",
      "716:     })",
      "717:     @TableColumn({",
      "718:         type: TableColumnType.ObjectID,",
      "719:         title: 'Deleted by User ID',",
      "720:         description:",
      "721:             'User ID who deleted this object (if this object was deleted by a User)',",
      "722:     })",
      "723:     @Column({",
      "724:         type: ColumnType.ObjectID,",
      "725:         nullable: true,",
      "726:         transformer: ObjectID.getDatabaseTransformer(),",
      "727:     })",
      "728:     public deletedByUserId?: ObjectID = undefined;",
      "",
      "---------------"
    ],
    "Model/Models/OnCallDutyPolicySchedule.ts||Model/Models/OnCallDutyPolicySchedule.ts": [
      "File: Model/Models/OnCallDutyPolicySchedule.ts -> Model/Models/OnCallDutyPolicySchedule.ts"
    ],
    "Model/Models/OnCallDutyPolicyScheduleLayer.ts||Model/Models/OnCallDutyPolicyScheduleLayer.ts": [
      "File: Model/Models/OnCallDutyPolicyScheduleLayer.ts -> Model/Models/OnCallDutyPolicyScheduleLayer.ts"
    ],
    "Model/Models/OnCallDutyPolicyScheduleLayerUser.ts||Model/Models/OnCallDutyPolicyScheduleLayerUser.ts": [
      "File: Model/Models/OnCallDutyPolicyScheduleLayerUser.ts -> Model/Models/OnCallDutyPolicyScheduleLayerUser.ts"
    ],
    "Model/Models/User.ts||Model/Models/User.ts": [
      "File: Model/Models/User.ts -> Model/Models/User.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "32: @AllowAccessIfSubscriptionIsUnpaid()",
      "33: @TableAccessControl({",
      "34:     create: [Permission.Public],",
      "40:     delete: [Permission.CurrentUser],",
      "41:     update: [Permission.CurrentUser],",
      "42: })",
      "",
      "[Removed Lines]",
      "35:     read: [",
      "36:         Permission.CurrentUser,",
      "37:         Permission.ProjectAdmin,",
      "38:         Permission.ProjectOwner,",
      "39:     ],",
      "",
      "[Added Lines]",
      "35:     read: [Permission.CurrentUser],",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "56: class User extends UserModel {",
      "57:     @ColumnAccessControl({",
      "58:         create: [Permission.Public],",
      "64:         update: [Permission.CurrentUser],",
      "65:     })",
      "66:     @TableColumn({ type: TableColumnType.Name, canReadOnRelationQuery: true })",
      "",
      "[Removed Lines]",
      "59:         read: [",
      "60:             Permission.CurrentUser,",
      "61:             Permission.ProjectAdmin,",
      "62:             Permission.ProjectOwner,",
      "63:         ],",
      "",
      "[Added Lines]",
      "55:         read: [Permission.CurrentUser],",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "76:     @ColumnAccessControl({",
      "77:         create: [Permission.Public],",
      "84:         update: [Permission.CurrentUser],",
      "85:     })",
      "",
      "[Removed Lines]",
      "78:         read: [",
      "79:             Permission.CurrentUser,",
      "80:             Permission.ProjectAdmin,",
      "81:             Permission.ProjectOwner,",
      "82:         ],",
      "",
      "[Added Lines]",
      "70:         read: [Permission.CurrentUser],",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "248:     @ColumnAccessControl({",
      "249:         create: [],",
      "256:         update: [Permission.CurrentUser],",
      "257:     })",
      "",
      "[Removed Lines]",
      "250:         read: [",
      "251:             Permission.CurrentUser,",
      "252:             Permission.ProjectAdmin,",
      "253:             Permission.ProjectOwner,",
      "254:         ],",
      "",
      "[Added Lines]",
      "238:         read: [Permission.CurrentUser],",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "277:     @ColumnAccessControl({",
      "278:         create: [],",
      "285:         update: [Permission.CurrentUser],",
      "286:     })",
      "",
      "[Removed Lines]",
      "279:         read: [",
      "280:             Permission.CurrentUser,",
      "281:             Permission.ProjectAdmin,",
      "282:             Permission.ProjectOwner,",
      "283:         ],",
      "",
      "[Added Lines]",
      "263:         read: [Permission.CurrentUser],",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "298:     @ColumnAccessControl({",
      "299:         create: [],",
      "306:         update: [Permission.CurrentUser],",
      "307:     })",
      "",
      "[Removed Lines]",
      "300:         read: [",
      "301:             Permission.CurrentUser,",
      "302:             Permission.ProjectAdmin,",
      "303:             Permission.ProjectOwner,",
      "304:         ],",
      "",
      "[Added Lines]",
      "280:         read: [Permission.CurrentUser],",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "309:         isDefaultValueColumn: true,",
      "310:         required: true,",
      "311:         type: TableColumnType.Boolean,",
      "312:     })",
      "313:     @Column({",
      "314:         type: ColumnType.Boolean,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "288:         canReadOnRelationQuery: true,",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "425:     @ColumnAccessControl({",
      "426:         create: [],",
      "433:         update: [Permission.CurrentUser],",
      "434:     })",
      "",
      "[Removed Lines]",
      "427:         read: [",
      "428:             Permission.CurrentUser,",
      "429:             Permission.ProjectAdmin,",
      "430:             Permission.ProjectOwner,",
      "431:         ],",
      "",
      "[Added Lines]",
      "404:         read: [Permission.CurrentUser],",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "544:     @ColumnAccessControl({",
      "545:         create: [],",
      "552:         update: [Permission.CurrentUser],",
      "553:     })",
      "",
      "[Removed Lines]",
      "546:         read: [",
      "547:             Permission.CurrentUser,",
      "548:             Permission.ProjectAdmin,",
      "549:             Permission.ProjectOwner,",
      "550:         ],",
      "",
      "[Added Lines]",
      "519:         read: [Permission.CurrentUser],",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b94402525e32e17c069b1bc55db5b3a2b3314517",
      "candidate_info": {
        "commit_hash": "b94402525e32e17c069b1bc55db5b3a2b3314517",
        "repo": "OneUptime/oneuptime",
        "commit_url": "https://github.com/OneUptime/oneuptime/commit/b94402525e32e17c069b1bc55db5b3a2b3314517",
        "files": [
          "CommonUI/src/Components/Dropdown/Dropdown.tsx",
          "CommonUI/src/Components/Forms/Fields/FormField.tsx",
          "CommonUI/src/Components/Forms/Types/Field.ts",
          "CommonUI/src/Components/Toggle/Toggle.tsx",
          "Dashboard/src/Components/Form/Monitor/MonitorCriteriaInstance.tsx",
          "Dashboard/src/Components/Incident/IncidentsTable.tsx",
          "Dashboard/src/Pages/Monitor/View/Incidents.tsx"
        ],
        "message": "Add id prop to Dropdown, FormField, and Toggle components",
        "before_after_code_files": [
          "CommonUI/src/Components/Dropdown/Dropdown.tsx||CommonUI/src/Components/Dropdown/Dropdown.tsx",
          "CommonUI/src/Components/Forms/Fields/FormField.tsx||CommonUI/src/Components/Forms/Fields/FormField.tsx",
          "CommonUI/src/Components/Forms/Types/Field.ts||CommonUI/src/Components/Forms/Types/Field.ts",
          "CommonUI/src/Components/Toggle/Toggle.tsx||CommonUI/src/Components/Toggle/Toggle.tsx",
          "Dashboard/src/Components/Form/Monitor/MonitorCriteriaInstance.tsx||Dashboard/src/Components/Form/Monitor/MonitorCriteriaInstance.tsx",
          "Dashboard/src/Components/Incident/IncidentsTable.tsx||Dashboard/src/Components/Incident/IncidentsTable.tsx",
          "Dashboard/src/Pages/Monitor/View/Incidents.tsx||Dashboard/src/Pages/Monitor/View/Incidents.tsx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OneUptime/oneuptime/pull/1268"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "CommonUI/src/Components/Dropdown/Dropdown.tsx||CommonUI/src/Components/Dropdown/Dropdown.tsx": [
          "File: CommonUI/src/Components/Dropdown/Dropdown.tsx -> CommonUI/src/Components/Dropdown/Dropdown.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "5:     useEffect,",
          "6:     useState,",
          "7: } from 'react';",
          "9: export type DropdownValue = string | number | boolean;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8: import ObjectID from 'Common/Types/ObjectID';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "28:     isMultiSelect?: boolean;",
          "29:     tabIndex?: number | undefined;",
          "30:     error?: string | undefined;",
          "31: }",
          "33: const Dropdown: FunctionComponent<ComponentProps> = (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32:     id?: string | undefined;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "51:             return undefined;",
          "52:         }",
          "54:         if (",
          "55:             Array.isArray(value) &&",
          "56:             value.length > 0 &&",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56:         if(value instanceof ObjectID){",
          "57:             value = value.toString();",
          "58:         }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "115:     return (",
          "116:         <div",
          "117:             className={`${",
          "118:                 props.className ||",
          "119:                 'relative mt-2 mb-1 rounded-md w-full overflow-visible'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "123:             id={props.id}",
          "",
          "---------------"
        ],
        "CommonUI/src/Components/Forms/Fields/FormField.tsx||CommonUI/src/Components/Forms/Fields/FormField.tsx": [
          "File: CommonUI/src/Components/Forms/Fields/FormField.tsx -> CommonUI/src/Components/Forms/Fields/FormField.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "286:                                     ? props.error",
          "287:                                     : undefined",
          "288:                             }",
          "289:                             tabIndex={index}",
          "290:                             onChange={async (",
          "291:                                 value:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "289:                             id={props.field.id}",
          "",
          "---------------"
        ],
        "CommonUI/src/Components/Forms/Types/Field.ts||CommonUI/src/Components/Forms/Types/Field.ts": [
          "File: CommonUI/src/Components/Forms/Types/Field.ts -> CommonUI/src/Components/Forms/Types/Field.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "84:     defaultValue?: boolean | string | Date | undefined;",
          "85:     radioButtonOptions?: Array<RadioButton>;",
          "86:     footerElement?: ReactElement | undefined;",
          "87:     getCustomElement?: (",
          "88:         values: FormValues<TEntity>,",
          "89:         props: CustomElementProps",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "87:     id?: string | undefined;",
          "",
          "---------------"
        ],
        "CommonUI/src/Components/Toggle/Toggle.tsx||CommonUI/src/Components/Toggle/Toggle.tsx": [
          "File: CommonUI/src/Components/Toggle/Toggle.tsx -> CommonUI/src/Components/Toggle/Toggle.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: const Toggle: FunctionComponent<ComponentProps> = (",
          "21:     props: ComponentProps",
          "22: ): ReactElement => {",
          "25:     useEffect(() => {",
          "26:         if (props !== undefined) {",
          "",
          "[Removed Lines]",
          "23:     const [isChecked, setIsChecked] = useState<boolean>(props.initialValue || false);",
          "",
          "[Added Lines]",
          "23:     const [isChecked, setIsChecked] = useState<boolean>(",
          "24:         props.initialValue || false",
          "25:     );",
          "",
          "---------------"
        ],
        "Dashboard/src/Components/Form/Monitor/MonitorCriteriaInstance.tsx||Dashboard/src/Components/Form/Monitor/MonitorCriteriaInstance.tsx": [
          "File: Dashboard/src/Components/Form/Monitor/MonitorCriteriaInstance.tsx -> Dashboard/src/Components/Form/Monitor/MonitorCriteriaInstance.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "215:                     required={true}",
          "216:                 />",
          "217:                 <Radio",
          "227:                     options={filterConditionOptions}",
          "228:                     onChange={(",
          "229:                         value: DropdownValue | Array<DropdownValue> | null",
          "",
          "[Removed Lines]",
          "218:                     value={filterConditionOptions.find(",
          "219:                         (i: DropdownOption) => {",
          "220:                             return (",
          "221:                                 i.value ===",
          "222:                                 (monitorCriteriaInstance?.data",
          "223:                                     ?.filterCondition || FilterCondition.All)",
          "224:                             );",
          "225:                         }",
          "226:                     )}",
          "",
          "[Added Lines]",
          "218:                     value={filterConditionOptions.find((i: DropdownOption) => {",
          "219:                         return (",
          "220:                             i.value ===",
          "221:                             (monitorCriteriaInstance?.data?.filterCondition ||",
          "222:                                 FilterCondition.All)",
          "223:                         );",
          "224:                     })}",
          "",
          "---------------"
        ],
        "Dashboard/src/Components/Incident/IncidentsTable.tsx||Dashboard/src/Components/Incident/IncidentsTable.tsx": [
          "File: Dashboard/src/Components/Incident/IncidentsTable.tsx -> Dashboard/src/Components/Incident/IncidentsTable.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "210:                 isEditable={false}",
          "211:                 isCreateable={true}",
          "212:                 isViewable={true}",
          "214:                 cardProps={{",
          "215:                     title: props.title || 'Incidents',",
          "216:                     buttons: [",
          "",
          "[Removed Lines]",
          "213:                 createInitialValues={Object.keys(initialValuesForIncident).length > 0 ? initialValuesForIncident : props.createInitialValues}",
          "",
          "[Added Lines]",
          "213:                 createInitialValues={",
          "214:                     Object.keys(initialValuesForIncident).length > 0",
          "215:                         ? initialValuesForIncident",
          "216:                         : props.createInitialValues",
          "217:                 }",
          "",
          "---------------"
        ],
        "Dashboard/src/Pages/Monitor/View/Incidents.tsx||Dashboard/src/Pages/Monitor/View/Incidents.tsx": [
          "File: Dashboard/src/Pages/Monitor/View/Incidents.tsx -> Dashboard/src/Pages/Monitor/View/Incidents.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "19:                 viewPageRoute={Navigation.getCurrentRoute()}",
          "20:                 query={{",
          "21:                     projectId: DashboardNavigation.getProjectId()?.toString(),",
          "23:                 }}",
          "24:                 createInitialValues={{",
          "25:                     monitors: [modelId.toString()],",
          "",
          "[Removed Lines]",
          "22:                     monitors: [modelId.toString()]",
          "",
          "[Added Lines]",
          "21:                     monitors: [modelId.toString()],",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e7dd5adb2a3d71fc35065a5dcdd089913d00dde1",
      "candidate_info": {
        "commit_hash": "e7dd5adb2a3d71fc35065a5dcdd089913d00dde1",
        "repo": "OneUptime/oneuptime",
        "commit_url": "https://github.com/OneUptime/oneuptime/commit/e7dd5adb2a3d71fc35065a5dcdd089913d00dde1",
        "files": [
          "Ingestor/Utils/Criteria/EvaluateOverTime.ts",
          "Ingestor/Utils/Criteria/ServerMonitorCriteria.ts"
        ],
        "message": "Add EvaluateOverTime functionality to ServerMonitorCriteria",
        "before_after_code_files": [
          "Ingestor/Utils/Criteria/EvaluateOverTime.ts||Ingestor/Utils/Criteria/EvaluateOverTime.ts",
          "Ingestor/Utils/Criteria/ServerMonitorCriteria.ts||Ingestor/Utils/Criteria/ServerMonitorCriteria.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OneUptime/oneuptime/pull/1268"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Ingestor/Utils/Criteria/EvaluateOverTime.ts||Ingestor/Utils/Criteria/EvaluateOverTime.ts": [
          "File: Ingestor/Utils/Criteria/EvaluateOverTime.ts -> Ingestor/Utils/Criteria/EvaluateOverTime.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import GreaterThanOrEqual from \"Common/Types/BaseDatabase/GreaterThanOrEqual\";",
          "2: import { LIMIT_PER_PROJECT } from \"Common/Types/Database/LimitMax\";",
          "3: import OneUptimeDate from \"Common/Types/Date\";",
          "4: import { JSONObject } from \"Common/Types/JSON\";",
          "5: import { CheckOn, EvaluateOverTimeOptions, EvaluateOverTimeType } from \"Common/Types/Monitor/CriteriaFilter\";",
          "6: import ObjectID from \"Common/Types/ObjectID\";",
          "7: import MonitorMetricsByMinuteService from \"CommonServer/Services/MonitorMetricsByMinuteService\";",
          "8: import MonitorMetricsByMinute from \"Model/AnalyticsModels/MonitorMetricsByMinute\";",
          "10: export default class EvaluateOverTime {",
          "11:     public static async getValueOverTime(data: {",
          "12:         monitorId: ObjectID,",
          "13:         evaluateOverTimeOptions: EvaluateOverTimeOptions,",
          "14:         metricType: CheckOn,",
          "15:         miscData?: JSONObject | undefined,",
          "16:     }): Promise<number | Array<number>> {",
          "18:         const lastMinutesDate = OneUptimeDate.getSomeMinutesAgo(data.evaluateOverTimeOptions.timeValueInMinutes!);",
          "22:         const monitorMetricsItems: Array<MonitorMetricsByMinute> = await MonitorMetricsByMinuteService.findBy({",
          "23:             query: {",
          "24:                 createdAt: new GreaterThanOrEqual(lastMinutesDate),",
          "25:                 monitorId: data.monitorId,",
          "26:                 metricType: data.metricType,",
          "27:             },",
          "28:             limit: LIMIT_PER_PROJECT,",
          "29:             skip: 0,",
          "30:             props: {",
          "31:                 isRoot: true",
          "32:             },",
          "33:             select: {",
          "34:                 metricValue: true",
          "35:             }",
          "36:         })",
          "38:         const values: Array<number> = monitorMetricsItems.map((item: MonitorMetricsByMinute) => item.metricValue).filter((value: number | undefined) => value !== undefined) as Array<number>;",
          "40:         if(data.evaluateOverTimeOptions.evaluateOverTimeType === EvaluateOverTimeType.AnyValue || data.evaluateOverTimeOptions.evaluateOverTimeType === EvaluateOverTimeType.AllValues) {",
          "42:             return values;",
          "43:         }",
          "45:         return this.getValueByEvaluationType({",
          "46:             values: values,",
          "47:             evaluateOverTimeType: data.evaluateOverTimeOptions.evaluateOverTimeType!",
          "48:         });",
          "50:     }",
          "52:     private static getValueByEvaluationType(data: {",
          "53:         values: Array<number>,",
          "54:         evaluateOverTimeType: EvaluateOverTimeType,",
          "55:     }): number {",
          "56:         switch (data.evaluateOverTimeType) {",
          "57:             case EvaluateOverTimeType.Average:",
          "58:                 return this.getAverage(data.values);",
          "59:             case EvaluateOverTimeType.MaximumValue:",
          "60:                 return this.getMax(data.values);",
          "61:             case EvaluateOverTimeType.MunimumValue:",
          "62:                 return this.getMin(data.values);",
          "63:             case EvaluateOverTimeType.Sum:",
          "64:                 return this.getSum(data.values);",
          "65:             default:",
          "66:                 return 0;",
          "67:         }",
          "68:     }",
          "70:     private static getSum(values: number[]): number {",
          "72:         return values.reduce((a, b) => a + b, 0);",
          "73:     }",
          "75:     private static getMin(values: number[]): number {",
          "77:         return Math.min(...values);",
          "78:     }",
          "80:     private static getMax(values: number[]): number {",
          "82:         return Math.max(...values);",
          "83:     }",
          "85:     private static getAverage(values: number[]): number {",
          "87:         return this.getSum(values) / values.length;",
          "88:     }",
          "89: }",
          "",
          "---------------"
        ],
        "Ingestor/Utils/Criteria/ServerMonitorCriteria.ts||Ingestor/Utils/Criteria/ServerMonitorCriteria.ts": [
          "File: Ingestor/Utils/Criteria/ServerMonitorCriteria.ts -> Ingestor/Utils/Criteria/ServerMonitorCriteria.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: import Typeof from 'Common/Types/Typeof';",
          "11: import OneUptimeDate from 'Common/Types/Date';",
          "12: import ProbeMonitorResponse from 'Common/Types/Probe/ProbeMonitorResponse';",
          "14: export default class ServerMonitorCriteria {",
          "15:     public static async isMonitorInstanceCriteriaFilterMet(input: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13: import EvaluateOverTime from './EvaluateOverTime';",
          "14: import { JSONObject } from 'Common/Types/JSON';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "21:         let value: number | string | undefined = input.criteriaFilter.value;",
          "23:         if (",
          "24:             (input.dataToProcess as ServerMonitorResponse)",
          "25:                 .onlyCheckRequestReceivedAt",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26:         if(input.criteriaFilter.eveluateOverTime && input.criteriaFilter.evaluateOverTimeOptions) {",
          "27:             const overTimeValue: Array<number> | number = await EvaluateOverTime.getValueOverTime({",
          "28:                 monitorId: input.dataToProcess.monitorId!,",
          "29:                 evaluateOverTimeOptions: input.criteriaFilter.evaluateOverTimeOptions,",
          "30:                 metricType: input.criteriaFilter.checkOn,",
          "31:                 miscData: input.criteriaFilter.serverMonitorOptions as JSONObject",
          "32:             });",
          "35:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "324572d37dbf6d999ba3d1d647f4ad37726a3092",
      "candidate_info": {
        "commit_hash": "324572d37dbf6d999ba3d1d647f4ad37726a3092",
        "repo": "OneUptime/oneuptime",
        "commit_url": "https://github.com/OneUptime/oneuptime/commit/324572d37dbf6d999ba3d1d647f4ad37726a3092",
        "files": [
          "CommonServer/Utils/Probe/Criteria/APIRequestCriteria.ts",
          "CommonServer/Utils/Probe/Criteria/CompareCriteria.ts",
          "CommonServer/Utils/Probe/Criteria/EvaluateOverTime.ts",
          "CommonServer/Utils/Probe/Criteria/IncomingRequestCriteria.ts",
          "CommonServer/Utils/Probe/Criteria/ServerMonitorCriteria.ts",
          "CommonServer/Utils/Probe/ProbeMonitorResponse.ts",
          "Ingestor/API/Probe.ts"
        ],
        "message": "Update Probe.ts and delete EvaluateOverTime.ts",
        "before_after_code_files": [
          "Ingestor/Utils/Criteria/APIRequestCriteria.ts||CommonServer/Utils/Probe/Criteria/APIRequestCriteria.ts",
          "Ingestor/Utils/Criteria/CompareCriteria.ts||CommonServer/Utils/Probe/Criteria/CompareCriteria.ts",
          "Ingestor/Utils/Criteria/EvaluateOverTime.ts||CommonServer/Utils/Probe/Criteria/EvaluateOverTime.ts",
          "Ingestor/Utils/Criteria/IncomingRequestCriteria.ts||CommonServer/Utils/Probe/Criteria/IncomingRequestCriteria.ts",
          "Ingestor/Utils/Criteria/ServerMonitorCriteria.ts||CommonServer/Utils/Probe/Criteria/ServerMonitorCriteria.ts",
          "Ingestor/Utils/ProbeMonitorResponse.ts||CommonServer/Utils/Probe/ProbeMonitorResponse.ts",
          "Ingestor/API/Probe.ts||Ingestor/API/Probe.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OneUptime/oneuptime/pull/1268"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Ingestor/Utils/Criteria/APIRequestCriteria.ts||CommonServer/Utils/Probe/Criteria/APIRequestCriteria.ts": [
          "File: Ingestor/Utils/Criteria/APIRequestCriteria.ts -> CommonServer/Utils/Probe/Criteria/APIRequestCriteria.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: import {",
          "3:     CheckOn,",
          "4:     CriteriaFilter,",
          "",
          "[Removed Lines]",
          "1: import DataToProcess from '../../Types/DataToProcess';",
          "",
          "[Added Lines]",
          "1: import DataToProcess from '../../../../Ingestor/Types/DataToProcess';",
          "",
          "---------------"
        ],
        "Ingestor/Utils/Criteria/CompareCriteria.ts||CommonServer/Utils/Probe/Criteria/CompareCriteria.ts": [
          "File: Ingestor/Utils/Criteria/CompareCriteria.ts -> CommonServer/Utils/Probe/Criteria/CompareCriteria.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "5:     FilterType,",
          "6: } from 'Common/Types/Monitor/CriteriaFilter';",
          "7: import Typeof from 'Common/Types/Typeof';",
          "10: export default class CompareCriteria {",
          "11:     public static greaterThan(data: {",
          "",
          "[Removed Lines]",
          "8: import logger from 'CommonServer/Utils/Logger';",
          "",
          "[Added Lines]",
          "8: import logger from '../../../Utils/Logger';",
          "",
          "---------------"
        ],
        "Ingestor/Utils/Criteria/EvaluateOverTime.ts||CommonServer/Utils/Probe/Criteria/EvaluateOverTime.ts": [
          "File: Ingestor/Utils/Criteria/EvaluateOverTime.ts -> CommonServer/Utils/Probe/Criteria/EvaluateOverTime.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:     EvaluateOverTimeType,",
          "9: } from 'Common/Types/Monitor/CriteriaFilter';",
          "10: import ObjectID from 'Common/Types/ObjectID';",
          "13: import MonitorMetricsByMinute from 'Model/AnalyticsModels/MonitorMetricsByMinute';",
          "15: export default class EvaluateOverTime {",
          "",
          "[Removed Lines]",
          "11: import MonitorMetricsByMinuteService from 'CommonServer/Services/MonitorMetricsByMinuteService';",
          "12: import Query from 'CommonServer/Types/AnalyticsDatabase/Query';",
          "",
          "[Added Lines]",
          "11: import MonitorMetricsByMinuteService from '../../../Services/MonitorMetricsByMinuteService';",
          "12: import Query from '../../../Types/AnalyticsDatabase/Query';",
          "",
          "---------------"
        ],
        "Ingestor/Utils/Criteria/IncomingRequestCriteria.ts||CommonServer/Utils/Probe/Criteria/IncomingRequestCriteria.ts": [
          "File: Ingestor/Utils/Criteria/IncomingRequestCriteria.ts -> CommonServer/Utils/Probe/Criteria/IncomingRequestCriteria.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: import {",
          "3:     CheckOn,",
          "4:     CriteriaFilter,",
          "5:     FilterType,",
          "6: } from 'Common/Types/Monitor/CriteriaFilter';",
          "8: import Typeof from 'Common/Types/Typeof';",
          "9: import IncomingMonitorRequest from 'Common/Types/Monitor/IncomingMonitor/IncomingMonitorRequest';",
          "10: import { JSONObject } from 'Common/Types/JSON';",
          "",
          "[Removed Lines]",
          "1: import DataToProcess from '../../Types/DataToProcess';",
          "7: import logger from 'CommonServer/Utils/Logger';",
          "",
          "[Added Lines]",
          "1: import DataToProcess from '../../../../Ingestor/Types/DataToProcess';",
          "7: import logger from '../../../Utils/Logger';",
          "",
          "---------------"
        ],
        "Ingestor/Utils/Criteria/ServerMonitorCriteria.ts||CommonServer/Utils/Probe/Criteria/ServerMonitorCriteria.ts": [
          "File: Ingestor/Utils/Criteria/ServerMonitorCriteria.ts -> CommonServer/Utils/Probe/Criteria/ServerMonitorCriteria.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: import {",
          "3:     CheckOn,",
          "4:     CriteriaFilter,",
          "",
          "[Removed Lines]",
          "1: import DataToProcess from '../../Types/DataToProcess';",
          "",
          "[Added Lines]",
          "1: import DataToProcess from '../../../../Ingestor/Types/DataToProcess';",
          "",
          "---------------"
        ],
        "Ingestor/Utils/ProbeMonitorResponse.ts||CommonServer/Utils/Probe/ProbeMonitorResponse.ts": [
          "File: Ingestor/Utils/ProbeMonitorResponse.ts -> CommonServer/Utils/Probe/ProbeMonitorResponse.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: import ProbeApiIngestResponse from 'Common/Types/Probe/ProbeApiIngestResponse';",
          "13: import ProbeMonitorResponse from 'Common/Types/Probe/ProbeMonitorResponse';",
          "14: import Typeof from 'Common/Types/Typeof';",
          "19: import Incident from 'Model/Models/Incident';",
          "20: import Monitor from 'Model/Models/Monitor';",
          "21: import MonitorStatusTimeline from 'Model/Models/MonitorStatusTimeline';",
          "22: import ObjectID from 'Common/Types/ObjectID';",
          "23: import { JSONObject } from 'Common/Types/JSON';",
          "25: import OneUptimeDate from 'Common/Types/Date';",
          "26: import MonitorProbe from 'Model/Models/MonitorProbe';",
          "27: import IncidentStateTimeline from 'Model/Models/IncidentStateTimeline';",
          "29: import { LIMIT_PER_PROJECT } from 'Common/Types/Database/LimitMax';",
          "30: import Dictionary from 'Common/Types/Dictionary';",
          "31: import IncidentSeverity from 'Model/Models/IncidentSeverity';",
          "33: import SortOrder from 'Common/Types/BaseDatabase/SortOrder';",
          "34: import OnCallDutyPolicy from 'Model/Models/OnCallDutyPolicy';",
          "35: import IncomingMonitorRequest from 'Common/Types/Monitor/IncomingMonitor/IncomingMonitorRequest';",
          "36: import MonitorType from 'Common/Types/Monitor/MonitorType';",
          "38: import ServerMonitorResponse from 'Common/Types/Monitor/ServerMonitor/ServerMonitorResponse';",
          "39: import BasicInfrastructureMetrics from 'Common/Types/Infrastructure/BasicMetrics';",
          "40: import MonitorMetricsByMinute from 'Model/AnalyticsModels/MonitorMetricsByMinute';",
          "43: import ServerMonitorCriteria from './Criteria/ServerMonitorCriteria';",
          "44: import IncomingRequestCriteria from './Criteria/IncomingRequestCriteria';",
          "45: import APIRequestCriteria from './Criteria/APIRequestCriteria';",
          "",
          "[Removed Lines]",
          "15: import MonitorService from 'CommonServer/Services/MonitorService';",
          "16: import MonitorStatusTimelineService from 'CommonServer/Services/MonitorStatusTimelineService';",
          "17: import IncidentService from 'CommonServer/Services/IncidentService';",
          "18: import logger from 'CommonServer/Utils/Logger';",
          "24: import MonitorProbeService from 'CommonServer/Services/MonitorProbeService';",
          "28: import IncidentStateTimelineService from 'CommonServer/Services/IncidentStateTimelineService';",
          "32: import IncidentSeverityService from 'CommonServer/Services/IncidentSeverityService';",
          "37: import VMUtil from 'CommonServer/Utils/VM';",
          "41: import MonitorMetricsByMinuteService from 'CommonServer/Services/MonitorMetricsByMinuteService';",
          "42: import DataToProcess from '../Types/DataToProcess';",
          "",
          "[Added Lines]",
          "15: import MonitorService from '../../Services/MonitorService';",
          "16: import MonitorStatusTimelineService from '../../Services/MonitorStatusTimelineService';",
          "17: import IncidentService from '../../Services/IncidentService';",
          "18: import logger from '../../Utils/Logger';",
          "24: import MonitorProbeService from '../../Services/MonitorProbeService';",
          "28: import IncidentStateTimelineService from '../../Services/IncidentStateTimelineService';",
          "32: import IncidentSeverityService from '../../Services/IncidentSeverityService';",
          "37: import VMUtil from '../../Utils/VM';",
          "41: import MonitorMetricsByMinuteService from '../../Services/MonitorMetricsByMinuteService';",
          "42: import DataToProcess from '../../../Ingestor/Types/DataToProcess';",
          "",
          "---------------"
        ],
        "Ingestor/API/Probe.ts||Ingestor/API/Probe.ts": [
          "File: Ingestor/API/Probe.ts -> Ingestor/API/Probe.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: import ProbeMonitorResponse from 'Common/Types/Probe/ProbeMonitorResponse';",
          "10: import ProbeApiIngestResponse from 'Common/Types/Probe/ProbeApiIngestResponse';",
          "11: import BadDataException from 'Common/Types/Exception/BadDataException';",
          "13: import JSONFunctions from 'Common/Types/JSONFunctions';",
          "14: import { DisableAutomaticIncidentCreation } from 'CommonServer/EnvironmentConfig';",
          "",
          "[Removed Lines]",
          "12: import ProbeMonitorResponseService from '../Utils/ProbeMonitorResponse';",
          "",
          "[Added Lines]",
          "12: import ProbeMonitorResponseService from 'CommonServer/Utils/Probe/ProbeMonitorResponse';",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "31fc399a5e6aecc7613d1dcfc7369ee4ea9172f4",
      "candidate_info": {
        "commit_hash": "31fc399a5e6aecc7613d1dcfc7369ee4ea9172f4",
        "repo": "OneUptime/oneuptime",
        "commit_url": "https://github.com/OneUptime/oneuptime/commit/31fc399a5e6aecc7613d1dcfc7369ee4ea9172f4",
        "files": [
          "CommonUI/src/Components/Navbar/NavBar.tsx",
          "Dashboard/src/Components/NavBar/NavBar.tsx"
        ],
        "message": "Refactor NavBar component",
        "before_after_code_files": [
          "CommonUI/src/Components/Navbar/NavBar.tsx||CommonUI/src/Components/Navbar/NavBar.tsx",
          "Dashboard/src/Components/NavBar/NavBar.tsx||Dashboard/src/Components/NavBar/NavBar.tsx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OneUptime/oneuptime/pull/1268"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "CommonUI/src/Components/Navbar/NavBar.tsx||CommonUI/src/Components/Navbar/NavBar.tsx": [
          "File: CommonUI/src/Components/Navbar/NavBar.tsx -> CommonUI/src/Components/Navbar/NavBar.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:     const className: string =",
          "15:         props.className || 'flex text-center lg:space-x-8 lg:py-2 bg-white ';",
          "25: };",
          "27: export default Navbar;",
          "",
          "[Removed Lines]",
          "17:     return <nav className='flex justify-between'>",
          "18:         <div className={className}>",
          "19:             {props.children}",
          "20:         </div>",
          "21:         <div className={className}>",
          "22:             {props.rightElement}",
          "23:         </div>",
          "24:     </nav>;",
          "",
          "[Added Lines]",
          "17:     return (",
          "18:         <nav className=\"flex justify-between\">",
          "19:             <div className={className}>{props.children}</div>",
          "20:             <div className={className}>{props.rightElement}</div>",
          "21:         </nav>",
          "22:     );",
          "",
          "---------------"
        ],
        "Dashboard/src/Components/NavBar/NavBar.tsx||Dashboard/src/Components/NavBar/NavBar.tsx": [
          "File: Dashboard/src/Components/NavBar/NavBar.tsx -> Dashboard/src/Components/NavBar/NavBar.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:     }",
          "59:     return (",
          "68:             <NavBarItem",
          "69:                 title=\"Home\"",
          "70:                 icon={IconProp.Home}",
          "",
          "[Removed Lines]",
          "60:         <NavBar rightElement={<NavBarItem",
          "61:             title=\"User Settings\"",
          "62:             route={RouteUtil.populateRouteParams(",
          "63:                 RouteMap[PageMap.USER_SETTINGS] as Route",
          "64:             )}",
          "65:             activeRoute={RouteMap[PageMap.USER_SETTINGS]}",
          "66:             icon={IconProp.User}",
          "67:         />}>",
          "",
          "[Added Lines]",
          "60:         <NavBar",
          "61:             rightElement={",
          "62:                 <NavBarItem",
          "63:                     title=\"User Settings\"",
          "64:                     route={RouteUtil.populateRouteParams(",
          "65:                         RouteMap[PageMap.USER_SETTINGS] as Route",
          "66:                     )}",
          "67:                     activeRoute={RouteMap[PageMap.USER_SETTINGS]}",
          "68:                     icon={IconProp.User}",
          "69:                 />",
          "70:             }",
          "71:         >",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "147:                                 description=\"Manage your scheduled maintenance events.\"",
          "148:                                 route={RouteUtil.populateRouteParams(",
          "149:                                     RouteMap[",
          "151:                                     ] as Route",
          "152:                                 )}",
          "153:                                 icon={IconProp.Clock}",
          "",
          "[Removed Lines]",
          "150:                                     PageMap.SCHEDULED_MAINTENANCE_EVENTS",
          "",
          "[Added Lines]",
          "154:                                         PageMap.SCHEDULED_MAINTENANCE_EVENTS",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "859aca85a70b5eb287effc29d9c848a49af0727e",
      "candidate_info": {
        "commit_hash": "859aca85a70b5eb287effc29d9c848a49af0727e",
        "repo": "OneUptime/oneuptime",
        "commit_url": "https://github.com/OneUptime/oneuptime/commit/859aca85a70b5eb287effc29d9c848a49af0727e",
        "files": [
          "CommonUI/src/Components/Dropdown/Dropdown.tsx",
          "CommonUI/src/Components/Forms/BasicForm.tsx",
          "Dashboard/src/Components/Form/Monitor/MonitorCriteriaIncidentForm.tsx"
        ],
        "message": "Fix dropdown value comparison bug",
        "before_after_code_files": [
          "CommonUI/src/Components/Dropdown/Dropdown.tsx||CommonUI/src/Components/Dropdown/Dropdown.tsx",
          "CommonUI/src/Components/Forms/BasicForm.tsx||CommonUI/src/Components/Forms/BasicForm.tsx",
          "Dashboard/src/Components/Form/Monitor/MonitorCriteriaIncidentForm.tsx||Dashboard/src/Components/Form/Monitor/MonitorCriteriaIncidentForm.tsx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OneUptime/oneuptime/pull/1268"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "CommonUI/src/Components/Dropdown/Dropdown.tsx||CommonUI/src/Components/Dropdown/Dropdown.tsx": [
          "File: CommonUI/src/Components/Dropdown/Dropdown.tsx -> CommonUI/src/Components/Dropdown/Dropdown.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:             return undefined;",
          "54:         }",
          "57:             value = value.toString();",
          "58:         }",
          "",
          "[Removed Lines]",
          "56:         if(value instanceof ObjectID){",
          "",
          "[Added Lines]",
          "56:         if (value instanceof ObjectID) {",
          "",
          "---------------"
        ],
        "CommonUI/src/Components/Forms/BasicForm.tsx||CommonUI/src/Components/Forms/BasicForm.tsx": [
          "File: CommonUI/src/Components/Forms/BasicForm.tsx -> CommonUI/src/Components/Forms/BasicForm.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: import { JSONObject, JSONValue } from 'Common/Types/JSON';",
          "17: import FormFieldSchemaType from './Types/FormFieldSchemaType';",
          "18: import Alert, { AlertType } from '../Alerts/Alert';",
          "20: import OneUptimeDate from 'Common/Types/Date';",
          "21: import HashedString from 'Common/Types/HashedString';",
          "22: import Typeof from 'Common/Types/Typeof';",
          "",
          "[Removed Lines]",
          "19: import { DropdownOption } from '../Dropdown/Dropdown';",
          "",
          "[Added Lines]",
          "19: import { DropdownOption, DropdownValue } from '../Dropdown/Dropdown';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "33: import { FormikErrors, FormikProps } from 'formik';",
          "34: import { VoidFunction } from 'Common/Types/FunctionTypes';",
          "35: import GenericObject from 'Common/Types/GenericObject';",
          "37: export type FormProps<T> = FormikProps<T>;",
          "38: export type FormErrors<T> = FormikErrors<T>;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36: import ObjectID from 'Common/Types/ObjectID';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "455:                     const dropdownOption: DropdownOption | undefined =",
          "456:                         field.dropdownOptions?.find(",
          "457:                             (option: DropdownOption) => {",
          "461:                             }",
          "462:                         );",
          "",
          "[Removed Lines]",
          "458:                                 return (",
          "459:                                     option.value === (values as any)[fieldName]",
          "460:                                 );",
          "",
          "[Added Lines]",
          "459:                                 let valueToCompare: DropdownValue = (",
          "460:                                     values as any",
          "461:                                 )[fieldName];",
          "463:                                 if (",
          "464:                                     (valueToCompare as any) instanceof ObjectID",
          "465:                                 ) {",
          "466:                                     valueToCompare = valueToCompare.toString();",
          "467:                                 }",
          "469:                                 return option.value === valueToCompare;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "472:                     const dropdownOptions: Array<DropdownOption> =",
          "473:                         field.dropdownOptions?.filter(",
          "474:                             (option: DropdownOption) => {",
          "477:                                 );",
          "478:                             }",
          "479:                         ) || [];",
          "",
          "[Removed Lines]",
          "475:                                 return (values as any)[fieldName].includes(",
          "476:                                     option.value",
          "",
          "[Added Lines]",
          "484:                                 let valueToCompare: Array<DropdownValue> = [",
          "485:                                     ...(values as any)[fieldName],",
          "486:                                 ];",
          "488:                                 valueToCompare = valueToCompare.map(",
          "489:                                     (item: DropdownValue) => {",
          "490:                                         if ((item as any) instanceof ObjectID) {",
          "491:                                             return item.toString();",
          "492:                                         }",
          "494:                                         return item;",
          "495:                                     }",
          "498:                                 return valueToCompare.includes(option.value);",
          "",
          "---------------"
        ],
        "Dashboard/src/Components/Form/Monitor/MonitorCriteriaIncidentForm.tsx||Dashboard/src/Components/Form/Monitor/MonitorCriteriaIncidentForm.tsx": [
          "File: Dashboard/src/Components/Form/Monitor/MonitorCriteriaIncidentForm.tsx -> Dashboard/src/Components/Form/Monitor/MonitorCriteriaIncidentForm.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:             <BasicForm",
          "24:                 modelType={Incident}",
          "25:                 hideSubmitButton={true}",
          "29:                 onChange={(values: FormValues<CriteriaIncident>) => {",
          "30:                     props.onChange &&",
          "31:                         props.onChange(values as CriteriaIncident);",
          "",
          "[Removed Lines]",
          "26:                 initialValues={",
          "27:                     props.initialValue",
          "28:                 }",
          "",
          "[Added Lines]",
          "26:                 initialValues={props.initialValue}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "66:                         dropdownOptions: props.incidentSeverityDropdownOptions,",
          "67:                         required: true,",
          "68:                         placeholder: 'Incident Severity',",
          "69:                     },",
          "70:                     {",
          "71:                         field: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67:                         id: 'incident-severity',",
          "",
          "---------------"
        ]
      }
    }
  ]
}