{
  "cve_id": "CVE-2024-10846",
  "cve_desc": "The compose-go library component in versions v2.10-v2.4.0 allows an authorized user who sends malicious YAML payloads to cause the compose-go to consume excessive amount of Memory and CPU cycles while parsing YAML, such as used by Docker Compose from versions  v2.27.0 to v2.29.7 included",
  "repo": "docker/compose",
  "patch_hash": "d239f0f3187a2ed5404c61f83bd5e995c81600ff",
  "patch_info": {
    "commit_hash": "d239f0f3187a2ed5404c61f83bd5e995c81600ff",
    "repo": "docker/compose",
    "commit_url": "https://github.com/docker/compose/commit/d239f0f3187a2ed5404c61f83bd5e995c81600ff#diff-33ef32bf6c23acb95f5902d7097b7a1d5128ca061167ec0716715b0b9eeaa5f6R10",
    "files": [
      "cmd/compose/config.go",
      "go.mod",
      "go.sum",
      "pkg/compose/create.go",
      "pkg/e2e/container_name_test.go",
      "pkg/e2e/fixtures/container_name/compose.yaml"
    ],
    "message": "check container_name is not in use by another service we will create\n\nSigned-off-by: Nicolas De Loof <nicolas.deloof@gmail.com>",
    "before_after_code_files": [
      "cmd/compose/config.go||cmd/compose/config.go",
      "go.mod||go.mod",
      "go.sum||go.sum",
      "pkg/compose/create.go||pkg/compose/create.go",
      "pkg/e2e/container_name_test.go||pkg/e2e/container_name_test.go"
    ]
  },
  "patch_diff": {
    "cmd/compose/config.go||cmd/compose/config.go": [
      "File: cmd/compose/config.go -> cmd/compose/config.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "169:    return err",
      "170:   }",
      "172:   switch opts.Format {",
      "173:   case \"json\":",
      "174:    content, err = project.MarshalJSON()",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "172:   if !opts.noConsistency {",
      "173:    err := project.CheckContainerNameUnicity()",
      "174:    if err != nil {",
      "175:     return err",
      "176:    }",
      "177:   }",
      "",
      "---------------"
    ],
    "go.mod||go.mod": [
      "File: go.mod -> go.mod",
      "--- Hunk 1 ---",
      "[Context before]",
      "7:  github.com/Microsoft/go-winio v0.6.1",
      "8:  github.com/acarl005/stripansi v0.0.0-20180116102854-5a71ef0e047d",
      "9:  github.com/buger/goterm v1.0.4",
      "11:  github.com/containerd/console v1.0.4",
      "12:  github.com/containerd/containerd v1.7.13",
      "13:  github.com/davecgh/go-spew v1.1.1",
      "",
      "[Removed Lines]",
      "10:  github.com/compose-spec/compose-go/v2 v2.0.3-0.20240407191136-f388192b8a39",
      "",
      "[Added Lines]",
      "10:  github.com/compose-spec/compose-go/v2 v2.0.3-0.20240416141209-60aa6409b2c4",
      "",
      "---------------"
    ],
    "go.sum||go.sum": [
      "File: go.sum -> go.sum",
      "--- Hunk 1 ---",
      "[Context before]",
      "90: github.com/cncf/xds/go v0.0.0-20230607035331-e9ce68804cb4/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=",
      "91: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb h1:EDmT6Q9Zs+SbUoc7Ik9EfrFqcylYqgPZ9ANSbTAntnE=",
      "92: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb/go.mod h1:ZjrT6AXHbDs86ZSdt/osfBi5qfexBrKUdONk989Wnk4=",
      "95: github.com/containerd/cgroups v1.1.0 h1:v8rEWFl6EoqHB+swVNjVoCJE8o3jX7e8nqBGPLaDFBM=",
      "96: github.com/containerd/cgroups v1.1.0/go.mod h1:6ppBcbh/NOOUU+dMKrykgaBnK9lCIBxHqJDGwsa1mIw=",
      "97: github.com/containerd/console v1.0.4 h1:F2g4+oChYvBTsASRTz8NP6iIAi97J3TtSAsLbIFn4ro=",
      "",
      "[Removed Lines]",
      "93: github.com/compose-spec/compose-go/v2 v2.0.3-0.20240407191136-f388192b8a39 h1:ZUpnv0xA75X9gy9Y7hjJm51nflGbr+2URaLXBtEic7A=",
      "94: github.com/compose-spec/compose-go/v2 v2.0.3-0.20240407191136-f388192b8a39/go.mod h1:bEPizBkIojlQ20pi2vNluBa58tevvj0Y18oUSHPyfdc=",
      "",
      "[Added Lines]",
      "93: github.com/compose-spec/compose-go/v2 v2.0.3-0.20240416141209-60aa6409b2c4 h1:WYiZ9D0WBykHUJLlpt+w7NXX0hy+cQKKdVe7vmsNZvg=",
      "94: github.com/compose-spec/compose-go/v2 v2.0.3-0.20240416141209-60aa6409b2c4/go.mod h1:bEPizBkIojlQ20pi2vNluBa58tevvj0Y18oUSHPyfdc=",
      "",
      "---------------"
    ],
    "pkg/compose/create.go||pkg/compose/create.go": [
      "File: pkg/compose/create.go -> pkg/compose/create.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "77:   options.Services = project.ServiceNames()",
      "78:  }",
      "80:  var observedState Containers",
      "82:  if err != nil {",
      "83:   return err",
      "84:  }",
      "",
      "[Removed Lines]",
      "81:  observedState, err := s.getContainers(ctx, project.Name, oneOffInclude, true)",
      "",
      "[Added Lines]",
      "80:  err := project.CheckContainerNameUnicity()",
      "81:  if err != nil {",
      "82:   return err",
      "83:  }",
      "86:  observedState, err = s.getContainers(ctx, project.Name, oneOffInclude, true)",
      "",
      "---------------"
    ],
    "pkg/e2e/container_name_test.go||pkg/e2e/container_name_test.go": [
      "File: pkg/e2e/container_name_test.go -> pkg/e2e/container_name_test.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5:    Copyright 2022 Docker Compose CLI authors",
      "7:    Licensed under the Apache License, Version 2.0 (the \"License\");",
      "8:    you may not use this file except in compliance with the License.",
      "9:    You may obtain a copy of the License at",
      "11:        http://www.apache.org/licenses/LICENSE-2.0",
      "13:    Unless required by applicable law or agreed to in writing, software",
      "14:    distributed under the License is distributed on an \"AS IS\" BASIS,",
      "15:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
      "16:    See the License for the specific language governing permissions and",
      "17:    limitations under the License.",
      "20: package e2e",
      "22: import (",
      "23:  \"testing\"",
      "25:  \"gotest.tools/v3/icmd\"",
      "26: )",
      "28: func TestUpContainerNameConflict(t *testing.T) {",
      "29:  c := NewParallelCLI(t)",
      "30:  const projectName = \"e2e-container_name_conflict\"",
      "32:  t.Cleanup(func() {",
      "33:   c.RunDockerComposeCmd(t, \"--project-name\", projectName, \"down\")",
      "34:  })",
      "36:  res := c.RunDockerComposeCmdNoCheck(t, \"-f\", \"fixtures/container_name/compose.yaml\", \"--project-name\", projectName, \"up\")",
      "37:  res.Assert(t, icmd.Expected{ExitCode: 1, Err: `container name \"test\" is already in use`})",
      "39:  c.RunDockerComposeCmd(t, \"--project-name\", projectName, \"down\")",
      "40:  c.RunDockerComposeCmd(t, \"-f\", \"fixtures/container_name/compose.yaml\", \"--project-name\", projectName, \"up\", \"test\")",
      "42:  c.RunDockerComposeCmd(t, \"--project-name\", projectName, \"down\")",
      "43:  c.RunDockerComposeCmd(t, \"-f\", \"fixtures/container_name/compose.yaml\", \"--project-name\", projectName, \"up\", \"another_test\")",
      "44: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e67348222f31dea030d64b2e3dd45c65f5a1cd78",
      "candidate_info": {
        "commit_hash": "e67348222f31dea030d64b2e3dd45c65f5a1cd78",
        "repo": "docker/compose",
        "commit_url": "https://github.com/docker/compose/commit/e67348222f31dea030d64b2e3dd45c65f5a1cd78",
        "files": [
          "go.mod",
          "go.sum",
          "pkg/compose/build.go",
          "pkg/compose/convergence.go",
          "pkg/compose/plugins.go",
          "pkg/compose/pull.go"
        ],
        "message": "DRAFT external services plugin support\n\nSigned-off-by: Nicolas De Loof <nicolas.deloof@gmail.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum",
          "pkg/compose/build.go||pkg/compose/build.go",
          "pkg/compose/convergence.go||pkg/compose/convergence.go",
          "pkg/compose/plugins.go||pkg/compose/plugins.go",
          "pkg/compose/pull.go||pkg/compose/pull.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ],
          "candidate": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ]
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:  github.com/Microsoft/go-winio v0.6.2",
          "9:  github.com/acarl005/stripansi v0.0.0-20180116102854-5a71ef0e047d",
          "10:  github.com/buger/goterm v1.0.4",
          "12:  github.com/containerd/containerd/v2 v2.0.4",
          "13:  github.com/containerd/platforms v1.0.0-rc.1",
          "14:  github.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc",
          "",
          "[Removed Lines]",
          "11:  github.com/compose-spec/compose-go/v2 v2.4.10-0.20250319114556-312596f4c1fe",
          "",
          "[Added Lines]",
          "11:  github.com/compose-spec/compose-go/v2 v2.4.10-0.20250327151131-f48efd965e24",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "83: github.com/cloudflare/cfssl v0.0.0-20180223231731-4e2dcbde5004/go.mod h1:yMWuSON2oQp+43nFtAV/uvKQIFpSPerB57DCt9t8sSA=",
          "84: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb h1:EDmT6Q9Zs+SbUoc7Ik9EfrFqcylYqgPZ9ANSbTAntnE=",
          "85: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb/go.mod h1:ZjrT6AXHbDs86ZSdt/osfBi5qfexBrKUdONk989Wnk4=",
          "88: github.com/containerd/cgroups/v3 v3.0.5 h1:44na7Ud+VwyE7LIoJ8JTNQOa549a8543BmzaJHo6Bzo=",
          "89: github.com/containerd/cgroups/v3 v3.0.5/go.mod h1:SA5DLYnXO8pTGYiAHXz94qvLQTKfVM5GEVisn4jpins=",
          "90: github.com/containerd/console v1.0.4 h1:F2g4+oChYvBTsASRTz8NP6iIAi97J3TtSAsLbIFn4ro=",
          "",
          "[Removed Lines]",
          "86: github.com/compose-spec/compose-go/v2 v2.4.10-0.20250319114556-312596f4c1fe h1:gl5+6pDRe/b8tbqJOXvNOZWNQe4aFLymlMV0iqFp9GI=",
          "87: github.com/compose-spec/compose-go/v2 v2.4.10-0.20250319114556-312596f4c1fe/go.mod h1:6k5l/0TxCg0/2uLEhRVEsoBWBprS2uvZi32J7xub3lo=",
          "",
          "[Added Lines]",
          "86: github.com/compose-spec/compose-go/v2 v2.4.10-0.20250327151131-f48efd965e24 h1:dIo4KMeWqnbC/hcWm0kHf+AzEcgUdUpjO+1LEoEdhiI=",
          "87: github.com/compose-spec/compose-go/v2 v2.4.10-0.20250327151131-f48efd965e24/go.mod h1:vPlkN0i+0LjLf9rv52lodNMUTJF5YHVfHVGLLIP67NA=",
          "",
          "---------------"
        ],
        "pkg/compose/build.go||pkg/compose/build.go": [
          "File: pkg/compose/build.go -> pkg/compose/build.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "264: func (s *composeService) ensureImagesExists(ctx context.Context, project *types.Project, buildOpts *api.BuildOptions, quietPull bool) error {",
          "265:  for name, service := range project.Services {",
          "267:    return fmt.Errorf(\"invalid service %q. Must specify either image or build\", name)",
          "268:   }",
          "269:  }",
          "",
          "[Removed Lines]",
          "266:   if service.Image == \"\" && service.Build == nil {",
          "",
          "[Added Lines]",
          "266:   if service.External == nil && service.Image == \"\" && service.Build == nil {",
          "",
          "---------------"
        ],
        "pkg/compose/convergence.go||pkg/compose/convergence.go": [
          "File: pkg/compose/convergence.go -> pkg/compose/convergence.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "110: }",
          "112: func (c *convergence) ensureService(ctx context.Context, project *types.Project, service types.ServiceConfig, recreate string, inherit bool, timeout *time.Duration) error { //nolint:gocyclo",
          "113:  expected, err := getScale(service)",
          "114:  if err != nil {",
          "115:   return err",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "113:  if service.External != nil {",
          "114:   return c.service.runPlugin(ctx, project, service, \"create\")",
          "115:  }",
          "",
          "---------------"
        ],
        "pkg/compose/plugins.go||pkg/compose/plugins.go": [
          "File: pkg/compose/plugins.go -> pkg/compose/plugins.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2:    Copyright 2020 Docker Compose CLI authors",
          "4:    Licensed under the Apache License, Version 2.0 (the \"License\");",
          "5:    you may not use this file except in compliance with the License.",
          "6:    You may obtain a copy of the License at",
          "8:        http://www.apache.org/licenses/LICENSE-2.0",
          "10:    Unless required by applicable law or agreed to in writing, software",
          "11:    distributed under the License is distributed on an \"AS IS\" BASIS,",
          "12:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
          "13:    See the License for the specific language governing permissions and",
          "14:    limitations under the License.",
          "17: package compose",
          "19: import (",
          "20:  \"bufio\"",
          "21:  \"context\"",
          "22:  \"errors\"",
          "23:  \"fmt\"",
          "24:  \"os\"",
          "25:  \"os/exec\"",
          "26:  \"strings\"",
          "28:  \"github.com/compose-spec/compose-go/v2/types\"",
          "29:  \"github.com/docker/cli/cli-plugins/manager\"",
          "30:  \"github.com/docker/cli/cli-plugins/socket\"",
          "31:  \"github.com/spf13/cobra\"",
          "32:  \"go.opentelemetry.io/otel\"",
          "33:  \"go.opentelemetry.io/otel/propagation\"",
          "34:  \"golang.org/x/sync/errgroup\"",
          "35: )",
          "37: func (s *composeService) runPlugin(ctx context.Context, project *types.Project, service types.ServiceConfig, command string) error {",
          "38:  x := *service.External",
          "39:  if x.Type != \"model\" {",
          "40:   return fmt.Errorf(\"unsupported external service type %s\", x.Type)",
          "41:  }",
          "42:  plugin, err := manager.GetPlugin(x.Type, s.dockerCli, &cobra.Command{})",
          "43:  if err != nil {",
          "44:   return err",
          "45:  }",
          "47:  model, ok := x.Options[\"model\"]",
          "48:  if !ok {",
          "49:   return errors.New(\"model option is required\")",
          "50:  }",
          "51:  args := []string{\"pull\", model}",
          "52:  cmd := exec.CommandContext(ctx, plugin.Path, args...)",
          "54:  cmd.Env = filter(os.Environ(), manager.ReexecEnvvar)",
          "57:  server, err := socket.NewPluginServer(nil)",
          "58:  if err != nil {",
          "59:   defer server.Close() //nolint:errcheck",
          "60:   cmd.Cancel = server.Close",
          "61:   cmd.Env = replace(cmd.Env, socket.EnvKey, server.Addr().String())",
          "62:  }",
          "64:  cmd.Env = append(cmd.Env, fmt.Sprintf(\"DOCKER_CONTEXT=%s\", s.dockerCli.CurrentContext()))",
          "67:  carrier := propagation.MapCarrier{}",
          "68:  otel.GetTextMapPropagator().Inject(ctx, &carrier)",
          "69:  cmd.Env = append(cmd.Env, types.Mapping(carrier).Values()...)",
          "71:  var variables []string",
          "72:  eg := errgroup.Group{}",
          "73:  out, err := cmd.StdoutPipe()",
          "74:  if err != nil {",
          "75:   return err",
          "76:  }",
          "77:  cmd.Stderr = os.Stderr",
          "79:  err = cmd.Start()",
          "80:  if err != nil {",
          "81:   return err",
          "82:  }",
          "83:  eg.Go(cmd.Wait)",
          "85:  scanner := bufio.NewScanner(out)",
          "86:  scanner.Split(bufio.ScanLines)",
          "87:  for scanner.Scan() {",
          "88:   line := scanner.Text()",
          "89:   variables = append(variables, line)",
          "90:  }",
          "92:  err = eg.Wait()",
          "93:  if err != nil {",
          "94:   return err",
          "95:  }",
          "97:  variable := fmt.Sprintf(\"%s_URL\", strings.ToUpper(service.Name))",
          "99:  url := \"http://host.docker.internal:12434/engines/llama.cpp/v1/\"",
          "100:  for name, s := range project.Services {",
          "101:   if _, ok := s.DependsOn[service.Name]; ok {",
          "102:    s.Environment[variable] = &url",
          "103:    project.Services[name] = s",
          "104:   }",
          "105:  }",
          "106:  return nil",
          "107: }",
          "",
          "---------------"
        ],
        "pkg/compose/pull.go||pkg/compose/pull.go": [
          "File: pkg/compose/pull.go -> pkg/compose/pull.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "335: }",
          "337: func mustPull(service types.ServiceConfig, images map[string]api.ImageSummary) (bool, error) {",
          "338:  if service.Image == \"\" {",
          "339:   return false, nil",
          "340:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "338:  if service.External != nil {",
          "339:   return false, nil",
          "340:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f937e42aaf7d0ecc186c8abc229960e4e01c51b5",
      "candidate_info": {
        "commit_hash": "f937e42aaf7d0ecc186c8abc229960e4e01c51b5",
        "repo": "docker/compose",
        "commit_url": "https://github.com/docker/compose/commit/f937e42aaf7d0ecc186c8abc229960e4e01c51b5",
        "files": [
          "go.mod",
          "go.sum"
        ],
        "message": "Bump compose-go v2.0.0\n\nSigned-off-by: Nicolas De Loof <nicolas.deloof@gmail.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ],
          "candidate": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ]
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "6:  github.com/AlecAivazis/survey/v2 v2.3.7",
          "7:  github.com/Microsoft/go-winio v0.6.1",
          "8:  github.com/buger/goterm v1.0.4",
          "10:  github.com/containerd/console v1.0.3",
          "11:  github.com/containerd/containerd v1.7.12",
          "12:  github.com/davecgh/go-spew v1.1.1",
          "",
          "[Removed Lines]",
          "9:  github.com/compose-spec/compose-go/v2 v2.0.0-rc.8.0.20240228111658-a0507e98fe60",
          "",
          "[Added Lines]",
          "9:  github.com/compose-spec/compose-go/v2 v2.0.0",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "86: github.com/cncf/xds/go v0.0.0-20230607035331-e9ce68804cb4/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=",
          "87: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb h1:EDmT6Q9Zs+SbUoc7Ik9EfrFqcylYqgPZ9ANSbTAntnE=",
          "88: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb/go.mod h1:ZjrT6AXHbDs86ZSdt/osfBi5qfexBrKUdONk989Wnk4=",
          "91: github.com/containerd/cgroups v1.1.0 h1:v8rEWFl6EoqHB+swVNjVoCJE8o3jX7e8nqBGPLaDFBM=",
          "92: github.com/containerd/cgroups v1.1.0/go.mod h1:6ppBcbh/NOOUU+dMKrykgaBnK9lCIBxHqJDGwsa1mIw=",
          "93: github.com/containerd/console v1.0.3 h1:lIr7SlA5PxZyMV30bDW0MGbiOPXwc63yRuCP0ARubLw=",
          "",
          "[Removed Lines]",
          "89: github.com/compose-spec/compose-go/v2 v2.0.0-rc.8.0.20240228111658-a0507e98fe60 h1:NlkpaLBPFr05mNJWVMH7PP4L30gFG6k4z1QpypLUSh8=",
          "90: github.com/compose-spec/compose-go/v2 v2.0.0-rc.8.0.20240228111658-a0507e98fe60/go.mod h1:bEPizBkIojlQ20pi2vNluBa58tevvj0Y18oUSHPyfdc=",
          "",
          "[Added Lines]",
          "89: github.com/compose-spec/compose-go/v2 v2.0.0 h1:RLI8GmNxRLg759CzZITh/kGYZTYhEak121FaVYdXTC8=",
          "90: github.com/compose-spec/compose-go/v2 v2.0.0/go.mod h1:bEPizBkIojlQ20pi2vNluBa58tevvj0Y18oUSHPyfdc=",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "65fda188217d15a349b77c5bf1dbeea20d2699c6",
      "candidate_info": {
        "commit_hash": "65fda188217d15a349b77c5bf1dbeea20d2699c6",
        "repo": "docker/compose",
        "commit_url": "https://github.com/docker/compose/commit/65fda188217d15a349b77c5bf1dbeea20d2699c6",
        "files": [
          "go.mod",
          "go.sum",
          "pkg/compose/build.go",
          "pkg/compose/create.go"
        ],
        "message": "bump compose-go\n\nSigned-off-by: Nicolas De Loof <nicolas.deloof@gmail.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum",
          "pkg/compose/build.go||pkg/compose/build.go",
          "pkg/compose/create.go||pkg/compose/create.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod",
            "go.sum||go.sum",
            "pkg/compose/create.go||pkg/compose/create.go"
          ],
          "candidate": [
            "go.mod||go.mod",
            "go.sum||go.sum",
            "pkg/compose/create.go||pkg/compose/create.go"
          ]
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: require (",
          "6:  github.com/AlecAivazis/survey/v2 v2.3.6",
          "7:  github.com/buger/goterm v1.0.4",
          "9:  github.com/containerd/console v1.0.3",
          "10:  github.com/containerd/containerd v1.6.19",
          "11:  github.com/cucumber/godog v0.0.0-00010101000000-000000000000 // replaced; see replace for the actual version used",
          "",
          "[Removed Lines]",
          "8:  github.com/compose-spec/compose-go v1.13.2",
          "",
          "[Added Lines]",
          "8:  github.com/compose-spec/compose-go v1.13.3",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "92:  github.com/hashicorp/go-memdb v1.3.2 // indirect",
          "93:  github.com/hashicorp/golang-lru v0.5.4 // indirect",
          "94:  github.com/hashicorp/hcl v1.0.0 // indirect",
          "96:  github.com/inconshreveable/mousetrap v1.1.0 // indirect",
          "97:  github.com/jinzhu/gorm v1.9.11 // indirect",
          "98:  github.com/jonboulle/clockwork v0.4.0",
          "",
          "[Removed Lines]",
          "95:  github.com/imdario/mergo v0.3.14 // indirect",
          "",
          "[Added Lines]",
          "95:  github.com/imdario/mergo v0.3.15 // indirect",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "165: github.com/cncf/xds/go v0.0.0-20210922020428-25de7278fc84/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=",
          "166: github.com/cncf/xds/go v0.0.0-20211001041855-01bcc9b48dfe/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=",
          "167: github.com/cncf/xds/go v0.0.0-20211011173535-cb28da3451f1/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=",
          "170: github.com/containerd/cgroups v1.0.4 h1:jN/mbWBEaz+T1pi5OFtnkQ+8qnmEbAr1Oo1FRm5B0dA=",
          "171: github.com/containerd/console v1.0.3 h1:lIr7SlA5PxZyMV30bDW0MGbiOPXwc63yRuCP0ARubLw=",
          "172: github.com/containerd/console v1.0.3/go.mod h1:7LqA/THxQ86k76b8c/EMSiaJ3h1eZkMkXar0TQ1gf3U=",
          "",
          "[Removed Lines]",
          "168: github.com/compose-spec/compose-go v1.13.2 h1:FDfb5ddIpbGbxLRg5qjObOf5CrWbKnuHZ+zvpEdCqKc=",
          "169: github.com/compose-spec/compose-go v1.13.2/go.mod h1:SQfvBkB9u8bLhrj4RQP4I777SqzNLSl9/fNnfvOOjek=",
          "",
          "[Added Lines]",
          "168: github.com/compose-spec/compose-go v1.13.3 h1:6ap8P6WcCrRKKCufGwV43SIqr47Y2wnZncqIh7DwyU0=",
          "169: github.com/compose-spec/compose-go v1.13.3/go.mod h1:rsiZ8uaOHJYJemDBzTe9UBpaq5ZFVEOO4TxM2G3SJxk=",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "447: github.com/ianlancetaylor/demangle v0.0.0-20181102032728-5e5cf60278f6/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=",
          "448: github.com/ianlancetaylor/demangle v0.0.0-20200824232613-28f6c0f3b639/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=",
          "449: github.com/imdario/mergo v0.3.5/go.mod h1:2EnlNZ0deacrJVfApfmtdGgDfMuh/nq6Ok1EcJh5FfA=",
          "452: github.com/in-toto/in-toto-golang v0.5.0 h1:hb8bgwr0M2hGdDsLjkJ3ZqJ8JFLL/tgYdAxF/XEFBbY=",
          "453: github.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=",
          "454: github.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=",
          "",
          "[Removed Lines]",
          "450: github.com/imdario/mergo v0.3.14 h1:fOqeC1+nCuuk6PKQdg9YmosXX7Y7mHX6R/0ZldI9iHo=",
          "451: github.com/imdario/mergo v0.3.14/go.mod h1:WBLT9ZmE3lPoWsEzCh9LPo3TiwVN+ZKEjmz+hD27ysY=",
          "",
          "[Added Lines]",
          "450: github.com/imdario/mergo v0.3.15 h1:M8XP7IuFNsqUx6VPK2P9OSmsYsI/YFaGil0uD21V3dM=",
          "451: github.com/imdario/mergo v0.3.15/go.mod h1:WBLT9ZmE3lPoWsEzCh9LPo3TiwVN+ZKEjmz+hD27ysY=",
          "",
          "---------------"
        ],
        "pkg/compose/build.go||pkg/compose/build.go": [
          "File: pkg/compose/build.go -> pkg/compose/build.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "433:  return ret",
          "434: }",
          "437:  namedContexts := map[string]build.NamedContext{}",
          "440:  }",
          "441:  return namedContexts",
          "442: }",
          "",
          "[Removed Lines]",
          "436: func toBuildContexts(additionalContexts map[string]*string) map[string]build.NamedContext {",
          "438:  for name, buildContext := range additionalContexts {",
          "439:   namedContexts[name] = build.NamedContext{Path: *buildContext}",
          "",
          "[Added Lines]",
          "436: func toBuildContexts(additionalContexts types.Mapping) map[string]build.NamedContext {",
          "438:  for name, context := range additionalContexts {",
          "439:   namedContexts[name] = build.NamedContext{Path: context}",
          "",
          "---------------"
        ],
        "pkg/compose/create.go||pkg/compose/create.go": [
          "File: pkg/compose/create.go -> pkg/compose/create.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "659:  for _, b := range blkio.DeviceReadBps {",
          "660:   resources.BlkioDeviceReadBps = append(resources.BlkioDeviceReadBps, &blkiodev.ThrottleDevice{",
          "661:    Path: b.Path,",
          "663:   })",
          "664:  }",
          "665:  for _, b := range blkio.DeviceReadIOps {",
          "666:   resources.BlkioDeviceReadIOps = append(resources.BlkioDeviceReadIOps, &blkiodev.ThrottleDevice{",
          "667:    Path: b.Path,",
          "669:   })",
          "670:  }",
          "671:  for _, b := range blkio.DeviceWriteBps {",
          "672:   resources.BlkioDeviceWriteBps = append(resources.BlkioDeviceWriteBps, &blkiodev.ThrottleDevice{",
          "673:    Path: b.Path,",
          "675:   })",
          "676:  }",
          "677:  for _, b := range blkio.DeviceWriteIOps {",
          "678:   resources.BlkioDeviceWriteIOps = append(resources.BlkioDeviceWriteIOps, &blkiodev.ThrottleDevice{",
          "679:    Path: b.Path,",
          "681:   })",
          "682:  }",
          "683: }",
          "",
          "[Removed Lines]",
          "662:    Rate: b.Rate,",
          "668:    Rate: b.Rate,",
          "674:    Rate: b.Rate,",
          "680:    Rate: b.Rate,",
          "",
          "[Added Lines]",
          "662:    Rate: uint64(b.Rate),",
          "668:    Rate: uint64(b.Rate),",
          "674:    Rate: uint64(b.Rate),",
          "680:    Rate: uint64(b.Rate),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f51bc4cd0077988ec4799bd49f78e21a4d28e8e1",
      "candidate_info": {
        "commit_hash": "f51bc4cd0077988ec4799bd49f78e21a4d28e8e1",
        "repo": "docker/compose",
        "commit_url": "https://github.com/docker/compose/commit/f51bc4cd0077988ec4799bd49f78e21a4d28e8e1",
        "files": [
          "go.mod",
          "go.sum"
        ],
        "message": "bump compose-go to version v2.4.2\n\nSigned-off-by: Guillaume Lours <705411+glours@users.noreply.github.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ],
          "candidate": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ]
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  github.com/Microsoft/go-winio v0.6.2",
          "8:  github.com/acarl005/stripansi v0.0.0-20180116102854-5a71ef0e047d",
          "9:  github.com/buger/goterm v1.0.4",
          "11:  github.com/containerd/containerd v1.7.23",
          "12:  github.com/containerd/platforms v0.2.1",
          "13:  github.com/davecgh/go-spew v1.1.1",
          "",
          "[Removed Lines]",
          "10:  github.com/compose-spec/compose-go/v2 v2.4.1",
          "",
          "[Added Lines]",
          "10:  github.com/compose-spec/compose-go/v2 v2.4.2",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "85: github.com/cncf/xds/go v0.0.0-20240723142845-024c85f92f20/go.mod h1:W+zGtBO5Y1IgJhy4+A9GOqVhqLpfZi+vwmdNXUehLA8=",
          "86: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb h1:EDmT6Q9Zs+SbUoc7Ik9EfrFqcylYqgPZ9ANSbTAntnE=",
          "87: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb/go.mod h1:ZjrT6AXHbDs86ZSdt/osfBi5qfexBrKUdONk989Wnk4=",
          "90: github.com/containerd/cgroups v1.1.0 h1:v8rEWFl6EoqHB+swVNjVoCJE8o3jX7e8nqBGPLaDFBM=",
          "91: github.com/containerd/cgroups v1.1.0/go.mod h1:6ppBcbh/NOOUU+dMKrykgaBnK9lCIBxHqJDGwsa1mIw=",
          "92: github.com/containerd/console v1.0.4 h1:F2g4+oChYvBTsASRTz8NP6iIAi97J3TtSAsLbIFn4ro=",
          "",
          "[Removed Lines]",
          "88: github.com/compose-spec/compose-go/v2 v2.4.1 h1:tEg6Qn/9LZnKg42fZlFmxN4lxSqnCvsiG5TXnxzvI4c=",
          "89: github.com/compose-spec/compose-go/v2 v2.4.1/go.mod h1:lFN0DrMxIncJGYAXTfWuajfwj5haBJqrBkarHcnjJKc=",
          "",
          "[Added Lines]",
          "88: github.com/compose-spec/compose-go/v2 v2.4.2 h1:RaZv+ZKZVNmxi4Cww1EKiJRLSZLiqVxIqhLUdH92dz4=",
          "89: github.com/compose-spec/compose-go/v2 v2.4.2/go.mod h1:lFN0DrMxIncJGYAXTfWuajfwj5haBJqrBkarHcnjJKc=",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f79c28168bf6a95ea0cbd1c298f4a0ff4c3ac36b",
      "candidate_info": {
        "commit_hash": "f79c28168bf6a95ea0cbd1c298f4a0ff4c3ac36b",
        "repo": "docker/compose",
        "commit_url": "https://github.com/docker/compose/commit/f79c28168bf6a95ea0cbd1c298f4a0ff4c3ac36b",
        "files": [
          "go.mod",
          "pkg/compose/compose.go",
          "pkg/progress/writer.go"
        ],
        "message": "Remove `console.Terminal` check and use `IsTerminal` from `streams.Out`\n\ndocker/cli v27 changed the return value of `Err()` to `streams.Out`\nwhich made the typecheck for `console.File` fail.\n\nThe check is no longer needed due to the `IsTerminal` method present in\n`streams.Out` which also has a special handling for Windows console.\n\nSigned-off-by: Pawe\u0142 Gronowski <pawel.gronowski@docker.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "pkg/compose/compose.go||pkg/compose/compose.go",
          "pkg/progress/writer.go||pkg/progress/writer.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod"
          ],
          "candidate": [
            "go.mod||go.mod"
          ]
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:  github.com/acarl005/stripansi v0.0.0-20180116102854-5a71ef0e047d",
          "9:  github.com/buger/goterm v1.0.4",
          "10:  github.com/compose-spec/compose-go/v2 v2.1.3",
          "12:  github.com/containerd/containerd v1.7.18",
          "13:  github.com/davecgh/go-spew v1.1.1",
          "14:  github.com/distribution/reference v0.6.0",
          "",
          "[Removed Lines]",
          "11:  github.com/containerd/console v1.0.4",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "81:  github.com/beorn7/perks v1.0.1 // indirect",
          "82:  github.com/cenkalti/backoff/v4 v4.2.1 // indirect",
          "83:  github.com/cespare/xxhash/v2 v2.2.0 // indirect",
          "84:  github.com/containerd/continuity v0.4.3 // indirect",
          "85:  github.com/containerd/errdefs v0.1.0 // indirect",
          "86:  github.com/containerd/log v0.1.0 // indirect",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "83:  github.com/containerd/console v1.0.4 // indirect",
          "",
          "---------------"
        ],
        "pkg/compose/compose.go||pkg/compose/compose.go": [
          "File: pkg/compose/compose.go -> pkg/compose/compose.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:  \"context\"",
          "21:  \"errors\"",
          "22:  \"fmt\"",
          "24:  \"os\"",
          "25:  \"strconv\"",
          "26:  \"strings\"",
          "",
          "[Removed Lines]",
          "23:  \"io\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "129:  return s.dockerCli.In()",
          "130: }",
          "133:  return s.dockerCli.Err()",
          "134: }",
          "137:  if stdioToStdout {",
          "138:   return s.dockerCli.Out()",
          "139:  }",
          "",
          "[Removed Lines]",
          "132: func (s *composeService) stderr() io.Writer {",
          "136: func (s *composeService) stdinfo() io.Writer {",
          "",
          "[Added Lines]",
          "131: func (s *composeService) stderr() *streams.Out {",
          "135: func (s *composeService) stdinfo() *streams.Out {",
          "",
          "---------------"
        ],
        "pkg/progress/writer.go||pkg/progress/writer.go": [
          "File: pkg/progress/writer.go -> pkg/progress/writer.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:  \"io\"",
          "22:  \"sync\"",
          "27:  \"golang.org/x/sync/errgroup\"",
          "29:  \"github.com/docker/compose/v2/pkg/api\"",
          "",
          "[Removed Lines]",
          "24:  \"github.com/containerd/console\"",
          "25:  \"github.com/moby/term\"",
          "26:  \"github.com/sirupsen/logrus\"",
          "",
          "[Added Lines]",
          "24:  \"github.com/docker/cli/cli/streams\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "59: type progressFuncWithStatus func(context.Context) (string, error)",
          "63:  _, err := RunWithStatus(ctx, func(ctx context.Context) (string, error) {",
          "64:   return \"\", pf(ctx)",
          "65:  }, out, \"Running\")",
          "66:  return err",
          "67: }",
          "70:  _, err := RunWithStatus(ctx, func(ctx context.Context) (string, error) {",
          "71:   return \"\", pf(ctx)",
          "72:  }, out, progressTitle)",
          "",
          "[Removed Lines]",
          "62: func Run(ctx context.Context, pf progressFunc, out io.Writer) error {",
          "69: func RunWithTitle(ctx context.Context, pf progressFunc, out io.Writer, progressTitle string) error {",
          "",
          "[Added Lines]",
          "60: func Run(ctx context.Context, pf progressFunc, out *streams.Out) error {",
          "67: func RunWithTitle(ctx context.Context, pf progressFunc, out *streams.Out, progressTitle string) error {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "74: }",
          "78:  eg, _ := errgroup.WithContext(ctx)",
          "79:  w, err := NewWriter(ctx, out, progressTitle)",
          "80:  var result string",
          "",
          "[Removed Lines]",
          "77: func RunWithStatus(ctx context.Context, pf progressFuncWithStatus, out io.Writer, progressTitle string) (string, error) {",
          "",
          "[Added Lines]",
          "75: func RunWithStatus(ctx context.Context, pf progressFuncWithStatus, out *streams.Out, progressTitle string) (string, error) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "115: var Mode = ModeAuto",
          "120:  dryRun, ok := ctx.Value(api.DryRunKey{}).(bool)",
          "121:  if !ok {",
          "122:   dryRun = false",
          "",
          "[Removed Lines]",
          "118: func NewWriter(ctx context.Context, out io.Writer, progressTitle string) (Writer, error) {",
          "119:  _, isTerminal := term.GetFdInfo(out)",
          "",
          "[Added Lines]",
          "116: func NewWriter(ctx context.Context, out *streams.Out, progressTitle string) (Writer, error) {",
          "117:  isTerminal := out.IsTerminal()",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "124:  if Mode == ModeQuiet {",
          "125:   return quiet{}, nil",
          "126:  }",
          "130:  }",
          "137:  }",
          "138:  return &plainWriter{",
          "139:   out:    out,",
          "",
          "[Removed Lines]",
          "127:  f, isConsole := out.(console.File) // see https://github.com/docker/compose/issues/10560",
          "128:  if Mode == ModeAuto && isTerminal && isConsole {",
          "129:   return newTTYWriter(f, dryRun, progressTitle)",
          "131:  if Mode == ModeTTY {",
          "132:   if !isConsole {",
          "133:    logrus.Warn(\"Terminal is not a POSIX console\")",
          "134:   } else {",
          "135:    return newTTYWriter(f, dryRun, progressTitle)",
          "136:   }",
          "",
          "[Added Lines]",
          "126:  tty := Mode == ModeTTY",
          "127:  if Mode == ModeAuto && isTerminal {",
          "128:   tty = true",
          "130:  if tty {",
          "131:   return newTTYWriter(out, dryRun, progressTitle)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "142:  }, nil",
          "143: }",
          "151:  return &ttyWriter{",
          "153:   eventIDs:      []string{},",
          "154:   events:        map[string]Event{},",
          "155:   repeated:      false,",
          "",
          "[Removed Lines]",
          "145: func newTTYWriter(out console.File, dryRun bool, progressTitle string) (Writer, error) {",
          "146:  con, err := console.ConsoleFromFile(out)",
          "147:  if err != nil {",
          "148:   return nil, err",
          "149:  }",
          "152:   out:           con,",
          "",
          "[Added Lines]",
          "140: func newTTYWriter(out io.Writer, dryRun bool, progressTitle string) (Writer, error) {",
          "142:   out:           out,",
          "",
          "---------------"
        ]
      }
    }
  ]
}