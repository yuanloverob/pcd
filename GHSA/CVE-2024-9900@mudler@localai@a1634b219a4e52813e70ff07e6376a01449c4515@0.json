{
  "cve_id": "CVE-2024-9900",
  "cve_desc": "mudler/localai version v2.21.1 contains a Cross-Site Scripting (XSS) vulnerability in its search functionality. The vulnerability arises due to improper sanitization of user input, allowing the injection and execution of arbitrary JavaScript code. This can lead to the execution of malicious scripts in the context of the victim's browser, potentially compromising user sessions, stealing session cookies, redirecting users to malicious websites, or manipulating the DOM.",
  "repo": "mudler/localai",
  "patch_hash": "a1634b219a4e52813e70ff07e6376a01449c4515",
  "patch_info": {
    "commit_hash": "a1634b219a4e52813e70ff07e6376a01449c4515",
    "repo": "mudler/localai",
    "commit_url": "https://github.com/mudler/localai/commit/a1634b219a4e52813e70ff07e6376a01449c4515",
    "files": [
      ".github/ci/modelslist.go",
      "core/http/elements/gallery.go",
      "core/http/endpoints/openai/assistant.go",
      "core/http/endpoints/openai/files.go",
      "core/http/middleware/auth.go",
      "core/http/routes/ui.go"
    ],
    "message": "fix: roll out bluemonday Sanitize more widely (#3794)\n\n* initial pass: roll out bluemonday sanitization more widely\n\nSigned-off-by: Dave Lee <dave@gray101.com>\n\n* add one additional sanitize - the overall modelslist used by the docs site\n\nSigned-off-by: Dave Lee <dave@gray101.com>\n\n---------\n\nSigned-off-by: Dave Lee <dave@gray101.com>",
    "before_after_code_files": [
      ".github/ci/modelslist.go||.github/ci/modelslist.go",
      "core/http/elements/gallery.go||core/http/elements/gallery.go",
      "core/http/endpoints/openai/assistant.go||core/http/endpoints/openai/assistant.go",
      "core/http/endpoints/openai/files.go||core/http/endpoints/openai/files.go",
      "core/http/middleware/auth.go||core/http/middleware/auth.go",
      "core/http/routes/ui.go||core/http/routes/ui.go"
    ]
  },
  "patch_diff": {
    ".github/ci/modelslist.go||.github/ci/modelslist.go": [
      "File: .github/ci/modelslist.go -> .github/ci/modelslist.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "6:  \"io/ioutil\"",
      "7:  \"os\"",
      "9:  \"gopkg.in/yaml.v3\"",
      "10: )",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "9:  \"github.com/microcosm-cc/bluemonday\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "279:   return",
      "280:  }",
      "283:  data := struct {",
      "284:   Models          []*GalleryModel",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "284:  for i, m := range models {",
      "285:   models[i].Name = bluemonday.StrictPolicy().Sanitize(m.Name)",
      "286:   models[i].Description = bluemonday.StrictPolicy().Sanitize(m.Description)",
      "287:  }",
      "",
      "---------------"
    ],
    "core/http/elements/gallery.go||core/http/elements/gallery.go": [
      "File: core/http/elements/gallery.go -> core/http/elements/gallery.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "7:  \"github.com/chasefleming/elem-go\"",
      "8:  \"github.com/chasefleming/elem-go/attrs\"",
      "9:  \"github.com/mudler/LocalAI/core/gallery\"",
      "10:  \"github.com/mudler/LocalAI/core/p2p\"",
      "11:  \"github.com/mudler/LocalAI/core/services\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "9:  \"github.com/microcosm-cc/bluemonday\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "41:     \"tabindex\":  \"-1\",",
      "42:     \"autofocus\": \"\",",
      "43:    },",
      "45:   ),",
      "46:   elem.If(showDelete, deleteButton(galleryID, modelName), reInstallButton(galleryID)),",
      "47:  ).Render()",
      "",
      "[Removed Lines]",
      "44:    elem.Text(text),",
      "",
      "[Added Lines]",
      "45:    elem.Text(bluemonday.StrictPolicy().Sanitize(text)),",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "57:     \"tabindex\":  \"-1\",",
      "58:     \"autofocus\": \"\",",
      "59:    },",
      "61:   ),",
      "62:   installButton(galleryName),",
      "63:  ).Render()",
      "",
      "[Removed Lines]",
      "60:    elem.Text(\"Error \"+err),",
      "",
      "[Added Lines]",
      "61:    elem.Text(\"Error \"+bluemonday.StrictPolicy().Sanitize(err)),",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "170:       attrs.Props{",
      "171:        \"class\": \"text-gray-200 font-semibold ml-2 mr-1\",",
      "172:       },",
      "174:      ),",
      "175:      elem.Text(\"Status: \"),",
      "176:      elem.If(",
      "",
      "[Removed Lines]",
      "173:       elem.Text(n.ID),",
      "",
      "[Added Lines]",
      "174:       elem.Text(bluemonday.StrictPolicy().Sanitize(n.ID)),",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "227:     \"tabindex\":  \"-1\",",
      "228:     \"autofocus\": \"\",",
      "229:    },",
      "231:    elem.Div(attrs.Props{",
      "232:     \"hx-get\":     \"/browse/job/progress/\" + uid,",
      "233:     \"hx-trigger\": \"every 600ms\",",
      "",
      "[Removed Lines]",
      "230:    elem.Text(text),",
      "",
      "[Added Lines]",
      "231:    elem.Text(bluemonday.StrictPolicy().Sanitize(text)), //Perhaps overly defensive",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "249:    \"class\": icon + \" pr-2\",",
      "250:   }),",
      "255:  )",
      "256: }",
      "",
      "[Removed Lines]",
      "252:   elem.Text(text),",
      "",
      "[Added Lines]",
      "253:   elem.Text(bluemonday.StrictPolicy().Sanitize(text)),",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "285:     elem.I(attrs.Props{",
      "286:      \"class\": icon + \" pr-2\",",
      "287:     }),",
      "289:    ),",
      "290:   ),",
      "293:  )",
      "294: }",
      "",
      "[Removed Lines]",
      "288:     elem.Text(text),",
      "",
      "[Added Lines]",
      "287:     elem.Text(bluemonday.StrictPolicy().Sanitize(text)),",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "303:   elem.I(attrs.Props{",
      "304:    \"class\": \"fas fa-link pr-2\",",
      "305:   }),",
      "307:  )",
      "308: }",
      "309: func installButton(galleryName string) elem.Node {",
      "",
      "[Removed Lines]",
      "306:   elem.Text(text),",
      "",
      "[Added Lines]",
      "303:   elem.Text(bluemonday.StrictPolicy().Sanitize(text)),",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "387:     attrs.Props{",
      "388:      \"class\": \"mb-2 text-xl font-bold leading-tight\",",
      "389:     },",
      "391:    ),",
      "392:    elem.P(",
      "393:     attrs.Props{",
      "394:      \"class\": \"mb-4 text-sm [&:not(:hover)]:truncate text-base\",",
      "395:     },",
      "397:    ),",
      "398:   )",
      "399:  }",
      "",
      "[Removed Lines]",
      "390:     elem.Text(m.Name),",
      "396:     elem.Text(m.Description),",
      "",
      "[Added Lines]",
      "387:     elem.Text(bluemonday.StrictPolicy().Sanitize(m.Name)),",
      "393:     elem.Text(bluemonday.StrictPolicy().Sanitize(m.Description)),",
      "",
      "---------------"
    ],
    "core/http/endpoints/openai/assistant.go||core/http/endpoints/openai/assistant.go": [
      "File: core/http/endpoints/openai/assistant.go -> core/http/endpoints/openai/assistant.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "10:  \"time\"",
      "12:  \"github.com/gofiber/fiber/v2\"",
      "13:  \"github.com/mudler/LocalAI/core/config\"",
      "14:  \"github.com/mudler/LocalAI/core/schema\"",
      "15:  \"github.com/mudler/LocalAI/core/services\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "13:  \"github.com/microcosm-cc/bluemonday\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "84:   if !modelExists(cl, ml, request.Model) {",
      "85:    log.Warn().Msgf(\"Model: %s was not found in list of models.\", request.Model)",
      "87:   }",
      "89:   if request.Tools == nil {",
      "",
      "[Removed Lines]",
      "86:    return c.Status(fiber.StatusBadRequest).SendString(\"Model \" + request.Model + \" not found\")",
      "",
      "[Added Lines]",
      "87:    return c.Status(fiber.StatusBadRequest).SendString(bluemonday.StrictPolicy().Sanitize(fmt.Sprintf(\"Model %q not found\", request.Model)))",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "148:   limit, err := strconv.Atoi(limitQuery)",
      "149:   if err != nil {",
      "151:   }",
      "",
      "[Removed Lines]",
      "150:    return c.Status(http.StatusBadRequest).SendString(fmt.Sprintf(\"Invalid limit query value: %s\", limitQuery))",
      "",
      "[Added Lines]",
      "151:    return c.Status(http.StatusBadRequest).SendString(bluemonday.StrictPolicy().Sanitize(fmt.Sprintf(\"Invalid limit query value: %s\", limitQuery)))",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "288:    }",
      "289:   }",
      "292:  }",
      "293: }",
      "",
      "[Removed Lines]",
      "291:   return c.Status(fiber.StatusNotFound).SendString(fmt.Sprintf(\"Unable to find assistant with id: %s\", assistantID))",
      "",
      "[Added Lines]",
      "292:   return c.Status(fiber.StatusNotFound).SendString(bluemonday.StrictPolicy().Sanitize(fmt.Sprintf(\"Unable to find assistant with id: %s\", assistantID)))",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "337:      }",
      "338:     }",
      "341:    }",
      "342:   }",
      "345:  }",
      "346: }",
      "",
      "[Removed Lines]",
      "340:     return c.Status(fiber.StatusNotFound).SendString(fmt.Sprintf(\"Unable to find file_id: %s\", request.FileID))",
      "344:   return c.Status(fiber.StatusNotFound).SendString(fmt.Sprintf(\"Unable to find %q\", assistantID))",
      "",
      "[Added Lines]",
      "341:     return c.Status(fiber.StatusNotFound).SendString(bluemonday.StrictPolicy().Sanitize(fmt.Sprintf(\"Unable to find file_id: %s\", request.FileID)))",
      "345:   return c.Status(fiber.StatusNotFound).SendString(bluemonday.StrictPolicy().Sanitize(fmt.Sprintf(\"Unable to find %q\", assistantID)))",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "442:     return c.Status(fiber.StatusOK).JSON(newAssistant)",
      "443:    }",
      "444:   }",
      "446:  }",
      "447: }",
      "",
      "[Removed Lines]",
      "445:   return c.Status(fiber.StatusNotFound).SendString(fmt.Sprintf(\"Unable to find assistant with id: %s\", assistantID))",
      "",
      "[Added Lines]",
      "446:   return c.Status(fiber.StatusNotFound).SendString(bluemonday.StrictPolicy().Sanitize(fmt.Sprintf(\"Unable to find assistant with id: %s\", assistantID)))",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "513:     if assistantFile.ID == fileId {",
      "514:      return c.Status(fiber.StatusOK).JSON(assistantFile)",
      "515:     }",
      "517:    }",
      "518:   }",
      "520:  }",
      "521: }",
      "",
      "[Removed Lines]",
      "516:     return c.Status(fiber.StatusNotFound).SendString(fmt.Sprintf(\"Unable to find assistant file with file_id: %s\", fileId))",
      "519:   return c.Status(fiber.StatusNotFound).SendString(fmt.Sprintf(\"Unable to find assistant file with assistant_id: %s\", assistantID))",
      "",
      "[Added Lines]",
      "517:     return c.Status(fiber.StatusNotFound).SendString(bluemonday.StrictPolicy().Sanitize(fmt.Sprintf(\"Unable to find assistant file with file_id: %s\", fileId)))",
      "520:   return c.Status(fiber.StatusNotFound).SendString(bluemonday.StrictPolicy().Sanitize(fmt.Sprintf(\"Unable to find assistant file with assistant_id: %s\", assistantID)))",
      "",
      "---------------"
    ],
    "core/http/endpoints/openai/files.go||core/http/endpoints/openai/files.go": [
      "File: core/http/endpoints/openai/files.go -> core/http/endpoints/openai/files.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "8:  \"sync/atomic\"",
      "9:  \"time\"",
      "11:  \"github.com/mudler/LocalAI/core/config\"",
      "12:  \"github.com/mudler/LocalAI/core/schema\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "11:  \"github.com/microcosm-cc/bluemonday\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "50:   err = c.SaveFile(file, savePath)",
      "51:   if err != nil {",
      "53:   }",
      "55:   f := schema.File{",
      "",
      "[Removed Lines]",
      "52:    return c.Status(fiber.StatusInternalServerError).SendString(\"Failed to save file: \" + err.Error())",
      "",
      "[Added Lines]",
      "53:    return c.Status(fiber.StatusInternalServerError).SendString(\"Failed to save file: \" + bluemonday.StrictPolicy().Sanitize(err.Error()))",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "121:  return func(c *fiber.Ctx) error {",
      "122:   file, err := getFileFromRequest(c)",
      "123:   if err != nil {",
      "125:   }",
      "127:   return c.JSON(file)",
      "",
      "[Removed Lines]",
      "124:    return c.Status(fiber.StatusInternalServerError).SendString(err.Error())",
      "",
      "[Added Lines]",
      "125:    return c.Status(fiber.StatusInternalServerError).SendString(bluemonday.StrictPolicy().Sanitize(err.Error()))",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "143:  return func(c *fiber.Ctx) error {",
      "144:   file, err := getFileFromRequest(c)",
      "145:   if err != nil {",
      "147:   }",
      "149:   err = os.Remove(filepath.Join(appConfig.UploadDir, file.Filename))",
      "150:   if err != nil {",
      "152:    if !errors.Is(err, os.ErrNotExist) {",
      "154:    }",
      "155:   }",
      "",
      "[Removed Lines]",
      "146:    return c.Status(fiber.StatusInternalServerError).SendString(err.Error())",
      "153:     return c.Status(fiber.StatusInternalServerError).SendString(fmt.Sprintf(\"Unable to delete file: %s, %v\", file.Filename, err))",
      "",
      "[Added Lines]",
      "147:    return c.Status(fiber.StatusInternalServerError).SendString(bluemonday.StrictPolicy().Sanitize(err.Error()))",
      "154:     return c.Status(fiber.StatusInternalServerError).SendString(bluemonday.StrictPolicy().Sanitize(fmt.Sprintf(\"Unable to delete file: %s, %v\", file.Filename, err)))",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "180:  return func(c *fiber.Ctx) error {",
      "181:   file, err := getFileFromRequest(c)",
      "182:   if err != nil {",
      "184:   }",
      "186:   fileContents, err := os.ReadFile(filepath.Join(appConfig.UploadDir, file.Filename))",
      "187:   if err != nil {",
      "189:   }",
      "191:   return c.Send(fileContents)",
      "",
      "[Removed Lines]",
      "183:    return c.Status(fiber.StatusInternalServerError).SendString(err.Error())",
      "188:    return c.Status(fiber.StatusInternalServerError).SendString(err.Error())",
      "",
      "[Added Lines]",
      "184:    return c.Status(fiber.StatusInternalServerError).SendString(bluemonday.StrictPolicy().Sanitize(err.Error()))",
      "189:    return c.Status(fiber.StatusInternalServerError).SendString(bluemonday.StrictPolicy().Sanitize(err.Error()))",
      "",
      "---------------"
    ],
    "core/http/middleware/auth.go||core/http/middleware/auth.go": [
      "File: core/http/middleware/auth.go -> core/http/middleware/auth.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "7:  \"github.com/dave-gray101/v2keyauth\"",
      "8:  \"github.com/gofiber/fiber/v2\"",
      "9:  \"github.com/gofiber/fiber/v2/middleware/keyauth\"",
      "10:  \"github.com/mudler/LocalAI/core/config\"",
      "11: )",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "10:  \"github.com/microcosm-cc/bluemonday\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "38:    if applicationConfig.OpaqueErrors {",
      "39:     return ctx.SendStatus(403)",
      "40:    }",
      "42:   }",
      "43:   if applicationConfig.OpaqueErrors {",
      "44:    return ctx.SendStatus(500)",
      "",
      "[Removed Lines]",
      "41:    return ctx.Status(403).SendString(err.Error())",
      "",
      "[Added Lines]",
      "42:    return ctx.Status(403).SendString(bluemonday.StrictPolicy().Sanitize(err.Error()))",
      "",
      "---------------"
    ],
    "core/http/routes/ui.go||core/http/routes/ui.go": [
      "File: core/http/routes/ui.go -> core/http/routes/ui.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "6:  \"sort\"",
      "7:  \"strings\"",
      "9:  \"github.com/mudler/LocalAI/core/config\"",
      "10:  \"github.com/mudler/LocalAI/core/gallery\"",
      "11:  \"github.com/mudler/LocalAI/core/http/elements\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "9:  \"github.com/microcosm-cc/bluemonday\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "171:     Search string `form:\"search\"`",
      "172:    }{}",
      "173:    if err := c.BodyParser(&form); err != nil {",
      "175:    }",
      "177:    models, _ := gallery.AvailableGalleryModels(appConfig.Galleries, appConfig.ModelPath)",
      "",
      "[Removed Lines]",
      "174:     return c.Status(fiber.StatusBadRequest).SendString(err.Error())",
      "",
      "[Added Lines]",
      "175:     return c.Status(fiber.StatusBadRequest).SendString(bluemonday.StrictPolicy().Sanitize(err.Error()))",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fb2a05ff43b6ce70835c9fd29eccb0fa76ac8da5",
      "candidate_info": {
        "commit_hash": "fb2a05ff43b6ce70835c9fd29eccb0fa76ac8da5",
        "repo": "mudler/localai",
        "commit_url": "https://github.com/mudler/localai/commit/fb2a05ff43b6ce70835c9fd29eccb0fa76ac8da5",
        "files": [
          "core/config/backend_config.go",
          "core/http/elements/gallery.go",
          "core/http/routes/ui.go",
          "pkg/xsync/map.go",
          "pkg/xsync/map_test.go",
          "pkg/xsync/sync_suite_test.go"
        ],
        "message": "feat(gallery): display job status also during navigation (#2151)\n\n* feat(gallery): keep showing progress also when refreshing\n\nSigned-off-by: Ettore Di Giacinto <mudler@localai.io>\n\n* fix(intel-gpu): better defaults\n\nSigned-off-by: Ettore Di Giacinto <mudler@localai.io>\n\n* feat: make it thread-safe\n\nSigned-off-by: mudler <mudler@localai.io>\n\n---------\n\nSigned-off-by: Ettore Di Giacinto <mudler@localai.io>\nSigned-off-by: mudler <mudler@localai.io>",
        "before_after_code_files": [
          "core/config/backend_config.go||core/config/backend_config.go",
          "core/http/elements/gallery.go||core/http/elements/gallery.go",
          "core/http/routes/ui.go||core/http/routes/ui.go",
          "pkg/xsync/map.go||pkg/xsync/map.go",
          "pkg/xsync/map_test.go||pkg/xsync/map_test.go",
          "pkg/xsync/sync_suite_test.go||pkg/xsync/sync_suite_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core/http/elements/gallery.go||core/http/elements/gallery.go",
            "core/http/routes/ui.go||core/http/routes/ui.go"
          ],
          "candidate": [
            "core/http/elements/gallery.go||core/http/elements/gallery.go",
            "core/http/routes/ui.go||core/http/routes/ui.go"
          ]
        }
      },
      "candidate_diff": {
        "core/config/backend_config.go||core/config/backend_config.go": [
          "File: core/config/backend_config.go -> core/config/backend_config.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "239:  if cfg.MMap == nil {",
          "242:  }",
          "244:  if cfg.MMlock == nil {",
          "",
          "[Removed Lines]",
          "241:   cfg.MMap = &trueV",
          "",
          "[Added Lines]",
          "243:   if os.Getenv(\"XPU\") != \"\" {",
          "244:    cfg.MMap = &falseV",
          "245:   } else {",
          "246:    cfg.MMap = &trueV",
          "247:   }",
          "",
          "---------------"
        ],
        "core/http/elements/gallery.go||core/http/elements/gallery.go": [
          "File: core/http/elements/gallery.go -> core/http/elements/gallery.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "6:  \"github.com/chasefleming/elem-go\"",
          "7:  \"github.com/chasefleming/elem-go/attrs\"",
          "8:  \"github.com/go-skynet/LocalAI/pkg/gallery\"",
          "9: )",
          "11: const (",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9:  \"github.com/go-skynet/LocalAI/pkg/xsync\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "102:  )",
          "103: }",
          "106:  modelsElements := []elem.Node{}",
          "107:  span := func(s string) elem.Node {",
          "108:   return elem.Span(",
          "",
          "[Removed Lines]",
          "105: func ListModels(models []*gallery.GalleryModel) string {",
          "",
          "[Added Lines]",
          "106: func ListModels(models []*gallery.GalleryModel, installing *xsync.SyncedMap[string, string]) string {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "118:     \"data-twe-ripple-init\":  \"\",",
          "119:     \"data-twe-ripple-color\": \"light\",",
          "120:     \"class\":                 \"float-right inline-block rounded bg-primary px-6 pb-2.5 mb-3 pt-2.5 text-xs font-medium uppercase leading-normal text-white shadow-primary-3 transition duration-150 ease-in-out hover:bg-primary-accent-300 hover:shadow-primary-2 focus:bg-primary-accent-300 focus:shadow-primary-2 focus:outline-none focus:ring-0 active:bg-primary-600 active:shadow-primary-2 dark:shadow-black/30 dark:hover:shadow-dark-strong dark:focus:shadow-dark-strong dark:active:shadow-dark-strong\",",
          "122:     \"hx-post\": \"/browse/install/model/\" + fmt.Sprintf(\"%s@%s\", m.Gallery.Name, m.Name),",
          "123:    },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "123:     \"hx-swap\":               \"outerHTML\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "152:  }",
          "154:  actionDiv := func(m *gallery.GalleryModel) elem.Node {",
          "155:   nodes := []elem.Node{",
          "156:    cardSpan(\"Repository: \"+m.Gallery.Name, \"fa-brands fa-git-alt\"),",
          "157:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "158:   galleryID := fmt.Sprintf(\"%s@%s\", m.Gallery.Name, m.Name)",
          "159:   currentlyInstalling := installing.Exists(galleryID)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "193:     },",
          "194:     nodes...,",
          "195:    ),",
          "197:   )",
          "198:  }",
          "",
          "[Removed Lines]",
          "196:    elem.If(m.Installed, span(\"Installed\"), installButton(m)),",
          "",
          "[Added Lines]",
          "202:    elem.If(",
          "203:     currentlyInstalling,",
          "204:     elem.Node( // If currently installing, show progress bar",
          "205:      elem.Raw(StartProgressBar(installing.Get(galleryID), \"0\")),",
          "206:     ), // Otherwise, show install button (if not installed) or display \"Installed\"",
          "207:     elem.If(m.Installed,",
          "208:      span(\"Installed\"),",
          "209:      installButton(m),",
          "210:     ),",
          "211:    ),",
          "",
          "---------------"
        ],
        "core/http/routes/ui.go||core/http/routes/ui.go": [
          "File: core/http/routes/ui.go -> core/http/routes/ui.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:  \"github.com/go-skynet/LocalAI/core/services\"",
          "11:  \"github.com/go-skynet/LocalAI/pkg/gallery\"",
          "12:  \"github.com/go-skynet/LocalAI/pkg/model\"",
          "13:  \"github.com/gofiber/fiber/v2\"",
          "14:  \"github.com/google/uuid\"",
          "15: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13:  \"github.com/go-skynet/LocalAI/pkg/xsync\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "21:  galleryService *services.GalleryService,",
          "22:  auth func(*fiber.Ctx) error) {",
          "25:  app.Get(\"/browse\", auth, func(c *fiber.Ctx) error {",
          "26:   models, _ := gallery.AvailableGalleryModels(appConfig.Galleries, appConfig.ModelPath)",
          "28:   summary := fiber.Map{",
          "29:    \"Title\":        \"LocalAI - Models\",",
          "31:    \"Repositories\": appConfig.Galleries,",
          "33:   }",
          "",
          "[Removed Lines]",
          "30:    \"Models\":       template.HTML(elements.ListModels(models)),",
          "",
          "[Added Lines]",
          "27:  var installingModels = xsync.NewSyncedMap[string, string]()",
          "35:    \"Models\":       template.HTML(elements.ListModels(models, installingModels)),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "58:    }",
          "59:   }",
          "62:  })",
          "65:  app.Post(\"/browse/install/model/:id\", auth, func(c *fiber.Ctx) error {",
          "68:   id, err := uuid.NewUUID()",
          "69:   if err != nil {",
          "",
          "[Removed Lines]",
          "61:   return c.SendString(elements.ListModels(filteredModels))",
          "66:   galleryID := strings.Clone(c.Params(\"id\")) // strings.Clone is required!",
          "",
          "[Added Lines]",
          "66:   return c.SendString(elements.ListModels(filteredModels, installingModels))",
          "72:   galleryID := strings.Clone(c.Params(\"id\")) // note: strings.Clone is required for multiple requests!",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "73:   uid := id.String()",
          "75:   op := gallery.GalleryOp{",
          "76:    Id:          uid,",
          "77:    GalleryName: galleryID,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "81:   installingModels.Set(galleryID, uid)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "95:   }",
          "97:   if status.Progress == 100 {",
          "99:    return c.SendString(elements.ProgressBar(\"100\"))",
          "100:   }",
          "101:   if status.Error != nil {",
          "",
          "[Removed Lines]",
          "98:    c.Set(\"HX-Trigger\", \"done\")",
          "",
          "[Added Lines]",
          "108:    c.Set(\"HX-Trigger\", \"done\") // this triggers /browse/job/:uid (which is when the job is done)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "105:   return c.SendString(elements.ProgressBar(fmt.Sprint(status.Progress)))",
          "106:  })",
          "108:  app.Get(\"/browse/job/:uid\", auth, func(c *fiber.Ctx) error {",
          "109:   return c.SendString(elements.DoneProgress(c.Params(\"uid\")))",
          "110:  })",
          "111: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "121:   for _, k := range installingModels.Keys() {",
          "122:    if installingModels.Get(k) == c.Params(\"uid\") {",
          "123:     installingModels.Delete(k)",
          "124:    }",
          "125:   }",
          "",
          "---------------"
        ],
        "pkg/xsync/map.go||pkg/xsync/map.go": [
          "File: pkg/xsync/map.go -> pkg/xsync/map.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package xsync",
          "3: import (",
          "4:  \"sync\"",
          "5: )",
          "7: type SyncedMap[K comparable, V any] struct {",
          "8:  mu sync.RWMutex",
          "9:  m  map[K]V",
          "10: }",
          "12: func NewSyncedMap[K comparable, V any]() *SyncedMap[K, V] {",
          "13:  return &SyncedMap[K, V]{",
          "14:   m: make(map[K]V),",
          "15:  }",
          "16: }",
          "18: func (m *SyncedMap[K, V]) Get(key K) V {",
          "19:  m.mu.RLock()",
          "20:  defer m.mu.RUnlock()",
          "21:  return m.m[key]",
          "22: }",
          "24: func (m *SyncedMap[K, V]) Keys() []K {",
          "25:  m.mu.RLock()",
          "26:  defer m.mu.RUnlock()",
          "27:  keys := make([]K, 0, len(m.m))",
          "28:  for k := range m.m {",
          "29:   keys = append(keys, k)",
          "30:  }",
          "31:  return keys",
          "32: }",
          "34: func (m *SyncedMap[K, V]) Values() []V {",
          "35:  m.mu.RLock()",
          "36:  defer m.mu.RUnlock()",
          "37:  values := make([]V, 0, len(m.m))",
          "38:  for _, v := range m.m {",
          "39:   values = append(values, v)",
          "40:  }",
          "41:  return values",
          "42: }",
          "44: func (m *SyncedMap[K, V]) Len() int {",
          "45:  m.mu.RLock()",
          "46:  defer m.mu.RUnlock()",
          "47:  return len(m.m)",
          "48: }",
          "50: func (m *SyncedMap[K, V]) Iterate(f func(key K, value V) bool) {",
          "51:  m.mu.RLock()",
          "52:  defer m.mu.RUnlock()",
          "53:  for k, v := range m.m {",
          "54:   if !f(k, v) {",
          "55:    break",
          "56:   }",
          "57:  }",
          "58: }",
          "60: func (m *SyncedMap[K, V]) Set(key K, value V) {",
          "61:  m.mu.Lock()",
          "62:  m.m[key] = value",
          "63:  m.mu.Unlock()",
          "64: }",
          "66: func (m *SyncedMap[K, V]) Delete(key K) {",
          "67:  m.mu.Lock()",
          "68:  delete(m.m, key)",
          "69:  m.mu.Unlock()",
          "70: }",
          "72: func (m *SyncedMap[K, V]) Exists(key K) bool {",
          "73:  m.mu.RLock()",
          "74:  defer m.mu.RUnlock()",
          "75:  _, ok := m.m[key]",
          "76:  return ok",
          "77: }",
          "",
          "---------------"
        ],
        "pkg/xsync/map_test.go||pkg/xsync/map_test.go": [
          "File: pkg/xsync/map_test.go -> pkg/xsync/map_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package xsync_test",
          "3: import (",
          "4:  . \"github.com/go-skynet/LocalAI/pkg/xsync\"",
          "6:  . \"github.com/onsi/ginkgo/v2\"",
          "7:  . \"github.com/onsi/gomega\"",
          "8: )",
          "10: var _ = Describe(\"SyncMap\", func() {",
          "12:  Context(\"Syncmap\", func() {",
          "13:   It(\"sets and gets\", func() {",
          "14:    m := NewSyncedMap[string, string]()",
          "15:    m.Set(\"foo\", \"bar\")",
          "16:    Expect(m.Get(\"foo\")).To(Equal(\"bar\"))",
          "17:   })",
          "18:   It(\"deletes\", func() {",
          "19:    m := NewSyncedMap[string, string]()",
          "20:    m.Set(\"foo\", \"bar\")",
          "21:    m.Delete(\"foo\")",
          "22:    Expect(m.Get(\"foo\")).To(Equal(\"\"))",
          "23:    Expect(m.Exists(\"foo\")).To(Equal(false))",
          "24:   })",
          "25:  })",
          "26: })",
          "",
          "---------------"
        ],
        "pkg/xsync/sync_suite_test.go||pkg/xsync/sync_suite_test.go": [
          "File: pkg/xsync/sync_suite_test.go -> pkg/xsync/sync_suite_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package xsync_test",
          "3: import (",
          "4:  \"testing\"",
          "6:  . \"github.com/onsi/ginkgo/v2\"",
          "7:  . \"github.com/onsi/gomega\"",
          "8: )",
          "10: func TestSync(t *testing.T) {",
          "11:  RegisterFailHandler(Fail)",
          "12:  RunSpecs(t, \"LocalAI sync test\")",
          "13: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cca881ec4998dfe439ce1e47b35f2111a2fa1513",
      "candidate_info": {
        "commit_hash": "cca881ec4998dfe439ce1e47b35f2111a2fa1513",
        "repo": "mudler/localai",
        "commit_url": "https://github.com/mudler/localai/commit/cca881ec4998dfe439ce1e47b35f2111a2fa1513",
        "files": [
          ".github/release.yml",
          "Makefile",
          "core/cli/cli.go",
          "core/cli/federated.go",
          "core/cli/run.go",
          "core/cli/worker/worker_p2p.go",
          "core/config/application_config.go",
          "core/http/elements/gallery.go",
          "core/http/endpoints/localai/welcome.go",
          "core/http/routes/localai.go",
          "core/http/routes/ui.go",
          "core/http/static/assets/tw-elements.js",
          "core/http/static/general.css",
          "core/http/views/chat.html",
          "core/http/views/p2p.html",
          "core/http/views/partials/footer.html",
          "core/http/views/partials/navbar.html",
          "core/http/views/talk.html",
          "core/p2p/node.go",
          "core/p2p/p2p.go",
          "core/p2p/p2p_disabled.go",
          "docs/static/install.sh",
          "embedded/webui_static.yaml"
        ],
        "message": "feat(p2p): Federation and AI swarms (#2723)\n\n* Wip p2p enhancements\n\n* get online state\n\n* Pass-by token to show in the dashboard\n\nSigned-off-by: Ettore Di Giacinto <mudler@localai.io>\n\n* Style\n\n* Minor fixups\n\n* parametrize SearchID\n\n* Refactoring\n\n* Allow to expose/bind more services\n\nSigned-off-by: Ettore Di Giacinto <mudler@localai.io>\n\n* Add federation\n\n* Display federated mode in the WebUI\n\nSigned-off-by: Ettore Di Giacinto <mudler@localai.io>\n\n* Small fixups\n\nSigned-off-by: Ettore Di Giacinto <mudler@localai.io>\n\n* make federated nodes visible from the WebUI\n\n* Fix version display\n\n* improve web page\n\n* live page update\n\n* visual enhancements\n\n* enhancements\n\n* visual enhancements\n\n---------\n\nSigned-off-by: Ettore Di Giacinto <mudler@localai.io>",
        "before_after_code_files": [
          "core/cli/cli.go||core/cli/cli.go",
          "core/cli/federated.go||core/cli/federated.go",
          "core/cli/run.go||core/cli/run.go",
          "core/cli/worker/worker_p2p.go||core/cli/worker/worker_p2p.go",
          "core/config/application_config.go||core/config/application_config.go",
          "core/http/elements/gallery.go||core/http/elements/gallery.go",
          "core/http/endpoints/localai/welcome.go||core/http/endpoints/localai/welcome.go",
          "core/http/routes/localai.go||core/http/routes/localai.go",
          "core/http/routes/ui.go||core/http/routes/ui.go",
          "core/http/static/assets/tw-elements.js||core/http/static/assets/tw-elements.js",
          "core/http/static/general.css||core/http/static/general.css",
          "core/http/views/chat.html||core/http/views/chat.html",
          "core/http/views/p2p.html||core/http/views/p2p.html",
          "core/http/views/partials/footer.html||core/http/views/partials/footer.html",
          "core/http/views/partials/navbar.html||core/http/views/partials/navbar.html",
          "core/http/views/talk.html||core/http/views/talk.html",
          "core/p2p/node.go||core/p2p/node.go",
          "core/p2p/p2p.go||core/p2p/p2p.go",
          "core/p2p/p2p_disabled.go||core/p2p/p2p_disabled.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core/http/elements/gallery.go||core/http/elements/gallery.go",
            "core/http/routes/ui.go||core/http/routes/ui.go"
          ],
          "candidate": [
            "core/http/elements/gallery.go||core/http/elements/gallery.go",
            "core/http/routes/ui.go||core/http/routes/ui.go"
          ]
        }
      },
      "candidate_diff": {
        "core/cli/cli.go||core/cli/cli.go": [
          "File: core/cli/cli.go -> core/cli/cli.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "9:  cliContext.Context `embed:\"\"`",
          "11:  Run        RunCMD        `cmd:\"\" help:\"Run LocalAI, this the default command if no other command is specified. Run 'local-ai run --help' for more information\" default:\"withargs\"`",
          "12:  Models     ModelsCMD     `cmd:\"\" help:\"Manage LocalAI models and definitions\"`",
          "13:  TTS        TTSCMD        `cmd:\"\" help:\"Convert text to speech\"`",
          "14:  Transcript TranscriptCMD `cmd:\"\" help:\"Convert audio to text\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12:  Federated  FederatedCLI  `cmd:\"\" help:\"Run LocalAI in federated mode\"`",
          "",
          "---------------"
        ],
        "core/cli/federated.go||core/cli/federated.go": [
          "File: core/cli/federated.go -> core/cli/federated.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package cli",
          "3: import (",
          "4:  \"context\"",
          "5:  \"errors\"",
          "6:  \"fmt\"",
          "7:  \"io\"",
          "8:  \"net\"",
          "9:  \"time\"",
          "11:  \"math/rand/v2\"",
          "13:  cliContext \"github.com/mudler/LocalAI/core/cli/context\"",
          "14:  \"github.com/mudler/LocalAI/core/p2p\"",
          "15:  \"github.com/mudler/edgevpn/pkg/node\"",
          "16:  \"github.com/mudler/edgevpn/pkg/protocol\"",
          "17:  \"github.com/mudler/edgevpn/pkg/types\"",
          "18:  \"github.com/rs/zerolog/log\"",
          "19: )",
          "21: type FederatedCLI struct {",
          "22:  Address        string `env:\"LOCALAI_ADDRESS,ADDRESS\" default:\":8080\" help:\"Bind address for the API server\" group:\"api\"`",
          "23:  Peer2PeerToken string `env:\"LOCALAI_P2P_TOKEN,P2P_TOKEN,TOKEN\" name:\"p2ptoken\" help:\"Token for P2P mode (optional)\" group:\"p2p\"`",
          "24: }",
          "26: func (f *FederatedCLI) Run(ctx *cliContext.Context) error {",
          "28:  n, err := p2p.NewNode(f.Peer2PeerToken)",
          "29:  if err != nil {",
          "30:   return fmt.Errorf(\"creating a new node: %w\", err)",
          "31:  }",
          "32:  err = n.Start(context.Background())",
          "33:  if err != nil {",
          "34:   return fmt.Errorf(\"creating a new node: %w\", err)",
          "35:  }",
          "37:  if err := p2p.ServiceDiscoverer(context.Background(), n, f.Peer2PeerToken, p2p.FederatedID, nil); err != nil {",
          "38:   return err",
          "39:  }",
          "41:  return Proxy(context.Background(), n, f.Address, p2p.FederatedID)",
          "42: }",
          "44: func Proxy(ctx context.Context, node *node.Node, listenAddr, service string) error {",
          "46:  log.Info().Msgf(\"Allocating service '%s' on: %s\", service, listenAddr)",
          "48:  l, err := net.Listen(\"tcp\", listenAddr)",
          "49:  if err != nil {",
          "50:   log.Error().Err(err).Msg(\"Error listening\")",
          "51:   return err",
          "52:  }",
          "55:  ledger, _ := node.Ledger()",
          "58:  ledger.Announce(",
          "59:   ctx,",
          "60:   10*time.Second,",
          "61:   func() {",
          "66:    updatedMap := map[string]interface{}{}",
          "67:    updatedMap[node.Host().ID().String()] = &types.User{",
          "68:     PeerID:    node.Host().ID().String(),",
          "69:     Timestamp: time.Now().String(),",
          "70:    }",
          "71:    ledger.Add(protocol.UsersLedgerKey, updatedMap)",
          "73:   },",
          "74:  )",
          "76:  defer l.Close()",
          "77:  for {",
          "78:   select {",
          "79:   case <-ctx.Done():",
          "80:    return errors.New(\"context canceled\")",
          "81:   default:",
          "82:    log.Debug().Msg(\"New for connection\")",
          "84:    conn, err := l.Accept()",
          "85:    if err != nil {",
          "86:     fmt.Println(\"Error accepting: \", err.Error())",
          "87:     continue",
          "88:    }",
          "91:    go func() {",
          "92:     var tunnelAddresses []string",
          "93:     for _, v := range p2p.GetAvailableNodes(p2p.FederatedID) {",
          "94:      if v.IsOnline() {",
          "95:       tunnelAddresses = append(tunnelAddresses, v.TunnelAddress)",
          "96:      } else {",
          "97:       log.Info().Msgf(\"Node %s is offline\", v.ID)",
          "98:      }",
          "99:     }",
          "104:     tunnelAddr := tunnelAddresses[rand.IntN(len(tunnelAddresses))]",
          "106:     tunnelConn, err := net.Dial(\"tcp\", tunnelAddr)",
          "107:     if err != nil {",
          "108:      log.Error().Err(err).Msg(\"Error connecting to tunnel\")",
          "109:      return",
          "110:     }",
          "112:     log.Info().Msgf(\"Redirecting %s to %s\", conn.LocalAddr().String(), tunnelConn.RemoteAddr().String())",
          "113:     closer := make(chan struct{}, 2)",
          "114:     go copyStream(closer, tunnelConn, conn)",
          "115:     go copyStream(closer, conn, tunnelConn)",
          "116:     <-closer",
          "118:     tunnelConn.Close()",
          "119:     conn.Close()",
          "121:    }()",
          "122:   }",
          "123:  }",
          "125: }",
          "127: func copyStream(closer chan struct{}, dst io.Writer, src io.Reader) {",
          "128:  defer func() { closer <- struct{}{} }() // connection is closed, send signal to stop proxy",
          "129:  io.Copy(dst, src)",
          "130: }",
          "",
          "---------------"
        ],
        "core/cli/run.go||core/cli/run.go": [
          "File: core/cli/run.go -> core/cli/run.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"context\"",
          "5:  \"fmt\"",
          "6:  \"strings\"",
          "7:  \"time\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6:  \"net\"",
          "7:  \"os\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "50:  DisableWebUI         bool     `env:\"LOCALAI_DISABLE_WEBUI,DISABLE_WEBUI\" default:\"false\" help:\"Disable webui\" group:\"api\"`",
          "51:  OpaqueErrors         bool     `env:\"LOCALAI_OPAQUE_ERRORS\" default:\"false\" help:\"If true, all error responses are replaced with blank 500 errors. This is intended only for hardening against information leaks and is normally not recommended.\" group:\"api\"`",
          "52:  Peer2Peer            bool     `env:\"LOCALAI_P2P,P2P\" name:\"p2p\" default:\"false\" help:\"Enable P2P mode\" group:\"p2p\"`",
          "54:  ParallelRequests     bool     `env:\"LOCALAI_PARALLEL_REQUESTS,PARALLEL_REQUESTS\" help:\"Enable backends to handle multiple requests in parallel if they support it (e.g.: llama.cpp or vllm)\" group:\"backends\"`",
          "55:  SingleActiveBackend  bool     `env:\"LOCALAI_SINGLE_ACTIVE_BACKEND,SINGLE_ACTIVE_BACKEND\" help:\"Allow only one backend to be run at a time\" group:\"backends\"`",
          "56:  PreloadBackendOnly   bool     `env:\"LOCALAI_PRELOAD_BACKEND_ONLY,PRELOAD_BACKEND_ONLY\" default:\"false\" help:\"Do not launch the API services, only the preloaded models / backends are started (useful for multi-node setups)\" group:\"backends\"`",
          "",
          "[Removed Lines]",
          "53:  Peer2PeerToken       string   `env:\"LOCALAI_P2P_TOKEN,P2P_TOKEN\" name:\"p2ptoken\" help:\"Token for P2P mode (optional)\" group:\"p2p\"`",
          "",
          "[Added Lines]",
          "55:  Peer2PeerToken       string   `env:\"LOCALAI_P2P_TOKEN,P2P_TOKEN,TOKEN\" name:\"p2ptoken\" help:\"Token for P2P mode (optional)\" group:\"p2p\"`",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "59:  WatchdogIdleTimeout  string   `env:\"LOCALAI_WATCHDOG_IDLE_TIMEOUT,WATCHDOG_IDLE_TIMEOUT\" default:\"15m\" help:\"Threshold beyond which an idle backend should be stopped\" group:\"backends\"`",
          "60:  EnableWatchdogBusy   bool     `env:\"LOCALAI_WATCHDOG_BUSY,WATCHDOG_BUSY\" default:\"false\" help:\"Enable watchdog for stopping backends that are busy longer than the watchdog-busy-timeout\" group:\"backends\"`",
          "61:  WatchdogBusyTimeout  string   `env:\"LOCALAI_WATCHDOG_BUSY_TIMEOUT,WATCHDOG_BUSY_TIMEOUT\" default:\"5m\" help:\"Threshold beyond which a busy backend should be stopped\" group:\"backends\"`",
          "62: }",
          "64: func (r *RunCMD) Run(ctx *cliContext.Context) error {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "64:  Federated            bool     `env:\"LOCALAI_FEDERATED,FEDERATED\" help:\"Enable federated instance\" group:\"federated\"`",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "91:   config.WithOpaqueErrors(r.OpaqueErrors),",
          "92:  }",
          "94:  if r.Peer2Peer || r.Peer2PeerToken != \"\" {",
          "95:   log.Info().Msg(\"P2P mode enabled\")",
          "97:   if token == \"\" {",
          "",
          "[Removed Lines]",
          "96:   token := r.Peer2PeerToken",
          "",
          "[Added Lines]",
          "97:  token := \"\"",
          "100:   token = r.Peer2PeerToken",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "105:    log.Info().Msg(\"To use the token, you can run the following command in another node or terminal:\")",
          "106:    fmt.Printf(\"export TOKEN=\\\"%s\\\"\\nlocal-ai worker p2p-llama-cpp-rpc\\n\", token)",
          "112:   }",
          "113:   log.Info().Msg(\"Starting P2P server discovery...\")",
          "115:    return err",
          "116:   }",
          "117:  }",
          "",
          "[Removed Lines]",
          "109:    log.Info().Msg(\"Press a button to proceed\")",
          "110:    var input string",
          "111:    fmt.Scanln(&input)",
          "114:   if err := p2p.LLamaCPPRPCServerDiscoverer(context.Background(), token); err != nil {",
          "",
          "[Added Lines]",
          "111:   }",
          "112:   opts = append(opts, config.WithP2PToken(token))",
          "114:   node, err := p2p.NewNode(token)",
          "115:   if err != nil {",
          "116:    return err",
          "120:   if err := p2p.ServiceDiscoverer(context.Background(), node, token, \"\", func() {",
          "121:    var tunnelAddresses []string",
          "122:    for _, v := range p2p.GetAvailableNodes(\"\") {",
          "123:     if v.IsOnline() {",
          "124:      tunnelAddresses = append(tunnelAddresses, v.TunnelAddress)",
          "125:     } else {",
          "126:      log.Info().Msgf(\"Node %s is offline\", v.ID)",
          "127:     }",
          "128:    }",
          "129:    tunnelEnvVar := strings.Join(tunnelAddresses, \",\")",
          "131:    os.Setenv(\"LLAMACPP_GRPC_SERVERS\", tunnelEnvVar)",
          "132:    log.Debug().Msgf(\"setting LLAMACPP_GRPC_SERVERS to %s\", tunnelEnvVar)",
          "133:   }); err != nil {",
          "134:    return err",
          "135:   }",
          "136:  }",
          "138:  if r.Federated {",
          "139:   _, port, err := net.SplitHostPort(r.Address)",
          "140:   if err != nil {",
          "141:    return err",
          "142:   }",
          "143:   if err := p2p.ExposeService(context.Background(), \"localhost\", port, token, p2p.FederatedID); err != nil {",
          "144:    return err",
          "145:   }",
          "146:   node, err := p2p.NewNode(token)",
          "147:   if err != nil {",
          "148:    return err",
          "149:   }",
          "150:   if err := p2p.ServiceDiscoverer(context.Background(), node, token, p2p.FederatedID, nil); err != nil {",
          "",
          "---------------"
        ],
        "core/cli/worker/worker_p2p.go||core/cli/worker/worker_p2p.go": [
          "File: core/cli/worker/worker_p2p.go -> core/cli/worker/worker_p2p.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: type P2P struct {",
          "22:  WorkerFlags       `embed:\"\"`",
          "24:  NoRunner          bool     `env:\"LOCALAI_NO_RUNNER,NO_RUNNER\" help:\"Do not start the llama-cpp-rpc-server\"`",
          "25:  RunnerAddress     string   `env:\"LOCALAI_RUNNER_ADDRESS,RUNNER_ADDRESS\" help:\"Address of the llama-cpp-rpc-server\"`",
          "26:  RunnerPort        string   `env:\"LOCALAI_RUNNER_PORT,RUNNER_PORT\" help:\"Port of the llama-cpp-rpc-server\"`",
          "",
          "[Removed Lines]",
          "23:  Token             string   `env:\"LOCALAI_TOKEN,TOKEN\" help:\"JSON list of galleries\"`",
          "",
          "[Added Lines]",
          "23:  Token             string   `env:\"LOCALAI_TOKEN,LOCALAI_P2P_TOKEN,TOKEN\" help:\"P2P token to use\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "59:    p = r.RunnerPort",
          "60:   }",
          "63:   if err != nil {",
          "64:    return err",
          "65:   }",
          "",
          "[Removed Lines]",
          "62:   err = p2p.BindLLamaCPPWorker(context.Background(), address, p, r.Token)",
          "",
          "[Added Lines]",
          "62:   err = p2p.ExposeService(context.Background(), address, p, r.Token, \"\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "99:   }",
          "100:  }()",
          "103:  if err != nil {",
          "104:   return err",
          "105:  }",
          "",
          "[Removed Lines]",
          "102:  err = p2p.BindLLamaCPPWorker(context.Background(), address, fmt.Sprint(port), r.Token)",
          "",
          "[Added Lines]",
          "102:  err = p2p.ExposeService(context.Background(), address, fmt.Sprint(port), r.Token, \"\")",
          "",
          "---------------"
        ],
        "core/config/application_config.go||core/config/application_config.go": [
          "File: core/config/application_config.go -> core/config/application_config.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:  CORSAllowOrigins                    string",
          "33:  ApiKeys                             []string",
          "34:  OpaqueErrors                        bool",
          "36:  ModelLibraryURL string",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "35:  P2PToken                            string",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "95:  }",
          "96: }",
          "98: func WithModelLibraryURL(url string) AppOption {",
          "99:  return func(o *ApplicationConfig) {",
          "100:   o.ModelLibraryURL = url",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "99: func WithP2PToken(s string) AppOption {",
          "100:  return func(o *ApplicationConfig) {",
          "101:   o.P2PToken = s",
          "102:  }",
          "103: }",
          "",
          "---------------"
        ],
        "core/http/elements/gallery.go||core/http/elements/gallery.go": [
          "File: core/http/elements/gallery.go -> core/http/elements/gallery.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  \"github.com/chasefleming/elem-go\"",
          "8:  \"github.com/chasefleming/elem-go/attrs\"",
          "9:  \"github.com/mudler/LocalAI/core/gallery\"",
          "10:  \"github.com/mudler/LocalAI/core/services\"",
          "11:  \"github.com/mudler/LocalAI/pkg/xsync\"",
          "12: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10:  \"github.com/mudler/LocalAI/core/p2p\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15:  noImage = \"https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg\"",
          "16: )",
          "18: func DoneProgress(galleryID, text string, showDelete bool) string {",
          "19:  var modelName = galleryID",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: func renderElements(n []elem.Node) string {",
          "20:  render := \"\"",
          "21:  for _, r := range n {",
          "22:   render += r.Render()",
          "23:  }",
          "24:  return render",
          "25: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "72:  ).Render()",
          "73: }",
          "75: func StartProgressBar(uid, progress, text string) string {",
          "76:  if progress == \"\" {",
          "77:   progress = \"0\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "84: func P2PNodeStats(nodes []p2p.NodeData) string {",
          "86:     <div class=\"bg-gray-800 p-6 rounded-lg shadow-lg text-left\">",
          "87:                         <p class=\"text-xl font-semibold text-gray-200\">Total Workers Detected: {{ len .Nodes }}</p>",
          "88:                         {{ $online := 0 }}",
          "89:                         {{ range .Nodes }}",
          "90:                             {{ if .IsOnline }}",
          "91:                                 {{ $online = add $online 1 }}",
          "92:                             {{ end }}",
          "93:                         {{ end }}",
          "94:                         <p class=\"text-xl font-semibold text-gray-200\">Total Online Workers: {{$online}}</p>",
          "95:                     </div>",
          "98:  online := 0",
          "99:  for _, n := range nodes {",
          "100:   if n.IsOnline() {",
          "101:    online++",
          "102:   }",
          "103:  }",
          "105:  class := \"text-green-500\"",
          "106:  if online == 0 {",
          "107:   class = \"text-red-500\"",
          "108:  }",
          "110:     <i class=\"fas fa-circle animate-pulse text-green-500 ml-2 mr-1\"></i>",
          "112:  circle := elem.I(attrs.Props{",
          "113:   \"class\": \"fas fa-circle animate-pulse \" + class + \" ml-2 mr-1\",",
          "114:  })",
          "115:  nodesElements := []elem.Node{",
          "116:   elem.Span(",
          "117:    attrs.Props{",
          "118:     \"class\": class,",
          "119:    },",
          "120:    circle,",
          "121:    elem.Text(fmt.Sprintf(\"%d\", online)),",
          "122:   ),",
          "123:   elem.Span(",
          "124:    attrs.Props{",
          "125:     \"class\": \"text-gray-200\",",
          "126:    },",
          "127:    elem.Text(fmt.Sprintf(\"/%d\", len(nodes))),",
          "128:   ),",
          "129:  }",
          "131:  return renderElements(nodesElements)",
          "132: }",
          "134: func P2PNodeBoxes(nodes []p2p.NodeData) string {",
          "136:    <div class=\"bg-gray-800 p-4 rounded-lg shadow-lg text-left\">",
          "137:    <div class=\"flex items-center mb-2\">",
          "138:     <i class=\"fas fa-desktop text-gray-400 mr-2\"></i>",
          "139:     <span class=\"text-gray-200 font-semibold\">{{.ID}}</span>",
          "140:    </div>",
          "141:    <p class=\"text-sm text-gray-400 mt-2 flex items-center\">",
          "142:     Status:",
          "143:     <i class=\"fas fa-circle {{ if .IsOnline }}text-green-500{{ else }}text-red-500{{ end }} ml-2 mr-1\"></i>",
          "144:     <span class=\"{{ if .IsOnline }}text-green-400{{ else }}text-red-400{{ end }}\">",
          "145:      {{ if .IsOnline }}Online{{ else }}Offline{{ end }}",
          "146:     </span>",
          "147:    </p>",
          "148:   </div>",
          "151:  nodesElements := []elem.Node{}",
          "153:  for _, n := range nodes {",
          "155:   nodesElements = append(nodesElements,",
          "156:    elem.Div(",
          "157:     attrs.Props{",
          "158:      \"class\": \"bg-gray-700 p-6 rounded-lg shadow-lg text-left\",",
          "159:     },",
          "160:     elem.P(",
          "161:      attrs.Props{",
          "162:       \"class\": \"text-sm text-gray-400 mt-2 flex\",",
          "163:      },",
          "164:      elem.I(",
          "165:       attrs.Props{",
          "166:        \"class\": \"fas fa-desktop text-gray-400 mr-2\",",
          "167:       },",
          "168:      ),",
          "169:      elem.Text(\"Name: \"),",
          "170:      elem.Span(",
          "171:       attrs.Props{",
          "172:        \"class\": \"text-gray-200 font-semibold ml-2 mr-1\",",
          "173:       },",
          "174:       elem.Text(n.ID),",
          "175:      ),",
          "176:      elem.Text(\"Status: \"),",
          "177:      elem.If(",
          "178:       n.IsOnline(),",
          "179:       elem.I(",
          "180:        attrs.Props{",
          "181:         \"class\": \"fas fa-circle animate-pulse text-green-500 ml-2 mr-1\",",
          "182:        },",
          "183:       ),",
          "184:       elem.I(",
          "185:        attrs.Props{",
          "186:         \"class\": \"fas fa-circle animate-pulse text-red-500 ml-2 mr-1\",",
          "187:        },",
          "188:       ),",
          "189:      ),",
          "190:      elem.If(",
          "191:       n.IsOnline(),",
          "192:       elem.Span(",
          "193:        attrs.Props{",
          "194:         \"class\": \"text-green-400\",",
          "195:        },",
          "197:        elem.Text(\"Online\"),",
          "198:       ),",
          "199:       elem.Span(",
          "200:        attrs.Props{",
          "201:         \"class\": \"text-red-400\",",
          "202:        },",
          "203:        elem.Text(\"Offline\"),",
          "204:       ),",
          "205:      ),",
          "206:     ),",
          "207:    ))",
          "208:  }",
          "210:  return renderElements(nodesElements)",
          "211: }",
          "",
          "---------------"
        ],
        "core/http/endpoints/localai/welcome.go||core/http/endpoints/localai/welcome.go": [
          "File: core/http/endpoints/localai/welcome.go -> core/http/endpoints/localai/welcome.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:  \"github.com/gofiber/fiber/v2\"",
          "5:  \"github.com/mudler/LocalAI/core/config\"",
          "6:  \"github.com/mudler/LocalAI/core/gallery\"",
          "7:  \"github.com/mudler/LocalAI/internal\"",
          "8:  \"github.com/mudler/LocalAI/pkg/model\"",
          "9: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7:  \"github.com/mudler/LocalAI/core/p2p\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "33:    \"Models\":            models,",
          "34:    \"ModelsConfig\":      backendConfigs,",
          "35:    \"GalleryConfig\":     galleryConfigs,",
          "36:    \"ApplicationConfig\": appConfig,",
          "37:    \"ProcessingModels\":  processingModels,",
          "38:    \"TaskTypes\":         taskTypes,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37:    \"IsP2PEnabled\":      p2p.IsP2PEnabled(),",
          "",
          "---------------"
        ],
        "core/http/routes/localai.go||core/http/routes/localai.go": [
          "File: core/http/routes/localai.go -> core/http/routes/localai.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5:  \"github.com/gofiber/swagger\"",
          "6:  \"github.com/mudler/LocalAI/core/config\"",
          "7:  \"github.com/mudler/LocalAI/core/http/endpoints/localai\"",
          "8:  \"github.com/mudler/LocalAI/core/services\"",
          "9:  \"github.com/mudler/LocalAI/internal\"",
          "10:  \"github.com/mudler/LocalAI/pkg/model\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8:  \"github.com/mudler/LocalAI/core/p2p\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "56:  app.Get(\"/backend/monitor\", auth, localai.BackendMonitorEndpoint(backendMonitorService))",
          "57:  app.Post(\"/backend/shutdown\", auth, localai.BackendShutdownEndpoint(backendMonitorService))",
          "59:  app.Get(\"/version\", auth, func(c *fiber.Ctx) error {",
          "60:   return c.JSON(struct {",
          "61:    Version string `json:\"version\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "61:  if p2p.IsP2PEnabled() {",
          "62:   app.Get(\"/api/p2p\", auth, func(c *fiber.Ctx) error {",
          "64:    return c.JSON(map[string]interface{}{",
          "65:     \"Nodes\":          p2p.GetAvailableNodes(\"\"),",
          "66:     \"FederatedNodes\": p2p.GetAvailableNodes(p2p.FederatedID),",
          "67:    })",
          "68:   })",
          "69:   app.Get(\"/api/p2p/token\", auth, func(c *fiber.Ctx) error {",
          "70:    return c.Send([]byte(appConfig.P2PToken))",
          "71:   })",
          "72:  }",
          "",
          "---------------"
        ],
        "core/http/routes/ui.go||core/http/routes/ui.go": [
          "File: core/http/routes/ui.go -> core/http/routes/ui.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:  \"github.com/mudler/LocalAI/core/gallery\"",
          "11:  \"github.com/mudler/LocalAI/core/http/elements\"",
          "12:  \"github.com/mudler/LocalAI/core/http/endpoints/localai\"",
          "13:  \"github.com/mudler/LocalAI/core/services\"",
          "14:  \"github.com/mudler/LocalAI/internal\"",
          "15:  \"github.com/mudler/LocalAI/pkg/model\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13:  \"github.com/mudler/LocalAI/core/p2p\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "54:  app.Get(\"/\", auth, localai.WelcomeEndpoint(appConfig, cl, ml, modelStatus))",
          "57:  app.Get(\"/browse\", auth, func(c *fiber.Ctx) error {",
          "58:   term := c.Query(\"term\")",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57:  if p2p.IsP2PEnabled() {",
          "58:   app.Get(\"/p2p\", auth, func(c *fiber.Ctx) error {",
          "59:    summary := fiber.Map{",
          "60:     \"Title\":   \"LocalAI - P2P dashboard\",",
          "61:     \"Version\": internal.PrintableVersion(),",
          "64:     \"IsP2PEnabled\": p2p.IsP2PEnabled(),",
          "65:     \"P2PToken\":     appConfig.P2PToken,",
          "66:    }",
          "69:    return c.Render(\"views/p2p\", summary)",
          "70:   })",
          "73:   app.Get(\"/p2p/ui/workers\", auth, func(c *fiber.Ctx) error {",
          "74:    return c.SendString(elements.P2PNodeBoxes(p2p.GetAvailableNodes(\"\")))",
          "75:   })",
          "76:   app.Get(\"/p2p/ui/workers-federation\", auth, func(c *fiber.Ctx) error {",
          "77:    return c.SendString(elements.P2PNodeBoxes(p2p.GetAvailableNodes(p2p.FederatedID)))",
          "78:   })",
          "80:   app.Get(\"/p2p/ui/workers-stats\", auth, func(c *fiber.Ctx) error {",
          "81:    return c.SendString(elements.P2PNodeStats(p2p.GetAvailableNodes(\"\")))",
          "82:   })",
          "83:   app.Get(\"/p2p/ui/workers-federation-stats\", auth, func(c *fiber.Ctx) error {",
          "84:    return c.SendString(elements.P2PNodeStats(p2p.GetAvailableNodes(p2p.FederatedID)))",
          "85:   })",
          "86:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "87:    \"AllTags\":          tags,",
          "88:    \"ProcessingModels\": processingModelsData,",
          "89:    \"AvailableModels\":  len(models),",
          "92:   }",
          "",
          "[Removed Lines]",
          "90:    \"TaskTypes\":        taskTypes,",
          "",
          "[Added Lines]",
          "122:    \"IsP2PEnabled\":     p2p.IsP2PEnabled(),",
          "124:    \"TaskTypes\": taskTypes,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "243:    \"ModelsConfig\": backendConfigs,",
          "244:    \"Model\":        c.Params(\"model\"),",
          "245:    \"Version\":      internal.PrintableVersion(),",
          "246:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "280:    \"IsP2PEnabled\": p2p.IsP2PEnabled(),",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "261:    \"Title\":        \"LocalAI - Talk\",",
          "262:    \"ModelsConfig\": backendConfigs,",
          "263:    \"Model\":        backendConfigs[0].ID,",
          "264:    \"Version\":      internal.PrintableVersion(),",
          "265:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "299:    \"IsP2PEnabled\": p2p.IsP2PEnabled(),",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "282:    \"ModelsConfig\": backendConfigs,",
          "283:    \"Model\":        backendConfigs[0].ID,",
          "284:    \"Version\":      internal.PrintableVersion(),",
          "285:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "321:    \"IsP2PEnabled\": p2p.IsP2PEnabled(),",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "296:    \"ModelsConfig\": backendConfigs,",
          "297:    \"Model\":        c.Params(\"model\"),",
          "298:    \"Version\":      internal.PrintableVersion(),",
          "299:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "336:    \"IsP2PEnabled\": p2p.IsP2PEnabled(),",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "316:    \"ModelsConfig\": backendConfigs,",
          "317:    \"Model\":        backendConfigs[0].Name,",
          "318:    \"Version\":      internal.PrintableVersion(),",
          "319:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "357:    \"IsP2PEnabled\": p2p.IsP2PEnabled(),",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "330:    \"ModelsConfig\": backendConfigs,",
          "331:    \"Model\":        c.Params(\"model\"),",
          "332:    \"Version\":      internal.PrintableVersion(),",
          "333:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "372:    \"IsP2PEnabled\": p2p.IsP2PEnabled(),",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "349:    \"Title\":        \"LocalAI - Generate audio with \" + backendConfigs[0].Name,",
          "350:    \"ModelsConfig\": backendConfigs,",
          "351:    \"Model\":        backendConfigs[0].Name,",
          "352:    \"Version\":      internal.PrintableVersion(),",
          "353:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "392:    \"IsP2PEnabled\": p2p.IsP2PEnabled(),",
          "",
          "---------------"
        ],
        "core/http/static/assets/tw-elements.js||core/http/static/assets/tw-elements.js": [
          "File: core/http/static/assets/tw-elements.js -> core/http/static/assets/tw-elements.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: (function(L,P){typeof exports==\"object\"&&typeof module<\"u\"?P(exports):typeof define==\"function\"&&define.amd?define([\"exports\"],P):(L=typeof globalThis<\"u\"?globalThis:L||self,P(L.twe={}))})(this,function(L){\"use strict\";var jl=Object.defineProperty;var Ul=(L,P,R)=>P in L?jl(L,P,{enumerable:!0,configurable:!0,writable:!0,value:R}):L[P]=R;var $i=(L,P,R)=>(Ul(L,typeof P!=\"symbol\"?P+\"\":P,R),R);/*!",
          "18:     <div class=\"opacity-0 transition-opacity duration-300 ease-in-out absolute z-[1080] block m-0 text-sm not-italic font-normal text-left no-underline underline-offset-auto normal-case leading-6 tracking-normal break-normal whitespace-normal\" role=\"tooltip\">",
          "19:       <div data-twe-tooltip-inner-ref class=\"max-w-[200px] text-sm py-1.5 px-4 text-white text-center bg-[#6d6d6d] rounded\"></div>",
          "20:     </div>",
          "21:     `,trigger:\"hover focus\",title:\"\",delay:0,html:!1,selector:!1,placement:\"top\",offset:[0,0],container:!1,fallbackPlacements:[\"top\",\"right\",\"bottom\",\"left\"],boundary:\"clippingParents\",customClass:\"\",sanitize:!0,sanitizeFn:null,allowList:Ea,popperConfig:{hide:!0}},ya={HIDE:`hide${J}`,HIDDEN:`hidden${J}`,SHOW:`show${J}`,SHOWN:`shown${J}`,INSERTED:`inserted${J}`,CLICK:`click${J}`,FOCUSIN:`focusin${J}`,FOCUSOUT:`focusout${J}`,MOUSEENTER:`mouseenter${J}`,MOUSELEAVE:`mouseleave${J}`},Ca=\"fade\",Oa=\"modal\",pi=\"show\",Gt=\"show\",_i=\"out\",tn=\"[data-twe-tooltip-inner-ref]\",en=`.${Oa}`,sn=\"hide.twe.modal\",Qt=\"hover\",gi=\"focus\",Da=\"click\",Na=\"manual\";class Et extends et{constructor(t,e){if(typeof Cs>\"u\")throw new TypeError(\"Bootstrap's tooltips require Popper (https://popper.js.org)\");super(t),this._isEnabled=!0,this._timeout=0,this._hoverState=\"\",this._activeTrigger={},this._popper=null,this._config=this._getConfig(e),this.tip=null,this._setListeners()}static get Default(){return Aa}static get NAME(){return Js}static get Event(){return ya}static get DefaultType(){return wa}enable(){this._isEnabled=!0}disable(){this._isEnabled=!1}toggleEnabled(){this._isEnabled=!this._isEnabled}toggle(t){if(this._isEnabled)if(t){const e=this._initializeOnDelegatedTarget(t);e._activeTrigger.click=!e._activeTrigger.click,e._isWithActiveTrigger()?e._enter(null,e):e._leave(null,e)}else{if(this.getTipElement().classList.contains(pi)){this._leave(null,this);return}this._enter(null,this)}}dispose(){clearTimeout(this._timeout),d.off(this._element.closest(en),sn,this._hideModalHandler),this.tip&&this.tip.remove(),this._disposePopper(),super.dispose()}show(){if(this._element.style.display===\"none\")throw new Error(\"Please use show on visible elements\");if(!(this.isWithContent()&&this._isEnabled))return;const t=d.trigger(this._element,this.constructor.Event.SHOW),e=ki(this._element),s=e===null?this._element.ownerDocument.documentElement.contains(this._element):e.contains(this._element);if(t.defaultPrevented||!s)return;this.constructor.NAME===\"tooltip\"&&this.tip&&this.getTitle()!==this.tip.querySelector(tn).innerHTML&&(this._disposePopper(),this.tip.remove(),this.tip=null);const n=this.getTipElement(),r=Yn(this.constructor.NAME);n.setAttribute(\"id\",r),this._element.setAttribute(\"aria-describedby\",r),this._config.animation&&setTimeout(()=>{this.tip.classList.add(\"opacity-100\"),this.tip.classList.remove(\"opacity-0\")},100);const o=typeof this._config.placement==\"function\"?this._config.placement.call(this,n,this._element):this._config.placement,a=this._getAttachment(o);this._addAttachmentClass(a);const{container:l}=this._config;if(R.setData(n,this.constructor.DATA_KEY,this),this._element.ownerDocument.documentElement.contains(this.tip)||(l.append(n),d.trigger(this._element,this.constructor.Event.INSERTED)),this._popper?this._popper.update():this._popper=Je(this._element,n,this._getPopperConfig(a)),n.getAttribute(\"id\").includes(\"tooltip\"))switch(o){case\"bottom\":n.classList.add(\"py-[0.4rem]\");break;case\"left\":n.classList.add(\"px-[0.4rem]\");break;case\"right\":n.classList.add(\"px-[0.4rem]\");break;default:n.classList.add(\"py-[0.4rem]\");break}const c=this._resolvePossibleFunction(this._config.customClass);c&&n.classList.add(...c.split(\" \")),\"ontouchstart\"in document.documentElement&&[].concat(...document.body.children).forEach(g=>{d.on(g,\"mouseover\",se)});const f=()=>{const g=this._hoverState;this._hoverState=null,d.trigger(this._element,this.constructor.Event.SHOWN),g===_i&&this._leave(null,this)},v=this.tip.classList.contains(\"transition-opacity\");this._queueCallback(f,this.tip,v)}hide(){if(!this._popper)return;const t=this.getTipElement(),e=()=>{this._isWithActiveTrigger()||(this._hoverState!==Gt&&t.remove(),this._cleanTipClass(),this._element.removeAttribute(\"aria-describedby\"),d.trigger(this._element,this.constructor.Event.HIDDEN),this._disposePopper())};if(d.trigger(this._element,this.constructor.Event.HIDE).defaultPrevented)return;t.classList.add(\"opacity-0\"),t.classList.remove(\"opacity-100\"),\"ontouchstart\"in document.documentElement&&[].concat(...document.body.children).forEach(r=>d.off(r,\"mouseover\",se)),this._activeTrigger[Da]=!1,this._activeTrigger[gi]=!1,this._activeTrigger[Qt]=!1;const n=this.tip.classList.contains(\"opacity-0\");this._queueCallback(e,this.tip,n),this._hoverState=\"\"}update(){this._popper!==null&&this._popper.update()}isWithContent(){return!!this.getTitle()}getTipElement(){if(this.tip)return this.tip;const t=document.createElement(\"div\");t.innerHTML=this._config.template;const e=t.children[0];return this.setContent(e),e.classList.remove(Ca,pi),this.tip=e,this.tip}setContent(t){this._sanitizeAndSetContent(t,this.getTitle(),tn)}_sanitizeAndSetContent(t,e,s){const n=h.findOne(s,t);if(!e&&n){n.remove();return}this.setElementContent(n,e)}setElementContent(t,e){if(t!==null){if(yt(e)){e=nt(e),this._config.html?e.parentNode!==t&&(t.innerHTML=\"\",t.append(e)):t.textContent=e.textContent;return}this._config.html?(this._config.sanitize&&(e=Zs(e,this._config.allowList,this._config.sanitizeFn)),t.innerHTML=e):t.textContent=e}}getTitle(){const t=this._element.getAttribute(\"data-twe-original-title\")||this._config.title;return this._resolvePossibleFunction(t)}updateAttachment(t){return t===\"right\"?\"end\":t===\"left\"?\"start\":t}_initializeOnDelegatedTarget(t,e){return e||this.constructor.getOrCreateInstance(t.delegateTarget,this._getDelegateConfig())}_getOffset(){const{offset:t}=this._config;return typeof t==\"string\"?t.split(\",\").map(e=>Number.parseInt(e,10)):typeof t==\"function\"?e=>t(e,this._element):t}_resolvePossibleFunction(t){return typeof t==\"function\"?t.call(this._element):t}_getPopperConfig(t){const e={placement:t,modifiers:[{name:\"flip\",options:{fallbackPlacements:this._config.fallbackPlacements}},{name:\"offset\",options:{offset:this._getOffset()}},{name:\"preventOverflow\",options:{boundary:this._config.boundary}},{name:\"arrow\",options:{element:`.${this.constructor.NAME}-arrow`}},{name:\"onChange\",enabled:!0,phase:\"afterWrite\",fn:s=>this._handlePopperPlacementChange(s)}],onFirstUpdate:s=>{s.options.placement!==s.placement&&this._handlePopperPlacementChange(s)}};return{...e,...typeof this._config.popperConfig==\"function\"?this._config.popperConfig(e):this._config.popperConfig}}_addAttachmentClass(t){this.getTipElement().classList.add(`${this._getBasicClassPrefix()}-${this.updateAttachment(t)}`)}_getAttachment(t){return Ta[t.toUpperCase()]}_setListeners(){this._config.trigger.split(\" \").forEach(e=>{if(e===\"click\")d.on(this._element,this.constructor.Event.CLICK,this._config.selector,s=>this.toggle(s));else if(e!==Na){const s=e===Qt?this.constructor.Event.MOUSEENTER:this.constructor.Event.FOCUSIN,n=e===Qt?this.constructor.Event.MOUSELEAVE:this.constructor.Event.FOCUSOUT;d.on(this._element,s,this._config.selector,r=>this._enter(r)),d.on(this._element,n,this._config.selector,r=>this._leave(r))}}),this._hideModalHandler=()=>{this._element&&this.hide()},d.on(this._element.closest(en),sn,this._hideModalHandler),this._config.selector?this._config={...this._config,trigger:\"manual\",selector:\"\"}:this._fixTitle()}_fixTitle(){const t=this._element.getAttribute(\"title\"),e=typeof this._element.getAttribute(\"data-twe-original-title\");(t||e!==\"string\")&&(this._element.setAttribute(\"data-twe-original-title\",t||\"\"),t&&!this._element.getAttribute(\"aria-label\")&&!this._element.textContent&&this._element.setAttribute(\"aria-label\",t),this._element.setAttribute(\"title\",\"\"))}_enter(t,e){if(e=this._initializeOnDelegatedTarget(t,e),t&&(e._activeTrigger[t.type===\"focusin\"?gi:Qt]=!0),e.getTipElement().classList.contains(pi)||e._hoverState===Gt){e._hoverState=Gt;return}if(clearTimeout(e._timeout),e._hoverState=Gt,!e._config.delay||!e._config.delay.show){e.show();return}e._timeout=setTimeout(()=>{e._hoverState===Gt&&e.show()},e._config.delay.show)}_leave(t,e){if(e=this._initializeOnDelegatedTarget(t,e),t&&(e._activeTrigger[t.type===\"focusout\"?gi:Qt]=e._element.contains(t.relatedTarget)),!e._isWithActiveTrigger()){if(clearTimeout(e._timeout),e._hoverState=_i,!e._config.delay||!e._config.delay.hide){e.hide();return}e._timeout=setTimeout(()=>{e._hoverState===_i&&e.hide()},e._config.delay.hide)}}_isWithActiveTrigger(){for(const t in this._activeTrigger)if(this._activeTrigger[t])return!0;return!1}_getConfig(t){const e=E.getDataAttributes(this._element);return Object.keys(e).forEach(s=>{ba.has(s)&&delete e[s]}),t={...this.constructor.Default,...e,...typeof t==\"object\"&&t?t:{}},t.container=t.container===!1?document.body:nt(t.container),typeof t.delay==\"number\"&&(t.delay={show:t.delay,hide:t.delay}),typeof t.title==\"number\"&&(t.title=t.title.toString()),typeof t.content==\"number\"&&(t.content=t.content.toString()),x(Js,t,this.constructor.DefaultType),t.sanitize&&(t.template=Zs(t.template,t.allowList,t.sanitizeFn)),t}_getDelegateConfig(){const t={};for(const e in this._config)this.constructor.Default[e]!==this._config[e]&&(t[e]=this._config[e]);return t}_cleanTipClass(){const t=this.getTipElement(),e=new RegExp(`(^|\\\\s)${this._getBasicClassPrefix()}\\\\S+`,\"g\"),s=t.getAttribute(\"class\").match(e);s!==null&&s.length>0&&s.map(n=>n.trim()).forEach(n=>t.classList.remove(n))}_getBasicClassPrefix(){return va}_handlePopperPlacementChange(t){const{state:e}=t;e&&(this.tip=e.elements.popper,this._cleanTipClass(),this._addAttachmentClass(this._getAttachment(e.placement)))}_disposePopper(){this._popper&&(this._popper.destroy(),this._popper=null)}static jQueryInterface(t){return this.each(function(){const e=Et.getOrCreateInstance(this,t);if(typeof t==\"string\"){if(typeof e[t]>\"u\")throw new TypeError(`No method named \"${t}\"`);e[t]()}})}}const Sa=\"popover\",tt=\".twe.popover\",La=\"te-popover\",$a={...Et.Default,placement:\"right\",offset:[0,8],trigger:\"click\",content:\"\",template:`",
          "22:     <div class=\"opacity-0 transition-opacity duration-150 ease-in-out absolute top-0 left-0 z-[1070] block max-w-[267px] break-words bg-white bg-clip-padding border border-neutral-100 rounded-lg shadow-2 text-sm not-italic font-normal text-left no-underline underline-offset-auto normal-case leading-6 tracking-normal break-normal whitespace-normal dark:border-white/10 dark:bg-surface-dark dark:text-white data-[popper-reference-hidden]:hidden\" role=\"tooltip\">",
          "23:       <h3 data-twe-popover-header-ref class=\"py-2 px-4 mb-0 border-b-2 border-neutral-100 rounded-t-lg font-medium empty:hidden dark:border-white/10\"></h3>",
          "24:       <div data-twe-popover-body-ref class=\"p-4 text-surface dark:text-white\"></div>",
          "25:     </div>",
          "26:     `},Ia={...Et.DefaultType,content:\"(string|element|function)\"},Ra={HIDE:`hide${tt}`,HIDDEN:`hidden${tt}`,SHOW:`show${tt}`,SHOWN:`shown${tt}`,INSERTED:`inserted${tt}`,CLICK:`click${tt}`,FOCUSIN:`focusin${tt}`,FOCUSOUT:`focusout${tt}`,MOUSEENTER:`mouseenter${tt}`,MOUSELEAVE:`mouseleave${tt}`},ka=\"[data-twe-popover-header-ref]\",xa=\"[data-twe-popover-body-ref]\";class ge extends Et{static get Default(){return $a}static get NAME(){return Sa}static get Event(){return Ra}static get DefaultType(){return Ia}isWithContent(){return this.getTitle()||this._getContent()}setContent(t){this._sanitizeAndSetContent(t,this.getTitle(),ka),this._sanitizeAndSetContent(t,this._getContent(),xa)}_getContent(){return this._resolvePossibleFunction(this._config.content)}_getBasicClassPrefix(){return La}static jQueryInterface(t){return this.each(function(){const e=ge.getOrCreateInstance(this,t);if(typeof t==\"string\"){if(typeof e[t]>\"u\")throw new TypeError(`No method named \"${t}\"`);e[t]()}})}}const mi=\"scrollspy\",Ei=\".twe.scrollspy\",nn={offset:10,method:\"auto\",target:\"\"},Pa={offset:\"number\",method:\"string\",target:\"(string|element)\"},Ma={active:\"!text-primary font-semibold border-s-[0.125rem] border-solid border-primary\"},Ha={active:\"string\"},vi=`activate${Ei}`,Va=`scroll${Ei}`,Zt=\"data-twe-nav-link-active\",rn=\"data-twe-collapsible-scrollspy-ref\",on=\"[data-twe-dropdown-item-ref]\",Wa=\"[data-twe-nav-list-ref]\",bi=\"[data-twe-nav-link-ref]\",Ba=\"[data-twe-nav-item-ref]\",an=\"[data-twe-list-group-item-ref]\",wi=`${bi}, ${an}, ${on}`,ja=\"[data-twe-dropdown-ref]\",Ua=\"[data-twe-dropdown-toggle-ref]\",ln=`[${rn}]`,Ya=`[${Zt}]`,Ti=\"ul\",Ka=\"maxOffset\",cn=\"position\";class me extends et{constructor(t,e,s){super(t),this._scrollElement=this._element.tagName===\"BODY\"?window:this._element,this._config=this._getConfig(e),this._classes=this._getClasses(s),this._offsets=[],this._targets=[],this._collapsibles=[],this._activeTarget=null,this._scrollHeight=0,d.on(this._scrollElement,Va,()=>this._process()),this.refresh(),this._process(),this._bindActivateEvent(),this._getCollapsibles(),this._collapsibles.length!==0&&(this._showSubsection(),this._hideSubsection())}static get Default(){return nn}static get NAME(){return mi}refresh(){const t=this._scrollElement===this._scrollElement.window?Ka:cn,e=this._config.method===\"auto\"?t:this._config.method,s=e===cn?this._getScrollTop():0;this._offsets=[],this._targets=[],this._scrollHeight=this._getScrollHeight(),h.find(wi,this._config.target).map(r=>{const o=Re(r),a=o?h.findOne(o):null;if(a){const l=a.getBoundingClientRect();if(l.width||l.height)return[E[e](a).top+s,o]}return null}).filter(r=>r).sort((r,o)=>r[0]-o[0]).forEach(r=>{this._offsets.push(r[0]),this._targets.push(r[1])})}dispose(){d.off(this._scrollElement,Ei),d.off(this._scrollElement,vi),super.dispose()}_getConfig(t){return t={...nn,...E.getDataAttributes(this._element),...typeof t==\"object\"&&t?t:{}},t.target=nt(t.target)||document.documentElement,x(mi,t,Pa),t}_getClasses(t){const e=E.getDataClassAttributes(this._element);return t={...Ma,...e,...t},x(mi,t,Ha),t}_getScrollTop(){return this._scrollElement===window?this._scrollElement.pageYOffset:this._scrollElement.scrollTop}_getScrollHeight(){return this._scrollElement.scrollHeight||Math.max(document.body.scrollHeight,document.documentElement.scrollHeight)}_getOffsetHeight(){return this._scrollElement===window?window.innerHeight:this._scrollElement.getBoundingClientRect().height}_process(){const t=this._getScrollTop()+this._config.offset,e=this._getScrollHeight(),s=this._config.offset+e-this._getOffsetHeight();if(this._scrollHeight!==e&&this.refresh(),t>=s){const n=this._targets[this._targets.length-1];this._activeTarget!==n&&this._activate(n);return}if(this._activeTarget&&t<this._offsets[0]&&this._offsets[0]>0){this._activeTarget=null,this._clear();return}for(let n=this._offsets.length;n--;)this._activeTarget!==this._targets[n]&&t>=this._offsets[n]&&(typeof this._offsets[n+1]>\"u\"||t<this._offsets[n+1])&&this._activate(this._targets[n])}_activate(t){this._activeTarget=t,this._clear();const e=wi.split(\",\").map(n=>`${n}[data-twe-target=\"${t}\"],${n}[href=\"${t}\"]`),s=h.findOne(e.join(\",\"),this._config.target);s.classList.add(...this._classes.active.split(\" \")),s.setAttribute(Zt,\"\"),s.getAttribute(on)?h.findOne(Ua,s.closest(ja)).classList.add(...this._classes.active.split(\" \")):h.parents(s,Wa).forEach(n=>{h.prev(n,`${bi}, ${an}`).forEach(r=>{r.classList.add(...this._classes.active.split(\" \")),r.setAttribute(Zt,\"\")}),h.prev(n,Ba).forEach(r=>{h.children(r,bi).forEach(o=>o.classList.add(...this._classes.active.split(\" \")))})}),d.trigger(this._scrollElement,vi,{relatedTarget:t})}_clear(){h.find(wi,this._config.target).filter(t=>t.classList.contains(...this._classes.active.split(\" \"))).forEach(t=>{t.classList.remove(...this._classes.active.split(\" \")),t.removeAttribute(Zt)})}_hide(t){const e=h.findOne(Ti,t.parentNode);e.style.overflow=\"hidden\",e.style.height=\"0px\"}_show(t,e){t.style.height=e}_getCollapsibles(){const t=h.find(ln);t&&t.forEach(e=>{const s=e.parentNode,n=h.findOne(Ti,s),r=n.offsetHeight||n.scrollHeight;this._collapsibles.push({element:n,relatedTarget:e.getAttribute(\"href\"),height:`${r}px`})})}_showSubsection(){h.find(Ya).filter(s=>s.hasAttribute(rn)).forEach(s=>{const n=h.findOne(Ti,s.parentNode),r=this._collapsibles.find(o=>o.relatedTarget=s.getAttribute(\"href\")).height;this._show(n,r)})}_hideSubsection(){h.find(ln).filter(e=>e.hasAttribute(Zt)===!1).forEach(e=>{this._hide(e)})}_bindActivateEvent(){d.on(this._element,vi,()=>{this._showSubsection(),this._hideSubsection()})}static jQueryInterface(t){return this.each(function(){const e=me.getOrCreateInstance(this,t);if(typeof t==\"string\"){if(typeof e[t]>\"u\")throw new TypeError(`No method named \"${t}\"`);e[t]()}})}}const dn=\"tab\",Ee=\".twe.tab\",Fa=`hide${Ee}`,za=`hidden${Ee}`,qa=`show${Ee}`,Xa=`shown${Ee}`,Ga=\"data-twe-dropdown-menu-ref\",Ht=\"data-twe-tab-active\",ve=\"data-twe-nav-active\",Qa=\"[data-twe-dropdown-ref]\",Za=\"[data-twe-nav-ref]\",un=`[${Ht}]`,Ja=`[${ve}]`,hn=\":scope > li > .active\",tl=\"[data-twe-dropdown-toggle-ref]\",el=\":scope > [data-twe-dropdown-menu-ref] [data-twe-dropdown-show]\",il={show:\"opacity-100\",hide:\"opacity-0\"},sl={show:\"string\",hide:\"string\"};class be extends et{constructor(t,e){super(t),this._classes=this._getClasses(e)}static get NAME(){return dn}show(){if(this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE&&this._element.getAttribute(ve)===\"\")return;let t;const e=st(this._element),s=this._element.closest(Za),n=h.findOne(Ja,s);if(s){const l=s.nodeName===\"UL\"||s.nodeName===\"OL\"?hn:un;t=h.find(l,s),t=t[t.length-1]}const r=t?d.trigger(t,Fa,{relatedTarget:this._element}):null;if(d.trigger(this._element,qa,{relatedTarget:t}).defaultPrevented||r!==null&&r.defaultPrevented)return;this._activate(this._element,s,null,n,this._element);const a=()=>{d.trigger(t,za,{relatedTarget:this._element}),d.trigger(this._element,Xa,{relatedTarget:t})};e?this._activate(e,e.parentNode,a,n,this._element):a()}_getClasses(t){const e=E.getDataClassAttributes(this._element);return t={...il,...e,...t},x(dn,t,sl),t}_activate(t,e,s,n,r){const a=(e&&(e.nodeName===\"UL\"||e.nodeName===\"OL\")?h.find(hn,e):h.children(e,un))[0],l=s&&a&&a.hasAttribute(Ht),u=()=>this._transitionComplete(t,a,s,n,r);a&&l?(E.removeClass(a,this._classes.show),E.addClass(a,this._classes.hide),this._queueCallback(u,t,!0)):u()}_transitionComplete(t,e,s,n,r){if(e&&n){e.removeAttribute(Ht),n.removeAttribute(ve);const a=h.findOne(el,e.parentNode);a&&a.removeAttribute(Ht),e.getAttribute(\"role\")===\"tab\"&&e.setAttribute(\"aria-selected\",!1)}t.setAttribute(Ht,\"\"),r.setAttribute(ve,\"\"),t.getAttribute(\"role\")===\"tab\"&&t.setAttribute(\"aria-selected\",!0),Ut(t),t.classList.contains(this._classes.hide)&&(E.removeClass(t,this._classes.hide),E.addClass(t,this._classes.show));let o=t.parentNode;if(o&&o.nodeName===\"LI\"&&(o=o.parentNode),o&&o.hasAttribute(Ga)){const a=t.closest(Qa);a&&h.find(tl,a).forEach(l=>l.setAttribute(Ht,\"\")),t.setAttribute(\"aria-expanded\",!0)}s&&s()}static jQueryInterface(t){return this.each(function(){const e=be.getOrCreateInstance(this);if(typeof t==\"string\"){if(typeof e[t]>\"u\")throw new TypeError(`No method named \"${t}\"`);e[t]()}})}}(()=>{var i={454:(s,n,r)=>{r.d(n,{Z:()=>l});var o=r(645),a=r.n(o)()(function(u){return u[1]});a.push([s.id,\"INPUT:-webkit-autofill,SELECT:-webkit-autofill,TEXTAREA:-webkit-autofill{animation-name:onautofillstart}INPUT:not(:-webkit-autofill),SELECT:not(:-webkit-autofill),TEXTAREA:not(:-webkit-autofill){animation-name:onautofillcancel}@keyframes onautofillstart{}@keyframes onautofillcancel{}\",\"\"]);const l=a},645:s=>{s.exports=function(n){var r=[];return r.toString=function(){return this.map(function(o){var a=n(o);return o[2]?\"@media \".concat(o[2],\" {\").concat(a,\"}\"):a}).join(\"\")},r.i=function(o,a,l){typeof o==\"string\"&&(o=[[null,o,\"\"]]);var u={};if(l)for(var c=0;c<this.length;c++){var f=this[c][0];f!=null&&(u[f]=!0)}for(var v=0;v<o.length;v++){var g=[].concat(o[v]);l&&u[g[0]]||(a&&(g[2]?g[2]=\"\".concat(a,\" and \").concat(g[2]):g[2]=a),r.push(g))}},r}},810:()=>{(function(){if(typeof window<\"u\")try{var s=new window.CustomEvent(\"test\",{cancelable:!0});if(s.preventDefault(),s.defaultPrevented!==!0)throw new Error(\"Could not prevent default\")}catch{var n=function(o,a){var l,u;return(a=a||{}).bubbles=!!a.bubbles,a.cancelable=!!a.cancelable,(l=document.createEvent(\"CustomEvent\")).initCustomEvent(o,a.bubbles,a.cancelable,a.detail),u=l.preventDefault,l.preventDefault=function(){u.call(this);try{Object.defineProperty(this,\"defaultPrevented\",{get:function(){return!0}})}catch{this.defaultPrevented=!0}},l};n.prototype=window.Event.prototype,window.CustomEvent=n}})()},379:(s,n,r)=>{var o,a=function(){var m={};return function(p){if(m[p]===void 0){var _=document.querySelector(p);if(window.HTMLIFrameElement&&_ instanceof window.HTMLIFrameElement)try{_=_.contentDocument.head}catch{_=null}m[p]=_}return m[p]}}(),l=[];function u(m){for(var p=-1,_=0;_<l.length;_++)if(l[_].identifier===m){p=_;break}return p}function c(m,p){for(var _={},b=[],w=0;w<m.length;w++){var C=m[w],A=p.base?C[0]+p.base:C[0],N=_[A]||0,$=\"\".concat(A,\" \").concat(N);_[A]=N+1;var V=u($),k={css:C[1],media:C[2],sourceMap:C[3]};V!==-1?(l[V].references++,l[V].updater(k)):l.push({identifier:$,updater:I(k,p),references:1}),b.push($)}return b}function f(m){var p=document.createElement(\"style\"),_=m.attributes||{};if(_.nonce===void 0){var b=r.nc;b&&(_.nonce=b)}if(Object.keys(_).forEach(function(C){p.setAttribute(C,_[C])}),typeof m.insert==\"function\")m.insert(p);else{var w=a(m.insert||\"head\");if(!w)throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");w.appendChild(p)}return p}var v,g=(v=[],function(m,p){return v[m]=p,v.filter(Boolean).join(`",
          "27: `)});function O(m,p,_,b){var w=_?\"\":b.media?\"@media \".concat(b.media,\" {\").concat(b.css,\"}\"):b.css;if(m.styleSheet)m.styleSheet.cssText=g(p,w);else{var C=document.createTextNode(w),A=m.childNodes;A[p]&&m.removeChild(A[p]),A.length?m.insertBefore(C,A[p]):m.appendChild(C)}}function T(m,p,_){var b=_.css,w=_.media,C=_.sourceMap;if(w?m.setAttribute(\"media\",w):m.removeAttribute(\"media\"),C&&typeof btoa<\"u\"&&(b+=`",
          "",
          "---------------"
        ],
        "core/http/static/general.css||core/http/static/general.css": [
          "File: core/http/static/general.css -> core/http/static/general.css"
        ],
        "core/http/views/chat.html||core/http/views/chat.html": [
          "File: core/http/views/chat.html -> core/http/views/chat.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:   <body class=\"bg-gray-900 text-gray-200\" x-data=\"{ key: $store.chat.key }\">",
          "38:     <div class=\"flex flex-col min-h-screen\">",
          "41:     <div class=\"chat-container mt-2 mr-2 ml-2 mb-2 bg-gray-800 shadow-lg rounded-lg\" >",
          "42:      <!-- Chat Header -->",
          "43:     <div class=\"border-b border-gray-700 p-4\"  x-data=\"{ component: 'menu' }\">",
          "",
          "[Removed Lines]",
          "40:     {{template \"views/partials/navbar\"}}",
          "",
          "[Added Lines]",
          "40:     {{template \"views/partials/navbar\" .}}",
          "",
          "---------------"
        ],
        "core/http/views/p2p.html||core/http/views/p2p.html": [
          "File: core/http/views/p2p.html -> core/http/views/p2p.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <!DOCTYPE html>",
          "2: <html lang=\"en\">",
          "3: {{template \"views/partials/head\" .}}",
          "5: <body class=\"bg-gray-900 text-gray-200\">",
          "6: <div class=\"flex flex-col min-h-screen\">",
          "8:     {{template \"views/partials/navbar\" .}}",
          "9:     <div class=\"container mx-auto px-4 flex-grow\">",
          "10:         <div class=\"workers mt-12 text-center\">",
          "12:             <h2 class=\"text-3xl font-semibold text-gray-100 mb-8\">",
          "13:                 <i class=\"fa-solid fa-circle-nodes\"></i> Distributed inference with P2P",
          "14:                 <a href=\"https://localai.io/features/distribute/\" target=\"_blank\">",
          "15:                     <i class=\"fas fa-circle-info pr-2\"></i>",
          "16:                 </a>",
          "17:             </h2>",
          "18:             <h5 class=\"mb-4 text-justify\">LocalAI uses P2P technologies to enable distribution of work between peers. It is possible to share an instance with Federation and/or split the weights of a model across peers (only available with llama.cpp models). You can now share computational resources between your devices or your friends!</h5>",
          "20:             <!-- Federation Box -->",
          "21:             <div class=\"bg-gray-800 p-6 rounded-lg shadow-lg mb-12 text-left\">",
          "23:                 <p class=\"text-xl font-semibold text-gray-200\"> <i class=\"text-gray-200 fa-solid fa-circle-nodes\"></i> Federated Nodes: <span hx-get=\"/p2p/ui/workers-federation-stats\" hx-trigger=\"every 1s\"></span> </p>",
          "24:                 <p class=\"mb-4\">You can start LocalAI in federated mode to share your instance, or start the federated server to balance requests between nodes of the federation.</p>",
          "26:                 <div class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4 mb-12\">",
          "27:                     <div hx-get=\"/p2p/ui/workers-federation\" hx-trigger=\"every 1s\"></div>",
          "28:                 </div>",
          "30:                 <hr class=\"border-gray-700 mb-12\">",
          "32:                 <h3 class=\"text-2xl font-semibold text-gray-100 mb-6\"><i class=\"fa-solid fa-book\"></i> Start a federated instance</h3>",
          "35:                 <!-- Tabs navigation -->",
          "36:                 <ul class=\"mb-5 flex list-none flex-row flex-wrap ps-0\" role=\"tablist\" data-twe-nav-ref>",
          "37:                     <li role=\"presentation\" class=\"flex-auto text-center\">",
          "38:                         <a href=\"#tabs-federated-cli\" class=\"tablink my-2 block border-0 bg-gray-800 px-7 pb-3.5 pt-4 text-xs font-medium uppercase leading-tight text-white hover:bg-gray-700 focus:bg-gray-700 data-[twe-nav-active]:border-yellow-500 data-[twe-nav-active]:text-yellow-500 data-[twe-nav-active]:bg-gray-700 active\" data-twe-toggle=\"pill\" data-twe-target=\"#tabs-federated-cli\" data-twe-nav-active role=\"tab\" aria-controls=\"tabs-federated-cli\" aria-selected=\"true\"><i class=\"fa-solid fa-terminal\"></i> CLI</a>",
          "39:                     </li>",
          "40:                     <li role=\"presentation\" class=\"flex-auto text-center\">",
          "41:                         <a href=\"#tabs-federated-docker\" class=\"tablink my-2 block border-0 bg-gray-800 px-7 pb-3.5 pt-4 text-xs font-medium uppercase leading-tight text-white hover:bg-gray-700 focus:bg-gray-700 data-[twe-nav-active]:border-yellow-500 data-[twe-nav-active]:text-yellow-500 data-[twe-nav-active]:bg-gray-700\" data-twe-toggle=\"pill\" data-twe-target=\"#tabs-federated-docker\" role=\"tab\" aria-controls=\"tabs-federated-docker\" aria-selected=\"false\"><i class=\"fa-solid fa-box-open\"></i> Container images</a>",
          "42:                     </li>",
          "43:                 </ul>",
          "45:                 <!-- Tabs content -->",
          "46:                 <div class=\"mb-6\">",
          "48:                     <div class=\"tabcontent hidden opacity-100 transition-opacity duration-150 ease-linear data-[twe-tab-active]:block p-4\" id=\"tabs-federated-cli\" role=\"tabpanel\" aria-labelledby=\"tabs-federated-cli\" data-twe-tab-active>",
          "51:                         <p class=\"mb-2\">To start a new instance to share:</p>",
          "52:                         <code class=\"block bg-gray-700 text-yellow-300 p-4 rounded-lg break-words\">",
          "53:                             # Start a new instance to share with --federated and a TOKEN<br>",
          "54:                             export TOKEN=\"<span class=\"token\">{{.P2PToken}}</span>\"<br>",
          "55:                             local-ai run --federated --p2p",
          "56:                         </code>",
          "58:                         <p class=\"mt-2\">Note: If you don't have a token do not specify it and use the generated one that you can find in this page.</p>",
          "60:                         <p class=\"mb-2\">To start a new federated load balancer:</p>",
          "61:                         <code class=\"block bg-gray-700 text-yellow-300 p-4 rounded-lg break-words\">",
          "62:                             export TOKEN=\"<span class=\"token\">{{.P2PToken}}</span>\"<br>",
          "63:                             local-ai federated",
          "64:                         </code>",
          "66:                         <p class=\"mt-2\">Note: Token is needed when starting the federated server.</p>",
          "68:                         <p class=\"mt-2\">For all the options available, please refer to the <a href=\"https://localai.io/features/distribute/#starting-workers\" target=\"_blank\" class=\"text-yellow-300 hover:text-yellow-400\">documentation</a>.</p>",
          "69:                     </div>",
          "70:                     <div class=\"tabcontent hidden opacity-0 transition-opacity duration-150 ease-linear data-[twe-tab-active]:block p-4\" id=\"tabs-federated-docker\" role=\"tabpanel\" aria-labelledby=\"tabs-federated-docker\">",
          "71:                         <p class=\"mb-2\">To start a new federated instance:</p>",
          "72:                         <code class=\"block bg-gray-700 text-yellow-300 p-4 rounded-lg break-words\">",
          "73:                             docker run -ti --net host -e TOKEN=\"<span class=\"token\">{{.P2PToken}}</span>\" --name local-ai -p 8080:8080 localai/localai:latest-cpu run --federated --p2p",
          "74:                         </code>",
          "76:                         <p class=\"mb-2\">To start a new federated server (port to 9090):</p>",
          "77:                         <code class=\"block bg-gray-700 text-yellow-300 p-4 rounded-lg break-words\">",
          "78:                             docker run -ti --net host -e TOKEN=\"<span class=\"token\">{{.P2PToken}}</span>\" --name local-ai -p 9090:8080 localai/localai:latest-cpu federated",
          "79:                         </code>",
          "81:                         <p class=\"mt-2\">For all the options available and see what image to use, please refer to the <a href=\"https://localai.io/basics/container/\" target=\"_blank\" class=\"text-yellow-300 hover:text-yellow-400\">Container images documentation</a> and <a href=\"https://localai.io/advanced/#cli-parameters\" target=\"_blank\" class=\"text-yellow-300 hover:text-yellow-400\">CLI parameters documentation</a>.</p>",
          "82:                     </div>",
          "83:                 </div>",
          "84:             </div>",
          "86:             <!-- Llama.cpp Box -->",
          "88:             <div class=\"bg-gray-800 p-6 rounded-lg shadow-lg mb-12 text-left\">",
          "90:                 <p class=\"text-xl font-semibold text-gray-200\"> <i class=\"text-gray-200 fa-solid fa-circle-nodes\"></i> Workers (llama.cpp): <span hx-get=\"/p2p/ui/workers-stats\" hx-trigger=\"every 1s\"></span> </p>",
          "91:                 <p class=\"mb-4\">You can start llama.cpp workers to distribute weights between the workers and offload part of the computation. To start a new worker, you can use the CLI or Docker.</p>",
          "93:                 <div class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4 mb-12\">",
          "94:                     <div hx-get=\"/p2p/ui/workers\" hx-trigger=\"every 1s\"></div>",
          "95:                 </div>",
          "96:                 <hr class=\"border-gray-700 mb-12\">",
          "98:                 <h3 class=\"text-2xl font-semibold text-gray-100 mb-6\"><i class=\"fa-solid fa-book\"></i> Start a new llama.cpp P2P worker</h3>",
          "100:                 <!-- Tabs navigation -->",
          "101:                 <ul class=\"mb-5 flex list-none flex-row flex-wrap ps-0\" role=\"tablist\" data-twe-nav-ref>",
          "102:                     <li role=\"presentation\" class=\"flex-auto text-center\">",
          "103:                         <a href=\"#tabs-cli\" class=\"tablink my-2 block border-0 bg-gray-800 px-7 pb-3.5 pt-4 text-xs font-medium uppercase leading-tight text-white hover:bg-gray-700 focus:bg-gray-700 data-[twe-nav-active]:border-yellow-500 data-[twe-nav-active]:text-yellow-500 data-[twe-nav-active]:bg-gray-700 active\" data-twe-toggle=\"pill\" data-twe-target=\"#tabs-cli\" data-twe-nav-active role=\"tab\" aria-controls=\"tabs-cli\" aria-selected=\"true\"><i class=\"fa-solid fa-terminal\"></i> CLI</a>",
          "104:                     </li>",
          "105:                     <li role=\"presentation\" class=\"flex-auto text-center\">",
          "106:                         <a href=\"#tabs-docker\" class=\"tablink my-2 block border-0 bg-gray-800 px-7 pb-3.5 pt-4 text-xs font-medium uppercase leading-tight text-white hover:bg-gray-700 focus:bg-gray-700 data-[twe-nav-active]:border-yellow-500 data-[twe-nav-active]:text-yellow-500 data-[twe-nav-active]:bg-gray-700\" data-twe-toggle=\"pill\" data-twe-target=\"#tabs-docker\" role=\"tab\" aria-controls=\"tabs-docker\" aria-selected=\"false\"><i class=\"fa-solid fa-box-open\"></i> Container images</a>",
          "107:                     </li>",
          "108:                 </ul>",
          "110:                 <!-- Tabs content -->",
          "111:                 <div class=\"mb-6\">",
          "112:                     <div class=\"tabcontent hidden opacity-100 transition-opacity duration-150 ease-linear data-[twe-tab-active]:block p-4\" id=\"tabs-cli\" role=\"tabpanel\" aria-labelledby=\"tabs-cli\" data-twe-tab-active>",
          "113:                         <p class=\"mb-2\">To start a new worker, run the following command:</p>",
          "114:                         <code class=\"block bg-gray-700 text-yellow-300 p-4 rounded-lg break-words\">",
          "115:                             export TOKEN=\"<span class=\"token\">{{.P2PToken}}</span>\"<br>",
          "116:                             local-ai worker p2p-llama-cpp-rpc",
          "117:                         </code>",
          "119:                         <p class=\"mt-2\">For all the options available, please refer to the <a href=\"https://localai.io/features/distribute/#starting-workers\" target=\"_blank\" class=\"text-yellow-300 hover:text-yellow-400\">documentation</a>.</p>",
          "120:                     </div>",
          "121:                     <div class=\"tabcontent hidden opacity-0 transition-opacity duration-150 ease-linear data-[twe-tab-active]:block p-4\" id=\"tabs-docker\" role=\"tabpanel\" aria-labelledby=\"tabs-docker\">",
          "122:                         <p class=\"mb-2\">To start a new worker with docker, run the following command:</p>",
          "123:                         <code class=\"block bg-gray-700 text-yellow-300 p-4 rounded-lg break-words\">",
          "124:                             docker run -ti --net host -e TOKEN=\"<span class=\"token\">{{.P2PToken}}</span>\" --name local-ai -p 8080:8080 localai/localai:latest-cpu worker p2p-llama-cpp-rpc",
          "125:                         </code>",
          "127:                         <p class=\"mt-2\">For all the options available and see what image to use, please refer to the <a href=\"https://localai.io/basics/container/\" target=\"_blank\" class=\"text-yellow-300 hover:text-yellow-400\">Container images documentation</a> and <a href=\"https://localai.io/advanced/#cli-parameters\" target=\"_blank\" class=\"text-yellow-300 hover:text-yellow-400\">CLI parameters documentation</a>.</p>",
          "128:                     </div>",
          "129:                 </div>",
          "130:             </div>",
          "131:             <!-- Llama.cpp Box END -->",
          "132:         </div>",
          "133:     </div>",
          "135:     {{template \"views/partials/footer\" .}}",
          "136: </div>",
          "138: <style>",
          "139:     .token {",
          "140:         word-break: break-all;",
          "141:     }",
          "142:     .workers .grid div {",
          "143:         display: flex;",
          "144:         flex-direction: column;",
          "145:         justify-content: space-between;",
          "146:     }",
          "147: </style>",
          "149: </body>",
          "150: </html>",
          "",
          "---------------"
        ],
        "core/http/views/partials/footer.html||core/http/views/partials/footer.html": [
          "File: core/http/views/partials/footer.html -> core/http/views/partials/footer.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <footer class=\"text-center py-8\">",
          "2:     LocalAI Version {{.Version}}<br>",
          "3:     <a href='https://localai.io' class=\"text-blue-400 hover:text-blue-600\" target=\"_blank\">LocalAI</a> \u00a9 2023-2024 <a href='https://mudler.pm' class=\"text-blue-400 hover:text-blue-600\" target=\"_blank\">Ettore Di Giacinto</a>",
          "",
          "[Removed Lines]",
          "4: </footer>",
          "",
          "[Added Lines]",
          "5: <script src=\"/static/assets/tw-elements.js\"></script>",
          "",
          "---------------"
        ],
        "core/http/views/partials/navbar.html||core/http/views/partials/navbar.html": [
          "File: core/http/views/partials/navbar.html -> core/http/views/partials/navbar.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:                 <a href=\"/text2image/\" class=\"text-gray-400 hover:text-white px-3 py-2 rounded\"><i class=\"fas fa-image pr-2\"></i> Generate images</a>",
          "22:                 <a href=\"/tts/\" class=\"text-gray-400 hover:text-white px-3 py-2 rounded\"><i class=\"fa-solid fa-music pr-2\"></i> TTS </a>",
          "23:                 <a href=\"/talk/\" class=\"text-gray-400 hover:text-white px-3 py-2 rounded\"><i class=\"fa-solid fa-phone pr-2\"></i> Talk </a>",
          "24:                 <a href=\"/swagger/\" class=\"text-gray-400 hover:text-white px-3 py-2 rounded\"><i class=\"fas fa-code pr-2\"></i> API</a>",
          "25:             </div>",
          "26:         </div>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24:                 {{ if .IsP2PEnabled }}",
          "25:                 <a href=\"/p2p/\" class=\"text-gray-400 hover:text-white px-3 py-2 rounded\"><i class=\"fa-solid fa-circle-nodes\"></i> Swarm </a>",
          "26:                 {{ end }}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34:                 <a href=\"/text2image/\" class=\"block text-gray-400 hover:text-white px-3 py-2 rounded mt-1\"><i class=\"fas fa-image pr-2\"></i> Generate images</a>",
          "35:                 <a href=\"/tts/\" class=\"block text-gray-400 hover:text-white px-3 py-2 rounded mt-1\"><i class=\"fa-solid fa-music pr-2\"></i> TTS </a>",
          "36:                 <a href=\"/talk/\" class=\"block text-gray-400 hover:text-white px-3 py-2 rounded mt-1\"><i class=\"fa-solid fa-phone pr-2\"></i> Talk </a>",
          "37:                 <a href=\"/swagger/\" class=\"block text-gray-400 hover:text-white px-3 py-2 rounded mt-1\"><i class=\"fas fa-code pr-2\"></i> API</a>",
          "38:             </div>",
          "39:         </div>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:                 {{ if .IsP2PEnabled }}",
          "41:                 <a href=\"/p2p/\" class=\"block text-gray-400 hover:text-white px-3 py-2 rounded mt-1\"><i class=\"fa-solid fa-circle-nodes\"></i> Swarm </a>",
          "42:                 {{ end }}",
          "",
          "---------------"
        ],
        "core/http/views/talk.html||core/http/views/talk.html": [
          "File: core/http/views/talk.html -> core/http/views/talk.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:   <body class=\"bg-gray-900 text-gray-200\" x-data=\"{ key: $store.chat.key }\">",
          "11:     <div class=\"flex flex-col min-h-screen\">",
          "14:     <div class=\"chat-container mt-2 mr-2 ml-2 mb-2 bg-gray-800 shadow-lg rounded-lg \" >",
          "15:      <!-- Chat Header -->",
          "16:       <div class=\"border-b border-gray-700 p-4\"  x-data=\"{ component: 'menu' }\">",
          "",
          "[Removed Lines]",
          "13:     {{template \"views/partials/navbar\"}}",
          "",
          "[Added Lines]",
          "13:     {{template \"views/partials/navbar\" .}}",
          "",
          "---------------"
        ],
        "core/p2p/node.go||core/p2p/node.go": [
          "File: core/p2p/node.go -> core/p2p/node.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package p2p",
          "3: import (",
          "4:  \"sync\"",
          "5:  \"time\"",
          "6: )",
          "8: const defaultServicesID = \"services_localai\"",
          "9: const FederatedID = \"federated\"",
          "11: type NodeData struct {",
          "12:  Name          string",
          "13:  ID            string",
          "14:  TunnelAddress string",
          "15:  LastSeen      time.Time",
          "16: }",
          "18: func (d NodeData) IsOnline() bool {",
          "19:  now := time.Now()",
          "21:  return now.Sub(d.LastSeen) < 40*time.Second",
          "22: }",
          "24: var mu sync.Mutex",
          "25: var nodes = map[string]map[string]NodeData{}",
          "27: func GetAvailableNodes(serviceID string) []NodeData {",
          "28:  if serviceID == \"\" {",
          "29:   serviceID = defaultServicesID",
          "30:  }",
          "31:  mu.Lock()",
          "32:  defer mu.Unlock()",
          "33:  var availableNodes = []NodeData{}",
          "34:  for _, v := range nodes[serviceID] {",
          "35:   availableNodes = append(availableNodes, v)",
          "36:  }",
          "37:  return availableNodes",
          "38: }",
          "40: func AddNode(serviceID string, node NodeData) {",
          "41:  if serviceID == \"\" {",
          "42:   serviceID = defaultServicesID",
          "43:  }",
          "44:  mu.Lock()",
          "45:  defer mu.Unlock()",
          "46:  if nodes[serviceID] == nil {",
          "47:   nodes[serviceID] = map[string]NodeData{}",
          "48:  }",
          "49:  nodes[serviceID][node.ID] = node",
          "50: }",
          "",
          "---------------"
        ],
        "core/p2p/p2p.go||core/p2p/p2p.go": [
          "File: core/p2p/p2p.go -> core/p2p/p2p.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:  \"io\"",
          "11:  \"net\"",
          "12:  \"os\"",
          "14:  \"time\"",
          "16:  \"github.com/libp2p/go-libp2p/core/peer\"",
          "17:  \"github.com/mudler/LocalAI/pkg/utils\"",
          "18:  \"github.com/mudler/edgevpn/pkg/node\"",
          "19:  \"github.com/mudler/edgevpn/pkg/protocol\"",
          "20:  \"github.com/mudler/edgevpn/pkg/types\"",
          "21:  \"github.com/phayes/freeport\"",
          "26:  zlog \"github.com/rs/zerolog/log\"",
          "28:  \"github.com/mudler/edgevpn/pkg/logger\"",
          "",
          "[Removed Lines]",
          "13:  \"strings\"",
          "23:  \"github.com/ipfs/go-log\"",
          "24:  \"github.com/mudler/edgevpn/pkg/config\"",
          "25:  \"github.com/mudler/edgevpn/pkg/services\"",
          "",
          "[Added Lines]",
          "13:  \"sync\"",
          "16:  \"github.com/ipfs/go-log\"",
          "19:  \"github.com/mudler/edgevpn/pkg/config\"",
          "22:  \"github.com/mudler/edgevpn/pkg/services\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34:  return newData.Base64()",
          "35: }",
          "37: func allocateLocalService(ctx context.Context, node *node.Node, listenAddr, service string) error {",
          "39:  zlog.Info().Msgf(\"Allocating service '%s' on: %s\", service, listenAddr)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36: func IsP2PEnabled() bool {",
          "37:  return true",
          "38: }",
          "40: func nodeID(s string) string {",
          "41:  hostname, _ := os.Hostname()",
          "42:  return fmt.Sprintf(\"%s-%s\", hostname, s)",
          "43: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "53:   10*time.Second,",
          "54:   func() {",
          "65:    }",
          "66:   },",
          "67:  )",
          "",
          "[Removed Lines]",
          "56:    _, found := ledger.GetKey(protocol.UsersLedgerKey, node.Host().ID().String())",
          "58:    if !found {",
          "59:     updatedMap := map[string]interface{}{}",
          "60:     updatedMap[node.Host().ID().String()] = &types.User{",
          "61:      PeerID:    node.Host().ID().String(),",
          "62:      Timestamp: time.Now().String(),",
          "63:     }",
          "64:     ledger.Add(protocol.UsersLedgerKey, updatedMap)",
          "",
          "[Added Lines]",
          "67:    updatedMap := map[string]interface{}{}",
          "68:    updatedMap[node.Host().ID().String()] = &types.User{",
          "69:     PeerID:    node.Host().ID().String(),",
          "70:     Timestamp: time.Now().String(),",
          "72:    ledger.Add(protocol.UsersLedgerKey, updatedMap)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "142:  if err != nil {",
          "143:   return err",
          "144:  }",
          "146:  go func() {",
          "148:   for {",
          "149:    select {",
          "150:    case <-ctx.Done():",
          "151:     zlog.Error().Msg(\"Discoverer stopped\")",
          "152:     return",
          "153:    case tunnel := <-tunnels:",
          "158:    }",
          "159:   }",
          "160:  }()",
          "",
          "[Removed Lines]",
          "140: func LLamaCPPRPCServerDiscoverer(ctx context.Context, token string) error {",
          "141:  tunnels, err := discoveryTunnels(ctx, token)",
          "147:   totalTunnels := []string{}",
          "155:     totalTunnels = append(totalTunnels, tunnel)",
          "156:     os.Setenv(\"LLAMACPP_GRPC_SERVERS\", strings.Join(totalTunnels, \",\"))",
          "157:     zlog.Debug().Msgf(\"setting LLAMACPP_GRPC_SERVERS to %s\", strings.Join(totalTunnels, \",\"))",
          "",
          "[Added Lines]",
          "147: func ServiceDiscoverer(ctx context.Context, n *node.Node, token, servicesID string, discoveryFunc func()) error {",
          "148:  if servicesID == \"\" {",
          "149:   servicesID = defaultServicesID",
          "150:  }",
          "151:  tunnels, err := discoveryTunnels(ctx, n, token, servicesID)",
          "167:     AddNode(servicesID, tunnel)",
          "168:     if discoveryFunc != nil {",
          "169:      discoveryFunc()",
          "170:     }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "162:  return nil",
          "163: }",
          "178:  if err != nil {",
          "179:   return nil, fmt.Errorf(\"creating a new node: %w\", err)",
          "180:  }",
          "",
          "[Removed Lines]",
          "165: func discoveryTunnels(ctx context.Context, token string) (chan string, error) {",
          "166:  tunnels := make(chan string)",
          "168:  nodeOpts, err := newNodeOpts(token)",
          "169:  if err != nil {",
          "170:   return nil, err",
          "171:  }",
          "173:  n, err := node.New(nodeOpts...)",
          "174:  if err != nil {",
          "175:   return nil, fmt.Errorf(\"creating a new node: %w\", err)",
          "176:  }",
          "177:  err = n.Start(ctx)",
          "",
          "[Added Lines]",
          "178: func discoveryTunnels(ctx context.Context, n *node.Node, token, servicesID string) (chan NodeData, error) {",
          "179:  tunnels := make(chan NodeData)",
          "181:  err := n.Start(ctx)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "184:  }",
          "187:  go func() {",
          "189:   for {",
          "190:    select {",
          "191:    case <-ctx.Done():",
          "",
          "[Removed Lines]",
          "188:   emitted := map[string]bool{}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "195:     time.Sleep(5 * time.Second)",
          "196:     zlog.Debug().Msg(\"Searching for workers\")",
          "200:      zlog.Info().Msgf(\"Found worker %s\", k)",
          "211:      }",
          "212:     }",
          "213:    }",
          "214:   }",
          "",
          "[Removed Lines]",
          "198:     data := ledger.LastBlock().Storage[\"services_localai\"]",
          "199:     for k := range data {",
          "201:      if _, found := emitted[k]; !found {",
          "202:       emitted[k] = true",
          "204:       port, err := freeport.GetFreePort()",
          "205:       if err != nil {",
          "206:        fmt.Print(err)",
          "207:       }",
          "208:       tunnelAddress := fmt.Sprintf(\"127.0.0.1:%d\", port)",
          "209:       go allocateLocalService(ctx, n, tunnelAddress, k)",
          "210:       tunnels <- tunnelAddress",
          "",
          "[Added Lines]",
          "208:     data := ledger.LastBlock().Storage[servicesID]",
          "209:     for k, v := range data {",
          "211:      nd := &NodeData{}",
          "212:      if err := v.Unmarshal(nd); err != nil {",
          "213:       zlog.Error().Msg(\"cannot unmarshal node data\")",
          "214:       continue",
          "216:      ensureService(ctx, n, nd, k)",
          "217:      muservice.Lock()",
          "218:      if _, ok := service[nd.Name]; ok {",
          "219:       tunnels <- service[nd.Name].NodeData",
          "220:      }",
          "221:      muservice.Unlock()",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "217:  return tunnels, err",
          "218: }",
          "222:  llger := logger.New(log.LevelFatal)",
          "224:  nodeOpts, err := newNodeOpts(token)",
          "",
          "[Removed Lines]",
          "221: func BindLLamaCPPWorker(ctx context.Context, host, port, token string) error {",
          "",
          "[Added Lines]",
          "230: type nodeServiceData struct {",
          "231:  NodeData   NodeData",
          "232:  CancelFunc context.CancelFunc",
          "233: }",
          "235: var service = map[string]nodeServiceData{}",
          "236: var muservice sync.Mutex",
          "238: func ensureService(ctx context.Context, n *node.Node, nd *NodeData, sserv string) {",
          "239:  muservice.Lock()",
          "240:  defer muservice.Unlock()",
          "241:  if ndService, found := service[nd.Name]; !found {",
          "242:   if !nd.IsOnline() {",
          "244:    return",
          "245:   }",
          "246:   newCtxm, cancel := context.WithCancel(ctx)",
          "248:   port, err := freeport.GetFreePort()",
          "249:   if err != nil {",
          "250:    fmt.Print(err)",
          "251:   }",
          "252:   tunnelAddress := fmt.Sprintf(\"127.0.0.1:%d\", port)",
          "253:   nd.TunnelAddress = tunnelAddress",
          "254:   service[nd.Name] = nodeServiceData{",
          "255:    NodeData:   *nd,",
          "256:    CancelFunc: cancel,",
          "257:   }",
          "258:   go allocateLocalService(newCtxm, n, tunnelAddress, sserv)",
          "259:   zlog.Debug().Msgf(\"Starting service %s on %s\", sserv, tunnelAddress)",
          "260:  } else {",
          "263:   if !nd.IsOnline() && !ndService.NodeData.IsOnline() {",
          "264:    ndService.CancelFunc()",
          "265:    delete(service, nd.Name)",
          "266:    zlog.Info().Msgf(\"Node %s is offline, deleting\", nd.ID)",
          "267:   } else if nd.IsOnline() {",
          "269:    nd.TunnelAddress = ndService.NodeData.TunnelAddress",
          "270:    service[nd.Name] = nodeServiceData{",
          "271:     NodeData:   *nd,",
          "272:     CancelFunc: ndService.CancelFunc,",
          "273:    }",
          "274:    zlog.Debug().Msgf(\"Node %s is still online\", nd.ID)",
          "275:   }",
          "276:  }",
          "277: }",
          "280: func ExposeService(ctx context.Context, host, port, token, servicesID string) error {",
          "281:  if servicesID == \"\" {",
          "282:   servicesID = defaultServicesID",
          "283:  }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "249:  ledger.Announce(",
          "250:   ctx,",
          "252:   func() {",
          "260:    }",
          "261:   },",
          "262:  )",
          "264:  return err",
          "265: }",
          "267: func newNodeOpts(token string) ([]node.Option, error) {",
          "268:  llger := logger.New(log.LevelFatal)",
          "269:  defaultInterval := 10 * time.Second",
          "",
          "[Removed Lines]",
          "251:   10*time.Second,",
          "254:    _, found := ledger.GetKey(\"services_localai\", name)",
          "256:    if !found {",
          "257:     updatedMap := map[string]interface{}{}",
          "258:     updatedMap[name] = \"p2p\"",
          "259:     ledger.Add(\"services_localai\", updatedMap)",
          "",
          "[Added Lines]",
          "313:   20*time.Second,",
          "319:    updatedMap := map[string]interface{}{}",
          "320:    updatedMap[name] = &NodeData{",
          "321:     Name:     name,",
          "322:     LastSeen: time.Now(),",
          "323:     ID:       nodeID(name),",
          "325:    ledger.Add(servicesID, updatedMap)",
          "333: func NewNode(token string) (*node.Node, error) {",
          "334:  nodeOpts, err := newNodeOpts(token)",
          "335:  if err != nil {",
          "336:   return nil, err",
          "337:  }",
          "339:  n, err := node.New(nodeOpts...)",
          "340:  if err != nil {",
          "341:   return nil, fmt.Errorf(\"creating a new node: %w\", err)",
          "342:  }",
          "344:  return n, nil",
          "345: }",
          "",
          "---------------"
        ],
        "core/p2p/p2p_disabled.go||core/p2p/p2p_disabled.go": [
          "File: core/p2p/p2p_disabled.go -> core/p2p/p2p_disabled.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: import (",
          "7:  \"context\"",
          "8:  \"fmt\"",
          "9: )",
          "11: func GenerateToken() string {",
          "12:  return \"not implemented\"",
          "13: }",
          "16:  return fmt.Errorf(\"not implemented\")",
          "17: }",
          "20:  return fmt.Errorf(\"not implemented\")",
          "21: }",
          "",
          "[Removed Lines]",
          "15: func LLamaCPPRPCServerDiscoverer(ctx context.Context, token string) error {",
          "19: func BindLLamaCPPWorker(ctx context.Context, host, port, token string) error {",
          "",
          "[Added Lines]",
          "10:  \"github.com/mudler/edgevpn/pkg/node\"",
          "17: func ServiceDiscoverer(ctx context.Context, node *node.Node, token, servicesID string, fn func()) error {",
          "21: func ExposeService(ctx context.Context, host, port, token, servicesID string) error {",
          "25: func IsP2PEnabled() bool {",
          "26:  return false",
          "27: }",
          "29: func NewNode(token string) (*node.Node, error) {",
          "30:  return nil, fmt.Errorf(\"not implemented\")",
          "31: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0d8bf91699a9deee596011cb1c30be29ec680685",
      "candidate_info": {
        "commit_hash": "0d8bf91699a9deee596011cb1c30be29ec680685",
        "repo": "mudler/localai",
        "commit_url": "https://github.com/mudler/localai/commit/0d8bf91699a9deee596011cb1c30be29ec680685",
        "files": [
          "README.md",
          "core/config/backend_config.go",
          "core/http/app.go",
          "core/http/elements/gallery.go",
          "core/http/endpoints/localai/welcome.go",
          "core/http/routes/localai.go",
          "core/http/routes/ui.go",
          "core/http/routes/welcome.go",
          "core/http/views/models.html",
          "core/http/views/partials/head.html",
          "core/http/views/partials/navbar.html",
          "docs/content/docs/overview.md",
          "go.mod",
          "go.sum",
          "main.go",
          "pkg/downloader/progress.go",
          "pkg/downloader/uri.go",
          "pkg/gallery/models.go",
          "pkg/gallery/op.go",
          "pkg/startup/model_preload.go"
        ],
        "message": "feat: Galleries UI (#2104)\n\n* WIP: add models to webui\n\nSigned-off-by: Ettore Di Giacinto <mudler@localai.io>\n\n* Register routes\n\nSigned-off-by: Ettore Di Giacinto <mudler@localai.io>\n\n* fix: don't cache models\n\nSigned-off-by: Ettore Di Giacinto <mudler@localai.io>\n\n* small fixups\n\nSigned-off-by: Ettore Di Giacinto <mudler@localai.io>\n\n* fix: fixup multiple installs (strings.Clone)\n\nSigned-off-by: Ettore Di Giacinto <mudler@localai.io>\n\n---------\n\nSigned-off-by: Ettore Di Giacinto <mudler@localai.io>",
        "before_after_code_files": [
          "core/config/backend_config.go||core/config/backend_config.go",
          "core/http/app.go||core/http/app.go",
          "core/http/elements/gallery.go||core/http/elements/gallery.go",
          "core/http/endpoints/localai/welcome.go||core/http/endpoints/localai/welcome.go",
          "core/http/routes/localai.go||core/http/routes/localai.go",
          "core/http/routes/ui.go||core/http/routes/ui.go",
          "core/http/routes/welcome.go||core/http/routes/welcome.go",
          "core/http/views/models.html||core/http/views/models.html",
          "core/http/views/partials/head.html||core/http/views/partials/head.html",
          "core/http/views/partials/navbar.html||core/http/views/partials/navbar.html",
          "go.mod||go.mod",
          "go.sum||go.sum",
          "main.go||main.go",
          "pkg/downloader/progress.go||pkg/downloader/progress.go",
          "pkg/downloader/uri.go||pkg/downloader/uri.go",
          "pkg/gallery/models.go||pkg/gallery/models.go",
          "pkg/gallery/op.go||pkg/gallery/op.go",
          "pkg/startup/model_preload.go||pkg/startup/model_preload.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core/http/elements/gallery.go||core/http/elements/gallery.go",
            "core/http/routes/ui.go||core/http/routes/ui.go"
          ],
          "candidate": [
            "core/http/elements/gallery.go||core/http/elements/gallery.go",
            "core/http/routes/ui.go||core/http/routes/ui.go"
          ]
        }
      },
      "candidate_diff": {
        "core/config/backend_config.go||core/config/backend_config.go": [
          "File: core/config/backend_config.go -> core/config/backend_config.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "512:  for i, config := range cl.configs {",
          "516:    log.Debug().Msgf(\"Checking %q exists and matches SHA\", file.Filename)",
          "518:    if err := utils.VerifyPath(file.Filename, modelPath); err != nil {",
          "",
          "[Removed Lines]",
          "515:   for _, file := range config.DownloadFiles {",
          "",
          "[Added Lines]",
          "515:   for i, file := range config.DownloadFiles {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "522:    filePath := filepath.Join(modelPath, file.Filename)",
          "525:     return err",
          "526:    }",
          "527:   }",
          "",
          "[Removed Lines]",
          "524:    if err := downloader.DownloadFile(file.URI, filePath, file.SHA256, status); err != nil {",
          "",
          "[Added Lines]",
          "524:    if err := downloader.DownloadFile(file.URI, filePath, file.SHA256, i, len(config.DownloadFiles), status); err != nil {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "537:    if _, err := os.Stat(filepath.Join(modelPath, md5Name)); errors.Is(err, os.ErrNotExist) {",
          "539:     if err != nil {",
          "540:      return err",
          "541:     }",
          "",
          "[Removed Lines]",
          "538:     err := downloader.DownloadFile(modelURL, filepath.Join(modelPath, md5Name), \"\", status)",
          "",
          "[Added Lines]",
          "538:     err := downloader.DownloadFile(modelURL, filepath.Join(modelPath, md5Name), \"\", 0, 0, status)",
          "",
          "---------------"
        ],
        "core/http/app.go||core/http/app.go": [
          "File: core/http/app.go -> core/http/app.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "186:  utils.LoadConfig(appConfig.ConfigsDir, openai.AssistantsConfigFile, &openai.Assistants)",
          "187:  utils.LoadConfig(appConfig.ConfigsDir, openai.AssistantsFileConfigFile, &openai.AssistantFiles)",
          "189:  routes.RegisterElevenLabsRoutes(app, cl, ml, appConfig, auth)",
          "191:  routes.RegisterOpenAIRoutes(app, cl, ml, appConfig, auth)",
          "192:  routes.RegisterPagesRoutes(app, cl, ml, appConfig, auth)",
          "",
          "[Removed Lines]",
          "190:  routes.RegisterLocalAIRoutes(app, cl, ml, appConfig, auth)",
          "",
          "[Added Lines]",
          "189:  galleryService := services.NewGalleryService(appConfig.ModelPath)",
          "190:  galleryService.Start(appConfig.Context, cl)",
          "193:  routes.RegisterLocalAIRoutes(app, cl, ml, appConfig, galleryService, auth)",
          "196:  routes.RegisterUIRoutes(app, cl, ml, appConfig, galleryService, auth)",
          "",
          "---------------"
        ],
        "core/http/elements/gallery.go||core/http/elements/gallery.go": [
          "File: core/http/elements/gallery.go -> core/http/elements/gallery.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package elements",
          "3: import (",
          "4:  \"fmt\"",
          "6:  \"github.com/chasefleming/elem-go\"",
          "7:  \"github.com/chasefleming/elem-go/attrs\"",
          "8:  \"github.com/go-skynet/LocalAI/pkg/gallery\"",
          "9: )",
          "11: func DoneProgress(uid string) string {",
          "12:  return elem.Div(",
          "13:   attrs.Props{},",
          "14:   elem.H3(",
          "15:    attrs.Props{",
          "16:     \"role\":      \"status\",",
          "17:     \"id\":        \"pblabel\",",
          "18:     \"tabindex\":  \"-1\",",
          "19:     \"autofocus\": \"\",",
          "20:    },",
          "21:    elem.Text(\"Installation completed\"),",
          "22:   ),",
          "23:  ).Render()",
          "24: }",
          "26: func ErrorProgress(err string) string {",
          "27:  return elem.Div(",
          "28:   attrs.Props{},",
          "29:   elem.H3(",
          "30:    attrs.Props{",
          "31:     \"role\":      \"status\",",
          "32:     \"id\":        \"pblabel\",",
          "33:     \"tabindex\":  \"-1\",",
          "34:     \"autofocus\": \"\",",
          "35:    },",
          "36:    elem.Text(\"Error\"+err),",
          "37:   ),",
          "38:  ).Render()",
          "39: }",
          "41: func ProgressBar(progress string) string {",
          "42:  return elem.Div(attrs.Props{",
          "43:   \"class\":           \"progress\",",
          "44:   \"role\":            \"progressbar\",",
          "45:   \"aria-valuemin\":   \"0\",",
          "46:   \"aria-valuemax\":   \"100\",",
          "47:   \"aria-valuenow\":   \"0\",",
          "48:   \"aria-labelledby\": \"pblabel\",",
          "49:  },",
          "50:   elem.Div(attrs.Props{",
          "51:    \"id\":    \"pb\",",
          "52:    \"class\": \"progress-bar\",",
          "53:    \"style\": \"width:\" + progress + \"%\",",
          "54:   }),",
          "55:  ).Render()",
          "56: }",
          "58: func StartProgressBar(uid, progress string) string {",
          "59:  if progress == \"\" {",
          "60:   progress = \"0\"",
          "61:  }",
          "62:  return elem.Div(attrs.Props{",
          "63:   \"hx-trigger\": \"done\",",
          "64:   \"hx-get\":     \"/browse/job/\" + uid,",
          "65:   \"hx-swap\":    \"outerHTML\",",
          "66:   \"hx-target\":  \"this\",",
          "67:  },",
          "68:   elem.H3(",
          "69:    attrs.Props{",
          "70:     \"role\":      \"status\",",
          "71:     \"id\":        \"pblabel\",",
          "72:     \"tabindex\":  \"-1\",",
          "73:     \"autofocus\": \"\",",
          "74:    },",
          "75:    elem.Text(\"Installing\"),",
          "77:    elem.Div(attrs.Props{",
          "78:     \"hx-get\":     \"/browse/job/progress/\" + uid,",
          "79:     \"hx-trigger\": \"every 600ms\",",
          "80:     \"hx-target\":  \"this\",",
          "81:     \"hx-swap\":    \"innerHTML\",",
          "82:    },",
          "83:     elem.Raw(ProgressBar(progress)),",
          "84:    ),",
          "85:   ),",
          "86:  ).Render()",
          "87: }",
          "89: func ListModels(models []*gallery.GalleryModel) string {",
          "90:  modelsElements := []elem.Node{}",
          "91:  span := func(s string) elem.Node {",
          "92:   return elem.Span(",
          "93:    attrs.Props{",
          "94:     \"class\": \"float-right inline-block bg-green-500 text-white py-1 px-3 rounded-full text-xs\",",
          "95:    },",
          "96:    elem.Text(s),",
          "97:   )",
          "98:  }",
          "99:  installButton := func(m *gallery.GalleryModel) elem.Node {",
          "100:   return elem.Button(",
          "101:    attrs.Props{",
          "102:     \"class\": \"float-right inline-block rounded bg-primary px-6 pb-2 pt-2.5 text-xs font-medium uppercase leading-normal text-white shadow-primary-3 transition duration-150 ease-in-out hover:bg-primary-accent-300 hover:shadow-primary-2 focus:bg-primary-accent-300 focus:shadow-primary-2 focus:outline-none focus:ring-0 active:bg-primary-600 active:shadow-primary-2 dark:shadow-black/30 dark:hover:shadow-dark-strong dark:focus:shadow-dark-strong dark:active:shadow-dark-strong\",",
          "104:     \"hx-post\": \"/browse/install/model/\" + fmt.Sprintf(\"%s@%s\", m.Gallery.Name, m.Name),",
          "105:    },",
          "106:    elem.Text(\"Install\"),",
          "107:   )",
          "108:  }",
          "110:  descriptionDiv := func(m *gallery.GalleryModel) elem.Node {",
          "112:   return elem.Div(",
          "113:    attrs.Props{",
          "114:     \"class\": \"p-6\",",
          "115:    },",
          "116:    elem.H5(",
          "117:     attrs.Props{",
          "118:      \"class\": \"mb-2 text-xl font-medium leading-tight\",",
          "119:     },",
          "120:     elem.Text(m.Name),",
          "121:    ),",
          "122:    elem.P(",
          "123:     attrs.Props{",
          "124:      \"class\": \"mb-4 text-base\",",
          "125:     },",
          "126:     elem.Text(m.Description),",
          "127:    ),",
          "128:   )",
          "129:  }",
          "131:  actionDiv := func(m *gallery.GalleryModel) elem.Node {",
          "132:   return elem.Div(",
          "133:    attrs.Props{",
          "134:     \"class\": \"px-6 pt-4 pb-2\",",
          "135:    },",
          "136:    elem.Span(",
          "137:     attrs.Props{",
          "138:      \"class\": \"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\",",
          "139:     },",
          "140:     elem.Text(\"Repository: \"+m.Gallery.Name),",
          "141:    ),",
          "142:    elem.If(m.Installed, span(\"Installed\"), installButton(m)),",
          "143:   )",
          "144:  }",
          "146:  for _, m := range models {",
          "147:   modelsElements = append(modelsElements,",
          "148:    elem.Div(",
          "149:     attrs.Props{",
          "150:      \"class\": \"me-4 mb-2 block rounded-lg bg-white shadow-secondary-1  dark:bg-gray-800 dark:bg-surface-dark dark:text-white text-surface p-2\",",
          "151:     },",
          "152:     elem.Div(",
          "153:      attrs.Props{",
          "154:       \"class\": \"p-6\",",
          "155:      },",
          "156:      descriptionDiv(m),",
          "157:      actionDiv(m),",
          "161:     ),",
          "162:    ),",
          "163:   )",
          "164:  }",
          "166:  wrapper := elem.Div(attrs.Props{",
          "167:   \"class\": \"dark grid grid-cols-1 grid-rows-1 md:grid-cols-2 \",",
          "168:  }, modelsElements...)",
          "170:  return wrapper.Render()",
          "171: }",
          "",
          "---------------"
        ],
        "core/http/endpoints/localai/welcome.go||core/http/endpoints/localai/welcome.go": [
          "File: core/http/endpoints/localai/welcome.go -> core/http/endpoints/localai/welcome.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"github.com/go-skynet/LocalAI/core/config\"",
          "5:  \"github.com/go-skynet/LocalAI/internal\"",
          "6:  \"github.com/gofiber/fiber/v2\"",
          "7: )",
          "9: func WelcomeEndpoint(appConfig *config.ApplicationConfig,",
          "11:  return func(c *fiber.Ctx) error {",
          "12:   summary := fiber.Map{",
          "13:    \"Title\":             \"LocalAI API - \" + internal.PrintableVersion(),",
          "14:    \"Version\":           internal.PrintableVersion(),",
          "",
          "[Removed Lines]",
          "10:  models []string, backendConfigs []config.BackendConfig) func(*fiber.Ctx) error {",
          "",
          "[Added Lines]",
          "6:  \"github.com/go-skynet/LocalAI/pkg/model\"",
          "11:  cl *config.BackendConfigLoader, ml *model.ModelLoader) func(*fiber.Ctx) error {",
          "13:   models, _ := ml.ListModels()",
          "14:   backendConfigs := cl.GetAllBackendConfigs()",
          "",
          "---------------"
        ],
        "core/http/routes/localai.go||core/http/routes/localai.go": [
          "File: core/http/routes/localai.go -> core/http/routes/localai.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:  cl *config.BackendConfigLoader,",
          "15:  ml *model.ModelLoader,",
          "16:  appConfig *config.ApplicationConfig,",
          "17:  auth func(*fiber.Ctx) error) {",
          "19:  app.Get(\"/swagger/*\", swagger.HandlerDefault) // default",
          "25:  modelGalleryEndpointService := localai.CreateModelGalleryEndpointService(appConfig.Galleries, appConfig.ModelPath, galleryService)",
          "26:  app.Post(\"/models/apply\", auth, modelGalleryEndpointService.ApplyModelGalleryEndpoint())",
          "",
          "[Removed Lines]",
          "22:  galleryService := services.NewGalleryService(appConfig.ModelPath)",
          "23:  galleryService.Start(appConfig.Context, cl)",
          "",
          "[Added Lines]",
          "17:  galleryService *services.GalleryService,",
          "",
          "---------------"
        ],
        "core/http/routes/ui.go||core/http/routes/ui.go": [
          "File: core/http/routes/ui.go -> core/http/routes/ui.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package routes",
          "3: import (",
          "4:  \"fmt\"",
          "5:  \"html/template\"",
          "6:  \"strings\"",
          "8:  \"github.com/go-skynet/LocalAI/core/config\"",
          "9:  \"github.com/go-skynet/LocalAI/core/http/elements\"",
          "10:  \"github.com/go-skynet/LocalAI/core/services\"",
          "11:  \"github.com/go-skynet/LocalAI/pkg/gallery\"",
          "12:  \"github.com/go-skynet/LocalAI/pkg/model\"",
          "13:  \"github.com/gofiber/fiber/v2\"",
          "14:  \"github.com/google/uuid\"",
          "15: )",
          "17: func RegisterUIRoutes(app *fiber.App,",
          "18:  cl *config.BackendConfigLoader,",
          "19:  ml *model.ModelLoader,",
          "20:  appConfig *config.ApplicationConfig,",
          "21:  galleryService *services.GalleryService,",
          "22:  auth func(*fiber.Ctx) error) {",
          "25:  app.Get(\"/browse\", auth, func(c *fiber.Ctx) error {",
          "26:   models, _ := gallery.AvailableGalleryModels(appConfig.Galleries, appConfig.ModelPath)",
          "28:   summary := fiber.Map{",
          "29:    \"Title\":  \"LocalAI API - Models\",",
          "30:    \"Models\": template.HTML(elements.ListModels(models)),",
          "32:   }",
          "35:   return c.Render(\"views/models\", summary)",
          "36:  })",
          "40:  app.Post(\"/browse/search/models\", auth, func(c *fiber.Ctx) error {",
          "41:   form := struct {",
          "42:    Search string `form:\"search\"`",
          "43:   }{}",
          "44:   if err := c.BodyParser(&form); err != nil {",
          "45:    return c.Status(fiber.StatusBadRequest).SendString(err.Error())",
          "46:   }",
          "48:   models, _ := gallery.AvailableGalleryModels(appConfig.Galleries, appConfig.ModelPath)",
          "50:   filteredModels := []*gallery.GalleryModel{}",
          "51:   for _, m := range models {",
          "52:    if strings.Contains(m.Name, form.Search) {",
          "53:     filteredModels = append(filteredModels, m)",
          "54:    }",
          "55:   }",
          "57:   return c.SendString(elements.ListModels(filteredModels))",
          "58:  })",
          "61:  app.Post(\"/browse/install/model/:id\", auth, func(c *fiber.Ctx) error {",
          "62:   galleryID := strings.Clone(c.Params(\"id\")) // strings.Clone is required!",
          "64:   id, err := uuid.NewUUID()",
          "65:   if err != nil {",
          "66:    return err",
          "67:   }",
          "69:   uid := id.String()",
          "71:   op := gallery.GalleryOp{",
          "72:    Id:          uid,",
          "73:    GalleryName: galleryID,",
          "74:    Galleries:   appConfig.Galleries,",
          "75:   }",
          "76:   go func() {",
          "77:    galleryService.C <- op",
          "78:   }()",
          "80:   return c.SendString(elements.StartProgressBar(uid, \"0\"))",
          "81:  })",
          "84:  app.Get(\"/browse/job/progress/:uid\", auth, func(c *fiber.Ctx) error {",
          "85:   jobUID := c.Params(\"uid\")",
          "87:   status := galleryService.GetStatus(jobUID)",
          "88:   if status == nil {",
          "90:    return c.SendString(elements.ProgressBar(\"0\"))",
          "91:   }",
          "93:   if status.Progress == 100 {",
          "94:    c.Set(\"HX-Trigger\", \"done\")",
          "95:    return c.SendString(elements.ProgressBar(\"100\"))",
          "96:   }",
          "97:   if status.Error != nil {",
          "98:    return c.SendString(elements.ErrorProgress(status.Error.Error()))",
          "99:   }",
          "101:   return c.SendString(elements.ProgressBar(fmt.Sprint(status.Progress)))",
          "102:  })",
          "104:  app.Get(\"/browse/job/:uid\", auth, func(c *fiber.Ctx) error {",
          "105:   return c.SendString(elements.DoneProgress(c.Params(\"uid\")))",
          "106:  })",
          "107: }",
          "",
          "---------------"
        ],
        "core/http/routes/welcome.go||core/http/routes/welcome.go": [
          "File: core/http/routes/welcome.go -> core/http/routes/welcome.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "13:  appConfig *config.ApplicationConfig,",
          "14:  auth func(*fiber.Ctx) error) {",
          "19:  if !appConfig.DisableWelcomePage {",
          "21:  }",
          "23: }",
          "",
          "[Removed Lines]",
          "16:  models, _ := ml.ListModels()",
          "17:  backendConfigs := cl.GetAllBackendConfigs()",
          "20:   app.Get(\"/\", auth, localai.WelcomeEndpoint(appConfig, models, backendConfigs))",
          "",
          "[Added Lines]",
          "17:   app.Get(\"/\", auth, localai.WelcomeEndpoint(appConfig, cl, ml))",
          "",
          "---------------"
        ],
        "core/http/views/models.html||core/http/views/models.html": [
          "File: core/http/views/models.html -> core/http/views/models.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <!DOCTYPE html>",
          "2: <html lang=\"en\">",
          "3: {{template \"views/partials/head\" .}}",
          "5: <body class=\"bg-gray-900 text-gray-200\">",
          "6: <div class=\"flex flex-col min-h-screen\">",
          "8:     {{template \"views/partials/navbar\" .}}",
          "9:     <div class=\"container mx-auto px-4 flex-grow\">",
          "10:         <div class=\"header text-center py-12\">",
          "11:             <h1 class=\"text-5xl font-bold text-gray-100\">Welcome to <i>your</i> LocalAI instance!</h1>",
          "12:             <div class=\"mt-6\">",
          "13:                 <!-- Logo can be uncommented and updated with a valid URL -->",
          "14:             </div>",
          "15:             <p class=\"mt-4 text-lg\">The FOSS alternative to OpenAI, Claude, ...</p>",
          "16:             <a href=\"https://localai.io\" target=\"_blank\" class=\"mt-4 inline-block bg-blue-500 text-white py-2 px-4 rounded-lg shadow transition duration-300 ease-in-out hover:bg-blue-700 hover:shadow-lg\">",
          "17:                 <i class=\"fas fa-book-reader pr-2\"></i>Documentation",
          "18:             </a>",
          "19:         </div>",
          "21:         <div class=\"models mt-12\">",
          "22:             <h2 class=\"text-center text-3xl font-semibold text-gray-100\">Available models from repositories</h2>",
          "24:             <span class=\"htmx-indicator loader\"></span>",
          "25:             <input class=\"form-control appearance-none block w-full px-3 py-2 text-base font-normal text-gray-300 pb-2 mb-5 bg-gray-800 bg-clip-padding border border-solid border-gray-600 rounded transition ease-in-out m-0 focus:text-gray-300 focus:bg-gray-900 focus:border-blue-500 focus:outline-none\" type=\"search\"",
          "26:                 name=\"search\" placeholder=\"Begin Typing To Search models...\"",
          "27:                 hx-post=\"/browse/search/models\"",
          "28:                 hx-trigger=\"input changed delay:500ms, search\"",
          "29:                 hx-target=\"#search-results\"",
          "30:                 hx-indicator=\".htmx-indicator\">",
          "32:             <div id=\"search-results\">{{.Models}}</div>",
          "33:         </div>",
          "34:     </div>",
          "36:     {{template \"views/partials/footer\" .}}",
          "37: </div>",
          "39: </body>",
          "40: </html>",
          "",
          "---------------"
        ],
        "core/http/views/partials/head.html||core/http/views/partials/head.html": [
          "File: core/http/views/partials/head.html -> core/http/views/partials/head.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "3:     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
          "4:     <title>{{.Title}}</title>",
          "5:     <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&family=Roboto:wght@400;500&display=swap\" rel=\"stylesheet\">",
          "7:     <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css\">",
          "8:     <style>",
          "9:         body {",
          "10:             font-family: 'Inter', sans-serif;",
          "11:         }",
          "12:     </style>",
          "13: </head>",
          "",
          "[Removed Lines]",
          "6:     <link href=\"https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css\" rel=\"stylesheet\">",
          "",
          "[Added Lines]",
          "6:     <link",
          "7:     href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700,900&display=swap\"",
          "8:     rel=\"stylesheet\" />",
          "9:   <link",
          "10:     rel=\"stylesheet\"",
          "11:     href=\"https://cdn.jsdelivr.net/npm/tw-elements/css/tw-elements.min.css\" />",
          "12:   <script src=\"https://cdn.tailwindcss.com/3.3.0\"></script>",
          "13:   <script>",
          "14:     tailwind.config = {",
          "15:       darkMode: \"class\",",
          "16:       theme: {",
          "17:         fontFamily: {",
          "18:           sans: [\"Roboto\", \"sans-serif\"],",
          "19:           body: [\"Roboto\", \"sans-serif\"],",
          "20:           mono: [\"ui-monospace\", \"monospace\"],",
          "21:         },",
          "22:       },",
          "23:       corePlugins: {",
          "24:         preflight: false,",
          "25:       },",
          "26:     };",
          "27:   </script>",
          "29:     <script src=\"https://unpkg.com/htmx.org@1.9.12\" integrity=\"sha384-ujb1lZYygJmzgSwoxRggbCHcjc0rB2XoQrxeTUQyRjrOnlCoYta87iKBWq3EsdM2\" crossorigin=\"anonymous\"></script>",
          "35:         .loader {",
          "36:           width: 12px;",
          "37:           height: 12px;",
          "38:           border-radius: 50%;",
          "39:           display: block;",
          "40:           margin:15px auto;",
          "41:           position: relative;",
          "42:           color: #FFF;",
          "43:           box-sizing: border-box;",
          "44:           animation: animloader 2s linear infinite;",
          "45:         }",
          "47:         @keyframes animloader {",
          "48:           0% { box-shadow: 14px 0 0 -2px,  38px 0 0 -2px,  -14px 0 0 -2px,  -38px 0 0 -2px; }",
          "49:           25% { box-shadow: 14px 0 0 -2px,  38px 0 0 -2px,  -14px 0 0 -2px,  -38px 0 0 2px; }",
          "50:           50% { box-shadow: 14px 0 0 -2px,  38px 0 0 -2px,  -14px 0 0 2px,  -38px 0 0 -2px; }",
          "51:           75% { box-shadow: 14px 0 0 2px,  38px 0 0 -2px,  -14px 0 0 -2px,  -38px 0 0 -2px; }",
          "52:           100% { box-shadow: 14px 0 0 -2px,  38px 0 0 2px,  -14px 0 0 -2px,  -38px 0 0 -2px; }",
          "53:         }",
          "54:         .progress {",
          "55:             height: 20px;",
          "56:             margin-bottom: 20px;",
          "57:             overflow: hidden;",
          "58:             background-color: #f5f5f5;",
          "59:             border-radius: 4px;",
          "60:             box-shadow: inset 0 1px 2px rgba(0,0,0,.1);",
          "61:         }",
          "62:         .progress-bar {",
          "63:             float: left;",
          "64:             width: 0%;",
          "65:             height: 100%;",
          "66:             font-size: 12px;",
          "67:             line-height: 20px;",
          "68:             color: #fff;",
          "69:             text-align: center;",
          "70:             background-color: #337ab7;",
          "71:             -webkit-box-shadow: inset 0 -1px 0 rgba(0,0,0,.15);",
          "72:             box-shadow: inset 0 -1px 0 rgba(0,0,0,.15);",
          "73:             -webkit-transition: width .6s ease;",
          "74:             -o-transition: width .6s ease;",
          "75:             transition: width .6s ease;",
          "76:         }",
          "",
          "---------------"
        ],
        "core/http/views/partials/navbar.html||core/http/views/partials/navbar.html": [
          "File: core/http/views/partials/navbar.html -> core/http/views/partials/navbar.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "9:             <div>",
          "10:                 <a href=\"/\" class=\"text-gray-400 hover:text-white px-3 py-2 rounded\"><i class=\"fas fa-home pr-2\"></i>Home</a>",
          "11:                 <a href=\"https://localai.io\" class=\"text-gray-400 hover:text-white px-3 py-2 rounded\" target=\"_blank\" ><i class=\"fas fa-book-reader pr-2\"></i> Documentation</a>",
          "12:                 <a href=\"/swagger/\" class=\"text-gray-400 hover:text-white px-3 py-2 rounded\"><i class=\"fas fa-code pr-2\"></i> API</a>",
          "13:             </div>",
          "14:         </div>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12:                 <a href=\"/browse/\" class=\"text-gray-400 hover:text-white px-3 py-2 rounded\"><i class=\"fas fa-brain pr-2\"></i> Models</a>",
          "",
          "---------------"
        ],
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: module github.com/go-skynet/LocalAI",
          "5: require (",
          "6:  github.com/M0Rf30/go-tiny-dream v0.0.0-20231128165230-772a9c0d9aaf",
          "",
          "[Removed Lines]",
          "3: go 1.21",
          "",
          "[Added Lines]",
          "3: go 1.21.1",
          "5: toolchain go1.22.2",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "71:  github.com/beorn7/perks v1.0.1 // indirect",
          "72:  github.com/cenkalti/backoff/v4 v4.1.3 // indirect",
          "73:  github.com/cespare/xxhash/v2 v2.2.0 // indirect",
          "74:  github.com/containerd/continuity v0.3.0 // indirect",
          "75:  github.com/davecgh/go-spew v1.1.1 // indirect",
          "76:  github.com/dlclark/regexp2 v1.8.1 // indirect",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76:  github.com/chasefleming/elem-go v0.25.0 // indirect",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "37: github.com/cespare/xxhash/v2 v2.2.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=",
          "38: github.com/charmbracelet/glamour v0.7.0 h1:2BtKGZ4iVJCDfMF229EzbeR1QRKLWztO9dMtjmqZSng=",
          "39: github.com/charmbracelet/glamour v0.7.0/go.mod h1:jUMh5MeihljJPQbJ/wf4ldw2+yBP59+ctV36jASy7ps=",
          "40: github.com/chzyer/logex v1.1.10/go.mod h1:+Ywpsq7O8HXn0nuIou7OrIPyXbp3wmkHB+jjWRnGsAI=",
          "41: github.com/chzyer/readline v0.0.0-20180603132655-2972be24d48e/go.mod h1:nSuG5e5PlCu98SY8svDHJxuZscDgtXS6KTTbou5AhLI=",
          "42: github.com/chzyer/test v0.0.0-20180213035817-a1ea475d72b1/go.mod h1:Q3SI9o4m/ZMnBNeIyt5eFwwo7qiLfzFZmjNmxjkiQlU=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40: github.com/chasefleming/elem-go v0.25.0 h1:LYzr1auk39Bh3bdKloArOFV7sOBnOfSOKxsg58eWL0Q=",
          "41: github.com/chasefleming/elem-go v0.25.0/go.mod h1:hz73qILBIKnTgOujnSMtEj20/epI+f6vg71RUilJAA4=",
          "",
          "---------------"
        ],
        "main.go||main.go": [
          "File: main.go -> main.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "72:   kong.Vars{",
          "73:    \"basepath\":         kong.ExpandPath(\".\"),",
          "74:    \"remoteLibraryURL\": \"https://raw.githubusercontent.com/mudler/LocalAI/master/embedded/model_library.yaml\",",
          "76:    \"version\":          internal.PrintableVersion(),",
          "77:   },",
          "78:  )",
          "",
          "[Removed Lines]",
          "75:    \"galleries\":        `[{\"name\":\"localai\", \"url\":\"github:mudler/LocalAI/gallery/index.yaml\"}]`,",
          "",
          "[Added Lines]",
          "75:    \"galleries\":        `[{\"name\":\"localai\", \"url\":\"github:mudler/LocalAI/gallery/index.yaml@master\"}]`,",
          "",
          "---------------"
        ],
        "pkg/downloader/progress.go||pkg/downloader/progress.go": [
          "File: pkg/downloader/progress.go -> pkg/downloader/progress.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: type progressWriter struct {",
          "6:  fileName       string",
          "7:  total          int64",
          "8:  written        int64",
          "9:  downloadStatus func(string, string, string, float64)",
          "10:  hash           hash.Hash",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8:  fileNo         int",
          "9:  totalFiles     int",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "17:  if pw.total > 0 {",
          "18:   percentage := float64(pw.written) / float64(pw.total) * 100",
          "20:   pw.downloadStatus(pw.fileName, formatBytes(pw.written), formatBytes(pw.total), percentage)",
          "21:  } else {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21:   if pw.totalFiles > 1 {",
          "27:    percentage = percentage / float64(pw.totalFiles)",
          "28:    if pw.fileNo > 1 {",
          "29:     percentage += float64(pw.fileNo-1) * 100 / float64(pw.totalFiles)",
          "30:    }",
          "31:   }",
          "",
          "---------------"
        ],
        "pkg/downloader/uri.go||pkg/downloader/uri.go": [
          "File: pkg/downloader/uri.go -> pkg/downloader/uri.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "136:  return nil",
          "137: }",
          "140:  url = ConvertURL(url)",
          "142:  _, err := os.Stat(filePath)",
          "",
          "[Removed Lines]",
          "139: func DownloadFile(url string, filePath, sha string, downloadStatus func(string, string, string, float64)) error {",
          "",
          "[Added Lines]",
          "139: func DownloadFile(url string, filePath, sha string, fileN, total int, downloadStatus func(string, string, string, float64)) error {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "209:   fileName:       tmpFilePath,",
          "210:   total:          resp.ContentLength,",
          "211:   hash:           sha256.New(),",
          "212:   downloadStatus: downloadStatus,",
          "213:  }",
          "214:  _, err = io.Copy(io.MultiWriter(outFile, progress), resp.Body)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "212:   fileNo:         fileN,",
          "213:   totalFiles:     total,",
          "",
          "---------------"
        ],
        "pkg/gallery/models.go||pkg/gallery/models.go": [
          "File: pkg/gallery/models.go -> pkg/gallery/models.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "102:  }",
          "106:   log.Debug().Msgf(\"Checking %q exists and matches SHA\", file.Filename)",
          "108:   if err := utils.VerifyPath(file.Filename, basePath); err != nil {",
          "",
          "[Removed Lines]",
          "105:  for _, file := range config.Files {",
          "",
          "[Added Lines]",
          "105:  for i, file := range config.Files {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "112:   filePath := filepath.Join(basePath, file.Filename)",
          "115:    return err",
          "116:   }",
          "117:  }",
          "",
          "[Removed Lines]",
          "114:   if err := downloader.DownloadFile(file.URI, filePath, file.SHA256, downloadStatus); err != nil {",
          "",
          "[Added Lines]",
          "114:   if err := downloader.DownloadFile(file.URI, filePath, file.SHA256, i, len(config.Files), downloadStatus); err != nil {",
          "",
          "---------------"
        ],
        "pkg/gallery/op.go||pkg/gallery/op.go": [
          "File: pkg/gallery/op.go -> pkg/gallery/op.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package gallery",
          "3: type GalleryOp struct {",
          "5:  Id          string",
          "7:  GalleryName string",
          "8:  ConfigURL   string",
          "9: }",
          "11: type GalleryOpStatus struct {",
          "",
          "[Removed Lines]",
          "4:  Req         GalleryModel",
          "6:  Galleries   []Gallery",
          "",
          "[Added Lines]",
          "8:  Req       GalleryModel",
          "9:  Galleries []Gallery",
          "",
          "---------------"
        ],
        "pkg/startup/model_preload.go||pkg/startup/model_preload.go": [
          "File: pkg/startup/model_preload.go -> pkg/startup/model_preload.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:    if _, err := os.Stat(filepath.Join(modelPath, md5Name)); errors.Is(err, os.ErrNotExist) {",
          "56:     modelDefinitionFilePath := filepath.Join(modelPath, md5Name) + \".yaml\"",
          "58:      utils.DisplayDownloadFunction(fileName, current, total, percent)",
          "59:     })",
          "60:     if err != nil {",
          "",
          "[Removed Lines]",
          "57:     err := downloader.DownloadFile(url, modelDefinitionFilePath, \"\", func(fileName, current, total string, percent float64) {",
          "",
          "[Added Lines]",
          "57:     err := downloader.DownloadFile(url, modelDefinitionFilePath, \"\", 0, 0, func(fileName, current, total string, percent float64) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1dbb3b8abcf616408f19b095c0f7c5d43565c5b3",
      "candidate_info": {
        "commit_hash": "1dbb3b8abcf616408f19b095c0f7c5d43565c5b3",
        "repo": "mudler/localai",
        "commit_url": "https://github.com/mudler/localai/commit/1dbb3b8abcf616408f19b095c0f7c5d43565c5b3",
        "files": [
          "core/http/routes/ui.go"
        ],
        "message": "fix(gallery): be consistent and disable UI routes as well (#3262)\n\nSigned-off-by: Ettore Di Giacinto <mudler@localai.io>",
        "before_after_code_files": [
          "core/http/routes/ui.go||core/http/routes/ui.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core/http/routes/ui.go||core/http/routes/ui.go"
          ],
          "candidate": [
            "core/http/routes/ui.go||core/http/routes/ui.go"
          ]
        }
      },
      "candidate_diff": {
        "core/http/routes/ui.go||core/http/routes/ui.go": [
          "File: core/http/routes/ui.go -> core/http/routes/ui.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "119:   })",
          "120:  }",
          "134:    }",
          "303:  app.Get(\"/chat/:model\", auth, func(c *fiber.Ctx) error {",
          "",
          "[Removed Lines]",
          "123:  app.Get(\"/browse\", auth, func(c *fiber.Ctx) error {",
          "124:   term := c.Query(\"term\")",
          "126:   models, _ := gallery.AvailableGalleryModels(appConfig.Galleries, appConfig.ModelPath)",
          "129:   allTags := map[string]struct{}{}",
          "130:   tags := []string{}",
          "131:   for _, m := range models {",
          "132:    for _, t := range m.Tags {",
          "133:     allTags[t] = struct{}{}",
          "135:   }",
          "136:   for t := range allTags {",
          "137:    tags = append(tags, t)",
          "138:   }",
          "139:   sort.Strings(tags)",
          "141:   if term != \"\" {",
          "142:    models = gallery.GalleryModels(models).Search(term)",
          "143:   }",
          "146:   processingModelsData, taskTypes := modelStatus()",
          "148:   summary := fiber.Map{",
          "149:    \"Title\":            \"LocalAI - Models\",",
          "150:    \"Version\":          internal.PrintableVersion(),",
          "151:    \"Models\":           template.HTML(elements.ListModels(models, processingModels, galleryService)),",
          "152:    \"Repositories\":     appConfig.Galleries,",
          "153:    \"AllTags\":          tags,",
          "154:    \"ProcessingModels\": processingModelsData,",
          "155:    \"AvailableModels\":  len(models),",
          "156:    \"IsP2PEnabled\":     p2p.IsP2PEnabled(),",
          "158:    \"TaskTypes\": taskTypes,",
          "160:   }",
          "163:   return c.Render(\"views/models\", summary)",
          "164:  })",
          "168:  app.Post(\"/browse/search/models\", auth, func(c *fiber.Ctx) error {",
          "169:   form := struct {",
          "170:    Search string `form:\"search\"`",
          "171:   }{}",
          "172:   if err := c.BodyParser(&form); err != nil {",
          "173:    return c.Status(fiber.StatusBadRequest).SendString(err.Error())",
          "174:   }",
          "176:   models, _ := gallery.AvailableGalleryModels(appConfig.Galleries, appConfig.ModelPath)",
          "178:   return c.SendString(elements.ListModels(gallery.GalleryModels(models).Search(form.Search), processingModels, galleryService))",
          "179:  })",
          "183:   Install routes",
          "189:  app.Post(\"/browse/install/model/:id\", auth, func(c *fiber.Ctx) error {",
          "190:   galleryID := strings.Clone(c.Params(\"id\")) // note: strings.Clone is required for multiple requests!",
          "191:   log.Debug().Msgf(\"UI job submitted to install  : %+v\\n\", galleryID)",
          "193:   id, err := uuid.NewUUID()",
          "194:   if err != nil {",
          "195:    return err",
          "196:   }",
          "198:   uid := id.String()",
          "200:   processingModels.Set(galleryID, uid)",
          "202:   op := gallery.GalleryOp{",
          "203:    Id:               uid,",
          "204:    GalleryModelName: galleryID,",
          "205:    Galleries:        appConfig.Galleries,",
          "206:   }",
          "207:   go func() {",
          "208:    galleryService.C <- op",
          "209:   }()",
          "211:   return c.SendString(elements.StartProgressBar(uid, \"0\", \"Installation\"))",
          "212:  })",
          "216:  app.Post(\"/browse/delete/model/:id\", auth, func(c *fiber.Ctx) error {",
          "217:   galleryID := strings.Clone(c.Params(\"id\")) // note: strings.Clone is required for multiple requests!",
          "218:   log.Debug().Msgf(\"UI job submitted to delete  : %+v\\n\", galleryID)",
          "219:   var galleryName = galleryID",
          "220:   if strings.Contains(galleryID, \"@\") {",
          "224:    galleryName = strings.Split(galleryID, \"@\")[1]",
          "225:   }",
          "227:   id, err := uuid.NewUUID()",
          "228:   if err != nil {",
          "229:    return err",
          "230:   }",
          "232:   uid := id.String()",
          "237:   processingModels.Set(galleryName, uid)",
          "238:   processingModels.Set(galleryID, uid)",
          "240:   op := gallery.GalleryOp{",
          "241:    Id:               uid,",
          "242:    Delete:           true,",
          "243:    GalleryModelName: galleryName,",
          "244:   }",
          "245:   go func() {",
          "246:    galleryService.C <- op",
          "247:    cl.RemoveBackendConfig(galleryName)",
          "248:   }()",
          "250:   return c.SendString(elements.StartProgressBar(uid, \"0\", \"Deletion\"))",
          "251:  })",
          "256:  app.Get(\"/browse/job/progress/:uid\", auth, func(c *fiber.Ctx) error {",
          "257:   jobUID := strings.Clone(c.Params(\"uid\")) // note: strings.Clone is required for multiple requests!",
          "259:   status := galleryService.GetStatus(jobUID)",
          "260:   if status == nil {",
          "262:    return c.SendString(elements.ProgressBar(\"0\"))",
          "263:   }",
          "265:   if status.Progress == 100 {",
          "266:    c.Set(\"HX-Trigger\", \"done\") // this triggers /browse/job/:uid (which is when the job is done)",
          "267:    return c.SendString(elements.ProgressBar(\"100\"))",
          "268:   }",
          "269:   if status.Error != nil {",
          "271:    processingModels.DeleteUUID(jobUID)",
          "272:    return c.SendString(elements.ErrorProgress(status.Error.Error(), status.GalleryModelName))",
          "273:   }",
          "275:   return c.SendString(elements.ProgressBar(fmt.Sprint(status.Progress)))",
          "276:  })",
          "280:  app.Get(\"/browse/job/:uid\", auth, func(c *fiber.Ctx) error {",
          "281:   jobUID := strings.Clone(c.Params(\"uid\")) // note: strings.Clone is required for multiple requests!",
          "283:   status := galleryService.GetStatus(jobUID)",
          "285:   galleryID := \"\"",
          "286:   processingModels.DeleteUUID(jobUID)",
          "287:   if galleryID == \"\" {",
          "288:    log.Debug().Msgf(\"no processing model found for job : %+v\\n\", jobUID)",
          "289:   }",
          "291:   log.Debug().Msgf(\"JOB finished  : %+v\\n\", status)",
          "292:   showDelete := true",
          "293:   displayText := \"Installation completed\"",
          "294:   if status.Deletion {",
          "295:    showDelete = false",
          "296:    displayText = \"Deletion completed\"",
          "297:   }",
          "299:   return c.SendString(elements.DoneProgress(galleryID, displayText, showDelete))",
          "300:  })",
          "",
          "[Added Lines]",
          "122:  if !appConfig.DisableGalleryEndpoint {",
          "125:   app.Get(\"/browse\", auth, func(c *fiber.Ctx) error {",
          "126:    term := c.Query(\"term\")",
          "128:    models, _ := gallery.AvailableGalleryModels(appConfig.Galleries, appConfig.ModelPath)",
          "131:    allTags := map[string]struct{}{}",
          "132:    tags := []string{}",
          "133:    for _, m := range models {",
          "134:     for _, t := range m.Tags {",
          "135:      allTags[t] = struct{}{}",
          "136:     }",
          "138:    for t := range allTags {",
          "139:     tags = append(tags, t)",
          "140:    }",
          "141:    sort.Strings(tags)",
          "143:    if term != \"\" {",
          "144:     models = gallery.GalleryModels(models).Search(term)",
          "145:    }",
          "148:    processingModelsData, taskTypes := modelStatus()",
          "150:    summary := fiber.Map{",
          "151:     \"Title\":            \"LocalAI - Models\",",
          "152:     \"Version\":          internal.PrintableVersion(),",
          "153:     \"Models\":           template.HTML(elements.ListModels(models, processingModels, galleryService)),",
          "154:     \"Repositories\":     appConfig.Galleries,",
          "155:     \"AllTags\":          tags,",
          "156:     \"ProcessingModels\": processingModelsData,",
          "157:     \"AvailableModels\":  len(models),",
          "158:     \"IsP2PEnabled\":     p2p.IsP2PEnabled(),",
          "160:     \"TaskTypes\": taskTypes,",
          "162:    }",
          "165:    return c.Render(\"views/models\", summary)",
          "166:   })",
          "170:   app.Post(\"/browse/search/models\", auth, func(c *fiber.Ctx) error {",
          "171:    form := struct {",
          "172:     Search string `form:\"search\"`",
          "173:    }{}",
          "174:    if err := c.BodyParser(&form); err != nil {",
          "175:     return c.Status(fiber.StatusBadRequest).SendString(err.Error())",
          "176:    }",
          "178:    models, _ := gallery.AvailableGalleryModels(appConfig.Galleries, appConfig.ModelPath)",
          "180:    return c.SendString(elements.ListModels(gallery.GalleryModels(models).Search(form.Search), processingModels, galleryService))",
          "181:   })",
          "185:    Install routes",
          "191:   app.Post(\"/browse/install/model/:id\", auth, func(c *fiber.Ctx) error {",
          "192:    galleryID := strings.Clone(c.Params(\"id\")) // note: strings.Clone is required for multiple requests!",
          "193:    log.Debug().Msgf(\"UI job submitted to install  : %+v\\n\", galleryID)",
          "195:    id, err := uuid.NewUUID()",
          "196:    if err != nil {",
          "197:     return err",
          "198:    }",
          "200:    uid := id.String()",
          "202:    processingModels.Set(galleryID, uid)",
          "204:    op := gallery.GalleryOp{",
          "205:     Id:               uid,",
          "206:     GalleryModelName: galleryID,",
          "207:     Galleries:        appConfig.Galleries,",
          "208:    }",
          "209:    go func() {",
          "210:     galleryService.C <- op",
          "211:    }()",
          "213:    return c.SendString(elements.StartProgressBar(uid, \"0\", \"Installation\"))",
          "214:   })",
          "218:   app.Post(\"/browse/delete/model/:id\", auth, func(c *fiber.Ctx) error {",
          "219:    galleryID := strings.Clone(c.Params(\"id\")) // note: strings.Clone is required for multiple requests!",
          "220:    log.Debug().Msgf(\"UI job submitted to delete  : %+v\\n\", galleryID)",
          "221:    var galleryName = galleryID",
          "222:    if strings.Contains(galleryID, \"@\") {",
          "226:     galleryName = strings.Split(galleryID, \"@\")[1]",
          "227:    }",
          "229:    id, err := uuid.NewUUID()",
          "230:    if err != nil {",
          "231:     return err",
          "232:    }",
          "234:    uid := id.String()",
          "239:    processingModels.Set(galleryName, uid)",
          "240:    processingModels.Set(galleryID, uid)",
          "242:    op := gallery.GalleryOp{",
          "243:     Id:               uid,",
          "244:     Delete:           true,",
          "245:     GalleryModelName: galleryName,",
          "246:    }",
          "247:    go func() {",
          "248:     galleryService.C <- op",
          "249:     cl.RemoveBackendConfig(galleryName)",
          "250:    }()",
          "252:    return c.SendString(elements.StartProgressBar(uid, \"0\", \"Deletion\"))",
          "253:   })",
          "258:   app.Get(\"/browse/job/progress/:uid\", auth, func(c *fiber.Ctx) error {",
          "259:    jobUID := strings.Clone(c.Params(\"uid\")) // note: strings.Clone is required for multiple requests!",
          "261:    status := galleryService.GetStatus(jobUID)",
          "262:    if status == nil {",
          "264:     return c.SendString(elements.ProgressBar(\"0\"))",
          "265:    }",
          "267:    if status.Progress == 100 {",
          "268:     c.Set(\"HX-Trigger\", \"done\") // this triggers /browse/job/:uid (which is when the job is done)",
          "269:     return c.SendString(elements.ProgressBar(\"100\"))",
          "270:    }",
          "271:    if status.Error != nil {",
          "273:     processingModels.DeleteUUID(jobUID)",
          "274:     return c.SendString(elements.ErrorProgress(status.Error.Error(), status.GalleryModelName))",
          "275:    }",
          "277:    return c.SendString(elements.ProgressBar(fmt.Sprint(status.Progress)))",
          "278:   })",
          "282:   app.Get(\"/browse/job/:uid\", auth, func(c *fiber.Ctx) error {",
          "283:    jobUID := strings.Clone(c.Params(\"uid\")) // note: strings.Clone is required for multiple requests!",
          "285:    status := galleryService.GetStatus(jobUID)",
          "287:    galleryID := \"\"",
          "288:    processingModels.DeleteUUID(jobUID)",
          "289:    if galleryID == \"\" {",
          "290:     log.Debug().Msgf(\"no processing model found for job : %+v\\n\", jobUID)",
          "291:    }",
          "293:    log.Debug().Msgf(\"JOB finished  : %+v\\n\", status)",
          "294:    showDelete := true",
          "295:    displayText := \"Installation completed\"",
          "296:    if status.Deletion {",
          "297:     showDelete = false",
          "298:     displayText = \"Deletion completed\"",
          "299:    }",
          "301:    return c.SendString(elements.DoneProgress(galleryID, displayText, showDelete))",
          "302:   })",
          "303:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fe055d4b361790478a4862d320574ffdb96a52f6",
      "candidate_info": {
        "commit_hash": "fe055d4b361790478a4862d320574ffdb96a52f6",
        "repo": "mudler/localai",
        "commit_url": "https://github.com/mudler/localai/commit/fe055d4b361790478a4862d320574ffdb96a52f6",
        "files": [
          "core/config/backend_config_loader.go",
          "core/http/elements/gallery.go",
          "core/http/endpoints/localai/gallery.go",
          "core/http/endpoints/localai/welcome.go",
          "core/http/routes/ui.go",
          "core/http/views/index.html",
          "core/http/views/models.html",
          "core/services/gallery.go",
          "pkg/gallery/gallery.go",
          "pkg/gallery/models.go",
          "pkg/gallery/op.go",
          "pkg/gallery/request.go"
        ],
        "message": "feat(webui): ux improvements (#2247)\n\n* ux: change welcome when there are no models installed\n\nSigned-off-by: Ettore Di Giacinto <mudler@localai.io>\n\n* ux: filter\n\nSigned-off-by: Ettore Di Giacinto <mudler@localai.io>\n\n* ux: show tags in filter\n\nSigned-off-by: Ettore Di Giacinto <mudler@localai.io>\n\n* wip\n\nSigned-off-by: Ettore Di Giacinto <mudler@localai.io>\n\n* make tags clickable\n\nSigned-off-by: Ettore Di Giacinto <mudler@localai.io>\n\n* allow to delete models from the list\n\nSigned-off-by: Ettore Di Giacinto <mudler@localai.io>\n\n* ui: display icon of installed models\n\nSigned-off-by: Ettore Di Giacinto <mudler@localai.io>\n\n* gallery: remove gallery file when removing model\n\nSigned-off-by: Ettore Di Giacinto <mudler@localai.io>\n\n* feat(gallery): show a re-install button\n\nSigned-off-by: Ettore Di Giacinto <mudler@localai.io>\n\n* make filter buttons, rename Gallery field\n\nSigned-off-by: mudler <mudler@localai.io>\n\n* show again buttons at end of operations\n\nSigned-off-by: mudler <mudler@localai.io>\n\n---------\n\nSigned-off-by: Ettore Di Giacinto <mudler@localai.io>\nSigned-off-by: mudler <mudler@localai.io>",
        "before_after_code_files": [
          "core/config/backend_config_loader.go||core/config/backend_config_loader.go",
          "core/http/elements/gallery.go||core/http/elements/gallery.go",
          "core/http/endpoints/localai/gallery.go||core/http/endpoints/localai/gallery.go",
          "core/http/endpoints/localai/welcome.go||core/http/endpoints/localai/welcome.go",
          "core/http/routes/ui.go||core/http/routes/ui.go",
          "core/http/views/index.html||core/http/views/index.html",
          "core/http/views/models.html||core/http/views/models.html",
          "core/services/gallery.go||core/services/gallery.go",
          "pkg/gallery/gallery.go||pkg/gallery/gallery.go",
          "pkg/gallery/models.go||pkg/gallery/models.go",
          "pkg/gallery/op.go||pkg/gallery/op.go",
          "pkg/gallery/request.go||pkg/gallery/request.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core/http/elements/gallery.go||core/http/elements/gallery.go",
            "core/http/routes/ui.go||core/http/routes/ui.go"
          ],
          "candidate": [
            "core/http/elements/gallery.go||core/http/elements/gallery.go",
            "core/http/routes/ui.go||core/http/routes/ui.go"
          ]
        }
      },
      "candidate_diff": {
        "core/config/backend_config_loader.go||core/config/backend_config_loader.go": [
          "File: core/config/backend_config_loader.go -> core/config/backend_config_loader.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "182:  return res",
          "183: }",
          "185: func (cl *BackendConfigLoader) ListBackendConfigs() []string {",
          "186:  cl.Lock()",
          "187:  defer cl.Unlock()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "185: func (cl *BackendConfigLoader) RemoveBackendConfig(m string) {",
          "186:  cl.Lock()",
          "187:  defer cl.Unlock()",
          "188:  delete(cl.configs, m)",
          "189: }",
          "",
          "---------------"
        ],
        "core/http/elements/gallery.go||core/http/elements/gallery.go": [
          "File: core/http/elements/gallery.go -> core/http/elements/gallery.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"fmt\"",
          "6:  \"github.com/chasefleming/elem-go\"",
          "7:  \"github.com/chasefleming/elem-go/attrs\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5:  \"strings\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "13:  NoImage = \"https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg\"",
          "14: )",
          "17:  return elem.Div(",
          "18:   attrs.Props{},",
          "19:   elem.H3(",
          "",
          "[Removed Lines]",
          "16: func DoneProgress(uid, text string) string {",
          "",
          "[Added Lines]",
          "17: func DoneProgress(galleryID, text string, showDelete bool) string {",
          "19:  if strings.Contains(galleryID, \"@\") {",
          "20:   galleryID = strings.Split(galleryID, \"@\")[1]",
          "21:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "25:    },",
          "26:    elem.Text(text),",
          "27:   ),",
          "28:  ).Render()",
          "29: }",
          "32:  return elem.Div(",
          "33:   attrs.Props{},",
          "34:   elem.H3(",
          "",
          "[Removed Lines]",
          "31: func ErrorProgress(err string) string {",
          "",
          "[Added Lines]",
          "34:   elem.If(showDelete, deleteButton(galleryID), reInstallButton(galleryID)),",
          "38: func ErrorProgress(err, galleryName string) string {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "38:     \"tabindex\":  \"-1\",",
          "39:     \"autofocus\": \"\",",
          "40:    },",
          "42:   ),",
          "43:  ).Render()",
          "44: }",
          "",
          "[Removed Lines]",
          "41:    elem.Text(\"Error\"+err),",
          "",
          "[Added Lines]",
          "48:    elem.Text(\"Error \"+err),",
          "50:   installButton(galleryName),",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "67:  return elem.Div(attrs.Props{",
          "68:   \"hx-trigger\": \"done\",",
          "69:   \"hx-get\":     \"/browse/job/\" + uid,",
          "71:   \"hx-target\":  \"this\",",
          "72:  },",
          "73:   elem.H3(",
          "",
          "[Removed Lines]",
          "70:   \"hx-swap\":    \"outerHTML\",",
          "",
          "[Added Lines]",
          "78:   \"hx-swap\":    \"innerHTML\",",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "99:   elem.I(attrs.Props{",
          "100:    \"class\": icon + \" pr-2\",",
          "101:   }),",
          "102:   elem.Text(text),",
          "103:  )",
          "104: }",
          "106: func ListModels(models []*gallery.GalleryModel, installing *xsync.SyncedMap[string, string]) string {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "111:   elem.Text(text),",
          "114:  )",
          "115: }",
          "117: func searchableElement(text, icon string) elem.Node {",
          "118:  return elem.Form(",
          "119:   attrs.Props{},",
          "120:   elem.Input(",
          "121:    attrs.Props{",
          "122:     \"type\":  \"hidden\",",
          "123:     \"name\":  \"search\",",
          "124:     \"value\": text,",
          "125:    },",
          "126:   ),",
          "127:   elem.Span(",
          "128:    attrs.Props{",
          "129:     \"class\": \"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2 hover:bg-gray-300 hover:shadow-gray-2\",",
          "130:    },",
          "132:    elem.A(",
          "133:     attrs.Props{",
          "137:      \"href\":      \"#!\",",
          "138:      \"hx-post\":   \"/browse/search/models\",",
          "139:      \"hx-target\": \"#search-results\",",
          "142:      \"hx-indicator\": \".htmx-indicator\",",
          "143:     },",
          "144:     elem.I(attrs.Props{",
          "145:      \"class\": icon + \" pr-2\",",
          "146:     }),",
          "147:     elem.Text(text),",
          "148:    ),",
          "149:   ),",
          "152:  )",
          "153: }",
          "155: func link(text, url string) elem.Node {",
          "156:  return elem.A(",
          "157:   attrs.Props{",
          "158:    \"class\":  \"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2 hover:bg-gray-300 hover:shadow-gray-2\",",
          "159:    \"href\":   url,",
          "160:    \"target\": \"_blank\",",
          "161:   },",
          "162:   elem.I(attrs.Props{",
          "163:    \"class\": \"fas fa-link pr-2\",",
          "164:   }),",
          "168: func installButton(galleryName string) elem.Node {",
          "169:  return elem.Button(",
          "170:   attrs.Props{",
          "171:    \"data-twe-ripple-init\":  \"\",",
          "172:    \"data-twe-ripple-color\": \"light\",",
          "173:    \"class\":                 \"float-right inline-block rounded bg-primary px-6 pb-2.5 mb-3 pt-2.5 text-xs font-medium uppercase leading-normal text-white shadow-primary-3 transition duration-150 ease-in-out hover:bg-primary-accent-300 hover:shadow-primary-2 focus:bg-primary-accent-300 focus:shadow-primary-2 focus:outline-none focus:ring-0 active:bg-primary-600 active:shadow-primary-2 dark:shadow-black/30 dark:hover:shadow-dark-strong dark:focus:shadow-dark-strong dark:active:shadow-dark-strong\",",
          "174:    \"hx-swap\":               \"outerHTML\",",
          "176:    \"hx-post\": \"/browse/install/model/\" + galleryName,",
          "177:   },",
          "178:   elem.I(",
          "179:    attrs.Props{",
          "180:     \"class\": \"fa-solid fa-download pr-2\",",
          "181:    },",
          "182:   ),",
          "183:   elem.Text(\"Install\"),",
          "184:  )",
          "185: }",
          "187: func reInstallButton(galleryName string) elem.Node {",
          "188:  return elem.Button(",
          "189:   attrs.Props{",
          "190:    \"data-twe-ripple-init\":  \"\",",
          "191:    \"data-twe-ripple-color\": \"light\",",
          "192:    \"class\":                 \"float-right inline-block rounded bg-primary ml-2 px-6 pb-2.5 mb-3 pt-2.5 text-xs font-medium uppercase leading-normal text-white shadow-primary-3 transition duration-150 ease-in-out hover:bg-primary-accent-300 hover:shadow-primary-2 focus:bg-primary-accent-300 focus:shadow-primary-2 focus:outline-none focus:ring-0 active:bg-primary-600 active:shadow-primary-2 dark:shadow-black/30 dark:hover:shadow-dark-strong dark:focus:shadow-dark-strong dark:active:shadow-dark-strong\",",
          "193:    \"hx-swap\":               \"outerHTML\",",
          "195:    \"hx-post\": \"/browse/install/model/\" + galleryName,",
          "196:   },",
          "197:   elem.I(",
          "198:    attrs.Props{",
          "199:     \"class\": \"fa-solid fa-arrow-rotate-right pr-2\",",
          "200:    },",
          "201:   ),",
          "202:   elem.Text(\"Reinstall\"),",
          "203:  )",
          "204: }",
          "206: func deleteButton(modelName string) elem.Node {",
          "207:  return elem.Button(",
          "208:   attrs.Props{",
          "209:    \"data-twe-ripple-init\":  \"\",",
          "210:    \"data-twe-ripple-color\": \"light\",",
          "211:    \"hx-confirm\":            \"Are you sure you wish to delete the model?\",",
          "212:    \"class\":                 \"float-right inline-block rounded bg-red-800 px-6 pb-2.5 mb-3 pt-2.5 text-xs font-medium uppercase leading-normal text-white shadow-primary-3 transition duration-150 ease-in-out hover:bg-red-accent-300 hover:shadow-red-2 focus:bg-red-accent-300 focus:shadow-primary-2 focus:outline-none focus:ring-0 active:bg-red-600 active:shadow-primary-2 dark:shadow-black/30 dark:hover:shadow-dark-strong dark:focus:shadow-dark-strong dark:active:shadow-dark-strong\",",
          "213:    \"hx-swap\":               \"outerHTML\",",
          "215:    \"hx-post\": \"/browse/delete/model/\" + modelName,",
          "216:   },",
          "217:   elem.I(",
          "218:    attrs.Props{",
          "219:     \"class\": \"fa-solid fa-cancel pr-2\",",
          "220:    },",
          "221:   ),",
          "222:   elem.Text(\"Delete\"),",
          "223:  )",
          "224: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "155:  descriptionDiv := func(m *gallery.GalleryModel) elem.Node {",
          "",
          "[Removed Lines]",
          "117:  deleteButton := func(m *gallery.GalleryModel) elem.Node {",
          "118:   return elem.Button(",
          "119:    attrs.Props{",
          "120:     \"data-twe-ripple-init\":  \"\",",
          "121:     \"data-twe-ripple-color\": \"light\",",
          "122:     \"class\":                 \"float-right inline-block rounded bg-red-800 px-6 pb-2.5 mb-3 pt-2.5 text-xs font-medium uppercase leading-normal text-white shadow-primary-3 transition duration-150 ease-in-out hover:bg-red-accent-300 hover:shadow-red-2 focus:bg-red-accent-300 focus:shadow-primary-2 focus:outline-none focus:ring-0 active:bg-red-600 active:shadow-primary-2 dark:shadow-black/30 dark:hover:shadow-dark-strong dark:focus:shadow-dark-strong dark:active:shadow-dark-strong\",",
          "123:     \"hx-swap\":               \"outerHTML\",",
          "125:     \"hx-post\": \"/browse/delete/model/\" + m.Name,",
          "126:    },",
          "127:    elem.I(",
          "128:     attrs.Props{",
          "129:      \"class\": \"fa-solid fa-cancel pr-2\",",
          "130:     },",
          "131:    ),",
          "132:    elem.Text(\"Delete\"),",
          "133:   )",
          "134:  }",
          "136:  installButton := func(m *gallery.GalleryModel) elem.Node {",
          "137:   return elem.Button(",
          "138:    attrs.Props{",
          "139:     \"data-twe-ripple-init\":  \"\",",
          "140:     \"data-twe-ripple-color\": \"light\",",
          "141:     \"class\":                 \"float-right inline-block rounded bg-primary px-6 pb-2.5 mb-3 pt-2.5 text-xs font-medium uppercase leading-normal text-white shadow-primary-3 transition duration-150 ease-in-out hover:bg-primary-accent-300 hover:shadow-primary-2 focus:bg-primary-accent-300 focus:shadow-primary-2 focus:outline-none focus:ring-0 active:bg-primary-600 active:shadow-primary-2 dark:shadow-black/30 dark:hover:shadow-dark-strong dark:focus:shadow-dark-strong dark:active:shadow-dark-strong\",",
          "142:     \"hx-swap\":               \"outerHTML\",",
          "144:     \"hx-post\": \"/browse/install/model/\" + fmt.Sprintf(\"%s@%s\", m.Gallery.Name, m.Name),",
          "145:    },",
          "146:    elem.I(",
          "147:     attrs.Props{",
          "148:      \"class\": \"fa-solid fa-download pr-2\",",
          "149:     },",
          "150:    ),",
          "151:    elem.Text(\"Install\"),",
          "152:   )",
          "153:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "187:    )",
          "188:   }",
          "190:   for _, tag := range m.Tags {",
          "193:    )",
          "194:   }",
          "196:   for i, url := range m.URLs {",
          "197:    nodes = append(nodes,",
          "209:   }",
          "211:   return elem.Div(",
          "",
          "[Removed Lines]",
          "191:    nodes = append(nodes,",
          "192:     cardSpan(tag, \"fas fa-tag\"),",
          "198:     elem.A(",
          "199:      attrs.Props{",
          "200:       \"class\":  \"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\",",
          "201:       \"href\":   url,",
          "202:       \"target\": \"_blank\",",
          "203:      },",
          "204:      elem.I(attrs.Props{",
          "205:       \"class\": \"fas fa-link pr-2\",",
          "206:      }),",
          "207:      elem.Text(\"Link #\"+fmt.Sprintf(\"%d\", i+1)),",
          "208:     ))",
          "",
          "[Added Lines]",
          "273:   tagsNodes := []elem.Node{}",
          "275:    tagsNodes = append(tagsNodes,",
          "276:     searchableElement(tag, \"fas fa-tag\"),",
          "280:   nodes = append(nodes,",
          "281:    elem.Div(",
          "282:     attrs.Props{",
          "283:      \"class\": \"flex flex-row flex-wrap content-center\",",
          "284:     },",
          "285:     tagsNodes...,",
          "286:    ),",
          "287:   )",
          "291:     link(\"Link #\"+fmt.Sprintf(\"%d\", i+1), url),",
          "292:    )",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "224:      elem.Raw(StartProgressBar(installing.Get(galleryID), \"0\", \"Installing\")),",
          "225:     ), // Otherwise, show install button (if not installed) or display \"Installed\"",
          "226:     elem.If(m.Installed,",
          "233:     ),",
          "234:    ),",
          "235:   )",
          "",
          "[Removed Lines]",
          "231:      deleteButton(m),",
          "232:      installButton(m),",
          "",
          "[Added Lines]",
          "311:      elem.Node(elem.Div(",
          "312:       attrs.Props{},",
          "313:       reInstallButton(m.ID()),",
          "314:       deleteButton(m.Name),",
          "315:      )),",
          "316:      installButton(m.ID()),",
          "",
          "---------------"
        ],
        "core/http/endpoints/localai/gallery.go||core/http/endpoints/localai/gallery.go": [
          "File: core/http/endpoints/localai/gallery.go -> core/http/endpoints/localai/gallery.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:    return err",
          "62:   }",
          "63:   mgs.galleryApplier.C <- gallery.GalleryOp{",
          "69:   }",
          "70:   return c.JSON(struct {",
          "71:    ID        string `json:\"uuid\"`",
          "",
          "[Removed Lines]",
          "64:    Req:         input.GalleryModel,",
          "65:    Id:          uuid.String(),",
          "66:    GalleryName: input.ID,",
          "67:    Galleries:   mgs.galleries,",
          "68:    ConfigURL:   input.ConfigURL,",
          "",
          "[Added Lines]",
          "64:    Req:              input.GalleryModel,",
          "65:    Id:               uuid.String(),",
          "66:    GalleryModelName: input.ID,",
          "67:    Galleries:        mgs.galleries,",
          "68:    ConfigURL:        input.ConfigURL,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "79:   modelName := c.Params(\"name\")",
          "81:   mgs.galleryApplier.C <- gallery.GalleryOp{",
          "84:   }",
          "86:   uuid, err := uuid.NewUUID()",
          "",
          "[Removed Lines]",
          "82:    Delete:      true,",
          "83:    GalleryName: modelName,",
          "",
          "[Added Lines]",
          "82:    Delete:           true,",
          "83:    GalleryModelName: modelName,",
          "",
          "---------------"
        ],
        "core/http/endpoints/localai/welcome.go||core/http/endpoints/localai/welcome.go": [
          "File: core/http/endpoints/localai/welcome.go -> core/http/endpoints/localai/welcome.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"github.com/go-skynet/LocalAI/core/config\"",
          "5:  \"github.com/go-skynet/LocalAI/internal\"",
          "6:  \"github.com/go-skynet/LocalAI/pkg/model\"",
          "7:  \"github.com/gofiber/fiber/v2\"",
          "8: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6:  \"github.com/go-skynet/LocalAI/pkg/gallery\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "13:   models, _ := ml.ListModels()",
          "14:   backendConfigs := cl.GetAllBackendConfigs()",
          "16:   summary := fiber.Map{",
          "17:    \"Title\":             \"LocalAI API - \" + internal.PrintableVersion(),",
          "18:    \"Version\":           internal.PrintableVersion(),",
          "19:    \"Models\":            models,",
          "20:    \"ModelsConfig\":      backendConfigs,",
          "21:    \"ApplicationConfig\": appConfig,",
          "22:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17:   galleryConfigs := map[string]*gallery.Config{}",
          "18:   for _, m := range backendConfigs {",
          "20:    cfg, err := gallery.GetLocalModelConfiguration(ml.ModelPath, m.Name)",
          "21:    if err != nil {",
          "22:     continue",
          "23:    }",
          "24:    galleryConfigs[m.Name] = cfg",
          "25:   }",
          "32:    \"GalleryConfig\":     galleryConfigs,",
          "",
          "---------------"
        ],
        "core/http/routes/ui.go||core/http/routes/ui.go": [
          "File: core/http/routes/ui.go -> core/http/routes/ui.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"fmt\"",
          "5:  \"html/template\"",
          "6:  \"strings\"",
          "8:  \"github.com/go-skynet/LocalAI/core/config\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6:  \"sort\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34:  app.Get(\"/browse\", auth, func(c *fiber.Ctx) error {",
          "35:   models, _ := gallery.AvailableGalleryModels(appConfig.Galleries, appConfig.ModelPath)",
          "37:   summary := fiber.Map{",
          "38:    \"Title\":        \"LocalAI - Models\",",
          "39:    \"Version\":      internal.PrintableVersion(),",
          "40:    \"Models\":       template.HTML(elements.ListModels(models, installingModels)),",
          "41:    \"Repositories\": appConfig.Galleries,",
          "43:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39:   allTags := map[string]struct{}{}",
          "40:   tags := []string{}",
          "41:   for _, m := range models {",
          "42:    for _, t := range m.Tags {",
          "43:     allTags[t] = struct{}{}",
          "44:    }",
          "45:   }",
          "46:   for t := range allTags {",
          "47:    tags = append(tags, t)",
          "48:   }",
          "49:   sort.Strings(tags)",
          "55:    \"AllTags\":      tags,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "92:   installingModels.Set(galleryID, uid)",
          "94:   op := gallery.GalleryOp{",
          "98:   }",
          "99:   go func() {",
          "100:    galleryService.C <- op",
          "",
          "[Removed Lines]",
          "95:    Id:          uid,",
          "96:    GalleryName: galleryID,",
          "97:    Galleries:   appConfig.Galleries,",
          "",
          "[Added Lines]",
          "109:    Id:               uid,",
          "110:    GalleryModelName: galleryID,",
          "111:    Galleries:        appConfig.Galleries,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "118:   installingModels.Set(galleryID, uid)",
          "120:   op := gallery.GalleryOp{",
          "124:   }",
          "125:   go func() {",
          "126:    galleryService.C <- op",
          "127:   }()",
          "129:   return c.SendString(elements.StartProgressBar(uid, \"0\", \"Deletion\"))",
          "",
          "[Removed Lines]",
          "121:    Id:          uid,",
          "122:    Delete:      true,",
          "123:    GalleryName: galleryID,",
          "",
          "[Added Lines]",
          "135:    Id:               uid,",
          "136:    Delete:           true,",
          "137:    GalleryModelName: galleryID,",
          "141:    cl.RemoveBackendConfig(galleryID)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "146:    return c.SendString(elements.ProgressBar(\"100\"))",
          "147:   }",
          "148:   if status.Error != nil {",
          "150:   }",
          "152:   return c.SendString(elements.ProgressBar(fmt.Sprint(status.Progress)))",
          "",
          "[Removed Lines]",
          "149:    return c.SendString(elements.ErrorProgress(status.Error.Error()))",
          "",
          "[Added Lines]",
          "164:    return c.SendString(elements.ErrorProgress(status.Error.Error(), status.GalleryModelName))",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "159:   status := galleryService.GetStatus(c.Params(\"uid\"))",
          "161:   for _, k := range installingModels.Keys() {",
          "162:    if installingModels.Get(k) == c.Params(\"uid\") {",
          "163:     installingModels.Delete(k)",
          "164:    }",
          "165:   }",
          "167:   displayText := \"Installation completed\"",
          "168:   if status.Deletion {",
          "169:    displayText = \"Deletion completed\"",
          "170:   }",
          "173:  })",
          "",
          "[Removed Lines]",
          "172:   return c.SendString(elements.DoneProgress(c.Params(\"uid\"), displayText))",
          "",
          "[Added Lines]",
          "176:   galleryID := \"\"",
          "179:     galleryID = k",
          "184:   showDelete := true",
          "187:    showDelete = false",
          "191:   return c.SendString(elements.DoneProgress(galleryID, displayText, showDelete))",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "191:   backendConfigs := cl.GetAllBackendConfigs()",
          "193:   if len(backendConfigs) == 0 {",
          "195:   }",
          "197:   summary := fiber.Map{",
          "",
          "[Removed Lines]",
          "194:    return c.SendString(\"No models available\")",
          "",
          "[Added Lines]",
          "214:    return c.Redirect(\"/\")",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "224:   backendConfigs := cl.GetAllBackendConfigs()",
          "226:   if len(backendConfigs) == 0 {",
          "228:   }",
          "230:   summary := fiber.Map{",
          "",
          "[Removed Lines]",
          "227:    return c.SendString(\"No models available\")",
          "",
          "[Added Lines]",
          "248:    return c.Redirect(\"/\")",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "257:   backendConfigs := cl.GetAllBackendConfigs()",
          "259:   if len(backendConfigs) == 0 {",
          "261:   }",
          "263:   summary := fiber.Map{",
          "",
          "[Removed Lines]",
          "260:    return c.SendString(\"No models available\")",
          "",
          "[Added Lines]",
          "282:    return c.Redirect(\"/\")",
          "",
          "---------------"
        ],
        "core/http/views/index.html||core/http/views/index.html": [
          "File: core/http/views/index.html -> core/http/views/index.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "16:             <p class=\"mt-4 text-lg\">The FOSS alternative to OpenAI, Claude, ...</p>",
          "17:             <a href=\"https://localai.io\" target=\"_blank\" class=\"mt-4 inline-block bg-blue-500 text-white py-2 px-4 rounded-lg shadow transition duration-300 ease-in-out hover:bg-blue-700 hover:shadow-lg\">",
          "18:                 <i class=\"fas fa-book-reader pr-2\"></i>Documentation",
          "20:         </div>",
          "22:         <div class=\"models mt-12\">",
          "23:             <h2 class=\"text-center text-3xl font-semibold text-gray-100\">Installed models</h2>",
          "24:             <p class=\"text-center mt-4 text-xl\">We have {{len .ModelsConfig}} pre-loaded models available.</p>",
          "25:             <ul class=\"mt-8 space-y-4\">",
          "26:                 {{ range .ModelsConfig }}",
          "27:                 <li class=\"bg-gray-800 border border-gray-700 p-4 rounded-lg\">",
          "28:                     <div class=\"flex justify-between items-center\">",
          "29:                         <p class=\"font-bold text-white flex items-center\"><i class=\"fas fa-brain pr-2\"></i>{{.Name}}</p>",
          "30:                         {{ if .Backend }}",
          "31:                         <!-- Badge for Backend -->",
          "",
          "[Removed Lines]",
          "19:             </a>",
          "",
          "[Added Lines]",
          "19:             </a>",
          "23:             {{ if eq (len .ModelsConfig) 0 }}",
          "24:             <h2 class=\"text-center text-3xl font-semibold text-gray-100\"> <i class=\"text-yellow-200 ml-2 fa-solid fa-triangle-exclamation animate-pulse\"></i> Ouch! seems you don't have any models installed!</h2>",
          "25:             <p class=\"text-center mt-4 text-xl\">..install something from the <a class=\"text-gray-400 hover:text-white ml-1 px-3 py-2 rounded\" href=\"/browse\">\ud83d\uddbc\ufe0f Gallery</a> or check the <a href=\"https://localai.io/basics/getting_started/\" class=\"text-gray-400 hover:text-white ml-1 px-3 py-2 rounded\"> <i class=\"fa-solid fa-book\"></i> Getting started documentation </a></p>",
          "26:             {{ else }}",
          "30:                 {{$galleryConfig:=.GalleryConfig}}",
          "32:                 {{ $cfg:= index $galleryConfig .Name}}",
          "36:                         <img {{ if $cfg.Icon }}",
          "37:                             src=\"{{$cfg.Icon}}\"",
          "38:                             {{ else }}",
          "39:                             src=\"https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg\"",
          "40:                             {{ end }}",
          "41:                             class=\"rounded-t-lg max-h-24 max-w-24 object-cover mt-3\"",
          "42:                             >",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "37:                             auto",
          "38:                         </span>",
          "39:                         {{ end }}",
          "40:                     </div>",
          "41:                     <!-- Additional details can go here -->",
          "42:                 </li>",
          "43:                 {{ end }}",
          "44:             </ul>",
          "45:         </div>",
          "46:     </div>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56:                         <button",
          "57:                             class=\"float-right inline-block rounded bg-red-800 px-6 pb-2.5 mb-3 pt-2.5 text-xs font-medium uppercase leading-normal text-white shadow-primary-3 transition duration-150 ease-in-out hover:bg-red-accent-300 hover:shadow-red-2 focus:bg-red-accent-300 focus:shadow-primary-2 focus:outline-none focus:ring-0 active:bg-red-600 active:shadow-primary-2 dark:shadow-black/30 dark:hover:shadow-dark-strong dark:focus:shadow-dark-strong dark:active:shadow-dark-strong\"",
          "58:                             data-twe-ripple-color=\"light\" data-twe-ripple-init=\"\" hx-confirm=\"Are you sure you wish to delete the model?\" hx-post=\"/browse/delete/model/{{.Name}}\" hx-swap=\"outerHTML\"><i class=\"fa-solid fa-cancel pr-2\"></i>Delete</button>",
          "64:             {{ end }}",
          "",
          "---------------"
        ],
        "core/http/views/models.html||core/http/views/models.html": [
          "File: core/http/views/models.html -> core/http/views/models.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "13:                 \ud83d\uddbc\ufe0f Available models from <i>{{ len .Repositories }}</i> repositories     <a href=\"https://localai.io/models/\" target=\"_blank\" >",
          "14:                     <i class=\"fas fa-circle-info pr-2\"></i>",
          "15:                 </a></h2>",
          "18:             <span class=\"htmx-indicator loader\"></span>",
          "19:             <input class=\"form-control appearance-none block w-full px-3 py-2 text-base font-normal text-gray-300 pb-2 mb-5 bg-gray-800 bg-clip-padding border border-solid border-gray-600 rounded transition ease-in-out m-0 focus:text-gray-300 focus:bg-gray-900 focus:border-blue-500 focus:outline-none\" type=\"search\"",
          "20:                 name=\"search\" placeholder=\"Begin Typing To Search models...\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17:             <div class=\"text-center font-semibold text-gray-100\">",
          "18:                 <h2>Filter by type:</h2>",
          "19:                 <button  hx-post=\"/browse/search/models\"",
          "20:                     class=\"text-white-500 inline-block bg-blue-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2 hover:bg-gray-300 hover:shadow-gray-2\"",
          "21:                     hx-target=\"#search-results\"",
          "22:                     hx-vals='{\"search\": \"tts\"}'",
          "23:                 hx-indicator=\".htmx-indicator\" >TTS</button>",
          "24:                 <button  hx-post=\"/browse/search/models\"",
          "25:                     class=\"text-white-500 inline-block bg-blue-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2 hover:bg-gray-300 hover:shadow-gray-2\"",
          "26:                     hx-target=\"#search-results\"",
          "27:                     hx-vals='{\"search\": \"stablediffusion\"}'",
          "28:                 hx-indicator=\".htmx-indicator\" >Image generation</button>",
          "29:                 <button  hx-post=\"/browse/search/models\" \\",
          "30:                     class=\"text-white-500 inline-block bg-blue-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2 hover:bg-gray-300 hover:shadow-gray-2\"",
          "31:                     hx-target=\"#search-results\"",
          "32:                     hx-vals='{\"search\": \"llm\"}'",
          "33:                 hx-indicator=\".htmx-indicator\" >Text generation</button>",
          "34:                 <button  hx-post=\"/browse/search/models\"",
          "35:                     class=\"text-white-500 inline-block bg-blue-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2 hover:bg-gray-300 hover:shadow-gray-2\"",
          "36:                     hx-target=\"#search-results\"",
          "37:                     hx-vals='{\"search\": \"multimodal\"}'",
          "38:                 hx-indicator=\".htmx-indicator\" >Multimodal</button>",
          "39:                 <button  hx-post=\"/browse/search/models\"",
          "40:                     class=\"text-white-500 inline-block bg-blue-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2 hover:bg-gray-300 hover:shadow-gray-2\"",
          "41:                     hx-target=\"#search-results\"",
          "42:                     hx-vals='{\"search\": \"embedding\"}'",
          "43:                 hx-indicator=\".htmx-indicator\" >Embeddings</button>",
          "44:                 <button  hx-post=\"/browse/search/models\"",
          "45:                     class=\"text-white-500 inline-block bg-blue-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2 hover:bg-gray-300 hover:shadow-gray-2\"",
          "46:                     hx-target=\"#search-results\"",
          "47:                     hx-vals='{\"search\": \"rerank\"}'",
          "48:                 hx-indicator=\".htmx-indicator\" >Rerankers</button>",
          "49:                 <button",
          "50:                     hx-post=\"/browse/search/models\"",
          "51:                     class=\"text-white-500 inline-block bg-blue-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2 hover:bg-gray-300 hover:shadow-gray-2\"",
          "52:                     hx-target=\"#search-results\"",
          "53:                     hx-vals='{\"search\": \"whisper\"}'",
          "54:                 hx-indicator=\".htmx-indicator\" >Audio transcription</button>",
          "55:             </div>",
          "57:             <div class=\"text-center text-xs font-semibold text-gray-100\">",
          "58:                 Filter by tags:",
          "59:                 {{ range .AllTags }}",
          "60:                     <button  hx-post=\"/browse/search/models\" class=\"text-blue-500\" hx-target=\"#search-results\"",
          "61:                     hx-vals='{\"search\": \"{{.}}\"}'",
          "62:                     hx-indicator=\".htmx-indicator\" >{{.}}</button>",
          "63:                 {{ end }}",
          "64:             </div>",
          "",
          "---------------"
        ],
        "core/services/gallery.go||core/services/gallery.go": [
          "File: core/services/gallery.go -> core/services/gallery.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "90:     if op.Delete {",
          "91:      modelConfig := &config.BackendConfig{}",
          "94:      if err != nil {",
          "95:       updateError(err)",
          "96:       continue",
          "",
          "[Removed Lines]",
          "93:      dat, err := os.ReadFile(filepath.Join(g.modelPath, op.GalleryName+\".yaml\"))",
          "",
          "[Added Lines]",
          "93:      dat, err := os.ReadFile(filepath.Join(g.modelPath, op.GalleryModelName+\".yaml\"))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "111:       files = append(files, modelConfig.MMProjFileName())",
          "112:      }",
          "115:     } else {",
          "120:       } else {",
          "122:       }",
          "123:      } else if op.ConfigURL != \"\" {",
          "124:       startup.PreloadModelsConfigurations(op.ConfigURL, g.modelPath, op.ConfigURL)",
          "",
          "[Removed Lines]",
          "114:      err = gallery.DeleteModelFromSystem(g.modelPath, op.GalleryName, files)",
          "117:      if op.GalleryName != \"\" {",
          "118:       if strings.Contains(op.GalleryName, \"@\") {",
          "119:        err = gallery.InstallModelFromGallery(op.Galleries, op.GalleryName, g.modelPath, op.Req, progressCallback)",
          "121:        err = gallery.InstallModelFromGalleryByName(op.Galleries, op.GalleryName, g.modelPath, op.Req, progressCallback)",
          "",
          "[Added Lines]",
          "114:      err = gallery.DeleteModelFromSystem(g.modelPath, op.GalleryModelName, files)",
          "117:      if op.GalleryModelName != \"\" {",
          "118:       if strings.Contains(op.GalleryModelName, \"@\") {",
          "119:        err = gallery.InstallModelFromGallery(op.Galleries, op.GalleryModelName, g.modelPath, op.Req, progressCallback)",
          "121:        err = gallery.InstallModelFromGalleryByName(op.Galleries, op.GalleryModelName, g.modelPath, op.Req, progressCallback)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "149:     g.UpdateStatus(op.Id,",
          "150:      &gallery.GalleryOpStatus{",
          "155:    }",
          "156:   }",
          "157:  }()",
          "",
          "[Removed Lines]",
          "151:       Deletion:  op.Delete,",
          "152:       Processed: true,",
          "153:       Message:   \"completed\",",
          "154:       Progress:  100})",
          "",
          "[Added Lines]",
          "151:       Deletion:         op.Delete,",
          "152:       Processed:        true,",
          "153:       GalleryModelName: op.GalleryModelName,",
          "154:       Message:          \"completed\",",
          "155:       Progress:         100})",
          "",
          "---------------"
        ],
        "pkg/gallery/gallery.go||pkg/gallery/gallery.go": [
          "File: pkg/gallery/gallery.go -> pkg/gallery/gallery.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:    installName = req.Name",
          "56:   }",
          "58:   config.Files = append(config.Files, req.AdditionalFiles...)",
          "59:   config.Files = append(config.Files, model.AdditionalFiles...)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59:   config.URLs = append(config.URLs, model.URLs...)",
          "60:   config.Icon = model.Icon",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "186:  return models, nil",
          "187: }",
          "189: func DeleteModelFromSystem(basePath string, name string, additionalFiles []string) error {",
          "191:  name = strings.ReplaceAll(name, string(os.PathSeparator), \"__\")",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "192: func GetLocalModelConfiguration(basePath string, name string) (*Config, error) {",
          "193:  name = strings.ReplaceAll(name, string(os.PathSeparator), \"__\")",
          "194:  galleryFile := filepath.Join(basePath, galleryFileName(name))",
          "195:  return ReadConfigFile(galleryFile)",
          "196: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "228:   err = errors.Join(err, fmt.Errorf(\"failed to remove file %s: %w\", configFile, e))",
          "229:  }",
          "231:  return err",
          "232: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "241:  os.Remove(galleryFile)",
          "",
          "---------------"
        ],
        "pkg/gallery/models.go||pkg/gallery/models.go": [
          "File: pkg/gallery/models.go -> pkg/gallery/models.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: type Config struct {",
          "44:  Description     string           `yaml:\"description\"`",
          "45:  License         string           `yaml:\"license\"`",
          "46:  URLs            []string         `yaml:\"urls\"`",
          "47:  Name            string           `yaml:\"name\"`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46:  Icon            string           `yaml:\"icon\"`",
          "",
          "---------------"
        ],
        "pkg/gallery/op.go||pkg/gallery/op.go": [
          "File: pkg/gallery/op.go -> pkg/gallery/op.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package gallery",
          "3: type GalleryOp struct {",
          "9:  Req       GalleryModel",
          "10:  Galleries []Gallery",
          "",
          "[Removed Lines]",
          "4:  Id          string",
          "5:  GalleryName string",
          "6:  ConfigURL   string",
          "7:  Delete      bool",
          "",
          "[Added Lines]",
          "4:  Id               string",
          "5:  GalleryModelName string",
          "6:  ConfigURL        string",
          "7:  Delete           bool",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "19:  Progress           float64 `json:\"progress\"`",
          "20:  TotalFileSize      string  `json:\"file_size\"`",
          "21:  DownloadedFileSize string  `json:\"downloaded_size\"`",
          "22: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22:  GalleryModelName   string  `json:\"gallery_model_name\"`",
          "",
          "---------------"
        ],
        "pkg/gallery/request.go||pkg/gallery/request.go": [
          "File: pkg/gallery/request.go -> pkg/gallery/request.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package gallery",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: import \"fmt\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "23:  Installed bool `json:\"installed,omitempty\" yaml:\"installed,omitempty\"`",
          "24: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: func (m GalleryModel) ID() string {",
          "29:  return fmt.Sprintf(\"%s@%s\", m.Gallery.Name, m.Name)",
          "30: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}