{
  "cve_id": "CVE-2024-8060",
  "cve_desc": "OpenWebUI version 0.3.0 contains a vulnerability in the audio API endpoint `/audio/api/v1/transcriptions` that allows for arbitrary file upload. The application performs insufficient validation on the `file.content_type` and allows user-controlled filenames, leading to a path traversal vulnerability. This can be exploited by an authenticated user to overwrite critical files within the Docker container, potentially leading to remote code execution as the root user.",
  "repo": "open-webui/open-webui",
  "patch_hash": "613a087387c094e71ee91d29c015195ef401e160",
  "patch_info": {
    "commit_hash": "613a087387c094e71ee91d29c015195ef401e160",
    "repo": "open-webui/open-webui",
    "commit_url": "https://github.com/open-webui/open-webui/commit/613a087387c094e71ee91d29c015195ef401e160",
    "files": [
      "backend/open_webui/routers/audio.py"
    ],
    "message": "refac",
    "before_after_code_files": [
      "backend/open_webui/routers/audio.py||backend/open_webui/routers/audio.py"
    ]
  },
  "patch_diff": {
    "backend/open_webui/routers/audio.py||backend/open_webui/routers/audio.py": [
      "File: backend/open_webui/routers/audio.py -> backend/open_webui/routers/audio.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "681:     available_models = []",
      "682:     if request.app.state.config.TTS_ENGINE == \"openai\":",
      "683:         # Use custom endpoint if not using the official OpenAI API URL",
      "685:             try:",
      "687:                 response.raise_for_status()",
      "688:                 data = response.json()",
      "689:                 available_models = data.get(\"models\", [])",
      "690:             except Exception as e:",
      "691:                 log.error(f\"Error fetching models from custom endpoint: {str(e)}\")",
      "693:         else:",
      "694:             available_models = [{\"id\": \"tts-1\"}, {\"id\": \"tts-1-hd\"}]",
      "695:     elif request.app.state.config.TTS_ENGINE == \"elevenlabs\":",
      "",
      "[Removed Lines]",
      "684:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(\"https://api.openai.com\"):",
      "686:                 response = requests.get(f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/models\")",
      "692:                 available_models = []",
      "",
      "[Added Lines]",
      "684:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(",
      "685:             \"https://api.openai.com\"",
      "686:         ):",
      "688:                 response = requests.get(",
      "689:                     f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/models\"",
      "690:                 )",
      "696:                 available_models = [{\"id\": \"tts-1\"}, {\"id\": \"tts-1-hd\"}]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "723:     available_voices = {}",
      "724:     if request.app.state.config.TTS_ENGINE == \"openai\":",
      "725:         # Use custom endpoint if not using the official OpenAI API URL",
      "727:             try:",
      "729:                 response.raise_for_status()",
      "730:                 data = response.json()",
      "731:                 voices_list = data.get(\"voices\", [])",
      "732:                 available_voices = {voice[\"id\"]: voice[\"name\"] for voice in voices_list}",
      "733:             except Exception as e:",
      "734:                 log.error(f\"Error fetching voices from custom endpoint: {str(e)}\")",
      "736:         else:",
      "737:             available_voices = {",
      "738:                 \"alloy\": \"alloy\",",
      "",
      "[Removed Lines]",
      "726:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(\"https://api.openai.com\"):",
      "728:                 response = requests.get(f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/voices\")",
      "735:                 available_voices = {}",
      "",
      "[Added Lines]",
      "730:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(",
      "731:             \"https://api.openai.com\"",
      "732:         ):",
      "734:                 response = requests.get(",
      "735:                     f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/voices\"",
      "736:                 )",
      "743:                 available_voices = {",
      "744:                     \"alloy\": \"alloy\",",
      "745:                     \"echo\": \"echo\",",
      "746:                     \"fable\": \"fable\",",
      "747:                     \"onyx\": \"onyx\",",
      "748:                     \"nova\": \"nova\",",
      "749:                     \"shimmer\": \"shimmer\",",
      "750:                 }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "df07d671ce17548bd28f8147e6ca6a0c8e22fe90",
      "candidate_info": {
        "commit_hash": "df07d671ce17548bd28f8147e6ca6a0c8e22fe90",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/df07d671ce17548bd28f8147e6ca6a0c8e22fe90",
        "files": [
          "backend/open_webui/utils/middleware.py"
        ],
        "message": "refac",
        "before_after_code_files": [
          "backend/open_webui/utils/middleware.py||backend/open_webui/utils/middleware.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "backend/open_webui/utils/middleware.py||backend/open_webui/utils/middleware.py": [
          "File: backend/open_webui/utils/middleware.py -> backend/open_webui/utils/middleware.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1321:                                         )",
          "1323:                                         if end:",
          "1330:                                             break",
          "1332:                                     if ENABLE_REALTIME_CHAT_SAVE:",
          "",
          "[Removed Lines]",
          "1324:                                             data = {",
          "1325:                                                 \"content\": serialize_content_blocks(",
          "1326:                                                     content_blocks",
          "1327:                                                 ),",
          "1328:                                             }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1370:                         if not content_blocks[-1][\"content\"]:",
          "1371:                             content_blocks.pop()",
          "1373:                     if response.background:",
          "1374:                         await response.background()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1367:                     await event_emitter(",
          "1368:                         {",
          "1369:                             \"type\": \"chat:completion\",",
          "1370:                             \"data\": {",
          "1371:                                 \"content\": serialize_content_blocks(content_blocks),",
          "1372:                             },",
          "1373:                         }",
          "1374:                     )",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b7aeb432edf96706a3bca1c0c737a8af6ef4e489",
      "candidate_info": {
        "commit_hash": "b7aeb432edf96706a3bca1c0c737a8af6ef4e489",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/b7aeb432edf96706a3bca1c0c737a8af6ef4e489",
        "files": [
          "src/lib/components/chat/Messages/Markdown.svelte",
          "src/lib/components/icons/Home.svelte",
          "src/lib/components/layout/Sidebar.svelte",
          "src/lib/components/playground/Notes.svelte",
          "src/routes/(app)/home/+layout.svelte",
          "src/routes/(app)/home/+page.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/chat/Messages/Markdown.svelte||src/lib/components/chat/Messages/Markdown.svelte",
          "src/lib/components/icons/Home.svelte||src/lib/components/icons/Home.svelte",
          "src/lib/components/layout/Sidebar.svelte||src/lib/components/layout/Sidebar.svelte",
          "src/lib/components/playground/Notes.svelte||src/lib/components/playground/Notes.svelte",
          "src/routes/(app)/home/+layout.svelte||src/routes/(app)/home/+layout.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/chat/Messages/Markdown.svelte||src/lib/components/chat/Messages/Markdown.svelte": [
          "File: src/lib/components/chat/Messages/Markdown.svelte -> src/lib/components/chat/Messages/Markdown.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:  $: (async () => {",
          "32:   if (content) {",
          "33:    tokens = marked.lexer(",
          "35:    );",
          "36:   }",
          "37:  })();",
          "",
          "[Removed Lines]",
          "34:     replaceTokens(processResponseContent(content), sourceIds, model?.name, $user?.name)",
          "",
          "[Added Lines]",
          "34:     replaceTokens(processResponseContent(content), sourceIds, model?.name, $user?.name),",
          "35:     {",
          "36:      gfm: true",
          "37:     }",
          "",
          "---------------"
        ],
        "src/lib/components/icons/Home.svelte||src/lib/components/icons/Home.svelte": [
          "File: src/lib/components/icons/Home.svelte -> src/lib/components/icons/Home.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <script lang=\"ts\">",
          "2:  export let className = 'size-4';",
          "3:  export let strokeWidth = '1.5';",
          "4: </script>",
          "6: <svg",
          "7:  stroke-width={strokeWidth}",
          "8:  stroke=\"currentColor\"",
          "9:  class={className}",
          "10:  aria-hidden=\"true\"",
          "11:  xmlns=\"http://www.w3.org/2000/svg\"",
          "12:  fill=\"none\"",
          "13:  width=\"24\"",
          "14:  height=\"24\"",
          "15:  viewBox=\"0 0 22 22\"",
          "16: >",
          "17:  <path",
          "18:   stroke=\"currentColor\"",
          "19:   stroke-linecap=\"round\"",
          "20:   stroke-linejoin=\"round\"",
          "21:   d=\"m4 12 8-8 8 8M6 10.5V19a1 1 0 0 0 1 1h3v-3a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3h3a1 1 0 0 0 1-1v-8.5\"",
          "22:  />",
          "23: </svg>",
          "",
          "---------------"
        ],
        "src/lib/components/layout/Sidebar.svelte||src/lib/components/layout/Sidebar.svelte": [
          "File: src/lib/components/layout/Sidebar.svelte -> src/lib/components/layout/Sidebar.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:  import ChannelModal from './Sidebar/ChannelModal.svelte';",
          "58:  import ChannelItem from './Sidebar/ChannelItem.svelte';",
          "59:  import PencilSquare from '../icons/PencilSquare.svelte';",
          "61:  const BREAKPOINT = 768;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "60:  import Home from '../icons/Home.svelte';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "536:    </a>",
          "537:   </div>",
          "539:   {#if $user?.role === 'admin' || $user?.permissions?.workspace?.models || $user?.permissions?.workspace?.knowledge || $user?.permissions?.workspace?.prompts || $user?.permissions?.workspace?.tools}",
          "540:    <div class=\"px-1.5 flex justify-center text-gray-800 dark:text-gray-200\">",
          "541:     <a",
          "543:      href=\"/workspace\"",
          "544:      on:click={() => {",
          "545:       selectedChatId = null;",
          "",
          "[Removed Lines]",
          "542:      class=\"flex-grow flex space-x-3 rounded-lg px-2 py-[7px] hover:bg-gray-100 dark:hover:bg-gray-900 transition\"",
          "",
          "[Added Lines]",
          "540:   <!-- {#if $user?.role === 'admin'}",
          "541:    <div class=\"px-1.5 flex justify-center text-gray-800 dark:text-gray-200\">",
          "542:     <a",
          "543:      class=\"flex-grow flex items-center space-x-3 rounded-lg px-2 py-[7px] hover:bg-gray-100 dark:hover:bg-gray-900 transition\"",
          "544:      href=\"/home\"",
          "545:      on:click={() => {",
          "546:       selectedChatId = null;",
          "547:       chatId.set('');",
          "549:       if ($mobile) {",
          "550:        showSidebar.set(false);",
          "551:       }",
          "552:      }}",
          "553:      draggable=\"false\"",
          "554:     >",
          "555:      <div class=\"self-center\">",
          "556:       <Home strokeWidth=\"2\" className=\"size-[1.1rem]\" />",
          "557:      </div>",
          "559:      <div class=\"flex self-center translate-y-[0.5px]\">",
          "560:       <div class=\" self-center font-medium text-sm font-primary\">{$i18n.t('Home')}</div>",
          "561:      </div>",
          "562:     </a>",
          "563:    </div>",
          "564:   {/if} -->",
          "569:      class=\"flex-grow flex items-center space-x-3 rounded-lg px-2 py-[7px] hover:bg-gray-100 dark:hover:bg-gray-900 transition\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "568:       </svg>",
          "569:      </div>",
          "572:       <div class=\" self-center font-medium text-sm font-primary\">{$i18n.t('Workspace')}</div>",
          "573:      </div>",
          "574:     </a>",
          "",
          "[Removed Lines]",
          "571:      <div class=\"flex self-center\">",
          "",
          "[Added Lines]",
          "598:      <div class=\"flex self-center translate-y-[0.5px]\">",
          "",
          "---------------"
        ],
        "src/lib/components/playground/Notes.svelte||src/lib/components/playground/Notes.svelte": [
          "File: src/lib/components/playground/Notes.svelte -> src/lib/components/playground/Notes.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "43:   <div class=\" flex-1 w-full h-full\">",
          "44:    <RichTextInput",
          "46:     bind:value={content}",
          "47:     placeholder={$i18n.t('Write something...')}",
          "48:    />",
          "49:   </div>",
          "50:  </div>",
          "",
          "[Removed Lines]",
          "45:     className=\" input-prose-sm\"",
          "",
          "[Added Lines]",
          "45:     className=\"input-prose-sm\"",
          "48:     preserveBreaks={true}",
          "",
          "---------------"
        ],
        "src/routes/(app)/home/+layout.svelte||src/routes/(app)/home/+layout.svelte": [
          "File: src/routes/(app)/home/+layout.svelte -> src/routes/(app)/home/+layout.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <script lang=\"ts\">",
          "2:  import { onMount, getContext } from 'svelte';",
          "3:  import { WEBUI_NAME, showSidebar, functions } from '$lib/stores';",
          "4:  import MenuLines from '$lib/components/icons/MenuLines.svelte';",
          "5:  import { page } from '$app/stores';",
          "7:  const i18n = getContext('i18n');",
          "9:  onMount(async () => {});",
          "10: </script>",
          "12: <svelte:head>",
          "13:  <title>",
          "14:   {$i18n.t('Home')} | {$WEBUI_NAME}",
          "15:  </title>",
          "16: </svelte:head>",
          "18: <div",
          "19:  class=\" flex flex-col w-full h-screen max-h-[100dvh] transition-width duration-200 ease-in-out {$showSidebar",
          "20:   ? 'md:max-w-[calc(100%-260px)]'",
          "21:   : ''} max-w-full\"",
          "22: >",
          "23:  <nav class=\"   px-2.5 pt-1 backdrop-blur-xl w-full drag-region\">",
          "24:   <div class=\" flex items-center\">",
          "25:    <div class=\"{$showSidebar ? 'md:hidden' : ''} flex flex-none items-center self-end\">",
          "26:     <button",
          "27:      id=\"sidebar-toggle-button\"",
          "28:      class=\"cursor-pointer p-1.5 flex rounded-xl hover:bg-gray-100 dark:hover:bg-gray-850 transition\"",
          "29:      on:click={() => {",
          "30:       showSidebar.set(!$showSidebar);",
          "31:      }}",
          "32:      aria-label=\"Toggle Sidebar\"",
          "33:     >",
          "34:      <div class=\" m-auto self-center\">",
          "35:       <MenuLines />",
          "36:      </div>",
          "37:     </button>",
          "38:    </div>",
          "40:    <div class=\" flex w-full\">",
          "41:     <div",
          "42:      class=\"flex gap-1 scrollbar-none overflow-x-auto w-fit text-center text-sm font-medium rounded-full bg-transparent pt-1\"",
          "43:     >",
          "44:      <a",
          "45:       class=\"min-w-fit rounded-full p-1.5 {$page.url.pathname.includes('/home/notes')",
          "46:        ? ''",
          "47:        : 'text-gray-300 dark:text-gray-600 hover:text-gray-700 dark:hover:text-white'} transition\"",
          "48:       href=\"/playground/notes\">{$i18n.t('Notes')}</a",
          "49:      >",
          "51:      <a",
          "52:       class=\"min-w-fit rounded-full p-1.5 {$page.url.pathname.includes('/playground/calendar')",
          "53:        ? ''",
          "54:        : 'text-gray-300 dark:text-gray-600 hover:text-gray-700 dark:hover:text-white'} transition\"",
          "55:       href=\"/playground/completions\">{$i18n.t('Calendar')}</a",
          "56:      >",
          "57:     </div>",
          "58:    </div>",
          "59:   </div>",
          "60:  </nav>",
          "62:  <div class=\" flex-1 max-h-full overflow-y-auto\">",
          "63:   <slot />",
          "64:  </div>",
          "65: </div>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f8ad74fc42f9870a0949ef2c2e860eb5614423af",
      "candidate_info": {
        "commit_hash": "f8ad74fc42f9870a0949ef2c2e860eb5614423af",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/f8ad74fc42f9870a0949ef2c2e860eb5614423af",
        "files": [
          "src/lib/components/chat/MessageInput.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/chat/MessageInput.svelte||src/lib/components/chat/MessageInput.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/chat/MessageInput.svelte||src/lib/components/chat/MessageInput.svelte": [
          "File: src/lib/components/chat/MessageInput.svelte -> src/lib/components/chat/MessageInput.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "1286:                  stream = null;",
          "1296:                  }",
          "1298:                  showCallOverlay.set(true);",
          "",
          "[Removed Lines]",
          "1288:                  if (!$TTSWorker) {",
          "1289:                   await TTSWorker.set(",
          "1290:                    new KokoroWorker({",
          "1291:                     dtype: $settings.audio?.tts?.engineConfig?.dtype ?? 'fp32'",
          "1292:                    })",
          "1293:                   );",
          "1295:                   await $TTSWorker.init();",
          "",
          "[Added Lines]",
          "1288:                  if ($settings.audio?.tts?.engine === 'browser-kokoro') {",
          "1290:                   if (!$TTSWorker) {",
          "1291:                    await TTSWorker.set(",
          "1292:                     new KokoroWorker({",
          "1293:                      dtype: $settings.audio?.tts?.engineConfig?.dtype ?? 'fp32'",
          "1294:                     })",
          "1295:                    );",
          "1297:                    await $TTSWorker.init();",
          "1298:                   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cce8f37ada023540a7ec016558eee634dc305b13",
      "candidate_info": {
        "commit_hash": "cce8f37ada023540a7ec016558eee634dc305b13",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/cce8f37ada023540a7ec016558eee634dc305b13",
        "files": [
          "src/lib/components/channel/Thread.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/channel/Thread.svelte||src/lib/components/channel/Thread.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/channel/Thread.svelte||src/lib/components/channel/Thread.svelte": [
          "File: src/lib/components/channel/Thread.svelte -> src/lib/components/channel/Thread.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:  import XMark from '$lib/components/icons/XMark.svelte';",
          "9:  import MessageInput from './MessageInput.svelte';",
          "10:  import Messages from './Messages.svelte';",
          "12:  import { toast } from 'svelte-sonner';",
          "14:  export let threadId = null;",
          "",
          "[Removed Lines]",
          "11:  import { onMount, tick } from 'svelte';",
          "",
          "[Added Lines]",
          "11:  import { onDestroy, onMount, tick } from 'svelte';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "54:  };",
          "56:  const channelEventHandler = async (event) => {",
          "57:   if (event.channel_id === channel.id) {",
          "58:    const type = event?.data?.type ?? null;",
          "59:    const data = event?.data?.data ?? null;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57:   console.log(event);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "148:  onMount(() => {",
          "149:   $socket?.on('channel-events', channelEventHandler);",
          "150:  });",
          "151: </script>",
          "153: {#if channel}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "153:  onDestroy(() => {",
          "154:   $socket?.off('channel-events', channelEventHandler);",
          "155:  });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "215f991326a4d1d614b8aa387e84853b0431f476",
      "candidate_info": {
        "commit_hash": "215f991326a4d1d614b8aa387e84853b0431f476",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/215f991326a4d1d614b8aa387e84853b0431f476",
        "files": [
          "backend/open_webui/utils/middleware.py"
        ],
        "message": "refac",
        "before_after_code_files": [
          "backend/open_webui/utils/middleware.py||backend/open_webui/utils/middleware.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "backend/open_webui/utils/middleware.py||backend/open_webui/utils/middleware.py": [
          "File: backend/open_webui/utils/middleware.py -> backend/open_webui/utils/middleware.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "203:                     }",
          "205:                     if tool.get(\"direct\", False):",
          "207:                             {",
          "208:                                 \"type\": \"execute:tool\",",
          "209:                                 \"data\": {",
          "",
          "[Removed Lines]",
          "206:                         tool_output = await event_caller(",
          "",
          "[Added Lines]",
          "206:                         tool_result = await event_caller(",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "217:                         )",
          "218:                     else:",
          "219:                         tool_function = tool[\"callable\"]",
          "222:                 except Exception as e:",
          "229:                     tool = tools[tool_function_name]",
          "230:                     tool_id = tool.get(\"toolkit_id\", \"\")",
          "231:                     if tool.get(\"citation\", False) or tool.get(\"direct\", False):",
          "",
          "[Removed Lines]",
          "220:                         tool_output = await tool_function(**tool_function_params)",
          "223:                     tool_output = str(e)",
          "225:                 if isinstance(tool_output, dict):",
          "226:                     tool_output = json.dumps(tool_output, indent=4)",
          "228:                 if isinstance(tool_output, str):",
          "",
          "[Added Lines]",
          "220:                         tool_result = await tool_function(**tool_function_params)",
          "223:                     tool_result = str(e)",
          "225:                 if isinstance(tool_result, dict) or isinstance(tool_result, list):",
          "226:                     tool_result = json.dumps(tool_result, indent=2)",
          "228:                 if isinstance(tool_result, str):",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "239:                                         else f\"{tool_function_name}\"",
          "240:                                     ),",
          "241:                                 },",
          "243:                                 \"metadata\": [",
          "244:                                     {",
          "245:                                         \"source\": (",
          "",
          "[Removed Lines]",
          "242:                                 \"document\": [tool_output],",
          "",
          "[Added Lines]",
          "242:                                 \"document\": [tool_result],",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "255:                         sources.append(",
          "256:                             {",
          "257:                                 \"source\": {},",
          "259:                                 \"metadata\": [",
          "260:                                     {",
          "261:                                         \"source\": (",
          "",
          "[Removed Lines]",
          "258:                                 \"document\": [tool_output],",
          "",
          "[Added Lines]",
          "258:                                 \"document\": [tool_result],",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1891:                             except Exception as e:",
          "1892:                                 tool_result = str(e)",
          "1897:                         results.append(",
          "1898:                             {",
          "",
          "[Removed Lines]",
          "1894:                         if isinstance(tool_result, dict):",
          "1895:                             tool_result = json.dumps(tool_result)",
          "",
          "[Added Lines]",
          "1894:                         if isinstance(tool_result, dict) or isinstance(",
          "1895:                             tool_result, list",
          "1896:                         ):",
          "1897:                             tool_result = json.dumps(tool_result, indent=2)",
          "",
          "---------------"
        ]
      }
    }
  ]
}