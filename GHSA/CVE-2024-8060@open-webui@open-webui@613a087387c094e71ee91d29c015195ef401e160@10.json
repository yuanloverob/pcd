{
  "cve_id": "CVE-2024-8060",
  "cve_desc": "OpenWebUI version 0.3.0 contains a vulnerability in the audio API endpoint `/audio/api/v1/transcriptions` that allows for arbitrary file upload. The application performs insufficient validation on the `file.content_type` and allows user-controlled filenames, leading to a path traversal vulnerability. This can be exploited by an authenticated user to overwrite critical files within the Docker container, potentially leading to remote code execution as the root user.",
  "repo": "open-webui/open-webui",
  "patch_hash": "613a087387c094e71ee91d29c015195ef401e160",
  "patch_info": {
    "commit_hash": "613a087387c094e71ee91d29c015195ef401e160",
    "repo": "open-webui/open-webui",
    "commit_url": "https://github.com/open-webui/open-webui/commit/613a087387c094e71ee91d29c015195ef401e160",
    "files": [
      "backend/open_webui/routers/audio.py"
    ],
    "message": "refac",
    "before_after_code_files": [
      "backend/open_webui/routers/audio.py||backend/open_webui/routers/audio.py"
    ]
  },
  "patch_diff": {
    "backend/open_webui/routers/audio.py||backend/open_webui/routers/audio.py": [
      "File: backend/open_webui/routers/audio.py -> backend/open_webui/routers/audio.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "681:     available_models = []",
      "682:     if request.app.state.config.TTS_ENGINE == \"openai\":",
      "683:         # Use custom endpoint if not using the official OpenAI API URL",
      "685:             try:",
      "687:                 response.raise_for_status()",
      "688:                 data = response.json()",
      "689:                 available_models = data.get(\"models\", [])",
      "690:             except Exception as e:",
      "691:                 log.error(f\"Error fetching models from custom endpoint: {str(e)}\")",
      "693:         else:",
      "694:             available_models = [{\"id\": \"tts-1\"}, {\"id\": \"tts-1-hd\"}]",
      "695:     elif request.app.state.config.TTS_ENGINE == \"elevenlabs\":",
      "",
      "[Removed Lines]",
      "684:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(\"https://api.openai.com\"):",
      "686:                 response = requests.get(f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/models\")",
      "692:                 available_models = []",
      "",
      "[Added Lines]",
      "684:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(",
      "685:             \"https://api.openai.com\"",
      "686:         ):",
      "688:                 response = requests.get(",
      "689:                     f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/models\"",
      "690:                 )",
      "696:                 available_models = [{\"id\": \"tts-1\"}, {\"id\": \"tts-1-hd\"}]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "723:     available_voices = {}",
      "724:     if request.app.state.config.TTS_ENGINE == \"openai\":",
      "725:         # Use custom endpoint if not using the official OpenAI API URL",
      "727:             try:",
      "729:                 response.raise_for_status()",
      "730:                 data = response.json()",
      "731:                 voices_list = data.get(\"voices\", [])",
      "732:                 available_voices = {voice[\"id\"]: voice[\"name\"] for voice in voices_list}",
      "733:             except Exception as e:",
      "734:                 log.error(f\"Error fetching voices from custom endpoint: {str(e)}\")",
      "736:         else:",
      "737:             available_voices = {",
      "738:                 \"alloy\": \"alloy\",",
      "",
      "[Removed Lines]",
      "726:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(\"https://api.openai.com\"):",
      "728:                 response = requests.get(f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/voices\")",
      "735:                 available_voices = {}",
      "",
      "[Added Lines]",
      "730:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(",
      "731:             \"https://api.openai.com\"",
      "732:         ):",
      "734:                 response = requests.get(",
      "735:                     f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/voices\"",
      "736:                 )",
      "743:                 available_voices = {",
      "744:                     \"alloy\": \"alloy\",",
      "745:                     \"echo\": \"echo\",",
      "746:                     \"fable\": \"fable\",",
      "747:                     \"onyx\": \"onyx\",",
      "748:                     \"nova\": \"nova\",",
      "749:                     \"shimmer\": \"shimmer\",",
      "750:                 }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2e77d5ef0e46d530c73501ba3a130490e52ebd6b",
      "candidate_info": {
        "commit_hash": "2e77d5ef0e46d530c73501ba3a130490e52ebd6b",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/2e77d5ef0e46d530c73501ba3a130490e52ebd6b",
        "files": [
          "src/lib/apis/index.ts",
          "src/lib/components/admin/Functions.svelte",
          "src/lib/components/admin/Settings/Audio.svelte",
          "src/lib/components/admin/Settings/Connections.svelte",
          "src/lib/components/admin/Settings/Evaluations.svelte",
          "src/lib/components/admin/Settings/Models.svelte",
          "src/lib/components/admin/Settings/Models/Manage/ManageOllama.svelte",
          "src/lib/components/admin/Settings/Pipelines.svelte",
          "src/lib/components/chat/ModelSelector/Selector.svelte",
          "src/lib/components/chat/SettingsModal.svelte",
          "src/lib/components/workspace/Models.svelte",
          "src/routes/(app)/+layout.svelte",
          "src/routes/(app)/admin/functions/create/+page.svelte",
          "src/routes/(app)/admin/functions/edit/+page.svelte",
          "src/routes/(app)/workspace/models/+page.svelte",
          "src/routes/(app)/workspace/models/create/+page.svelte",
          "src/routes/(app)/workspace/models/edit/+page.svelte",
          "src/routes/s/[id]/+page.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/apis/index.ts||src/lib/apis/index.ts",
          "src/lib/components/admin/Functions.svelte||src/lib/components/admin/Functions.svelte",
          "src/lib/components/admin/Settings/Audio.svelte||src/lib/components/admin/Settings/Audio.svelte",
          "src/lib/components/admin/Settings/Connections.svelte||src/lib/components/admin/Settings/Connections.svelte",
          "src/lib/components/admin/Settings/Evaluations.svelte||src/lib/components/admin/Settings/Evaluations.svelte",
          "src/lib/components/admin/Settings/Models.svelte||src/lib/components/admin/Settings/Models.svelte",
          "src/lib/components/admin/Settings/Models/Manage/ManageOllama.svelte||src/lib/components/admin/Settings/Models/Manage/ManageOllama.svelte",
          "src/lib/components/admin/Settings/Pipelines.svelte||src/lib/components/admin/Settings/Pipelines.svelte",
          "src/lib/components/chat/ModelSelector/Selector.svelte||src/lib/components/chat/ModelSelector/Selector.svelte",
          "src/lib/components/chat/SettingsModal.svelte||src/lib/components/chat/SettingsModal.svelte",
          "src/lib/components/workspace/Models.svelte||src/lib/components/workspace/Models.svelte",
          "src/routes/(app)/+layout.svelte||src/routes/(app)/+layout.svelte",
          "src/routes/(app)/admin/functions/create/+page.svelte||src/routes/(app)/admin/functions/create/+page.svelte",
          "src/routes/(app)/admin/functions/edit/+page.svelte||src/routes/(app)/admin/functions/edit/+page.svelte",
          "src/routes/(app)/workspace/models/+page.svelte||src/routes/(app)/workspace/models/+page.svelte",
          "src/routes/(app)/workspace/models/create/+page.svelte||src/routes/(app)/workspace/models/create/+page.svelte",
          "src/routes/(app)/workspace/models/edit/+page.svelte||src/routes/(app)/workspace/models/edit/+page.svelte",
          "src/routes/s/[id]/+page.svelte||src/routes/s/[id]/+page.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/apis/index.ts||src/lib/apis/index.ts": [
          "File: src/lib/apis/index.ts -> src/lib/apis/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:         }))",
          "63:        };",
          "66:       } else {",
          "67:        requests.push(getOpenAIModelsDirect(url, OPENAI_API_KEYS[idx]));",
          "68:       }",
          "69:      } else {",
          "71:      }",
          "72:     }",
          "73:    }",
          "74:    const responses = await Promise.all(requests);",
          "76:    for (const idx in responses) {",
          "",
          "[Removed Lines]",
          "65:        requests.push(() => modelList);",
          "70:       requests.push(() => {});",
          "",
          "[Added Lines]",
          "65:        requests.push(",
          "66:         (async () => {",
          "67:          return modelList;",
          "68:         })()",
          "69:        );",
          "74:       requests.push(",
          "75:        (async () => {",
          "76:         return {",
          "77:          object: 'list',",
          "78:          data: [],",
          "79:          urlIdx: idx",
          "80:         };",
          "81:        })()",
          "82:       );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "98:     direct: true",
          "99:    }))",
          "100:   );",
          "101:  }",
          "103:  return models;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "116:   const modelsMap = {};",
          "117:   for (const model of models) {",
          "118:    modelsMap[model.id] = model;",
          "119:   }",
          "121:   models = Object.values(modelsMap);",
          "",
          "---------------"
        ],
        "src/lib/components/admin/Functions.svelte||src/lib/components/admin/Functions.svelte": [
          "File: src/lib/components/admin/Functions.svelte -> src/lib/components/admin/Functions.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "129:    models.set(",
          "130:     await getModels(",
          "131:      localStorage.token,",
          "133:     )",
          "134:    );",
          "135:   }",
          "",
          "[Removed Lines]",
          "132:      $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "132:      $config?.features?.enable_direct_connections && ($settings?.directConnections ?? null)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "155:    models.set(",
          "156:     await getModels(",
          "157:      localStorage.token,",
          "159:     )",
          "160:    );",
          "161:   }",
          "",
          "[Removed Lines]",
          "158:      $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "158:      $config?.features?.enable_direct_connections && ($settings?.directConnections ?? null)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "372:         models.set(",
          "373:          await getModels(",
          "374:           localStorage.token,",
          "376:            ($settings?.directConnections ?? null)",
          "377:          )",
          "378:         );",
          "",
          "[Removed Lines]",
          "375:           $config?.features?.enable_direct_connetions &&",
          "",
          "[Added Lines]",
          "375:           $config?.features?.enable_direct_connections &&",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "515:   models.set(",
          "516:    await getModels(",
          "517:     localStorage.token,",
          "519:    )",
          "520:   );",
          "521:  }}",
          "",
          "[Removed Lines]",
          "518:     $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "518:     $config?.features?.enable_direct_connections && ($settings?.directConnections ?? null)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "541:    models.set(",
          "542:     await getModels(",
          "543:      localStorage.token,",
          "545:     )",
          "546:    );",
          "547:   };",
          "",
          "[Removed Lines]",
          "544:      $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "544:      $config?.features?.enable_direct_connections && ($settings?.directConnections ?? null)",
          "",
          "---------------"
        ],
        "src/lib/components/admin/Settings/Audio.svelte||src/lib/components/admin/Settings/Audio.svelte": [
          "File: src/lib/components/admin/Settings/Audio.svelte -> src/lib/components/admin/Settings/Audio.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:   } else {",
          "54:    const res = await _getModels(",
          "55:     localStorage.token,",
          "57:    ).catch((e) => {",
          "58:     toast.error(`${e}`);",
          "59:    });",
          "",
          "[Removed Lines]",
          "56:     $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "56:     $config?.features?.enable_direct_connections && ($settings?.directConnections ?? null)",
          "",
          "---------------"
        ],
        "src/lib/components/admin/Settings/Connections.svelte||src/lib/components/admin/Settings/Connections.svelte": [
          "File: src/lib/components/admin/Settings/Connections.svelte -> src/lib/components/admin/Settings/Connections.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:  const getModels = async () => {",
          "26:   const models = await _getModels(",
          "27:    localStorage.token,",
          "29:   );",
          "30:   return models;",
          "31:  };",
          "",
          "[Removed Lines]",
          "28:    $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "28:    $config?.features?.enable_direct_connections && ($settings?.directConnections ?? null)",
          "",
          "---------------"
        ],
        "src/lib/components/admin/Settings/Evaluations.svelte||src/lib/components/admin/Settings/Evaluations.svelte": [
          "File: src/lib/components/admin/Settings/Evaluations.svelte -> src/lib/components/admin/Settings/Evaluations.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:    models.set(",
          "31:     await getModels(",
          "32:      localStorage.token,",
          "34:     )",
          "35:    );",
          "36:   }",
          "",
          "[Removed Lines]",
          "33:      $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "33:      $config?.features?.enable_direct_connections && ($settings?.directConnections ?? null)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "44:   models.set(",
          "45:    await getModels(",
          "46:     localStorage.token,",
          "48:    )",
          "49:   );",
          "50:  };",
          "",
          "[Removed Lines]",
          "47:     $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "47:     $config?.features?.enable_direct_connections && ($settings?.directConnections ?? null)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "57:   models.set(",
          "58:    await getModels(",
          "59:     localStorage.token,",
          "61:    )",
          "62:   );",
          "63:  };",
          "",
          "[Removed Lines]",
          "60:     $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "60:     $config?.features?.enable_direct_connections && ($settings?.directConnections ?? null)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "71:   models.set(",
          "72:    await getModels(",
          "73:     localStorage.token,",
          "75:    )",
          "76:   );",
          "77:  };",
          "",
          "[Removed Lines]",
          "74:     $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "74:     $config?.features?.enable_direct_connections && ($settings?.directConnections ?? null)",
          "",
          "---------------"
        ],
        "src/lib/components/admin/Settings/Models.svelte||src/lib/components/admin/Settings/Models.svelte": [
          "File: src/lib/components/admin/Settings/Models.svelte -> src/lib/components/admin/Settings/Models.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:   _models.set(",
          "115:    await getModels(",
          "116:     localStorage.token,",
          "118:    )",
          "119:   );",
          "120:   await init();",
          "",
          "[Removed Lines]",
          "117:     $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "117:     $config?.features?.enable_direct_connections && ($settings?.directConnections ?? null)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "141:   _models.set(",
          "142:    await getModels(",
          "143:     localStorage.token,",
          "145:    )",
          "146:   );",
          "147:  };",
          "",
          "[Removed Lines]",
          "144:     $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "144:     $config?.features?.enable_direct_connections && ($settings?.directConnections ?? null)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "343:         await _models.set(",
          "344:          await getModels(",
          "345:           localStorage.token,",
          "347:            ($settings?.directConnections ?? null)",
          "348:          )",
          "349:         );",
          "",
          "[Removed Lines]",
          "346:           $config?.features?.enable_direct_connetions &&",
          "",
          "[Added Lines]",
          "346:           $config?.features?.enable_direct_connections &&",
          "",
          "---------------"
        ],
        "src/lib/components/admin/Settings/Models/Manage/ManageOllama.svelte||src/lib/components/admin/Settings/Models/Manage/ManageOllama.svelte": [
          "File: src/lib/components/admin/Settings/Models/Manage/ManageOllama.svelte -> src/lib/components/admin/Settings/Models/Manage/ManageOllama.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "238:     models.set(",
          "239:      await getModels(",
          "240:       localStorage.token,",
          "242:      )",
          "243:     );",
          "244:    } else {",
          "",
          "[Removed Lines]",
          "241:       $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "241:       $config?.features?.enable_direct_connections && ($settings?.directConnections ?? null)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "402:   models.set(",
          "403:    await getModels(",
          "404:     localStorage.token,",
          "406:    )",
          "407:   );",
          "408:  };",
          "",
          "[Removed Lines]",
          "405:     $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "405:     $config?.features?.enable_direct_connections && ($settings?.directConnections ?? null)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "420:   models.set(",
          "421:    await getModels(",
          "422:     localStorage.token,",
          "424:    )",
          "425:   );",
          "426:  };",
          "",
          "[Removed Lines]",
          "423:     $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "423:     $config?.features?.enable_direct_connections && ($settings?.directConnections ?? null)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "524:   models.set(",
          "525:    await getModels(",
          "526:     localStorage.token,",
          "528:    )",
          "529:   );",
          "",
          "[Removed Lines]",
          "527:     $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "527:     $config?.features?.enable_direct_connections && ($settings?.directConnections ?? null)",
          "",
          "---------------"
        ],
        "src/lib/components/admin/Settings/Pipelines.svelte||src/lib/components/admin/Settings/Pipelines.svelte": [
          "File: src/lib/components/admin/Settings/Pipelines.svelte -> src/lib/components/admin/Settings/Pipelines.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:     models.set(",
          "67:      await getModels(",
          "68:       localStorage.token,",
          "70:      )",
          "71:     );",
          "72:     saveHandler();",
          "",
          "[Removed Lines]",
          "69:       $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "69:       $config?.features?.enable_direct_connections && ($settings?.directConnections ?? null)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "133:    models.set(",
          "134:     await getModels(",
          "135:      localStorage.token,",
          "137:     )",
          "138:    );",
          "139:   }",
          "",
          "[Removed Lines]",
          "136:      $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "136:      $config?.features?.enable_direct_connections && ($settings?.directConnections ?? null)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "163:     models.set(",
          "164:      await getModels(",
          "165:       localStorage.token,",
          "167:      )",
          "168:     );",
          "169:    }",
          "",
          "[Removed Lines]",
          "166:       $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "166:       $config?.features?.enable_direct_connections && ($settings?.directConnections ?? null)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "197:    models.set(",
          "198:     await getModels(",
          "199:      localStorage.token,",
          "201:     )",
          "202:    );",
          "203:   }",
          "",
          "[Removed Lines]",
          "200:      $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "200:      $config?.features?.enable_direct_connections && ($settings?.directConnections ?? null)",
          "",
          "---------------"
        ],
        "src/lib/components/chat/ModelSelector/Selector.svelte||src/lib/components/chat/ModelSelector/Selector.svelte": [
          "File: src/lib/components/chat/ModelSelector/Selector.svelte -> src/lib/components/chat/ModelSelector/Selector.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "197:     models.set(",
          "198:      await getModels(",
          "199:       localStorage.token,",
          "201:      )",
          "202:     );",
          "203:    } else {",
          "",
          "[Removed Lines]",
          "200:       $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "200:       $config?.features?.enable_direct_connections && ($settings?.directConnections ?? null)",
          "",
          "---------------"
        ],
        "src/lib/components/chat/SettingsModal.svelte||src/lib/components/chat/SettingsModal.svelte": [
          "File: src/lib/components/chat/SettingsModal.svelte -> src/lib/components/chat/SettingsModal.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "324:  const getModels = async () => {",
          "325:   return await _getModels(",
          "326:    localStorage.token,",
          "328:   );",
          "329:  };",
          "",
          "[Removed Lines]",
          "327:    $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "327:    $config?.features?.enable_direct_connections && ($settings?.directConnections ?? null)",
          "",
          "---------------"
        ],
        "src/lib/components/workspace/Models.svelte||src/lib/components/workspace/Models.svelte": [
          "File: src/lib/components/workspace/Models.svelte -> src/lib/components/workspace/Models.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "71:   await _models.set(",
          "72:    await getModels(",
          "73:     localStorage.token,",
          "75:    )",
          "76:   );",
          "77:   models = await getWorkspaceModels(localStorage.token);",
          "",
          "[Removed Lines]",
          "74:     $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "74:     $config?.features?.enable_direct_connections && ($settings?.directConnections ?? null)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "142:   await _models.set(",
          "143:    await getModels(",
          "144:     localStorage.token,",
          "146:    )",
          "147:   );",
          "148:   models = await getWorkspaceModels(localStorage.token);",
          "",
          "[Removed Lines]",
          "145:     $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "145:     $config?.features?.enable_direct_connections && ($settings?.directConnections ?? null)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "384:            _models.set(",
          "385:             await getModels(",
          "386:              localStorage.token,",
          "388:               ($settings?.directConnections ?? null)",
          "389:             )",
          "390:            );",
          "",
          "[Removed Lines]",
          "387:              $config?.features?.enable_direct_connetions &&",
          "",
          "[Added Lines]",
          "387:              $config?.features?.enable_direct_connections &&",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "436:        await _models.set(",
          "437:         await getModels(",
          "438:          localStorage.token,",
          "440:           ($settings?.directConnections ?? null)",
          "441:         )",
          "442:        );",
          "",
          "[Removed Lines]",
          "439:          $config?.features?.enable_direct_connetions &&",
          "",
          "[Added Lines]",
          "439:          $config?.features?.enable_direct_connections &&",
          "",
          "---------------"
        ],
        "src/routes/(app)/+layout.svelte||src/routes/(app)/+layout.svelte": [
          "File: src/routes/(app)/+layout.svelte -> src/routes/(app)/+layout.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "96:    models.set(",
          "97:     await getModels(",
          "98:      localStorage.token,",
          "100:     )",
          "101:    );",
          "102:    banners.set(await getBanners(localStorage.token));",
          "",
          "[Removed Lines]",
          "99:      $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "99:      $config?.features?.enable_direct_connections && ($settings?.directConnections ?? null)",
          "",
          "---------------"
        ],
        "src/routes/(app)/admin/functions/create/+page.svelte||src/routes/(app)/admin/functions/create/+page.svelte": [
          "File: src/routes/(app)/admin/functions/create/+page.svelte -> src/routes/(app)/admin/functions/create/+page.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "50:    models.set(",
          "51:     await getModels(",
          "52:      localStorage.token,",
          "54:     )",
          "55:    );",
          "",
          "[Removed Lines]",
          "53:      $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "53:      $config?.features?.enable_direct_connections && ($settings?.directConnections ?? null)",
          "",
          "---------------"
        ],
        "src/routes/(app)/admin/functions/edit/+page.svelte||src/routes/(app)/admin/functions/edit/+page.svelte": [
          "File: src/routes/(app)/admin/functions/edit/+page.svelte -> src/routes/(app)/admin/functions/edit/+page.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "51:    models.set(",
          "52:     await getModels(",
          "53:      localStorage.token,",
          "55:     )",
          "56:    );",
          "57:   }",
          "",
          "[Removed Lines]",
          "54:      $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "54:      $config?.features?.enable_direct_connections && ($settings?.directConnections ?? null)",
          "",
          "---------------"
        ],
        "src/routes/(app)/workspace/models/+page.svelte||src/routes/(app)/workspace/models/+page.svelte": [
          "File: src/routes/(app)/workspace/models/+page.svelte -> src/routes/(app)/workspace/models/+page.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:     models.set(",
          "11:      await getModels(",
          "12:       localStorage.token,",
          "14:      )",
          "15:     );",
          "16:    })()",
          "",
          "[Removed Lines]",
          "13:       $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "13:       $config?.features?.enable_direct_connections && ($settings?.directConnections ?? null)",
          "",
          "---------------"
        ],
        "src/routes/(app)/workspace/models/create/+page.svelte||src/routes/(app)/workspace/models/create/+page.svelte": [
          "File: src/routes/(app)/workspace/models/create/+page.svelte -> src/routes/(app)/workspace/models/create/+page.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "45:     await models.set(",
          "46:      await getModels(",
          "47:       localStorage.token,",
          "49:      )",
          "50:     );",
          "51:     toast.success($i18n.t('Model created successfully!'));",
          "",
          "[Removed Lines]",
          "48:       $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "48:       $config?.features?.enable_direct_connections && ($settings?.directConnections ?? null)",
          "",
          "---------------"
        ],
        "src/routes/(app)/workspace/models/edit/+page.svelte||src/routes/(app)/workspace/models/edit/+page.svelte": [
          "File: src/routes/(app)/workspace/models/edit/+page.svelte -> src/routes/(app)/workspace/models/edit/+page.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:    await models.set(",
          "38:     await getModels(",
          "39:      localStorage.token,",
          "41:     )",
          "42:    );",
          "43:    toast.success($i18n.t('Model updated successfully'));",
          "",
          "[Removed Lines]",
          "40:      $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "40:      $config?.features?.enable_direct_connections && ($settings?.directConnections ?? null)",
          "",
          "---------------"
        ],
        "src/routes/s/[id]/+page.svelte||src/routes/s/[id]/+page.svelte": [
          "File: src/routes/s/[id]/+page.svelte -> src/routes/s/[id]/+page.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:   await models.set(",
          "65:    await getModels(",
          "66:     localStorage.token,",
          "68:    )",
          "69:   );",
          "70:   await chatId.set($page.params.id);",
          "",
          "[Removed Lines]",
          "67:     $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "67:     $config?.features?.enable_direct_connections && ($settings?.directConnections ?? null)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dc2f8ec8c639064d6b23d3887dd9296c790dae03",
      "candidate_info": {
        "commit_hash": "dc2f8ec8c639064d6b23d3887dd9296c790dae03",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/dc2f8ec8c639064d6b23d3887dd9296c790dae03",
        "files": [
          "src/lib/components/chat/Settings/Tools.svelte",
          "src/lib/components/chat/ToolServersModal.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/chat/Settings/Tools.svelte||src/lib/components/chat/Settings/Tools.svelte",
          "src/lib/components/chat/ToolServersModal.svelte||src/lib/components/chat/ToolServersModal.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/chat/Settings/Tools.svelte||src/lib/components/chat/Settings/Tools.svelte": [
          "File: src/lib/components/chat/Settings/Tools.svelte -> src/lib/components/chat/Settings/Tools.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "97:        )}",
          "98:       </div>",
          "99:      </div>",
          "100:     </div>",
          "101:    </div>",
          "102:   {:else}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "101:      <div class=\" text-xs text-gray-600 dark:text-gray-300 mb-2\">",
          "102:       <a",
          "103:        class=\"underline\"",
          "104:        href=\"https://github.com/open-webui/openapi-servers\"",
          "105:        target=\"_blank\">{$i18n.t('Learn more about OpenAPI tool servers.')}</a",
          "106:       >",
          "107:      </div>",
          "",
          "---------------"
        ],
        "src/lib/components/chat/ToolServersModal.svelte||src/lib/components/chat/ToolServersModal.svelte": [
          "File: src/lib/components/chat/ToolServersModal.svelte -> src/lib/components/chat/ToolServersModal.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "83:    <div class=\"px-5 pb-5 w-full flex flex-col justify-center\">",
          "84:     <div class=\" text-xs text-gray-600 dark:text-gray-300 mb-2\">",
          "86:       class=\"underline\"",
          "87:       href=\"https://github.com/open-webui/openapi-servers\"",
          "89:      >",
          "90:     </div>",
          "91:     <div class=\" text-sm dark:text-gray-300 mb-1\">",
          "",
          "[Removed Lines]",
          "85:      Open WebUI can use tools provided by any OpenAPI server. <br /><a",
          "88:       target=\"_blank\">Learn more about OpenAPI tool servers.</a",
          "",
          "[Added Lines]",
          "85:      {$i18n.t('Open WebUI can use tools provided by any OpenAPI server.')} <br /><a",
          "88:       target=\"_blank\">{$i18n.t('Learn more about OpenAPI tool servers.')}</a",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6d63337ee9700b2fee5ae222d53a01957638c5c1",
      "candidate_info": {
        "commit_hash": "6d63337ee9700b2fee5ae222d53a01957638c5c1",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/6d63337ee9700b2fee5ae222d53a01957638c5c1",
        "files": [
          "backend/open_webui/utils/tools.py",
          "src/lib/components/chat/Messages/UserMessage.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "backend/open_webui/utils/tools.py||backend/open_webui/utils/tools.py",
          "src/lib/components/chat/Messages/UserMessage.svelte||src/lib/components/chat/Messages/UserMessage.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "backend/open_webui/utils/tools.py||backend/open_webui/utils/tools.py": [
          "File: backend/open_webui/utils/tools.py -> backend/open_webui/utils/tools.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: import asyncio",
          "7: import yaml",
          "10: from functools import update_wrapper, partial",
          "13: from fastapi import Request",
          "14: from pydantic import BaseModel, Field, create_model",
          "15: from langchain_core.utils.function_calling import (",
          "16:     convert_to_openai_function as convert_pydantic_model_to_openai_function_spec,",
          "17: )",
          "",
          "[Removed Lines]",
          "9: from typing import Any, Awaitable, Callable, get_type_hints, Dict, List, Union, Optional",
          "",
          "[Added Lines]",
          "9: from pydantic import BaseModel",
          "10: from pydantic.fields import FieldInfo",
          "11: from typing import (",
          "12:     Any,",
          "13:     Awaitable,",
          "14:     Callable,",
          "15:     get_type_hints,",
          "16:     get_args,",
          "17:     get_origin,",
          "18:     Dict,",
          "19:     List,",
          "20:     Tuple,",
          "21:     Union,",
          "22:     Optional,",
          "23:     Type,",
          "24: )",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "259:     parameters = signature.parameters",
          "261:     docstring = func.__doc__",
          "266:     field_defs = {}",
          "267:     for name, param in parameters.items():",
          "268:         type_hint = type_hints.get(name, Any)",
          "269:         default_value = param.default if param.default is not param.empty else ...",
          "272:             field_defs[name] = type_hint, default_value",
          "276:     model = create_model(func.__name__, **field_defs)",
          "279:     return model",
          "",
          "[Removed Lines]",
          "262:     descriptions = parse_docstring(docstring)",
          "264:     tool_description = parse_description(docstring)",
          "270:         description = descriptions.get(name, None)",
          "271:         if not description:",
          "273:             continue",
          "274:         field_defs[name] = type_hint, Field(default_value, description=description)",
          "277:     model.__doc__ = tool_description",
          "",
          "[Added Lines]",
          "279:     description = parse_description(docstring)",
          "280:     function_descriptions = parse_docstring(docstring)",
          "288:         description = function_descriptions.get(name, None)",
          "290:         if description:",
          "291:             field_defs[name] = type_hint, Field(default_value, description=description)",
          "292:         else:",
          "296:     model.__doc__ = description",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "300:         convert_function_to_pydantic_model, get_functions_from_tool(tool_module)",
          "301:     )",
          "304:         convert_pydantic_model_to_openai_function_spec(function_model)",
          "305:         for function_model in function_models",
          "306:     ]",
          "309: def resolve_schema(schema, components):",
          "310:     \"\"\"",
          "",
          "[Removed Lines]",
          "303:     return [",
          "",
          "[Added Lines]",
          "322:     specs = [",
          "327:     return specs",
          "",
          "---------------"
        ],
        "src/lib/components/chat/Messages/UserMessage.svelte||src/lib/components/chat/Messages/UserMessage.svelte": [
          "File: src/lib/components/chat/Messages/UserMessage.svelte -> src/lib/components/chat/Messages/UserMessage.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "192:        <div>",
          "193:         <button",
          "194:          id=\"save-edit-message-button\"",
          "196:          on:click={() => {",
          "197:           editMessageConfirmHandler(false);",
          "198:          }}",
          "",
          "[Removed Lines]",
          "195:          class=\" px-4 py-2 bg-gray-50 hover:bg-gray-100 dark:bg-gray-800 dark:hover:bg-gray-700 border dark:border-gray-700 text-gray-700 dark:text-gray-200 transition rounded-3xl\"",
          "",
          "[Added Lines]",
          "195:          class=\" px-4 py-2 bg-gray-50 hover:bg-gray-100 dark:bg-gray-800 dark:hover:bg-gray-700 border border-gray-100 dark:border-gray-700 text-gray-700 dark:text-gray-200 transition rounded-3xl\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "96b1c2024bc06a7851a631a2b585104a0bbbe9e9",
      "candidate_info": {
        "commit_hash": "96b1c2024bc06a7851a631a2b585104a0bbbe9e9",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/96b1c2024bc06a7851a631a2b585104a0bbbe9e9",
        "files": [
          "src/lib/components/channel/Channel.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/channel/Channel.svelte||src/lib/components/channel/Channel.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/channel/Channel.svelte||src/lib/components/channel/Channel.svelte": [
          "File: src/lib/components/channel/Channel.svelte -> src/lib/components/channel/Channel.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "35:  }",
          "37:  const scrollToBottom = () => {",
          "39:  };",
          "41:  const initHandler = async () => {",
          "",
          "[Removed Lines]",
          "38:   messagesContainerElement.scrollTop = messagesContainerElement.scrollHeight;",
          "",
          "[Added Lines]",
          "38:   if (messagesContainerElement) {",
          "39:    messagesContainerElement.scrollTop = messagesContainerElement.scrollHeight;",
          "40:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "55:    messages = await getChannelMessages(localStorage.token, id, 0);",
          "57:    if (messages) {",
          "60:     if (messages.length < 50) {",
          "61:      top = true;",
          "",
          "[Removed Lines]",
          "58:     messagesContainerElement.scrollTop = messagesContainerElement.scrollHeight;",
          "",
          "[Added Lines]",
          "60:     scrollToBottom();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "82:      await tick();",
          "83:      if (scrollEnd) {",
          "85:      }",
          "86:     }",
          "87:    } else if (type === 'message:update') {",
          "",
          "[Removed Lines]",
          "84:       messagesContainerElement.scrollTop = messagesContainerElement.scrollHeight;",
          "",
          "[Added Lines]",
          "86:       scrollToBottom();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9624493b55dca92cc814815830099d70a4e79f26",
      "candidate_info": {
        "commit_hash": "9624493b55dca92cc814815830099d70a4e79f26",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/9624493b55dca92cc814815830099d70a4e79f26",
        "files": [
          "backend/open_webui/main.py",
          "scripts/prepare-pyodide.js",
          "src/lib/components/chat/Messages/CodeBlock.svelte",
          "src/routes/+layout.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "backend/open_webui/main.py||backend/open_webui/main.py",
          "scripts/prepare-pyodide.js||scripts/prepare-pyodide.js",
          "src/lib/components/chat/Messages/CodeBlock.svelte||src/lib/components/chat/Messages/CodeBlock.svelte",
          "src/routes/+layout.svelte||src/routes/+layout.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "backend/open_webui/main.py||backend/open_webui/main.py": [
          "File: backend/open_webui/main.py -> backend/open_webui/main.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "884:                 {\"function_calling\": \"native\"}",
          "885:                 if form_data.get(\"params\", {}).get(\"function_calling\") == \"native\"",
          "887:                 else {}",
          "888:             ),",
          "889:         }",
          "",
          "[Removed Lines]",
          "886:                 or model_info.params.model_dump().get(\"function_calling\") == \"native\"",
          "",
          "[Added Lines]",
          "886:                 or (",
          "887:                     model_info",
          "888:                     and model_info.params.model_dump().get(\"function_calling\")",
          "889:                     == \"native\"",
          "890:                 )",
          "",
          "---------------"
        ],
        "scripts/prepare-pyodide.js||scripts/prepare-pyodide.js": [
          "File: scripts/prepare-pyodide.js -> scripts/prepare-pyodide.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:  'regex',",
          "12:  'sympy',",
          "13:  'tiktoken',",
          "15: ];",
          "17: import { loadPyodide } from 'pyodide';",
          "",
          "[Removed Lines]",
          "14:  'seaborn'",
          "",
          "[Added Lines]",
          "14:  'seaborn',",
          "15:  'pytz'",
          "",
          "---------------"
        ],
        "src/lib/components/chat/Messages/CodeBlock.svelte||src/lib/components/chat/Messages/CodeBlock.svelte": [
          "File: src/lib/components/chat/Messages/CodeBlock.svelte -> src/lib/components/chat/Messages/CodeBlock.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "132:    code.includes('seaborn') ? 'seaborn' : null,",
          "133:    code.includes('sympy') ? 'sympy' : null,",
          "134:    code.includes('tiktoken') ? 'tiktoken' : null,",
          "136:   ].filter(Boolean);",
          "138:   console.log(packages);",
          "",
          "[Removed Lines]",
          "135:    code.includes('matplotlib') ? 'matplotlib' : null",
          "",
          "[Added Lines]",
          "135:    code.includes('matplotlib') ? 'matplotlib' : null,",
          "136:    code.includes('pytz') ? 'pytz' : null",
          "",
          "---------------"
        ],
        "src/routes/+layout.svelte||src/routes/+layout.svelte": [
          "File: src/routes/+layout.svelte -> src/routes/+layout.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "118:    code.includes('re') ? 'regex' : null,",
          "119:    code.includes('seaborn') ? 'seaborn' : null,",
          "120:    code.includes('sympy') ? 'sympy' : null,",
          "122:   ].filter(Boolean);",
          "124:   const pyodideWorker = new PyodideWorker();",
          "",
          "[Removed Lines]",
          "121:    code.includes('tiktoken') ? 'tiktoken' : null",
          "",
          "[Added Lines]",
          "121:    code.includes('tiktoken') ? 'tiktoken' : null,",
          "122:    code.includes('pytz') ? 'pytz' : null",
          "",
          "---------------"
        ]
      }
    }
  ]
}