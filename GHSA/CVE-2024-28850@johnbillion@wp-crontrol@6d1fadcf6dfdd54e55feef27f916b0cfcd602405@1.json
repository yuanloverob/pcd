{
  "cve_id": "CVE-2024-28850",
  "cve_desc": "WP Crontrol controls the cron events on WordPress websites.  WP Crontrol includes a feature that allows administrative users to create events in the WP-Cron system that store and execute PHP code subject to the restrictive security permissions documented here. While there is no known vulnerability in this feature on its own, there exists potential for this feature to be vulnerable to RCE if it were specifically targeted via vulnerability chaining that exploited a separate SQLi (or similar) vulnerability. This is exploitable on a site if one of the below preconditions are met, the site is vulnerable to a writeable SQLi vulnerability in any plugin, theme, or WordPress core, the site's database is compromised at the hosting level, the site is vulnerable to a method of updating arbitrary options in the wp_options table, or the site is vulnerable to a method of triggering an arbitrary action, filter, or function with control of the parameters.  As a hardening measure, WP Crontrol version 1.16.2 ships with a new feature that prevents tampering of the code stored in a PHP cron event.",
  "repo": "johnbillion/wp-crontrol",
  "patch_hash": "6d1fadcf6dfdd54e55feef27f916b0cfcd602405",
  "patch_info": {
    "commit_hash": "6d1fadcf6dfdd54e55feef27f916b0cfcd602405",
    "repo": "johnbillion/wp-crontrol",
    "commit_url": "https://github.com/johnbillion/wp-crontrol/commit/6d1fadcf6dfdd54e55feef27f916b0cfcd602405",
    "files": [
      "src/bootstrap.php",
      "src/event.php"
    ],
    "message": "Begin implementing an integrity checking feature for code stored in PHP cron events.",
    "before_after_code_files": [
      "src/bootstrap.php||src/bootstrap.php",
      "src/event.php||src/event.php"
    ]
  },
  "patch_diff": {
    "src/bootstrap.php||src/bootstrap.php": [
      "File: src/bootstrap.php -> src/bootstrap.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "9: use stdClass;",
      "10: use WP_Error;",
      "12: const TRANSIENT = 'crontrol-message-%d';",
      "13: const PAUSED_OPTION = 'wp_crontrol_paused';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "12: use function Crontrol\\Event\\check_integrity;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "32:  add_action( 'load-tools_page_crontrol_admin_manage_page', __NAMESPACE__ . '\\setup_manage_page' );",
      "34:  add_filter( 'cron_schedules',        __NAMESPACE__ . '\\filter_cron_schedules' );",
      "36:  add_action( 'admin_enqueue_scripts', __NAMESPACE__ . '\\enqueue_assets' );",
      "37:  add_action( 'crontrol/tab-header',   __NAMESPACE__ . '\\show_cron_status', 20 );",
      "38:  add_action( 'activated_plugin',      __NAMESPACE__ . '\\flush_status_cache', 10, 0 );",
      "",
      "[Removed Lines]",
      "35:  add_action( 'crontrol_cron_job',     __NAMESPACE__ . '\\action_php_cron_event' );",
      "",
      "[Added Lines]",
      "37:  add_action( 'crontrol_cron_job',     __NAMESPACE__ . '\\action_php_cron_event', 10, 3 );",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "198:   $args           = array(",
      "199:    'code' => $cr->hookcode,",
      "200:    'name' => $cr->eventname,",
      "201:   );",
      "203:   add_filter( 'schedule_event', function( $event ) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "203:    'hash' => wp_hash( $cr->hookcode ),",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "343:   $args = array(",
      "344:    'code' => $cr->hookcode,",
      "345:    'name' => $cr->eventname,",
      "346:   );",
      "347:   $hookname = ( ! empty( $cr->eventname ) ) ? $cr->eventname : __( 'PHP Cron', 'wp-crontrol' );",
      "348:   $redirect = array(",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "349:    'hash' => wp_hash( $cr->hookcode ),",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2200:  eval( $code );",
      "2201: }",
      "",
      "[Removed Lines]",
      "2198: function action_php_cron_event( $code ) {",
      "",
      "[Added Lines]",
      "2212: function action_php_cron_event( $code, $name, $stored_hash = null ) {",
      "2213:  if ( empty( $stored_hash ) ) {",
      "2215:   return;",
      "2216:  }",
      "2219:  if ( ! check_integrity( $code, $stored_hash ) ) {",
      "2221:   return;",
      "2222:  }",
      "",
      "---------------"
    ],
    "src/event.php||src/event.php": [
      "File: src/event.php -> src/event.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "479:  return array_key_exists( $event->hook, $paused );",
      "480: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "488: function integrity_passed( stdClass $event ): bool {",
      "490:  if ( 'crontrol_cron_job' !== $event->hook ) {",
      "491:   return true;",
      "492:  }",
      "494:  return check_integrity( $event->args['code'] ?? null, $event->args['hash'] ?? null );",
      "495: }",
      "504: function check_integrity( $code, $stored_hash ): bool {",
      "506:  if ( empty( $code ) ) {",
      "507:   return true;",
      "508:  }",
      "511:  if ( empty( $stored_hash ) ) {",
      "512:   return false;",
      "513:  }",
      "515:  $known_hash = wp_hash( $code );",
      "518:  if ( hash_equals( $known_hash, $stored_hash ) ) {",
      "519:   return true;",
      "520:  }",
      "522:  return false;",
      "523: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d6ef6e72c7854e9d5b77ef10bedfd3435e8bf7a6",
      "candidate_info": {
        "commit_hash": "d6ef6e72c7854e9d5b77ef10bedfd3435e8bf7a6",
        "repo": "johnbillion/wp-crontrol",
        "commit_url": "https://github.com/johnbillion/wp-crontrol/commit/d6ef6e72c7854e9d5b77ef10bedfd3435e8bf7a6",
        "files": [
          "src/bootstrap.php",
          "src/event-list-table.php",
          "src/event.php"
        ],
        "message": "Protect URL cron events with the same anti-tampering mechanism as URL cron events.",
        "before_after_code_files": [
          "src/bootstrap.php||src/bootstrap.php",
          "src/event-list-table.php||src/event-list-table.php",
          "src/event.php||src/event.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/bootstrap.php||src/bootstrap.php",
            "src/event.php||src/event.php"
          ],
          "candidate": [
            "src/bootstrap.php||src/bootstrap.php",
            "src/event.php||src/event.php"
          ]
        }
      },
      "candidate_diff": {
        "src/bootstrap.php||src/bootstrap.php": [
          "File: src/bootstrap.php -> src/bootstrap.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "204:     'url' => $cr->url,",
          "205:     'method' => $cr->method,",
          "206:     'name' => $cr->eventname,",
          "207:    ),",
          "208:   );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "207:     'hash' => wp_hash( $cr->url ),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "411:     'url' => $cr->url,",
          "412:     'method' => $cr->method,",
          "413:     'name' => $cr->eventname,",
          "414:    ),",
          "415:   );",
          "416:   $hookname = ( ! empty( $cr->eventname ) ) ? $cr->eventname : __( 'URL Cron', 'wp-crontrol' );",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "415:     'hash' => wp_hash( $cr->url ),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1634:        </label>",
          "1635:       </th>",
          "1636:       <td>",
          "1637:        <input type=\"url\" class=\"regular-text code\" id=\"crontrol_url\" name=\"crontrol_url\" value=\"<?php echo esc_url( $is_editing_url ? $existing['args'][0]['url'] : '' ); ?>\" />",
          "1638:        <?php do_action( 'crontrol/manage/url', $existing ); ?>",
          "1639:       </td>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1639:        <?php",
          "1640:        if ( $is_editing_url && ! check_integrity( $existing['args'][0]['url'], $existing['args'][0]['hash'] ) ) {",
          "1641:         printf(",
          "1642:          '<div class=\"notice notice-error inline\"><p>%1$s</p><p><a href=\"%2$s\">%3$s</a></p></div>',",
          "1643:          esc_html__( 'The URL in this event needs to be checked for integrity. This event will not run until you re-save it.', 'wp-crontrol' ),",
          "1644:          'https://wp-crontrol.com/help/check-cron-events/',",
          "1645:          esc_html__( 'Read what to do', 'wp-crontrol' )",
          "1646:         );",
          "1647:        }",
          "1648:        ?>",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2473: function action_url_cron_event( array $args ): void {",
          "2474:  list(",
          "2475:   'url' => $url,",
          "2476:   'method' => $method,",
          "2477:  ) = $args;",
          "2478:  $request_args = array(",
          "2479:   'timeout' => 30,",
          "2480:   'method'  => $method,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2503:   'hash' => $hash,",
          "2506:  if ( empty( $hash ) ) {",
          "2508:   trigger_error(",
          "2509:    sprintf(",
          "2510:     'WP Crontrol: The stored hash is missing for a URL cron event; for more information see %s',",
          "2511:     esc_url_raw( admin_url( 'tools.php?page=crontrol_admin_manage_page&crontrol_hooks_type=url' ) ),",
          "2512:    ),",
          "2513:    E_USER_WARNING",
          "2514:   );",
          "2515:   return;",
          "2516:  }",
          "2519:  if ( ! check_integrity( $url, $hash ) ) {",
          "2521:   trigger_error(",
          "2522:    sprintf(",
          "2523:     'WP Crontrol: The stored hash for a URL cron event is not valid; for more information see %s',",
          "2524:     esc_url_raw( admin_url( 'tools.php?page=crontrol_admin_manage_page&crontrol_hooks_type=url' ) ),",
          "2525:    ),",
          "2526:    E_USER_WARNING",
          "2527:   );",
          "2528:   return;",
          "2529:  }",
          "",
          "---------------"
        ],
        "src/event-list-table.php||src/event-list-table.php": [
          "File: src/event-list-table.php -> src/event-list-table.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "97:    add_action( 'admin_notices', function() {",
          "98:     printf(",
          "99:      '<div id=\"crontrol-integrity-failures-message\" class=\"notice notice-error\"><p>%1$s</p><p><a href=\"%2$s\">%3$s</a></p></div>',",
          "102:      esc_html__( 'Read what to do', 'wp-crontrol' )",
          "103:     );",
          "104:    } );",
          "",
          "[Removed Lines]",
          "100:      esc_html__( 'The PHP code in one or more of your PHP cron events needs to be checked for integrity. These events will not run until you check and re-save them.', 'wp-crontrol' ),",
          "101:      'https://wp-crontrol.com/help/check-php-cron-events/',",
          "",
          "[Added Lines]",
          "100:      esc_html__( 'One or more of your cron events needs to be checked for integrity. These events will not run until you check and re-save them.', 'wp-crontrol' ),",
          "101:      'https://wp-crontrol.com/help/check-cron-events/',",
          "",
          "---------------"
        ],
        "src/event.php||src/event.php": [
          "File: src/event.php -> src/event.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "476: }",
          "484: function integrity_failed( stdClass $event ): bool {",
          "498: }",
          "",
          "[Removed Lines]",
          "486:  if ( 'crontrol_cron_job' !== $event->hook ) {",
          "487:   return false;",
          "488:  }",
          "491:  if ( isset( $event->args['code'] ) ) {",
          "492:   return true;",
          "493:  }",
          "495:  $args = $event->args[0] ?? array();",
          "497:  return ! check_integrity( $args['code'] ?? null, $args['hash'] ?? null );",
          "",
          "[Added Lines]",
          "485:  $args = $event->args[0] ?? array();",
          "486:  $failed = false;",
          "488:  switch ( $event->hook ) {",
          "491:   case 'crontrol_cron_job':",
          "493:    if ( isset( $event->args['code'] ) ) {",
          "494:     $failed = true;",
          "495:    } else {",
          "496:     $failed = ! check_integrity( $args['code'] ?? null, $args['hash'] ?? null );",
          "497:    }",
          "498:    break;",
          "501:   case 'crontrol_url_cron_job':",
          "502:    $failed = ! check_integrity( $args['url'] ?? null, $args['hash'] ?? null );",
          "503:    break;",
          "505:  }",
          "507:  return $failed;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5f9bbd6cc55a190ffda8610738b4fe923d70447c",
      "candidate_info": {
        "commit_hash": "5f9bbd6cc55a190ffda8610738b4fe923d70447c",
        "repo": "johnbillion/wp-crontrol",
        "commit_url": "https://github.com/johnbillion/wp-crontrol/commit/5f9bbd6cc55a190ffda8610738b4fe923d70447c",
        "files": [
          "src/event.php"
        ],
        "message": "Tidying up.",
        "before_after_code_files": [
          "src/event.php||src/event.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/event.php||src/event.php"
          ],
          "candidate": [
            "src/event.php||src/event.php"
          ]
        }
      },
      "candidate_diff": {
        "src/event.php||src/event.php": [
          "File: src/event.php -> src/event.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "504: function check_integrity( $code, $stored_hash ): bool {",
          "508:   return false;",
          "509:  }",
          "",
          "[Removed Lines]",
          "507:  if ( empty($code) || empty( $stored_hash ) ) {",
          "",
          "[Added Lines]",
          "506:  if ( empty( $code ) || empty( $stored_hash ) ) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "99ae5459f45f013e35e4ff923b762f7dfe188260",
      "candidate_info": {
        "commit_hash": "99ae5459f45f013e35e4ff923b762f7dfe188260",
        "repo": "johnbillion/wp-crontrol",
        "commit_url": "https://github.com/johnbillion/wp-crontrol/commit/99ae5459f45f013e35e4ff923b762f7dfe188260",
        "files": [
          "src/event.php"
        ],
        "message": "fix incorrect hash_equals argument order & disallow empty code integrity",
        "before_after_code_files": [
          "src/event.php||src/event.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/event.php||src/event.php"
          ],
          "candidate": [
            "src/event.php||src/event.php"
          ]
        }
      },
      "candidate_diff": {
        "src/event.php||src/event.php": [
          "File: src/event.php -> src/event.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "504: function check_integrity( $code, $stored_hash ): bool {",
          "512:   return false;",
          "513:  }",
          "523: }",
          "",
          "[Removed Lines]",
          "506:  if ( empty( $code ) ) {",
          "507:   return true;",
          "508:  }",
          "511:  if ( empty( $stored_hash ) ) {",
          "515:  $known_hash = wp_hash( $code );",
          "518:  if ( hash_equals( $known_hash, $stored_hash ) ) {",
          "519:   return true;",
          "520:  }",
          "522:  return false;",
          "",
          "[Added Lines]",
          "507:  if ( empty($code) || empty( $stored_hash ) ) {",
          "511:  $potentially_tampered_hash = wp_hash( $code );",
          "514:  return hash_equals( $stored_hash, $potentially_tampered_hash );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8453ecea4f47ea014cb3941c890f6762f9e0a7b6",
      "candidate_info": {
        "commit_hash": "8453ecea4f47ea014cb3941c890f6762f9e0a7b6",
        "repo": "johnbillion/wp-crontrol",
        "commit_url": "https://github.com/johnbillion/wp-crontrol/commit/8453ecea4f47ea014cb3941c890f6762f9e0a7b6",
        "files": [
          "src/bootstrap.php"
        ],
        "message": "This isn't needed.",
        "before_after_code_files": [
          "src/bootstrap.php||src/bootstrap.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/bootstrap.php||src/bootstrap.php"
          ],
          "candidate": [
            "src/bootstrap.php||src/bootstrap.php"
          ]
        }
      },
      "candidate_diff": {
        "src/bootstrap.php||src/bootstrap.php": [
          "File: src/bootstrap.php -> src/bootstrap.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:  add_action( 'load-tools_page_crontrol_admin_manage_page', __NAMESPACE__ . '\\setup_manage_page' );",
          "36:  add_filter( 'cron_schedules',        __NAMESPACE__ . '\\filter_cron_schedules' );",
          "38:  add_action( 'admin_enqueue_scripts', __NAMESPACE__ . '\\enqueue_assets' );",
          "39:  add_action( 'crontrol/tab-header',   __NAMESPACE__ . '\\show_cron_status', 20 );",
          "40:  add_action( 'activated_plugin',      __NAMESPACE__ . '\\flush_status_cache', 10, 0 );",
          "",
          "[Removed Lines]",
          "37:  add_action( 'crontrol_cron_job',     __NAMESPACE__ . '\\action_php_cron_event', 10 );",
          "",
          "[Added Lines]",
          "37:  add_action( 'crontrol_cron_job',     __NAMESPACE__ . '\\action_php_cron_event' );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "25c202334bacfd2df8487fada93fa59f01382a42",
      "candidate_info": {
        "commit_hash": "25c202334bacfd2df8487fada93fa59f01382a42",
        "repo": "johnbillion/wp-crontrol",
        "commit_url": "https://github.com/johnbillion/wp-crontrol/commit/25c202334bacfd2df8487fada93fa59f01382a42",
        "files": [
          "src/event-list-table.php",
          "src/event.php"
        ],
        "message": "This checks for integrity failure, not integrity passing.",
        "before_after_code_files": [
          "src/event-list-table.php||src/event-list-table.php",
          "src/event.php||src/event.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/event.php||src/event.php"
          ],
          "candidate": [
            "src/event.php||src/event.php"
          ]
        }
      },
      "candidate_diff": {
        "src/event-list-table.php||src/event-list-table.php": [
          "File: src/event-list-table.php -> src/event-list-table.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "382:    $links[] = \"<a href='\" . esc_url( $link ) . \"'>\" . esc_html__( 'Edit', 'wp-crontrol' ) . '</a>';",
          "383:   }",
          "386:    $link = array(",
          "387:     'page'                  => 'crontrol_admin_manage_page',",
          "388:     'crontrol_action'       => 'run-cron',",
          "",
          "[Removed Lines]",
          "385:   if ( ! is_paused( $event ) && integrity_passed( $event ) ) {",
          "",
          "[Added Lines]",
          "385:   if ( ! is_paused( $event ) && ! integrity_failed( $event ) ) {",
          "",
          "---------------"
        ],
        "src/event.php||src/event.php": [
          "File: src/event.php -> src/event.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "480: }",
          "490:  if ( 'crontrol_cron_job' !== $event->hook ) {",
          "492:  }",
          "495: }",
          "",
          "[Removed Lines]",
          "488: function integrity_passed( stdClass $event ): bool {",
          "491:   return true;",
          "494:  return check_integrity( $event->args['code'] ?? null, $event->args['hash'] ?? null );",
          "",
          "[Added Lines]",
          "488: function integrity_failed( stdClass $event ): bool {",
          "491:   return false;",
          "494:  return ! check_integrity( $event->args['code'] ?? null, $event->args['hash'] ?? null );",
          "",
          "---------------"
        ]
      }
    }
  ]
}