{
  "cve_id": "CVE-2024-10846",
  "cve_desc": "The compose-go library component in versions v2.10-v2.4.0 allows an authorized user who sends malicious YAML payloads to cause the compose-go to consume excessive amount of Memory and CPU cycles while parsing YAML, such as used by Docker Compose from versions  v2.27.0 to v2.29.7 included",
  "repo": "docker/compose",
  "patch_hash": "d239f0f3187a2ed5404c61f83bd5e995c81600ff",
  "patch_info": {
    "commit_hash": "d239f0f3187a2ed5404c61f83bd5e995c81600ff",
    "repo": "docker/compose",
    "commit_url": "https://github.com/docker/compose/commit/d239f0f3187a2ed5404c61f83bd5e995c81600ff#diff-33ef32bf6c23acb95f5902d7097b7a1d5128ca061167ec0716715b0b9eeaa5f6R10",
    "files": [
      "cmd/compose/config.go",
      "go.mod",
      "go.sum",
      "pkg/compose/create.go",
      "pkg/e2e/container_name_test.go",
      "pkg/e2e/fixtures/container_name/compose.yaml"
    ],
    "message": "check container_name is not in use by another service we will create\n\nSigned-off-by: Nicolas De Loof <nicolas.deloof@gmail.com>",
    "before_after_code_files": [
      "cmd/compose/config.go||cmd/compose/config.go",
      "go.mod||go.mod",
      "go.sum||go.sum",
      "pkg/compose/create.go||pkg/compose/create.go",
      "pkg/e2e/container_name_test.go||pkg/e2e/container_name_test.go"
    ]
  },
  "patch_diff": {
    "cmd/compose/config.go||cmd/compose/config.go": [
      "File: cmd/compose/config.go -> cmd/compose/config.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "169:    return err",
      "170:   }",
      "172:   switch opts.Format {",
      "173:   case \"json\":",
      "174:    content, err = project.MarshalJSON()",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "172:   if !opts.noConsistency {",
      "173:    err := project.CheckContainerNameUnicity()",
      "174:    if err != nil {",
      "175:     return err",
      "176:    }",
      "177:   }",
      "",
      "---------------"
    ],
    "go.mod||go.mod": [
      "File: go.mod -> go.mod",
      "--- Hunk 1 ---",
      "[Context before]",
      "7:  github.com/Microsoft/go-winio v0.6.1",
      "8:  github.com/acarl005/stripansi v0.0.0-20180116102854-5a71ef0e047d",
      "9:  github.com/buger/goterm v1.0.4",
      "11:  github.com/containerd/console v1.0.4",
      "12:  github.com/containerd/containerd v1.7.13",
      "13:  github.com/davecgh/go-spew v1.1.1",
      "",
      "[Removed Lines]",
      "10:  github.com/compose-spec/compose-go/v2 v2.0.3-0.20240407191136-f388192b8a39",
      "",
      "[Added Lines]",
      "10:  github.com/compose-spec/compose-go/v2 v2.0.3-0.20240416141209-60aa6409b2c4",
      "",
      "---------------"
    ],
    "go.sum||go.sum": [
      "File: go.sum -> go.sum",
      "--- Hunk 1 ---",
      "[Context before]",
      "90: github.com/cncf/xds/go v0.0.0-20230607035331-e9ce68804cb4/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=",
      "91: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb h1:EDmT6Q9Zs+SbUoc7Ik9EfrFqcylYqgPZ9ANSbTAntnE=",
      "92: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb/go.mod h1:ZjrT6AXHbDs86ZSdt/osfBi5qfexBrKUdONk989Wnk4=",
      "95: github.com/containerd/cgroups v1.1.0 h1:v8rEWFl6EoqHB+swVNjVoCJE8o3jX7e8nqBGPLaDFBM=",
      "96: github.com/containerd/cgroups v1.1.0/go.mod h1:6ppBcbh/NOOUU+dMKrykgaBnK9lCIBxHqJDGwsa1mIw=",
      "97: github.com/containerd/console v1.0.4 h1:F2g4+oChYvBTsASRTz8NP6iIAi97J3TtSAsLbIFn4ro=",
      "",
      "[Removed Lines]",
      "93: github.com/compose-spec/compose-go/v2 v2.0.3-0.20240407191136-f388192b8a39 h1:ZUpnv0xA75X9gy9Y7hjJm51nflGbr+2URaLXBtEic7A=",
      "94: github.com/compose-spec/compose-go/v2 v2.0.3-0.20240407191136-f388192b8a39/go.mod h1:bEPizBkIojlQ20pi2vNluBa58tevvj0Y18oUSHPyfdc=",
      "",
      "[Added Lines]",
      "93: github.com/compose-spec/compose-go/v2 v2.0.3-0.20240416141209-60aa6409b2c4 h1:WYiZ9D0WBykHUJLlpt+w7NXX0hy+cQKKdVe7vmsNZvg=",
      "94: github.com/compose-spec/compose-go/v2 v2.0.3-0.20240416141209-60aa6409b2c4/go.mod h1:bEPizBkIojlQ20pi2vNluBa58tevvj0Y18oUSHPyfdc=",
      "",
      "---------------"
    ],
    "pkg/compose/create.go||pkg/compose/create.go": [
      "File: pkg/compose/create.go -> pkg/compose/create.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "77:   options.Services = project.ServiceNames()",
      "78:  }",
      "80:  var observedState Containers",
      "82:  if err != nil {",
      "83:   return err",
      "84:  }",
      "",
      "[Removed Lines]",
      "81:  observedState, err := s.getContainers(ctx, project.Name, oneOffInclude, true)",
      "",
      "[Added Lines]",
      "80:  err := project.CheckContainerNameUnicity()",
      "81:  if err != nil {",
      "82:   return err",
      "83:  }",
      "86:  observedState, err = s.getContainers(ctx, project.Name, oneOffInclude, true)",
      "",
      "---------------"
    ],
    "pkg/e2e/container_name_test.go||pkg/e2e/container_name_test.go": [
      "File: pkg/e2e/container_name_test.go -> pkg/e2e/container_name_test.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5:    Copyright 2022 Docker Compose CLI authors",
      "7:    Licensed under the Apache License, Version 2.0 (the \"License\");",
      "8:    you may not use this file except in compliance with the License.",
      "9:    You may obtain a copy of the License at",
      "11:        http://www.apache.org/licenses/LICENSE-2.0",
      "13:    Unless required by applicable law or agreed to in writing, software",
      "14:    distributed under the License is distributed on an \"AS IS\" BASIS,",
      "15:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
      "16:    See the License for the specific language governing permissions and",
      "17:    limitations under the License.",
      "20: package e2e",
      "22: import (",
      "23:  \"testing\"",
      "25:  \"gotest.tools/v3/icmd\"",
      "26: )",
      "28: func TestUpContainerNameConflict(t *testing.T) {",
      "29:  c := NewParallelCLI(t)",
      "30:  const projectName = \"e2e-container_name_conflict\"",
      "32:  t.Cleanup(func() {",
      "33:   c.RunDockerComposeCmd(t, \"--project-name\", projectName, \"down\")",
      "34:  })",
      "36:  res := c.RunDockerComposeCmdNoCheck(t, \"-f\", \"fixtures/container_name/compose.yaml\", \"--project-name\", projectName, \"up\")",
      "37:  res.Assert(t, icmd.Expected{ExitCode: 1, Err: `container name \"test\" is already in use`})",
      "39:  c.RunDockerComposeCmd(t, \"--project-name\", projectName, \"down\")",
      "40:  c.RunDockerComposeCmd(t, \"-f\", \"fixtures/container_name/compose.yaml\", \"--project-name\", projectName, \"up\", \"test\")",
      "42:  c.RunDockerComposeCmd(t, \"--project-name\", projectName, \"down\")",
      "43:  c.RunDockerComposeCmd(t, \"-f\", \"fixtures/container_name/compose.yaml\", \"--project-name\", projectName, \"up\", \"another_test\")",
      "44: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f4f2e934acc546b0a47d60f73e0ca4ec71bd459e",
      "candidate_info": {
        "commit_hash": "f4f2e934acc546b0a47d60f73e0ca4ec71bd459e",
        "repo": "docker/compose",
        "commit_url": "https://github.com/docker/compose/commit/f4f2e934acc546b0a47d60f73e0ca4ec71bd459e",
        "files": [
          "go.mod",
          "go.sum",
          "pkg/compose/compose.go",
          "pkg/compose/image_pruner.go",
          "pkg/compose/images.go",
          "pkg/compose/pull.go",
          "pkg/compose/push.go"
        ],
        "message": "migrate to github.com/distribution/reference\n\nThe \"reference\" package was moved to a separate module, which was extracted\nfrom https://github.com/distribution/distribution/commit/b9b19409cf458dcb9e1253ff44ba75bd0620faa6\n\nSigned-off-by: Sebastiaan van Stijn <github@gone.nl>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum",
          "pkg/compose/compose.go||pkg/compose/compose.go",
          "pkg/compose/image_pruner.go||pkg/compose/image_pruner.go",
          "pkg/compose/images.go||pkg/compose/images.go",
          "pkg/compose/pull.go||pkg/compose/pull.go",
          "pkg/compose/push.go||pkg/compose/push.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ],
          "candidate": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ]
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  github.com/Microsoft/go-winio v0.6.1",
          "8:  github.com/adrg/xdg v0.4.0",
          "9:  github.com/buger/goterm v1.0.4",
          "11:  github.com/containerd/console v1.0.3",
          "12:  github.com/containerd/containerd v1.7.3",
          "13:  github.com/cucumber/godog v0.0.0-00010101000000-000000000000 // replaced; see replace for the actual version used",
          "15:  github.com/docker/buildx v0.11.2",
          "16:  github.com/docker/cli v24.0.5+incompatible",
          "17:  github.com/docker/cli-docs-tool v0.6.0",
          "",
          "[Removed Lines]",
          "10:  github.com/compose-spec/compose-go v1.18.3",
          "14:  github.com/distribution/distribution/v3 v3.0.0-20230601133803-97b1d649c493",
          "",
          "[Added Lines]",
          "10:  github.com/compose-spec/compose-go v1.18.4",
          "14:  github.com/distribution/reference v0.5.0",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "67:  github.com/aws/aws-sdk-go-v2/service/sts v1.18.6 // indirect",
          "68:  github.com/aws/smithy-go v1.13.5 // indirect",
          "69:  github.com/beorn7/perks v1.0.1 // indirect",
          "71:  github.com/cenkalti/backoff/v4 v4.2.0 // indirect",
          "72:  github.com/cespare/xxhash/v2 v2.2.0 // indirect",
          "74:  github.com/containerd/continuity v0.4.1 // indirect",
          "75:  github.com/containerd/typeurl/v2 v2.1.1 // indirect",
          "76:  github.com/cucumber/gherkin-go/v19 v19.0.3 // indirect",
          "",
          "[Removed Lines]",
          "70:  github.com/bugsnag/bugsnag-go v1.5.0 // indirect",
          "73:  github.com/cloudflare/cfssl v1.6.4 // indirect",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "109:  github.com/imdario/mergo v0.3.16 // indirect",
          "110:  github.com/in-toto/in-toto-golang v0.5.0 // indirect",
          "111:  github.com/inconshreveable/mousetrap v1.1.0 // indirect",
          "113:  github.com/josharian/intern v1.0.0 // indirect",
          "114:  github.com/json-iterator/go v1.1.12 // indirect",
          "115:  github.com/kballard/go-shellquote v0.0.0-20180428030007-95032a82bc51 // indirect",
          "116:  github.com/klauspost/compress v1.16.5 // indirect",
          "119:  github.com/mailru/easyjson v0.7.6 // indirect",
          "120:  github.com/mattn/go-colorable v0.1.13 // indirect",
          "121:  github.com/mattn/go-isatty v0.0.17 // indirect",
          "",
          "[Removed Lines]",
          "112:  github.com/jinzhu/gorm v1.9.11 // indirect",
          "117:  github.com/kr/pretty v0.3.0 // indirect",
          "118:  github.com/magiconair/properties v1.8.6 // indirect",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "145:  github.com/serialx/hashring v0.0.0-20190422032157-8b2912629002 // indirect",
          "146:  github.com/shibumi/go-pathspec v1.3.0 // indirect",
          "147:  github.com/spf13/afero v1.9.2 // indirect",
          "150:  github.com/subosito/gotenv v1.4.1 // indirect",
          "151:  github.com/tonistiigi/fsutil v0.0.0-20230629203738-36ef4d8c0dbb // indirect",
          "152:  github.com/tonistiigi/units v0.0.0-20180711220420-6950e57a87ea // indirect",
          "",
          "[Removed Lines]",
          "148:  github.com/spf13/cast v1.5.0 // indirect",
          "149:  github.com/spf13/jwalterweatherman v1.1.0 // indirect",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "154:  github.com/xeipuuv/gojsonpointer v0.0.0-20190905194746-02993c407bfb // indirect",
          "155:  github.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415 // indirect",
          "156:  github.com/xeipuuv/gojsonschema v1.2.0 // indirect",
          "158:  go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.40.0 // indirect",
          "159:  go.opentelemetry.io/contrib/instrumentation/net/http/httptrace/otelhttptrace v0.40.0 // indirect",
          "160:  go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.40.0 // indirect",
          "",
          "[Removed Lines]",
          "157:  github.com/zmap/zcrypto v0.0.0-20220605182715-4dfcec6e9a8c // indirect",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=",
          "2: cloud.google.com/go v0.34.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=",
          "4: cloud.google.com/go v0.38.0/go.mod h1:990N+gfupTy94rShfmMCWGDn0LpTmnzTp2qbd1dvSRU=",
          "5: cloud.google.com/go v0.44.1/go.mod h1:iSa0KzasP4Uvy3f1mN/7PiObzGgflwredwwASm/v6AU=",
          "6: cloud.google.com/go v0.44.2/go.mod h1:60680Gw3Yr4ikxnPRS/oxxkBccT6SA1yMk63TGekxKY=",
          "",
          "[Removed Lines]",
          "3: cloud.google.com/go v0.37.4/go.mod h1:NHPJ89PdicEuT9hdPXMROBD91xc5uRDxsMtSB16k7hw=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "61: github.com/Netflix/go-expect v0.0.0-20220104043353-73e0943537d2 h1:+vx7roKuyA63nhn5WAunQHLTznkw5W8b1Xc0dNjp83s=",
          "62: github.com/Netflix/go-expect v0.0.0-20220104043353-73e0943537d2/go.mod h1:HBCaDeC1lPdgDeDbhX8XFpy1jqjK0IBG8W5K+xYqA0w=",
          "63: github.com/OneOfOne/xxhash v1.2.2/go.mod h1:HSdplMjZKSmBqAxg5vPj2TmRDmfkzw+cTzAElWljhcU=",
          "64: github.com/Shopify/logrus-bugsnag v0.0.0-20170309145241-6dbc35f2c30d/go.mod h1:HI8ITrYtUY+O+ZhtlqUnD8+KwNPOyugEhfP9fdUIaEQ=",
          "69: github.com/adrg/xdg v0.4.0 h1:RzRqFcjH4nE5C6oTAxhBtoE2IRyjBSa62SCbyPidvls=",
          "70: github.com/adrg/xdg v0.4.0/go.mod h1:N6ag73EX4wyxeaoeHctc1mas01KZgsj5tYiAIwqJE/E=",
          "71: github.com/alecthomas/template v0.0.0-20160405071501-a0175ee3bccc/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=",
          "",
          "[Removed Lines]",
          "65: github.com/Shopify/logrus-bugsnag v0.0.0-20171204204709-577dee27f20d h1:UrqY+r/OJnIp5u0s1SbQ8dVfLCZJsnvazdBP5hS4iRs=",
          "66: github.com/Shopify/logrus-bugsnag v0.0.0-20171204204709-577dee27f20d/go.mod h1:HI8ITrYtUY+O+ZhtlqUnD8+KwNPOyugEhfP9fdUIaEQ=",
          "67: github.com/Shopify/sarama v1.19.0/go.mod h1:FVkBWblsNy7DGZRfXLU0O9RCGt5g3g3yEuWXgklEdEo=",
          "68: github.com/Shopify/toxiproxy v2.1.4+incompatible/go.mod h1:OXgGpZ6Cli1/URJOF1DMxUHB2q5Ap20/P/eIdh4G0pI=",
          "",
          "[Added Lines]",
          "63: github.com/Shopify/logrus-bugsnag v0.0.0-20170309145241-6dbc35f2c30d h1:hi6J4K6DKrR4/ljxn6SF6nURyu785wKMuQcjt7H3VCQ=",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "73: github.com/anchore/go-struct-converter v0.0.0-20221118182256-c68fdcfa2092 h1:aM1rlcoLz8y5B2r4tTLMiVTrMtpfY0O8EScKJxaSaEc=",
          "74: github.com/anchore/go-struct-converter v0.0.0-20221118182256-c68fdcfa2092/go.mod h1:rYqSE9HbjzpHTI74vwPvae4ZVYZd1lue2ta6xHPdblA=",
          "75: github.com/antihax/optional v1.0.0/go.mod h1:uupD/76wgC+ih3iEmQUL+0Ugr19nfwCT1kdvxnR2qWY=",
          "77: github.com/armon/go-socks5 v0.0.0-20160902184237-e75332964ef5 h1:0CwZNZbxp69SHPdPJAN/hZIm0C4OItdklCFmMRWYpio=",
          "78: github.com/armon/go-socks5 v0.0.0-20160902184237-e75332964ef5/go.mod h1:wHh0iHkYZB8zMSxRWpUBQtwG5a7fFgvEO+odwuTv2gs=",
          "79: github.com/aws/aws-sdk-go-v2 v1.17.6 h1:Y773UK7OBqhzi5VDXMi1zVGsoj+CVHs2eaC2bDsLwi0=",
          "",
          "[Removed Lines]",
          "76: github.com/apache/thrift v0.12.0/go.mod h1:cp2SuWMxlEZw2r+iP2GNCdIi4C1qmUzdZFSVb+bacwQ=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "111: github.com/buger/goterm v1.0.4 h1:Z9YvGmOih81P0FbVtEYTFF6YsSgxSUKEhf/f9bTMXbY=",
          "112: github.com/buger/goterm v1.0.4/go.mod h1:HiFWV3xnkolgrBV3mY8m0X0Pumt4zg4QhbdOzQtB8tE=",
          "113: github.com/bugsnag/bugsnag-go v1.0.5-0.20150529004307-13fd6b8acda0/go.mod h1:2oa8nejYd4cQ/b0hMIopN0lCRxU0bueqREvZLWFrtK8=",
          "116: github.com/bugsnag/osext v0.0.0-20130617224835-0dd3f918b21b/go.mod h1:obH5gd0BsqsP2LwDJ9aOkm/6J86V6lyAXCoQWGw3K50=",
          "117: github.com/bugsnag/panicwrap v0.0.0-20151223152923-e2c28503fcd0/go.mod h1:D/8v3kj0zr8ZAKg1AQ6crr+5VwKN5eIywRkfhyM/+dE=",
          "118: github.com/bugsnag/panicwrap v1.2.0 h1:OzrKrRvXis8qEvOkfcxNcYbOd2O7xXS2nnKMEMABFQA=",
          "",
          "[Removed Lines]",
          "114: github.com/bugsnag/bugsnag-go v1.5.0 h1:tP8hiPv1pGGW3LA6LKy5lW6WG+y9J2xWUdPd3WC452k=",
          "115: github.com/bugsnag/bugsnag-go v1.5.0/go.mod h1:2oa8nejYd4cQ/b0hMIopN0lCRxU0bueqREvZLWFrtK8=",
          "",
          "[Added Lines]",
          "109: github.com/bugsnag/bugsnag-go v1.4.1 h1:TT3P9AX69w8mbSGE8L7IJOO2KBlPN0iQtYD0dUlrWHc=",
          "110: github.com/bugsnag/bugsnag-go v1.4.1/go.mod h1:2oa8nejYd4cQ/b0hMIopN0lCRxU0bueqREvZLWFrtK8=",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "129: github.com/chzyer/test v0.0.0-20180213035817-a1ea475d72b1/go.mod h1:Q3SI9o4m/ZMnBNeIyt5eFwwo7qiLfzFZmjNmxjkiQlU=",
          "130: github.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=",
          "131: github.com/cloudflare/cfssl v0.0.0-20180223231731-4e2dcbde5004/go.mod h1:yMWuSON2oQp+43nFtAV/uvKQIFpSPerB57DCt9t8sSA=",
          "134: github.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=",
          "135: github.com/cncf/udpa/go v0.0.0-20200629203442-efcf912fb354/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=",
          "136: github.com/cncf/udpa/go v0.0.0-20201120205902-5459f2c99403/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=",
          "",
          "[Removed Lines]",
          "132: github.com/cloudflare/cfssl v1.6.4 h1:NMOvfrEjFfC63K3SGXgAnFdsgkmiq4kATme5BfcqrO8=",
          "133: github.com/cloudflare/cfssl v1.6.4/go.mod h1:8b3CQMxfWPAeom3zBnGJ6sd+G1NkL5TXqmDXacb+1J0=",
          "",
          "[Added Lines]",
          "127: github.com/cloudflare/cfssl v0.0.0-20181213083726-b94e044bb51e h1:Qux+lbuMaRzkQyTdzgtz8MgzPtzmaPQy6DXmxpdxT3U=",
          "128: github.com/cloudflare/cfssl v0.0.0-20181213083726-b94e044bb51e/go.mod h1:yMWuSON2oQp+43nFtAV/uvKQIFpSPerB57DCt9t8sSA=",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "143: github.com/cncf/xds/go v0.0.0-20230607035331-e9ce68804cb4/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=",
          "144: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb h1:EDmT6Q9Zs+SbUoc7Ik9EfrFqcylYqgPZ9ANSbTAntnE=",
          "145: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb/go.mod h1:ZjrT6AXHbDs86ZSdt/osfBi5qfexBrKUdONk989Wnk4=",
          "148: github.com/containerd/cgroups v1.1.0 h1:v8rEWFl6EoqHB+swVNjVoCJE8o3jX7e8nqBGPLaDFBM=",
          "149: github.com/containerd/cgroups v1.1.0/go.mod h1:6ppBcbh/NOOUU+dMKrykgaBnK9lCIBxHqJDGwsa1mIw=",
          "150: github.com/containerd/console v1.0.3 h1:lIr7SlA5PxZyMV30bDW0MGbiOPXwc63yRuCP0ARubLw=",
          "",
          "[Removed Lines]",
          "146: github.com/compose-spec/compose-go v1.18.3 h1:hiwTZ8ED1l+CB2G2G4LFv/bIaoUfG2ZBalz4S7MOy5w=",
          "147: github.com/compose-spec/compose-go v1.18.3/go.mod h1:zR2tP1+kZHi5vJz7PjpW6oMoDji/Js3GHjP+hfjf70Q=",
          "",
          "[Added Lines]",
          "141: github.com/compose-spec/compose-go v1.18.4 h1:yLYfsc3ATAYZVAJcXyx/V847/JVBmf3pfKfR13mXU4s=",
          "142: github.com/compose-spec/compose-go v1.18.4/go.mod h1:+MdqXV4RA7wdFsahh/Kb8U0pAJqkg7mr4PM9tFKU8RM=",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "180: github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=",
          "181: github.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=",
          "182: github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=",
          "184: github.com/denisenkom/go-mssqldb v0.0.0-20191128021309-1d7a30a10f73/go.mod h1:xbL0rPBG9cCiLr28tMa8zpbdarY27NDyej4t/EjAShU=",
          "187: github.com/docker/buildx v0.11.2 h1:R3p9F0gnI4FwvQ0p40UwdX1T4ugap4UWxY3TFHoP4Ws=",
          "188: github.com/docker/buildx v0.11.2/go.mod h1:CWAABt10iIuGpleypA3103mplDfcGu0A2AvT03xfpTc=",
          "189: github.com/docker/cli v24.0.5+incompatible h1:WeBimjvS0eKdH4Ygx+ihVq1Q++xg36M/rMi4aXAvodc=",
          "",
          "[Removed Lines]",
          "183: github.com/denisenkom/go-mssqldb v0.0.0-20190515213511-eb9f6a1743f3/go.mod h1:zAg7JM8CkOJ43xKXIj7eRO9kmWm/TW578qo+oDO6tuM=",
          "185: github.com/distribution/distribution/v3 v3.0.0-20230601133803-97b1d649c493 h1:fm5DpBD+A7o0+x9Nf+o9/4/qPGbfxLpr9qIPVuV8vQc=",
          "186: github.com/distribution/distribution/v3 v3.0.0-20230601133803-97b1d649c493/go.mod h1:+fqBJ4vPYo4Uu1ZE4d+bUtTLRXfdSL3NvCZIZ9GHv58=",
          "",
          "[Added Lines]",
          "179: github.com/distribution/reference v0.5.0 h1:/FUIFXtfc/x2gpa5/VGfiGLuOIdYa1t65IKK2OFGvA0=",
          "180: github.com/distribution/reference v0.5.0/go.mod h1:BbU0aIcezP1/5jX/8MP0YiH4SdvB5Y4f/wlDRiLyi3E=",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "212: github.com/docker/libtrust v0.0.0-20160708172513-aabc10ec26b7/go.mod h1:cyGadeNEkKy96OOhEzfZl+yxihPEzKnqJwvfuSUqbZE=",
          "213: github.com/docopt/docopt-go v0.0.0-20180111231733-ee0de3bc6815/go.mod h1:WwZ+bS3ebgob9U8Nd0kOddGdZWjyMGR8Wziv+TBNwSE=",
          "214: github.com/dvsekhvalnov/jose2go v0.0.0-20170216131308-f21a8cedbbae/go.mod h1:7BvyPhdbLxMXIYTFPLsyJRFMsKmOZnQmzh6Gb+uquuM=",
          "218: github.com/elazarl/goproxy v0.0.0-20191011121108-aa519ddbe484 h1:pEtiCjIXx3RvGjlUJuCNxNOw0MNblyR9Wi+vJGBFh+8=",
          "219: github.com/elazarl/goproxy v0.0.0-20191011121108-aa519ddbe484/go.mod h1:Ro8st/ElPeALwNFlcTpWmkr6IoMFfkjXAvTHpevnDsM=",
          "220: github.com/emicklei/go-restful/v3 v3.10.1 h1:rc42Y5YTp7Am7CS630D7JmhRjq4UlEUuEKfrDac4bSQ=",
          "",
          "[Removed Lines]",
          "215: github.com/eapache/go-resiliency v1.1.0/go.mod h1:kFI+JgMyC7bLPUVY133qvEBtVayf5mFgVsvEsIPBvNs=",
          "216: github.com/eapache/go-xerial-snappy v0.0.0-20180814174437-776d5712da21/go.mod h1:+020luEh2TKB4/GOp8oxxtq0Daoen/Cii55CzbTV6DU=",
          "217: github.com/eapache/queue v1.1.0/go.mod h1:6eCeP0CKFpHLu8blIFXhExK/dRa7WDZfr6jVFPTqq+I=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "262: github.com/go-openapi/swag v0.19.14 h1:gm3vOOXfiuw5i9p5N9xJvfjvuofpyvLA9Wr6QfK5Fng=",
          "263: github.com/go-openapi/swag v0.19.14/go.mod h1:QYRuS/SOXUCsnplDa677K7+DxSOj6IPNl/eQntq43wQ=",
          "264: github.com/go-sql-driver/mysql v1.3.0/go.mod h1:zAC/RDZ24gD3HViQzih4MyKcchzm+sOG5ZlKdlhCg5w=",
          "266: github.com/go-sql-driver/mysql v1.6.0 h1:BCTh4TKNUYmOmMUcQ3IipzF5prigylS7XXjEkfCHuOE=",
          "267: github.com/go-sql-driver/mysql v1.6.0/go.mod h1:DCzpHaOWr8IXmIStZouvnhqoel9Qv2LBy8hT2VhHyBg=",
          "268: github.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=",
          "",
          "[Removed Lines]",
          "265: github.com/go-sql-driver/mysql v1.4.1/go.mod h1:zAC/RDZ24gD3HViQzih4MyKcchzm+sOG5ZlKdlhCg5w=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "275: github.com/gogo/googleapis v1.4.1/go.mod h1:2lpHqI5OcWCtVElxXnPt+s8oJvMpySlOyM6xDCrzib4=",
          "276: github.com/gogo/protobuf v1.0.0/go.mod h1:r8qH/GZQm5c6nD/R0oafs1akxWv10x8SbQlK7atdtwQ=",
          "277: github.com/gogo/protobuf v1.1.1/go.mod h1:r8qH/GZQm5c6nD/R0oafs1akxWv10x8SbQlK7atdtwQ=",
          "279: github.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=",
          "280: github.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=",
          "281: github.com/golang-sql/civil v0.0.0-20190719163853-cb61b32ac6fe/go.mod h1:8vg3r2VgvsThLBIFL93Qb5yWzgyZWhEmBwUJWevAkK0=",
          "",
          "[Removed Lines]",
          "278: github.com/gogo/protobuf v1.2.0/go.mod h1:r8qH/GZQm5c6nD/R0oafs1akxWv10x8SbQlK7atdtwQ=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "315: github.com/golang/protobuf v1.5.2/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=",
          "316: github.com/golang/protobuf v1.5.3 h1:KhyjKVUg7Usr/dYsdSqoFveMYd5ko72D+zANwlG1mmg=",
          "317: github.com/golang/protobuf v1.5.3/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=",
          "319: github.com/google/btree v0.0.0-20180813153112-4030bb1f1f0c/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=",
          "320: github.com/google/btree v1.0.0/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=",
          "321: github.com/google/certificate-transparency-go v1.0.10-0.20180222191210-5ab67e519c93/go.mod h1:QeJfpSbVSfYc7RgB3gJFj9cbuQMMchQxrWXz8Ruopmg=",
          "",
          "[Removed Lines]",
          "318: github.com/golang/snappy v0.0.0-20180518054509-2e65f85255db/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "364: github.com/googleapis/google-cloud-go-testing v0.0.0-20200911160855-bcd43fbb19e8/go.mod h1:dvDLG8qkwmyD9a/MJJN3XJcT3xFxOKAvTZGvuZmac9g=",
          "365: github.com/gopherjs/gopherjs v0.0.0-20181017120253-0766667cb4d1 h1:EGx4pi6eqNxGaHF6qqu48+N2wcFQ5qg5FXgOdqsJ5d8=",
          "366: github.com/gopherjs/gopherjs v0.0.0-20181017120253-0766667cb4d1/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=",
          "369: github.com/gorilla/mux v1.7.0/go.mod h1:1lud6UwP+6orDFRuTfBEV8e9/aOM/c4fVVCaMa2zaAs=",
          "370: github.com/gorilla/mux v1.8.0 h1:i40aqfkR1h2SlN9hojwV5ZA91wcXFOvkdNIeFDP5koI=",
          "371: github.com/gorilla/mux v1.8.0/go.mod h1:DVbg23sWSpFRCP0SfiEN6jmj59UnW/n46BH5rLB71So=",
          "",
          "[Removed Lines]",
          "367: github.com/gorilla/context v1.1.1/go.mod h1:kBGZzfjB9CEq2AlWe17Uuf7NDRt0dE0s8S51q0aT7Yg=",
          "368: github.com/gorilla/mux v1.6.2/go.mod h1:1lud6UwP+6orDFRuTfBEV8e9/aOM/c4fVVCaMa2zaAs=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "412: github.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=",
          "413: github.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=",
          "414: github.com/jinzhu/gorm v0.0.0-20170222002820-5409931a1bb8/go.mod h1:Vla75njaFJ8clLU1W44h34PjIkijhjHIYnZxMqCdxqo=",
          "417: github.com/jinzhu/inflection v0.0.0-20170102125226-1c35d901db3d/go.mod h1:h+uFLlag+Qp1Va5pdKtLDYj+kHp5pxUVkryuEj+Srlc=",
          "421: github.com/jinzhu/now v1.1.1/go.mod h1:d3SSVoowX0Lcu0IBviAWJpolVfI5UJVZZ7cO71lE/z8=",
          "422: github.com/jmespath/go-jmespath v0.4.0/go.mod h1:T8mJZnbsbmF+m6zOOFylbeCJqk5+pHWvzYPziyZiYoo=",
          "423: github.com/jmespath/go-jmespath/internal/testify v1.5.1/go.mod h1:L3OGu8Wl2/fWfCI6z80xFu9LTZmf1ZRjMHUOPmWr69U=",
          "426: github.com/jonboulle/clockwork v0.4.0 h1:p4Cf1aMWXnXAUh8lVfewRBx1zaTSYKrKMF2g3ST4RZ4=",
          "427: github.com/jonboulle/clockwork v0.4.0/go.mod h1:xgRqUGwRcjKCO1vbZUEtSLrqKoPSsUpK7fnezOII0kc=",
          "428: github.com/josharian/intern v1.0.0 h1:vlS4z54oSdjm0bgjRigI+G1HpF+tI+9rE5LLzOg8HmY=",
          "",
          "[Removed Lines]",
          "415: github.com/jinzhu/gorm v1.9.11 h1:gaHGvE+UnWGlbWG4Y3FUwY1EcZ5n6S9WtqBA/uySMLE=",
          "416: github.com/jinzhu/gorm v1.9.11/go.mod h1:bu/pK8szGZ2puuErfU0RwyeNdsf3e6nCX/noXaVxkfw=",
          "418: github.com/jinzhu/inflection v1.0.0 h1:K317FqzuhWc8YvSVlFMCCUb36O/S9MCKRDI7QkRKD/E=",
          "419: github.com/jinzhu/inflection v1.0.0/go.mod h1:h+uFLlag+Qp1Va5pdKtLDYj+kHp5pxUVkryuEj+Srlc=",
          "420: github.com/jinzhu/now v1.0.1/go.mod h1:d3SSVoowX0Lcu0IBviAWJpolVfI5UJVZZ7cO71lE/z8=",
          "424: github.com/jmoiron/sqlx v1.3.3 h1:j82X0bf7oQ27XeqxicSZsTU5suPwKElg3oyxNn43iTk=",
          "425: github.com/jmoiron/sqlx v1.3.3/go.mod h1:2BljVx/86SuTyjE+aPYlHCTNvZrnJXghYGpNiXLBMCQ=",
          "",
          "[Added Lines]",
          "401: github.com/jinzhu/gorm v1.9.2 h1:lCvgEaqe/HVE+tjAR2mt4HbbHAZsQOv3XAZiEZV37iw=",
          "402: github.com/jinzhu/gorm v1.9.2/go.mod h1:Vla75njaFJ8clLU1W44h34PjIkijhjHIYnZxMqCdxqo=",
          "404: github.com/jinzhu/inflection v0.0.0-20180308033659-04140366298a h1:eeaG9XMUvRBYXJi4pg1ZKM7nxc5AfXfojeLLW7O5J3k=",
          "405: github.com/jinzhu/inflection v0.0.0-20180308033659-04140366298a/go.mod h1:h+uFLlag+Qp1Va5pdKtLDYj+kHp5pxUVkryuEj+Srlc=",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "451: github.com/kr/logfmt v0.0.0-20140226030751-b84e30acd515/go.mod h1:+0opPa2QZZtGFBFZlji/RkVcI2GknAs/DXo4wKdlNEc=",
          "452: github.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=",
          "453: github.com/kr/pretty v0.2.0/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=",
          "454: github.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=",
          "457: github.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=",
          "458: github.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=",
          "459: github.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=",
          "",
          "[Removed Lines]",
          "455: github.com/kr/pretty v0.3.0 h1:WgNl7dwNpEZ6jJ9k1snq4pZsg7DOEN8hP9Xw0Tsjwk0=",
          "456: github.com/kr/pretty v0.3.0/go.mod h1:640gp4NfQd8pI5XOwp5fnNeVWj67G7CFk/SaSQn7NBk=",
          "",
          "[Added Lines]",
          "437: github.com/kr/pretty v0.2.1 h1:Fmg33tUaq4/8ym9TJN1x7sLJnHVwhP33CNkpYV/7rwI=",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "461: github.com/laurazard/godog v0.0.0-20220922095256-4c4b17abdae7 h1:R/J7xECY9oHrAg+4QjC38EoXaYysNLzhvXhH/SXcsVc=",
          "462: github.com/laurazard/godog v0.0.0-20220922095256-4c4b17abdae7/go.mod h1:Y02TTpimPXDb70PnG6M3zpODXm1+bjCsuZzcW76xAww=",
          "463: github.com/lib/pq v0.0.0-20150723085316-0dad96c0b94f/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=",
          "465: github.com/magiconair/properties v1.5.3/go.mod h1:PppfXfuXeibc/6YijjN8zIbojt8czPbwD3XqdrwzmxQ=",
          "468: github.com/mailru/easyjson v0.0.0-20190614124828-94de47d64c63/go.mod h1:C1wdFJiN94OJF2b5HbByQZoLdCWB1Yqtg26g4irojpc=",
          "469: github.com/mailru/easyjson v0.0.0-20190626092158-b2ccc519800e/go.mod h1:C1wdFJiN94OJF2b5HbByQZoLdCWB1Yqtg26g4irojpc=",
          "470: github.com/mailru/easyjson v0.7.6 h1:8yTIVnZgCoiM1TgqoeTl+LfU5Jg6/xL3QhGQnimLYnA=",
          "",
          "[Removed Lines]",
          "464: github.com/lib/pq v1.1.1/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=",
          "466: github.com/magiconair/properties v1.8.6 h1:5ibWZ6iY0NctNGWo87LalDlEZ6R41TqbbDamhfG/Qzo=",
          "467: github.com/magiconair/properties v1.8.6/go.mod h1:y3VJvCyxH9uVvJTWEGAELF3aiYNyPKd5NZ3oSwXrF60=",
          "",
          "[Added Lines]",
          "446: github.com/magiconair/properties v1.5.3 h1:C8fxWnhYyME3n0klPOhVM7PtYUB3eV1W3DeFmN3j53Y=",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "481: github.com/mattn/go-shellwords v1.0.12 h1:M2zGm7EW6UQJvDeQxo4T51eKPurbeFbe8WtebGE2xrk=",
          "482: github.com/mattn/go-shellwords v1.0.12/go.mod h1:EZzvwXDESEeg03EKmM+RmDnNOPKG4lLtQsUlTZDWQ8Y=",
          "483: github.com/mattn/go-sqlite3 v1.6.0/go.mod h1:FPy6KqzDD04eiIsT53CuJW3U88zkxoIYsOqkbpncsNc=",
          "485: github.com/matttproud/golang_protobuf_extensions v1.0.1/go.mod h1:D8He9yQNgCq6Z5Ld7szi9bcBfOoFv/3dc6xSMkL2PC0=",
          "486: github.com/matttproud/golang_protobuf_extensions v1.0.4 h1:mmDVorXM7PCGKw94cs5zkfA9PSy5pEvNWRP0ET0TIVo=",
          "487: github.com/matttproud/golang_protobuf_extensions v1.0.4/go.mod h1:BSXmuO+STAnVfrANrmjBb36TMTDstsz7MSK+HVaYKv4=",
          "",
          "[Removed Lines]",
          "484: github.com/mattn/go-sqlite3 v1.11.0/go.mod h1:FPy6KqzDD04eiIsT53CuJW3U88zkxoIYsOqkbpncsNc=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "520: github.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=",
          "521: github.com/morikuni/aec v1.0.0 h1:nP9CBfwrvYnBRgY6qfDQkygYDmYwOilePFkwzv4dU8A=",
          "522: github.com/morikuni/aec v1.0.0/go.mod h1:BbKIizmSmc5MMPqRYbxO4ZU0S0+P200+tUnFx7PXmsc=",
          "524: github.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 h1:C3w9PqII01/Oq1c1nUAm88MOHcQC9l5mIlSMApZMrHA=",
          "525: github.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822/go.mod h1:+n7T8mK8HuQTcFwEeznm/DIxMOiR9yIdICNftLE1DvQ=",
          "526: github.com/mwitkow/go-conntrack v0.0.0-20161129095857-cc309e4a2223/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=",
          "527: github.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e/go.mod h1:zD1mROLANZcx1PVRCS0qkT7pwLkGfwJo4zjcN/Tysno=",
          "528: github.com/onsi/ginkgo v1.6.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=",
          "530: github.com/onsi/ginkgo v1.12.0 h1:Iw5WCbBcaAAd0fpRb1c9r5YCylv4XDoCSigm1zLevwU=",
          "531: github.com/onsi/ginkgo v1.12.0/go.mod h1:oUhWkIvk5aDxtKvDDuw8gItl8pKl42LzjC9KZE0HfGg=",
          "532: github.com/onsi/ginkgo/v2 v2.4.0 h1:+Ig9nvqgS5OBSACXNk15PLdp0U9XPYROt9CFzVdFGIs=",
          "533: github.com/onsi/ginkgo/v2 v2.4.0/go.mod h1:iHkDK1fKGcBoEHT5W7YBq4RFWaQulw+caOMkAt4OrFo=",
          "535: github.com/onsi/gomega v1.7.1/go.mod h1:XdKZgCCFLUoM/7CFJVPcG8C1xQ1AJ0vpAezJrB7JYyY=",
          "536: github.com/onsi/gomega v1.9.0/go.mod h1:Ho0h+IUsWyvy1OpqCwxlQ/21gkhVunqlU8fDGcoTdcA=",
          "537: github.com/onsi/gomega v1.23.0 h1:/oxKu9c2HVap+F3PfKort2Hw5DEU+HGlW8n+tguWsys=",
          "538: github.com/onsi/gomega v1.23.0/go.mod h1:Z/NWtiqwBrwUt4/2loMmHL63EDLnYHmVbuBpDr2vQAg=",
          "540: github.com/opencontainers/go-digest v0.0.0-20170106003457-a6d0ee40d420/go.mod h1:cMLVZDEM3+U2I4VmLI6N8jQYUd2OVphdqWwCJHrFt2s=",
          "541: github.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=",
          "542: github.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=",
          "",
          "[Removed Lines]",
          "523: github.com/mreiferson/go-httpclient v0.0.0-20160630210159-31f0106b4474/go.mod h1:OQA4XLvDbMgS8P0CevmM4m9Q3Jq4phKUzcocxuGJ5m8=",
          "529: github.com/onsi/ginkgo v1.7.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=",
          "534: github.com/onsi/gomega v1.4.3/go.mod h1:ex+gbHU/CVuBBDIJjb2X0qEXbFg53c61hWP/1CpauHY=",
          "539: github.com/op/go-logging v0.0.0-20160315200505-970db520ece7/go.mod h1:HzydrMdWErDVzsI23lYNej1Htcns9BCg93Dk0bBINWk=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "551: github.com/opencontainers/selinux v1.11.0/go.mod h1:E5dMC3VPuVvVHDYmi78qvhJp8+M586T4DlDRYpFkyec=",
          "552: github.com/opentracing/opentracing-go v1.1.0 h1:pWlfV3Bxv7k65HYwkikxat0+s3pV4bsqf19k25Ur8rU=",
          "553: github.com/opentracing/opentracing-go v1.1.0/go.mod h1:UkNAQd3GIcIGf0SeVgPpRdFStlNbqXla1AfSYxPUl2o=",
          "555: github.com/pelletier/go-toml v1.9.5 h1:4yBQzkHv+7BHq2PQUZF3Mx0IYxG7LsP222s7Agd3ve8=",
          "556: github.com/pelletier/go-toml v1.9.5/go.mod h1:u1nR/EPcESfeI/szUZKdtJ0xRNbUoANCkoOuaOx1Y+c=",
          "557: github.com/pelletier/go-toml/v2 v2.0.5 h1:ipoSadvV8oGUjnUbMub59IDPPwfxF694nG/jwbMiyQg=",
          "558: github.com/pelletier/go-toml/v2 v2.0.5/go.mod h1:OMHamSCAODeSsVrwwvcJOaoN0LIUIaFVNZzmWyNfXas=",
          "560: github.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=",
          "561: github.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=",
          "562: github.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=",
          "",
          "[Removed Lines]",
          "554: github.com/openzipkin/zipkin-go v0.1.6/go.mod h1:QgAqvLzwWbR/WpD4A3cGpPtJrZXNIiJc5AZX7/PBEpw=",
          "559: github.com/pierrec/lz4 v2.0.5+incompatible/go.mod h1:pdkljMzZIN41W+lC3N2tnIh5sFi+IEE17M5jbnwPHcY=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "566: github.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=",
          "567: github.com/prometheus/client_golang v0.9.0-pre1.0.20180209125602-c332b6f63c06/go.mod h1:7SWBe2y4D6OKWSNQJUaRYU/AaXPKyh/dDVn+NZz0KFw=",
          "568: github.com/prometheus/client_golang v0.9.1/go.mod h1:7SWBe2y4D6OKWSNQJUaRYU/AaXPKyh/dDVn+NZz0KFw=",
          "570: github.com/prometheus/client_golang v1.0.0/go.mod h1:db9x61etRT2tGnBNRi70OPL5FsnadC4Ky3P0J6CfImo=",
          "571: github.com/prometheus/client_golang v1.1.0/go.mod h1:I1FGZT9+L76gKKOs5djB6ezCbFQP1xR9D75/vuwEF3g=",
          "572: github.com/prometheus/client_golang v1.14.0 h1:nJdhIvne2eSX/XRAFV9PcvFFRbrjbcTUj0VP62TMhnw=",
          "573: github.com/prometheus/client_golang v1.14.0/go.mod h1:8vpkKitgIVNcqrRBWh1C4TIUQgYNtG/XQE4E/Zae36Y=",
          "574: github.com/prometheus/client_model v0.0.0-20171117100541-99fa1f4be8e5/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=",
          "575: github.com/prometheus/client_model v0.0.0-20180712105110-5c3871d89910/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=",
          "577: github.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=",
          "578: github.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=",
          "579: github.com/prometheus/client_model v0.3.0 h1:UBgGFHqYdG/TPFD1B1ogZywDqEkwp3fBMvqdiQ7Xew4=",
          "580: github.com/prometheus/client_model v0.3.0/go.mod h1:LDGWKZIo7rky3hgvBe+caln+Dr3dPggB5dvjtD7w9+w=",
          "581: github.com/prometheus/common v0.0.0-20180110214958-89604d197083/go.mod h1:daVV7qP5qjZbuso7PdcryaAu0sAZbrN9i7WWcTMWvro=",
          "583: github.com/prometheus/common v0.4.1/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=",
          "584: github.com/prometheus/common v0.6.0/go.mod h1:eBmuwkDJBwy6iBfxCBob6t6dR6ENT/y+J+Zk0j9GMYc=",
          "585: github.com/prometheus/common v0.42.0 h1:EKsfXEYo4JpWMHH5cg+KOUWeuJSov1Id8zGR8eeI1YM=",
          "586: github.com/prometheus/common v0.42.0/go.mod h1:xBwqVerjNdUDjgODMpudtOMwlOwf2SaTr1yjz4b7Zbc=",
          "587: github.com/prometheus/procfs v0.0.0-20180125133057-cb4147076ac7/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=",
          "588: github.com/prometheus/procfs v0.0.0-20181005140218-185b4288413d/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=",
          "590: github.com/prometheus/procfs v0.0.2/go.mod h1:TjEm7ze935MbeOT/UhFTIMYKhuLP4wbCsTZCD3I8kEA=",
          "591: github.com/prometheus/procfs v0.0.3/go.mod h1:4A/X28fw3Fc593LaREMrKMqOKvUAntwMDaekg4FpcdQ=",
          "592: github.com/prometheus/procfs v0.9.0 h1:wzCHvIvM5SxWqYvwgVL7yJY8Lz3PKn49KQtpgMYJfhI=",
          "593: github.com/prometheus/procfs v0.9.0/go.mod h1:+pB4zwohETzFnmlpe6yd2lSc+0/46IYZRB/chUwxUZY=",
          "595: github.com/rivo/uniseg v0.2.0 h1:S1pD9weZBuJdFmowNwbpi7BJ8TNftyUImj/0WQi72jY=",
          "596: github.com/rivo/uniseg v0.2.0/go.mod h1:J6wj4VEh+S6ZtnVlnTBMWIodfgj8LQOQFoIToxlJtxc=",
          "597: github.com/rogpeppe/fastuuid v1.2.0/go.mod h1:jVj6XXZzXRy/MSR5jhDC/2q6DgLz+nrA6LYCDYWNEvQ=",
          "598: github.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=",
          "601: github.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=",
          "602: github.com/secure-systems-lab/go-securesystemslib v0.4.0 h1:b23VGrQhTA8cN2CbBw7/FulN9fTtqYUdS5+Oxzt+DUE=",
          "603: github.com/secure-systems-lab/go-securesystemslib v0.4.0/go.mod h1:FGBZgq2tXWICsxWQW1msNf49F0Pf2Op5Htayx335Qbs=",
          "",
          "[Removed Lines]",
          "569: github.com/prometheus/client_golang v0.9.3-0.20190127221311-3c4408c8b829/go.mod h1:p2iRAGwDERtqlqzRXnrOVns+ignqQo//hLXqYxZYVNs=",
          "576: github.com/prometheus/client_model v0.0.0-20190115171406-56726106282f/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=",
          "582: github.com/prometheus/common v0.2.0/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=",
          "589: github.com/prometheus/procfs v0.0.0-20190117184657-bf6a532e95b1/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=",
          "594: github.com/rcrowley/go-metrics v0.0.0-20181016184325-3113b8401b8a/go.mod h1:bCqnVzQkZxMG4s8nGwiZ5l3QUCyqpo9Y+/ZMZ9VjZe4=",
          "599: github.com/rogpeppe/go-internal v1.6.1 h1:/FiVV8dS/e+YqF2JvO3yXRFbBLTIuSDkuC7aBOAvL+k=",
          "600: github.com/rogpeppe/go-internal v1.6.1/go.mod h1:xXDCJY+GAPziupqXw64V24skbSoqbTEfhy4qGm1nDQc=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "607: github.com/shibumi/go-pathspec v1.3.0/go.mod h1:Xutfslp817l2I1cZvgcfeMQJG5QnU2lh5tVaaMCl3jE=",
          "608: github.com/sirupsen/logrus v1.0.6/go.mod h1:pMByvHTf9Beacp5x1UXfOR9xyW/9antXMhjMPG0dEzc=",
          "609: github.com/sirupsen/logrus v1.2.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=",
          "611: github.com/sirupsen/logrus v1.4.1/go.mod h1:ni0Sbl8bgC9z8RoU9G6nDWqqs/fq4eDPysMBDgk/93Q=",
          "612: github.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=",
          "613: github.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=",
          "",
          "[Removed Lines]",
          "610: github.com/sirupsen/logrus v1.3.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "621: github.com/spdx/tools-golang v0.5.1/go.mod h1:/DRDQuBfB37HctM29YtrX1v+bXiVmT2OpQDalRmX9aU=",
          "622: github.com/spf13/afero v1.9.2 h1:j49Hj62F0n+DaZ1dDCvhABaPNSGNkt32oRFxI33IEMw=",
          "623: github.com/spf13/afero v1.9.2/go.mod h1:iUV7ddyEEZPO5gA3zD4fJt6iStLlL+Lg4m2cihcDf8Y=",
          "624: github.com/spf13/cast v0.0.0-20150508191742-4d07383ffe94/go.mod h1:r2rcYCSwa1IExKTDiTfzaxqT2FNHs8hODu4LnUfgKEg=",
          "627: github.com/spf13/cobra v0.0.1/go.mod h1:1l0Ry5zgKvJasoi3XT1TypsSe7PqH0Sj9dhYf7v3XqQ=",
          "628: github.com/spf13/cobra v1.4.0/go.mod h1:Wo4iy3BUC+X2Fybo0PDqwJIv3dNRiZLHQymsfxlB84g=",
          "629: github.com/spf13/cobra v1.7.0 h1:hyqWnYt1ZQShIddO5kBpj3vu05/++x6tJ6dg8EC572I=",
          "630: github.com/spf13/cobra v1.7.0/go.mod h1:uLxZILRyS/50WlhOIKD7W6V5bgeIt+4sICxh6uRMrb0=",
          "631: github.com/spf13/jwalterweatherman v0.0.0-20141219030609-3d60171a6431/go.mod h1:cQK4TGJAtQXfYWX+Ddv3mKDzgVb68N+wFjFa4jdeBTo=",
          "634: github.com/spf13/pflag v1.0.0/go.mod h1:DYY7MBk1bdzusC3SYhjObp+wFpr4gzcvqqNjLnInEg4=",
          "635: github.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=",
          "636: github.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=",
          "",
          "[Removed Lines]",
          "625: github.com/spf13/cast v1.5.0 h1:rj3WzYc11XZaIZMPKmwP96zkFEnnAmV8s6XbB2aY32w=",
          "626: github.com/spf13/cast v1.5.0/go.mod h1:SpXXQ5YoyJw6s3/6cMTQuxvgRl3PCJiyaX9p6b155UU=",
          "632: github.com/spf13/jwalterweatherman v1.1.0 h1:ue6voC5bR5F8YxI5S67j9i582FU4Qvo2bmqnqMYADFk=",
          "633: github.com/spf13/jwalterweatherman v1.1.0/go.mod h1:aNWZUN0dPAAO/Ljvb5BEdw96iTZ0EXowPYD95IqWIGo=",
          "",
          "[Added Lines]",
          "589: github.com/spf13/cast v0.0.0-20150508191742-4d07383ffe94 h1:JmfC365KywYwHB946TTiQWEb8kqPY+pybPLoGE9GgVk=",
          "595: github.com/spf13/jwalterweatherman v0.0.0-20141219030609-3d60171a6431 h1:XTHrT015sxHyJ5FnQ0AeemSspZWaDq7DoTRW0EVsDCE=",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "666: github.com/tonistiigi/vt100 v0.0.0-20230623042737-f9a4f7ef6531/go.mod h1:ulncasL3N9uLrVann0m+CDlJKWsIAP34MPcOJF6VRvc=",
          "667: github.com/vbatts/tar-split v0.11.2 h1:Via6XqJr0hceW4wff3QRzD5gAk/tatMw/4ZA7cTlIME=",
          "668: github.com/vbatts/tar-split v0.11.2/go.mod h1:vV3ZuO2yWSVsz+pfFzDG/upWH1JhjOiEaWq6kXyQ3VI=",
          "671: github.com/xeipuuv/gojsonpointer v0.0.0-20180127040702-4e3ac2762d5f/go.mod h1:N2zxlSyiKSe5eX1tZViRH5QA0qijqEDrYZiPEAiq3wU=",
          "672: github.com/xeipuuv/gojsonpointer v0.0.0-20190905194746-02993c407bfb h1:zGWFAtiMcyryUHoUjUJX0/lt1H2+i2Ka2n+D3DImSNo=",
          "673: github.com/xeipuuv/gojsonpointer v0.0.0-20190905194746-02993c407bfb/go.mod h1:N2zxlSyiKSe5eX1tZViRH5QA0qijqEDrYZiPEAiq3wU=",
          "",
          "[Removed Lines]",
          "669: github.com/weppos/publicsuffix-go v0.15.1-0.20220329081811-9a40b608a236 h1:vMJBP3PQViZsF6cOINtvyMC8ptpLsyJ4EwyFnzuWNxc=",
          "670: github.com/weppos/publicsuffix-go v0.15.1-0.20220329081811-9a40b608a236/go.mod h1:HYux0V0Zi04bHNwOHy4cXJVz/TQjYonnF6aoYhj+3QE=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "681: github.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=",
          "682: github.com/yuin/goldmark v1.3.5/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=",
          "683: github.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=",
          "691: go.opencensus.io v0.21.0/go.mod h1:mSImk1erAIZhrmZN+AvHh14ztQfjbGwt4TtuofqLduU=",
          "692: go.opencensus.io v0.22.0/go.mod h1:+kGneAE2xo2IficOXnaByMWTGM9T73dGwxeWcUqIpI8=",
          "693: go.opencensus.io v0.22.2/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=",
          "",
          "[Removed Lines]",
          "684: github.com/zmap/rc2 v0.0.0-20131011165748-24b9757f5521/go.mod h1:3YZ9o3WnatTIZhuOtot4IcUfzoKVjUHqu6WALIyI0nE=",
          "685: github.com/zmap/zcertificate v0.0.0-20180516150559-0e3d58b1bac4/go.mod h1:5iU54tB79AMBcySS0R2XIyZBAVmeHranShAFELYx7is=",
          "686: github.com/zmap/zcrypto v0.0.0-20220605182715-4dfcec6e9a8c h1:ufDm/IlBYZYLuiqvQuhpTKwrcAS2OlXEzWbDvTVGbSQ=",
          "687: github.com/zmap/zcrypto v0.0.0-20220605182715-4dfcec6e9a8c/go.mod h1:egdRkzUylATvPkWMpebZbXhv0FMEMJGX/ur0D3Csk2s=",
          "688: github.com/zmap/zlint/v3 v3.1.0 h1:WjVytZo79m/L1+/Mlphl09WBob6YTGljN5IGWZFpAv0=",
          "689: github.com/zmap/zlint/v3 v3.1.0/go.mod h1:L7t8s3sEKkb0A2BxGy1IWrxt1ZATa1R4QfJZaQOD3zU=",
          "690: go.opencensus.io v0.20.1/go.mod h1:6WKK9ahsWS3RSO+PY9ZHZUfv2irvY6gN279GOPZjmmk=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "735: golang.org/x/crypto v0.0.0-20200302210943-78000ba7a073/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=",
          "736: golang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=",
          "737: golang.org/x/crypto v0.0.0-20201117144127-c1f2f97bffc9/go.mod h1:jdWPYTVW3xRLrWPugEBEK3UY2ZEsg3UU495nc5E+M+I=",
          "739: golang.org/x/crypto v0.0.0-20210421170649-83a5a9bb288b/go.mod h1:T9bdIzuCu7OtxOm1hfPfRQxPLYneinmdGuTeoZ9dtd4=",
          "740: golang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=",
          "741: golang.org/x/crypto v0.0.0-20211108221036-ceb1ce70b4fa/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=",
          "",
          "[Removed Lines]",
          "738: golang.org/x/crypto v0.0.0-20201124201722-c8d3bf9c5392/go.mod h1:jdWPYTVW3xRLrWPugEBEK3UY2ZEsg3UU495nc5E+M+I=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "785: golang.org/x/net v0.0.0-20180906233101-161cd47e91fd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=",
          "786: golang.org/x/net v0.0.0-20181114220301-adae6a3d119a/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=",
          "787: golang.org/x/net v0.0.0-20190108225652-1e06a53dbb7e/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=",
          "789: golang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=",
          "790: golang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=",
          "791: golang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=",
          "",
          "[Removed Lines]",
          "788: golang.org/x/net v0.0.0-20190125091013-d26f9f9a57f3/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "812: golang.org/x/net v0.0.0-20200822124328-c89045814202/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=",
          "813: golang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=",
          "814: golang.org/x/net v0.0.0-20201031054903-ff519b6c9102/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=",
          "816: golang.org/x/net v0.0.0-20201209123823-ac852fbbde11/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=",
          "817: golang.org/x/net v0.0.0-20201224014010-6772e930b67b/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=",
          "818: golang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=",
          "",
          "[Removed Lines]",
          "815: golang.org/x/net v0.0.0-20201110031124-69a78807bb2b/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "850: golang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=",
          "851: golang.org/x/sys v0.0.0-20180909124046-d0be0721c37e/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=",
          "852: golang.org/x/sys v0.0.0-20181116152217-5ac8a444bdc5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=",
          "854: golang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=",
          "855: golang.org/x/sys v0.0.0-20190222072716-a9d3bda3a223/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=",
          "856: golang.org/x/sys v0.0.0-20190312061237-fead79001313/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "",
          "[Removed Lines]",
          "853: golang.org/x/sys v0.0.0-20181122145206-62eef0e2fa9b/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "923: golang.org/x/time v0.0.0-20191024005414-555d28b269f0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=",
          "924: golang.org/x/time v0.3.0 h1:rg5rLMjNzMS1RkNLzCG38eapWhnYLFYXDXj2gOlr8j4=",
          "925: golang.org/x/time v0.3.0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=",
          "927: golang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=",
          "928: golang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=",
          "929: golang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=",
          "",
          "[Removed Lines]",
          "926: golang.org/x/tools v0.0.0-20180828015842-6cd1fcedba52/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "982: golang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=",
          "983: golang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=",
          "984: golang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=",
          "986: google.golang.org/api v0.4.0/go.mod h1:8k5glujaEP+g9n7WNsDg8QP6cUVNI86fCNMcbazEtwE=",
          "987: google.golang.org/api v0.7.0/go.mod h1:WtwebWUNSVBH/HAw79HIFXZNqEvBhG+Ra+ax0hx3E3M=",
          "988: google.golang.org/api v0.8.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=",
          "",
          "[Removed Lines]",
          "985: google.golang.org/api v0.3.1/go.mod h1:6wY9I6uQWHQ8EM57III9mq/AjF+i8G65rmVagqKMtkk=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "1012: google.golang.org/appengine v1.6.7/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=",
          "1013: google.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=",
          "1014: google.golang.org/genproto v0.0.0-20190307195333-5fe7a883aa19/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=",
          "1016: google.golang.org/genproto v0.0.0-20190418145605-e7d98fc518a7/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=",
          "1017: google.golang.org/genproto v0.0.0-20190425155659-357c62f0e4bb/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=",
          "1018: google.golang.org/genproto v0.0.0-20190502173448-54afdca5d873/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=",
          "",
          "[Removed Lines]",
          "1015: google.golang.org/genproto v0.0.0-20190404172233-64821d5d2107/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "1058: google.golang.org/genproto/googleapis/rpc v0.0.0-20230525234030-28d5490b6b19 h1:0nDDozoAU19Qb2HwhXadU8OcsiO/09cnTqhUtq2MEOM=",
          "1059: google.golang.org/genproto/googleapis/rpc v0.0.0-20230525234030-28d5490b6b19/go.mod h1:66JfowdXAEgad5O9NnYcsNPLCPZJD++2L9X0PCMODrA=",
          "1060: google.golang.org/grpc v1.0.5/go.mod h1:yo6s7OP7yaDglbqo1J04qKzAhqBH6lvTonzMVmEdcZw=",
          "1062: google.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=",
          "1063: google.golang.org/grpc v1.20.1/go.mod h1:10oTOabMzJvdu6/UiuZezV6QK5dSlG84ov/aaiqXj38=",
          "1064: google.golang.org/grpc v1.21.1/go.mod h1:oYelfM1adQP15Ek0mdvEgi9Df8B9CZIaU1084ijfRaM=",
          "",
          "[Removed Lines]",
          "1061: google.golang.org/grpc v1.17.0/go.mod h1:6QZJwpn2B+Zp71q/5VxRsJ6NXXVCE5NRUHRo+f3cWCs=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "1121: gopkg.in/yaml.v2 v2.2.3/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=",
          "1122: gopkg.in/yaml.v2 v2.2.4/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=",
          "1123: gopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=",
          "1125: gopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=",
          "1126: gopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=",
          "1127: gopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=",
          "",
          "[Removed Lines]",
          "1124: gopkg.in/yaml.v2 v2.3.0/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "1130: gopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=",
          "1131: gotest.tools/v3 v3.5.0 h1:Ljk6PdHdOhAb5aDMWXjDLMMhph+BpztA4v1QdqEW2eY=",
          "1132: gotest.tools/v3 v3.5.0/go.mod h1:isy3WKz7GK6uNw/sbHzfKBLvlvXwUyV06n6brMxxopU=",
          "1134: honnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=",
          "1135: honnef.co/go/tools v0.0.0-20190106161140-3f1c8253044a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=",
          "1136: honnef.co/go/tools v0.0.0-20190418001031-e561f6794a2a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=",
          "",
          "[Removed Lines]",
          "1133: honnef.co/go/tools v0.0.0-20180728063816-88497007e858/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "pkg/compose/compose.go||pkg/compose/compose.go": [
          "File: pkg/compose/compose.go -> pkg/compose/compose.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:  \"github.com/docker/docker/api/types/volume\"",
          "33:  \"github.com/compose-spec/compose-go/types\"",
          "35:  \"github.com/docker/cli/cli/command\"",
          "36:  \"github.com/docker/cli/cli/config/configfile\"",
          "37:  \"github.com/docker/cli/cli/flags\"",
          "",
          "[Removed Lines]",
          "34:  \"github.com/distribution/distribution/v3/reference\"",
          "",
          "[Added Lines]",
          "34:  \"github.com/distribution/reference\"",
          "",
          "---------------"
        ],
        "pkg/compose/image_pruner.go||pkg/compose/image_pruner.go": [
          "File: pkg/compose/image_pruner.go -> pkg/compose/image_pruner.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  \"sync\"",
          "25:  \"github.com/compose-spec/compose-go/types\"",
          "27:  moby \"github.com/docker/docker/api/types\"",
          "28:  \"github.com/docker/docker/api/types/filters\"",
          "29:  \"github.com/docker/docker/client\"",
          "",
          "[Removed Lines]",
          "26:  \"github.com/distribution/distribution/v3/reference\"",
          "",
          "[Added Lines]",
          "26:  \"github.com/distribution/reference\"",
          "",
          "---------------"
        ],
        "pkg/compose/images.go||pkg/compose/images.go": [
          "File: pkg/compose/images.go -> pkg/compose/images.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22:  \"strings\"",
          "23:  \"sync\"",
          "26:  moby \"github.com/docker/docker/api/types\"",
          "27:  \"github.com/docker/docker/api/types/filters\"",
          "28:  \"github.com/docker/docker/errdefs\"",
          "",
          "[Removed Lines]",
          "25:  \"github.com/distribution/distribution/v3/reference\"",
          "",
          "[Added Lines]",
          "25:  \"github.com/distribution/reference\"",
          "",
          "---------------"
        ],
        "pkg/compose/pull.go||pkg/compose/pull.go": [
          "File: pkg/compose/pull.go -> pkg/compose/pull.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:  \"strings\"",
          "28:  \"github.com/compose-spec/compose-go/types\"",
          "30:  \"github.com/docker/buildx/driver\"",
          "31:  moby \"github.com/docker/docker/api/types\"",
          "32:  \"github.com/docker/docker/pkg/jsonmessage\"",
          "",
          "[Removed Lines]",
          "29:  \"github.com/distribution/distribution/v3/reference\"",
          "",
          "[Added Lines]",
          "29:  \"github.com/distribution/reference\"",
          "",
          "---------------"
        ],
        "pkg/compose/push.go||pkg/compose/push.go": [
          "File: pkg/compose/push.go -> pkg/compose/push.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:  \"io\"",
          "26:  \"github.com/compose-spec/compose-go/types\"",
          "28:  \"github.com/docker/buildx/driver\"",
          "29:  moby \"github.com/docker/docker/api/types\"",
          "30:  \"github.com/docker/docker/pkg/jsonmessage\"",
          "",
          "[Removed Lines]",
          "27:  \"github.com/distribution/distribution/v3/reference\"",
          "",
          "[Added Lines]",
          "27:  \"github.com/distribution/reference\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6e818b9ae0d24ed2ef1a6eda93b5318e3e9aeddb",
      "candidate_info": {
        "commit_hash": "6e818b9ae0d24ed2ef1a6eda93b5318e3e9aeddb",
        "repo": "docker/compose",
        "commit_url": "https://github.com/docker/compose/commit/6e818b9ae0d24ed2ef1a6eda93b5318e3e9aeddb",
        "files": [
          "go.mod",
          "go.sum"
        ],
        "message": "build(deps): bump github.com/compose-spec/compose-go/v2\n\nBumps [github.com/compose-spec/compose-go/v2](https://github.com/compose-spec/compose-go) from 2.4.5-0.20241111154218-9d02caaf8465 to 2.4.5.\n- [Release notes](https://github.com/compose-spec/compose-go/releases)\n- [Commits](https://github.com/compose-spec/compose-go/commits/v2.4.5)\n\n---\nupdated-dependencies:\n- dependency-name: github.com/compose-spec/compose-go/v2\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ],
          "candidate": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ]
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  github.com/Microsoft/go-winio v0.6.2",
          "8:  github.com/acarl005/stripansi v0.0.0-20180116102854-5a71ef0e047d",
          "9:  github.com/buger/goterm v1.0.4",
          "11:  github.com/containerd/containerd v1.7.23",
          "12:  github.com/containerd/platforms v0.2.1",
          "13:  github.com/davecgh/go-spew v1.1.1",
          "",
          "[Removed Lines]",
          "10:  github.com/compose-spec/compose-go/v2 v2.4.5-0.20241111154218-9d02caaf8465",
          "",
          "[Added Lines]",
          "10:  github.com/compose-spec/compose-go/v2 v2.4.5",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "85: github.com/cncf/xds/go v0.0.0-20240723142845-024c85f92f20/go.mod h1:W+zGtBO5Y1IgJhy4+A9GOqVhqLpfZi+vwmdNXUehLA8=",
          "86: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb h1:EDmT6Q9Zs+SbUoc7Ik9EfrFqcylYqgPZ9ANSbTAntnE=",
          "87: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb/go.mod h1:ZjrT6AXHbDs86ZSdt/osfBi5qfexBrKUdONk989Wnk4=",
          "90: github.com/containerd/cgroups v1.1.0 h1:v8rEWFl6EoqHB+swVNjVoCJE8o3jX7e8nqBGPLaDFBM=",
          "91: github.com/containerd/cgroups/v3 v3.0.2 h1:f5WFqIVSgo5IZmtTT3qVBo6TzI1ON6sycSBKkymb9L0=",
          "92: github.com/containerd/cgroups/v3 v3.0.2/go.mod h1:JUgITrzdFqp42uI2ryGA+ge0ap/nxzYgkGmIcetmErE=",
          "",
          "[Removed Lines]",
          "88: github.com/compose-spec/compose-go/v2 v2.4.5-0.20241111154218-9d02caaf8465 h1:1PRX/3a/n4W2DrMJu4CV9OS8Z2eauOBLe0zOuSlrWDY=",
          "89: github.com/compose-spec/compose-go/v2 v2.4.5-0.20241111154218-9d02caaf8465/go.mod h1:lFN0DrMxIncJGYAXTfWuajfwj5haBJqrBkarHcnjJKc=",
          "",
          "[Added Lines]",
          "88: github.com/compose-spec/compose-go/v2 v2.4.5 h1:p4ih4Jb6VgGPLPxh3fSFVKAjFHtZd+7HVLCSFzcFx9Y=",
          "89: github.com/compose-spec/compose-go/v2 v2.4.5/go.mod h1:lFN0DrMxIncJGYAXTfWuajfwj5haBJqrBkarHcnjJKc=",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0aad32214061214bd02454ce681b7305fa6aa21b",
      "candidate_info": {
        "commit_hash": "0aad32214061214bd02454ce681b7305fa6aa21b",
        "repo": "docker/compose",
        "commit_url": "https://github.com/docker/compose/commit/0aad32214061214bd02454ce681b7305fa6aa21b",
        "files": [
          "cmd/compose/compose.go",
          "go.mod",
          "go.sum",
          "internal/tracing/attributes.go"
        ],
        "message": "use listeners to collect include metrics\n\nSigned-off-by: Nicolas De Loof <nicolas.deloof@gmail.com>",
        "before_after_code_files": [
          "cmd/compose/compose.go||cmd/compose/compose.go",
          "go.mod||go.mod",
          "go.sum||go.sum",
          "internal/tracing/attributes.go||internal/tracing/attributes.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ],
          "candidate": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ]
        }
      },
      "candidate_diff": {
        "cmd/compose/compose.go||cmd/compose/compose.go": [
          "File: cmd/compose/compose.go -> cmd/compose/compose.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:  \"github.com/compose-spec/compose-go/v2/cli\"",
          "31:  \"github.com/compose-spec/compose-go/v2/dotenv\"",
          "32:  \"github.com/compose-spec/compose-go/v2/types\"",
          "33:  composegoutils \"github.com/compose-spec/compose-go/v2/utils\"",
          "34:  \"github.com/docker/buildx/util/logutil\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32:  \"github.com/compose-spec/compose-go/v2/loader\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "147:    return err",
          "148:   }",
          "152:   return fn(ctx, project, args)",
          "153:  })",
          "",
          "[Removed Lines]",
          "150:   ctx = context.WithValue(ctx, tracing.Metrics{}, metrics)",
          "",
          "[Added Lines]",
          "151:   ctx = context.WithValue(ctx, tracing.MetricsKey{}, metrics)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "203: func (o *ProjectOptions) ToProject(ctx context.Context, dockerCli command.Cli, services []string, po ...cli.ProjectOptionsFn) (*types.Project, tracing.Metrics, error) {",
          "204:  var metrics tracing.Metrics",
          "207:  }",
          "209:  po = append(po, cli.WithContext(ctx))",
          "",
          "[Removed Lines]",
          "205:  if !o.Offline {",
          "206:   po = append(po, o.remoteLoaders(dockerCli)...)",
          "",
          "[Added Lines]",
          "207:  remotes := o.remoteLoaders(dockerCli)",
          "208:  for _, r := range remotes {",
          "209:   po = append(po, cli.WithResourceLoader(r))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "214:  }",
          "216:  options.WithListeners(func(event string, metadata map[string]any) {",
          "218:    metrics.CountExtends++",
          "219:   }",
          "220:  })",
          "221:  if o.Compatibility || utils.StringToBool(options.Environment[ComposeCompatibility]) {",
          "222:   api.Separator = \"_\"",
          "223:  }",
          "",
          "[Removed Lines]",
          "217:   if event == \"extends\" {",
          "",
          "[Added Lines]",
          "220:   switch event {",
          "221:   case \"extends\":",
          "223:   case \"include\":",
          "224:    paths := metadata[\"path\"].(types.StringList)",
          "225:    for _, path := range paths {",
          "226:     var isRemote bool",
          "227:     for _, r := range remotes {",
          "228:      if r.Accept(path) {",
          "229:       isRemote = true",
          "230:       break",
          "231:      }",
          "232:     }",
          "233:     if isRemote {",
          "234:      metrics.CountIncludesRemote++",
          "235:     } else {",
          "236:      metrics.CountIncludesLocal++",
          "237:     }",
          "238:    }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "257:  return project, metrics, err",
          "258: }",
          "261:  git := remote.NewGitRemoteLoader(o.Offline)",
          "262:  oci := remote.NewOCIRemoteLoader(dockerCli, o.Offline)",
          "264: }",
          "266: func (o *ProjectOptions) toProjectOptions(po ...cli.ProjectOptionsFn) (*cli.ProjectOptions, error) {",
          "",
          "[Removed Lines]",
          "260: func (o *ProjectOptions) remoteLoaders(dockerCli command.Cli) []cli.ProjectOptionsFn {",
          "263:  return []cli.ProjectOptionsFn{cli.WithResourceLoader(git), cli.WithResourceLoader(oci)}",
          "",
          "[Added Lines]",
          "281: func (o *ProjectOptions) remoteLoaders(dockerCli command.Cli) []loader.ResourceLoader {",
          "282:  if o.Offline {",
          "283:   return nil",
          "284:  }",
          "287:  return []loader.ResourceLoader{git, oci}",
          "",
          "---------------"
        ],
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "6:  github.com/AlecAivazis/survey/v2 v2.3.7",
          "7:  github.com/Microsoft/go-winio v0.6.1",
          "8:  github.com/buger/goterm v1.0.4",
          "10:  github.com/containerd/console v1.0.3",
          "11:  github.com/containerd/containerd v1.7.12",
          "12:  github.com/davecgh/go-spew v1.1.1",
          "",
          "[Removed Lines]",
          "9:  github.com/compose-spec/compose-go/v2 v2.0.0-rc.6",
          "",
          "[Added Lines]",
          "9:  github.com/compose-spec/compose-go/v2 v2.0.0-rc.7",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "86: github.com/cncf/xds/go v0.0.0-20230607035331-e9ce68804cb4/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=",
          "87: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb h1:EDmT6Q9Zs+SbUoc7Ik9EfrFqcylYqgPZ9ANSbTAntnE=",
          "88: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb/go.mod h1:ZjrT6AXHbDs86ZSdt/osfBi5qfexBrKUdONk989Wnk4=",
          "91: github.com/containerd/cgroups v1.1.0 h1:v8rEWFl6EoqHB+swVNjVoCJE8o3jX7e8nqBGPLaDFBM=",
          "92: github.com/containerd/cgroups v1.1.0/go.mod h1:6ppBcbh/NOOUU+dMKrykgaBnK9lCIBxHqJDGwsa1mIw=",
          "93: github.com/containerd/console v1.0.3 h1:lIr7SlA5PxZyMV30bDW0MGbiOPXwc63yRuCP0ARubLw=",
          "",
          "[Removed Lines]",
          "89: github.com/compose-spec/compose-go/v2 v2.0.0-rc.6 h1:sv9W3U0IEYqgGqTbSDpU2c8cttWQmlbJ0D6jdt//Dv8=",
          "90: github.com/compose-spec/compose-go/v2 v2.0.0-rc.6/go.mod h1:bEPizBkIojlQ20pi2vNluBa58tevvj0Y18oUSHPyfdc=",
          "",
          "[Added Lines]",
          "89: github.com/compose-spec/compose-go/v2 v2.0.0-rc.7 h1:koFIK+JwplWu1m/DscSO6MJw7hodaEHOaKQZPUSL4OY=",
          "90: github.com/compose-spec/compose-go/v2 v2.0.0-rc.7/go.mod h1:bEPizBkIojlQ20pi2vNluBa58tevvj0Y18oUSHPyfdc=",
          "",
          "---------------"
        ],
        "internal/tracing/attributes.go||internal/tracing/attributes.go": [
          "File: internal/tracing/attributes.go -> internal/tracing/attributes.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:  \"strings\"",
          "25:  \"time\"",
          "29:  \"github.com/compose-spec/compose-go/v2/types\"",
          "30:  moby \"github.com/docker/docker/api/types\"",
          "31:  \"go.opentelemetry.io/otel/attribute\"",
          "",
          "[Removed Lines]",
          "27:  \"github.com/docker/compose/v2/pkg/utils\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "37: type SpanOptions []trace.SpanStartEventOption",
          "38: type Metrics struct {",
          "40: }",
          "42: func (s SpanOptions) SpanStartOptions() []trace.SpanStartOption {",
          "",
          "[Removed Lines]",
          "39:  CountExtends int",
          "",
          "[Added Lines]",
          "37: type MetricsKey struct{}",
          "40:  CountExtends        int",
          "41:  CountIncludesLocal  int",
          "42:  CountIncludesRemote int",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "75:   attribute.StringSlice(\"project.secrets\", proj.SecretNames()),",
          "76:   attribute.StringSlice(\"project.configs\", proj.ConfigNames()),",
          "77:   attribute.StringSlice(\"project.extensions\", keys(proj.Extensions)),",
          "79:   attribute.StringSlice(\"project.services.active\", proj.ServiceNames()),",
          "80:   attribute.StringSlice(\"project.services.disabled\", proj.DisabledServiceNames()),",
          "81:   attribute.StringSlice(\"project.services.build\", proj.ServicesWithBuild()),",
          "",
          "[Removed Lines]",
          "78:   attribute.StringSlice(\"project.includes\", flattenIncludeReferences(proj.IncludeReferences)),",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "84:   attribute.StringSlice(\"project.services.capabilities.gpu\", gpu),",
          "85:   attribute.StringSlice(\"project.services.capabilities.tpu\", tpu),",
          "86:  }",
          "88:   attrs = append(attrs, attribute.Int(\"project.services.extends\", metrics.CountExtends))",
          "89:  }",
          "91:  if projHash, ok := projectHash(proj); ok {",
          "",
          "[Removed Lines]",
          "87:  if metrics, ok := ctx.Value(Metrics{}).(Metrics); ok {",
          "",
          "[Added Lines]",
          "89:  if metrics, ok := ctx.Value(MetricsKey{}).(Metrics); ok {",
          "91:   attrs = append(attrs, attribute.Int(\"project.includes.local\", metrics.CountIncludesLocal))",
          "92:   attrs = append(attrs, attribute.Int(\"project.includes.remote\", metrics.CountIncludesRemote))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "168:  return timeAttr(key, time.Unix(value, 0).UTC())",
          "169: }",
          "182: func projectHash(p *types.Project) (string, bool) {",
          "183:  if p == nil {",
          "",
          "[Removed Lines]",
          "171: func flattenIncludeReferences(includeRefs map[string][]types.IncludeConfig) []string {",
          "172:  ret := utils.NewSet[string]()",
          "173:  for _, included := range includeRefs {",
          "174:   for i := range included {",
          "175:    ret.AddAll(included[i].Path...)",
          "176:   }",
          "177:  }",
          "178:  return ret.Elements()",
          "179: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "82b41b9ebd7faadd4abbc44924dbc5c9f724e841",
      "candidate_info": {
        "commit_hash": "82b41b9ebd7faadd4abbc44924dbc5c9f724e841",
        "repo": "docker/compose",
        "commit_url": "https://github.com/docker/compose/commit/82b41b9ebd7faadd4abbc44924dbc5c9f724e841",
        "files": [
          "cmd/formatter/logs.go",
          "go.mod",
          "go.sum",
          "pkg/api/api.go",
          "pkg/compose/convergence.go",
          "pkg/compose/create.go",
          "pkg/compose/down.go",
          "pkg/compose/hook.go",
          "pkg/compose/printer.go",
          "pkg/compose/start.go",
          "pkg/compose/stop.go"
        ],
        "message": "introduce service hooks\n\nSigned-off-by: Nicolas De Loof <nicolas.deloof@gmail.com>",
        "before_after_code_files": [
          "cmd/formatter/logs.go||cmd/formatter/logs.go",
          "go.mod||go.mod",
          "go.sum||go.sum",
          "pkg/api/api.go||pkg/api/api.go",
          "pkg/compose/convergence.go||pkg/compose/convergence.go",
          "pkg/compose/create.go||pkg/compose/create.go",
          "pkg/compose/down.go||pkg/compose/down.go",
          "pkg/compose/hook.go||pkg/compose/hook.go",
          "pkg/compose/printer.go||pkg/compose/printer.go",
          "pkg/compose/start.go||pkg/compose/start.go",
          "pkg/compose/stop.go||pkg/compose/stop.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod",
            "go.sum||go.sum",
            "pkg/compose/create.go||pkg/compose/create.go"
          ],
          "candidate": [
            "go.mod||go.mod",
            "go.sum||go.sum",
            "pkg/compose/create.go||pkg/compose/create.go"
          ]
        }
      },
      "candidate_diff": {
        "cmd/formatter/logs.go||cmd/formatter/logs.go": [
          "File: cmd/formatter/logs.go -> cmd/formatter/logs.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "61: }",
          "63: func (l *logConsumer) register(name string) *presenter {",
          "70:   }",
          "75:  }",
          "76:  l.presenters.Store(name, p)",
          "77:  if l.prefix {",
          "79:   l.presenters.Range(func(key, value interface{}) bool {",
          "80:    p := value.(*presenter)",
          "81:    p.setPrefix(l.width)",
          "",
          "[Removed Lines]",
          "64:  cf := monochrome",
          "65:  if l.color {",
          "66:   if name == api.WatchLogger {",
          "67:    cf = makeColorFunc(\"92\")",
          "68:   } else {",
          "69:    cf = nextColor()",
          "71:  }",
          "72:  p := &presenter{",
          "73:   colors: cf,",
          "74:   name:   name,",
          "78:   l.computeWidth()",
          "",
          "[Added Lines]",
          "64:  var p *presenter",
          "65:  root, _, found := strings.Cut(name, \" \")",
          "66:  if found {",
          "67:   parent := l.getPresenter(root)",
          "68:   p = &presenter{",
          "69:    colors: parent.colors,",
          "70:    name:   name,",
          "71:    prefix: parent.prefix,",
          "72:   }",
          "73:  } else {",
          "74:   cf := monochrome",
          "75:   if l.color {",
          "76:    if name == api.WatchLogger {",
          "77:     cf = makeColorFunc(\"92\")",
          "78:    } else {",
          "79:     cf = nextColor()",
          "80:    }",
          "81:   }",
          "82:   p = &presenter{",
          "83:    colors: cf,",
          "84:    name:   name,",
          "88:  l.computeWidth()",
          "",
          "---------------"
        ],
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  github.com/Microsoft/go-winio v0.6.2",
          "8:  github.com/acarl005/stripansi v0.0.0-20180116102854-5a71ef0e047d",
          "9:  github.com/buger/goterm v1.0.4",
          "11:  github.com/containerd/containerd v1.7.22",
          "12:  github.com/containerd/platforms v0.2.1",
          "13:  github.com/davecgh/go-spew v1.1.1",
          "",
          "[Removed Lines]",
          "10:  github.com/compose-spec/compose-go/v2 v2.2.1-0.20241003145835-48d3a5bbf4ea",
          "",
          "[Added Lines]",
          "10:  github.com/compose-spec/compose-go/v2 v2.2.1-0.20241007090213-a59035ad2bf4",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "85: github.com/cncf/xds/go v0.0.0-20231128003011-0fa0005c9caa/go.mod h1:x/1Gn8zydmfq8dk6e9PdstVsDgu9RuyIIJqAaF//0IM=",
          "86: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb h1:EDmT6Q9Zs+SbUoc7Ik9EfrFqcylYqgPZ9ANSbTAntnE=",
          "87: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb/go.mod h1:ZjrT6AXHbDs86ZSdt/osfBi5qfexBrKUdONk989Wnk4=",
          "90: github.com/containerd/cgroups v1.1.0 h1:v8rEWFl6EoqHB+swVNjVoCJE8o3jX7e8nqBGPLaDFBM=",
          "91: github.com/containerd/cgroups v1.1.0/go.mod h1:6ppBcbh/NOOUU+dMKrykgaBnK9lCIBxHqJDGwsa1mIw=",
          "92: github.com/containerd/console v1.0.4 h1:F2g4+oChYvBTsASRTz8NP6iIAi97J3TtSAsLbIFn4ro=",
          "",
          "[Removed Lines]",
          "88: github.com/compose-spec/compose-go/v2 v2.2.1-0.20241003145835-48d3a5bbf4ea h1:BU/Sx/dAU6f64sDad58igm4OwwI1Z1uvV5E0ZKv4CZ8=",
          "89: github.com/compose-spec/compose-go/v2 v2.2.1-0.20241003145835-48d3a5bbf4ea/go.mod h1:lFN0DrMxIncJGYAXTfWuajfwj5haBJqrBkarHcnjJKc=",
          "",
          "[Added Lines]",
          "88: github.com/compose-spec/compose-go/v2 v2.2.1-0.20241007090213-a59035ad2bf4 h1:2FWtPQWe/tkeGuwxk5x03luRw5pzPhPCRfzfeVw56vo=",
          "89: github.com/compose-spec/compose-go/v2 v2.2.1-0.20241007090213-a59035ad2bf4/go.mod h1:lFN0DrMxIncJGYAXTfWuajfwj5haBJqrBkarHcnjJKc=",
          "",
          "---------------"
        ],
        "pkg/api/api.go||pkg/api/api.go": [
          "File: pkg/api/api.go -> pkg/api/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "637:  ContainerEventExit",
          "639:  UserCancel",
          "640: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "641:  HookEventLog",
          "",
          "---------------"
        ],
        "pkg/compose/convergence.go||pkg/compose/convergence.go": [
          "File: pkg/compose/convergence.go -> pkg/compose/convergence.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "149:    container := container",
          "150:    traceOpts := append(tracing.ServiceOptions(service), tracing.ContainerOptions(container)...)",
          "151:    eg.Go(tracing.SpanWrapFuncForErrGroup(ctx, \"service/scale/down\", traceOpts, func(ctx context.Context) error {",
          "153:    }))",
          "154:    continue",
          "155:   }",
          "",
          "[Removed Lines]",
          "152:     return c.service.stopAndRemoveContainer(ctx, container, timeout, false)",
          "",
          "[Added Lines]",
          "152:     return c.service.stopAndRemoveContainer(ctx, container, &service, timeout, false)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "224:  dependents := project.GetDependentsForService(service)",
          "225:  for _, name := range dependents {",
          "226:   dependents := c.getObservedState(name)",
          "228:   if err != nil {",
          "229:    return err",
          "230:   }",
          "",
          "[Removed Lines]",
          "227:   err := c.service.stopContainers(ctx, w, dependents, nil)",
          "",
          "[Added Lines]",
          "227:   err := c.service.stopContainers(ctx, w, &service, dependents, nil)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "769:  return false, 0, nil",
          "770: }",
          "773:  if service.Deploy != nil && service.Deploy.Replicas != nil && *service.Deploy.Replicas == 0 {",
          "774:   return nil",
          "775:  }",
          "",
          "[Removed Lines]",
          "772: func (s *composeService) startService(ctx context.Context, project *types.Project, service types.ServiceConfig, containers Containers, timeout time.Duration) error {",
          "",
          "[Added Lines]",
          "772: func (s *composeService) startService(ctx context.Context,",
          "773:  project *types.Project, service types.ServiceConfig,",
          "774:  containers Containers, listener api.ContainerEventListener,",
          "775:  timeout time.Duration) error {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "793:   }",
          "794:   eventName := getContainerProgressName(container)",
          "795:   w.Event(progress.StartingEvent(eventName))",
          "797:   if err != nil {",
          "798:    return err",
          "799:   }",
          "800:   w.Event(progress.StartedEvent(eventName))",
          "801:  }",
          "802:  return nil",
          "",
          "[Removed Lines]",
          "796:   err := s.apiClient().ContainerStart(ctx, container.ID, containerType.StartOptions{})",
          "",
          "[Added Lines]",
          "799:   err = s.apiClient().ContainerStart(ctx, container.ID, containerType.StartOptions{})",
          "804:   for _, hook := range service.PostStart {",
          "805:    err = s.runHook(ctx, container, service, hook, listener)",
          "806:    if err != nil {",
          "807:     return err",
          "808:    }",
          "809:   }",
          "",
          "---------------"
        ],
        "pkg/compose/create.go||pkg/compose/create.go": [
          "File: pkg/compose/create.go -> pkg/compose/create.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "104:  orphans := observedState.filter(isOrphaned(project))",
          "105:  if len(orphans) > 0 && !options.IgnoreOrphans {",
          "106:   if options.RemoveOrphans {",
          "108:    if err != nil {",
          "109:     return err",
          "110:    }",
          "",
          "[Removed Lines]",
          "107:    err := s.removeContainers(ctx, orphans, nil, false)",
          "",
          "[Added Lines]",
          "107:    err := s.removeContainers(ctx, orphans, nil, nil, false)",
          "",
          "---------------"
        ],
        "pkg/compose/down.go||pkg/compose/down.go": [
          "File: pkg/compose/down.go -> pkg/compose/down.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "86:  err = InReverseDependencyOrder(ctx, project, func(c context.Context, service string) error {",
          "87:   serviceContainers := containers.filter(isService(service))",
          "89:   return err",
          "90:  }, WithRootNodesAndDown(options.Services))",
          "91:  if err != nil {",
          "",
          "[Removed Lines]",
          "88:   err := s.removeContainers(ctx, serviceContainers, options.Timeout, options.Volumes)",
          "",
          "[Added Lines]",
          "88:   serv := project.Services[service]",
          "89:   err := s.removeContainers(ctx, serviceContainers, &serv, options.Timeout, options.Volumes)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "95:  orphans := containers.filter(isOrphaned(project))",
          "96:  if options.RemoveOrphans && len(orphans) > 0 {",
          "98:   if err != nil {",
          "99:    return err",
          "100:   }",
          "",
          "[Removed Lines]",
          "97:   err := s.removeContainers(ctx, orphans, options.Timeout, false)",
          "",
          "[Added Lines]",
          "98:   err := s.removeContainers(ctx, orphans, nil, options.Timeout, false)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "296:  return err",
          "297: }",
          "300:  eventName := getContainerProgressName(container)",
          "301:  w.Event(progress.StoppingEvent(eventName))",
          "302:  timeoutInSecond := utils.DurationSecondToInt(timeout)",
          "303:  err := s.apiClient().ContainerStop(ctx, container.ID, containerType.StopOptions{Timeout: timeoutInSecond})",
          "304:  if err != nil {",
          "",
          "[Removed Lines]",
          "299: func (s *composeService) stopContainer(ctx context.Context, w progress.Writer, container moby.Container, timeout *time.Duration) error {",
          "",
          "[Added Lines]",
          "300: func (s *composeService) stopContainer(ctx context.Context, w progress.Writer, service *types.ServiceConfig, container moby.Container, timeout *time.Duration) error {",
          "304:  if service != nil {",
          "305:   for _, hook := range service.PreStop {",
          "306:    err := s.runHook(ctx, container, *service, hook, nil)",
          "307:    if err != nil {",
          "308:     return err",
          "309:    }",
          "310:   }",
          "311:  }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "309:  return nil",
          "310: }",
          "313:  eg, ctx := errgroup.WithContext(ctx)",
          "314:  for _, container := range containers {",
          "315:   container := container",
          "316:   eg.Go(func() error {",
          "318:   })",
          "319:  }",
          "320:  return eg.Wait()",
          "321: }",
          "324:  eg, _ := errgroup.WithContext(ctx)",
          "325:  for _, container := range containers {",
          "326:   container := container",
          "327:   eg.Go(func() error {",
          "329:   })",
          "330:  }",
          "331:  return eg.Wait()",
          "332: }",
          "335:  w := progress.ContextWriter(ctx)",
          "336:  eventName := getContainerProgressName(container)",
          "338:  if errdefs.IsNotFound(err) {",
          "339:   w.Event(progress.RemovedEvent(eventName))",
          "340:   return nil",
          "",
          "[Removed Lines]",
          "312: func (s *composeService) stopContainers(ctx context.Context, w progress.Writer, containers []moby.Container, timeout *time.Duration) error {",
          "317:    return s.stopContainer(ctx, w, container, timeout)",
          "323: func (s *composeService) removeContainers(ctx context.Context, containers []moby.Container, timeout *time.Duration, volumes bool) error {",
          "328:    return s.stopAndRemoveContainer(ctx, container, timeout, volumes)",
          "334: func (s *composeService) stopAndRemoveContainer(ctx context.Context, container moby.Container, timeout *time.Duration, volumes bool) error {",
          "337:  err := s.stopContainer(ctx, w, container, timeout)",
          "",
          "[Added Lines]",
          "323: func (s *composeService) stopContainers(ctx context.Context, w progress.Writer, serv *types.ServiceConfig, containers []moby.Container, timeout *time.Duration) error {",
          "328:    return s.stopContainer(ctx, w, serv, container, timeout)",
          "334: func (s *composeService) removeContainers(ctx context.Context, containers []moby.Container, service *types.ServiceConfig, timeout *time.Duration, volumes bool) error {",
          "339:    return s.stopAndRemoveContainer(ctx, container, service, timeout, volumes)",
          "345: func (s *composeService) stopAndRemoveContainer(ctx context.Context, container moby.Container, service *types.ServiceConfig, timeout *time.Duration, volumes bool) error {",
          "348:  err := s.stopContainer(ctx, w, service, container, timeout)",
          "",
          "---------------"
        ],
        "pkg/compose/hook.go||pkg/compose/hook.go": [
          "File: pkg/compose/hook.go -> pkg/compose/hook.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2:    Copyright 2020 Docker Compose CLI authors",
          "4:    Licensed under the Apache License, Version 2.0 (the \"License\");",
          "5:    you may not use this file except in compliance with the License.",
          "6:    You may obtain a copy of the License at",
          "8:        http://www.apache.org/licenses/LICENSE-2.0",
          "10:    Unless required by applicable law or agreed to in writing, software",
          "11:    distributed under the License is distributed on an \"AS IS\" BASIS,",
          "12:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
          "13:    See the License for the specific language governing permissions and",
          "14:    limitations under the License.",
          "17: package compose",
          "19: import (",
          "20:  \"context\"",
          "21:  \"fmt\"",
          "22:  \"io\"",
          "23:  \"time\"",
          "25:  \"github.com/compose-spec/compose-go/v2/types\"",
          "26:  \"github.com/docker/compose/v2/pkg/api\"",
          "27:  \"github.com/docker/compose/v2/pkg/utils\"",
          "28:  moby \"github.com/docker/docker/api/types\"",
          "29:  containerType \"github.com/docker/docker/api/types/container\"",
          "30:  \"github.com/docker/docker/pkg/stdcopy\"",
          "31: )",
          "33: func (s composeService) runHook(ctx context.Context, container moby.Container, service types.ServiceConfig, hook types.ServiceHook, listener api.ContainerEventListener) error {",
          "34:  wOut := utils.GetWriter(func(line string) {",
          "35:   listener(api.ContainerEvent{",
          "36:    Type:      api.HookEventLog,",
          "37:    Container: getContainerNameWithoutProject(container) + \" ->\",",
          "38:    ID:        container.ID,",
          "39:    Service:   service.Name,",
          "40:    Line:      line,",
          "41:   })",
          "42:  })",
          "43:  defer wOut.Close() //nolint:errcheck",
          "45:  detached := listener == nil",
          "46:  exec, err := s.apiClient().ContainerExecCreate(ctx, container.ID, containerType.ExecOptions{",
          "47:   User:         hook.User,",
          "48:   Privileged:   hook.Privileged,",
          "49:   Env:          ToMobyEnv(hook.Environment),",
          "50:   WorkingDir:   hook.WorkingDir,",
          "51:   Cmd:          hook.Command,",
          "52:   Detach:       detached,",
          "53:   AttachStdout: !detached,",
          "54:   AttachStderr: !detached,",
          "55:  })",
          "56:  if err != nil {",
          "57:   return err",
          "58:  }",
          "60:  if detached {",
          "61:   return s.runWaitExec(ctx, exec, service, listener)",
          "62:  }",
          "64:  height, width := s.stdout().GetTtySize()",
          "65:  consoleSize := &[2]uint{height, width}",
          "66:  attach, err := s.apiClient().ContainerExecAttach(ctx, exec.ID, containerType.ExecAttachOptions{",
          "67:   Tty:         service.Tty,",
          "68:   ConsoleSize: consoleSize,",
          "69:  })",
          "70:  if err != nil {",
          "71:   return err",
          "72:  }",
          "73:  defer attach.Close()",
          "75:  if service.Tty {",
          "76:   _, err = io.Copy(wOut, attach.Reader)",
          "77:  } else {",
          "78:   _, err = stdcopy.StdCopy(wOut, wOut, attach.Reader)",
          "79:  }",
          "80:  if err != nil {",
          "81:   return err",
          "82:  }",
          "84:  inspected, err := s.apiClient().ContainerExecInspect(ctx, exec.ID)",
          "85:  if err != nil {",
          "86:   return err",
          "87:  }",
          "88:  if inspected.ExitCode != 0 {",
          "89:   return fmt.Errorf(\"%s hook exited with status %d\", service.Name, inspected.ExitCode)",
          "90:  }",
          "91:  return nil",
          "92: }",
          "94: func (s composeService) runWaitExec(ctx context.Context, exec moby.IDResponse, service types.ServiceConfig, listener api.ContainerEventListener) error {",
          "95:  err := s.apiClient().ContainerExecStart(ctx, exec.ID, containerType.ExecStartOptions{",
          "96:   Detach: listener == nil,",
          "97:   Tty:    service.Tty,",
          "98:  })",
          "99:  if err != nil {",
          "100:   return nil",
          "101:  }",
          "104:  tick := time.NewTicker(100 * time.Millisecond)",
          "105:  for {",
          "106:   select {",
          "107:   case <-ctx.Done():",
          "108:    return nil",
          "109:   case <-tick.C:",
          "110:    inspect, err := s.apiClient().ContainerExecInspect(ctx, exec.ID)",
          "111:    if err != nil {",
          "112:     return nil",
          "113:    }",
          "114:    if !inspect.Running {",
          "115:     if inspect.ExitCode != 0 {",
          "116:      return fmt.Errorf(\"%s hook exited with status %d\", service.Name, inspect.ExitCode)",
          "117:     }",
          "118:     return nil",
          "119:    }",
          "120:   }",
          "121:  }",
          "122: }",
          "",
          "---------------"
        ],
        "pkg/compose/printer.go||pkg/compose/printer.go": [
          "File: pkg/compose/printer.go -> pkg/compose/printer.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "149:      return exitCode, nil",
          "150:     }",
          "152:     if !aborting {",
          "153:      p.consumer.Log(container, event.Line)",
          "154:     }",
          "",
          "[Removed Lines]",
          "151:    case api.ContainerEventLog:",
          "",
          "[Added Lines]",
          "151:    case api.ContainerEventLog, api.HookEventLog:",
          "",
          "---------------"
        ],
        "pkg/compose/start.go||pkg/compose/start.go": [
          "File: pkg/compose/start.go -> pkg/compose/start.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "129:    return err",
          "130:   }",
          "133:  })",
          "134:  if err != nil {",
          "135:   return err",
          "",
          "[Removed Lines]",
          "132:   return s.startService(ctx, project, service, containers, options.WaitTimeout)",
          "",
          "[Added Lines]",
          "132:   return s.startService(ctx, project, service, containers, listener, options.WaitTimeout)",
          "",
          "---------------"
        ],
        "pkg/compose/stop.go||pkg/compose/stop.go": [
          "File: pkg/compose/stop.go -> pkg/compose/stop.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:   if !utils.StringContains(options.Services, service) {",
          "55:    return nil",
          "56:   }",
          "58:  })",
          "59: }",
          "",
          "[Removed Lines]",
          "57:   return s.stopContainers(ctx, w, containers.filter(isService(service)).filter(isNotOneOff), options.Timeout)",
          "",
          "[Added Lines]",
          "57:   serv := project.Services[service]",
          "58:   return s.stopContainers(ctx, w, &serv, containers.filter(isService(service)).filter(isNotOneOff), options.Timeout)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "01e83defc2e7c59c765be89509ce0f736dfcfc43",
      "candidate_info": {
        "commit_hash": "01e83defc2e7c59c765be89509ce0f736dfcfc43",
        "repo": "docker/compose",
        "commit_url": "https://github.com/docker/compose/commit/01e83defc2e7c59c765be89509ce0f736dfcfc43",
        "files": [
          "go.mod",
          "go.sum",
          "pkg/compose/build.go",
          "pkg/compose/create.go",
          "pkg/compose/pull.go",
          "pkg/e2e/fixtures/volumes/compose.yaml",
          "pkg/e2e/volumes_test.go"
        ],
        "message": "introduce volume.type=image\n\nSigned-off-by: Nicolas De Loof <nicolas.deloof@gmail.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum",
          "pkg/compose/build.go||pkg/compose/build.go",
          "pkg/compose/create.go||pkg/compose/create.go",
          "pkg/compose/pull.go||pkg/compose/pull.go",
          "pkg/e2e/volumes_test.go||pkg/e2e/volumes_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod",
            "go.sum||go.sum",
            "pkg/compose/create.go||pkg/compose/create.go"
          ],
          "candidate": [
            "go.mod||go.mod",
            "go.sum||go.sum",
            "pkg/compose/create.go||pkg/compose/create.go"
          ]
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:  github.com/Microsoft/go-winio v0.6.2",
          "9:  github.com/acarl005/stripansi v0.0.0-20180116102854-5a71ef0e047d",
          "10:  github.com/buger/goterm v1.0.4",
          "12:  github.com/containerd/containerd/v2 v2.0.4",
          "13:  github.com/containerd/platforms v1.0.0-rc.1",
          "14:  github.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc",
          "",
          "[Removed Lines]",
          "11:  github.com/compose-spec/compose-go/v2 v2.5.0",
          "",
          "[Added Lines]",
          "11:  github.com/compose-spec/compose-go/v2 v2.5.1-0.20250409070949-8e1a035095ca",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "206:  sigs.k8s.io/structured-merge-diff/v4 v4.4.1 // indirect",
          "207:  sigs.k8s.io/yaml v1.4.0 // indirect",
          "208: )",
          "",
          "[Removed Lines]",
          "210: replace github.com/compose-spec/compose-go/v2 => github.com/glours/compose-go/v2 v2.0.0-20250403082600-80aa75f06535",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "83: github.com/cloudflare/cfssl v0.0.0-20180223231731-4e2dcbde5004/go.mod h1:yMWuSON2oQp+43nFtAV/uvKQIFpSPerB57DCt9t8sSA=",
          "84: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb h1:EDmT6Q9Zs+SbUoc7Ik9EfrFqcylYqgPZ9ANSbTAntnE=",
          "85: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb/go.mod h1:ZjrT6AXHbDs86ZSdt/osfBi5qfexBrKUdONk989Wnk4=",
          "86: github.com/containerd/cgroups/v3 v3.0.5 h1:44na7Ud+VwyE7LIoJ8JTNQOa549a8543BmzaJHo6Bzo=",
          "87: github.com/containerd/cgroups/v3 v3.0.5/go.mod h1:SA5DLYnXO8pTGYiAHXz94qvLQTKfVM5GEVisn4jpins=",
          "88: github.com/containerd/console v1.0.4 h1:F2g4+oChYvBTsASRTz8NP6iIAi97J3TtSAsLbIFn4ro=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "86: github.com/compose-spec/compose-go/v2 v2.5.1-0.20250409070949-8e1a035095ca h1:4dH4DudeDunWTYetcJxQE65osreQKvaLtFLdl9CcqME=",
          "87: github.com/compose-spec/compose-go/v2 v2.5.1-0.20250409070949-8e1a035095ca/go.mod h1:vPlkN0i+0LjLf9rv52lodNMUTJF5YHVfHVGLLIP67NA=",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "167: github.com/fvbommel/sortorder v1.1.0/go.mod h1:uk88iVf1ovNn1iLfgUVU2F9o5eO30ui720w+kxuqRs0=",
          "168: github.com/fxamacker/cbor/v2 v2.7.0 h1:iM5WgngdRBanHcxugY4JySA0nk1wZorNOpTgCMedv5E=",
          "169: github.com/fxamacker/cbor/v2 v2.7.0/go.mod h1:pxXPTn3joSm21Gbwsv0w9OSA2y1HFR9qXEeXQVeNoDQ=",
          "172: github.com/go-kit/kit v0.8.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=",
          "173: github.com/go-logfmt/logfmt v0.3.0/go.mod h1:Qt1PoO58o5twSAckw1HlFXLmHsOX5/0LbT9GBnD5lWE=",
          "174: github.com/go-logfmt/logfmt v0.4.0/go.mod h1:3RMwSq7FuexP4Kalkev3ejPJsZTpXXBr9+V4qmtdjCk=",
          "",
          "[Removed Lines]",
          "170: github.com/glours/compose-go/v2 v2.0.0-20250403082600-80aa75f06535 h1:S/P6v3QxsMpkKn+2OSMPNkfSkadSjSHoMGAc/eBZgMU=",
          "171: github.com/glours/compose-go/v2 v2.0.0-20250403082600-80aa75f06535/go.mod h1:vPlkN0i+0LjLf9rv52lodNMUTJF5YHVfHVGLLIP67NA=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "pkg/compose/build.go||pkg/compose/build.go": [
          "File: pkg/compose/build.go -> pkg/compose/build.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "318: }",
          "320: func (s *composeService) getLocalImagesDigests(ctx context.Context, project *types.Project) (map[string]api.ImageSummary, error) {",
          "322:  for _, s := range project.Services {",
          "323:   imgName := api.GetImageNameOrDefault(s, project.Name)",
          "326:   }",
          "327:  }",
          "329:  if err != nil {",
          "330:   return nil, err",
          "331:  }",
          "",
          "[Removed Lines]",
          "321:  var imageNames []string",
          "324:   if !utils.StringContains(imageNames, imgName) {",
          "325:    imageNames = append(imageNames, imgName)",
          "328:  imgs, err := s.getImageSummaries(ctx, imageNames)",
          "",
          "[Added Lines]",
          "321:  imageNames := utils.Set[string]{}",
          "324:   imageNames.Add(imgName)",
          "325:   for _, volume := range s.Volumes {",
          "326:    if volume.Type == types.VolumeTypeImage {",
          "327:     imageNames.Add(volume.Source)",
          "328:    }",
          "331:  imgs, err := s.getImageSummaries(ctx, imageNames.Elements())",
          "",
          "---------------"
        ],
        "pkg/compose/create.go||pkg/compose/create.go": [
          "File: pkg/compose/create.go -> pkg/compose/create.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "871:     }",
          "872:    }",
          "873:   }",
          "874:   mounts = append(mounts, m)",
          "875:  }",
          "876:  return binds, mounts, nil",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "874:   if m.Type == mount.TypeImage {",
          "875:    version, err := s.RuntimeVersion(ctx)",
          "876:    if err != nil {",
          "877:     return nil, nil, err",
          "878:    }",
          "879:    if versions.LessThan(version, \"1.48\") {",
          "880:     return nil, nil, fmt.Errorf(\"volume with type=image require Docker Engine v28 or later\")",
          "881:    }",
          "882:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1125:   }",
          "1126:  }",
          "1130:  if bind != nil {",
          "1131:   volume.Type = types.VolumeTypeBind",
          "",
          "[Removed Lines]",
          "1128:  bind, vol, tmpfs := buildMountOptions(volume)",
          "",
          "[Added Lines]",
          "1137:  bind, vol, tmpfs, img := buildMountOptions(volume)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1140:   BindOptions:   bind,",
          "1141:   VolumeOptions: vol,",
          "1142:   TmpfsOptions:  tmpfs,",
          "1143:  }, nil",
          "1144: }",
          "1147:  switch volume.Type {",
          "1148:  case \"bind\":",
          "1156:  case \"volume\":",
          "1164:  case \"tmpfs\":",
          "1172:  }",
          "1174: }",
          "1176: func buildBindOption(bind *types.ServiceVolumeBind) *mount.BindOptions {",
          "",
          "[Removed Lines]",
          "1146: func buildMountOptions(volume types.ServiceVolumeConfig) (*mount.BindOptions, *mount.VolumeOptions, *mount.TmpfsOptions) {",
          "1149:   if volume.Volume != nil {",
          "1150:    logrus.Warnf(\"mount of type `bind` should not define `volume` option\")",
          "1151:   }",
          "1152:   if volume.Tmpfs != nil {",
          "1153:    logrus.Warnf(\"mount of type `bind` should not define `tmpfs` option\")",
          "1154:   }",
          "1155:   return buildBindOption(volume.Bind), nil, nil",
          "1157:   if volume.Bind != nil {",
          "1158:    logrus.Warnf(\"mount of type `volume` should not define `bind` option\")",
          "1159:   }",
          "1160:   if volume.Tmpfs != nil {",
          "1161:    logrus.Warnf(\"mount of type `volume` should not define `tmpfs` option\")",
          "1162:   }",
          "1163:   return nil, buildVolumeOptions(volume.Volume), nil",
          "1165:   if volume.Bind != nil {",
          "1166:    logrus.Warnf(\"mount of type `tmpfs` should not define `bind` option\")",
          "1167:   }",
          "1168:   if volume.Volume != nil {",
          "1169:    logrus.Warnf(\"mount of type `tmpfs` should not define `volume` option\")",
          "1170:   }",
          "1171:   return nil, nil, buildTmpfsOptions(volume.Tmpfs)",
          "1173:  return nil, nil, nil",
          "",
          "[Added Lines]",
          "1152:   ImageOptions:  img,",
          "1156: func buildMountOptions(volume types.ServiceVolumeConfig) (*mount.BindOptions, *mount.VolumeOptions, *mount.TmpfsOptions, *mount.ImageOptions) {",
          "1157:  if volume.Type != types.VolumeTypeBind && volume.Bind != nil {",
          "1158:   logrus.Warnf(\"mount of type `%s` should not define `bind` option\", volume.Type)",
          "1159:  }",
          "1160:  if volume.Type != types.VolumeTypeVolume && volume.Volume != nil {",
          "1161:   logrus.Warnf(\"mount of type `%s` should not define `volume` option\", volume.Type)",
          "1162:  }",
          "1163:  if volume.Type != types.VolumeTypeTmpfs && volume.Tmpfs != nil {",
          "1164:   logrus.Warnf(\"mount of type `%s` should not define `tmpfs` option\", volume.Type)",
          "1165:  }",
          "1166:  if volume.Type != types.VolumeTypeImage && volume.Image != nil {",
          "1167:   logrus.Warnf(\"mount of type `%s` should not define `image` option\", volume.Type)",
          "1168:  }",
          "1172:   return buildBindOption(volume.Bind), nil, nil, nil",
          "1174:   return nil, buildVolumeOptions(volume.Volume), nil, nil",
          "1176:   return nil, nil, buildTmpfsOptions(volume.Tmpfs), nil",
          "1177:  case \"image\":",
          "1178:   return nil, nil, nil, buildImageOptions(volume.Image)",
          "1180:  return nil, nil, nil, nil",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1199:  return &mount.VolumeOptions{",
          "1200:   NoCopy:  vol.NoCopy,",
          "1201:   Subpath: vol.Subpath,",
          "1204:  }",
          "1205: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1209:   Labels:  vol.Labels,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1214:  }",
          "1215: }",
          "1217: func (s *composeService) ensureNetwork(ctx context.Context, project *types.Project, name string, n *types.NetworkConfig) (string, error) {",
          "1218:  if n.External {",
          "1219:   return s.resolveExternalNetwork(ctx, n)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1224: func buildImageOptions(image *types.ServiceVolumeImage) *mount.ImageOptions {",
          "1225:  if image == nil {",
          "1226:   return nil",
          "1227:  }",
          "1228:  return &mount.ImageOptions{",
          "1229:   Subpath: image.SubPath,",
          "1230:  }",
          "1231: }",
          "",
          "---------------"
        ],
        "pkg/compose/pull.go||pkg/compose/pull.go": [
          "File: pkg/compose/pull.go -> pkg/compose/pull.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "290: }",
          "292: func (s *composeService) pullRequiredImages(ctx context.Context, project *types.Project, images map[string]api.ImageSummary, quietPull bool) error {",
          "295:   pull, err := mustPull(service, images)",
          "296:   if err != nil {",
          "297:    return err",
          "298:   }",
          "299:   if pull {",
          "301:   }",
          "302:  }",
          "303:  if len(needPull) == 0 {",
          "304:   return nil",
          "",
          "[Removed Lines]",
          "293:  var needPull []types.ServiceConfig",
          "294:  for _, service := range project.Services {",
          "300:    needPull = append(needPull, service)",
          "",
          "[Added Lines]",
          "293:  needPull := map[string]types.ServiceConfig{}",
          "294:  for name, service := range project.Services {",
          "300:    needPull[name] = service",
          "301:   }",
          "302:   for i, vol := range service.Volumes {",
          "303:    if vol.Type == types.VolumeTypeImage {",
          "304:     if _, ok := images[vol.Source]; !ok {",
          "306:      n := fmt.Sprintf(\"%s:volume %d\", name, i)",
          "307:      needPull[n] = types.ServiceConfig{",
          "308:       Name:  n,",
          "309:       Image: vol.Source,",
          "310:      }",
          "311:     }",
          "312:    }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "308:   w := progress.ContextWriter(ctx)",
          "309:   eg, ctx := errgroup.WithContext(ctx)",
          "310:   eg.SetLimit(s.maxConcurrency)",
          "313:    eg.Go(func() error {",
          "314:     id, err := s.pullServiceImage(ctx, service, s.configFile(), w, quietPull, project.Environment[\"DOCKER_DEFAULT_PLATFORM\"])",
          "316:      ID:          id,",
          "317:      Repository:  service.Image,",
          "318:      LastTagTime: time.Now(),",
          "",
          "[Removed Lines]",
          "311:   pulledImages := make([]api.ImageSummary, len(needPull))",
          "312:   for i, service := range needPull {",
          "315:     pulledImages[i] = api.ImageSummary{",
          "",
          "[Added Lines]",
          "324:   pulledImages := map[string]api.ImageSummary{}",
          "325:   for name, service := range needPull {",
          "328:     pulledImages[name] = api.ImageSummary{",
          "",
          "---------------"
        ],
        "pkg/e2e/volumes_test.go||pkg/e2e/volumes_test.go": [
          "File: pkg/e2e/volumes_test.go -> pkg/e2e/volumes_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "174:  res := c.RunDockerComposeCmd(t, \"-f\", \"./fixtures/recreate-volumes/bind.yaml\", \"--project-name\", projectName, \"up\", \"-d\")",
          "175:  assert.Check(t, !strings.Contains(res.Combined(), \"Recreated\"))",
          "176: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "178: func TestImageVolume(t *testing.T) {",
          "179:  c := NewCLI(t)",
          "180:  const projectName = \"compose-e2e-image-volume\"",
          "181:  t.Cleanup(func() {",
          "182:   c.cleanupWithDown(t, projectName)",
          "183:  })",
          "185:  version := c.RunDockerCmd(t, \"version\", \"-f\", \"{{.Server.Version}}\")",
          "186:  major, _, found := strings.Cut(version.Combined(), \".\")",
          "187:  assert.Assert(t, found)",
          "188:  if major == \"26\" || major == \"27\" {",
          "189:   t.Skip(\"Skipping test due to docker version < 28\")",
          "190:  }",
          "192:  res := c.RunDockerComposeCmd(t, \"-f\", \"./fixtures/volumes/compose.yaml\", \"--project-name\", projectName, \"up\", \"with_image\")",
          "193:  out := res.Combined()",
          "194:  assert.Check(t, strings.Contains(out, \"index.html\"))",
          "195: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}