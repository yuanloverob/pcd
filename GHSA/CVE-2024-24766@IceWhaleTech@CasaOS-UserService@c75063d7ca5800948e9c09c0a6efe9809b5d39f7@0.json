{
  "cve_id": "CVE-2024-24766",
  "cve_desc": "CasaOS-UserService provides user management functionalities to CasaOS. Starting in version 0.4.4.3 and prior to version 0.4.7, the Casa OS Login page disclosed the username enumeration vulnerability in the login page. An attacker can enumerate the CasaOS username using the application response. If the username is incorrect application gives the error `**User does not exist**`.  If the password is incorrect application gives the error `**Invalid password**`.  Version 0.4.7 fixes this issue.",
  "repo": "IceWhaleTech/CasaOS-UserService",
  "patch_hash": "c75063d7ca5800948e9c09c0a6efe9809b5d39f7",
  "patch_info": {
    "commit_hash": "c75063d7ca5800948e9c09c0a6efe9809b5d39f7",
    "repo": "IceWhaleTech/CasaOS-UserService",
    "commit_url": "https://github.com/IceWhaleTech/CasaOS-UserService/commit/c75063d7ca5800948e9c09c0a6efe9809b5d39f7",
    "files": [
      "route/v1/user.go"
    ],
    "message": "Merge pull request from GHSA-c967-2652-gfjm\n\n* fix: fix username enumeration\n\n* fix typo msg type\n\n* fix: recovery error patch\n\n* fix: recovery error patch\n\n---------\n\nSigned-off-by: CorrectRoadH <a778917369@gmail.com>",
    "before_after_code_files": [
      "route/v1/user.go||route/v1/user.go"
    ]
  },
  "patch_diff": {
    "route/v1/user.go||route/v1/user.go": [
      "File: route/v1/user.go -> route/v1/user.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "116:  }",
      "117:  if user.Password != encryption.GetMD5ByStr(password) {",
      "118:   c.JSON(common_err.CLIENT_ERROR,",
      "120:   return",
      "121:  }",
      "",
      "[Removed Lines]",
      "119:    model.Result{Success: common_err.PWD_INVALID, Message: common_err.GetMsg(common_err.PWD_INVALID)})",
      "",
      "[Added Lines]",
      "119:    model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "258:  user := service.MyService.User().GetUserInfoById(id)",
      "259:  if user.Id == 0 {",
      "260:   c.JSON(common_err.SERVICE_ERROR,",
      "262:   return",
      "263:  }",
      "264:  if len(json.Username) > 0 {",
      "",
      "[Removed Lines]",
      "261:    model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
      "",
      "[Added Lines]",
      "261:    model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "517666ba931bfaf53e46d6ebd62aa446d4224cde",
      "candidate_info": {
        "commit_hash": "517666ba931bfaf53e46d6ebd62aa446d4224cde",
        "repo": "IceWhaleTech/CasaOS-UserService",
        "commit_url": "https://github.com/IceWhaleTech/CasaOS-UserService/commit/517666ba931bfaf53e46d6ebd62aa446d4224cde",
        "files": [
          "go.mod",
          "go.sum",
          "route/v1/user.go"
        ],
        "message": "fix: fix security issues",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum",
          "route/v1/user.go||route/v1/user.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "route/v1/user.go||route/v1/user.go"
          ],
          "candidate": [
            "route/v1/user.go||route/v1/user.go"
          ]
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: go 1.20",
          "5: require (",
          "7:  github.com/coreos/go-systemd v0.0.0-20191104093116-d3cd4ed1dbcf",
          "8:  github.com/deepmap/oapi-codegen v1.12.4",
          "9:  github.com/getkin/kin-openapi v0.117.0",
          "",
          "[Removed Lines]",
          "6:  github.com/IceWhaleTech/CasaOS-Common v0.4.8-alpha3",
          "",
          "[Added Lines]",
          "6:  github.com/IceWhaleTech/CasaOS-Common v0.4.8-alpha10",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "14:  github.com/satori/go.uuid v1.2.0",
          "15:  github.com/tidwall/gjson v1.14.4",
          "16:  go.uber.org/zap v1.24.0",
          "18:  gopkg.in/ini.v1 v1.67.0",
          "19:  gorm.io/gorm v1.25.0",
          "20: )",
          "",
          "[Removed Lines]",
          "17:  golang.org/x/net v0.17.0",
          "",
          "[Added Lines]",
          "17:  golang.org/x/net v0.20.0",
          "18:  golang.org/x/time v0.3.0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "22: require (",
          "23:  github.com/apapsch/go-jsonmerge/v2 v2.0.0 // indirect",
          "24:  github.com/benbjohnson/clock v1.3.1 // indirect",
          "27:  github.com/coreos/go-systemd/v22 v22.5.0 // indirect",
          "28:  github.com/dustin/go-humanize v1.0.1 // indirect",
          "30:  github.com/gin-contrib/sse v0.1.0 // indirect",
          "31:  github.com/glebarez/go-sqlite v1.21.1 // indirect",
          "32:  github.com/go-openapi/jsonpointer v0.19.6 // indirect",
          "33:  github.com/go-openapi/swag v0.22.3 // indirect",
          "34:  github.com/go-playground/locales v0.14.1 // indirect",
          "35:  github.com/go-playground/universal-translator v0.18.1 // indirect",
          "37:  github.com/goccy/go-json v0.10.2 // indirect",
          "38:  github.com/godbus/dbus/v5 v5.1.0 // indirect",
          "39:  github.com/golang-jwt/jwt v3.2.2+incompatible // indirect",
          "",
          "[Removed Lines]",
          "25:  github.com/bytedance/sonic v1.9.1 // indirect",
          "26:  github.com/chenzhuoyu/base64x v0.0.0-20221115062448-fe3a3abad311 // indirect",
          "29:  github.com/gabriel-vasile/mimetype v1.4.2 // indirect",
          "36:  github.com/go-playground/validator/v10 v10.14.0 // indirect",
          "",
          "[Added Lines]",
          "26:  github.com/bytedance/sonic v1.10.2 // indirect",
          "27:  github.com/chenzhuoyu/base64x v0.0.0-20230717121745-296ad89f973d // indirect",
          "28:  github.com/chenzhuoyu/iasm v0.9.1 // indirect",
          "31:  github.com/gabriel-vasile/mimetype v1.4.3 // indirect",
          "38:  github.com/go-playground/validator/v10 v10.17.0 // indirect",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "46:  github.com/jinzhu/now v1.1.5 // indirect",
          "47:  github.com/josharian/intern v1.0.0 // indirect",
          "48:  github.com/json-iterator/go v1.1.12 // indirect",
          "50:  github.com/kr/pretty v0.3.1 // indirect",
          "51:  github.com/labstack/gommon v0.4.0 // indirect",
          "53:  github.com/mailru/easyjson v0.7.7 // indirect",
          "54:  github.com/mattn/go-colorable v0.1.13 // indirect",
          "55:  github.com/mattn/go-isatty v0.0.20 // indirect",
          "56:  github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect",
          "57:  github.com/modern-go/reflect2 v1.0.2 // indirect",
          "58:  github.com/mohae/deepcopy v0.0.0-20170929034955-c48cc78d4826 // indirect",
          "60:  github.com/perimeterx/marshmallow v1.1.4 // indirect",
          "61:  github.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec // indirect",
          "62:  github.com/rogpeppe/go-internal v1.10.0 // indirect",
          "65:  github.com/tidwall/match v1.1.1 // indirect",
          "66:  github.com/tidwall/pretty v1.2.1 // indirect",
          "67:  github.com/twitchyliquid64/golang-asm v0.15.1 // indirect",
          "69:  github.com/valyala/bytebufferpool v1.0.0 // indirect",
          "70:  github.com/valyala/fasttemplate v1.2.2 // indirect",
          "71:  go.uber.org/atomic v1.10.0 // indirect",
          "72:  go.uber.org/multierr v1.11.0 // indirect",
          "80:  gopkg.in/natefinch/lumberjack.v2 v2.2.1 // indirect",
          "81:  gopkg.in/yaml.v3 v3.0.1 // indirect",
          "82:  modernc.org/libc v1.22.4 // indirect",
          "",
          "[Removed Lines]",
          "49:  github.com/klauspost/cpuid/v2 v2.2.4 // indirect",
          "52:  github.com/leodido/go-urn v1.2.4 // indirect",
          "59:  github.com/pelletier/go-toml/v2 v2.0.8 // indirect",
          "63:  github.com/samber/lo v1.38.1 // indirect",
          "64:  github.com/stretchr/testify v1.8.4 // indirect",
          "68:  github.com/ugorji/go/codec v1.2.11 // indirect",
          "73:  golang.org/x/arch v0.3.0 // indirect",
          "74:  golang.org/x/crypto v0.14.0 // indirect",
          "75:  golang.org/x/exp v0.0.0-20230713183714-613f0c0eb8a1 // indirect",
          "76:  golang.org/x/sys v0.14.0 // indirect",
          "77:  golang.org/x/text v0.13.0 // indirect",
          "78:  golang.org/x/time v0.3.0 // indirect",
          "79:  google.golang.org/protobuf v1.30.0 // indirect",
          "",
          "[Added Lines]",
          "51:  github.com/klauspost/cpuid/v2 v2.2.6 // indirect",
          "54:  github.com/leodido/go-urn v1.3.0 // indirect",
          "61:  github.com/pelletier/go-toml/v2 v2.1.1 // indirect",
          "65:  github.com/samber/lo v1.39.0 // indirect",
          "69:  github.com/ugorji/go/codec v1.2.12 // indirect",
          "74:  golang.org/x/arch v0.7.0 // indirect",
          "75:  golang.org/x/crypto v0.18.0 // indirect",
          "76:  golang.org/x/exp v0.0.0-20240119083558-1b970713d09a // indirect",
          "77:  golang.org/x/sys v0.16.0 // indirect",
          "78:  golang.org/x/text v0.14.0 // indirect",
          "79:  google.golang.org/protobuf v1.32.0 // indirect",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: github.com/RaveNoX/go-jsoncommentstrip v1.0.0/go.mod h1:78ihd09MekBnJnxpICcwzCMzGrKSKYe4AqU6PDYYpjk=",
          "4: github.com/apapsch/go-jsonmerge/v2 v2.0.0 h1:axGnT1gRIfimI7gJifB699GoE/oq+F2MU7Dml6nw9rQ=",
          "5: github.com/apapsch/go-jsonmerge/v2 v2.0.0/go.mod h1:lvDnEdqiQrp0O42VQGgmlKpxL1AP2+08jFMw88y4klk=",
          "",
          "[Removed Lines]",
          "1: github.com/IceWhaleTech/CasaOS-Common v0.4.8-alpha3 h1:5E5LAqi2uXpOZqcPOgQ4m6d9MagYyfhKIFXnzd8s3W4=",
          "2: github.com/IceWhaleTech/CasaOS-Common v0.4.8-alpha3/go.mod h1:2IuYyy5qW1BE6jqC6M+tOU+WtUec1K565rLATBJ9p/0=",
          "",
          "[Added Lines]",
          "1: github.com/IceWhaleTech/CasaOS-Common v0.4.8-alpha10 h1:EdQbH+n4zEXcflk3iKCacjptAjtyo/ZtPHmZWD5LbOY=",
          "2: github.com/IceWhaleTech/CasaOS-Common v0.4.8-alpha10/go.mod h1:2IuYyy5qW1BE6jqC6M+tOU+WtUec1K565rLATBJ9p/0=",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7: github.com/benbjohnson/clock v1.3.1/go.mod h1:J11/hYXuz8f4ySSvYwY0FKfm+ezbsZBKZxNJlLklBHA=",
          "8: github.com/bmatcuk/doublestar v1.1.1/go.mod h1:UD6OnuiIn0yFxxA2le/rnRU1G4RaI4UvFv1sNto9p6w=",
          "9: github.com/bytedance/sonic v1.5.0/go.mod h1:ED5hyg4y6t3/9Ku1R6dU/4KyJ48DZ4jPhfY1O2AihPM=",
          "12: github.com/chenzhuoyu/base64x v0.0.0-20211019084208-fb5309c8db06/go.mod h1:DH46F32mSOjUmXrMHnKwZdA8wcEefY7UVqBKYGjpdQY=",
          "14: github.com/chenzhuoyu/base64x v0.0.0-20221115062448-fe3a3abad311/go.mod h1:b583jCggY9gE99b6G5LEC39OIiVsWj+R97kbl5odCEk=",
          "15: github.com/coreos/go-systemd v0.0.0-20191104093116-d3cd4ed1dbcf h1:iW4rZ826su+pqaw19uhpSCzhj44qo35pNgKFGqzDKkU=",
          "16: github.com/coreos/go-systemd v0.0.0-20191104093116-d3cd4ed1dbcf/go.mod h1:F5haX7vjVVG0kc13fIWeqUViNPyEJxv/OmvnBo0Yme4=",
          "17: github.com/coreos/go-systemd/v22 v22.5.0 h1:RrqgGjYQKalulkV8NGVIfkXQf6YYmOyiJKk8iXXhfZs=",
          "",
          "[Removed Lines]",
          "10: github.com/bytedance/sonic v1.9.1 h1:6iJ6NqdoxCDr6mbY8h18oSO+cShGSMRGCEo7F2h0x8s=",
          "11: github.com/bytedance/sonic v1.9.1/go.mod h1:i736AoUSYt75HyZLoJW9ERYxcy6eaN6h4BZXU064P/U=",
          "13: github.com/chenzhuoyu/base64x v0.0.0-20221115062448-fe3a3abad311 h1:qSGYFH7+jGhDF8vLC+iwCD4WpbV1EBDSzWkJODFLams=",
          "",
          "[Added Lines]",
          "10: github.com/bytedance/sonic v1.10.0-rc/go.mod h1:ElCzW+ufi8qKqNW0FY314xriJhyJhuoJ3gFZdAHF7NM=",
          "11: github.com/bytedance/sonic v1.10.2 h1:GQebETVBxYB7JGWJtLBi07OVzWwt+8dWA00gEVW2ZFE=",
          "12: github.com/bytedance/sonic v1.10.2/go.mod h1:iZcSUejdk5aukTND/Eu/ivjQuEL0Cu9/rf50Hi0u/g4=",
          "15: github.com/chenzhuoyu/base64x v0.0.0-20230717121745-296ad89f973d h1:77cEq6EriyTZ0g/qfRdp61a3Uu/AWrgIq2s0ClJV1g0=",
          "16: github.com/chenzhuoyu/base64x v0.0.0-20230717121745-296ad89f973d/go.mod h1:8EPpVsBuRksnlj1mLy4AWzRNQYxauNi62uWcE3to6eA=",
          "17: github.com/chenzhuoyu/iasm v0.9.0/go.mod h1:Xjy2NpN3h7aUqeqM+woSuuvxmIe6+DDsiNLIrkAmYog=",
          "18: github.com/chenzhuoyu/iasm v0.9.1 h1:tUHQJXo3NhBqw6s33wkGn9SP3bvrWLdlVIJ3hQBL7P0=",
          "19: github.com/chenzhuoyu/iasm v0.9.1/go.mod h1:Xjy2NpN3h7aUqeqM+woSuuvxmIe6+DDsiNLIrkAmYog=",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "24: github.com/deepmap/oapi-codegen v1.12.4/go.mod h1:3lgHGMu6myQ2vqbbTXH2H1o4eXFTGnFiDaOaKKl5yas=",
          "25: github.com/dustin/go-humanize v1.0.1 h1:GzkhY7T5VNhEkwH0PVJgjz+fX1rhBrR7pRT3mDkpeCY=",
          "26: github.com/dustin/go-humanize v1.0.1/go.mod h1:Mu1zIs6XwVuF/gI1OepvI0qD18qycQx+mFykh5fBlto=",
          "29: github.com/getkin/kin-openapi v0.117.0 h1:QT2DyGujAL09F4NrKDHJGsUoIprlIcFVHWDVDcUFE8A=",
          "30: github.com/getkin/kin-openapi v0.117.0/go.mod h1:l5e9PaFUo9fyLJCPGQeXI2ML8c3P8BHOEV2VaAVf/pc=",
          "31: github.com/gin-contrib/gzip v0.0.6 h1:NjcunTcGAj5CO1gn4N8jHOSIeRFHIbn51z6K+xaN4d4=",
          "",
          "[Removed Lines]",
          "27: github.com/gabriel-vasile/mimetype v1.4.2 h1:w5qFW6JKBz9Y393Y4q372O9A7cUSequkh1Q7OhCmWKU=",
          "28: github.com/gabriel-vasile/mimetype v1.4.2/go.mod h1:zApsH/mKG4w07erKIaJPFiX0Tsq9BFQgN3qGY5GnNgA=",
          "",
          "[Added Lines]",
          "32: github.com/gabriel-vasile/mimetype v1.4.3 h1:in2uUcidCuFcDKtdcBxlR0rJ1+fsokWf+uqxgUFjbI0=",
          "33: github.com/gabriel-vasile/mimetype v1.4.3/go.mod h1:d8uq/6HKRL6CGdk+aubisF/M5GcPfT7nKyLpA0lbSSk=",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "54: github.com/go-playground/universal-translator v0.18.1 h1:Bcnm0ZwsGyWbCzImXv+pAJnYK9S473LQFuzCbDbfSFY=",
          "55: github.com/go-playground/universal-translator v0.18.1/go.mod h1:xekY+UJKNuX9WP91TpwSH2VMlDf28Uj24BCp08ZFTUY=",
          "56: github.com/go-playground/validator/v10 v10.10.0/go.mod h1:74x4gJWsvQexRdW8Pn3dXSGrTK4nAUsbPlLADvpJkos=",
          "59: github.com/go-test/deep v1.0.8 h1:TDsG77qcSprGbC6vTN8OuXp5g+J+b5Pcguhf7Zt61VM=",
          "60: github.com/go-test/deep v1.0.8/go.mod h1:5C2ZWiW0ErCdrYzpqxLbTX7MG14M9iiw8DgHncVwcsE=",
          "61: github.com/goccy/go-json v0.9.7/go.mod h1:6MelG93GURQebXPDq3khkgXZkazVtN9CRI+MGFi0w8I=",
          "",
          "[Removed Lines]",
          "57: github.com/go-playground/validator/v10 v10.14.0 h1:vgvQWe3XCz3gIeFDm/HnTIbj6UGmg/+t63MyGU2n5js=",
          "58: github.com/go-playground/validator/v10 v10.14.0/go.mod h1:9iXMNT7sEkjXb0I+enO7QXmzG6QCsPWY4zveKFVRSyU=",
          "",
          "[Added Lines]",
          "62: github.com/go-playground/validator/v10 v10.17.0 h1:SmVVlfAOtlZncTxRuinDPomC2DkXJ4E5T9gDA0AIH74=",
          "63: github.com/go-playground/validator/v10 v10.17.0/go.mod h1:9iXMNT7sEkjXb0I+enO7QXmzG6QCsPWY4zveKFVRSyU=",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "91: github.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=",
          "92: github.com/juju/gnuflag v0.0.0-20171113085948-2ce1bb71843d/go.mod h1:2PavIy+JPciBPrBUjwbNvtwB6RQlve+hkpll6QSNmOE=",
          "93: github.com/klauspost/cpuid/v2 v2.0.9/go.mod h1:FInQzS24/EEf25PyTYn52gqo7WaD8xa0213Md/qVLRg=",
          "96: github.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=",
          "97: github.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=",
          "98: github.com/kr/pretty v0.3.0/go.mod h1:640gp4NfQd8pI5XOwp5fnNeVWj67G7CFk/SaSQn7NBk=",
          "",
          "[Removed Lines]",
          "94: github.com/klauspost/cpuid/v2 v2.2.4 h1:acbojRNwl3o09bUq+yDCtZFc1aiwaAAxtcn8YkZXnvk=",
          "95: github.com/klauspost/cpuid/v2 v2.2.4/go.mod h1:RVVoqg1df56z8g3pUjL/3lE5UfnlrJX8tyFgg4nqhuY=",
          "",
          "[Added Lines]",
          "99: github.com/klauspost/cpuid/v2 v2.2.6 h1:ndNyv040zDGIDh8thGkXYjnFtiN02M1PVVF+JE/48xc=",
          "100: github.com/klauspost/cpuid/v2 v2.2.6/go.mod h1:Lcz8mBdAVJIBVzewtcLocK12l3Y+JytZYpaMropDUws=",
          "101: github.com/knz/go-libedit v1.10.1/go.mod h1:MZTVkCWyz0oBc7JOWP3wNAzd002ZbM/5hgShxwh4x8M=",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "107: github.com/labstack/gommon v0.4.0 h1:y7cvthEAEbU0yHOf4axH8ZG2NH8knB9iNSoTO8dyIk8=",
          "108: github.com/labstack/gommon v0.4.0/go.mod h1:uW6kP17uPlLJsD3ijUYn3/M5bAxtlZhMI6m3MFxTMTM=",
          "109: github.com/leodido/go-urn v1.2.1/go.mod h1:zt4jvISO2HfUBqxjfIshjdMTYS56ZS/qv49ictyFfxY=",
          "112: github.com/mailru/easyjson v0.0.0-20190614124828-94de47d64c63/go.mod h1:C1wdFJiN94OJF2b5HbByQZoLdCWB1Yqtg26g4irojpc=",
          "113: github.com/mailru/easyjson v0.0.0-20190626092158-b2ccc519800e/go.mod h1:C1wdFJiN94OJF2b5HbByQZoLdCWB1Yqtg26g4irojpc=",
          "114: github.com/mailru/easyjson v0.7.7 h1:UGYAvKxe3sBsEDzO8ZeWOSlIQfWFlxbzLZe7hwFURr0=",
          "",
          "[Removed Lines]",
          "110: github.com/leodido/go-urn v1.2.4 h1:XlAE/cm/ms7TE/VMVoduSpNBoyc2dOxHs5MZSwAN63Q=",
          "111: github.com/leodido/go-urn v1.2.4/go.mod h1:7ZrI8mTSeBSHl/UaRyKQW1qZeMgak41ANeCNaVckg+4=",
          "",
          "[Added Lines]",
          "116: github.com/leodido/go-urn v1.3.0 h1:jX8FDLfW4ThVXctBNZ+3cIWnCSnrACDV73r76dy0aQQ=",
          "117: github.com/leodido/go-urn v1.3.0/go.mod h1:bvxc+MVxLKB4z00jd1z+Dvzr47oO32F/QSNjSBOlFxI=",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "128: github.com/mohae/deepcopy v0.0.0-20170929034955-c48cc78d4826 h1:RWengNIwukTxcDr9M+97sNutRR1RKhG96O6jWumTTnw=",
          "129: github.com/mohae/deepcopy v0.0.0-20170929034955-c48cc78d4826/go.mod h1:TaXosZuwdSHYgviHp1DAtfrULt5eUgsSMsZf+YrPgl8=",
          "130: github.com/pelletier/go-toml/v2 v2.0.1/go.mod h1:r9LEWfGN8R5k0VXJ+0BkIe7MYkRdwZOjgMj2KwnJFUo=",
          "133: github.com/perimeterx/marshmallow v1.1.4 h1:pZLDH9RjlLGGorbXhcaQLhfuV0pFMNfPO55FuFkxqLw=",
          "134: github.com/perimeterx/marshmallow v1.1.4/go.mod h1:dsXbUu8CRzfYP5a87xpp0xq9S3u0Vchtcl8we9tYaXw=",
          "135: github.com/pkg/diff v0.0.0-20210226163009-20ebb0f2a09e/go.mod h1:pJLUxLENpZxwdsKMEsNbx1VGcRFpLqf3715MtcvvzbA=",
          "",
          "[Removed Lines]",
          "131: github.com/pelletier/go-toml/v2 v2.0.8 h1:0ctb6s9mE31h0/lhu+J6OPmVeDxJn+kYnJc2jZR9tGQ=",
          "132: github.com/pelletier/go-toml/v2 v2.0.8/go.mod h1:vuYfssBdrU2XDZ9bYydBu6t+6a6PYNcZljzZR9VXg+4=",
          "",
          "[Added Lines]",
          "137: github.com/pelletier/go-toml/v2 v2.1.1 h1:LWAJwfNvjQZCFIDKWYQaM62NcYeYViCmWIwmOStowAI=",
          "138: github.com/pelletier/go-toml/v2 v2.1.1/go.mod h1:tJU2Z3ZkXwnxa4DPO899bsyIoywizdUvyaeZurnPPDc=",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "144: github.com/rogpeppe/go-internal v1.9.0/go.mod h1:WtVeX8xhTBvf0smdhujwtBcq4Qrzq/fJaraNFVN+nFs=",
          "145: github.com/rogpeppe/go-internal v1.10.0 h1:TMyTOH3F/DB16zRVcYyreMH6GnZZrwQVAoYjRBZyWFQ=",
          "146: github.com/rogpeppe/go-internal v1.10.0/go.mod h1:UQnix2H7Ngw/k4C5ijL5+65zddjncjaFoBhdsK/akog=",
          "149: github.com/satori/go.uuid v1.2.0 h1:0uYX9dsZ2yD7q2RtLRtPSdGDWzjeM3TbMJP9utgA0ww=",
          "150: github.com/satori/go.uuid v1.2.0/go.mod h1:dA0hQrYB0VpLJoorglMZABFdXlWrHn1NEOzdhQKdks0=",
          "151: github.com/spkg/bom v0.0.0-20160624110644-59b7046e48ad/go.mod h1:qLr4V1qq6nMqFKkMo8ZTx3f+BZEkzsRUY10Xsm2mwU0=",
          "",
          "[Removed Lines]",
          "147: github.com/samber/lo v1.38.1 h1:j2XEAqXKb09Am4ebOg31SpvzUTTs6EN3VfgeLUhPdXM=",
          "148: github.com/samber/lo v1.38.1/go.mod h1:+m/ZKRl6ClXCE2Lgf3MsQlWfh4bn1bz6CXEOxnEXnEA=",
          "",
          "[Added Lines]",
          "153: github.com/samber/lo v1.39.0 h1:4gTz1wUhNYLhFSKl6O+8peW0v2F4BCY034GRpU9WnuA=",
          "154: github.com/samber/lo v1.39.0/go.mod h1:+m/ZKRl6ClXCE2Lgf3MsQlWfh4bn1bz6CXEOxnEXnEA=",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "158: github.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=",
          "159: github.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=",
          "160: github.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=",
          "163: github.com/stretchr/testify v1.8.4 h1:CcVxjf3Q8PM0mHUKJCdn+eZZtm5yQwehR5yeSVQQcUk=",
          "164: github.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=",
          "165: github.com/tidwall/gjson v1.14.4 h1:uo0p8EbA09J7RQaflQ1aBRffTR7xedD2bcIVSYxLnkM=",
          "",
          "[Removed Lines]",
          "161: github.com/stretchr/testify v1.8.2/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=",
          "162: github.com/stretchr/testify v1.8.3/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "173: github.com/twitchyliquid64/golang-asm v0.15.1/go.mod h1:a1lVb/DtPvCB8fslRZhAngC2+aY1QWCk3Cedj/Gdt08=",
          "174: github.com/ugorji/go v1.2.7/go.mod h1:nF9osbDWLy6bDVv/Rtoh6QgnvNDpmCalQV5urGCCS6M=",
          "175: github.com/ugorji/go/codec v1.2.7/go.mod h1:WGN1fab3R1fzQlVQTkfxVtIBhWDRqOviHU95kRgeqEY=",
          "178: github.com/valyala/bytebufferpool v1.0.0 h1:GqA5TC/0021Y/b9FG4Oi9Mr3q7XYx6KllzawFIhcdPw=",
          "179: github.com/valyala/bytebufferpool v1.0.0/go.mod h1:6bBcMArwyJ5K/AmCkWv1jt77kVWyCJ6HpOuEn7z0Csc=",
          "180: github.com/valyala/fasttemplate v1.2.1/go.mod h1:KHLXt3tVN2HBp8eijSv/kGJopbvo7S+qRAEEKiv+SiQ=",
          "",
          "[Removed Lines]",
          "176: github.com/ugorji/go/codec v1.2.11 h1:BMaWp1Bb6fHwEtbplGBGJ498wD+LKlNSl25MjdZY4dU=",
          "177: github.com/ugorji/go/codec v1.2.11/go.mod h1:UNopzCgEMSXjBc6AOMqYvWC1ktqTAfzJZUZgYf6w6lg=",
          "",
          "[Added Lines]",
          "180: github.com/ugorji/go/codec v1.2.12 h1:9LC83zGrHhuUA9l16C9AHXAqEV/2wBQ4nkvumAE65EE=",
          "181: github.com/ugorji/go/codec v1.2.12/go.mod h1:UNopzCgEMSXjBc6AOMqYvWC1ktqTAfzJZUZgYf6w6lg=",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "188: go.uber.org/zap v1.24.0 h1:FiJd5l1UOLj0wCgbSE0rwwXHzEdAZS6hiiSnxJN/D60=",
          "189: go.uber.org/zap v1.24.0/go.mod h1:2kMP+WWQ8aoFoedH3T2sq6iJ2yDWpHbP0f6MQbS9Gkg=",
          "190: golang.org/x/arch v0.0.0-20210923205945-b76863e36670/go.mod h1:5om86z9Hs0C8fWVUuoMHwpExlXzs5Tkyp9hOrfG7pp8=",
          "193: golang.org/x/crypto v0.0.0-20210711020723-a769d52b0f97/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=",
          "198: golang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=",
          "201: golang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "202: golang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "203: golang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "204: golang.org/x/sys v0.0.0-20210806184541-e5e7981a1069/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "205: golang.org/x/sys v0.0.0-20210927094055-39ccf1dd6fa6/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "206: golang.org/x/sys v0.0.0-20211103235746-7861aae1554b/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "208: golang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "209: golang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "212: golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=",
          "213: golang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=",
          "214: golang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=",
          "217: golang.org/x/time v0.3.0 h1:rg5rLMjNzMS1RkNLzCG38eapWhnYLFYXDXj2gOlr8j4=",
          "218: golang.org/x/time v0.3.0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=",
          "219: golang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=",
          "220: golang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=",
          "221: google.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=",
          "222: google.golang.org/protobuf v1.28.0/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=",
          "225: gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=",
          "226: gopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=",
          "227: gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=",
          "",
          "[Removed Lines]",
          "191: golang.org/x/arch v0.3.0 h1:02VY4/ZcO/gBOH6PUaoiptASxtXU10jazRCP865E97k=",
          "192: golang.org/x/arch v0.3.0/go.mod h1:5om86z9Hs0C8fWVUuoMHwpExlXzs5Tkyp9hOrfG7pp8=",
          "194: golang.org/x/crypto v0.14.0 h1:wBqGXzWJW6m1XrIKlAH0Hs1JJ7+9KBwnIO8v66Q9cHc=",
          "195: golang.org/x/crypto v0.14.0/go.mod h1:MVFd36DqK4CsrnJYDkBA3VC4m2GkXAM0PvzMCn4JQf4=",
          "196: golang.org/x/exp v0.0.0-20230713183714-613f0c0eb8a1 h1:MGwJjxBy0HJshjDNfLsYO8xppfqWlA5ZT9OhtUUhTNw=",
          "197: golang.org/x/exp v0.0.0-20230713183714-613f0c0eb8a1/go.mod h1:FXUEEKJgO7OQYeo8N01OfiKP8RXMtf6e8aTskBGqWdc=",
          "199: golang.org/x/net v0.17.0 h1:pVaXccu2ozPjCXewfr1S7xza/zcXTity9cCdXQYSjIM=",
          "200: golang.org/x/net v0.17.0/go.mod h1:NxSsAGuq816PNPmqtQdLE42eU2Fs7NoRIZrHJAlaCOE=",
          "207: golang.org/x/sys v0.0.0-20220704084225-05e143d24a9e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "210: golang.org/x/sys v0.14.0 h1:Vz7Qs629MkJkGyHxUlRHizWJRG2j8fbQKjELVSNhy7Q=",
          "211: golang.org/x/sys v0.14.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=",
          "215: golang.org/x/text v0.13.0 h1:ablQoSUd0tRdKxZewP80B+BaqeKJuVhuRxj/dkrun3k=",
          "216: golang.org/x/text v0.13.0/go.mod h1:TvPlkZtksWOMsz7fbANvkp4WM8x/WCo/om8BMLbz+aE=",
          "223: google.golang.org/protobuf v1.30.0 h1:kPPoIgf3TsEvrm0PFe15JQ+570QVxYzEvvHqChK+cng=",
          "224: google.golang.org/protobuf v1.30.0/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=",
          "",
          "[Added Lines]",
          "195: golang.org/x/arch v0.7.0 h1:pskyeJh/3AmoQ8CPE95vxHLqp1G1GfGNXTmcl9NEKTc=",
          "196: golang.org/x/arch v0.7.0/go.mod h1:FEVrYAQjsQXMVJ1nsMoVVXPZg6p2JE2mx8psSWTDQys=",
          "198: golang.org/x/crypto v0.18.0 h1:PGVlW0xEltQnzFZ55hkuX5+KLyrMYhHld1YHO4AKcdc=",
          "199: golang.org/x/crypto v0.18.0/go.mod h1:R0j02AL6hcrfOiy9T4ZYp/rcWeMxM3L6QYxlOuEG1mg=",
          "200: golang.org/x/exp v0.0.0-20240119083558-1b970713d09a h1:Q8/wZp0KX97QFTc2ywcOE0YRjZPVIx+MXInMzdvQqcA=",
          "201: golang.org/x/exp v0.0.0-20240119083558-1b970713d09a/go.mod h1:idGWGoKP1toJGkd5/ig9ZLuPcZBC3ewk7SzmH0uou08=",
          "203: golang.org/x/net v0.20.0 h1:aCL9BSgETF1k+blQaYUBx9hJ9LOGP3gAVemcZlf1Kpo=",
          "204: golang.org/x/net v0.20.0/go.mod h1:z8BVo6PvndSri0LbOE3hAn0apkU+1YvI6E70E9jsnvY=",
          "212: golang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "214: golang.org/x/sys v0.16.0 h1:xWw16ngr6ZMtmxDyKyIgsE93KNKz5HKmMa3b8ALHidU=",
          "215: golang.org/x/sys v0.16.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=",
          "219: golang.org/x/text v0.14.0 h1:ScX5w1eTa3QqT8oi6+ziP7dTV1S2+ALU0bI+0zXKWiQ=",
          "220: golang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=",
          "227: google.golang.org/protobuf v1.32.0 h1:pPC6BG5ex8PDFnkbrGU3EixyhKcQ2aDuBS36lqK/C7I=",
          "228: google.golang.org/protobuf v1.32.0/go.mod h1:c6P6GXX6sHbq/GpV6MGZEdwhWPcYBgnhAHhKbcUYpos=",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "240: gopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=",
          "241: gorm.io/gorm v1.25.0 h1:+KtYtb2roDz14EQe4bla8CbQlmb9dN3VejSai3lprfU=",
          "242: gorm.io/gorm v1.25.0/go.mod h1:L4uxeKpfBml98NYqVqwAdmV1a2nBtAec/cf3fpucW/k=",
          "243: modernc.org/libc v1.22.4 h1:wymSbZb0AlrjdAVX3cjreCHTPCpPARbQXNz6BHPzdwQ=",
          "244: modernc.org/libc v1.22.4/go.mod h1:jj+Z7dTNX8fBScMVNRAYZ/jF91K8fdT2hYMThc3YjBY=",
          "245: modernc.org/mathutil v1.5.0 h1:rV0Ko/6SfM+8G+yKiyI830l3Wuz1zRutdslNoQ0kfiQ=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "247: gotest.tools/v3 v3.4.0 h1:ZazjZUfuVeZGLAmlKKuyv3IKP5orXcwtOwDQH6YVr6o=",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "248: modernc.org/memory v1.5.0/go.mod h1:PkUhL0Mugw21sHPeskwZW4D6VscE/GQJOnIpCnW6pSU=",
          "249: modernc.org/sqlite v1.21.2 h1:ixuUG0QS413Vfzyx6FWx6PYTmHaOegTY+hjzhn7L+a0=",
          "250: modernc.org/sqlite v1.21.2/go.mod h1:cxbLkB5WS32DnQqeH4h4o1B0eMr8W/y8/RGuxQ3JsC0=",
          "251: rsc.io/pdf v0.1.1/go.mod h1:n8OzWcQ6Sp37PL01nO98y4iUCRdTGarVfzxY20ICaU4=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "256: nullprogram.com/x/optparse v1.0.0/go.mod h1:KdyPE+Igbe0jQUrVfMqDMeJQIJZEuyV7pjYmp6pbG50=",
          "",
          "---------------"
        ],
        "route/v1/user.go||route/v1/user.go": [
          "File: route/v1/user.go -> route/v1/user.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:  \"github.com/IceWhaleTech/CasaOS-UserService/service\"",
          "34:  \"github.com/gin-gonic/gin\"",
          "35: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "35:  \"golang.org/x/time/rate\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "81:  c.JSON(common_err.SUCCESS, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS)})",
          "82: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "85: var limiter = rate.NewLimiter(rate.Every(time.Minute/5), 5)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "92: func PostUserLogin(c *gin.Context) {",
          "93:  json := make(map[string]string)",
          "94:  c.ShouldBind(&json)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "96:  if !limiter.Allow() {",
          "97:   c.JSON(common_err.TOO_MANY_REQUEST,",
          "98:    model.Result{",
          "99:     Success: common_err.TOO_MANY_LOGIN_REQUESTS,",
          "100:     Message: common_err.GetMsg(common_err.TOO_MANY_LOGIN_REQUESTS),",
          "101:    })",
          "102:   return",
          "103:  }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "108:  user := service.MyService.User().GetUserAllInfoByName(username)",
          "109:  if user.Id == 0 {",
          "110:   c.JSON(common_err.CLIENT_ERROR,",
          "112:   return",
          "113:  }",
          "114:  if user.Password != encryption.GetMD5ByStr(password) {",
          "115:   c.JSON(common_err.CLIENT_ERROR,",
          "117:   return",
          "118:  }",
          "",
          "[Removed Lines]",
          "111:    model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "116:    model.Result{Success: common_err.PWD_INVALID, Message: common_err.GetMsg(common_err.PWD_INVALID)})",
          "",
          "[Added Lines]",
          "123:    model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
          "128:    model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "162:  user := service.MyService.User().GetUserInfoById(id)",
          "163:  if user.Id == 0 {",
          "164:   c.JSON(common_err.SERVICE_ERROR,",
          "166:   return",
          "167:  }",
          "168:  json := make(map[string]string)",
          "",
          "[Removed Lines]",
          "165:    model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "",
          "[Added Lines]",
          "177:    model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "217:  user := service.MyService.User().GetUserInfoById(id)",
          "218:  if user.Id == 0 {",
          "219:   c.JSON(common_err.SERVICE_ERROR,",
          "221:   return",
          "222:  }",
          "",
          "[Removed Lines]",
          "220:    model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "",
          "[Added Lines]",
          "232:    model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "255:  user := service.MyService.User().GetUserInfoById(id)",
          "256:  if user.Id == 0 {",
          "257:   c.JSON(common_err.SERVICE_ERROR,",
          "259:   return",
          "260:  }",
          "261:  if len(json.Username) > 0 {",
          "",
          "[Removed Lines]",
          "258:    model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "",
          "[Added Lines]",
          "270:    model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "306:  user := service.MyService.User().GetUserAllInfoById(id)",
          "307:  if user.Id == 0 {",
          "308:   c.JSON(common_err.SERVICE_ERROR,",
          "310:   return",
          "311:  }",
          "312:  if user.Password != encryption.GetMD5ByStr(oldPwd) {",
          "",
          "[Removed Lines]",
          "309:    model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "",
          "[Added Lines]",
          "321:    model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "339:  user := service.MyService.User().GetUserInfoById(id)",
          "340:  if user.Id == 0 {",
          "341:   c.JSON(http.StatusOK,",
          "343:   return",
          "344:  }",
          "345:  user.Nickname = Nickname",
          "",
          "[Removed Lines]",
          "342:    model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "",
          "[Added Lines]",
          "354:    model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "367:  user := service.MyService.User().GetUserInfoById(id)",
          "368:  if user.Id == 0 {",
          "369:   c.JSON(http.StatusOK,",
          "371:   return",
          "372:  }",
          "373:  user.Description = desc",
          "",
          "[Removed Lines]",
          "370:    model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "",
          "[Added Lines]",
          "382:    model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "411:  }",
          "412:  user := service.MyService.User().GetUserInfoByUserName(username)",
          "413:  if user.Id == 0 {",
          "415:   return",
          "416:  }",
          "",
          "[Removed Lines]",
          "414:   c.JSON(common_err.SERVICE_ERROR, model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "",
          "[Added Lines]",
          "426:   c.JSON(common_err.SERVICE_ERROR, model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "461:  if user.Id == 0 {",
          "462:   c.JSON(common_err.SERVICE_ERROR,",
          "464:   return",
          "465:  }",
          "466:  filePath := config.AppInfo.UserDataPath + \"/\" + id + \"/\" + name + \".json\"",
          "",
          "[Removed Lines]",
          "463:    model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "",
          "[Added Lines]",
          "475:    model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "489:  user := service.MyService.User().GetUserInfoById(id)",
          "490:  if user.Id == 0 {",
          "491:   c.JSON(common_err.SERVICE_ERROR,",
          "493:   return",
          "494:  }",
          "495:  data, _ := io.ReadAll(c.Request.Body)",
          "",
          "[Removed Lines]",
          "492:    model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "",
          "[Added Lines]",
          "504:    model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "526:  user := service.MyService.User().GetUserInfoById(id)",
          "527:  if user.Id == 0 {",
          "528:   c.JSON(common_err.SERVICE_ERROR,",
          "530:   return",
          "531:  }",
          "532:  filePath := config.AppInfo.UserDataPath + \"/\" + strconv.Itoa(user.Id) + \"/\" + name + \".json\"",
          "",
          "[Removed Lines]",
          "529:    model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "",
          "[Added Lines]",
          "541:    model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "580:  user := service.MyService.User().GetUserInfoById(id)",
          "581:  if user.Id == 0 {",
          "583:   return",
          "584:  }",
          "585:  fstat, _ := os.Stat(path)",
          "",
          "[Removed Lines]",
          "582:   c.JSON(http.StatusOK, model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "",
          "[Added Lines]",
          "594:   c.JSON(http.StatusOK, model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "631:  user := service.MyService.User().GetUserInfoById(id)",
          "633:  if user.Id == 0 {",
          "635:   return",
          "636:  }",
          "637:  if t == \"avatar\" {",
          "",
          "[Removed Lines]",
          "634:   c.JSON(common_err.SERVICE_ERROR, model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "",
          "[Added Lines]",
          "646:   c.JSON(common_err.SERVICE_ERROR, model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "686:  }",
          "687:  user := service.MyService.User().GetUserInfoById(id)",
          "688:  if user.Id == 0 {",
          "690:   return",
          "691:  }",
          "692:  if !file.Exists(path) {",
          "",
          "[Removed Lines]",
          "689:   c.JSON(common_err.SERVICE_ERROR, model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "",
          "[Added Lines]",
          "701:   c.JSON(common_err.SERVICE_ERROR, model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
          "",
          "---------------"
        ]
      }
    }
  ]
}