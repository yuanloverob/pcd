{
  "cve_id": "CVE-2024-55921",
  "cve_desc": "TYPO3 is a free and open source Content Management Framework. A vulnerability has been identified in the backend user interface functionality involving deep links. Specifically, this functionality is susceptible to Cross-Site Request Forgery (CSRF). Additionally, state-changing actions in downstream components incorrectly accepted submissions via HTTP GET and did not enforce the appropriate HTTP method. Successful exploitation of this vulnerability requires the victim to have an active session on the backend user interface and to be deceived into interacting with a malicious URL targeting the backend, which can occur under the following conditions: The user opens a malicious link, such as one sent via email. The user visits a compromised or manipulated website while the following settings are misconfigured: 1. `security.backend.enforceReferrer` feature is disabled, 2. `BE/cookieSameSite` configuration is set to lax or none. The vulnerability in the affected downstream component \u201cExtension Manager Module\u201d allows attackers to retrieve and install 3rd party extensions from the TYPO3 Extension Repository - which can lead to remote code execution in the worst case. Users are advised to update to TYPO3 versions 11.5.42 ELTS, 12.4.25 LTS, 13.4.3 LTS which fix the problem described.",
  "repo": "TYPO3-CMS/extensionmanager",
  "patch_hash": "a5a58626dcb2af0c31bc6aec068e3d24e789b9e8",
  "patch_info": {
    "commit_hash": "a5a58626dcb2af0c31bc6aec068e3d24e789b9e8",
    "repo": "TYPO3-CMS/extensionmanager",
    "commit_url": "https://github.com/TYPO3-CMS/extensionmanager/commit/a5a58626dcb2af0c31bc6aec068e3d24e789b9e8",
    "files": [
      "Classes/Controller/ActionController.php",
      "Classes/Controller/DownloadController.php",
      "Classes/Controller/ListController.php",
      "Classes/Controller/UpdateFromTerController.php",
      "Classes/Controller/UploadExtensionFileController.php",
      "Classes/ViewHelpers/ToggleExtensionInstallationStateViewHelper.php",
      "Resources/Private/Partials/List/Distribution.html",
      "Resources/Private/Templates/Distribution/Show.html",
      "Resources/Private/Templates/List/Distributions.html",
      "Resources/Private/Templates/List/UnresolvedDependencies.html",
      "Resources/Public/JavaScript/main.js",
      "Resources/Public/JavaScript/repository.js",
      "Resources/Public/JavaScript/update.js"
    ],
    "message": "[SECURITY] Enforce HTTP method assertions for backend modules\n\nResolves: #104456\nReleases: main, 13.4, 12.4\nChange-Id: Ic679584a343b6d35e81325a03148b0cff81f1d27\nSecurity-Bulletin: TYPO3-CORE-SA-2025-003\nSecurity-Bulletin: TYPO3-CORE-SA-2025-004\nSecurity-Bulletin: TYPO3-CORE-SA-2025-005\nSecurity-Bulletin: TYPO3-CORE-SA-2025-006\nSecurity-Bulletin: TYPO3-CORE-SA-2025-007\nSecurity-Bulletin: TYPO3-CORE-SA-2025-008\nSecurity-References: CVE-2024-55893\nSecurity-References: CVE-2024-55894\nSecurity-References: CVE-2024-55920\nSecurity-References: CVE-2024-55921\nSecurity-References: CVE-2024-55922\nSecurity-References: CVE-2024-55923\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/87744\nTested-by: Oliver Hader <oliver.hader@typo3.org>\nReviewed-by: Oliver Hader <oliver.hader@typo3.org>",
    "before_after_code_files": [
      "Classes/Controller/ActionController.php||Classes/Controller/ActionController.php",
      "Classes/Controller/DownloadController.php||Classes/Controller/DownloadController.php",
      "Classes/Controller/ListController.php||Classes/Controller/ListController.php",
      "Classes/Controller/UpdateFromTerController.php||Classes/Controller/UpdateFromTerController.php",
      "Classes/Controller/UploadExtensionFileController.php||Classes/Controller/UploadExtensionFileController.php",
      "Classes/ViewHelpers/ToggleExtensionInstallationStateViewHelper.php||Classes/ViewHelpers/ToggleExtensionInstallationStateViewHelper.php",
      "Resources/Private/Partials/List/Distribution.html||Resources/Private/Partials/List/Distribution.html",
      "Resources/Private/Templates/Distribution/Show.html||Resources/Private/Templates/Distribution/Show.html",
      "Resources/Private/Templates/List/Distributions.html||Resources/Private/Templates/List/Distributions.html",
      "Resources/Private/Templates/List/UnresolvedDependencies.html||Resources/Private/Templates/List/UnresolvedDependencies.html",
      "Resources/Public/JavaScript/main.js||Resources/Public/JavaScript/main.js",
      "Resources/Public/JavaScript/repository.js||Resources/Public/JavaScript/repository.js",
      "Resources/Public/JavaScript/update.js||Resources/Public/JavaScript/update.js"
    ]
  },
  "patch_diff": {
    "Classes/Controller/ActionController.php||Classes/Controller/ActionController.php": [
      "File: Classes/Controller/ActionController.php -> Classes/Controller/ActionController.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "20: use Psr\\Http\\Message\\ResponseInterface;",
      "21: use TYPO3\\CMS\\Core\\Core\\Environment;",
      "22: use TYPO3\\CMS\\Core\\Package\\Exception;",
      "23: use TYPO3\\CMS\\Core\\Package\\Exception\\PackageStatesFileNotWritableException;",
      "24: use TYPO3\\CMS\\Core\\Package\\PackageActivationService;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: use TYPO3\\CMS\\Core\\Http\\AllowedMethodsTrait;",
      "23: use TYPO3\\CMS\\Core\\Http\\Response;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "42: class ActionController extends AbstractController",
      "43: {",
      "44:     public function __construct(",
      "45:         protected readonly InstallUtility $installUtility,",
      "46:         protected readonly ExtensionManagementService $managementService,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "46:     use AllowedMethodsTrait;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "53:     protected function toggleExtensionInstallationStateAction(string $extensionKey): ResponseInterface",
      "54:     {",
      "55:         try {",
      "56:             if (Environment::isComposerMode()) {",
      "57:                 throw new ExtensionManagerException(",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "59:         $this->assertAllowedHttpMethod($this->request, 'POST');",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "69:                     $this->installUtility->enrichExtensionWithDetails($extensionKey, false)",
      "70:                 );",
      "71:                 if ($this->managementService->installExtension($extension) === false) {",
      "77:                             'extensionKey' => $extensionKey,",
      "78:                             'returnAction' => ['controller' => 'List', 'action' => 'index'],",
      "81:                 }",
      "82:             }",
      "83:         } catch (ExtensionManagerException|PackageStatesFileNotWritableException $e) {",
      "",
      "[Removed Lines]",
      "72:                     return $this->redirect(",
      "73:                         'unresolvedDependencies',",
      "74:                         'List',",
      "75:                         null,",
      "76:                         [",
      "79:                         ]",
      "80:                     );",
      "",
      "[Added Lines]",
      "78:                     return (new ForwardResponse('unresolvedDependencies'))",
      "79:                         ->withControllerName('List')",
      "80:                         ->withArguments([",
      "83:                         ]);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "95:     public function installExtensionWithoutSystemDependencyCheckAction(string $extensionKey): ResponseInterface",
      "96:     {",
      "97:         $this->managementService->setSkipDependencyCheck(true);",
      "98:         return (new ForwardResponse('toggleExtensionInstallationState'))->withArguments(['extensionKey' => $extensionKey]);",
      "99:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "100:         $this->assertAllowedHttpMethod($this->request, 'POST');",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "104:     protected function removeExtensionAction(string $extension): ResponseInterface",
      "105:     {",
      "106:         try {",
      "107:             if (Environment::isComposerMode()) {",
      "108:                 throw new ExtensionManagerException(",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "111:         $this->assertAllowedHttpMethod($this->request, 'POST');",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "159:     protected function reloadExtensionDataAction(string $extensionKey): ResponseInterface",
      "160:     {",
      "161:         $this->packageActivationService->reloadExtensionData([$extensionKey], $this);",
      "164:     }",
      "",
      "[Removed Lines]",
      "163:         return $this->redirect('index', 'List');",
      "",
      "[Added Lines]",
      "168:         $this->assertAllowedHttpMethod($this->request, 'POST');",
      "172:         return new Response();",
      "",
      "---------------"
    ],
    "Classes/Controller/DownloadController.php||Classes/Controller/DownloadController.php": [
      "File: Classes/Controller/DownloadController.php -> Classes/Controller/DownloadController.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "20: use Psr\\Http\\Message\\ResponseInterface;",
      "21: use TYPO3\\CMS\\Core\\Configuration\\ExtensionConfiguration;",
      "22: use TYPO3\\CMS\\Core\\Type\\ContextualFeedbackSeverity;",
      "23: use TYPO3\\CMS\\Core\\Utility\\ExtensionManagementUtility;",
      "24: use TYPO3\\CMS\\Core\\View\\ViewInterface;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: use TYPO3\\CMS\\Core\\Http\\AllowedMethodsTrait;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "37: class DownloadController extends AbstractController",
      "38: {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "40:     use AllowedMethodsTrait;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "143:     public function installFromTerAction(Extension $extension): ResponseInterface",
      "144:     {",
      "145:         [$result, $errorMessages] = $this->installFromTer($extension);",
      "146:         $isAutomaticInstallationEnabled = (bool)$this->extensionConfiguration->get('extensionmanager', 'automaticInstallation');",
      "147:         $this->view->assignMultiple([",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "148:         $this->assertAllowedHttpMethod($this->request, 'POST');",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "160:     public function installExtensionWithoutSystemDependencyCheckAction(Extension $extension): ResponseInterface",
      "161:     {",
      "162:         $this->managementService->setSkipDependencyCheck(true);",
      "163:         return (new ForwardResponse('installFromTer'))->withArguments(['extension' => $extension]);",
      "164:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "167:         $this->assertAllowedHttpMethod($this->request, 'POST');",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "170:     public function installDistributionAction(Extension $extension): ResponseInterface",
      "171:     {",
      "172:         if (!ExtensionManagementUtility::isLoaded('impexp')) {",
      "173:             return (new ForwardResponse('distributions'))->withControllerName('List');",
      "174:         }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "179:         $this->assertAllowedHttpMethod($this->request, 'POST');",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "212:     protected function updateExtensionAction(): ResponseInterface",
      "213:     {",
      "214:         $extensionKey = $this->request->getArgument('extension');",
      "215:         $version = $this->request->getArgument('version');",
      "216:         $extension = $this->extensionRepository->findOneByExtensionKeyAndVersion($extensionKey, $version);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "223:         $this->assertAllowedHttpMethod($this->request, 'POST');",
      "",
      "---------------"
    ],
    "Classes/Controller/ListController.php||Classes/Controller/ListController.php": [
      "File: Classes/Controller/ListController.php -> Classes/Controller/ListController.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "22: use TYPO3\\CMS\\Core\\Authentication\\BackendUserAuthentication;",
      "23: use TYPO3\\CMS\\Core\\Configuration\\ExtensionConfiguration;",
      "24: use TYPO3\\CMS\\Core\\Core\\Environment;",
      "25: use TYPO3\\CMS\\Core\\Imaging\\IconFactory;",
      "26: use TYPO3\\CMS\\Core\\Imaging\\IconSize;",
      "27: use TYPO3\\CMS\\Core\\Page\\PageRenderer;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "25: use TYPO3\\CMS\\Core\\Http\\AllowedMethodsTrait;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "48: class ListController extends AbstractController",
      "49: {",
      "50:     public function __construct(",
      "51:         protected readonly PageRenderer $pageRenderer,",
      "52:         protected readonly ExtensionRepository $extensionRepository,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "51:     use AllowedMethodsTrait;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "108:     protected function unresolvedDependenciesAction(string $extensionKey, array $returnAction): ResponseInterface",
      "109:     {",
      "110:         $availableExtensions = $this->listUtility->getAvailableExtensions();",
      "111:         if (isset($availableExtensions[$extensionKey])) {",
      "112:             $extensionArray = $this->listUtility->enrichExtensionsWithEmConfAndTerInformation(",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "113:         $this->assertAllowedHttpMethod($this->request, 'POST');",
      "",
      "---------------"
    ],
    "Classes/Controller/UpdateFromTerController.php||Classes/Controller/UpdateFromTerController.php": [
      "File: Classes/Controller/UpdateFromTerController.php -> Classes/Controller/UpdateFromTerController.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "20: use Psr\\Http\\Message\\ResponseInterface;",
      "21: use TYPO3\\CMS\\Backend\\Utility\\BackendUtility;",
      "22: use TYPO3\\CMS\\Extbase\\Mvc\\View\\JsonView;",
      "23: use TYPO3\\CMS\\Extensionmanager\\Domain\\Repository\\ExtensionRepository;",
      "24: use TYPO3\\CMS\\Extensionmanager\\Exception\\ExtensionManagerException;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: use TYPO3\\CMS\\Core\\Http\\AllowedMethodsTrait;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "31: class UpdateFromTerController extends AbstractController",
      "32: {",
      "33:     public function __construct(",
      "34:         private readonly RemoteRegistry $remoteRegistry,",
      "35:         private readonly ExtensionRepository $extensionRepository",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "34:     use AllowedMethodsTrait;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "43:     public function updateExtensionListFromTerAction(bool $forceUpdateCheck = false): ResponseInterface",
      "44:     {",
      "45:         $updated = false;",
      "46:         $errorMessage = '';",
      "47:         $lastUpdate = null;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "48:         $this->assertAllowedHttpMethod($this->request, 'POST');",
      "",
      "---------------"
    ],
    "Classes/Controller/UploadExtensionFileController.php||Classes/Controller/UploadExtensionFileController.php": [
      "File: Classes/Controller/UploadExtensionFileController.php -> Classes/Controller/UploadExtensionFileController.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "20: use Psr\\Http\\Message\\ResponseInterface;",
      "21: use TYPO3\\CMS\\Core\\Configuration\\ExtensionConfiguration;",
      "22: use TYPO3\\CMS\\Core\\Core\\Environment;",
      "23: use TYPO3\\CMS\\Core\\Security\\BlockSerializationTrait;",
      "24: use TYPO3\\CMS\\Core\\Type\\ContextualFeedbackSeverity;",
      "25: use TYPO3\\CMS\\Core\\Utility\\GeneralUtility;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "23: use TYPO3\\CMS\\Core\\Http\\AllowedMethodsTrait;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "36: class UploadExtensionFileController extends AbstractController",
      "37: {",
      "38:     use BlockSerializationTrait;",
      "40:     protected string $extensionBackupPath = '';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "39:     use AllowedMethodsTrait;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "77:     public function extractAction(bool $overwrite = false): ResponseInterface",
      "78:     {",
      "79:         if (Environment::isComposerMode()) {",
      "80:             throw new ExtensionManagerException(",
      "81:                 'Composer mode is active. You are not allowed to upload any extension file.',",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "81:         $this->assertAllowedHttpMethod($this->request, 'POST');",
      "",
      "---------------"
    ],
    "Classes/ViewHelpers/ToggleExtensionInstallationStateViewHelper.php||Classes/ViewHelpers/ToggleExtensionInstallationStateViewHelper.php": [
      "File: Classes/ViewHelpers/ToggleExtensionInstallationStateViewHelper.php -> Classes/ViewHelpers/ToggleExtensionInstallationStateViewHelper.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "27: use TYPO3\\CMS\\Extbase\\Mvc\\RequestInterface;",
      "28: use TYPO3\\CMS\\Extbase\\Mvc\\Web\\Routing\\UriBuilder;",
      "29: use TYPO3Fluid\\Fluid\\Core\\ViewHelper\\AbstractTagBasedViewHelper;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "30: use TYPO3Fluid\\Fluid\\Core\\ViewHelper\\TagBuilder;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "43:     public function initializeArguments(): void",
      "44:     {",
      "",
      "[Removed Lines]",
      "41:     protected $tagName = 'a';",
      "",
      "[Added Lines]",
      "42:     protected $tagName = 'form';",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "72:             ['extensionKey' => $extension['key']],",
      "73:             'Action'",
      "74:         );",
      "82:         $iconFactory = GeneralUtility::makeInstance(IconFactory::class);",
      "84:         return $this->tag->render();",
      "85:     }",
      "",
      "[Removed Lines]",
      "75:         $this->tag->addAttribute('href', $uri);",
      "76:         $label = $extension['installed'] ? 'deactivate' : 'activate';",
      "77:         $this->tag->addAttribute('title', htmlspecialchars($this->getLanguageService()->sL(",
      "78:             'LLL:EXT:extensionmanager/Resources/Private/Language/locallang.xlf:extensionList.' . $label",
      "79:         )));",
      "80:         $icon = $extension['installed'] ? 'uninstall' : 'install';",
      "81:         $this->tag->addAttribute('class', 'onClickMaskExtensionManager btn btn-default');",
      "83:         $this->tag->setContent($iconFactory->getIcon('actions-system-extension-' . $icon, IconSize::SMALL)->render());",
      "",
      "[Added Lines]",
      "76:         $this->tag->addAttribute('action', $uri);",
      "77:         $this->tag->addAttribute('method', 'post');",
      "80:         $buttonTagBuilder = new TagBuilder('button');",
      "81:         $buttonTagBuilder->addAttribute('type', 'submit');",
      "82:         $buttonTagBuilder->addAttribute('class', 'onClickMaskExtensionManager btn btn-default');",
      "83:         $buttonTagBuilder->setContent($iconFactory->getIcon('actions-system-extension-' . ($extension['installed'] ? 'uninstall' : 'install'), IconSize::SMALL)->render());",
      "84:         $buttonTagBuilder->addAttribute('title', htmlspecialchars($this->getLanguageService()->sL(",
      "85:             'LLL:EXT:extensionmanager/Resources/Private/Language/locallang.xlf:extensionList.' . ($extension['installed'] ? 'deactivate' : 'activate')",
      "86:         )));",
      "87:         $this->tag->setContent($buttonTagBuilder->render());",
      "",
      "---------------"
    ],
    "Resources/Private/Partials/List/Distribution.html||Resources/Private/Partials/List/Distribution.html": [
      "File: Resources/Private/Partials/List/Distribution.html -> Resources/Private/Partials/List/Distribution.html",
      "--- Hunk 1 ---",
      "[Context before]",
      "39:         </p>",
      "40:     </div>",
      "41:     <div class=\"card-footer\">",
      "43:             <core:icon identifier=\"actions-system-extension-import\" /> <f:translate key=\"extensionList.installDistribution\">Install</f:translate>",
      "45:         <f:link.action action=\"show\" controller=\"Distribution\" arguments=\"{extension:distribution}\" class=\"btn btn-link\">",
      "46:             <f:translate key=\"button.details\">Show Details</f:translate>",
      "47:         </f:link.action>",
      "",
      "[Removed Lines]",
      "42:         <f:link.action action=\"installDistribution\" controller=\"Download\" arguments=\"{extension:distribution}\" class=\"btn btn-default t3-button-action-installdistribution\">",
      "44:         </f:link.action>",
      "",
      "[Added Lines]",
      "42:         <f:form.button form=\"installDistributionForm\" type=\"submit\" name=\"extension\" value=\"{distribution}\" class=\"btn btn-default t3-button-action-installdistribution\">",
      "44:         </f:form.button>",
      "",
      "---------------"
    ],
    "Resources/Private/Templates/Distribution/Show.html||Resources/Private/Templates/Distribution/Show.html": [
      "File: Resources/Private/Templates/Distribution/Show.html -> Resources/Private/Templates/Distribution/Show.html",
      "--- Hunk 1 ---",
      "[Context before]",
      "31:                 <p>{extension.description}</p>",
      "32:             </div>",
      "34:             <ul class=\"distribution-detail-actions\">",
      "35:                 <f:if condition=\"{distributionActive}\">",
      "36:                     <f:else>",
      "37:                         <li>",
      "39:                                 <core:icon identifier=\"actions-system-extension-import\" /> <f:translate key=\"extensionList.installDistribution\">Install</f:translate>",
      "41:                         </li>",
      "42:                     </f:else>",
      "43:                     <f:then>",
      "",
      "[Removed Lines]",
      "38:                             <f:link.action action=\"installDistribution\" controller=\"Download\" arguments=\"{extension:extension}\" class=\"btn btn-default t3-button-action-installdistribution\">",
      "40:                             </f:link.action>",
      "",
      "[Added Lines]",
      "34:             <f:form id=\"installDistributionForm\" action=\"installDistribution\" controller=\"Download\"></f:form>",
      "40:                             <f:form.button form=\"installDistributionForm\" type=\"submit\" name=\"extension\" value=\"{extension}\" class=\"btn btn-default t3-button-action-installdistribution\">",
      "42:                             </f:form.button>",
      "",
      "---------------"
    ],
    "Resources/Private/Templates/List/Distributions.html||Resources/Private/Templates/List/Distributions.html": [
      "File: Resources/Private/Templates/List/Distributions.html -> Resources/Private/Templates/List/Distributions.html",
      "--- Hunk 1 ---",
      "[Context before]",
      "35:                     <f:render partial=\"List/Distribution\" arguments=\"{distribution: distribution, official: 0}\" />",
      "36:                 </f:for>",
      "37:             </div>",
      "38:         </f:then>",
      "39:         <f:else>",
      "40:             <p>{f:translate(key: 'extensionList.installImpexp')}</p>",
      "44:         </f:else>",
      "45:     </f:if>",
      "",
      "[Removed Lines]",
      "41:             <f:link.action action=\"toggleExtensionInstallationState\" controller=\"Action\" arguments=\"{extensionKey: 'impexp'}\" class=\"btn btn-default t3-button-action-installdistribution\">",
      "42:                 <core:icon identifier=\"actions-download\" size=\"small\" /><f:translate key=\"distribution.installImpexp\">Install impexp</f:translate>",
      "43:             </f:link.action>",
      "",
      "[Added Lines]",
      "39:             <f:form id=\"installDistributionForm\" action=\"installDistribution\" controller=\"Download\"></f:form>",
      "43:             <f:form action=\"toggleExtensionInstallationState\" controller=\"Action\">",
      "44:                 <f:form.button type=\"submit\" name=\"extensionKey\" value=\"impexp\" class=\"btn btn-default t3-button-action-installdistribution\">",
      "45:                     <core:icon identifier=\"actions-download\" size=\"small\" /><f:translate key=\"distribution.installImpexp\">Install impexp</f:translate>",
      "46:                 </f:form.button>",
      "47:             </f:form>",
      "",
      "---------------"
    ],
    "Resources/Private/Templates/List/UnresolvedDependencies.html||Resources/Private/Templates/List/UnresolvedDependencies.html": [
      "File: Resources/Private/Templates/List/UnresolvedDependencies.html -> Resources/Private/Templates/List/UnresolvedDependencies.html",
      "--- Hunk 1 ---",
      "[Context before]",
      "17:     <em:be.trigger triggers=\"{triggers}\" />",
      "19:     <h1><f:translate key=\"installExtension\">Install extension</f:translate> <small>{f:translate(key: 'downloadExtension.dependencies.errorTitle')}</small></h1>",
      "31: </f:section>",
      "",
      "[Removed Lines]",
      "20:     <f:render partial=\"List/UnresolvedDependencies\" arguments=\"{_all}\" />",
      "21:     <f:be.infobox title=\"{f:translate(key: 'dependencyCheck.unresolvedDependencies.title')}\" state=\"{f:constant(name: 'TYPO3\\CMS\\Fluid\\ViewHelpers\\Be\\InfoboxViewHelper::STATE_WARNING')}\">",
      "22:         <f:render partial=\"List/UnresolvedDependenciesMessage\" />",
      "23:     </f:be.infobox>",
      "24:     <f:link.action action=\"{returnAction.action}\" controller=\"{returnAction.controller}\" class=\"btn btn-default onClickMaskExtensionManager\">",
      "25:         <f:translate key=\"LLL:EXT:core/Resources/Private/Language/locallang_core.xlf:labels.goBack\" />",
      "26:     </f:link.action>",
      "27:     <f:link.action action=\"installExtensionWithoutSystemDependencyCheck\" controller=\"Action\" arguments=\"{extensionKey: extension.extensionKey}\" class=\"btn btn-danger t3js-dependencies disabled onClickMaskExtensionManager\">",
      "28:         <f:translate key=\"dependencyCheck.unresolvedDependencies.proceed\" />",
      "29:     </f:link.action>",
      "",
      "[Added Lines]",
      "20:     <f:form controller=\"Action\" action=\"installExtensionWithoutSystemDependencyCheck\">",
      "21:         <f:form.hidden name=\"extensionKey\" value=\"{extension.extensionKey}\" />",
      "23:         <f:render partial=\"List/UnresolvedDependencies\" arguments=\"{_all}\" />",
      "24:         <f:be.infobox title=\"{f:translate(key: 'dependencyCheck.unresolvedDependencies.title')}\" state=\"{f:constant(name: 'TYPO3\\CMS\\Fluid\\ViewHelpers\\Be\\InfoboxViewHelper::STATE_WARNING')}\">",
      "25:             <f:render partial=\"List/UnresolvedDependenciesMessage\" />",
      "26:         </f:be.infobox>",
      "27:         <f:link.action action=\"{returnAction.action}\" controller=\"{returnAction.controller}\" class=\"btn btn-default onClickMaskExtensionManager\">",
      "28:             <f:translate key=\"LLL:EXT:core/Resources/Private/Language/locallang_core.xlf:labels.goBack\" />",
      "29:         </f:link.action>",
      "31:         <f:form.submit class=\"btn btn-danger t3js-dependencies disabled onClickMaskExtensionManager\" value=\"{f:translate(key: 'dependencyCheck.unresolvedDependencies.proceed')}\" />",
      "32:     </f:form>",
      "",
      "---------------"
    ],
    "Resources/Public/JavaScript/main.js||Resources/Public/JavaScript/main.js": [
      "File: Resources/Public/JavaScript/main.js -> Resources/Public/JavaScript/main.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "13: import DocumentService from\"@typo3/core/document-service.js\";import BrowserSession from\"@typo3/backend/storage/browser-session.js\";import NProgress from\"nprogress\";import{default as Modal}from\"@typo3/backend/modal.js\";import Severity from\"@typo3/backend/severity.js\";import SecurityUtility from\"@typo3/core/security-utility.js\";import ExtensionManagerRepository from\"@typo3/extensionmanager/repository.js\";import ExtensionManagerUpdate from\"@typo3/extensionmanager/update.js\";import ExtensionManagerUploadForm from\"@typo3/extensionmanager/upload-form.js\";import\"@typo3/backend/input/clearable.js\";import AjaxRequest from\"@typo3/core/ajax/ajax-request.js\";import DebounceEvent from\"@typo3/core/event/debounce-event.js\";import RegularEvent from\"@typo3/core/event/regular-event.js\";import SortableTable from\"@typo3/backend/sortable-table.js\";const securityUtility=new SecurityUtility;var ExtensionManagerIdentifier;!function(e){e.extensionlist=\"typo3-extension-list\",e.searchField=\"#Tx_Extensionmanager_extensionkey\"}(ExtensionManagerIdentifier||(ExtensionManagerIdentifier={}));class ExtensionManager{constructor(){this.searchFilterSessionKey=\"tx-extensionmanager-local-filter\",DocumentService.ready().then((()=>{this.Update=new ExtensionManagerUpdate,this.UploadForm=new ExtensionManagerUploadForm,this.Repository=new ExtensionManagerRepository;const e=document.getElementById(ExtensionManagerIdentifier.extensionlist);let t;if(null!==e&&(e instanceof HTMLTableElement&&new SortableTable(e),new RegularEvent(\"click\",((e,t)=>{e.preventDefault(),Modal.confirm(TYPO3.lang[\"extensionList.removalConfirmation.title\"],TYPO3.lang[\"extensionList.removalConfirmation.question\"],Severity.error,[{text:TYPO3.lang[\"button.cancel\"],active:!0,btnClass:\"btn-default\",trigger:()=>{Modal.dismiss()}},{text:TYPO3.lang[\"button.remove\"],btnClass:\"btn-danger\",trigger:()=>{this.removeExtensionFromDisk(t),Modal.dismiss()}}])})).delegateTo(e,\".removeExtension\"),new RegularEvent(\"click\",((e,t)=>{e.preventDefault(),Modal.confirm(TYPO3.lang[\"extensionList.databaseReload.title\"],TYPO3.lang[\"extensionList.databaseReload.message\"],Severity.warning,[{text:TYPO3.lang[\"button.cancel\"],active:!0,btnClass:\"btn-default\",trigger:()=>{Modal.dismiss()}},{text:TYPO3.lang[\"button.reimport\"],btnClass:\"btn-warning\",trigger:()=>{window.location.href=t.href,Modal.dismiss()}}])})).delegateTo(e,\".reloadSqlData\")),new RegularEvent(\"click\",(()=>{NProgress.start()})).delegateTo(document,\".onClickMaskExtensionManager\"),new RegularEvent(\"click\",((e,t)=>{e.preventDefault(),NProgress.start(),new AjaxRequest(t.href).get().then(this.updateExtension)})).delegateTo(document,\"a[data-action=update-extension]\"),new RegularEvent(\"change\",((e,t)=>{const n=document.querySelector(\".t3js-dependencies\");t.checked?n.classList.remove(\"disabled\"):n.classList.add(\"disabled\")})).delegateTo(document,\"input[name=unlockDependencyIgnoreButton]\"),new RegularEvent(\"click\",(()=>{NProgress.start()})).delegateTo(document,\".t3-button-action-installdistribution\"),null!==(t=document.querySelector(ExtensionManagerIdentifier.searchField))){const e=BrowserSession.get(this.searchFilterSessionKey);null!==e&&(t.value=e,this.filterExtensions(e)),new RegularEvent(\"submit\",(e=>{e.preventDefault()})).bindTo(t.closest(\"form\")),new DebounceEvent(\"input\",(e=>{const t=e.target;BrowserSession.set(this.searchFilterSessionKey,t.value),this.filterExtensions(t.value)}),100).bindTo(t),t.clearable({onClear:()=>{BrowserSession.unset(this.searchFilterSessionKey),this.filterExtensions(\"\")}})}this.Repository.initDom(),this.Update.initializeEvents(),this.UploadForm.initializeEvents()}))}filterExtensions(e){const t=document.querySelectorAll(\"[data-filterable]\"),n=[];t.forEach((e=>{const t=Array.from(e.parentElement.children);n.push(t.indexOf(e))}));document.querySelectorAll(\"#typo3-extension-list tbody tr\").forEach((t=>{const o=n.map((e=>t.children.item(e))),i=[];o.forEach((e=>{i.push(e.textContent.trim().replace(/\\s+/g,\" \"))})),t.classList.toggle(\"hidden\",\"\"!==e&&!RegExp(e,\"i\").test(i.join(\":\")))}))}removeExtensionFromDisk(e){NProgress.start(),new AjaxRequest(e.href).get().then((()=>{location.reload()})).finally((()=>{NProgress.done()}))}async updateExtension(e){let t=0;const n=await e.resolve(),o=document.createElement(\"form\");for(const[e,i]of Object.entries(n.updateComments)){const n=document.createElement(\"input\");n.setAttribute(\"type\",\"radio\"),n.setAttribute(\"name\",\"version\"),n.value=e,0===t&&n.setAttribute(\"checked\",\"checked\");const r=document.createElement(\"h3\");r.innerHTML=securityUtility.encodeHtml(e),r.prepend(n);const a=document.createElement(\"div\");a.innerHTML=i.replace(/(\\r\\n|\\n\\r|\\r|\\n)/g,\"\\n\").split(/\\n/).map((e=>securityUtility.encodeHtml(e))).join(\"<br>\"),o.append(r,a),t++}const i=document.createElement(\"h1\");i.textContent=TYPO3.lang[\"extensionList.updateConfirmation.title\"];const r=document.createElement(\"h2\");r.textContent=TYPO3.lang[\"extensionList.updateConfirmation.message\"];const a=document.createElement(\"div\");a.append(i,r,o),NProgress.done(),Modal.confirm(TYPO3.lang[\"extensionList.updateConfirmation.questionVersionComments\"],a,Severity.warning,[{text:TYPO3.lang[\"button.cancel\"],active:!0,btnClass:\"btn-default\",trigger:(e,t)=>t.hideModal()},{text:TYPO3.lang[\"button.updateExtension\"],btnClass:\"btn-warning\",trigger:(e,t)=>{NProgress.start(),new AjaxRequest(n.url).withQueryArguments({version:t.querySelector('input[name=\"version\"]:checked')?.value}).get().finally((()=>{location.reload()})),t.hideModal()}}])}}const extensionManagerObject=new ExtensionManager;void 0===TYPO3.ExtensionManager&&(TYPO3.ExtensionManager=extensionManagerObject);export default extensionManagerObject;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "Resources/Public/JavaScript/repository.js||Resources/Public/JavaScript/repository.js": [
      "File: Resources/Public/JavaScript/repository.js -> Resources/Public/JavaScript/repository.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "13: import NProgress from\"nprogress\";import Modal from\"@typo3/backend/modal.js\";import Notification from\"@typo3/backend/notification.js\";import Severity from\"@typo3/backend/severity.js\";import SortableTable from\"@typo3/backend/sortable-table.js\";import\"@typo3/backend/input/clearable.js\";import AjaxRequest from\"@typo3/core/ajax/ajax-request.js\";import RegularEvent from\"@typo3/core/event/regular-event.js\";class Repository{constructor(){this.getDependencies=async e=>{const t=await e.resolve(),n=document.createElement(\"div\");n.innerHTML=t.message,NProgress.done(),t.hasDependencies?Modal.confirm(t.title,n,Severity.info,[{text:TYPO3.lang[\"button.cancel\"],active:!0,btnClass:\"btn-default\",trigger:()=>{Modal.dismiss()}},{text:TYPO3.lang[\"button.resolveDependencies\"],btnClass:\"btn-primary\",trigger:()=>{this.getResolveDependenciesAndInstallResult(t.url),Modal.dismiss()}}]):t.hasErrors?Notification.error(t.title,t.message,15):this.getResolveDependenciesAndInstallResult(t.url)}}initDom(){NProgress.configure({parent:\".module-loading-indicator\",showSpinner:!1});const e=document.getElementById(\"terVersionTable\"),t=document.getElementById(\"terSearchTable\");e instanceof HTMLTableElement&&new SortableTable(e),t instanceof HTMLTableElement&&new SortableTable(t),this.bindDownload(),this.bindSearchFieldResetter()}bindDownload(){new RegularEvent(\"click\",((e,t)=>{e.preventDefault();const n=t.closest(\"form\").dataset.href;NProgress.start(),new AjaxRequest(n).get().then(this.getDependencies)})).delegateTo(document,\".downloadFromTer form.download button[type=submit]\")}getResolveDependenciesAndInstallResult(e){NProgress.start(),new AjaxRequest(e).get().then((async e=>{try{const t=await e.raw().json(),n=document.createElement(\"div\");if(n.innerHTML=t.errorMessage,t.errorCount>0){const e=Modal.confirm(t.errorTitle,n,Severity.error,[{text:TYPO3.lang[\"button.cancel\"],active:!0,btnClass:\"btn-default\",trigger:()=>{Modal.dismiss()}},{text:TYPO3.lang[\"button.resolveDependenciesIgnore\"],btnClass:\"btn-danger disabled t3js-dependencies\",trigger:e=>{e.currentTarget.classList.contains(\"disabled\")||(this.getResolveDependenciesAndInstallResult(t.skipDependencyUri),Modal.dismiss())}}]);e.addEventListener(\"typo3-modal-shown\",(()=>{const t=e.querySelector(\".t3js-dependencies\");e.querySelector('input[name=\"unlockDependencyIgnoreButton\"]').addEventListener(\"change\",(e=>{e.currentTarget.checked?t?.classList.remove(\"disabled\"):t?.classList.add(\"disabled\")}))}))}else{let e=TYPO3.lang[\"extensionList.dependenciesResolveDownloadSuccess.message\"+t.installationTypeLanguageKey].replace(/\\{0\\}/g,t.extension);e+=\"\\n\"+TYPO3.lang[\"extensionList.dependenciesResolveDownloadSuccess.header\"]+\": \";for(const[n,s]of Object.entries(t.result)){e+=\"\\n\\n\"+TYPO3.lang[\"extensionList.dependenciesResolveDownloadSuccess.item\"]+\" \"+n+\": \";for(const t of Object.keys(s))e+=\"\\n* \"+t}Notification.info(TYPO3.lang[\"extensionList.dependenciesResolveFlashMessage.title\"+t.installationTypeLanguageKey].replace(/\\{0\\}/g,t.extension),e,15),top.TYPO3.ModuleMenu.App.refreshMenu()}}catch{Notification.error(TYPO3.lang[\"extensionList.dependenciesResolveInstallError.title\"]||\"Install error\",TYPO3.lang[\"extensionList.dependenciesResolveInstallError.message\"]||\"Your installation failed while resolving dependencies.\")}})).finally((()=>{NProgress.done()}))}bindSearchFieldResetter(){let e;if(null!==(e=document.querySelector('.typo3-extensionmanager-searchTerForm input[type=\"text\"]'))){const t=\"\"!==e.value;e.clearable({onClear:e=>{t&&e.closest(\"form\").submit()}})}}}export default Repository;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "Resources/Public/JavaScript/update.js||Resources/Public/JavaScript/update.js": [
      "File: Resources/Public/JavaScript/update.js -> Resources/Public/JavaScript/update.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "13: import NProgress from\"nprogress\";import Notification from\"@typo3/backend/notification.js\";import AjaxRequest from\"@typo3/core/ajax/ajax-request.js\";import RegularEvent from\"@typo3/core/event/regular-event.js\";var ExtensionManagerUpdateIdentifier;!function(e){e.extensionTable=\"#terTable\",e.terUpdateAction=\".update-from-ter\",e.pagination=\".pagination-wrap\",e.splashscreen=\".splash-receivedata\",e.terTableWrapper=\"#terTableWrapper .table\"}(ExtensionManagerUpdateIdentifier||(ExtensionManagerUpdateIdentifier={}));class ExtensionManagerUpdate{initializeEvents(){const e=document.querySelector(ExtensionManagerUpdateIdentifier.terUpdateAction);null!==e&&(new RegularEvent(\"submit\",(e=>{e.preventDefault(),this.updateFromTer(e.target.action,!0)})).bindTo(e),this.updateFromTer(e.action,!1))}updateFromTer(e,t){t&&(e+=\"&forceUpdateCheck=1\"),document.querySelector(ExtensionManagerUpdateIdentifier.terUpdateAction)?.classList.add(\"extensionmanager-is-hidden\");const n=document.querySelector(ExtensionManagerUpdateIdentifier.extensionTable);n&&(n.style.display=\"none\"),document.querySelector(ExtensionManagerUpdateIdentifier.splashscreen)?.classList.add(\"extensionmanager-is-shown\"),document.querySelector(ExtensionManagerUpdateIdentifier.terTableWrapper)?.classList.add(\"extensionmanager-is-loading\"),document.querySelector(ExtensionManagerUpdateIdentifier.pagination)?.classList.add(\"extensionmanager-is-loading\");let a=!1;NProgress.start(),new AjaxRequest(e).get().then((async e=>{const t=await e.resolve();t.errorMessage.length&&Notification.error(TYPO3.lang[\"extensionList.updateFromTerFlashMessage.title\"],t.errorMessage,10);const n=document.querySelector(ExtensionManagerUpdateIdentifier.terUpdateAction+\" .extension-list-last-updated\");n.innerText=t.timeSinceLastUpdate,n.setAttribute(\"title\",TYPO3.lang[\"extensionList.updateFromTer.lastUpdate.timeOfLastUpdate\"]+t.lastUpdateTime),t.updated&&(a=!0,window.location.replace(window.location.href))}),(async e=>{const t=e.response.statusText+\"(\"+e.response.status+\"): \"+await e.response.text();Notification.warning(TYPO3.lang[\"extensionList.updateFromTerFlashMessage.title\"],t,10)})).finally((()=>{if(NProgress.done(),!a){document.querySelector(ExtensionManagerUpdateIdentifier.splashscreen)?.classList.remove(\"extensionmanager-is-shown\"),document.querySelector(ExtensionManagerUpdateIdentifier.terTableWrapper)?.classList.remove(\"extensionmanager-is-loading\"),document.querySelector(ExtensionManagerUpdateIdentifier.pagination)?.classList.remove(\"extensionmanager-is-loading\"),document.querySelector(ExtensionManagerUpdateIdentifier.terUpdateAction)?.classList.remove(\"extensionmanager-is-hidden\");const e=document.querySelector(ExtensionManagerUpdateIdentifier.extensionTable);e&&(e.style.display=\"block\")}}))}}export default ExtensionManagerUpdate;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1eb7f8e5b9365b950d85963300ee88b5fe045ab4",
      "candidate_info": {
        "commit_hash": "1eb7f8e5b9365b950d85963300ee88b5fe045ab4",
        "repo": "TYPO3-CMS/extensionmanager",
        "commit_url": "https://github.com/TYPO3-CMS/extensionmanager/commit/1eb7f8e5b9365b950d85963300ee88b5fe045ab4",
        "files": [
          "Classes/ViewHelpers/DownloadExtensionViewHelper.php",
          "Resources/Public/JavaScript/repository.js"
        ],
        "message": "[TASK] Remove superfluous radio fields in extension manager\n\nThe `DownloadExtensionViewHelper` in extension manager outputs\ntwo radio fields with options to install TER extensions either\nas local or system extension. The radio fields are however\nhidden via css and the functionality to install TER extensions\nas a system extension has been removed with #102897.\n\nThis change removes the output of the radio fields in the\n`DownloadExtensionViewHelper` and usage of the fields in\nJavaScript.\n\nResolves: #105715\nRelated: #102897\nReleases: main, 13.4\nChange-Id: I78e968e6c5d6a999ef72e292c22ff94471865d05\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/87265\nReviewed-by: Christian Kuhn <lolli@schwarzbu.ch>\nTested-by: Garvin Hicking <gh@faktor-e.de>\nTested-by: core-ci <typo3@b13.com>\nReviewed-by: Garvin Hicking <gh@faktor-e.de>\nTested-by: Andreas Kienast <akienast@scripting-base.de>\nReviewed-by: Andreas Kienast <akienast@scripting-base.de>",
        "before_after_code_files": [
          "Classes/ViewHelpers/DownloadExtensionViewHelper.php||Classes/ViewHelpers/DownloadExtensionViewHelper.php",
          "Resources/Public/JavaScript/repository.js||Resources/Public/JavaScript/repository.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "Resources/Public/JavaScript/repository.js||Resources/Public/JavaScript/repository.js"
          ],
          "candidate": [
            "Resources/Public/JavaScript/repository.js||Resources/Public/JavaScript/repository.js"
          ]
        }
      },
      "candidate_diff": {
        "Classes/ViewHelpers/DownloadExtensionViewHelper.php||Classes/ViewHelpers/DownloadExtensionViewHelper.php": [
          "File: Classes/ViewHelpers/DownloadExtensionViewHelper.php -> Classes/ViewHelpers/DownloadExtensionViewHelper.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: use TYPO3\\CMS\\Extbase\\Mvc\\Web\\Routing\\UriBuilder;",
          "28: use TYPO3\\CMS\\Extbase\\Service\\ExtensionService;",
          "29: use TYPO3\\CMS\\Extensionmanager\\Domain\\Model\\Extension;",
          "31: use TYPO3\\CMS\\Fluid\\ViewHelpers\\Form\\AbstractFormViewHelper;",
          "",
          "[Removed Lines]",
          "30: use TYPO3\\CMS\\Extensionmanager\\Enum\\ExtensionType;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "65:     {",
          "67:         $extension = $this->arguments['extension'];",
          "81:         $uriBuilder = GeneralUtility::makeInstance(UriBuilder::class);",
          "83:         $request = $this->renderingContext->getAttribute(ServerRequestInterface::class);",
          "",
          "[Removed Lines]",
          "68:         $installPaths =  [",
          "69:             ExtensionType::System->value,",
          "70:             ExtensionType::Local->value,",
          "71:         ];",
          "72:         $pathSelector = '<ul class=\"extensionmanager-is-hidden\">';",
          "73:         foreach ($installPaths as $installPathType) {",
          "75:             $pathSelector .= '<li>",
          "76:                 <input type=\"radio\" id=\"' . htmlspecialchars($extension->getExtensionKey()) . '-downloadPath-' . htmlspecialchars($installPathType) . '\" name=\"downloadPath\" class=\"downloadPath\" value=\"' . htmlspecialchars($installPathType) . '\" ' . ($installPathType === 'Local' ? 'checked=\"checked\"' : '') . ' />",
          "77:                 <label for=\"' . htmlspecialchars($extension->getExtensionKey()) . '-downloadPath-' . htmlspecialchars($installPathType) . '\">' . htmlspecialchars($installPathType) . '</label>",
          "78:             </li>';",
          "79:         }",
          "80:         $pathSelector .= '</ul>';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "107:                 </button>",
          "108:             </div>';",
          "111:         return '<div id=\"' . htmlspecialchars($extension->getExtensionKey()) . '-downloadFromTer\" class=\"downloadFromTer\">' . $this->tag->render() . '</div>';",
          "112:     }",
          "",
          "[Removed Lines]",
          "110:         $this->tag->setContent($label . $pathSelector);",
          "",
          "[Added Lines]",
          "96:         $this->tag->setContent($label);",
          "",
          "---------------"
        ],
        "Resources/Public/JavaScript/repository.js||Resources/Public/JavaScript/repository.js": [
          "File: Resources/Public/JavaScript/repository.js -> Resources/Public/JavaScript/repository.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "13: import NProgress from\"nprogress\";import Modal from\"@typo3/backend/modal.js\";import Notification from\"@typo3/backend/notification.js\";import Severity from\"@typo3/backend/severity.js\";import SortableTable from\"@typo3/backend/sortable-table.js\";import\"@typo3/backend/input/clearable.js\";import AjaxRequest from\"@typo3/core/ajax/ajax-request.js\";import RegularEvent from\"@typo3/core/event/regular-event.js\";class Repository{constructor(){this.downloadPath=\"\",this.getDependencies=async e=>{const t=await e.resolve(),n=document.createElement(\"div\");n.innerHTML=t.message,NProgress.done(),t.hasDependencies?Modal.confirm(t.title,n,Severity.info,[{text:TYPO3.lang[\"button.cancel\"],active:!0,btnClass:\"btn-default\",trigger:()=>{Modal.dismiss()}},{text:TYPO3.lang[\"button.resolveDependencies\"],btnClass:\"btn-primary\",trigger:()=>{this.getResolveDependenciesAndInstallResult(t.url+\"&downloadPath=\"+this.downloadPath),Modal.dismiss()}}]):t.hasErrors?Notification.error(t.title,t.message,15):this.getResolveDependenciesAndInstallResult(t.url+\"&downloadPath=\"+this.downloadPath)}}initDom(){NProgress.configure({parent:\".module-loading-indicator\",showSpinner:!1});const e=document.getElementById(\"terVersionTable\"),t=document.getElementById(\"terSearchTable\");e instanceof HTMLTableElement&&new SortableTable(e),t instanceof HTMLTableElement&&new SortableTable(t),this.bindDownload(),this.bindSearchFieldResetter()}bindDownload(){new RegularEvent(\"click\",((e,t)=>{e.preventDefault();const n=t.closest(\"form\"),s=n.dataset.href;this.downloadPath=n.querySelector(\"input.downloadPath:checked\").value,NProgress.start(),new AjaxRequest(s).get().then(this.getDependencies)})).delegateTo(document,\".downloadFromTer form.download button[type=submit]\")}getResolveDependenciesAndInstallResult(e){NProgress.start(),new AjaxRequest(e).get().then((async e=>{try{const t=await e.raw().json(),n=document.createElement(\"div\");if(n.innerHTML=t.errorMessage,t.errorCount>0){const e=Modal.confirm(t.errorTitle,n,Severity.error,[{text:TYPO3.lang[\"button.cancel\"],active:!0,btnClass:\"btn-default\",trigger:()=>{Modal.dismiss()}},{text:TYPO3.lang[\"button.resolveDependenciesIgnore\"],btnClass:\"btn-danger disabled t3js-dependencies\",trigger:e=>{e.currentTarget.classList.contains(\"disabled\")||(this.getResolveDependenciesAndInstallResult(t.skipDependencyUri),Modal.dismiss())}}]);e.addEventListener(\"typo3-modal-shown\",(()=>{const t=e.querySelector(\".t3js-dependencies\");e.querySelector('input[name=\"unlockDependencyIgnoreButton\"]').addEventListener(\"change\",(e=>{e.currentTarget.checked?t?.classList.remove(\"disabled\"):t?.classList.add(\"disabled\")}))}))}else{let e=TYPO3.lang[\"extensionList.dependenciesResolveDownloadSuccess.message\"+t.installationTypeLanguageKey].replace(/\\{0\\}/g,t.extension);e+=\"\\n\"+TYPO3.lang[\"extensionList.dependenciesResolveDownloadSuccess.header\"]+\": \";for(const[n,s]of Object.entries(t.result)){e+=\"\\n\\n\"+TYPO3.lang[\"extensionList.dependenciesResolveDownloadSuccess.item\"]+\" \"+n+\": \";for(const t of Object.keys(s))e+=\"\\n* \"+t}Notification.info(TYPO3.lang[\"extensionList.dependenciesResolveFlashMessage.title\"+t.installationTypeLanguageKey].replace(/\\{0\\}/g,t.extension),e,15),top.TYPO3.ModuleMenu.App.refreshMenu()}}catch{Notification.error(TYPO3.lang[\"extensionList.dependenciesResolveInstallError.title\"]||\"Install error\",TYPO3.lang[\"extensionList.dependenciesResolveInstallError.message\"]||\"Your installation failed while resolving dependencies.\")}})).finally((()=>{NProgress.done()}))}bindSearchFieldResetter(){let e;if(null!==(e=document.querySelector('.typo3-extensionmanager-searchTerForm input[type=\"text\"]'))){const t=\"\"!==e.value;e.clearable({onClear:e=>{t&&e.closest(\"form\").submit()}})}}}export default Repository;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "53d1f86fb12a5a60c1f17238daeae8d3e23ff2c8",
      "candidate_info": {
        "commit_hash": "53d1f86fb12a5a60c1f17238daeae8d3e23ff2c8",
        "repo": "TYPO3-CMS/extensionmanager",
        "commit_url": "https://github.com/TYPO3-CMS/extensionmanager/commit/53d1f86fb12a5a60c1f17238daeae8d3e23ff2c8",
        "files": [
          "Resources/Public/JavaScript/distribution-image.js",
          "Resources/Public/JavaScript/main.js",
          "Resources/Public/JavaScript/repository.js",
          "Resources/Public/JavaScript/update.js",
          "Resources/Public/JavaScript/upload-form.js"
        ],
        "message": "[TASK] Modernize JavaScript and CSS buildchain\n\nUse ECMAScript 2023 as target for TypeScript, rollup and esbuild,\nwhich is understood by all supported browsers. Plus: We already\nuse ES2023 features anyway, so it's fine to let tools optimize for\nthis target.\n\nReplace clean-css with cssnano\n------------------------------\n\nReplace clean-css with cssnano, which is a native postcss plugin\nthat can operate on the postcss CSS AST directly, without the need\nfor an own CSS parser implementation.\nThis means that this plugin is less likely to miss support for new\nCSS functionality like container queries (which clean-css \u2013 in the\nversion pulled in by postcss-clean \u2013 does not yet support).\n\nReplace html-minifier with htmlnano\n-----------------------------------\n\nReplace the ancient library minify-html-literals with litnano (htmlnano\nfor lit template literals), as minify-html-literals pulls in insecure\ndependencies and does not allow for asynchronous css processing\n(needed for cssnano usage).\n\nReplace terser with esbuild\n---------------------------\n\nEsbuild can be used to bundle and terse dependencies in one step\nand is much faster than terser. It can also replace our existing\nUMD wrappers and therefore is now used as third-party bundler\nfor all the \"simple\" cases (excluding ckeditor and lit).\n\nAlso our own TypeScript buildchain now uses esbuild minification\nas final minification sink.\n\nAllow generation of (temporary) JavaScript and CSS sourcemaps\n-------------------------------------------------------------\n\nThe TypeScript, SASS and thirdparty package buildchain is adapted to\nsupport temporary generation of sourcemaps, which may become helpful for\ndebugging and development, now that more variables are being mangled due\nto the usage of esbuild minification.\n\nA sourcemap can be built via:\n\n  npm run build -- --sourcemaps\n\n  npm run build-js -- --sourcemaps\n  npm run build-css -- --sourcemaps\n\n  # Or only build sourcemaps for changed files\n  npm run build -- watch --sourcemaps\n\nPlease note that the sourcemap are inlined into the generated files\nand needs to be removed by rebuiling without `--sourcemaps` enabled\nin order to be mergable. (CI will verify)\n\nAsynchronous execution task\n---------------------------\n\nThe TypeScript post-processing-copy task and the minification task\n(previously terser, now esbuild) are merged into a new combined\nasynchronous grunt task, allowing to minify lit html\nliterals first and apply JavaScript minification afterwards.\n(Previously terser was executed first and minify-html-literals\nafterwards, which worked because terser did not mangle `html`\nliterals without `module` mode being enabled, now that we use\nesbuild, top level variable names will be mangled into shorter\nvariants)\n\nThe combined \u2013 and most importantly asynchronous \u2013 grunt task allows\nto perform the switch to cssnano instead of clean-css,\nwhich also requires asynchronous execution.\n\nMiscellaneous build optimizations\n---------------------------------\n\n * Fully parallelize CPU-bound tasks, `npm run build` is now 4x faster\n   (parallelization improved `npm run build` runtime from ~40sec to\n   ~18sec and the switch to esbuild caused another 9sec decrease,\n   so we're at ~9sec build time)\n * Remove concurrent wrappers for io-bound copy operations.\n   Thread creation creates unneeded overhead, resulting in 200-400ms\n   slowdowns instead of performance gains.\n * Drop tsconfig.json processing, instead adapt the paths of dashed\n   extensions to match the bare JavaScript module prefix\n * Avoid intermediate files where possible (simplifies sourcemap\n   generation and avoids dozen \"changed\" tracked files while rebuilding)\n * Move Build/util to Build/lib and use ES6 modules (can be loaded via\n   require in nodejs 22 LTS)\n * Avoid fake thirdparty module paths (mark.js, chart.js, flatpickr)\n   where possible and provide custom TypeScript mappings where missing\n * Merge sass processing into the postcss grunt task to ease sourcemap\n   generation and to reduce configuration boilerplate\n\nCommands executed:\n  npm remove \\\n    es-module-lexer \\\n    terser \\\n    grunt-npmcopy \\\n    grunt-sass \\\n    grunt-terser \\\n    @rollup/plugin-terser \\\n    rollup-plugin-postcss \\\n    postcss-clean \\\n    minify-html-literals\n  npm install --save-dev \\\n    esbuild@^0.25 \\\n    rollup@^4.37 \\\n    rollup-plugin-esbuild@^6.2 \\\n    @rollup/plugin-commonjs@^28 \\\n    @rollup/plugin-node-resolve@^16 \\\n    postcss@^8.5 \\\n    cssnano@^7 \\\n    litnano@^1 \\\n    autoprefixer@^10.4.21 \\\n    @csstools/postcss-sass@^5.1\n  # Update to depend on cssnano v7 instead of v6\n  npm install --save-dev @ckeditor/ckeditor5-dev-utils@^46\n  git mv Build/Sources/TypeScript/indexed_search \\\n    Build/Sources/TypeScript/indexed-search\n  git mv Build/Sources/TypeScript/rte_ckeditor \\\n    Build/Sources/TypeScript/rte-ckeditor\n  git mv Build/Sources/TypeScript/sys_note \\\n    Build/Sources/TypeScript/sys-note\n  grep -rl clean-css Build/Sources | xargs sed -i '/clean-css/d'\n  npm audit fix\n  npm run build\n\nResolves: #106357\nResolves: #106358\nReleases: main, 13.4\nChange-Id: Ibb667062b809d06b595e8144f149a0e67200235b\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/88272\nTested-by: Benjamin Franzke <ben@bnf.dev>\nReviewed-by: Andreas Kienast <akienast@scripting-base.de>\nTested-by: Georg Ringer <georg.ringer@gmail.com>\nTested-by: core-ci <typo3@b13.com>\nReviewed-by: Georg Ringer <georg.ringer@gmail.com>\nTested-by: Andreas Kienast <akienast@scripting-base.de>\nReviewed-by: Benjamin Franzke <ben@bnf.dev>",
        "before_after_code_files": [
          "Resources/Public/JavaScript/distribution-image.js||Resources/Public/JavaScript/distribution-image.js",
          "Resources/Public/JavaScript/main.js||Resources/Public/JavaScript/main.js",
          "Resources/Public/JavaScript/repository.js||Resources/Public/JavaScript/repository.js",
          "Resources/Public/JavaScript/update.js||Resources/Public/JavaScript/update.js",
          "Resources/Public/JavaScript/upload-form.js||Resources/Public/JavaScript/upload-form.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "Resources/Public/JavaScript/main.js||Resources/Public/JavaScript/main.js",
            "Resources/Public/JavaScript/repository.js||Resources/Public/JavaScript/repository.js",
            "Resources/Public/JavaScript/update.js||Resources/Public/JavaScript/update.js"
          ],
          "candidate": [
            "Resources/Public/JavaScript/main.js||Resources/Public/JavaScript/main.js",
            "Resources/Public/JavaScript/repository.js||Resources/Public/JavaScript/repository.js",
            "Resources/Public/JavaScript/update.js||Resources/Public/JavaScript/update.js"
          ]
        }
      },
      "candidate_diff": {
        "Resources/Public/JavaScript/distribution-image.js||Resources/Public/JavaScript/distribution-image.js": [
          "File: Resources/Public/JavaScript/distribution-image.js -> Resources/Public/JavaScript/distribution-image.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "13: var __decorate=function(t,e,i,r){var o,a=arguments.length,s=a<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,i):r;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)s=Reflect.decorate(t,e,i,r);else for(var n=t.length-1;n>=0;n--)(o=t[n])&&(s=(a<3?o(s):a>3?o(e,i,s):o(e,i))||s);return a>3&&s&&Object.defineProperty(e,i,s),s};import{css,html,LitElement,nothing}from\"lit\";import{customElement,property}from\"lit/decorators.js\";let DistributionImage=class extends LitElement{render(){if(!this.image&&!this.fallback)return nothing;const t=this.welcomeImage||this.image||this.fallback;return html`<img alt=\"${this.alt}\" src=\"${t}\" @error=\"${t!==this.fallback?this.onError:nothing}\">`}onError(t){const e=t.target;this.image.length&&e.getAttribute(\"src\")===this.welcomeImage?e.setAttribute(\"src\",this.image):this.fallback.length&&e.setAttribute(\"src\",this.fallback)}};DistributionImage.styles=css`img{display:block;width:100%;height:auto}`,__decorate([property({type:String})],DistributionImage.prototype,\"alt\",void 0),__decorate([property({type:String})],DistributionImage.prototype,\"image\",void 0),__decorate([property({type:String})],DistributionImage.prototype,\"welcomeImage\",void 0),__decorate([property({type:String})],DistributionImage.prototype,\"fallback\",void 0),DistributionImage=__decorate([customElement(\"typo3-extensionmanager-distribution-image\")],DistributionImage);export{DistributionImage};",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "Resources/Public/JavaScript/main.js||Resources/Public/JavaScript/main.js": [
          "File: Resources/Public/JavaScript/main.js -> Resources/Public/JavaScript/main.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "13: import DocumentService from\"@typo3/core/document-service.js\";import BrowserSession from\"@typo3/backend/storage/browser-session.js\";import NProgress from\"nprogress\";import{default as Modal}from\"@typo3/backend/modal.js\";import Severity from\"@typo3/backend/severity.js\";import SecurityUtility from\"@typo3/core/security-utility.js\";import ExtensionManagerRepository from\"@typo3/extensionmanager/repository.js\";import ExtensionManagerUpdate from\"@typo3/extensionmanager/update.js\";import ExtensionManagerUploadForm from\"@typo3/extensionmanager/upload-form.js\";import\"@typo3/backend/input/clearable.js\";import AjaxRequest from\"@typo3/core/ajax/ajax-request.js\";import DebounceEvent from\"@typo3/core/event/debounce-event.js\";import RegularEvent from\"@typo3/core/event/regular-event.js\";import SortableTable from\"@typo3/backend/sortable-table.js\";const securityUtility=new SecurityUtility;var ExtensionManagerIdentifier;!function(e){e.extensionlist=\"typo3-extension-list\",e.searchField=\"#Tx_Extensionmanager_extensionkey\"}(ExtensionManagerIdentifier||(ExtensionManagerIdentifier={}));class ExtensionManager{constructor(){this.searchFilterSessionKey=\"tx-extensionmanager-local-filter\",DocumentService.ready().then((()=>{this.Update=new ExtensionManagerUpdate,this.UploadForm=new ExtensionManagerUploadForm,this.Repository=new ExtensionManagerRepository;const e=document.getElementById(ExtensionManagerIdentifier.extensionlist);let t;if(null!==e&&(e instanceof HTMLTableElement&&new SortableTable(e),new RegularEvent(\"click\",((e,t)=>{e.preventDefault(),Modal.confirm(TYPO3.lang[\"extensionList.removalConfirmation.title\"],TYPO3.lang[\"extensionList.removalConfirmation.question\"],Severity.error,[{text:TYPO3.lang[\"button.cancel\"],active:!0,btnClass:\"btn-default\",trigger:()=>{Modal.dismiss()}},{text:TYPO3.lang[\"button.remove\"],btnClass:\"btn-danger\",trigger:()=>{this.removeExtensionFromDisk(t),Modal.dismiss()}}])})).delegateTo(e,\".removeExtension\"),new RegularEvent(\"click\",((e,t)=>{e.preventDefault(),Modal.confirm(TYPO3.lang[\"extensionList.databaseReload.title\"],TYPO3.lang[\"extensionList.databaseReload.message\"],Severity.warning,[{text:TYPO3.lang[\"button.cancel\"],active:!0,btnClass:\"btn-default\",trigger:()=>{Modal.dismiss()}},{text:TYPO3.lang[\"button.reimport\"],btnClass:\"btn-warning\",trigger:()=>{NProgress.start(),new AjaxRequest(t.href).post({}).then((()=>{location.reload()})).finally((()=>{NProgress.done(),Modal.dismiss()}))}}])})).delegateTo(e,\".reloadSqlData\")),new RegularEvent(\"click\",(()=>{NProgress.start()})).delegateTo(document,\".onClickMaskExtensionManager\"),new RegularEvent(\"click\",((e,t)=>{e.preventDefault(),NProgress.start(),new AjaxRequest(t.href).get().then(this.updateExtension)})).delegateTo(document,\"a[data-action=update-extension]\"),new RegularEvent(\"change\",((e,t)=>{const n=document.querySelector(\".t3js-dependencies\");t.checked?n.classList.remove(\"disabled\"):n.classList.add(\"disabled\")})).delegateTo(document,\"input[name=unlockDependencyIgnoreButton]\"),new RegularEvent(\"click\",(()=>{NProgress.start()})).delegateTo(document,\".t3-button-action-installdistribution\"),null!==(t=document.querySelector(ExtensionManagerIdentifier.searchField))){const e=BrowserSession.get(this.searchFilterSessionKey);null!==e&&(t.value=e,this.filterExtensions(e)),new RegularEvent(\"submit\",(e=>{e.preventDefault()})).bindTo(t.closest(\"form\")),new DebounceEvent(\"input\",(e=>{const t=e.target;BrowserSession.set(this.searchFilterSessionKey,t.value),this.filterExtensions(t.value)}),100).bindTo(t),t.clearable({onClear:()=>{BrowserSession.unset(this.searchFilterSessionKey),this.filterExtensions(\"\")}})}this.Repository.initDom(),this.Update.initializeEvents(),this.UploadForm.initializeEvents()}))}filterExtensions(e){const t=document.querySelectorAll(\"[data-filterable]\"),n=[];t.forEach((e=>{const t=Array.from(e.parentElement.children);n.push(t.indexOf(e))}));document.querySelectorAll(\"#typo3-extension-list tbody tr\").forEach((t=>{const o=n.map((e=>t.children.item(e))),r=[];o.forEach((e=>{r.push(e.textContent.trim().replace(/\\s+/g,\" \"))})),t.classList.toggle(\"hidden\",\"\"!==e&&!RegExp(e,\"i\").test(r.join(\":\")))}))}removeExtensionFromDisk(e){NProgress.start(),new AjaxRequest(e.href).post({}).then((()=>{location.reload()})).finally((()=>{NProgress.done()}))}async updateExtension(e){let t=0;const n=await e.resolve(),o=document.createElement(\"form\");for(const[e,r]of Object.entries(n.updateComments)){const n=document.createElement(\"input\");n.setAttribute(\"type\",\"radio\"),n.setAttribute(\"name\",\"version\"),n.value=e,0===t&&n.setAttribute(\"checked\",\"checked\");const i=document.createElement(\"h3\");i.innerHTML=securityUtility.encodeHtml(e),i.prepend(n);const s=document.createElement(\"div\");s.innerHTML=r.replace(/(\\r\\n|\\n\\r|\\r|\\n)/g,\"\\n\").split(/\\n/).map((e=>securityUtility.encodeHtml(e))).join(\"<br>\"),o.append(i,s),t++}const r=document.createElement(\"h1\");r.textContent=TYPO3.lang[\"extensionList.updateConfirmation.title\"];const i=document.createElement(\"h2\");i.textContent=TYPO3.lang[\"extensionList.updateConfirmation.message\"];const s=document.createElement(\"div\");s.append(r,i,o),NProgress.done(),Modal.confirm(TYPO3.lang[\"extensionList.updateConfirmation.questionVersionComments\"],s,Severity.warning,[{text:TYPO3.lang[\"button.cancel\"],active:!0,btnClass:\"btn-default\",trigger:(e,t)=>t.hideModal()},{text:TYPO3.lang[\"button.updateExtension\"],btnClass:\"btn-warning\",trigger:(e,t)=>{NProgress.start(),new AjaxRequest(n.url).post({version:t.querySelector('input[name=\"version\"]:checked')?.value}).finally((()=>{location.reload()})),t.hideModal()}}])}}const extensionManagerObject=new ExtensionManager;void 0===TYPO3.ExtensionManager&&(TYPO3.ExtensionManager=extensionManagerObject);export default extensionManagerObject;",
          "",
          "[Added Lines]",
          "14: `).split(/\\n/).map(T=>E.encodeHtml(T)).join(\"<br>\"),t.append(h,v),i++}const n=document.createElement(\"h1\");n.textContent=TYPO3.lang[\"extensionList.updateConfirmation.title\"];const c=document.createElement(\"h2\");c.textContent=TYPO3.lang[\"extensionList.updateConfirmation.message\"];const d=document.createElement(\"div\");d.append(n,c,t),s.done(),a.confirm(TYPO3.lang[\"extensionList.updateConfirmation.questionVersionComments\"],d,b.warning,[{text:TYPO3.lang[\"button.cancel\"],active:!0,btnClass:\"btn-default\",trigger:(r,m)=>m.hideModal()},{text:TYPO3.lang[\"button.updateExtension\"],btnClass:\"btn-warning\",trigger:(r,m)=>{s.start(),new p(e.url).post({version:m.querySelector('input[name=\"version\"]:checked')?.value}).finally(()=>{location.reload()}),m.hideModal()}}])}}const y=new Y;typeof TYPO3.ExtensionManager>\"u\"&&(TYPO3.ExtensionManager=y);export{y as default};",
          "",
          "---------------"
        ],
        "Resources/Public/JavaScript/repository.js||Resources/Public/JavaScript/repository.js": [
          "File: Resources/Public/JavaScript/repository.js -> Resources/Public/JavaScript/repository.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "13: import NProgress from\"nprogress\";import Modal from\"@typo3/backend/modal.js\";import Notification from\"@typo3/backend/notification.js\";import Severity from\"@typo3/backend/severity.js\";import SortableTable from\"@typo3/backend/sortable-table.js\";import\"@typo3/backend/input/clearable.js\";import AjaxRequest from\"@typo3/core/ajax/ajax-request.js\";import RegularEvent from\"@typo3/core/event/regular-event.js\";class Repository{constructor(){this.getDependencies=async e=>{const t=await e.resolve(),n=document.createElement(\"div\");n.innerHTML=t.message,NProgress.done(),t.hasDependencies?Modal.confirm(t.title,n,Severity.info,[{text:TYPO3.lang[\"button.cancel\"],active:!0,btnClass:\"btn-default\",trigger:()=>{Modal.dismiss()}},{text:TYPO3.lang[\"button.resolveDependencies\"],btnClass:\"btn-primary\",trigger:()=>{this.getResolveDependenciesAndInstallResult(t.url),Modal.dismiss()}}]):t.hasErrors?Notification.error(t.title,t.message,15):this.getResolveDependenciesAndInstallResult(t.url)}}initDom(){NProgress.configure({parent:\".module-loading-indicator\",showSpinner:!1});const e=document.getElementById(\"terVersionTable\"),t=document.getElementById(\"terSearchTable\");e instanceof HTMLTableElement&&new SortableTable(e),t instanceof HTMLTableElement&&new SortableTable(t),this.bindDownload(),this.bindSearchFieldResetter()}bindDownload(){new RegularEvent(\"click\",((e,t)=>{e.preventDefault();const n=t.closest(\"form\").dataset.href;NProgress.start(),new AjaxRequest(n).get().then(this.getDependencies)})).delegateTo(document,\".downloadFromTer form.download button[type=submit]\")}getResolveDependenciesAndInstallResult(e){NProgress.start(),new AjaxRequest(e).post({}).then((async e=>{try{const t=await e.raw().json(),n=document.createElement(\"div\");if(n.innerHTML=t.errorMessage,t.errorCount>0){const e=Modal.confirm(t.errorTitle,n,Severity.error,[{text:TYPO3.lang[\"button.cancel\"],active:!0,btnClass:\"btn-default\",trigger:()=>{Modal.dismiss()}},{text:TYPO3.lang[\"button.resolveDependenciesIgnore\"],btnClass:\"btn-danger disabled t3js-dependencies\",trigger:e=>{e.currentTarget.classList.contains(\"disabled\")||(this.getResolveDependenciesAndInstallResult(t.skipDependencyUri),Modal.dismiss())}}]);e.addEventListener(\"typo3-modal-shown\",(()=>{const t=e.querySelector(\".t3js-dependencies\");e.querySelector('input[name=\"unlockDependencyIgnoreButton\"]').addEventListener(\"change\",(e=>{e.currentTarget.checked?t?.classList.remove(\"disabled\"):t?.classList.add(\"disabled\")}))}))}else{let e=TYPO3.lang[\"extensionList.dependenciesResolveDownloadSuccess.message\"+t.installationTypeLanguageKey].replace(/\\{0\\}/g,t.extension);e+=\"\\n\"+TYPO3.lang[\"extensionList.dependenciesResolveDownloadSuccess.header\"]+\": \";for(const[n,s]of Object.entries(t.result)){e+=\"\\n\\n\"+TYPO3.lang[\"extensionList.dependenciesResolveDownloadSuccess.item\"]+\" \"+n+\": \";for(const t of Object.keys(s))e+=\"\\n* \"+t}Notification.info(TYPO3.lang[\"extensionList.dependenciesResolveFlashMessage.title\"+t.installationTypeLanguageKey].replace(/\\{0\\}/g,t.extension),e,15),top.TYPO3.ModuleMenu.App.refreshMenu()}}catch{Notification.error(TYPO3.lang[\"extensionList.dependenciesResolveInstallError.title\"]||\"Install error\",TYPO3.lang[\"extensionList.dependenciesResolveInstallError.message\"]||\"Your installation failed while resolving dependencies.\")}}),(()=>{Notification.error(TYPO3.lang[\"extensionList.dependenciesResolveInstallError.title\"]||\"Install error\",TYPO3.lang[\"extensionList.dependenciesResolveInstallError.message\"]||\"Your installation failed while resolving dependencies.\")})).finally((()=>{NProgress.done()}))}bindSearchFieldResetter(){let e;if(null!==(e=document.querySelector('.typo3-extensionmanager-searchTerForm input[type=\"text\"]'))){const t=\"\"!==e.value;e.clearable({onClear:e=>{t&&e.closest(\"form\").submit()}})}}}export default Repository;",
          "",
          "[Added Lines]",
          "14: `+TYPO3.lang[\"extensionList.dependenciesResolveDownloadSuccess.header\"]+\": \";for(const[o,d]of Object.entries(n.result)){s+=`",
          "16: `+TYPO3.lang[\"extensionList.dependenciesResolveDownloadSuccess.item\"]+\" \"+o+\": \";for(const u of Object.keys(d))s+=`",
          "",
          "---------------"
        ],
        "Resources/Public/JavaScript/update.js||Resources/Public/JavaScript/update.js": [
          "File: Resources/Public/JavaScript/update.js -> Resources/Public/JavaScript/update.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "13: import NProgress from\"nprogress\";import Notification from\"@typo3/backend/notification.js\";import AjaxRequest from\"@typo3/core/ajax/ajax-request.js\";import RegularEvent from\"@typo3/core/event/regular-event.js\";var ExtensionManagerUpdateIdentifier;!function(e){e.extensionTable=\"#terTable\",e.terUpdateAction=\".update-from-ter\",e.pagination=\".pagination-wrap\",e.splashscreen=\".splash-receivedata\",e.terTableWrapper=\"#terTableWrapper .table\"}(ExtensionManagerUpdateIdentifier||(ExtensionManagerUpdateIdentifier={}));class ExtensionManagerUpdate{initializeEvents(){const e=document.querySelector(ExtensionManagerUpdateIdentifier.terUpdateAction);null!==e&&(new RegularEvent(\"submit\",(e=>{e.preventDefault(),this.updateFromTer(e.target.action,!0)})).bindTo(e),this.updateFromTer(e.action,!1))}updateFromTer(e,t){t&&(e+=\"&forceUpdateCheck=1\"),document.querySelector(ExtensionManagerUpdateIdentifier.terUpdateAction)?.classList.add(\"extensionmanager-is-hidden\");const n=document.querySelector(ExtensionManagerUpdateIdentifier.extensionTable);n&&(n.style.display=\"none\"),document.querySelector(ExtensionManagerUpdateIdentifier.splashscreen)?.classList.add(\"extensionmanager-is-shown\"),document.querySelector(ExtensionManagerUpdateIdentifier.terTableWrapper)?.classList.add(\"extensionmanager-is-loading\"),document.querySelector(ExtensionManagerUpdateIdentifier.pagination)?.classList.add(\"extensionmanager-is-loading\");let a=!1;NProgress.start(),new AjaxRequest(e).post({}).then((async e=>{const t=await e.resolve();t.errorMessage.length&&Notification.error(TYPO3.lang[\"extensionList.updateFromTerFlashMessage.title\"],t.errorMessage,10);const n=document.querySelector(ExtensionManagerUpdateIdentifier.terUpdateAction+\" .extension-list-last-updated\");n.innerText=t.timeSinceLastUpdate,n.setAttribute(\"title\",TYPO3.lang[\"extensionList.updateFromTer.lastUpdate.timeOfLastUpdate\"]+t.lastUpdateTime),t.updated&&(a=!0,window.location.replace(window.location.href))}),(async e=>{const t=e.response.statusText+\"(\"+e.response.status+\"): \"+await e.response.text();Notification.warning(TYPO3.lang[\"extensionList.updateFromTerFlashMessage.title\"],t,10)})).finally((()=>{if(NProgress.done(),!a){document.querySelector(ExtensionManagerUpdateIdentifier.splashscreen)?.classList.remove(\"extensionmanager-is-shown\"),document.querySelector(ExtensionManagerUpdateIdentifier.terTableWrapper)?.classList.remove(\"extensionmanager-is-loading\"),document.querySelector(ExtensionManagerUpdateIdentifier.pagination)?.classList.remove(\"extensionmanager-is-loading\"),document.querySelector(ExtensionManagerUpdateIdentifier.terUpdateAction)?.classList.remove(\"extensionmanager-is-hidden\");const e=document.querySelector(ExtensionManagerUpdateIdentifier.extensionTable);e&&(e.style.display=\"block\")}}))}}export default ExtensionManagerUpdate;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "Resources/Public/JavaScript/upload-form.js||Resources/Public/JavaScript/upload-form.js": [
          "File: Resources/Public/JavaScript/upload-form.js -> Resources/Public/JavaScript/upload-form.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "13: import AjaxRequest from\"@typo3/core/ajax/ajax-request.js\";import RegularEvent from\"@typo3/core/event/regular-event.js\";class UploadForm{constructor(){this.expandedUploadFormClass=\"transformed\"}initializeEvents(){new RegularEvent(\"click\",((e,t)=>{const a=document.querySelector(\".extension-upload-form\");e.preventDefault(),a.classList.contains(this.expandedUploadFormClass)?(a.style.display=\"none\",a.classList.remove(this.expandedUploadFormClass)):(a.style.display=\"\",a.classList.add(this.expandedUploadFormClass),new AjaxRequest(t.href).get().then((async e=>{a.querySelector(\".t3js-upload-form-target\").innerHTML=await e.resolve()})))})).delegateTo(document,\".t3js-upload\")}}export default UploadForm;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a7d0515786fb0317984327a7705bf6474de73b78",
      "candidate_info": {
        "commit_hash": "a7d0515786fb0317984327a7705bf6474de73b78",
        "repo": "TYPO3-CMS/extensionmanager",
        "commit_url": "https://github.com/TYPO3-CMS/extensionmanager/commit/a7d0515786fb0317984327a7705bf6474de73b78",
        "files": [
          "Resources/Private/Partials/List/UnresolvedDependencies.json",
          "Resources/Private/Templates/ExtensionComposerStatus/Detail.html",
          "Resources/Private/Templates/ExtensionComposerStatus/List.html",
          "Resources/Private/Templates/List/UnresolvedDependencies.html"
        ],
        "message": "[TASK] Use `f:constant()` with `f:be.infobox`\n\nIn Fluid 2.12 a ViewHelper `f:constant()` was introduced for fetching\nconstant values and enums. This commit updates all usages of\n`f:be.infobox` to use its state constants instead of their raw values.\n\nResolves: #104500\nReleases: main\nChange-Id: I1e1f5f37a273255ca2ac8a18d4bf48c219d6a89b\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/85412\nReviewed-by: Jasmina Lie\u00dfmann <minapokhalo+typo3@gmail.com>\nTested-by: Garvin Hicking <gh@faktor-e.de>\nReviewed-by: Garvin Hicking <gh@faktor-e.de>\nReviewed-by: Christian Kuhn <lolli@schwarzbu.ch>\nTested-by: core-ci <typo3@b13.com>\nReviewed-by: Andreas Kienast <a.fernandez@scripting-base.de>\nTested-by: Jasmina Lie\u00dfmann <minapokhalo+typo3@gmail.com>\nTested-by: Andreas Kienast <a.fernandez@scripting-base.de>",
        "before_after_code_files": [
          "Resources/Private/Templates/ExtensionComposerStatus/Detail.html||Resources/Private/Templates/ExtensionComposerStatus/Detail.html",
          "Resources/Private/Templates/ExtensionComposerStatus/List.html||Resources/Private/Templates/ExtensionComposerStatus/List.html",
          "Resources/Private/Templates/List/UnresolvedDependencies.html||Resources/Private/Templates/List/UnresolvedDependencies.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "Resources/Private/Templates/List/UnresolvedDependencies.html||Resources/Private/Templates/List/UnresolvedDependencies.html"
          ],
          "candidate": [
            "Resources/Private/Templates/List/UnresolvedDependencies.html||Resources/Private/Templates/List/UnresolvedDependencies.html"
          ]
        }
      },
      "candidate_diff": {
        "Resources/Private/Templates/ExtensionComposerStatus/Detail.html||Resources/Private/Templates/ExtensionComposerStatus/Detail.html": [
          "File: Resources/Private/Templates/ExtensionComposerStatus/Detail.html -> Resources/Private/Templates/ExtensionComposerStatus/Detail.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:             <h1><f:translate key=\"extensionComposerStatus.title\" arguments=\"{0: extensionKey}\" /></h1>",
          "22:             <f:be.infobox title=\"{f:translate(key: 'extensionComposerStatus.deficit.{deficit}', arguments: '{0: \\'{extensionKey}\\'}')}\"",
          "23:                 message=\"{f:translate(key: 'extensionComposerStatus.deficit.information')}\"",
          "25:             <f:if condition=\"{composerManifestMarkup}\">",
          "26:                 <f:then>",
          "27:                     <div class=\"row\">",
          "",
          "[Removed Lines]",
          "24:                 state=\"1\" />",
          "",
          "[Added Lines]",
          "24:                 state=\"{f:constant(name: 'TYPO3\\CMS\\Fluid\\ViewHelpers\\Be\\InfoboxViewHelper::STATE_WARNING')}\" />",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "37:                 <f:else>",
          "38:                     <f:be.infobox title=\"{f:translate(key: 'extensionComposerStatus.manifest.error')}\"",
          "39:                         message=\"{f:translate(key: 'extensionComposerStatus.manifest.error.message')}\"",
          "41:                 </f:else>",
          "42:             </f:if>",
          "43:         </f:then>",
          "44:         <f:else>",
          "45:             <f:be.infobox title=\"{f:translate(key: 'extensionComposerStatus.nothingToUpdate.title')}\"",
          "46:                 message=\"{f:translate(key: 'extensionComposerStatus.nothingToUpdate.message.single', arguments: '{0: \\'{extensionKey}\\'}')}\"",
          "48:         </f:else>",
          "49:     </f:if>",
          "50: </f:section>",
          "",
          "[Removed Lines]",
          "40:                         state=\"2\" />",
          "47:                 state=\"-1\" />",
          "",
          "[Added Lines]",
          "40:                         state=\"{f:constant(name: 'TYPO3\\CMS\\Fluid\\ViewHelpers\\Be\\InfoboxViewHelper::STATE_ERROR')}\" />",
          "47:                 state=\"{f:constant(name: 'TYPO3\\CMS\\Fluid\\ViewHelpers\\Be\\InfoboxViewHelper::STATE_INFO')}\" />",
          "",
          "---------------"
        ],
        "Resources/Private/Templates/ExtensionComposerStatus/List.html||Resources/Private/Templates/ExtensionComposerStatus/List.html": [
          "File: Resources/Private/Templates/ExtensionComposerStatus/List.html -> Resources/Private/Templates/ExtensionComposerStatus/List.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "22:     <f:if condition=\"{extensions}\">",
          "23:         <f:then>",
          "25:                 <p><f:translate key=\"extensionList.composerStatus.information\" /></p>",
          "26:                 <p><f:translate key=\"extensionList.composerStatus.thirdParty\" /></p>",
          "27:                 <h4 class=\"mt-3\"><f:translate key=\"extensionList.composerStatus.missingManifest\" /></h4>",
          "",
          "[Removed Lines]",
          "24:             <f:be.infobox title=\"Invalid composer.json files in extensions\" state=\"-1\">",
          "",
          "[Added Lines]",
          "24:             <f:be.infobox title=\"Invalid composer.json files in extensions\" state=\"{f:constant(name: 'TYPO3\\CMS\\Fluid\\ViewHelpers\\Be\\InfoboxViewHelper::STATE_INFO')}\">",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "78:         <f:else>",
          "79:             <f:be.infobox title=\"{f:translate(key: 'extensionComposerStatus.nothingToUpdate.title')}\"",
          "80:                 message=\"{f:translate(key: 'extensionComposerStatus.nothingToUpdate.message.multiple')}\"",
          "82:         </f:else>",
          "83:     </f:if>",
          "84: </f:section>",
          "",
          "[Removed Lines]",
          "81:                 state=\"-1\" />",
          "",
          "[Added Lines]",
          "81:                 state=\"{f:constant(name: 'TYPO3\\CMS\\Fluid\\ViewHelpers\\Be\\InfoboxViewHelper::STATE_INFO')}\" />",
          "",
          "---------------"
        ],
        "Resources/Private/Templates/List/UnresolvedDependencies.html||Resources/Private/Templates/List/UnresolvedDependencies.html": [
          "File: Resources/Private/Templates/List/UnresolvedDependencies.html -> Resources/Private/Templates/List/UnresolvedDependencies.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "19:     <h1><f:translate key=\"installExtension\">Install extension</f:translate> <small>{f:translate(key: 'downloadExtension.dependencies.errorTitle')}</small></h1>",
          "20:     <f:render partial=\"List/UnresolvedDependencies\" arguments=\"{_all}\" />",
          "22:         <f:render partial=\"List/UnresolvedDependenciesMessage\" />",
          "23:     </f:be.infobox>",
          "24:     <f:link.action action=\"{returnAction.action}\" controller=\"{returnAction.controller}\" class=\"btn btn-default onClickMaskExtensionManager\">",
          "",
          "[Removed Lines]",
          "21:     <f:be.infobox title=\"{f:translate(key: 'dependencyCheck.unresolvedDependencies.title')}\" state=\"1\">",
          "",
          "[Added Lines]",
          "21:     <f:be.infobox title=\"{f:translate(key: 'dependencyCheck.unresolvedDependencies.title')}\" state=\"{f:constant(name: 'TYPO3\\CMS\\Fluid\\ViewHelpers\\Be\\InfoboxViewHelper::STATE_WARNING')}\">",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "023ab662f5cb3ddae4187928a75d46fbccfef567",
      "candidate_info": {
        "commit_hash": "023ab662f5cb3ddae4187928a75d46fbccfef567",
        "repo": "TYPO3-CMS/extensionmanager",
        "commit_url": "https://github.com/TYPO3-CMS/extensionmanager/commit/023ab662f5cb3ddae4187928a75d46fbccfef567",
        "files": [
          "Classes/Controller/ActionController.php",
          "Classes/Controller/DownloadController.php",
          "Classes/Controller/ListController.php",
          "Classes/Controller/UpdateFromTerController.php",
          "Classes/Controller/UploadExtensionFileController.php",
          "Classes/ViewHelpers/ToggleExtensionInstallationStateViewHelper.php",
          "Resources/Private/Partials/List/Distribution.html",
          "Resources/Private/Templates/Distribution/Show.html",
          "Resources/Private/Templates/List/Distributions.html",
          "Resources/Private/Templates/List/UnresolvedDependencies.html",
          "Resources/Public/JavaScript/main.js",
          "Resources/Public/JavaScript/repository.js",
          "Resources/Public/JavaScript/update.js"
        ],
        "message": "[SECURITY] Enforce HTTP method assertions for backend modules\n\nResolves: #104456\nReleases: main, 13.4, 12.4\nChange-Id: Ic679584a343b6d35e81325a03148b0cff81f1d27\nSecurity-Bulletin: TYPO3-CORE-SA-2025-003\nSecurity-Bulletin: TYPO3-CORE-SA-2025-004\nSecurity-Bulletin: TYPO3-CORE-SA-2025-005\nSecurity-Bulletin: TYPO3-CORE-SA-2025-006\nSecurity-Bulletin: TYPO3-CORE-SA-2025-007\nSecurity-Bulletin: TYPO3-CORE-SA-2025-008\nSecurity-References: CVE-2024-55893\nSecurity-References: CVE-2024-55894\nSecurity-References: CVE-2024-55920\nSecurity-References: CVE-2024-55921\nSecurity-References: CVE-2024-55922\nSecurity-References: CVE-2024-55923\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/87741\nTested-by: Oliver Hader <oliver.hader@typo3.org>\nReviewed-by: Oliver Hader <oliver.hader@typo3.org>",
        "before_after_code_files": [
          "Classes/Controller/ActionController.php||Classes/Controller/ActionController.php",
          "Classes/Controller/DownloadController.php||Classes/Controller/DownloadController.php",
          "Classes/Controller/ListController.php||Classes/Controller/ListController.php",
          "Classes/Controller/UpdateFromTerController.php||Classes/Controller/UpdateFromTerController.php",
          "Classes/Controller/UploadExtensionFileController.php||Classes/Controller/UploadExtensionFileController.php",
          "Classes/ViewHelpers/ToggleExtensionInstallationStateViewHelper.php||Classes/ViewHelpers/ToggleExtensionInstallationStateViewHelper.php",
          "Resources/Private/Partials/List/Distribution.html||Resources/Private/Partials/List/Distribution.html",
          "Resources/Private/Templates/Distribution/Show.html||Resources/Private/Templates/Distribution/Show.html",
          "Resources/Private/Templates/List/Distributions.html||Resources/Private/Templates/List/Distributions.html",
          "Resources/Private/Templates/List/UnresolvedDependencies.html||Resources/Private/Templates/List/UnresolvedDependencies.html",
          "Resources/Public/JavaScript/main.js||Resources/Public/JavaScript/main.js",
          "Resources/Public/JavaScript/repository.js||Resources/Public/JavaScript/repository.js",
          "Resources/Public/JavaScript/update.js||Resources/Public/JavaScript/update.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "Classes/Controller/ActionController.php||Classes/Controller/ActionController.php",
            "Classes/Controller/DownloadController.php||Classes/Controller/DownloadController.php",
            "Classes/Controller/ListController.php||Classes/Controller/ListController.php",
            "Classes/Controller/UpdateFromTerController.php||Classes/Controller/UpdateFromTerController.php",
            "Classes/Controller/UploadExtensionFileController.php||Classes/Controller/UploadExtensionFileController.php",
            "Classes/ViewHelpers/ToggleExtensionInstallationStateViewHelper.php||Classes/ViewHelpers/ToggleExtensionInstallationStateViewHelper.php",
            "Resources/Private/Partials/List/Distribution.html||Resources/Private/Partials/List/Distribution.html",
            "Resources/Private/Templates/Distribution/Show.html||Resources/Private/Templates/Distribution/Show.html",
            "Resources/Private/Templates/List/Distributions.html||Resources/Private/Templates/List/Distributions.html",
            "Resources/Private/Templates/List/UnresolvedDependencies.html||Resources/Private/Templates/List/UnresolvedDependencies.html",
            "Resources/Public/JavaScript/main.js||Resources/Public/JavaScript/main.js",
            "Resources/Public/JavaScript/repository.js||Resources/Public/JavaScript/repository.js",
            "Resources/Public/JavaScript/update.js||Resources/Public/JavaScript/update.js"
          ],
          "candidate": [
            "Classes/Controller/ActionController.php||Classes/Controller/ActionController.php",
            "Classes/Controller/DownloadController.php||Classes/Controller/DownloadController.php",
            "Classes/Controller/ListController.php||Classes/Controller/ListController.php",
            "Classes/Controller/UpdateFromTerController.php||Classes/Controller/UpdateFromTerController.php",
            "Classes/Controller/UploadExtensionFileController.php||Classes/Controller/UploadExtensionFileController.php",
            "Classes/ViewHelpers/ToggleExtensionInstallationStateViewHelper.php||Classes/ViewHelpers/ToggleExtensionInstallationStateViewHelper.php",
            "Resources/Private/Partials/List/Distribution.html||Resources/Private/Partials/List/Distribution.html",
            "Resources/Private/Templates/Distribution/Show.html||Resources/Private/Templates/Distribution/Show.html",
            "Resources/Private/Templates/List/Distributions.html||Resources/Private/Templates/List/Distributions.html",
            "Resources/Private/Templates/List/UnresolvedDependencies.html||Resources/Private/Templates/List/UnresolvedDependencies.html",
            "Resources/Public/JavaScript/main.js||Resources/Public/JavaScript/main.js",
            "Resources/Public/JavaScript/repository.js||Resources/Public/JavaScript/repository.js",
            "Resources/Public/JavaScript/update.js||Resources/Public/JavaScript/update.js"
          ]
        }
      },
      "candidate_diff": {
        "Classes/Controller/ActionController.php||Classes/Controller/ActionController.php": [
          "File: Classes/Controller/ActionController.php -> Classes/Controller/ActionController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: use Psr\\Http\\Message\\ResponseInterface;",
          "21: use TYPO3\\CMS\\Core\\Core\\Environment;",
          "22: use TYPO3\\CMS\\Core\\Package\\Exception;",
          "23: use TYPO3\\CMS\\Core\\Package\\Exception\\PackageStatesFileNotWritableException;",
          "24: use TYPO3\\CMS\\Core\\Package\\PackageActivationService;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: use TYPO3\\CMS\\Core\\Http\\AllowedMethodsTrait;",
          "23: use TYPO3\\CMS\\Core\\Http\\Response;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "42: class ActionController extends AbstractController",
          "43: {",
          "44:     public function __construct(",
          "45:         protected readonly InstallUtility $installUtility,",
          "46:         protected readonly ExtensionManagementService $managementService,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46:     use AllowedMethodsTrait;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "53:     protected function toggleExtensionInstallationStateAction(string $extensionKey): ResponseInterface",
          "54:     {",
          "55:         try {",
          "56:             if (Environment::isComposerMode()) {",
          "57:                 throw new ExtensionManagerException(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59:         $this->assertAllowedHttpMethod($this->request, 'POST');",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "69:                     $this->installUtility->enrichExtensionWithDetails($extensionKey, false)",
          "70:                 );",
          "71:                 if ($this->managementService->installExtension($extension) === false) {",
          "77:                             'extensionKey' => $extensionKey,",
          "78:                             'returnAction' => ['controller' => 'List', 'action' => 'index'],",
          "81:                 }",
          "82:             }",
          "83:         } catch (ExtensionManagerException|PackageStatesFileNotWritableException $e) {",
          "",
          "[Removed Lines]",
          "72:                     return $this->redirect(",
          "73:                         'unresolvedDependencies',",
          "74:                         'List',",
          "75:                         null,",
          "76:                         [",
          "79:                         ]",
          "80:                     );",
          "",
          "[Added Lines]",
          "78:                     return (new ForwardResponse('unresolvedDependencies'))",
          "79:                         ->withControllerName('List')",
          "80:                         ->withArguments([",
          "83:                         ]);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "95:     public function installExtensionWithoutSystemDependencyCheckAction(string $extensionKey): ResponseInterface",
          "96:     {",
          "97:         $this->managementService->setSkipDependencyCheck(true);",
          "98:         return (new ForwardResponse('toggleExtensionInstallationState'))->withArguments(['extensionKey' => $extensionKey]);",
          "99:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "100:         $this->assertAllowedHttpMethod($this->request, 'POST');",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "104:     protected function removeExtensionAction(string $extension): ResponseInterface",
          "105:     {",
          "106:         try {",
          "107:             if (Environment::isComposerMode()) {",
          "108:                 throw new ExtensionManagerException(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "111:         $this->assertAllowedHttpMethod($this->request, 'POST');",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "159:     protected function reloadExtensionDataAction(string $extensionKey): ResponseInterface",
          "160:     {",
          "161:         $this->packageActivationService->reloadExtensionData([$extensionKey], $this);",
          "164:     }",
          "",
          "[Removed Lines]",
          "163:         return $this->redirect('index', 'List');",
          "",
          "[Added Lines]",
          "168:         $this->assertAllowedHttpMethod($this->request, 'POST');",
          "172:         return new Response();",
          "",
          "---------------"
        ],
        "Classes/Controller/DownloadController.php||Classes/Controller/DownloadController.php": [
          "File: Classes/Controller/DownloadController.php -> Classes/Controller/DownloadController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: use Psr\\Http\\Message\\ResponseInterface;",
          "21: use TYPO3\\CMS\\Core\\Configuration\\ExtensionConfiguration;",
          "22: use TYPO3\\CMS\\Core\\Type\\ContextualFeedbackSeverity;",
          "23: use TYPO3\\CMS\\Core\\Utility\\ExtensionManagementUtility;",
          "24: use TYPO3\\CMS\\Extbase\\Http\\ForwardResponse;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: use TYPO3\\CMS\\Core\\Http\\AllowedMethodsTrait;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36: class DownloadController extends AbstractController",
          "37: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39:     use AllowedMethodsTrait;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "142:     public function installFromTerAction(Extension $extension): ResponseInterface",
          "143:     {",
          "144:         [$result, $errorMessages] = $this->installFromTer($extension);",
          "145:         $isAutomaticInstallationEnabled = (bool)$this->extensionConfiguration->get('extensionmanager', 'automaticInstallation');",
          "146:         $this->view->assignMultiple([",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "147:         $this->assertAllowedHttpMethod($this->request, 'POST');",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "159:     public function installExtensionWithoutSystemDependencyCheckAction(Extension $extension): ResponseInterface",
          "160:     {",
          "161:         $this->managementService->setSkipDependencyCheck(true);",
          "162:         return (new ForwardResponse('installFromTer'))->withArguments(['extension' => $extension]);",
          "163:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "166:         $this->assertAllowedHttpMethod($this->request, 'POST');",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "169:     public function installDistributionAction(Extension $extension): ResponseInterface",
          "170:     {",
          "171:         if (!ExtensionManagementUtility::isLoaded('impexp')) {",
          "172:             return (new ForwardResponse('distributions'))->withControllerName('List');",
          "173:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "178:         $this->assertAllowedHttpMethod($this->request, 'POST');",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "211:     protected function updateExtensionAction(): ResponseInterface",
          "212:     {",
          "213:         $extensionKey = $this->request->getArgument('extension');",
          "214:         $version = $this->request->getArgument('version');",
          "215:         $extension = $this->extensionRepository->findOneByExtensionKeyAndVersion($extensionKey, $version);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "222:         $this->assertAllowedHttpMethod($this->request, 'POST');",
          "",
          "---------------"
        ],
        "Classes/Controller/ListController.php||Classes/Controller/ListController.php": [
          "File: Classes/Controller/ListController.php -> Classes/Controller/ListController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: use TYPO3\\CMS\\Core\\Authentication\\BackendUserAuthentication;",
          "23: use TYPO3\\CMS\\Core\\Configuration\\ExtensionConfiguration;",
          "24: use TYPO3\\CMS\\Core\\Core\\Environment;",
          "25: use TYPO3\\CMS\\Core\\Imaging\\IconFactory;",
          "26: use TYPO3\\CMS\\Core\\Imaging\\IconSize;",
          "27: use TYPO3\\CMS\\Core\\Page\\PageRenderer;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: use TYPO3\\CMS\\Core\\Http\\AllowedMethodsTrait;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "48: class ListController extends AbstractController",
          "49: {",
          "50:     public function __construct(",
          "51:         protected readonly PageRenderer $pageRenderer,",
          "52:         protected readonly ExtensionRepository $extensionRepository,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "51:     use AllowedMethodsTrait;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "108:     protected function unresolvedDependenciesAction(string $extensionKey, array $returnAction): ResponseInterface",
          "109:     {",
          "110:         $availableExtensions = $this->listUtility->getAvailableExtensions();",
          "111:         if (isset($availableExtensions[$extensionKey])) {",
          "112:             $extensionArray = $this->listUtility->enrichExtensionsWithEmConfAndTerInformation(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "113:         $this->assertAllowedHttpMethod($this->request, 'POST');",
          "",
          "---------------"
        ],
        "Classes/Controller/UpdateFromTerController.php||Classes/Controller/UpdateFromTerController.php": [
          "File: Classes/Controller/UpdateFromTerController.php -> Classes/Controller/UpdateFromTerController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: use Psr\\Http\\Message\\ResponseInterface;",
          "21: use TYPO3\\CMS\\Backend\\Utility\\BackendUtility;",
          "22: use TYPO3\\CMS\\Extbase\\Mvc\\View\\JsonView;",
          "23: use TYPO3\\CMS\\Extensionmanager\\Domain\\Repository\\ExtensionRepository;",
          "24: use TYPO3\\CMS\\Extensionmanager\\Exception\\ExtensionManagerException;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: use TYPO3\\CMS\\Core\\Http\\AllowedMethodsTrait;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "31: class UpdateFromTerController extends AbstractController",
          "32: {",
          "33:     public function __construct(",
          "34:         private readonly RemoteRegistry $remoteRegistry,",
          "35:         private readonly ExtensionRepository $extensionRepository",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34:     use AllowedMethodsTrait;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "43:     public function updateExtensionListFromTerAction(bool $forceUpdateCheck = false): ResponseInterface",
          "44:     {",
          "45:         $updated = false;",
          "46:         $errorMessage = '';",
          "47:         $lastUpdate = null;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48:         $this->assertAllowedHttpMethod($this->request, 'POST');",
          "",
          "---------------"
        ],
        "Classes/Controller/UploadExtensionFileController.php||Classes/Controller/UploadExtensionFileController.php": [
          "File: Classes/Controller/UploadExtensionFileController.php -> Classes/Controller/UploadExtensionFileController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: use Psr\\Http\\Message\\ResponseInterface;",
          "21: use TYPO3\\CMS\\Core\\Configuration\\ExtensionConfiguration;",
          "22: use TYPO3\\CMS\\Core\\Core\\Environment;",
          "23: use TYPO3\\CMS\\Core\\Security\\BlockSerializationTrait;",
          "24: use TYPO3\\CMS\\Core\\Type\\ContextualFeedbackSeverity;",
          "25: use TYPO3\\CMS\\Core\\Utility\\GeneralUtility;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: use TYPO3\\CMS\\Core\\Http\\AllowedMethodsTrait;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36: class UploadExtensionFileController extends AbstractController",
          "37: {",
          "38:     use BlockSerializationTrait;",
          "40:     protected string $extensionBackupPath = '';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39:     use AllowedMethodsTrait;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "77:     public function extractAction(bool $overwrite = false): ResponseInterface",
          "78:     {",
          "79:         if (Environment::isComposerMode()) {",
          "80:             throw new ExtensionManagerException(",
          "81:                 'Composer mode is active. You are not allowed to upload any extension file.',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "81:         $this->assertAllowedHttpMethod($this->request, 'POST');",
          "",
          "---------------"
        ],
        "Classes/ViewHelpers/ToggleExtensionInstallationStateViewHelper.php||Classes/ViewHelpers/ToggleExtensionInstallationStateViewHelper.php": [
          "File: Classes/ViewHelpers/ToggleExtensionInstallationStateViewHelper.php -> Classes/ViewHelpers/ToggleExtensionInstallationStateViewHelper.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: use TYPO3\\CMS\\Extbase\\Mvc\\RequestInterface;",
          "28: use TYPO3\\CMS\\Extbase\\Mvc\\Web\\Routing\\UriBuilder;",
          "29: use TYPO3Fluid\\Fluid\\Core\\ViewHelper\\AbstractTagBasedViewHelper;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: use TYPO3Fluid\\Fluid\\Core\\ViewHelper\\TagBuilder;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43:     public function initializeArguments(): void",
          "44:     {",
          "",
          "[Removed Lines]",
          "41:     protected $tagName = 'a';",
          "",
          "[Added Lines]",
          "42:     protected $tagName = 'form';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "72:             ['extensionKey' => $extension['key']],",
          "73:             'Action'",
          "74:         );",
          "82:         $iconFactory = GeneralUtility::makeInstance(IconFactory::class);",
          "84:         return $this->tag->render();",
          "85:     }",
          "",
          "[Removed Lines]",
          "75:         $this->tag->addAttribute('href', $uri);",
          "76:         $label = $extension['installed'] ? 'deactivate' : 'activate';",
          "77:         $this->tag->addAttribute('title', htmlspecialchars($this->getLanguageService()->sL(",
          "78:             'LLL:EXT:extensionmanager/Resources/Private/Language/locallang.xlf:extensionList.' . $label",
          "79:         )));",
          "80:         $icon = $extension['installed'] ? 'uninstall' : 'install';",
          "81:         $this->tag->addAttribute('class', 'onClickMaskExtensionManager btn btn-default');",
          "83:         $this->tag->setContent($iconFactory->getIcon('actions-system-extension-' . $icon, IconSize::SMALL)->render());",
          "",
          "[Added Lines]",
          "76:         $this->tag->addAttribute('action', $uri);",
          "77:         $this->tag->addAttribute('method', 'post');",
          "80:         $buttonTagBuilder = new TagBuilder('button');",
          "81:         $buttonTagBuilder->addAttribute('type', 'submit');",
          "82:         $buttonTagBuilder->addAttribute('class', 'onClickMaskExtensionManager btn btn-default');",
          "83:         $buttonTagBuilder->setContent($iconFactory->getIcon('actions-system-extension-' . ($extension['installed'] ? 'uninstall' : 'install'), IconSize::SMALL)->render());",
          "84:         $buttonTagBuilder->addAttribute('title', htmlspecialchars($this->getLanguageService()->sL(",
          "85:             'LLL:EXT:extensionmanager/Resources/Private/Language/locallang.xlf:extensionList.' . ($extension['installed'] ? 'deactivate' : 'activate')",
          "86:         )));",
          "87:         $this->tag->setContent($buttonTagBuilder->render());",
          "",
          "---------------"
        ],
        "Resources/Private/Partials/List/Distribution.html||Resources/Private/Partials/List/Distribution.html": [
          "File: Resources/Private/Partials/List/Distribution.html -> Resources/Private/Partials/List/Distribution.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:         </p>",
          "40:     </div>",
          "41:     <div class=\"card-footer\">",
          "43:             <core:icon identifier=\"actions-system-extension-import\" /> <f:translate key=\"extensionList.installDistribution\">Install</f:translate>",
          "45:         <f:link.action action=\"show\" controller=\"Distribution\" arguments=\"{extension:distribution}\" class=\"btn btn-link\">",
          "46:             <f:translate key=\"button.details\">Show Details</f:translate>",
          "47:         </f:link.action>",
          "",
          "[Removed Lines]",
          "42:         <f:link.action action=\"installDistribution\" controller=\"Download\" arguments=\"{extension:distribution}\" class=\"btn btn-default t3-button-action-installdistribution\">",
          "44:         </f:link.action>",
          "",
          "[Added Lines]",
          "42:         <f:form.button form=\"installDistributionForm\" type=\"submit\" name=\"extension\" value=\"{distribution}\" class=\"btn btn-default t3-button-action-installdistribution\">",
          "44:         </f:form.button>",
          "",
          "---------------"
        ],
        "Resources/Private/Templates/Distribution/Show.html||Resources/Private/Templates/Distribution/Show.html": [
          "File: Resources/Private/Templates/Distribution/Show.html -> Resources/Private/Templates/Distribution/Show.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:                 <p>{extension.description}</p>",
          "32:             </div>",
          "34:             <ul class=\"distribution-detail-actions\">",
          "35:                 <f:if condition=\"{distributionActive}\">",
          "36:                     <f:else>",
          "37:                         <li>",
          "39:                                 <core:icon identifier=\"actions-system-extension-import\" /> <f:translate key=\"extensionList.installDistribution\">Install</f:translate>",
          "41:                         </li>",
          "42:                     </f:else>",
          "43:                     <f:then>",
          "",
          "[Removed Lines]",
          "38:                             <f:link.action action=\"installDistribution\" controller=\"Download\" arguments=\"{extension:extension}\" class=\"btn btn-default t3-button-action-installdistribution\">",
          "40:                             </f:link.action>",
          "",
          "[Added Lines]",
          "34:             <f:form id=\"installDistributionForm\" action=\"installDistribution\" controller=\"Download\"></f:form>",
          "40:                             <f:form.button form=\"installDistributionForm\" type=\"submit\" name=\"extension\" value=\"{extension}\" class=\"btn btn-default t3-button-action-installdistribution\">",
          "42:                             </f:form.button>",
          "",
          "---------------"
        ],
        "Resources/Private/Templates/List/Distributions.html||Resources/Private/Templates/List/Distributions.html": [
          "File: Resources/Private/Templates/List/Distributions.html -> Resources/Private/Templates/List/Distributions.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "35:                     <f:render partial=\"List/Distribution\" arguments=\"{distribution: distribution, official: 0}\" />",
          "36:                 </f:for>",
          "37:             </div>",
          "38:         </f:then>",
          "39:         <f:else>",
          "40:             <p>{f:translate(key: 'extensionList.installImpexp')}</p>",
          "44:         </f:else>",
          "45:     </f:if>",
          "",
          "[Removed Lines]",
          "41:             <f:link.action action=\"toggleExtensionInstallationState\" controller=\"Action\" arguments=\"{extensionKey: 'impexp'}\" class=\"btn btn-default t3-button-action-installdistribution\">",
          "42:                 <core:icon identifier=\"actions-download\" size=\"small\" /><f:translate key=\"distribution.installImpexp\">Install impexp</f:translate>",
          "43:             </f:link.action>",
          "",
          "[Added Lines]",
          "39:             <f:form id=\"installDistributionForm\" action=\"installDistribution\" controller=\"Download\"></f:form>",
          "43:             <f:form action=\"toggleExtensionInstallationState\" controller=\"Action\">",
          "44:                 <f:form.button type=\"submit\" name=\"extensionKey\" value=\"impexp\" class=\"btn btn-default t3-button-action-installdistribution\">",
          "45:                     <core:icon identifier=\"actions-download\" size=\"small\" /><f:translate key=\"distribution.installImpexp\">Install impexp</f:translate>",
          "46:                 </f:form.button>",
          "47:             </f:form>",
          "",
          "---------------"
        ],
        "Resources/Private/Templates/List/UnresolvedDependencies.html||Resources/Private/Templates/List/UnresolvedDependencies.html": [
          "File: Resources/Private/Templates/List/UnresolvedDependencies.html -> Resources/Private/Templates/List/UnresolvedDependencies.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "17:     <em:be.trigger triggers=\"{triggers}\" />",
          "19:     <h1><f:translate key=\"installExtension\">Install extension</f:translate> <small>{f:translate(key: 'downloadExtension.dependencies.errorTitle')}</small></h1>",
          "31: </f:section>",
          "",
          "[Removed Lines]",
          "20:     <f:render partial=\"List/UnresolvedDependencies\" arguments=\"{_all}\" />",
          "21:     <f:be.infobox title=\"{f:translate(key: 'dependencyCheck.unresolvedDependencies.title')}\" state=\"{f:constant(name: 'TYPO3\\CMS\\Fluid\\ViewHelpers\\Be\\InfoboxViewHelper::STATE_WARNING')}\">",
          "22:         <f:render partial=\"List/UnresolvedDependenciesMessage\" />",
          "23:     </f:be.infobox>",
          "24:     <f:link.action action=\"{returnAction.action}\" controller=\"{returnAction.controller}\" class=\"btn btn-default onClickMaskExtensionManager\">",
          "25:         <f:translate key=\"LLL:EXT:core/Resources/Private/Language/locallang_core.xlf:labels.goBack\" />",
          "26:     </f:link.action>",
          "27:     <f:link.action action=\"installExtensionWithoutSystemDependencyCheck\" controller=\"Action\" arguments=\"{extensionKey: extension.extensionKey}\" class=\"btn btn-danger t3js-dependencies disabled onClickMaskExtensionManager\">",
          "28:         <f:translate key=\"dependencyCheck.unresolvedDependencies.proceed\" />",
          "29:     </f:link.action>",
          "",
          "[Added Lines]",
          "20:     <f:form controller=\"Action\" action=\"installExtensionWithoutSystemDependencyCheck\">",
          "21:         <f:form.hidden name=\"extensionKey\" value=\"{extension.extensionKey}\" />",
          "23:         <f:render partial=\"List/UnresolvedDependencies\" arguments=\"{_all}\" />",
          "24:         <f:be.infobox title=\"{f:translate(key: 'dependencyCheck.unresolvedDependencies.title')}\" state=\"{f:constant(name: 'TYPO3\\CMS\\Fluid\\ViewHelpers\\Be\\InfoboxViewHelper::STATE_WARNING')}\">",
          "25:             <f:render partial=\"List/UnresolvedDependenciesMessage\" />",
          "26:         </f:be.infobox>",
          "27:         <f:link.action action=\"{returnAction.action}\" controller=\"{returnAction.controller}\" class=\"btn btn-default onClickMaskExtensionManager\">",
          "28:             <f:translate key=\"LLL:EXT:core/Resources/Private/Language/locallang_core.xlf:labels.goBack\" />",
          "29:         </f:link.action>",
          "31:         <f:form.submit class=\"btn btn-danger t3js-dependencies disabled onClickMaskExtensionManager\" value=\"{f:translate(key: 'dependencyCheck.unresolvedDependencies.proceed')}\" />",
          "32:     </f:form>",
          "",
          "---------------"
        ],
        "Resources/Public/JavaScript/main.js||Resources/Public/JavaScript/main.js": [
          "File: Resources/Public/JavaScript/main.js -> Resources/Public/JavaScript/main.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "13: import DocumentService from\"@typo3/core/document-service.js\";import BrowserSession from\"@typo3/backend/storage/browser-session.js\";import NProgress from\"nprogress\";import{default as Modal}from\"@typo3/backend/modal.js\";import Severity from\"@typo3/backend/severity.js\";import SecurityUtility from\"@typo3/core/security-utility.js\";import ExtensionManagerRepository from\"@typo3/extensionmanager/repository.js\";import ExtensionManagerUpdate from\"@typo3/extensionmanager/update.js\";import ExtensionManagerUploadForm from\"@typo3/extensionmanager/upload-form.js\";import\"@typo3/backend/input/clearable.js\";import AjaxRequest from\"@typo3/core/ajax/ajax-request.js\";import DebounceEvent from\"@typo3/core/event/debounce-event.js\";import RegularEvent from\"@typo3/core/event/regular-event.js\";import SortableTable from\"@typo3/backend/sortable-table.js\";const securityUtility=new SecurityUtility;var ExtensionManagerIdentifier;!function(e){e.extensionlist=\"typo3-extension-list\",e.searchField=\"#Tx_Extensionmanager_extensionkey\"}(ExtensionManagerIdentifier||(ExtensionManagerIdentifier={}));class ExtensionManager{constructor(){this.searchFilterSessionKey=\"tx-extensionmanager-local-filter\",DocumentService.ready().then((()=>{this.Update=new ExtensionManagerUpdate,this.UploadForm=new ExtensionManagerUploadForm,this.Repository=new ExtensionManagerRepository;const e=document.getElementById(ExtensionManagerIdentifier.extensionlist);let t;if(null!==e&&(e instanceof HTMLTableElement&&new SortableTable(e),new RegularEvent(\"click\",((e,t)=>{e.preventDefault(),Modal.confirm(TYPO3.lang[\"extensionList.removalConfirmation.title\"],TYPO3.lang[\"extensionList.removalConfirmation.question\"],Severity.error,[{text:TYPO3.lang[\"button.cancel\"],active:!0,btnClass:\"btn-default\",trigger:()=>{Modal.dismiss()}},{text:TYPO3.lang[\"button.remove\"],btnClass:\"btn-danger\",trigger:()=>{this.removeExtensionFromDisk(t),Modal.dismiss()}}])})).delegateTo(e,\".removeExtension\"),new RegularEvent(\"click\",((e,t)=>{e.preventDefault(),Modal.confirm(TYPO3.lang[\"extensionList.databaseReload.title\"],TYPO3.lang[\"extensionList.databaseReload.message\"],Severity.warning,[{text:TYPO3.lang[\"button.cancel\"],active:!0,btnClass:\"btn-default\",trigger:()=>{Modal.dismiss()}},{text:TYPO3.lang[\"button.reimport\"],btnClass:\"btn-warning\",trigger:()=>{window.location.href=t.href,Modal.dismiss()}}])})).delegateTo(e,\".reloadSqlData\")),new RegularEvent(\"click\",(()=>{NProgress.start()})).delegateTo(document,\".onClickMaskExtensionManager\"),new RegularEvent(\"click\",((e,t)=>{e.preventDefault(),NProgress.start(),new AjaxRequest(t.href).get().then(this.updateExtension)})).delegateTo(document,\"a[data-action=update-extension]\"),new RegularEvent(\"change\",((e,t)=>{const n=document.querySelector(\".t3js-dependencies\");t.checked?n.classList.remove(\"disabled\"):n.classList.add(\"disabled\")})).delegateTo(document,\"input[name=unlockDependencyIgnoreButton]\"),new RegularEvent(\"click\",(()=>{NProgress.start()})).delegateTo(document,\".t3-button-action-installdistribution\"),null!==(t=document.querySelector(ExtensionManagerIdentifier.searchField))){const e=BrowserSession.get(this.searchFilterSessionKey);null!==e&&(t.value=e,this.filterExtensions(e)),new RegularEvent(\"submit\",(e=>{e.preventDefault()})).bindTo(t.closest(\"form\")),new DebounceEvent(\"input\",(e=>{const t=e.target;BrowserSession.set(this.searchFilterSessionKey,t.value),this.filterExtensions(t.value)}),100).bindTo(t),t.clearable({onClear:()=>{BrowserSession.unset(this.searchFilterSessionKey),this.filterExtensions(\"\")}})}this.Repository.initDom(),this.Update.initializeEvents(),this.UploadForm.initializeEvents()}))}filterExtensions(e){const t=document.querySelectorAll(\"[data-filterable]\"),n=[];t.forEach((e=>{const t=Array.from(e.parentElement.children);n.push(t.indexOf(e))}));document.querySelectorAll(\"#typo3-extension-list tbody tr\").forEach((t=>{const o=n.map((e=>t.children.item(e))),i=[];o.forEach((e=>{i.push(e.textContent.trim().replace(/\\s+/g,\" \"))})),t.classList.toggle(\"hidden\",\"\"!==e&&!RegExp(e,\"i\").test(i.join(\":\")))}))}removeExtensionFromDisk(e){NProgress.start(),new AjaxRequest(e.href).get().then((()=>{location.reload()})).finally((()=>{NProgress.done()}))}async updateExtension(e){let t=0;const n=await e.resolve(),o=document.createElement(\"form\");for(const[e,i]of Object.entries(n.updateComments)){const n=document.createElement(\"input\");n.setAttribute(\"type\",\"radio\"),n.setAttribute(\"name\",\"version\"),n.value=e,0===t&&n.setAttribute(\"checked\",\"checked\");const r=document.createElement(\"h3\");r.innerHTML=securityUtility.encodeHtml(e),r.prepend(n);const a=document.createElement(\"div\");a.innerHTML=i.replace(/(\\r\\n|\\n\\r|\\r|\\n)/g,\"\\n\").split(/\\n/).map((e=>securityUtility.encodeHtml(e))).join(\"<br>\"),o.append(r,a),t++}const i=document.createElement(\"h1\");i.textContent=TYPO3.lang[\"extensionList.updateConfirmation.title\"];const r=document.createElement(\"h2\");r.textContent=TYPO3.lang[\"extensionList.updateConfirmation.message\"];const a=document.createElement(\"div\");a.append(i,r,o),NProgress.done(),Modal.confirm(TYPO3.lang[\"extensionList.updateConfirmation.questionVersionComments\"],a,Severity.warning,[{text:TYPO3.lang[\"button.cancel\"],active:!0,btnClass:\"btn-default\",trigger:(e,t)=>t.hideModal()},{text:TYPO3.lang[\"button.updateExtension\"],btnClass:\"btn-warning\",trigger:(e,t)=>{NProgress.start(),new AjaxRequest(n.url).withQueryArguments({version:t.querySelector('input[name=\"version\"]:checked')?.value}).get().finally((()=>{location.reload()})),t.hideModal()}}])}}const extensionManagerObject=new ExtensionManager;void 0===TYPO3.ExtensionManager&&(TYPO3.ExtensionManager=extensionManagerObject);export default extensionManagerObject;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "Resources/Public/JavaScript/repository.js||Resources/Public/JavaScript/repository.js": [
          "File: Resources/Public/JavaScript/repository.js -> Resources/Public/JavaScript/repository.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "13: import NProgress from\"nprogress\";import Modal from\"@typo3/backend/modal.js\";import Notification from\"@typo3/backend/notification.js\";import Severity from\"@typo3/backend/severity.js\";import SortableTable from\"@typo3/backend/sortable-table.js\";import\"@typo3/backend/input/clearable.js\";import AjaxRequest from\"@typo3/core/ajax/ajax-request.js\";import RegularEvent from\"@typo3/core/event/regular-event.js\";class Repository{constructor(){this.getDependencies=async e=>{const t=await e.resolve(),n=document.createElement(\"div\");n.innerHTML=t.message,NProgress.done(),t.hasDependencies?Modal.confirm(t.title,n,Severity.info,[{text:TYPO3.lang[\"button.cancel\"],active:!0,btnClass:\"btn-default\",trigger:()=>{Modal.dismiss()}},{text:TYPO3.lang[\"button.resolveDependencies\"],btnClass:\"btn-primary\",trigger:()=>{this.getResolveDependenciesAndInstallResult(t.url),Modal.dismiss()}}]):t.hasErrors?Notification.error(t.title,t.message,15):this.getResolveDependenciesAndInstallResult(t.url)}}initDom(){NProgress.configure({parent:\".module-loading-indicator\",showSpinner:!1});const e=document.getElementById(\"terVersionTable\"),t=document.getElementById(\"terSearchTable\");e instanceof HTMLTableElement&&new SortableTable(e),t instanceof HTMLTableElement&&new SortableTable(t),this.bindDownload(),this.bindSearchFieldResetter()}bindDownload(){new RegularEvent(\"click\",((e,t)=>{e.preventDefault();const n=t.closest(\"form\").dataset.href;NProgress.start(),new AjaxRequest(n).get().then(this.getDependencies)})).delegateTo(document,\".downloadFromTer form.download button[type=submit]\")}getResolveDependenciesAndInstallResult(e){NProgress.start(),new AjaxRequest(e).get().then((async e=>{try{const t=await e.raw().json(),n=document.createElement(\"div\");if(n.innerHTML=t.errorMessage,t.errorCount>0){const e=Modal.confirm(t.errorTitle,n,Severity.error,[{text:TYPO3.lang[\"button.cancel\"],active:!0,btnClass:\"btn-default\",trigger:()=>{Modal.dismiss()}},{text:TYPO3.lang[\"button.resolveDependenciesIgnore\"],btnClass:\"btn-danger disabled t3js-dependencies\",trigger:e=>{e.currentTarget.classList.contains(\"disabled\")||(this.getResolveDependenciesAndInstallResult(t.skipDependencyUri),Modal.dismiss())}}]);e.addEventListener(\"typo3-modal-shown\",(()=>{const t=e.querySelector(\".t3js-dependencies\");e.querySelector('input[name=\"unlockDependencyIgnoreButton\"]').addEventListener(\"change\",(e=>{e.currentTarget.checked?t?.classList.remove(\"disabled\"):t?.classList.add(\"disabled\")}))}))}else{let e=TYPO3.lang[\"extensionList.dependenciesResolveDownloadSuccess.message\"+t.installationTypeLanguageKey].replace(/\\{0\\}/g,t.extension);e+=\"\\n\"+TYPO3.lang[\"extensionList.dependenciesResolveDownloadSuccess.header\"]+\": \";for(const[n,s]of Object.entries(t.result)){e+=\"\\n\\n\"+TYPO3.lang[\"extensionList.dependenciesResolveDownloadSuccess.item\"]+\" \"+n+\": \";for(const t of Object.keys(s))e+=\"\\n* \"+t}Notification.info(TYPO3.lang[\"extensionList.dependenciesResolveFlashMessage.title\"+t.installationTypeLanguageKey].replace(/\\{0\\}/g,t.extension),e,15),top.TYPO3.ModuleMenu.App.refreshMenu()}}catch{Notification.error(TYPO3.lang[\"extensionList.dependenciesResolveInstallError.title\"]||\"Install error\",TYPO3.lang[\"extensionList.dependenciesResolveInstallError.message\"]||\"Your installation failed while resolving dependencies.\")}})).finally((()=>{NProgress.done()}))}bindSearchFieldResetter(){let e;if(null!==(e=document.querySelector('.typo3-extensionmanager-searchTerForm input[type=\"text\"]'))){const t=\"\"!==e.value;e.clearable({onClear:e=>{t&&e.closest(\"form\").submit()}})}}}export default Repository;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "Resources/Public/JavaScript/update.js||Resources/Public/JavaScript/update.js": [
          "File: Resources/Public/JavaScript/update.js -> Resources/Public/JavaScript/update.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "13: import NProgress from\"nprogress\";import Notification from\"@typo3/backend/notification.js\";import AjaxRequest from\"@typo3/core/ajax/ajax-request.js\";import RegularEvent from\"@typo3/core/event/regular-event.js\";var ExtensionManagerUpdateIdentifier;!function(e){e.extensionTable=\"#terTable\",e.terUpdateAction=\".update-from-ter\",e.pagination=\".pagination-wrap\",e.splashscreen=\".splash-receivedata\",e.terTableWrapper=\"#terTableWrapper .table\"}(ExtensionManagerUpdateIdentifier||(ExtensionManagerUpdateIdentifier={}));class ExtensionManagerUpdate{initializeEvents(){const e=document.querySelector(ExtensionManagerUpdateIdentifier.terUpdateAction);null!==e&&(new RegularEvent(\"submit\",(e=>{e.preventDefault(),this.updateFromTer(e.target.action,!0)})).bindTo(e),this.updateFromTer(e.action,!1))}updateFromTer(e,t){t&&(e+=\"&forceUpdateCheck=1\"),document.querySelector(ExtensionManagerUpdateIdentifier.terUpdateAction)?.classList.add(\"extensionmanager-is-hidden\");const n=document.querySelector(ExtensionManagerUpdateIdentifier.extensionTable);n&&(n.style.display=\"none\"),document.querySelector(ExtensionManagerUpdateIdentifier.splashscreen)?.classList.add(\"extensionmanager-is-shown\"),document.querySelector(ExtensionManagerUpdateIdentifier.terTableWrapper)?.classList.add(\"extensionmanager-is-loading\"),document.querySelector(ExtensionManagerUpdateIdentifier.pagination)?.classList.add(\"extensionmanager-is-loading\");let a=!1;NProgress.start(),new AjaxRequest(e).get().then((async e=>{const t=await e.resolve();t.errorMessage.length&&Notification.error(TYPO3.lang[\"extensionList.updateFromTerFlashMessage.title\"],t.errorMessage,10);const n=document.querySelector(ExtensionManagerUpdateIdentifier.terUpdateAction+\" .extension-list-last-updated\");n.innerText=t.timeSinceLastUpdate,n.setAttribute(\"title\",TYPO3.lang[\"extensionList.updateFromTer.lastUpdate.timeOfLastUpdate\"]+t.lastUpdateTime),t.updated&&(a=!0,window.location.replace(window.location.href))}),(async e=>{const t=e.response.statusText+\"(\"+e.response.status+\"): \"+await e.response.text();Notification.warning(TYPO3.lang[\"extensionList.updateFromTerFlashMessage.title\"],t,10)})).finally((()=>{if(NProgress.done(),!a){document.querySelector(ExtensionManagerUpdateIdentifier.splashscreen)?.classList.remove(\"extensionmanager-is-shown\"),document.querySelector(ExtensionManagerUpdateIdentifier.terTableWrapper)?.classList.remove(\"extensionmanager-is-loading\"),document.querySelector(ExtensionManagerUpdateIdentifier.pagination)?.classList.remove(\"extensionmanager-is-loading\"),document.querySelector(ExtensionManagerUpdateIdentifier.terUpdateAction)?.classList.remove(\"extensionmanager-is-hidden\");const e=document.querySelector(ExtensionManagerUpdateIdentifier.extensionTable);e&&(e.style.display=\"block\")}}))}}export default ExtensionManagerUpdate;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f9cc27b77b97720d9ee0efce26ea455422c6e0b7",
      "candidate_info": {
        "commit_hash": "f9cc27b77b97720d9ee0efce26ea455422c6e0b7",
        "repo": "TYPO3-CMS/extensionmanager",
        "commit_url": "https://github.com/TYPO3-CMS/extensionmanager/commit/f9cc27b77b97720d9ee0efce26ea455422c6e0b7",
        "files": [
          "Classes/Controller/ActionController.php",
          "Classes/Controller/DownloadController.php",
          "Classes/Controller/ListController.php",
          "Classes/Controller/UpdateFromTerController.php",
          "Classes/Controller/UploadExtensionFileController.php",
          "Classes/ViewHelpers/ToggleExtensionInstallationStateViewHelper.php",
          "Resources/Private/Partials/List/Distribution.html",
          "Resources/Private/Templates/Distribution/Show.html",
          "Resources/Private/Templates/List/Distributions.html",
          "Resources/Private/Templates/List/UnresolvedDependencies.html",
          "Resources/Public/JavaScript/main.js",
          "Resources/Public/JavaScript/repository.js",
          "Resources/Public/JavaScript/update.js"
        ],
        "message": "[SECURITY] Enforce HTTP method assertions for backend modules\n\nResolves: #104456\nReleases: main, 13.4, 12.4\nChange-Id: Ic679584a343b6d35e81325a03148b0cff81f1d27\nSecurity-Bulletin: TYPO3-CORE-SA-2025-003\nSecurity-Bulletin: TYPO3-CORE-SA-2025-004\nSecurity-Bulletin: TYPO3-CORE-SA-2025-005\nSecurity-Bulletin: TYPO3-CORE-SA-2025-006\nSecurity-Bulletin: TYPO3-CORE-SA-2025-007\nSecurity-Bulletin: TYPO3-CORE-SA-2025-008\nSecurity-References: CVE-2024-55893\nSecurity-References: CVE-2024-55894\nSecurity-References: CVE-2024-55920\nSecurity-References: CVE-2024-55921\nSecurity-References: CVE-2024-55922\nSecurity-References: CVE-2024-55923\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/87738\nTested-by: Oliver Hader <oliver.hader@typo3.org>\nReviewed-by: Oliver Hader <oliver.hader@typo3.org>",
        "before_after_code_files": [
          "Classes/Controller/ActionController.php||Classes/Controller/ActionController.php",
          "Classes/Controller/DownloadController.php||Classes/Controller/DownloadController.php",
          "Classes/Controller/ListController.php||Classes/Controller/ListController.php",
          "Classes/Controller/UpdateFromTerController.php||Classes/Controller/UpdateFromTerController.php",
          "Classes/Controller/UploadExtensionFileController.php||Classes/Controller/UploadExtensionFileController.php",
          "Classes/ViewHelpers/ToggleExtensionInstallationStateViewHelper.php||Classes/ViewHelpers/ToggleExtensionInstallationStateViewHelper.php",
          "Resources/Private/Partials/List/Distribution.html||Resources/Private/Partials/List/Distribution.html",
          "Resources/Private/Templates/Distribution/Show.html||Resources/Private/Templates/Distribution/Show.html",
          "Resources/Private/Templates/List/Distributions.html||Resources/Private/Templates/List/Distributions.html",
          "Resources/Private/Templates/List/UnresolvedDependencies.html||Resources/Private/Templates/List/UnresolvedDependencies.html",
          "Resources/Public/JavaScript/main.js||Resources/Public/JavaScript/main.js",
          "Resources/Public/JavaScript/repository.js||Resources/Public/JavaScript/repository.js",
          "Resources/Public/JavaScript/update.js||Resources/Public/JavaScript/update.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "Classes/Controller/ActionController.php||Classes/Controller/ActionController.php",
            "Classes/Controller/DownloadController.php||Classes/Controller/DownloadController.php",
            "Classes/Controller/ListController.php||Classes/Controller/ListController.php",
            "Classes/Controller/UpdateFromTerController.php||Classes/Controller/UpdateFromTerController.php",
            "Classes/Controller/UploadExtensionFileController.php||Classes/Controller/UploadExtensionFileController.php",
            "Classes/ViewHelpers/ToggleExtensionInstallationStateViewHelper.php||Classes/ViewHelpers/ToggleExtensionInstallationStateViewHelper.php",
            "Resources/Private/Partials/List/Distribution.html||Resources/Private/Partials/List/Distribution.html",
            "Resources/Private/Templates/Distribution/Show.html||Resources/Private/Templates/Distribution/Show.html",
            "Resources/Private/Templates/List/Distributions.html||Resources/Private/Templates/List/Distributions.html",
            "Resources/Private/Templates/List/UnresolvedDependencies.html||Resources/Private/Templates/List/UnresolvedDependencies.html",
            "Resources/Public/JavaScript/main.js||Resources/Public/JavaScript/main.js",
            "Resources/Public/JavaScript/repository.js||Resources/Public/JavaScript/repository.js",
            "Resources/Public/JavaScript/update.js||Resources/Public/JavaScript/update.js"
          ],
          "candidate": [
            "Classes/Controller/ActionController.php||Classes/Controller/ActionController.php",
            "Classes/Controller/DownloadController.php||Classes/Controller/DownloadController.php",
            "Classes/Controller/ListController.php||Classes/Controller/ListController.php",
            "Classes/Controller/UpdateFromTerController.php||Classes/Controller/UpdateFromTerController.php",
            "Classes/Controller/UploadExtensionFileController.php||Classes/Controller/UploadExtensionFileController.php",
            "Classes/ViewHelpers/ToggleExtensionInstallationStateViewHelper.php||Classes/ViewHelpers/ToggleExtensionInstallationStateViewHelper.php",
            "Resources/Private/Partials/List/Distribution.html||Resources/Private/Partials/List/Distribution.html",
            "Resources/Private/Templates/Distribution/Show.html||Resources/Private/Templates/Distribution/Show.html",
            "Resources/Private/Templates/List/Distributions.html||Resources/Private/Templates/List/Distributions.html",
            "Resources/Private/Templates/List/UnresolvedDependencies.html||Resources/Private/Templates/List/UnresolvedDependencies.html",
            "Resources/Public/JavaScript/main.js||Resources/Public/JavaScript/main.js",
            "Resources/Public/JavaScript/repository.js||Resources/Public/JavaScript/repository.js",
            "Resources/Public/JavaScript/update.js||Resources/Public/JavaScript/update.js"
          ]
        }
      },
      "candidate_diff": {
        "Classes/Controller/ActionController.php||Classes/Controller/ActionController.php": [
          "File: Classes/Controller/ActionController.php -> Classes/Controller/ActionController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: use Psr\\Http\\Message\\ResponseInterface;",
          "21: use TYPO3\\CMS\\Core\\Core\\Environment;",
          "22: use TYPO3\\CMS\\Core\\Package\\Exception;",
          "23: use TYPO3\\CMS\\Core\\Package\\Exception\\PackageStatesFileNotWritableException;",
          "24: use TYPO3\\CMS\\Core\\Registry;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: use TYPO3\\CMS\\Core\\Http\\AllowedMethodsTrait;",
          "23: use TYPO3\\CMS\\Core\\Http\\Response;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "42: class ActionController extends AbstractController",
          "43: {",
          "44:     public function __construct(",
          "45:         protected readonly InstallUtility $installUtility,",
          "46:         protected readonly ExtensionManagementService $managementService,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "46:     use AllowedMethodsTrait;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "53:     protected function toggleExtensionInstallationStateAction(string $extensionKey): ResponseInterface",
          "54:     {",
          "55:         try {",
          "56:             if (Environment::isComposerMode()) {",
          "57:                 throw new ExtensionManagerException(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59:         $this->assertAllowedHttpMethod($this->request, 'POST');",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "69:                     $this->installUtility->enrichExtensionWithDetails($extensionKey, false)",
          "70:                 );",
          "71:                 if ($this->managementService->installExtension($extension) === false) {",
          "77:                             'extensionKey' => $extensionKey,",
          "78:                             'returnAction' => ['controller' => 'List', 'action' => 'index'],",
          "81:                 }",
          "82:             }",
          "83:         } catch (ExtensionManagerException|PackageStatesFileNotWritableException $e) {",
          "",
          "[Removed Lines]",
          "72:                     return $this->redirect(",
          "73:                         'unresolvedDependencies',",
          "74:                         'List',",
          "75:                         null,",
          "76:                         [",
          "79:                         ]",
          "80:                     );",
          "",
          "[Added Lines]",
          "78:                     return (new ForwardResponse('unresolvedDependencies'))",
          "79:                         ->withControllerName('List')",
          "80:                         ->withArguments([",
          "83:                         ]);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "95:     public function installExtensionWithoutSystemDependencyCheckAction(string $extensionKey): ResponseInterface",
          "96:     {",
          "97:         $this->managementService->setSkipDependencyCheck(true);",
          "98:         return (new ForwardResponse('toggleExtensionInstallationState'))->withArguments(['extensionKey' => $extensionKey]);",
          "99:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "100:         $this->assertAllowedHttpMethod($this->request, 'POST');",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "104:     protected function removeExtensionAction(string $extension): ResponseInterface",
          "105:     {",
          "106:         try {",
          "107:             if (Environment::isComposerMode()) {",
          "108:                 throw new ExtensionManagerException(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "111:         $this->assertAllowedHttpMethod($this->request, 'POST');",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "159:     protected function reloadExtensionDataAction(string $extension): ResponseInterface",
          "160:     {",
          "161:         $extension = $this->installUtility->enrichExtensionWithDetails($extension, false);",
          "162:         $registryKey = PathUtility::stripPathSitePrefix($extension['packagePath']) . 'ext_tables_static+adt.sql';",
          "164:         $this->registry->remove('extensionDataImport', $registryKey);",
          "166:         $this->installUtility->processExtensionSetup($extension['key']);",
          "169:     }",
          "",
          "[Removed Lines]",
          "168:         return $this->redirect('index', 'List');",
          "",
          "[Added Lines]",
          "168:         $this->assertAllowedHttpMethod($this->request, 'POST');",
          "176:         return new Response();",
          "",
          "---------------"
        ],
        "Classes/Controller/DownloadController.php||Classes/Controller/DownloadController.php": [
          "File: Classes/Controller/DownloadController.php -> Classes/Controller/DownloadController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: use Psr\\Http\\Message\\ResponseInterface;",
          "21: use TYPO3\\CMS\\Core\\Configuration\\ExtensionConfiguration;",
          "22: use TYPO3\\CMS\\Core\\Type\\ContextualFeedbackSeverity;",
          "23: use TYPO3\\CMS\\Core\\Utility\\ExtensionManagementUtility;",
          "24: use TYPO3\\CMS\\Extbase\\Http\\ForwardResponse;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: use TYPO3\\CMS\\Core\\Http\\AllowedMethodsTrait;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "37: class DownloadController extends AbstractController",
          "38: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:     use AllowedMethodsTrait;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "146:     public function installFromTerAction(Extension $extension, string $downloadPath = 'Local'): ResponseInterface",
          "147:     {",
          "148:         [$result, $errorMessages] = $this->installFromTer($extension, $downloadPath);",
          "149:         $isAutomaticInstallationEnabled = (bool)$this->extensionConfiguration->get('extensionmanager', 'automaticInstallation');",
          "150:         $this->view->assignMultiple([",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "151:         $this->assertAllowedHttpMethod($this->request, 'POST');",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "163:     public function installExtensionWithoutSystemDependencyCheckAction(Extension $extension): ResponseInterface",
          "164:     {",
          "165:         $this->managementService->setSkipDependencyCheck(true);",
          "166:         return (new ForwardResponse('installFromTer'))->withArguments(['extension' => $extension, 'downloadPath' => 'Local']);",
          "167:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "170:         $this->assertAllowedHttpMethod($this->request, 'POST');",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "173:     public function installDistributionAction(Extension $extension): ResponseInterface",
          "174:     {",
          "175:         if (!ExtensionManagementUtility::isLoaded('impexp')) {",
          "176:             return (new ForwardResponse('distributions'))->withControllerName('List');",
          "177:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "182:         $this->assertAllowedHttpMethod($this->request, 'POST');",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "215:     protected function updateExtensionAction(): ResponseInterface",
          "216:     {",
          "217:         $extensionKey = $this->request->getArgument('extension');",
          "218:         $version = $this->request->getArgument('version');",
          "219:         $extension = $this->extensionRepository->findOneByExtensionKeyAndVersion($extensionKey, $version);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "226:         $this->assertAllowedHttpMethod($this->request, 'POST');",
          "",
          "---------------"
        ],
        "Classes/Controller/ListController.php||Classes/Controller/ListController.php": [
          "File: Classes/Controller/ListController.php -> Classes/Controller/ListController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: use TYPO3\\CMS\\Core\\Authentication\\BackendUserAuthentication;",
          "23: use TYPO3\\CMS\\Core\\Configuration\\ExtensionConfiguration;",
          "24: use TYPO3\\CMS\\Core\\Core\\Environment;",
          "25: use TYPO3\\CMS\\Core\\Imaging\\Icon;",
          "26: use TYPO3\\CMS\\Core\\Imaging\\IconFactory;",
          "27: use TYPO3\\CMS\\Core\\Page\\PageRenderer;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: use TYPO3\\CMS\\Core\\Http\\AllowedMethodsTrait;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "48: class ListController extends AbstractController",
          "49: {",
          "50:     public function __construct(",
          "51:         protected readonly PageRenderer $pageRenderer,",
          "52:         protected readonly ExtensionRepository $extensionRepository,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "51:     use AllowedMethodsTrait;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "108:     protected function unresolvedDependenciesAction(string $extensionKey, array $returnAction): ResponseInterface",
          "109:     {",
          "110:         $availableExtensions = $this->listUtility->getAvailableExtensions();",
          "111:         if (isset($availableExtensions[$extensionKey])) {",
          "112:             $extensionArray = $this->listUtility->enrichExtensionsWithEmConfAndTerInformation(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "113:         $this->assertAllowedHttpMethod($this->request, 'POST');",
          "",
          "---------------"
        ],
        "Classes/Controller/UpdateFromTerController.php||Classes/Controller/UpdateFromTerController.php": [
          "File: Classes/Controller/UpdateFromTerController.php -> Classes/Controller/UpdateFromTerController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: use Psr\\Http\\Message\\ResponseInterface;",
          "21: use TYPO3\\CMS\\Backend\\Utility\\BackendUtility;",
          "22: use TYPO3\\CMS\\Extbase\\Mvc\\View\\JsonView;",
          "23: use TYPO3\\CMS\\Extensionmanager\\Domain\\Repository\\ExtensionRepository;",
          "24: use TYPO3\\CMS\\Extensionmanager\\Exception\\ExtensionManagerException;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: use TYPO3\\CMS\\Core\\Http\\AllowedMethodsTrait;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "32: class UpdateFromTerController extends AbstractController",
          "33: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "35:     use AllowedMethodsTrait;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "48:     public function updateExtensionListFromTerAction(bool $forceUpdateCheck = false): ResponseInterface",
          "49:     {",
          "50:         $updated = false;",
          "51:         $errorMessage = '';",
          "52:         $lastUpdate = null;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "53:         $this->assertAllowedHttpMethod($this->request, 'POST');",
          "",
          "---------------"
        ],
        "Classes/Controller/UploadExtensionFileController.php||Classes/Controller/UploadExtensionFileController.php": [
          "File: Classes/Controller/UploadExtensionFileController.php -> Classes/Controller/UploadExtensionFileController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: use Psr\\Http\\Message\\ResponseInterface;",
          "21: use TYPO3\\CMS\\Core\\Configuration\\ExtensionConfiguration;",
          "22: use TYPO3\\CMS\\Core\\Core\\Environment;",
          "23: use TYPO3\\CMS\\Core\\Security\\BlockSerializationTrait;",
          "24: use TYPO3\\CMS\\Core\\Type\\ContextualFeedbackSeverity;",
          "25: use TYPO3\\CMS\\Core\\Utility\\GeneralUtility;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: use TYPO3\\CMS\\Core\\Http\\AllowedMethodsTrait;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36: class UploadExtensionFileController extends AbstractController",
          "37: {",
          "38:     use BlockSerializationTrait;",
          "40:     protected string $extensionBackupPath = '';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39:     use AllowedMethodsTrait;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "77:     public function extractAction(bool $overwrite = false): ResponseInterface",
          "78:     {",
          "79:         if (Environment::isComposerMode()) {",
          "80:             throw new ExtensionManagerException(",
          "81:                 'Composer mode is active. You are not allowed to upload any extension file.',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "81:         $this->assertAllowedHttpMethod($this->request, 'POST');",
          "",
          "---------------"
        ],
        "Classes/ViewHelpers/ToggleExtensionInstallationStateViewHelper.php||Classes/ViewHelpers/ToggleExtensionInstallationStateViewHelper.php": [
          "File: Classes/ViewHelpers/ToggleExtensionInstallationStateViewHelper.php -> Classes/ViewHelpers/ToggleExtensionInstallationStateViewHelper.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: use TYPO3\\CMS\\Extbase\\Mvc\\Web\\Routing\\UriBuilder;",
          "28: use TYPO3\\CMS\\Fluid\\Core\\Rendering\\RenderingContext;",
          "29: use TYPO3Fluid\\Fluid\\Core\\ViewHelper\\AbstractTagBasedViewHelper;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: use TYPO3Fluid\\Fluid\\Core\\ViewHelper\\TagBuilder;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43:     public function initializeArguments(): void",
          "44:     {",
          "",
          "[Removed Lines]",
          "41:     protected $tagName = 'a';",
          "",
          "[Added Lines]",
          "42:     protected $tagName = 'form';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "75:             ['extensionKey' => $extension['key']],",
          "76:             'Action'",
          "77:         );",
          "85:         $iconFactory = GeneralUtility::makeInstance(IconFactory::class);",
          "87:         return $this->tag->render();",
          "88:     }",
          "",
          "[Removed Lines]",
          "78:         $this->tag->addAttribute('href', $uri);",
          "79:         $label = $extension['installed'] ? 'deactivate' : 'activate';",
          "80:         $this->tag->addAttribute('title', htmlspecialchars($this->getLanguageService()->sL(",
          "81:             'LLL:EXT:extensionmanager/Resources/Private/Language/locallang.xlf:extensionList.' . $label",
          "82:         )));",
          "83:         $icon = $extension['installed'] ? 'uninstall' : 'install';",
          "84:         $this->tag->addAttribute('class', 'onClickMaskExtensionManager btn btn-default');",
          "86:         $this->tag->setContent($iconFactory->getIcon('actions-system-extension-' . $icon, Icon::SIZE_SMALL)->render());",
          "",
          "[Added Lines]",
          "79:         $this->tag->addAttribute('action', $uri);",
          "80:         $this->tag->addAttribute('method', 'post');",
          "83:         $buttonTagBuilder = new TagBuilder('button');",
          "84:         $buttonTagBuilder->addAttribute('type', 'submit');",
          "85:         $buttonTagBuilder->addAttribute('class', 'onClickMaskExtensionManager btn btn-default');",
          "86:         $buttonTagBuilder->setContent($iconFactory->getIcon('actions-system-extension-' . ($extension['installed'] ? 'uninstall' : 'install'), Icon::SIZE_SMALL)->render());",
          "87:         $buttonTagBuilder->addAttribute('title', htmlspecialchars($this->getLanguageService()->sL(",
          "88:             'LLL:EXT:extensionmanager/Resources/Private/Language/locallang.xlf:extensionList.' . ($extension['installed'] ? 'deactivate' : 'activate')",
          "89:         )));",
          "90:         $this->tag->setContent($buttonTagBuilder->render());",
          "",
          "---------------"
        ],
        "Resources/Private/Partials/List/Distribution.html||Resources/Private/Partials/List/Distribution.html": [
          "File: Resources/Private/Partials/List/Distribution.html -> Resources/Private/Partials/List/Distribution.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:         </p>",
          "40:     </div>",
          "41:     <div class=\"card-footer\">",
          "43:             <core:icon identifier=\"actions-system-extension-import\" /> <f:translate key=\"extensionList.installDistribution\">Install</f:translate>",
          "45:         <f:link.action action=\"show\" controller=\"Distribution\" arguments=\"{extension:distribution}\" class=\"btn btn-link\">",
          "46:             <f:translate key=\"button.details\">Show Details</f:translate>",
          "47:         </f:link.action>",
          "",
          "[Removed Lines]",
          "42:         <f:link.action action=\"installDistribution\" controller=\"Download\" arguments=\"{extension:distribution}\" class=\"btn btn-default t3-button-action-installdistribution\">",
          "44:         </f:link.action>",
          "",
          "[Added Lines]",
          "42:         <f:form.button form=\"installDistributionForm\" type=\"submit\" name=\"extension\" value=\"{distribution}\" class=\"btn btn-default t3-button-action-installdistribution\">",
          "44:         </f:form.button>",
          "",
          "---------------"
        ],
        "Resources/Private/Templates/Distribution/Show.html||Resources/Private/Templates/Distribution/Show.html": [
          "File: Resources/Private/Templates/Distribution/Show.html -> Resources/Private/Templates/Distribution/Show.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:                 <p>{extension.description}</p>",
          "32:             </div>",
          "34:             <ul class=\"distribution-detail-actions\">",
          "35:                 <f:if condition=\"{distributionActive}\">",
          "36:                     <f:else>",
          "37:                         <li>",
          "39:                                 <core:icon identifier=\"actions-system-extension-import\" /> <f:translate key=\"extensionList.installDistribution\">Install</f:translate>",
          "41:                         </li>",
          "42:                     </f:else>",
          "43:                     <f:then>",
          "",
          "[Removed Lines]",
          "38:                             <f:link.action action=\"installDistribution\" controller=\"Download\" arguments=\"{extension:extension}\" class=\"btn btn-default t3-button-action-installdistribution\">",
          "40:                             </f:link.action>",
          "",
          "[Added Lines]",
          "34:             <f:form id=\"installDistributionForm\" action=\"installDistribution\" controller=\"Download\"></f:form>",
          "40:                             <f:form.button form=\"installDistributionForm\" type=\"submit\" name=\"extension\" value=\"{extension}\" class=\"btn btn-default t3-button-action-installdistribution\">",
          "42:                             </f:form.button>",
          "",
          "---------------"
        ],
        "Resources/Private/Templates/List/Distributions.html||Resources/Private/Templates/List/Distributions.html": [
          "File: Resources/Private/Templates/List/Distributions.html -> Resources/Private/Templates/List/Distributions.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "35:                     <f:render partial=\"List/Distribution\" arguments=\"{distribution: distribution, official: 0}\" />",
          "36:                 </f:for>",
          "37:             </div>",
          "38:         </f:then>",
          "39:         <f:else>",
          "40:             <p>{f:translate(key: 'extensionList.installImpexp')}</p>",
          "44:         </f:else>",
          "45:     </f:if>",
          "",
          "[Removed Lines]",
          "41:             <f:link.action action=\"toggleExtensionInstallationState\" controller=\"Action\" arguments=\"{extensionKey: 'impexp'}\" class=\"btn btn-default t3-button-action-installdistribution\">",
          "42:                 <core:icon identifier=\"actions-download\" size=\"small\" /><f:translate key=\"distribution.installImpexp\">Install impexp</f:translate>",
          "43:             </f:link.action>",
          "",
          "[Added Lines]",
          "39:             <f:form id=\"installDistributionForm\" action=\"installDistribution\" controller=\"Download\"></f:form>",
          "43:             <f:form action=\"toggleExtensionInstallationState\" controller=\"Action\">",
          "44:                 <f:form.button type=\"submit\" name=\"extensionKey\" value=\"impexp\" class=\"btn btn-default t3-button-action-installdistribution\">",
          "45:                     <core:icon identifier=\"actions-download\" size=\"small\" /><f:translate key=\"distribution.installImpexp\">Install impexp</f:translate>",
          "46:                 </f:form.button>",
          "47:             </f:form>",
          "",
          "---------------"
        ],
        "Resources/Private/Templates/List/UnresolvedDependencies.html||Resources/Private/Templates/List/UnresolvedDependencies.html": [
          "File: Resources/Private/Templates/List/UnresolvedDependencies.html -> Resources/Private/Templates/List/UnresolvedDependencies.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "17:     <em:be.trigger triggers=\"{triggers}\" />",
          "19:     <h1><f:translate key=\"installExtension\">Install extension</f:translate> <small>{f:translate(key: 'downloadExtension.dependencies.errorTitle')}</small></h1>",
          "31: </f:section>",
          "",
          "[Removed Lines]",
          "20:     <f:render partial=\"List/UnresolvedDependencies\" arguments=\"{_all}\" />",
          "21:     <f:be.infobox title=\"{f:translate(key: 'dependencyCheck.unresolvedDependencies.title')}\" state=\"1\">",
          "22:         <f:render partial=\"List/UnresolvedDependenciesMessage\" />",
          "23:     </f:be.infobox>",
          "24:     <f:link.action action=\"{returnAction.action}\" controller=\"{returnAction.controller}\" class=\"btn btn-default onClickMaskExtensionManager\">",
          "25:         <f:translate key=\"LLL:EXT:core/Resources/Private/Language/locallang_core.xlf:labels.goBack\" />",
          "26:     </f:link.action>",
          "27:     <f:link.action action=\"installExtensionWithoutSystemDependencyCheck\" controller=\"Action\" arguments=\"{extensionKey: extension.extensionKey}\" class=\"btn btn-danger t3js-dependencies disabled onClickMaskExtensionManager\">",
          "28:         <f:translate key=\"dependencyCheck.unresolvedDependencies.proceed\" />",
          "29:     </f:link.action>",
          "",
          "[Added Lines]",
          "20:     <f:form controller=\"Action\" action=\"installExtensionWithoutSystemDependencyCheck\">",
          "21:         <f:form.hidden name=\"extensionKey\" value=\"{extension.extensionKey}\" />",
          "23:         <f:render partial=\"List/UnresolvedDependencies\" arguments=\"{_all}\" />",
          "24:         <f:be.infobox title=\"{f:translate(key: 'dependencyCheck.unresolvedDependencies.title')}\" state=\"1\">",
          "25:             <f:render partial=\"List/UnresolvedDependenciesMessage\" />",
          "26:         </f:be.infobox>",
          "27:         <f:link.action action=\"{returnAction.action}\" controller=\"{returnAction.controller}\" class=\"btn btn-default onClickMaskExtensionManager\">",
          "28:             <f:translate key=\"LLL:EXT:core/Resources/Private/Language/locallang_core.xlf:labels.goBack\" />",
          "29:         </f:link.action>",
          "30:         <f:form.submit class=\"btn btn-danger t3js-dependencies disabled onClickMaskExtensionManager\" value=\"{f:translate(key: 'dependencyCheck.unresolvedDependencies.proceed')}\" />",
          "31:     </f:form>",
          "",
          "---------------"
        ],
        "Resources/Public/JavaScript/main.js||Resources/Public/JavaScript/main.js": [
          "File: Resources/Public/JavaScript/main.js -> Resources/Public/JavaScript/main.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "13: import DocumentService from\"@typo3/core/document-service.js\";import $ from\"jquery\";import BrowserSession from\"@typo3/backend/storage/browser-session.js\";import NProgress from\"nprogress\";import{default as Modal}from\"@typo3/backend/modal.js\";import Severity from\"@typo3/backend/severity.js\";import SecurityUtility from\"@typo3/core/security-utility.js\";import ExtensionManagerRepository from\"@typo3/extensionmanager/repository.js\";import ExtensionManagerUpdate from\"@typo3/extensionmanager/update.js\";import ExtensionManagerUploadForm from\"@typo3/extensionmanager/upload-form.js\";import\"@typo3/backend/input/clearable.js\";import AjaxRequest from\"@typo3/core/ajax/ajax-request.js\";import DebounceEvent from\"@typo3/core/event/debounce-event.js\";import RegularEvent from\"@typo3/core/event/regular-event.js\";import SortableTable from\"@typo3/backend/sortable-table.js\";const securityUtility=new SecurityUtility;var ExtensionManagerIdentifier;!function(e){e.extensionlist=\"typo3-extension-list\",e.searchField=\"#Tx_Extensionmanager_extensionkey\"}(ExtensionManagerIdentifier||(ExtensionManagerIdentifier={}));class ExtensionManager{constructor(){this.searchFilterSessionKey=\"tx-extensionmanager-local-filter\",DocumentService.ready().then((()=>{this.Update=new ExtensionManagerUpdate,this.UploadForm=new ExtensionManagerUploadForm,this.Repository=new ExtensionManagerRepository;const e=document.getElementById(ExtensionManagerIdentifier.extensionlist);let t;if(null!==e&&(e instanceof HTMLTableElement&&new SortableTable(e),new RegularEvent(\"click\",((e,t)=>{e.preventDefault(),Modal.confirm(TYPO3.lang[\"extensionList.removalConfirmation.title\"],TYPO3.lang[\"extensionList.removalConfirmation.question\"],Severity.error,[{text:TYPO3.lang[\"button.cancel\"],active:!0,btnClass:\"btn-default\",trigger:()=>{Modal.dismiss()}},{text:TYPO3.lang[\"button.remove\"],btnClass:\"btn-danger\",trigger:()=>{this.removeExtensionFromDisk(t),Modal.dismiss()}}])})).delegateTo(e,\".removeExtension\"),new RegularEvent(\"click\",((e,t)=>{e.preventDefault(),Modal.confirm(TYPO3.lang[\"extensionList.databaseReload.title\"],TYPO3.lang[\"extensionList.databaseReload.message\"],Severity.warning,[{text:TYPO3.lang[\"button.cancel\"],active:!0,btnClass:\"btn-default\",trigger:()=>{Modal.dismiss()}},{text:TYPO3.lang[\"button.reimport\"],btnClass:\"btn-warning\",trigger:()=>{window.location.href=t.href,Modal.dismiss()}}])})).delegateTo(e,\".reloadSqlData\")),$(document).on(\"click\",\".onClickMaskExtensionManager\",(()=>{NProgress.start()})).on(\"click\",\"a[data-action=update-extension]\",(e=>{e.preventDefault(),NProgress.start(),new AjaxRequest($(e.currentTarget).attr(\"href\")).get().then(this.updateExtension)})).on(\"change\",\"input[name=unlockDependencyIgnoreButton]\",(e=>{$(\".t3js-dependencies\").toggleClass(\"disabled\",!$(e.currentTarget).prop(\"checked\"))})),null!==(t=document.querySelector(ExtensionManagerIdentifier.searchField))){const e=BrowserSession.get(this.searchFilterSessionKey);null!==e&&(t.value=e,this.filterExtensions(e)),new RegularEvent(\"submit\",(e=>{e.preventDefault()})).bindTo(t.closest(\"form\")),new DebounceEvent(\"input\",(e=>{const t=e.target;BrowserSession.set(this.searchFilterSessionKey,t.value),this.filterExtensions(t.value)}),100).bindTo(t),t.clearable({onClear:()=>{BrowserSession.unset(this.searchFilterSessionKey),this.filterExtensions(\"\")}})}$(document).on(\"click\",\".t3-button-action-installdistribution\",(()=>{NProgress.start()})),this.Repository.initDom(),this.Update.initializeEvents(),this.UploadForm.initializeEvents()}))}filterExtensions(e){const t=document.querySelectorAll(\"[data-filterable]\"),n=[];t.forEach((e=>{const t=Array.from(e.parentElement.children);n.push(t.indexOf(e))}));document.querySelectorAll(\"#typo3-extension-list tbody tr\").forEach((t=>{const o=n.map((e=>t.children.item(e))),i=[];o.forEach((e=>{i.push(e.textContent.trim().replace(/\\s+/g,\" \"))})),t.classList.toggle(\"hidden\",\"\"!==e&&!RegExp(e,\"i\").test(i.join(\":\")))}))}removeExtensionFromDisk(e){NProgress.start(),new AjaxRequest(e.href).get().then((()=>{location.reload()})).finally((()=>{NProgress.done()}))}async updateExtension(e){let t=0;const n=await e.resolve(),o=$(\"<form>\");for(const[e,i]of Object.entries(n.updateComments)){const n=$(\"<input>\").attr({type:\"radio\",name:\"version\"}).val(e);0===t&&n.attr(\"checked\",\"checked\"),o.append([$(\"<h3>\").append([n,\" \"+securityUtility.encodeHtml(e)]),$(\"<div>\").append(i.replace(/(\\r\\n|\\n\\r|\\r|\\n)/g,\"\\n\").split(/\\n/).map((e=>securityUtility.encodeHtml(e))).join(\"<br>\"))]),t++}const i=$(\"<div>\").append([$(\"<h1>\").text(TYPO3.lang[\"extensionList.updateConfirmation.title\"]),$(\"<h2>\").text(TYPO3.lang[\"extensionList.updateConfirmation.message\"]),o]);NProgress.done(),Modal.confirm(TYPO3.lang[\"extensionList.updateConfirmation.questionVersionComments\"],i,Severity.warning,[{text:TYPO3.lang[\"button.cancel\"],active:!0,btnClass:\"btn-default\",trigger:(e,t)=>t.hideModal()},{text:TYPO3.lang[\"button.updateExtension\"],btnClass:\"btn-warning\",trigger:(e,t)=>{NProgress.start(),new AjaxRequest(n.url).withQueryArguments({version:$(\"input:radio[name=version]:checked\",t).val()}).get().finally((()=>{location.reload()})),t.hideModal()}}])}}const extensionManagerObject=new ExtensionManager;void 0===TYPO3.ExtensionManager&&(TYPO3.ExtensionManager=extensionManagerObject);export default extensionManagerObject;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "Resources/Public/JavaScript/repository.js||Resources/Public/JavaScript/repository.js": [
          "File: Resources/Public/JavaScript/repository.js -> Resources/Public/JavaScript/repository.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "13: import $ from\"jquery\";import NProgress from\"nprogress\";import Modal from\"@typo3/backend/modal.js\";import Notification from\"@typo3/backend/notification.js\";import Severity from\"@typo3/backend/severity.js\";import SortableTable from\"@typo3/backend/sortable-table.js\";import\"@typo3/backend/input/clearable.js\";import AjaxRequest from\"@typo3/core/ajax/ajax-request.js\";import RegularEvent from\"@typo3/core/event/regular-event.js\";class Repository{constructor(){this.downloadPath=\"\",this.getDependencies=async e=>{const t=await e.resolve();NProgress.done(),t.hasDependencies?Modal.confirm(t.title,$(t.message),Severity.info,[{text:TYPO3.lang[\"button.cancel\"],active:!0,btnClass:\"btn-default\",trigger:()=>{Modal.dismiss()}},{text:TYPO3.lang[\"button.resolveDependencies\"],btnClass:\"btn-primary\",trigger:()=>{this.getResolveDependenciesAndInstallResult(t.url+\"&downloadPath=\"+this.downloadPath),Modal.dismiss()}}]):t.hasErrors?Notification.error(t.title,t.message,15):this.getResolveDependenciesAndInstallResult(t.url+\"&downloadPath=\"+this.downloadPath)}}initDom(){NProgress.configure({parent:\".module-loading-indicator\",showSpinner:!1});const e=document.getElementById(\"terVersionTable\"),t=document.getElementById(\"terSearchTable\");e instanceof HTMLTableElement&&new SortableTable(e),t instanceof HTMLTableElement&&new SortableTable(t),this.bindDownload(),this.bindSearchFieldResetter()}bindDownload(){new RegularEvent(\"click\",((e,t)=>{e.preventDefault();const n=t.closest(\"form\"),s=n.dataset.href;this.downloadPath=n.querySelector(\"input.downloadPath:checked\").value,NProgress.start(),new AjaxRequest(s).get().then(this.getDependencies)})).delegateTo(document,\".downloadFromTer form.download button[type=submit]\")}getResolveDependenciesAndInstallResult(e){NProgress.start(),new AjaxRequest(e).get().then((async e=>{try{const t=await e.raw().json();if(t.errorCount>0){const e=Modal.confirm(t.errorTitle,$(t.errorMessage),Severity.error,[{text:TYPO3.lang[\"button.cancel\"],active:!0,btnClass:\"btn-default\",trigger:()=>{Modal.dismiss()}},{text:TYPO3.lang[\"button.resolveDependenciesIgnore\"],btnClass:\"btn-danger disabled t3js-dependencies\",trigger:e=>{$(e.currentTarget).hasClass(\"disabled\")||(this.getResolveDependenciesAndInstallResult(t.skipDependencyUri),Modal.dismiss())}}]);e.addEventListener(\"typo3-modal-shown\",(()=>{const t=e.querySelector(\".t3js-dependencies\");e.querySelector('input[name=\"unlockDependencyIgnoreButton\"]').addEventListener(\"change\",(e=>{e.currentTarget.checked?t?.classList.remove(\"disabled\"):t?.classList.add(\"disabled\")}))}))}else{let e=TYPO3.lang[\"extensionList.dependenciesResolveDownloadSuccess.message\"+t.installationTypeLanguageKey].replace(/\\{0\\}/g,t.extension);e+=\"\\n\"+TYPO3.lang[\"extensionList.dependenciesResolveDownloadSuccess.header\"]+\": \";for(const[n,s]of Object.entries(t.result)){e+=\"\\n\\n\"+TYPO3.lang[\"extensionList.dependenciesResolveDownloadSuccess.item\"]+\" \"+n+\": \";for(const t of Object.keys(s))e+=\"\\n* \"+t}Notification.info(TYPO3.lang[\"extensionList.dependenciesResolveFlashMessage.title\"+t.installationTypeLanguageKey].replace(/\\{0\\}/g,t.extension),e,15),top.TYPO3.ModuleMenu.App.refreshMenu()}}catch{Notification.error(TYPO3.lang[\"extensionList.dependenciesResolveInstallError.title\"]||\"Install error\",TYPO3.lang[\"extensionList.dependenciesResolveInstallError.message\"]||\"Your installation failed while resolving dependencies.\")}})).finally((()=>{NProgress.done()}))}bindSearchFieldResetter(){let e;if(null!==(e=document.querySelector('.typo3-extensionmanager-searchTerForm input[type=\"text\"]'))){const t=\"\"!==e.value;e.clearable({onClear:e=>{t&&e.closest(\"form\").submit()}})}}}export default Repository;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "Resources/Public/JavaScript/update.js||Resources/Public/JavaScript/update.js": [
          "File: Resources/Public/JavaScript/update.js -> Resources/Public/JavaScript/update.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "13: import $ from\"jquery\";import NProgress from\"nprogress\";import Notification from\"@typo3/backend/notification.js\";import AjaxRequest from\"@typo3/core/ajax/ajax-request.js\";import RegularEvent from\"@typo3/core/event/regular-event.js\";var ExtensionManagerUpdateIdentifier;!function(e){e.extensionTable=\"#terTable\",e.terUpdateAction=\".update-from-ter\",e.pagination=\".pagination-wrap\",e.splashscreen=\".splash-receivedata\",e.terTableWrapper=\"#terTableWrapper .table\"}(ExtensionManagerUpdateIdentifier||(ExtensionManagerUpdateIdentifier={}));class ExtensionManagerUpdate{initializeEvents(){const e=document.querySelector(ExtensionManagerUpdateIdentifier.terUpdateAction);null!==e&&(new RegularEvent(\"submit\",(e=>{e.preventDefault(),this.updateFromTer(e.target.action,!0)})).bindTo(e),this.updateFromTer(e.action,!1))}updateFromTer(e,t){t&&(e+=\"&forceUpdateCheck=1\"),$(ExtensionManagerUpdateIdentifier.terUpdateAction).addClass(\"extensionmanager-is-hidden\"),$(ExtensionManagerUpdateIdentifier.extensionTable).hide(),$(ExtensionManagerUpdateIdentifier.splashscreen).addClass(\"extensionmanager-is-shown\"),$(ExtensionManagerUpdateIdentifier.terTableWrapper).addClass(\"extensionmanager-is-loading\"),$(ExtensionManagerUpdateIdentifier.pagination).addClass(\"extensionmanager-is-loading\");let a=!1;NProgress.start(),new AjaxRequest(e).get().then((async e=>{const t=await e.resolve();t.errorMessage.length&&Notification.error(TYPO3.lang[\"extensionList.updateFromTerFlashMessage.title\"],t.errorMessage,10);const n=$(ExtensionManagerUpdateIdentifier.terUpdateAction+\" .extension-list-last-updated\");n.text(t.timeSinceLastUpdate),n.attr(\"title\",TYPO3.lang[\"extensionList.updateFromTer.lastUpdate.timeOfLastUpdate\"]+t.lastUpdateTime),t.updated&&(a=!0,window.location.replace(window.location.href))}),(async e=>{const t=e.response.statusText+\"(\"+e.response.status+\"): \"+await e.response.text();Notification.warning(TYPO3.lang[\"extensionList.updateFromTerFlashMessage.title\"],t,10)})).finally((()=>{NProgress.done(),a||($(ExtensionManagerUpdateIdentifier.splashscreen).removeClass(\"extensionmanager-is-shown\"),$(ExtensionManagerUpdateIdentifier.terTableWrapper).removeClass(\"extensionmanager-is-loading\"),$(ExtensionManagerUpdateIdentifier.pagination).removeClass(\"extensionmanager-is-loading\"),$(ExtensionManagerUpdateIdentifier.terUpdateAction).removeClass(\"extensionmanager-is-hidden\"),$(ExtensionManagerUpdateIdentifier.extensionTable).show())}))}}export default ExtensionManagerUpdate;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}