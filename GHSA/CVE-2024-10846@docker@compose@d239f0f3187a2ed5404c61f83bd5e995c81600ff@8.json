{
  "cve_id": "CVE-2024-10846",
  "cve_desc": "The compose-go library component in versions v2.10-v2.4.0 allows an authorized user who sends malicious YAML payloads to cause the compose-go to consume excessive amount of Memory and CPU cycles while parsing YAML, such as used by Docker Compose from versions  v2.27.0 to v2.29.7 included",
  "repo": "docker/compose",
  "patch_hash": "d239f0f3187a2ed5404c61f83bd5e995c81600ff",
  "patch_info": {
    "commit_hash": "d239f0f3187a2ed5404c61f83bd5e995c81600ff",
    "repo": "docker/compose",
    "commit_url": "https://github.com/docker/compose/commit/d239f0f3187a2ed5404c61f83bd5e995c81600ff#diff-33ef32bf6c23acb95f5902d7097b7a1d5128ca061167ec0716715b0b9eeaa5f6R10",
    "files": [
      "cmd/compose/config.go",
      "go.mod",
      "go.sum",
      "pkg/compose/create.go",
      "pkg/e2e/container_name_test.go",
      "pkg/e2e/fixtures/container_name/compose.yaml"
    ],
    "message": "check container_name is not in use by another service we will create\n\nSigned-off-by: Nicolas De Loof <nicolas.deloof@gmail.com>",
    "before_after_code_files": [
      "cmd/compose/config.go||cmd/compose/config.go",
      "go.mod||go.mod",
      "go.sum||go.sum",
      "pkg/compose/create.go||pkg/compose/create.go",
      "pkg/e2e/container_name_test.go||pkg/e2e/container_name_test.go"
    ]
  },
  "patch_diff": {
    "cmd/compose/config.go||cmd/compose/config.go": [
      "File: cmd/compose/config.go -> cmd/compose/config.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "169:    return err",
      "170:   }",
      "172:   switch opts.Format {",
      "173:   case \"json\":",
      "174:    content, err = project.MarshalJSON()",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "172:   if !opts.noConsistency {",
      "173:    err := project.CheckContainerNameUnicity()",
      "174:    if err != nil {",
      "175:     return err",
      "176:    }",
      "177:   }",
      "",
      "---------------"
    ],
    "go.mod||go.mod": [
      "File: go.mod -> go.mod",
      "--- Hunk 1 ---",
      "[Context before]",
      "7:  github.com/Microsoft/go-winio v0.6.1",
      "8:  github.com/acarl005/stripansi v0.0.0-20180116102854-5a71ef0e047d",
      "9:  github.com/buger/goterm v1.0.4",
      "11:  github.com/containerd/console v1.0.4",
      "12:  github.com/containerd/containerd v1.7.13",
      "13:  github.com/davecgh/go-spew v1.1.1",
      "",
      "[Removed Lines]",
      "10:  github.com/compose-spec/compose-go/v2 v2.0.3-0.20240407191136-f388192b8a39",
      "",
      "[Added Lines]",
      "10:  github.com/compose-spec/compose-go/v2 v2.0.3-0.20240416141209-60aa6409b2c4",
      "",
      "---------------"
    ],
    "go.sum||go.sum": [
      "File: go.sum -> go.sum",
      "--- Hunk 1 ---",
      "[Context before]",
      "90: github.com/cncf/xds/go v0.0.0-20230607035331-e9ce68804cb4/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=",
      "91: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb h1:EDmT6Q9Zs+SbUoc7Ik9EfrFqcylYqgPZ9ANSbTAntnE=",
      "92: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb/go.mod h1:ZjrT6AXHbDs86ZSdt/osfBi5qfexBrKUdONk989Wnk4=",
      "95: github.com/containerd/cgroups v1.1.0 h1:v8rEWFl6EoqHB+swVNjVoCJE8o3jX7e8nqBGPLaDFBM=",
      "96: github.com/containerd/cgroups v1.1.0/go.mod h1:6ppBcbh/NOOUU+dMKrykgaBnK9lCIBxHqJDGwsa1mIw=",
      "97: github.com/containerd/console v1.0.4 h1:F2g4+oChYvBTsASRTz8NP6iIAi97J3TtSAsLbIFn4ro=",
      "",
      "[Removed Lines]",
      "93: github.com/compose-spec/compose-go/v2 v2.0.3-0.20240407191136-f388192b8a39 h1:ZUpnv0xA75X9gy9Y7hjJm51nflGbr+2URaLXBtEic7A=",
      "94: github.com/compose-spec/compose-go/v2 v2.0.3-0.20240407191136-f388192b8a39/go.mod h1:bEPizBkIojlQ20pi2vNluBa58tevvj0Y18oUSHPyfdc=",
      "",
      "[Added Lines]",
      "93: github.com/compose-spec/compose-go/v2 v2.0.3-0.20240416141209-60aa6409b2c4 h1:WYiZ9D0WBykHUJLlpt+w7NXX0hy+cQKKdVe7vmsNZvg=",
      "94: github.com/compose-spec/compose-go/v2 v2.0.3-0.20240416141209-60aa6409b2c4/go.mod h1:bEPizBkIojlQ20pi2vNluBa58tevvj0Y18oUSHPyfdc=",
      "",
      "---------------"
    ],
    "pkg/compose/create.go||pkg/compose/create.go": [
      "File: pkg/compose/create.go -> pkg/compose/create.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "77:   options.Services = project.ServiceNames()",
      "78:  }",
      "80:  var observedState Containers",
      "82:  if err != nil {",
      "83:   return err",
      "84:  }",
      "",
      "[Removed Lines]",
      "81:  observedState, err := s.getContainers(ctx, project.Name, oneOffInclude, true)",
      "",
      "[Added Lines]",
      "80:  err := project.CheckContainerNameUnicity()",
      "81:  if err != nil {",
      "82:   return err",
      "83:  }",
      "86:  observedState, err = s.getContainers(ctx, project.Name, oneOffInclude, true)",
      "",
      "---------------"
    ],
    "pkg/e2e/container_name_test.go||pkg/e2e/container_name_test.go": [
      "File: pkg/e2e/container_name_test.go -> pkg/e2e/container_name_test.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5:    Copyright 2022 Docker Compose CLI authors",
      "7:    Licensed under the Apache License, Version 2.0 (the \"License\");",
      "8:    you may not use this file except in compliance with the License.",
      "9:    You may obtain a copy of the License at",
      "11:        http://www.apache.org/licenses/LICENSE-2.0",
      "13:    Unless required by applicable law or agreed to in writing, software",
      "14:    distributed under the License is distributed on an \"AS IS\" BASIS,",
      "15:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
      "16:    See the License for the specific language governing permissions and",
      "17:    limitations under the License.",
      "20: package e2e",
      "22: import (",
      "23:  \"testing\"",
      "25:  \"gotest.tools/v3/icmd\"",
      "26: )",
      "28: func TestUpContainerNameConflict(t *testing.T) {",
      "29:  c := NewParallelCLI(t)",
      "30:  const projectName = \"e2e-container_name_conflict\"",
      "32:  t.Cleanup(func() {",
      "33:   c.RunDockerComposeCmd(t, \"--project-name\", projectName, \"down\")",
      "34:  })",
      "36:  res := c.RunDockerComposeCmdNoCheck(t, \"-f\", \"fixtures/container_name/compose.yaml\", \"--project-name\", projectName, \"up\")",
      "37:  res.Assert(t, icmd.Expected{ExitCode: 1, Err: `container name \"test\" is already in use`})",
      "39:  c.RunDockerComposeCmd(t, \"--project-name\", projectName, \"down\")",
      "40:  c.RunDockerComposeCmd(t, \"-f\", \"fixtures/container_name/compose.yaml\", \"--project-name\", projectName, \"up\", \"test\")",
      "42:  c.RunDockerComposeCmd(t, \"--project-name\", projectName, \"down\")",
      "43:  c.RunDockerComposeCmd(t, \"-f\", \"fixtures/container_name/compose.yaml\", \"--project-name\", projectName, \"up\", \"another_test\")",
      "44: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "df9e420dddc1b7a7e01e8b9dad02b6224ca70c60",
      "candidate_info": {
        "commit_hash": "df9e420dddc1b7a7e01e8b9dad02b6224ca70c60",
        "repo": "docker/compose",
        "commit_url": "https://github.com/docker/compose/commit/df9e420dddc1b7a7e01e8b9dad02b6224ca70c60",
        "files": [
          "go.mod",
          "go.sum",
          "pkg/compose/watch.go"
        ],
        "message": "introduce watch restart action\n\nSigned-off-by: Nicolas De Loof <nicolas.deloof@gmail.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum",
          "pkg/compose/watch.go||pkg/compose/watch.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ],
          "candidate": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ]
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "9:  github.com/Microsoft/go-winio v0.6.2",
          "10:  github.com/acarl005/stripansi v0.0.0-20180116102854-5a71ef0e047d",
          "11:  github.com/buger/goterm v1.0.4",
          "13:  github.com/containerd/containerd v1.7.24",
          "14:  github.com/containerd/platforms v0.2.1",
          "15:  github.com/davecgh/go-spew v1.1.1",
          "",
          "[Removed Lines]",
          "12:  github.com/compose-spec/compose-go/v2 v2.4.6-0.20241203131247-9a9cc5d9c345",
          "",
          "[Added Lines]",
          "12:  github.com/compose-spec/compose-go/v2 v2.4.6",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "79: github.com/cloudflare/cfssl v0.0.0-20180223231731-4e2dcbde5004/go.mod h1:yMWuSON2oQp+43nFtAV/uvKQIFpSPerB57DCt9t8sSA=",
          "80: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb h1:EDmT6Q9Zs+SbUoc7Ik9EfrFqcylYqgPZ9ANSbTAntnE=",
          "81: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb/go.mod h1:ZjrT6AXHbDs86ZSdt/osfBi5qfexBrKUdONk989Wnk4=",
          "84: github.com/containerd/cgroups v1.1.0 h1:v8rEWFl6EoqHB+swVNjVoCJE8o3jX7e8nqBGPLaDFBM=",
          "85: github.com/containerd/cgroups/v3 v3.0.3 h1:S5ByHZ/h9PMe5IOQoN7E+nMc2UcLEM/V48DGDJ9kip0=",
          "86: github.com/containerd/cgroups/v3 v3.0.3/go.mod h1:8HBe7V3aWGLFPd/k03swSIsGjZhHI2WzJmticMgVuz0=",
          "",
          "[Removed Lines]",
          "82: github.com/compose-spec/compose-go/v2 v2.4.6-0.20241203131247-9a9cc5d9c345 h1:oLm7hga9jjaDedg+dqsWiI1GeRrcGLBPxu8W0VfpiKA=",
          "83: github.com/compose-spec/compose-go/v2 v2.4.6-0.20241203131247-9a9cc5d9c345/go.mod h1:lFN0DrMxIncJGYAXTfWuajfwj5haBJqrBkarHcnjJKc=",
          "",
          "[Added Lines]",
          "82: github.com/compose-spec/compose-go/v2 v2.4.6 h1:QiqXQ2L/f0OCbAl41bPpeiGAWVRIQ+GEDrYxO+dRPhQ=",
          "83: github.com/compose-spec/compose-go/v2 v2.4.6/go.mod h1:lFN0DrMxIncJGYAXTfWuajfwj5haBJqrBkarHcnjJKc=",
          "",
          "---------------"
        ],
        "pkg/compose/watch.go||pkg/compose/watch.go": [
          "File: pkg/compose/watch.go -> pkg/compose/watch.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "472: func (s *composeService) handleWatchBatch(ctx context.Context, project *types.Project, serviceName string, options api.WatchOptions, batch []fileEvent, syncer sync.Syncer) error {",
          "473:  pathMappings := make([]sync.PathMapping, len(batch))",
          "474:  restartService := false",
          "475:  for i := range batch {",
          "477:    return s.rebuild(ctx, project, serviceName, options)",
          "480:    restartService = true",
          "481:   }",
          "482:   pathMappings[i] = batch[i].PathMapping",
          "",
          "[Removed Lines]",
          "476:   if batch[i].Trigger.Action == types.WatchActionRebuild {",
          "478:   }",
          "479:   if batch[i].Trigger.Action == types.WatchActionSyncRestart {",
          "",
          "[Added Lines]",
          "475:  syncService := false",
          "477:   switch batch[i].Trigger.Action {",
          "478:   case types.WatchActionRebuild:",
          "480:   case types.WatchActionSync, types.WatchActionSyncExec:",
          "481:    syncService = true",
          "482:   case types.WatchActionSyncRestart:",
          "483:    restartService = true",
          "484:    syncService = true",
          "485:   case types.WatchActionRestart:",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "488:  if err != nil {",
          "489:   return err",
          "490:  }",
          "493:  }",
          "494:  if restartService {",
          "495:   err = s.restart(ctx, project.Name, api.RestartOptions{",
          "",
          "[Removed Lines]",
          "491:  if err := syncer.Sync(ctx, service, pathMappings); err != nil {",
          "492:   return err",
          "",
          "[Added Lines]",
          "497:  if syncService {",
          "498:   if err := syncer.Sync(ctx, service, pathMappings); err != nil {",
          "499:    return err",
          "500:   }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "507:  eg, ctx := errgroup.WithContext(ctx)",
          "508:  for _, b := range batch {",
          "509:   if b.Trigger.Action == types.WatchActionSyncExec {",
          "511:    if err != nil {",
          "512:     return err",
          "513:    }",
          "531:   }",
          "532:  }",
          "533:  return eg.Wait()",
          "534: }",
          "536: func (s *composeService) rebuild(ctx context.Context, project *types.Project, serviceName string, options api.WatchOptions) error {",
          "537:  options.LogTo.Log(api.WatchLogger, fmt.Sprintf(\"Rebuilding service %q after changes were detected...\", serviceName))",
          "",
          "[Removed Lines]",
          "510:    containers, err := s.getContainers(ctx, project.Name, oneOffExclude, false, serviceName)",
          "514:    x := b.Trigger.Exec",
          "515:    for _, c := range containers {",
          "516:     eg.Go(func() error {",
          "517:      exec := ccli.NewExecOptions()",
          "518:      exec.User = x.User",
          "519:      exec.Privileged = x.Privileged",
          "520:      exec.Command = x.Command",
          "521:      exec.Workdir = x.WorkingDir",
          "522:      for _, v := range x.Environment.ToMapping().Values() {",
          "523:       err := exec.Env.Set(v)",
          "524:       if err != nil {",
          "525:        return err",
          "526:       }",
          "527:      }",
          "528:      return ccli.RunExec(ctx, s.dockerCli, c.ID, exec)",
          "529:     })",
          "530:    }",
          "",
          "[Added Lines]",
          "518:    err := s.exec(ctx, project, serviceName, b.Trigger.Exec, eg)",
          "527: func (s *composeService) exec(ctx context.Context, project *types.Project, serviceName string, x types.ServiceHook, eg *errgroup.Group) error {",
          "528:  containers, err := s.getContainers(ctx, project.Name, oneOffExclude, false, serviceName)",
          "529:  if err != nil {",
          "530:   return err",
          "531:  }",
          "532:  for _, c := range containers {",
          "533:   eg.Go(func() error {",
          "534:    exec := ccli.NewExecOptions()",
          "535:    exec.User = x.User",
          "536:    exec.Privileged = x.Privileged",
          "537:    exec.Command = x.Command",
          "538:    exec.Workdir = x.WorkingDir",
          "539:    for _, v := range x.Environment.ToMapping().Values() {",
          "540:     err := exec.Env.Set(v)",
          "541:     if err != nil {",
          "542:      return err",
          "543:     }",
          "544:    }",
          "545:    return ccli.RunExec(ctx, s.dockerCli, c.ID, exec)",
          "546:   })",
          "547:  }",
          "548:  return nil",
          "549: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "82417bd5bce53205712b78e6ce937988ab2faf05",
      "candidate_info": {
        "commit_hash": "82417bd5bce53205712b78e6ce937988ab2faf05",
        "repo": "docker/compose",
        "commit_url": "https://github.com/docker/compose/commit/82417bd5bce53205712b78e6ce937988ab2faf05",
        "files": [
          "go.mod",
          "go.sum",
          "pkg/compose/create.go"
        ],
        "message": "add support for bind.recursive\n\nSigned-off-by: Nicolas De Loof <nicolas.deloof@gmail.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum",
          "pkg/compose/create.go||pkg/compose/create.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod",
            "go.sum||go.sum",
            "pkg/compose/create.go||pkg/compose/create.go"
          ],
          "candidate": [
            "go.mod||go.mod",
            "go.sum||go.sum",
            "pkg/compose/create.go||pkg/compose/create.go"
          ]
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  github.com/Microsoft/go-winio v0.6.2",
          "8:  github.com/acarl005/stripansi v0.0.0-20180116102854-5a71ef0e047d",
          "9:  github.com/buger/goterm v1.0.4",
          "11:  github.com/containerd/containerd v1.7.22",
          "12:  github.com/containerd/platforms v0.2.1",
          "13:  github.com/davecgh/go-spew v1.1.1",
          "",
          "[Removed Lines]",
          "10:  github.com/compose-spec/compose-go/v2 v2.3.0",
          "",
          "[Added Lines]",
          "10:  github.com/compose-spec/compose-go/v2 v2.3.1-0.20241015085011-35c9659361ef",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "85: github.com/cncf/xds/go v0.0.0-20231128003011-0fa0005c9caa/go.mod h1:x/1Gn8zydmfq8dk6e9PdstVsDgu9RuyIIJqAaF//0IM=",
          "86: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb h1:EDmT6Q9Zs+SbUoc7Ik9EfrFqcylYqgPZ9ANSbTAntnE=",
          "87: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb/go.mod h1:ZjrT6AXHbDs86ZSdt/osfBi5qfexBrKUdONk989Wnk4=",
          "90: github.com/containerd/cgroups v1.1.0 h1:v8rEWFl6EoqHB+swVNjVoCJE8o3jX7e8nqBGPLaDFBM=",
          "91: github.com/containerd/cgroups v1.1.0/go.mod h1:6ppBcbh/NOOUU+dMKrykgaBnK9lCIBxHqJDGwsa1mIw=",
          "92: github.com/containerd/console v1.0.4 h1:F2g4+oChYvBTsASRTz8NP6iIAi97J3TtSAsLbIFn4ro=",
          "",
          "[Removed Lines]",
          "88: github.com/compose-spec/compose-go/v2 v2.3.0 h1:5eomqgNcs/GqVknPtXF68V3muc67cOdXD35zCXn1aes=",
          "89: github.com/compose-spec/compose-go/v2 v2.3.0/go.mod h1:lFN0DrMxIncJGYAXTfWuajfwj5haBJqrBkarHcnjJKc=",
          "",
          "[Added Lines]",
          "88: github.com/compose-spec/compose-go/v2 v2.3.1-0.20241015085011-35c9659361ef h1:E3qLbOpEyqemgAkQQg3uKNFaJJ+cVXGKiy1Xj4zh49k=",
          "89: github.com/compose-spec/compose-go/v2 v2.3.1-0.20241015085011-35c9659361ef/go.mod h1:lFN0DrMxIncJGYAXTfWuajfwj5haBJqrBkarHcnjJKc=",
          "",
          "---------------"
        ],
        "pkg/compose/create.go||pkg/compose/create.go": [
          "File: pkg/compose/create.go -> pkg/compose/create.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "848:      case string(m.Type) != v.Type:",
          "849:       v.Source = m.Source",
          "850:       fallthrough",
          "852:       binds = append(binds, v.String())",
          "853:       continue MOUNTS",
          "854:      }",
          "",
          "[Removed Lines]",
          "851:      case v.Bind != nil && v.Bind.CreateHostPath:",
          "",
          "[Added Lines]",
          "851:      case !requireMountAPI(v.Bind):",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "860:  return binds, mounts, nil",
          "861: }",
          "863: func buildContainerMountOptions(p types.Project, s types.ServiceConfig, img moby.ImageInspect, inherit *moby.Container) ([]mount.Mount, error) {",
          "864:  var mounts = map[string]mount.Mount{}",
          "865:  if inherit != nil {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "865: func requireMountAPI(bind *types.ServiceVolumeBind) bool {",
          "866:  switch {",
          "867:  case bind == nil:",
          "868:   return false",
          "869:  case !bind.CreateHostPath:",
          "870:   return true",
          "871:  case bind.Propagation != \"\":",
          "872:   return true",
          "873:  case bind.Recursive != \"\":",
          "874:   return true",
          "875:  default:",
          "876:   return false",
          "877:  }",
          "878: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1147:  if bind == nil {",
          "1148:   return nil",
          "1149:  }",
          "1153:  }",
          "1154: }",
          "1156: func buildVolumeOptions(vol *types.ServiceVolumeVolume) *mount.VolumeOptions {",
          "",
          "[Removed Lines]",
          "1150:  return &mount.BindOptions{",
          "1151:   Propagation: mount.Propagation(bind.Propagation),",
          "",
          "[Added Lines]",
          "1167:  opts := &mount.BindOptions{",
          "1168:   Propagation:      mount.Propagation(bind.Propagation),",
          "1169:   CreateMountpoint: bind.CreateHostPath,",
          "1170:  }",
          "1171:  switch bind.Recursive {",
          "1172:  case \"disabled\":",
          "1173:   opts.NonRecursive = true",
          "1174:  case \"writable\":",
          "1175:   opts.ReadOnlyNonRecursive = true",
          "1176:  case \"readonly\":",
          "1177:   opts.ReadOnlyForceRecursive = true",
          "1179:  return opts",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0ef7bbcddcb5517f7e9448c3d50ed4086c845978",
      "candidate_info": {
        "commit_hash": "0ef7bbcddcb5517f7e9448c3d50ed4086c845978",
        "repo": "docker/compose",
        "commit_url": "https://github.com/docker/compose/commit/0ef7bbcddcb5517f7e9448c3d50ed4086c845978",
        "files": [
          "go.mod",
          "go.sum",
          "pkg/compose/watch.go",
          "pkg/watch/notify.go"
        ],
        "message": "introduce watch.include\n\nSigned-off-by: Nicolas De Loof <nicolas.deloof@gmail.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum",
          "pkg/compose/watch.go||pkg/compose/watch.go",
          "pkg/watch/notify.go||pkg/watch/notify.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ],
          "candidate": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ]
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  github.com/Microsoft/go-winio v0.6.2",
          "8:  github.com/acarl005/stripansi v0.0.0-20180116102854-5a71ef0e047d",
          "9:  github.com/buger/goterm v1.0.4",
          "11:  github.com/containerd/containerd/v2 v2.0.2",
          "12:  github.com/containerd/platforms v1.0.0-rc.1",
          "13:  github.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc",
          "",
          "[Removed Lines]",
          "10:  github.com/compose-spec/compose-go/v2 v2.4.9-0.20250225151507-331db8fefcb7",
          "",
          "[Added Lines]",
          "10:  github.com/compose-spec/compose-go/v2 v2.4.9-0.20250302154753-e508c724a35f",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "81: github.com/cloudflare/cfssl v0.0.0-20180223231731-4e2dcbde5004/go.mod h1:yMWuSON2oQp+43nFtAV/uvKQIFpSPerB57DCt9t8sSA=",
          "82: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb h1:EDmT6Q9Zs+SbUoc7Ik9EfrFqcylYqgPZ9ANSbTAntnE=",
          "83: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb/go.mod h1:ZjrT6AXHbDs86ZSdt/osfBi5qfexBrKUdONk989Wnk4=",
          "86: github.com/containerd/cgroups/v3 v3.0.5 h1:44na7Ud+VwyE7LIoJ8JTNQOa549a8543BmzaJHo6Bzo=",
          "87: github.com/containerd/cgroups/v3 v3.0.5/go.mod h1:SA5DLYnXO8pTGYiAHXz94qvLQTKfVM5GEVisn4jpins=",
          "88: github.com/containerd/console v1.0.4 h1:F2g4+oChYvBTsASRTz8NP6iIAi97J3TtSAsLbIFn4ro=",
          "",
          "[Removed Lines]",
          "84: github.com/compose-spec/compose-go/v2 v2.4.9-0.20250225151507-331db8fefcb7 h1:7NlxAsQcWvLpFlEHsBo80sJ1UMMs84kkf0yXGs6de2k=",
          "85: github.com/compose-spec/compose-go/v2 v2.4.9-0.20250225151507-331db8fefcb7/go.mod h1:6k5l/0TxCg0/2uLEhRVEsoBWBprS2uvZi32J7xub3lo=",
          "",
          "[Added Lines]",
          "84: github.com/compose-spec/compose-go/v2 v2.4.9-0.20250302154753-e508c724a35f h1:kbmTPhf7d9kTnmH0ghAQTqxs1zenKnwKczJlC4z5WSc=",
          "85: github.com/compose-spec/compose-go/v2 v2.4.9-0.20250302154753-e508c724a35f/go.mod h1:6k5l/0TxCg0/2uLEhRVEsoBWBprS2uvZi32J7xub3lo=",
          "",
          "---------------"
        ],
        "pkg/compose/watch.go||pkg/compose/watch.go": [
          "File: pkg/compose/watch.go -> pkg/compose/watch.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "82: type watchRule struct {",
          "83:  types.Trigger",
          "84:  ignore  watch.PathMatcher",
          "85:  service string",
          "86: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "84:  include watch.PathMatcher",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "90:  if !pathutil.IsChild(r.Path, hostPath) {",
          "91:   return nil",
          "92:  }",
          "93:  isIgnored, err := r.ignore.Matches(hostPath)",
          "94:  if err != nil {",
          "95:   logrus.Warnf(\"error ignore matching %q: %v\", hostPath, err)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "94:  included, err := r.include.Matches(hostPath)",
          "95:  if err != nil {",
          "96:   logrus.Warnf(\"error include matching %q: %v\", hostPath, err)",
          "97:   return nil",
          "98:  }",
          "99:  if !included {",
          "100:   logrus.Debugf(\"%s is not matching include pattern\", hostPath)",
          "101:   return nil",
          "102:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "244:    return nil, err",
          "245:   }",
          "247:   rules = append(rules, watchRule{",
          "248:    Trigger: trigger,",
          "249:    ignore: watch.NewCompositeMatcher(",
          "250:     dockerIgnores,",
          "251:     watch.EphemeralPathMatcher(),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "257:   var include watch.PathMatcher",
          "258:   if len(trigger.Include) == 0 {",
          "259:    include = watch.AnyMatcher{}",
          "260:   } else {",
          "261:    include, err = watch.NewDockerPatternMatcher(trigger.Path, trigger.Include)",
          "262:    if err != nil {",
          "263:     return nil, err",
          "264:    }",
          "265:   }",
          "269:    include: include,",
          "",
          "---------------"
        ],
        "pkg/watch/notify.go||pkg/watch/notify.go": [
          "File: pkg/watch/notify.go -> pkg/watch/notify.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:  MatchesEntireDir(file string) (bool, error)",
          "69: }",
          "71: type EmptyMatcher struct{}",
          "73: func (EmptyMatcher) Matches(f string) (bool, error)          { return false, nil }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "72: type AnyMatcher struct{}",
          "74: func (AnyMatcher) Matches(f string) (bool, error)          { return true, nil }",
          "75: func (AnyMatcher) MatchesEntireDir(f string) (bool, error) { return true, nil }",
          "77: var _ PathMatcher = AnyMatcher{}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6c06170eb0db72432e3e08e121d96f37c6d01dbc",
      "candidate_info": {
        "commit_hash": "6c06170eb0db72432e3e08e121d96f37c6d01dbc",
        "repo": "docker/compose",
        "commit_url": "https://github.com/docker/compose/commit/6c06170eb0db72432e3e08e121d96f37c6d01dbc",
        "files": [
          "go.mod",
          "go.sum",
          "pkg/compose/create.go"
        ],
        "message": "pass device.options to engine\n\nSigned-off-by: Nicolas De Loof <nicolas.deloof@gmail.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum",
          "pkg/compose/create.go||pkg/compose/create.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod",
            "go.sum||go.sum",
            "pkg/compose/create.go||pkg/compose/create.go"
          ],
          "candidate": [
            "go.mod||go.mod",
            "go.sum||go.sum",
            "pkg/compose/create.go||pkg/compose/create.go"
          ]
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  github.com/Microsoft/go-winio v0.6.2",
          "8:  github.com/acarl005/stripansi v0.0.0-20180116102854-5a71ef0e047d",
          "9:  github.com/buger/goterm v1.0.4",
          "11:  github.com/containerd/containerd v1.7.22",
          "12:  github.com/containerd/platforms v0.2.1",
          "13:  github.com/davecgh/go-spew v1.1.1",
          "",
          "[Removed Lines]",
          "10:  github.com/compose-spec/compose-go/v2 v2.2.0",
          "",
          "[Added Lines]",
          "10:  github.com/compose-spec/compose-go/v2 v2.2.1-0.20241003145835-48d3a5bbf4ea",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "192:  sigs.k8s.io/yaml v1.3.0 // indirect",
          "193:  tags.cncf.io/container-device-interface v0.8.0 // indirect",
          "194: )",
          "",
          "[Removed Lines]",
          "196: replace github.com/compose-spec/compose-go/v2 => github.com/compose-spec/compose-go/v2 v2.2.1-0.20240926141145-d3fd7d94aa31",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "85: github.com/cncf/xds/go v0.0.0-20231128003011-0fa0005c9caa/go.mod h1:x/1Gn8zydmfq8dk6e9PdstVsDgu9RuyIIJqAaF//0IM=",
          "86: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb h1:EDmT6Q9Zs+SbUoc7Ik9EfrFqcylYqgPZ9ANSbTAntnE=",
          "87: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb/go.mod h1:ZjrT6AXHbDs86ZSdt/osfBi5qfexBrKUdONk989Wnk4=",
          "90: github.com/containerd/cgroups v1.1.0 h1:v8rEWFl6EoqHB+swVNjVoCJE8o3jX7e8nqBGPLaDFBM=",
          "91: github.com/containerd/cgroups v1.1.0/go.mod h1:6ppBcbh/NOOUU+dMKrykgaBnK9lCIBxHqJDGwsa1mIw=",
          "92: github.com/containerd/console v1.0.4 h1:F2g4+oChYvBTsASRTz8NP6iIAi97J3TtSAsLbIFn4ro=",
          "",
          "[Removed Lines]",
          "88: github.com/compose-spec/compose-go/v2 v2.2.1-0.20240926141145-d3fd7d94aa31 h1:1LUnOD+HiecazmN9NDFE9mtwywIehxt/I4g0jc/syc0=",
          "89: github.com/compose-spec/compose-go/v2 v2.2.1-0.20240926141145-d3fd7d94aa31/go.mod h1:lFN0DrMxIncJGYAXTfWuajfwj5haBJqrBkarHcnjJKc=",
          "",
          "[Added Lines]",
          "88: github.com/compose-spec/compose-go/v2 v2.2.1-0.20241003145835-48d3a5bbf4ea h1:BU/Sx/dAU6f64sDad58igm4OwwI1Z1uvV5E0ZKv4CZ8=",
          "89: github.com/compose-spec/compose-go/v2 v2.2.1-0.20241003145835-48d3a5bbf4ea/go.mod h1:lFN0DrMxIncJGYAXTfWuajfwj5haBJqrBkarHcnjJKc=",
          "",
          "---------------"
        ],
        "pkg/compose/create.go||pkg/compose/create.go": [
          "File: pkg/compose/create.go -> pkg/compose/create.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "694:    Count:        int(device.Count),",
          "695:    DeviceIDs:    device.IDs,",
          "696:    Driver:       device.Driver,",
          "697:   })",
          "698:  }",
          "699: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "697:    Options:      device.Options,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a7c9de82b23a2cb145a94cb71926685dda33950f",
      "candidate_info": {
        "commit_hash": "a7c9de82b23a2cb145a94cb71926685dda33950f",
        "repo": "docker/compose",
        "commit_url": "https://github.com/docker/compose/commit/a7c9de82b23a2cb145a94cb71926685dda33950f",
        "files": [
          "go.mod",
          "go.sum"
        ],
        "message": "build(deps): bump github.com/containerd/containerd from 1.7.22 to 1.7.23\n\nBumps [github.com/containerd/containerd](https://github.com/containerd/containerd) from 1.7.22 to 1.7.23.\n- [Release notes](https://github.com/containerd/containerd/releases)\n- [Changelog](https://github.com/containerd/containerd/blob/main/RELEASES.md)\n- [Commits](https://github.com/containerd/containerd/compare/v1.7.22...v1.7.23)\n\n---\nupdated-dependencies:\n- dependency-name: github.com/containerd/containerd\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ],
          "candidate": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ]
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:  github.com/acarl005/stripansi v0.0.0-20180116102854-5a71ef0e047d",
          "9:  github.com/buger/goterm v1.0.4",
          "10:  github.com/compose-spec/compose-go/v2 v2.4.1",
          "12:  github.com/containerd/platforms v0.2.1",
          "13:  github.com/davecgh/go-spew v1.1.1",
          "14:  github.com/distribution/reference v0.6.0",
          "",
          "[Removed Lines]",
          "11:  github.com/containerd/containerd v1.7.22",
          "",
          "[Added Lines]",
          "11:  github.com/containerd/containerd v1.7.23",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "84:  github.com/containerd/console v1.0.4 // indirect",
          "85:  github.com/containerd/containerd/api v1.7.19 // indirect",
          "86:  github.com/containerd/continuity v0.4.3 // indirect",
          "88:  github.com/containerd/log v0.1.0 // indirect",
          "89:  github.com/containerd/ttrpc v1.2.5 // indirect",
          "90:  github.com/containerd/typeurl/v2 v2.2.0 // indirect",
          "",
          "[Removed Lines]",
          "87:  github.com/containerd/errdefs v0.1.0 // indirect",
          "",
          "[Added Lines]",
          "87:  github.com/containerd/errdefs v0.3.0 // indirect",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "91: github.com/containerd/cgroups v1.1.0/go.mod h1:6ppBcbh/NOOUU+dMKrykgaBnK9lCIBxHqJDGwsa1mIw=",
          "92: github.com/containerd/console v1.0.4 h1:F2g4+oChYvBTsASRTz8NP6iIAi97J3TtSAsLbIFn4ro=",
          "93: github.com/containerd/console v1.0.4/go.mod h1:YynlIjWYF8myEu6sdkwKIvGQq+cOckRm6So2avqoYAk=",
          "96: github.com/containerd/containerd/api v1.7.19 h1:VWbJL+8Ap4Ju2mx9c9qS1uFSB1OVYr5JJrW2yT5vFoA=",
          "97: github.com/containerd/containerd/api v1.7.19/go.mod h1:fwGavl3LNwAV5ilJ0sbrABL44AQxmNjDRcwheXDb6Ig=",
          "98: github.com/containerd/continuity v0.4.3 h1:6HVkalIp+2u1ZLH1J/pYX2oBVXlJZvh1X1A7bEZ9Su8=",
          "99: github.com/containerd/continuity v0.4.3/go.mod h1:F6PTNCKepoxEaXLQp3wDAjygEnImnZ/7o4JzpodfroQ=",
          "102: github.com/containerd/fifo v1.1.0 h1:4I2mbh5stb1u6ycIABlBw9zgtlK8viPI9QkQNRQEEmY=",
          "103: github.com/containerd/fifo v1.1.0/go.mod h1:bmC4NWMbXlt2EZ0Hc7Fx7QzTFxgPID13eH0Qu+MAb2o=",
          "104: github.com/containerd/log v0.1.0 h1:TCJt7ioM2cr/tfR8GPbGf9/VRAX8D2B4PjzCpfX540I=",
          "",
          "[Removed Lines]",
          "94: github.com/containerd/containerd v1.7.22 h1:nZuNnNRA6T6jB975rx2RRNqqH2k6ELYKDZfqTHqwyy0=",
          "95: github.com/containerd/containerd v1.7.22/go.mod h1:e3Jz1rYRUZ2Lt51YrH9Rz0zPyJBOlSvB3ghr2jbVD8g=",
          "100: github.com/containerd/errdefs v0.1.0 h1:m0wCRBiu1WJT/Fr+iOoQHMQS/eP5myQ8lCv4Dz5ZURM=",
          "101: github.com/containerd/errdefs v0.1.0/go.mod h1:YgWiiHtLmSeBrvpw+UfPijzbLaB77mEG1WwJTDETIV0=",
          "",
          "[Added Lines]",
          "94: github.com/containerd/containerd v1.7.23 h1:H2CClyUkmpKAGlhQp95g2WXHfLYc7whAuvZGBNYOOwQ=",
          "95: github.com/containerd/containerd v1.7.23/go.mod h1:7QUzfURqZWCZV7RLNEn1XjUCQLEf0bkaK4GjUaZehxw=",
          "100: github.com/containerd/errdefs v0.3.0 h1:FSZgGOeK4yuT/+DnF07/Olde/q4KBoMsaamhXxIMDp4=",
          "101: github.com/containerd/errdefs v0.3.0/go.mod h1:+YBYIdtsnF4Iw6nWZhJcqGSg/dwvV7tyJ/kCkyJ2k+M=",
          "",
          "---------------"
        ]
      }
    }
  ]
}