{
  "cve_id": "CVE-2024-56411",
  "cve_desc": "PhpSpreadsheet is a PHP library for reading and writing spreadsheet files. Versions prior to 3.7.0, 2.3.5, 2.1.6, and 1.29.7 have a cross-site scripting (XSS) vulnerability of the hyperlink base in the HTML page header. The HTML page is formed without sanitizing the hyperlink base. Versions 3.7.0, 2.3.5, 2.1.6, and 1.29.7 contain a patch for the issue.",
  "repo": "PHPOffice/PhpSpreadsheet",
  "patch_hash": "45052f88e04c735d56457a8ffcdc40b2635a028e",
  "patch_info": {
    "commit_hash": "45052f88e04c735d56457a8ffcdc40b2635a028e",
    "repo": "PHPOffice/PhpSpreadsheet",
    "commit_url": "https://github.com/PHPOffice/PhpSpreadsheet/commit/45052f88e04c735d56457a8ffcdc40b2635a028e",
    "files": [
      "src/PhpSpreadsheet/Writer/Html.php",
      "tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php",
      "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php",
      "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php",
      "tests/data/Reader/XLSX/sec-j47r.dontuse",
      "tests/data/Reader/XLSX/sec-p66w.dontuse",
      "tests/data/Reader/XLSX/sec-q229.dontuse"
    ],
    "message": "Merge commit from fork",
    "before_after_code_files": [
      "src/PhpSpreadsheet/Writer/Html.php||src/PhpSpreadsheet/Writer/Html.php",
      "tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php",
      "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php",
      "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php"
    ]
  },
  "patch_diff": {
    "src/PhpSpreadsheet/Writer/Html.php||src/PhpSpreadsheet/Writer/Html.php": [
      "File: src/PhpSpreadsheet/Writer/Html.php -> src/PhpSpreadsheet/Writer/Html.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "403:                 } else {",
      "404:                     $propertyValue = (string) $propertyValue;",
      "405:                 }",
      "407:             }",
      "408:         }",
      "410:         if (!empty($properties->getHyperlinkBase())) {",
      "412:         }",
      "414:         $html .= $includeStyles ? $this->generateStyles(true) : $this->generatePageDeclarations(true);",
      "",
      "[Removed Lines]",
      "406:                 $html .= self::generateMeta($propertyValue, \"custom.$propertyQualifier.$customProperty\");",
      "411:             $html .= '      <base href=\"' . $properties->getHyperlinkBase() . '\" />' . PHP_EOL;",
      "",
      "[Added Lines]",
      "406:                 $html .= self::generateMeta($propertyValue, htmlspecialchars(\"custom.$propertyQualifier.$customProperty\"));",
      "411:             $html .= '      <base href=\"' . htmlspecialchars($properties->getHyperlinkBase()) . '\" />' . PHP_EOL;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1587:             if ($worksheet->hyperlinkExists($coordinate) && !$worksheet->getHyperlink($coordinate)->isInternal()) {",
      "1588:                 $url = $worksheet->getHyperlink($coordinate)->getUrl();",
      "1591:                 if ($parseScheme === 1 && !in_array($matches[1], ['http', 'https', 'file', 'ftp', 's3'], true)) {",
      "1592:                     $cellData = htmlspecialchars($url, Settings::htmlEntityFlags());",
      "1593:                 } else {",
      "",
      "[Removed Lines]",
      "1589:                 $urldecode = strtolower(html_entity_decode(trim($url), encoding: 'UTF-8'));",
      "1590:                 $parseScheme = preg_match('/^(\\\\w+):/', $urldecode, $matches);",
      "",
      "[Added Lines]",
      "1589:                 $urlDecode1 = html_entity_decode($url, ENT_QUOTES | ENT_SUBSTITUTE, 'UTF-8');",
      "1590:                 $urlTrim = preg_replace('/^\\\\s+/u', '', $urlDecode1) ?? $urlDecode1;",
      "1591:                 $parseScheme = preg_match('/^([\\\\w\\\\s]+):/u', strtolower($urlTrim), $matches);",
      "",
      "---------------"
    ],
    "tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php": [
      "File: tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php -> tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: <?php",
      "3: declare(strict_types=1);",
      "5: namespace PhpOffice\\PhpSpreadsheetTests\\Writer\\Html;",
      "7: use PhpOffice\\PhpSpreadsheet\\Reader\\Xlsx as XlsxReader;",
      "8: use PhpOffice\\PhpSpreadsheet\\Writer\\Html as HtmlWriter;",
      "9: use PHPUnit\\Framework\\TestCase;",
      "11: class BadCustomPropertyTest extends TestCase",
      "12: {",
      "13:     public function testBadCustomProperty(): void",
      "14:     {",
      "15:         $reader = new XlsxReader();",
      "16:         $infile = 'tests/data/Reader/XLSX/sec-q229.dontuse';",
      "17:         $spreadsheet = $reader->load($infile);",
      "18:         $writer = new HtmlWriter($spreadsheet);",
      "19:         $html = $writer->generateHtmlAll();",
      "20:         self::assertStringContainsString('<meta name=\"custom.string.custom_property&quot;&gt;&lt;img src=1 onerror=alert()&gt;\" content=\"test\" />', $html);",
      "21:         $spreadsheet->disconnectWorksheets();",
      "22:     }",
      "23: }",
      "",
      "---------------"
    ],
    "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php": [
      "File: tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php -> tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: <?php",
      "3: declare(strict_types=1);",
      "5: namespace PhpOffice\\PhpSpreadsheetTests\\Writer\\Html;",
      "7: use PhpOffice\\PhpSpreadsheet\\Reader\\Xlsx as XlsxReader;",
      "8: use PhpOffice\\PhpSpreadsheet\\Writer\\Html as HtmlWriter;",
      "9: use PHPUnit\\Framework\\TestCase;",
      "11: class BadHyperlinkBaseTest extends TestCase",
      "12: {",
      "13:     public function testBadHyperlinkBase(): void",
      "14:     {",
      "15:         $reader = new XlsxReader();",
      "16:         $infile = 'tests/data/Reader/XLSX/sec-p66w.dontuse';",
      "17:         $spreadsheet = $reader->load($infile);",
      "18:         $writer = new HtmlWriter($spreadsheet);",
      "19:         $html = $writer->generateHtmlAll();",
      "20:         self::assertStringContainsString('<base href=\"&quot;&gt;&lt;img src=1 onerror=alert()&gt;\" />', $html);",
      "21:         $spreadsheet->disconnectWorksheets();",
      "22:     }",
      "23: }",
      "",
      "---------------"
    ],
    "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php": [
      "File: tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php -> tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: <?php",
      "3: declare(strict_types=1);",
      "5: namespace PhpOffice\\PhpSpreadsheetTests\\Writer\\Html;",
      "7: use PhpOffice\\PhpSpreadsheet\\Reader\\Xlsx as XlsxReader;",
      "8: use PhpOffice\\PhpSpreadsheet\\Writer\\Html as HtmlWriter;",
      "9: use PHPUnit\\Framework\\TestCase;",
      "11: class BadHyperlinkTest extends TestCase",
      "12: {",
      "13:     public function testBadHyperlink(): void",
      "14:     {",
      "15:         $reader = new XlsxReader();",
      "16:         $infile = 'tests/data/Reader/XLSX/sec-j47r.dontuse';",
      "17:         $spreadsheet = $reader->load($infile);",
      "18:         $writer = new HtmlWriter($spreadsheet);",
      "19:         $html = $writer->generateHtmlAll();",
      "20:         self::assertStringContainsString(\"<td class=\\\"column0 style1 f\\\">jav\\tascript:alert()</td>\", $html);",
      "21:         $spreadsheet->disconnectWorksheets();",
      "22:     }",
      "23: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "02c8625411dcb96e1f63d58c47460284e15b2e80",
      "candidate_info": {
        "commit_hash": "02c8625411dcb96e1f63d58c47460284e15b2e80",
        "repo": "PHPOffice/PhpSpreadsheet",
        "commit_url": "https://github.com/PHPOffice/PhpSpreadsheet/commit/02c8625411dcb96e1f63d58c47460284e15b2e80",
        "files": [
          "CHANGELOG.md",
          "src/PhpSpreadsheet/Writer/Html.php",
          "tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php",
          "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php",
          "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php",
          "tests/data/Reader/XLSX/sec-j47r.dontuse",
          "tests/data/Reader/XLSX/sec-p66w.dontuse",
          "tests/data/Reader/XLSX/sec-q229.dontuse"
        ],
        "message": "Backport Html Writer Security Patches",
        "before_after_code_files": [
          "src/PhpSpreadsheet/Writer/Html.php||src/PhpSpreadsheet/Writer/Html.php",
          "tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php",
          "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php",
          "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "src/PhpSpreadsheet/Writer/Html.php||src/PhpSpreadsheet/Writer/Html.php",
            "tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php",
            "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php",
            "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php"
          ],
          "candidate": [
            "src/PhpSpreadsheet/Writer/Html.php||src/PhpSpreadsheet/Writer/Html.php",
            "tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php",
            "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php",
            "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php"
          ]
        }
      },
      "candidate_diff": {
        "src/PhpSpreadsheet/Writer/Html.php||src/PhpSpreadsheet/Writer/Html.php": [
          "File: src/PhpSpreadsheet/Writer/Html.php -> src/PhpSpreadsheet/Writer/Html.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "407:                 } else {",
          "408:                     $propertyValue = (string) $propertyValue;",
          "409:                 }",
          "411:             }",
          "412:         }",
          "414:         if (!empty($properties->getHyperlinkBase())) {",
          "416:         }",
          "418:         $html .= $includeStyles ? $this->generateStyles(true) : $this->generatePageDeclarations(true);",
          "",
          "[Removed Lines]",
          "410:                 $html .= self::generateMeta($propertyValue, \"custom.$propertyQualifier.$customProperty\");",
          "415:             $html .= '      <base href=\"' . $properties->getHyperlinkBase() . '\" />' . PHP_EOL;",
          "",
          "[Added Lines]",
          "410:                 $html .= self::generateMeta($propertyValue, htmlspecialchars(\"custom.$propertyQualifier.$customProperty\"));",
          "415:             $html .= '      <base href=\"' . htmlspecialchars($properties->getHyperlinkBase()) . '\" />' . PHP_EOL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1520:             if ($worksheet->hyperlinkExists($coordinate) && !$worksheet->getHyperlink($coordinate)->isInternal()) {",
          "1521:                 $url = $worksheet->getHyperlink($coordinate)->getUrl();",
          "1524:                 if ($parseScheme === 1 && !in_array($matches[1], ['http', 'https', 'file', 'ftp', 's3'], true)) {",
          "1525:                     $cellData = htmlspecialchars($url, Settings::htmlEntityFlags());",
          "1526:                 } else {",
          "",
          "[Removed Lines]",
          "1522:                 $urldecode = strtolower(html_entity_decode(trim($url), ENT_QUOTES | ENT_SUBSTITUTE | ENT_HTML401, 'UTF-8'));",
          "1523:                 $parseScheme = preg_match('/^(\\\\w+):/', $urldecode, $matches);",
          "",
          "[Added Lines]",
          "1522:                 $urlDecode1 = html_entity_decode($url, ENT_QUOTES | ENT_SUBSTITUTE, 'UTF-8');",
          "1523:                 $urlTrim = preg_replace('/^\\\\s+/u', '', $urlDecode1) ?? $urlDecode1;",
          "1524:                 $parseScheme = preg_match('/^([\\\\w\\\\s]+):/u', strtolower($urlTrim), $matches);",
          "",
          "---------------"
        ],
        "tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php": [
          "File: tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php -> tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: declare(strict_types=1);",
          "5: namespace PhpOffice\\PhpSpreadsheetTests\\Writer\\Html;",
          "7: use PhpOffice\\PhpSpreadsheet\\Reader\\Xlsx as XlsxReader;",
          "8: use PhpOffice\\PhpSpreadsheet\\Writer\\Html as HtmlWriter;",
          "9: use PHPUnit\\Framework\\TestCase;",
          "11: class BadCustomPropertyTest extends TestCase",
          "12: {",
          "13:     public function testBadCustomProperty(): void",
          "14:     {",
          "15:         $reader = new XlsxReader();",
          "16:         $infile = 'tests/data/Reader/XLSX/sec-q229.dontuse';",
          "17:         $spreadsheet = $reader->load($infile);",
          "18:         $writer = new HtmlWriter($spreadsheet);",
          "19:         $html = $writer->generateHtmlAll();",
          "20:         self::assertStringContainsString('<meta name=\"custom.string.custom_property&quot;&gt;&lt;img src=1 onerror=alert()&gt;\" content=\"test\" />', $html);",
          "21:         $spreadsheet->disconnectWorksheets();",
          "22:     }",
          "23: }",
          "",
          "---------------"
        ],
        "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php": [
          "File: tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php -> tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: declare(strict_types=1);",
          "5: namespace PhpOffice\\PhpSpreadsheetTests\\Writer\\Html;",
          "7: use PhpOffice\\PhpSpreadsheet\\Reader\\Xlsx as XlsxReader;",
          "8: use PhpOffice\\PhpSpreadsheet\\Writer\\Html as HtmlWriter;",
          "9: use PHPUnit\\Framework\\TestCase;",
          "11: class BadHyperlinkBaseTest extends TestCase",
          "12: {",
          "13:     public function testBadHyperlinkBase(): void",
          "14:     {",
          "15:         $reader = new XlsxReader();",
          "16:         $infile = 'tests/data/Reader/XLSX/sec-p66w.dontuse';",
          "17:         $spreadsheet = $reader->load($infile);",
          "18:         $writer = new HtmlWriter($spreadsheet);",
          "19:         $html = $writer->generateHtmlAll();",
          "20:         self::assertStringContainsString('<base href=\"&quot;&gt;&lt;img src=1 onerror=alert()&gt;\" />', $html);",
          "21:         $spreadsheet->disconnectWorksheets();",
          "22:     }",
          "23: }",
          "",
          "---------------"
        ],
        "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php": [
          "File: tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php -> tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: declare(strict_types=1);",
          "5: namespace PhpOffice\\PhpSpreadsheetTests\\Writer\\Html;",
          "7: use PhpOffice\\PhpSpreadsheet\\Reader\\Xlsx as XlsxReader;",
          "8: use PhpOffice\\PhpSpreadsheet\\Writer\\Html as HtmlWriter;",
          "9: use PHPUnit\\Framework\\TestCase;",
          "11: class BadHyperlinkTest extends TestCase",
          "12: {",
          "13:     public function testBadHyperlink(): void",
          "14:     {",
          "15:         $reader = new XlsxReader();",
          "16:         $infile = 'tests/data/Reader/XLSX/sec-j47r.dontuse';",
          "17:         $spreadsheet = $reader->load($infile);",
          "18:         $writer = new HtmlWriter($spreadsheet);",
          "19:         $html = $writer->generateHtmlAll();",
          "20:         self::assertStringContainsString(\"<td class=\\\"column0 style1 f\\\">jav\\tascript:alert()</td>\", $html);",
          "21:         $spreadsheet->disconnectWorksheets();",
          "22:     }",
          "23: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "04e8b6edc1bba1bbc8e1aef4111903d11e8323c1",
      "candidate_info": {
        "commit_hash": "04e8b6edc1bba1bbc8e1aef4111903d11e8323c1",
        "repo": "PHPOffice/PhpSpreadsheet",
        "commit_url": "https://github.com/PHPOffice/PhpSpreadsheet/commit/04e8b6edc1bba1bbc8e1aef4111903d11e8323c1",
        "files": [
          "CHANGELOG.md",
          "src/PhpSpreadsheet/Writer/Html.php",
          "tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php",
          "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php",
          "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php",
          "tests/data/Reader/XLSX/sec-j47r.dontuse",
          "tests/data/Reader/XLSX/sec-p66w.dontuse",
          "tests/data/Reader/XLSX/sec-q229.dontuse"
        ],
        "message": "Backport Html Writer Security Patches",
        "before_after_code_files": [
          "src/PhpSpreadsheet/Writer/Html.php||src/PhpSpreadsheet/Writer/Html.php",
          "tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php",
          "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php",
          "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "src/PhpSpreadsheet/Writer/Html.php||src/PhpSpreadsheet/Writer/Html.php",
            "tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php",
            "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php",
            "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php"
          ],
          "candidate": [
            "src/PhpSpreadsheet/Writer/Html.php||src/PhpSpreadsheet/Writer/Html.php",
            "tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php",
            "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php",
            "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php"
          ]
        }
      },
      "candidate_diff": {
        "src/PhpSpreadsheet/Writer/Html.php||src/PhpSpreadsheet/Writer/Html.php": [
          "File: src/PhpSpreadsheet/Writer/Html.php -> src/PhpSpreadsheet/Writer/Html.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "386:                 } else {",
          "387:                     $propertyValue = (string) $propertyValue;",
          "388:                 }",
          "390:             }",
          "391:         }",
          "393:         if (!empty($properties->getHyperlinkBase())) {",
          "395:         }",
          "397:         $html .= $includeStyles ? $this->generateStyles(true) : $this->generatePageDeclarations(true);",
          "",
          "[Removed Lines]",
          "389:                 $html .= self::generateMeta($propertyValue, \"custom.$propertyQualifier.$customProperty\");",
          "394:             $html .= '      <base href=\"' . $properties->getHyperlinkBase() . '\" />' . PHP_EOL;",
          "",
          "[Added Lines]",
          "389:                 $html .= self::generateMeta($propertyValue, htmlspecialchars(\"custom.$propertyQualifier.$customProperty\"));",
          "394:             $html .= '      <base href=\"' . htmlspecialchars($properties->getHyperlinkBase()) . '\" />' . PHP_EOL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1495:             if ($worksheet->hyperlinkExists($coordinate) && !$worksheet->getHyperlink($coordinate)->isInternal()) {",
          "1496:                 $url = $worksheet->getHyperlink($coordinate)->getUrl();",
          "1499:                 if ($parseScheme === 1 && !in_array($matches[1], ['http', 'https', 'file', 'ftp', 's3'], true)) {",
          "1500:                     $cellData = htmlspecialchars($url, Settings::htmlEntityFlags());",
          "1501:                 } else {",
          "",
          "[Removed Lines]",
          "1497:                 $urldecode = strtolower(html_entity_decode(trim($url), encoding: 'UTF-8'));",
          "1498:                 $parseScheme = preg_match('/^(\\\\w+):/', $urldecode, $matches);",
          "",
          "[Added Lines]",
          "1497:                 $urlDecode1 = html_entity_decode($url, ENT_QUOTES | ENT_SUBSTITUTE, 'UTF-8');",
          "1498:                 $urlTrim = preg_replace('/^\\\\s+/u', '', $urlDecode1) ?? $urlDecode1;",
          "1499:                 $parseScheme = preg_match('/^([\\\\w\\\\s]+):/u', strtolower($urlTrim), $matches);",
          "",
          "---------------"
        ],
        "tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php": [
          "File: tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php -> tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: declare(strict_types=1);",
          "5: namespace PhpOffice\\PhpSpreadsheetTests\\Writer\\Html;",
          "7: use PhpOffice\\PhpSpreadsheet\\Reader\\Xlsx as XlsxReader;",
          "8: use PhpOffice\\PhpSpreadsheet\\Writer\\Html as HtmlWriter;",
          "9: use PHPUnit\\Framework\\TestCase;",
          "11: class BadCustomPropertyTest extends TestCase",
          "12: {",
          "13:     public function testBadCustomProperty(): void",
          "14:     {",
          "15:         $reader = new XlsxReader();",
          "16:         $infile = 'tests/data/Reader/XLSX/sec-q229.dontuse';",
          "17:         $spreadsheet = $reader->load($infile);",
          "18:         $writer = new HtmlWriter($spreadsheet);",
          "19:         $html = $writer->generateHtmlAll();",
          "20:         self::assertStringContainsString('<meta name=\"custom.string.custom_property&quot;&gt;&lt;img src=1 onerror=alert()&gt;\" content=\"test\" />', $html);",
          "21:         $spreadsheet->disconnectWorksheets();",
          "22:     }",
          "23: }",
          "",
          "---------------"
        ],
        "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php": [
          "File: tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php -> tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: declare(strict_types=1);",
          "5: namespace PhpOffice\\PhpSpreadsheetTests\\Writer\\Html;",
          "7: use PhpOffice\\PhpSpreadsheet\\Reader\\Xlsx as XlsxReader;",
          "8: use PhpOffice\\PhpSpreadsheet\\Writer\\Html as HtmlWriter;",
          "9: use PHPUnit\\Framework\\TestCase;",
          "11: class BadHyperlinkBaseTest extends TestCase",
          "12: {",
          "13:     public function testBadHyperlinkBase(): void",
          "14:     {",
          "15:         $reader = new XlsxReader();",
          "16:         $infile = 'tests/data/Reader/XLSX/sec-p66w.dontuse';",
          "17:         $spreadsheet = $reader->load($infile);",
          "18:         $writer = new HtmlWriter($spreadsheet);",
          "19:         $html = $writer->generateHtmlAll();",
          "20:         self::assertStringContainsString('<base href=\"&quot;&gt;&lt;img src=1 onerror=alert()&gt;\" />', $html);",
          "21:         $spreadsheet->disconnectWorksheets();",
          "22:     }",
          "23: }",
          "",
          "---------------"
        ],
        "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php": [
          "File: tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php -> tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: declare(strict_types=1);",
          "5: namespace PhpOffice\\PhpSpreadsheetTests\\Writer\\Html;",
          "7: use PhpOffice\\PhpSpreadsheet\\Reader\\Xlsx as XlsxReader;",
          "8: use PhpOffice\\PhpSpreadsheet\\Writer\\Html as HtmlWriter;",
          "9: use PHPUnit\\Framework\\TestCase;",
          "11: class BadHyperlinkTest extends TestCase",
          "12: {",
          "13:     public function testBadHyperlink(): void",
          "14:     {",
          "15:         $reader = new XlsxReader();",
          "16:         $infile = 'tests/data/Reader/XLSX/sec-j47r.dontuse';",
          "17:         $spreadsheet = $reader->load($infile);",
          "18:         $writer = new HtmlWriter($spreadsheet);",
          "19:         $html = $writer->generateHtmlAll();",
          "20:         self::assertStringContainsString(\"<td class=\\\"column0 style1 f\\\">jav\\tascript:alert()</td>\", $html);",
          "21:         $spreadsheet->disconnectWorksheets();",
          "22:     }",
          "23: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d836f2d7308a192441ccd1546545890b378af913",
      "candidate_info": {
        "commit_hash": "d836f2d7308a192441ccd1546545890b378af913",
        "repo": "PHPOffice/PhpSpreadsheet",
        "commit_url": "https://github.com/PHPOffice/PhpSpreadsheet/commit/d836f2d7308a192441ccd1546545890b378af913",
        "files": [
          "CHANGELOG.md",
          "src/PhpSpreadsheet/Writer/Html.php",
          "tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php",
          "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php",
          "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php",
          "tests/data/Reader/XLSX/sec-j47r.dontuse",
          "tests/data/Reader/XLSX/sec-p66w.dontuse",
          "tests/data/Reader/XLSX/sec-q229.dontuse"
        ],
        "message": "Backport Html Writer Security Patches",
        "before_after_code_files": [
          "src/PhpSpreadsheet/Writer/Html.php||src/PhpSpreadsheet/Writer/Html.php",
          "tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php",
          "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php",
          "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "src/PhpSpreadsheet/Writer/Html.php||src/PhpSpreadsheet/Writer/Html.php",
            "tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php",
            "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php",
            "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php"
          ],
          "candidate": [
            "src/PhpSpreadsheet/Writer/Html.php||src/PhpSpreadsheet/Writer/Html.php",
            "tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php",
            "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php",
            "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php"
          ]
        }
      },
      "candidate_diff": {
        "src/PhpSpreadsheet/Writer/Html.php||src/PhpSpreadsheet/Writer/Html.php": [
          "File: src/PhpSpreadsheet/Writer/Html.php -> src/PhpSpreadsheet/Writer/Html.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "392:                 } else {",
          "393:                     $propertyValue = (string) $propertyValue;",
          "394:                 }",
          "396:             }",
          "397:         }",
          "399:         if (!empty($properties->getHyperlinkBase())) {",
          "401:         }",
          "403:         $html .= $includeStyles ? $this->generateStyles(true) : $this->generatePageDeclarations(true);",
          "",
          "[Removed Lines]",
          "395:                 $html .= self::generateMeta($propertyValue, \"custom.$propertyQualifier.$customProperty\");",
          "400:             $html .= '      <base href=\"' . $properties->getHyperlinkBase() . '\" />' . PHP_EOL;",
          "",
          "[Added Lines]",
          "395:                 $html .= self::generateMeta($propertyValue, htmlspecialchars(\"custom.$propertyQualifier.$customProperty\"));",
          "400:             $html .= '      <base href=\"' . htmlspecialchars($properties->getHyperlinkBase()) . '\" />' . PHP_EOL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1527:             if ($worksheet->hyperlinkExists($coordinate) && !$worksheet->getHyperlink($coordinate)->isInternal()) {",
          "1528:                 $url = $worksheet->getHyperlink($coordinate)->getUrl();",
          "1531:                 if ($parseScheme === 1 && !in_array($matches[1], ['http', 'https', 'file', 'ftp', 's3'], true)) {",
          "1532:                     $cellData = htmlspecialchars($url, Settings::htmlEntityFlags());",
          "1533:                 } else {",
          "",
          "[Removed Lines]",
          "1529:                 $urldecode = strtolower(html_entity_decode(trim($url), encoding: 'UTF-8'));",
          "1530:                 $parseScheme = preg_match('/^(\\\\w+):/', $urldecode, $matches);",
          "",
          "[Added Lines]",
          "1529:                 $urlDecode1 = html_entity_decode($url, ENT_QUOTES | ENT_SUBSTITUTE, 'UTF-8');",
          "1530:                 $urlTrim = preg_replace('/^\\\\s+/u', '', $urlDecode1) ?? $urlDecode1;",
          "1531:                 $parseScheme = preg_match('/^([\\\\w\\\\s]+):/u', strtolower($urlTrim), $matches);",
          "",
          "---------------"
        ],
        "tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php": [
          "File: tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php -> tests/PhpSpreadsheetTests/Writer/Html/BadCustomPropertyTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: declare(strict_types=1);",
          "5: namespace PhpOffice\\PhpSpreadsheetTests\\Writer\\Html;",
          "7: use PhpOffice\\PhpSpreadsheet\\Reader\\Xlsx as XlsxReader;",
          "8: use PhpOffice\\PhpSpreadsheet\\Writer\\Html as HtmlWriter;",
          "9: use PHPUnit\\Framework\\TestCase;",
          "11: class BadCustomPropertyTest extends TestCase",
          "12: {",
          "13:     public function testBadCustomProperty(): void",
          "14:     {",
          "15:         $reader = new XlsxReader();",
          "16:         $infile = 'tests/data/Reader/XLSX/sec-q229.dontuse';",
          "17:         $spreadsheet = $reader->load($infile);",
          "18:         $writer = new HtmlWriter($spreadsheet);",
          "19:         $html = $writer->generateHtmlAll();",
          "20:         self::assertStringContainsString('<meta name=\"custom.string.custom_property&quot;&gt;&lt;img src=1 onerror=alert()&gt;\" content=\"test\" />', $html);",
          "21:         $spreadsheet->disconnectWorksheets();",
          "22:     }",
          "23: }",
          "",
          "---------------"
        ],
        "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php": [
          "File: tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php -> tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkBaseTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: declare(strict_types=1);",
          "5: namespace PhpOffice\\PhpSpreadsheetTests\\Writer\\Html;",
          "7: use PhpOffice\\PhpSpreadsheet\\Reader\\Xlsx as XlsxReader;",
          "8: use PhpOffice\\PhpSpreadsheet\\Writer\\Html as HtmlWriter;",
          "9: use PHPUnit\\Framework\\TestCase;",
          "11: class BadHyperlinkBaseTest extends TestCase",
          "12: {",
          "13:     public function testBadHyperlinkBase(): void",
          "14:     {",
          "15:         $reader = new XlsxReader();",
          "16:         $infile = 'tests/data/Reader/XLSX/sec-p66w.dontuse';",
          "17:         $spreadsheet = $reader->load($infile);",
          "18:         $writer = new HtmlWriter($spreadsheet);",
          "19:         $html = $writer->generateHtmlAll();",
          "20:         self::assertStringContainsString('<base href=\"&quot;&gt;&lt;img src=1 onerror=alert()&gt;\" />', $html);",
          "21:         $spreadsheet->disconnectWorksheets();",
          "22:     }",
          "23: }",
          "",
          "---------------"
        ],
        "tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php||tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php": [
          "File: tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php -> tests/PhpSpreadsheetTests/Writer/Html/BadHyperlinkTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: declare(strict_types=1);",
          "5: namespace PhpOffice\\PhpSpreadsheetTests\\Writer\\Html;",
          "7: use PhpOffice\\PhpSpreadsheet\\Reader\\Xlsx as XlsxReader;",
          "8: use PhpOffice\\PhpSpreadsheet\\Writer\\Html as HtmlWriter;",
          "9: use PHPUnit\\Framework\\TestCase;",
          "11: class BadHyperlinkTest extends TestCase",
          "12: {",
          "13:     public function testBadHyperlink(): void",
          "14:     {",
          "15:         $reader = new XlsxReader();",
          "16:         $infile = 'tests/data/Reader/XLSX/sec-j47r.dontuse';",
          "17:         $spreadsheet = $reader->load($infile);",
          "18:         $writer = new HtmlWriter($spreadsheet);",
          "19:         $html = $writer->generateHtmlAll();",
          "20:         self::assertStringContainsString(\"<td class=\\\"column0 style1 f\\\">jav\\tascript:alert()</td>\", $html);",
          "21:         $spreadsheet->disconnectWorksheets();",
          "22:     }",
          "23: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}