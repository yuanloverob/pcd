{
  "cve_id": "CVE-2024-56144",
  "cve_desc": "librenms is a community-based GPL-licensed network monitoring system. Affected versions are subject to a stored XSS on the parameters (Replace $DEVICE_ID with your specific $DEVICE_ID value):`/device/$DEVICE_ID/edit` -> param: display. Librenms versions up to 24.11.0 allow remote attackers to inject malicious scripts. When a user views or interacts with the page displaying the data, the malicious script executes immediately, leading to potential unauthorized actions or data exposure. This issue has been addressed in release version 24.12.0. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
  "repo": "librenms/librenms",
  "patch_hash": "c63c912d86098bcefd52a28328482b94632eadf8",
  "patch_info": {
    "commit_hash": "c63c912d86098bcefd52a28328482b94632eadf8",
    "repo": "librenms/librenms",
    "commit_url": "https://github.com/librenms/librenms/commit/c63c912d86098bcefd52a28328482b94632eadf8",
    "files": [
      "app/Http/Controllers/Table/CustomersController.php",
      "app/Http/Controllers/Table/EventlogController.php",
      "app/Http/Controllers/Table/FdbTablesController.php",
      "app/Http/Controllers/Table/GraylogController.php",
      "app/Http/Controllers/Table/InventoryController.php",
      "app/Http/Controllers/Table/MempoolsController.php",
      "app/Http/Controllers/Table/OutagesController.php",
      "app/Http/Controllers/Table/PortNacController.php",
      "app/Http/Controllers/Table/PortStpController.php",
      "app/Http/Controllers/Table/PortsController.php",
      "app/Http/Controllers/Table/RoutesTablesController.php",
      "app/Http/Controllers/Table/SyslogController.php"
    ],
    "message": "Replace deviceLink and portLink (#16886)\n\n* Replace deviceLink and portLink\nwith components in all table controllers\nthe overlib html generation makes it difficult to escape properly, the blade components are better.\n\n* Fix wrong variable name",
    "before_after_code_files": [
      "app/Http/Controllers/Table/CustomersController.php||app/Http/Controllers/Table/CustomersController.php",
      "app/Http/Controllers/Table/EventlogController.php||app/Http/Controllers/Table/EventlogController.php",
      "app/Http/Controllers/Table/FdbTablesController.php||app/Http/Controllers/Table/FdbTablesController.php",
      "app/Http/Controllers/Table/GraylogController.php||app/Http/Controllers/Table/GraylogController.php",
      "app/Http/Controllers/Table/InventoryController.php||app/Http/Controllers/Table/InventoryController.php",
      "app/Http/Controllers/Table/MempoolsController.php||app/Http/Controllers/Table/MempoolsController.php",
      "app/Http/Controllers/Table/OutagesController.php||app/Http/Controllers/Table/OutagesController.php",
      "app/Http/Controllers/Table/PortNacController.php||app/Http/Controllers/Table/PortNacController.php",
      "app/Http/Controllers/Table/PortStpController.php||app/Http/Controllers/Table/PortStpController.php",
      "app/Http/Controllers/Table/PortsController.php||app/Http/Controllers/Table/PortsController.php",
      "app/Http/Controllers/Table/RoutesTablesController.php||app/Http/Controllers/Table/RoutesTablesController.php",
      "app/Http/Controllers/Table/SyslogController.php||app/Http/Controllers/Table/SyslogController.php"
    ]
  },
  "patch_diff": {
    "app/Http/Controllers/Table/CustomersController.php||app/Http/Controllers/Table/CustomersController.php": [
      "File: app/Http/Controllers/Table/CustomersController.php -> app/Http/Controllers/Table/CustomersController.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "28: use App\\Models\\Port;",
      "29: use Illuminate\\Support\\Arr;",
      "30: use LibreNMS\\Config;",
      "31: use LibreNMS\\Util\\Html;",
      "34: class CustomersController extends TableController",
      "35: {",
      "",
      "[Removed Lines]",
      "32: use LibreNMS\\Util\\Url;",
      "",
      "[Added Lines]",
      "30: use Illuminate\\Support\\Facades\\Blade;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "104:     {",
      "105:         return [",
      "106:             'port_descr_descr' => $port->port_descr_descr,",
      "109:             'port_descr_speed' => $port->port_descr_speed,",
      "110:             'port_descr_circuit' => $port->port_descr_circuit,",
      "111:             'port_descr_notes' => $port->port_descr_notes,",
      "",
      "[Removed Lines]",
      "107:             'hostname' => Url::deviceLink($port->device),",
      "108:             'ifDescr' => Url::portLink($port),",
      "",
      "[Added Lines]",
      "107:             'hostname' => Blade::render('<x-device-link :device=\"$device\"/>', ['device' => $port->device]),",
      "108:             'ifDescr' => Blade::render('<x-port-link :port=\"$port\"/>', ['port' => $port]),",
      "",
      "---------------"
    ],
    "app/Http/Controllers/Table/EventlogController.php||app/Http/Controllers/Table/EventlogController.php": [
      "File: app/Http/Controllers/Table/EventlogController.php -> app/Http/Controllers/Table/EventlogController.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "28: use App\\Models\\Eventlog;",
      "29: use Carbon\\Carbon;",
      "30: use LibreNMS\\Config;",
      "31: use LibreNMS\\Enum\\Severity;",
      "32: use LibreNMS\\Util\\Url;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "30: use Illuminate\\Support\\Facades\\Blade;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "82:     {",
      "83:         return [",
      "84:             'datetime' => $this->formatDatetime($eventlog),",
      "86:             'type' => $this->formatType($eventlog),",
      "87:             'message' => htmlspecialchars($eventlog->message),",
      "88:             'username' => $eventlog->username ?: 'System',",
      "",
      "[Removed Lines]",
      "85:             'device_id' => $eventlog->device ? Url::deviceLink($eventlog->device, $eventlog->device->shortDisplayName()) : null,",
      "",
      "[Added Lines]",
      "86:             'device_id' => Blade::render('<x-device-link :device=\"$device\"/>', ['device' => $eventlog->device]),",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "95:             if (is_numeric($eventlog->reference)) {",
      "96:                 $port = $eventlog->related;",
      "97:                 if (isset($port)) {",
      "99:                 }",
      "100:             }",
      "101:         } elseif ($eventlog->type == 'stp') {",
      "103:         } elseif (in_array($eventlog->type, \\App\\Models\\Sensor::getTypes())) {",
      "104:             if (is_numeric($eventlog->reference)) {",
      "105:                 $sensor = $eventlog->related;",
      "",
      "[Removed Lines]",
      "98:                     return '<b>' . Url::portLink($port, $port->getShortLabel()) . '</b>';",
      "102:             return Url::deviceLink($eventlog->device, $eventlog->type, ['tab' => 'stp']);",
      "",
      "[Added Lines]",
      "99:                     return Blade::render('<b><x-port-link :port=\"$port\">{{ $port->getShortLabel() }}</x-port-link></b>', ['port' => $port]);",
      "103:             return Blade::render('<x-device-link :device=\"$device\" tab=\"stp\">stp</x-device-link>', ['device' => $eventlog->device]);",
      "",
      "---------------"
    ],
    "app/Http/Controllers/Table/FdbTablesController.php||app/Http/Controllers/Table/FdbTablesController.php": [
      "File: app/Http/Controllers/Table/FdbTablesController.php -> app/Http/Controllers/Table/FdbTablesController.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "32: use Illuminate\\Database\\Eloquent\\Builder;",
      "33: use Illuminate\\Http\\Request;",
      "34: use Illuminate\\Support\\Collection;",
      "35: use Illuminate\\Support\\Facades\\DB;",
      "36: use LibreNMS\\Util\\IP;",
      "37: use LibreNMS\\Util\\Mac;",
      "40: class FdbTablesController extends TableController",
      "41: {",
      "",
      "[Removed Lines]",
      "38: use LibreNMS\\Util\\Url;",
      "",
      "[Added Lines]",
      "35: use Illuminate\\Support\\Facades\\Blade;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "164:         $ips = $fdb_entry->ipv4Addresses->pluck('ipv4_address');",
      "166:         $item = [",
      "168:             'mac_address' => $mac->readable(),",
      "169:             'mac_oui' => $mac->vendor(),",
      "170:             'ipv4_address' => $ips->implode(', '),",
      "",
      "[Removed Lines]",
      "167:             'device' => $fdb_entry->device ? Url::deviceLink($fdb_entry->device) : '',",
      "",
      "[Added Lines]",
      "167:             'device' => Blade::render('<x-device-link :device=\"$device\"/>', ['device' => $fdb_entry->device]),",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "185:         }",
      "187:         if ($fdb_entry->port) {",
      "189:             $item['description'] = $fdb_entry->port->ifAlias;",
      "190:             if ($fdb_entry->port->ifInErrors > 0 || $fdb_entry->port->ifOutErrors > 0) {",
      "192:             }",
      "193:             if ($this->getMacCount($fdb_entry->port) == 1) {",
      "",
      "[Removed Lines]",
      "188:             $item['interface'] = Url::portLink($fdb_entry->port, $fdb_entry->port->getShortLabel());",
      "191:                 $item['interface'] .= ' ' . Url::portLink($fdb_entry->port, '<i class=\"fa fa-flag fa-lg\" style=\"color:red\" aria-hidden=\"true\"></i>');",
      "",
      "[Added Lines]",
      "188:             $item['interface'] = Blade::render('<x-port-link :port=\"$port\">{{ $port->getShortLabel() }}</x-port-link>', ['port' => $fdb_entry->port]);",
      "191:                 $item['interface'] .= Blade::render(' <x-port-link :port=\"$port\"><i class=\"fa fa-flag fa-lg\" style=\"color:red\" aria-hidden=\"true\"></i></x-port-link>', ['port' => $fdb_entry->port]);",
      "",
      "---------------"
    ],
    "app/Http/Controllers/Table/GraylogController.php||app/Http/Controllers/Table/GraylogController.php": [
      "File: app/Http/Controllers/Table/GraylogController.php -> app/Http/Controllers/Table/GraylogController.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "31: use DateTime;",
      "32: use DateTimeZone;",
      "33: use Illuminate\\Http\\Request;",
      "34: use LibreNMS\\Config;",
      "37: class GraylogController extends SimpleTableController",
      "38: {",
      "39:     private $timezone;",
      "42:     public function __construct()",
      "43:     {",
      "",
      "[Removed Lines]",
      "35: use LibreNMS\\Util\\Url;",
      "40:     private $deviceCache = [];",
      "",
      "[Added Lines]",
      "34: use Illuminate\\Support\\Facades\\Blade;",
      "40:     private $deviceLinkCache = [];",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "112:             $displayTime = $message['message']['timestamp'];",
      "113:         }",
      "117:         $level = $message['message']['level'] ?? '';",
      "118:         $facility = $message['message']['facility'] ?? '';",
      "120:         return [",
      "122:             'severity' => $this->severityLabel($level),",
      "123:             'timestamp' => $displayTime,",
      "125:             'message' => htmlspecialchars($message['message']['message'] ?? ''),",
      "126:             'facility' => is_numeric($facility) ? \"($facility) \" . __(\"syslog.facility.$facility\") : $facility,",
      "127:             'level' => (is_numeric($level) && $level >= 0) ? \"($level) \" . __(\"syslog.severity.$level\") : $level,",
      "",
      "[Removed Lines]",
      "115:         $origin = $this->deviceFromSource($message['message']['gl2_remote_ip']);",
      "116:         $source = $this->deviceFromSource($message['message']['source']);",
      "121:             'origin' => $origin ? Url::deviceLink($origin) : htmlspecialchars($message['message']['gl2_remote_ip']),",
      "124:             'source' => $source ? Url::deviceLink($source) : htmlspecialchars($message['message']['source']),",
      "",
      "[Added Lines]",
      "119:             'origin' => $this->deviceLinkFromSource($message['message']['gl2_remote_ip']),",
      "122:             'source' => $this->deviceLinkFromSource($message['message']['source']),",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "156:     {",
      "159:         }",
      "162:     }",
      "163: }",
      "",
      "[Removed Lines]",
      "155:     private function deviceFromSource($source)",
      "157:         if (! isset($this->deviceCache[$source])) {",
      "158:             $this->deviceCache[$source] = Device::findByIp($source) ?: Device::findByHostname($source);",
      "161:         return $this->deviceCache[$source];",
      "",
      "[Added Lines]",
      "153:     private function deviceLinkFromSource($source): string",
      "155:         if (! isset($this->deviceLinkCache[$source])) {",
      "156:             $device = Device::findByIp($source) ?: Device::findByHostname($source);",
      "158:             $this->deviceLinkCache[$source] = $device",
      "159:                 ? Blade::render('<x-device-link :device=\"$device\"/>', ['device' => $device])",
      "160:                 : htmlspecialchars($source);",
      "163:         return $this->deviceLinkCache[$source];",
      "",
      "---------------"
    ],
    "app/Http/Controllers/Table/InventoryController.php||app/Http/Controllers/Table/InventoryController.php": [
      "File: app/Http/Controllers/Table/InventoryController.php -> app/Http/Controllers/Table/InventoryController.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "28: use App\\Models\\EntPhysical;",
      "29: use Illuminate\\Database\\Eloquent\\Model;",
      "30: use Illuminate\\Support\\Collection;",
      "33: class InventoryController extends TableController",
      "34: {",
      "",
      "[Removed Lines]",
      "31: use LibreNMS\\Util\\Url;",
      "",
      "[Added Lines]",
      "31: use Illuminate\\Support\\Facades\\Blade;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "86:     public function formatItem($entPhysical)",
      "87:     {",
      "88:         return [",
      "90:             'descr' => htmlspecialchars($entPhysical->entPhysicalDescr),",
      "91:             'name' => htmlspecialchars($entPhysical->entPhysicalName),",
      "92:             'model' => htmlspecialchars($entPhysical->entPhysicalModelName),",
      "",
      "[Removed Lines]",
      "89:             'device' => Url::deviceLink($entPhysical->device),",
      "",
      "[Added Lines]",
      "89:             'device' => Blade::render('<x-device-link :device=\"$device\"/>', ['device' => $entPhysical->device]),",
      "",
      "---------------"
    ],
    "app/Http/Controllers/Table/MempoolsController.php||app/Http/Controllers/Table/MempoolsController.php": [
      "File: app/Http/Controllers/Table/MempoolsController.php -> app/Http/Controllers/Table/MempoolsController.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "28: use App\\Models\\Device;",
      "29: use App\\Models\\Mempool;",
      "30: use Illuminate\\Support\\Arr;",
      "31: use LibreNMS\\Config;",
      "32: use LibreNMS\\Util\\Html;",
      "33: use LibreNMS\\Util\\Number;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31: use Illuminate\\Support\\Facades\\Blade;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "81:             ]);",
      "83:             return [",
      "85:                 'mempool_descr' => $graphs[0],",
      "86:                 'graph' => $graphs[1],",
      "87:                 'mempool_used' => $graphs[2],",
      "",
      "[Removed Lines]",
      "84:                 'hostname' => Url::deviceLink($device),",
      "",
      "[Added Lines]",
      "85:                 'hostname' => Blade::render('<x-device-link :device=\"$device\"/>', ['device' => $device]),",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "93:         return [",
      "95:             'mempool_descr' => $mempool->mempool_descr,",
      "96:             'graph' => $this->miniGraph($mempool),",
      "97:             'mempool_used' => $this->barLink($mempool),",
      "",
      "[Removed Lines]",
      "94:             'hostname' => Url::deviceLink($mempool->device),",
      "",
      "[Added Lines]",
      "95:             'hostname' => Blade::render('<x-device-link :device=\"$device\"/>', ['device' => $mempool->device]),",
      "",
      "---------------"
    ],
    "app/Http/Controllers/Table/OutagesController.php||app/Http/Controllers/Table/OutagesController.php": [
      "File: app/Http/Controllers/Table/OutagesController.php -> app/Http/Controllers/Table/OutagesController.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "28: use App\\Models\\DeviceOutage;",
      "29: use Carbon\\Carbon;",
      "30: use LibreNMS\\Config;",
      "33: class OutagesController extends TableController",
      "34: {",
      "",
      "[Removed Lines]",
      "31: use LibreNMS\\Util\\Url;",
      "",
      "[Added Lines]",
      "30: use Illuminate\\Support\\Facades\\Blade;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "84:             'status' => $this->statusLabel($outage),",
      "85:             'going_down' => $start,",
      "86:             'up_again' => $end,",
      "88:             'duration' => $this->formatTime($duration),",
      "89:         ];",
      "90:     }",
      "",
      "[Removed Lines]",
      "87:             'device_id' => $outage->device ? Url::deviceLink($outage->device, $outage->device->shortDisplayName()) : null,",
      "",
      "[Added Lines]",
      "87:             'device_id' => Blade::render('<x-device-link :device=\"$device\"/>', ['device' => $outage->device]),",
      "",
      "---------------"
    ],
    "app/Http/Controllers/Table/PortNacController.php||app/Http/Controllers/Table/PortNacController.php": [
      "File: app/Http/Controllers/Table/PortNacController.php -> app/Http/Controllers/Table/PortNacController.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "29: use App\\Models\\PortsNac;",
      "30: use Illuminate\\Database\\Eloquent\\Builder;",
      "31: use Illuminate\\Support\\Collection;",
      "32: use Illuminate\\Support\\Facades\\DB;",
      "33: use LibreNMS\\Util\\Mac;",
      "36: class PortNacController extends TableController",
      "37: {",
      "",
      "[Removed Lines]",
      "34: use LibreNMS\\Util\\Url;",
      "",
      "[Added Lines]",
      "32: use Illuminate\\Support\\Facades\\Blade;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "136:         $mac = Mac::parse($item['mac_address']);",
      "137:         $item['updated_at'] = $nac->updated_at ? ($item['historical'] == 0 ? $nac->updated_at->diffForHumans() : $nac->updated_at->toDateTimeString()) : '';",
      "138:         $item['created_at'] = $nac->created_at ? $nac->created_at->toDateTimeString() : '';",
      "140:         $item['mac_oui'] = $mac->vendor();",
      "141:         $item['mac_address'] = $mac->readable();",
      "143:         unset($item['device']); //avoid sending all device data in the JSON reply",
      "144:         unset($item['port']); //free some unused data to be sent to the browser",
      "",
      "[Removed Lines]",
      "139:         $item['port_id'] = Url::portLink($nac->port, $nac->port->getShortLabel());",
      "142:         $item['device_id'] = Url::deviceLink($nac->device);",
      "",
      "[Added Lines]",
      "139:         $item['port_id'] = Blade::render('<x-port-link :port=\"$port\">{{ $port->getShortLabel() }}</x-port-link>', ['port' => $nac->port]);",
      "142:         $item['device_id'] = Blade::render('<x-device-link :device=\"$device\"/>', ['device' => $nac->device]);",
      "",
      "---------------"
    ],
    "app/Http/Controllers/Table/PortStpController.php||app/Http/Controllers/Table/PortStpController.php": [
      "File: app/Http/Controllers/Table/PortStpController.php -> app/Http/Controllers/Table/PortStpController.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "28: use App\\Facades\\DeviceCache;",
      "29: use App\\Models\\PortStp;",
      "30: use App\\Models\\Stp;",
      "31: use LibreNMS\\Util\\Mac;",
      "34: class PortStpController extends TableController",
      "35: {",
      "",
      "[Removed Lines]",
      "32: use LibreNMS\\Util\\Url;",
      "",
      "[Added Lines]",
      "31: use Illuminate\\Support\\Facades\\Blade;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "88:         $drMac = Mac::parse($stpPort->designatedRoot);",
      "89:         $dbMac = Mac::parse($stpPort->designatedBridge);",
      "91:         return [",
      "93:             'vlan' => $stpPort->vlan ?: 1,",
      "94:             'priority' => $stpPort->priority,",
      "95:             'state' => $stpPort->state,",
      "",
      "[Removed Lines]",
      "92:             'port_id' => Url::portLink($stpPort->port, $stpPort->port->getShortLabel()) . '<br />' . $stpPort->port->getDescription(),",
      "",
      "[Added Lines]",
      "91:         $dr = DeviceCache::get(Stp::where('bridgeAddress', $stpPort->designatedRoot)->value('device_id'));",
      "92:         $db = DeviceCache::get(Stp::where('bridgeAddress', $stpPort->designatedBridge)->value('device_id'));",
      "95:             'port_id' => Blade::render('<x-port-link :port=\"$port\">{{ $port->getShortLabel() }}</x-port-link><br /> {{ $port->getDescription() }}', ['port' => $stpPort->port]),",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "97:             'pathCost' => $stpPort->pathCost,",
      "98:             'designatedRoot' => $drMac->readable(),",
      "99:             'designatedRoot_vendor' => $drMac->vendor(),",
      "101:             'designatedCost' => $stpPort->designatedCost,",
      "102:             'designatedBridge' => $dbMac->readable(),",
      "103:             'designatedBridge_vendor' => $dbMac->vendor(),",
      "105:             'designatedPort' => $stpPort->designatedPort,",
      "106:             'forwardTransitions' => $stpPort->forwardTransitions,",
      "107:         ];",
      "",
      "[Removed Lines]",
      "100:             'designatedRoot_device' => Url::deviceLink(DeviceCache::get(Stp::where('bridgeAddress', $stpPort->designatedRoot)->value('device_id'))),",
      "104:             'designatedBridge_device' => Url::deviceLink(DeviceCache::get(Stp::where('bridgeAddress', $stpPort->designatedBridge)->value('device_id'))),",
      "",
      "[Added Lines]",
      "103:             'designatedRoot_device' => Blade::render('<x-device-link :device=\"$device\"/>', ['device' => $dr]),",
      "107:             'designatedBridge_device' => Blade::render('<x-device-link :device=\"$device\"/>', ['device' => $db]),",
      "",
      "---------------"
    ],
    "app/Http/Controllers/Table/PortsController.php||app/Http/Controllers/Table/PortsController.php": [
      "File: app/Http/Controllers/Table/PortsController.php -> app/Http/Controllers/Table/PortsController.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "28: use App\\Models\\Port;",
      "29: use Illuminate\\Database\\Eloquent\\Builder;",
      "30: use Illuminate\\Support\\Arr;",
      "31: use Illuminate\\Support\\Facades\\DB;",
      "32: use LibreNMS\\Util\\Number;",
      "33: use LibreNMS\\Util\\Rewrite;",
      "36: class PortsController extends TableController",
      "37: {",
      "",
      "[Removed Lines]",
      "34: use LibreNMS\\Util\\Url;",
      "",
      "[Added Lines]",
      "31: use Illuminate\\Support\\Facades\\Blade;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "154:         return [",
      "155:             'status' => $status,",
      "158:             'secondsIfLastChange' => ceil($port->device?->uptime - ($port->ifLastChange / 100)),",
      "159:             'ifConnectorPresent' => ($port->ifConnectorPresent == 'true') ? 'yes' : 'no',",
      "160:             'ifSpeed' => $port->ifSpeed,",
      "",
      "[Removed Lines]",
      "156:             'device' => Url::deviceLink($port->device),",
      "157:             'port' => Url::portLink($port),",
      "",
      "[Added Lines]",
      "156:             'device' => Blade::render('<x-device-link :device=\"$device\" />', ['device' => $port->device]),",
      "157:             'port' => Blade::render('<x-port-link :port=\"$port\"/>', ['port' => $port]),",
      "",
      "---------------"
    ],
    "app/Http/Controllers/Table/RoutesTablesController.php||app/Http/Controllers/Table/RoutesTablesController.php": [
      "File: app/Http/Controllers/Table/RoutesTablesController.php -> app/Http/Controllers/Table/RoutesTablesController.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "29: use App\\Models\\Route;",
      "30: use Illuminate\\Database\\Eloquent\\Builder;",
      "31: use Illuminate\\Http\\Request;",
      "32: use LibreNMS\\Util\\IP;",
      "33: use LibreNMS\\Util\\Url;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "32: use Illuminate\\Support\\Facades\\Blade;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "187:         $item['inetCidrRouteIfIndex'] = $route_entry->inetCidrRouteIfIndex == 0 ? 'Undefined' : 'IfIndex ' . $route_entry->inetCidrRouteIfIndex;",
      "188:         if ($port = $route_entry->port()->first()) {",
      "190:         }",
      "192:         try {",
      "",
      "[Removed Lines]",
      "189:             $item['inetCidrRouteIfIndex'] = Url::portLink($port, htmlspecialchars($port->getShortLabel()));",
      "",
      "[Added Lines]",
      "190:             $item['inetCidrRouteIfIndex'] = Blade::render('<x-port-link :port=\"$port\">{{ $port->getShortLabel() }}</x-port-link>', ['port' => $port]);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "198:         $device = Device::findByIp($route_entry->inetCidrRouteNextHop);",
      "199:         if ($device) {",
      "200:             if ($device->device_id == $route_entry->device_id || in_array($route_entry->inetCidrRouteNextHop, ['127.0.0.1', '::1'])) {",
      "202:             } else {",
      "204:             }",
      "205:         }",
      "",
      "[Removed Lines]",
      "201:                 $item['inetCidrRouteNextHop'] = Url::deviceLink($device, 'localhost');",
      "203:                 $item['inetCidrRouteNextHop'] = $item['inetCidrRouteNextHop'] . '<br>(' . Url::deviceLink($device) . ')';",
      "",
      "[Added Lines]",
      "202:                 $item['inetCidrRouteNextHop'] = Blade::render('<x-device-link :device=\"$device\">localhost</x-device-link>', ['device' => $device]);",
      "204:                 $item['inetCidrRouteNextHop'] = $item['inetCidrRouteNextHop'] . '<br>(' . Blade::render('<x-device-link :device=\"$device\"/>', ['device' => $device]) . ')';",
      "",
      "---------------"
    ],
    "app/Http/Controllers/Table/SyslogController.php||app/Http/Controllers/Table/SyslogController.php": [
      "File: app/Http/Controllers/Table/SyslogController.php -> app/Http/Controllers/Table/SyslogController.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "26: namespace App\\Http\\Controllers\\Table;",
      "28: use App\\Models\\Syslog;",
      "29: use LibreNMS\\Enum\\SyslogSeverity;",
      "31: class SyslogController extends TableController",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "29: use Illuminate\\Support\\Facades\\Blade;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "97:     public function formatItem($syslog)",
      "98:     {",
      "101:         return [",
      "102:             'label' => $this->setLabel($syslog),",
      "103:             'timestamp' => $syslog->timestamp,",
      "104:             'level' => htmlentities($syslog->level),",
      "106:             'program' => htmlentities($syslog->program),",
      "107:             'msg' => htmlentities($syslog->msg),",
      "108:             'priority' => htmlentities($syslog->priority),",
      "",
      "[Removed Lines]",
      "99:         $device = $syslog->device;",
      "105:             'device_id' => $device ? \\LibreNMS\\Util\\Url::deviceLink($device, $device->shortDisplayName()) : '',",
      "",
      "[Added Lines]",
      "104:             'device_id' => Blade::render('<x-device-link :device=\"$device\"/>', ['device' => $syslog->device]),",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "18f08dcbedd5aa198de5b144ed0a27b92d1cffb1",
      "candidate_info": {
        "commit_hash": "18f08dcbedd5aa198de5b144ed0a27b92d1cffb1",
        "repo": "librenms/librenms",
        "commit_url": "https://github.com/librenms/librenms/commit/18f08dcbedd5aa198de5b144ed0a27b92d1cffb1",
        "files": [
          "app/Http/Controllers/Table/PortStpController.php",
          "resources/views/device/tabs/stp.blade.php"
        ],
        "message": "Stop STP page from doing lookups on blanks (#17301)\n\nCo-authored-by: Neil Lathwood <gh+n@laf.io>",
        "before_after_code_files": [
          "app/Http/Controllers/Table/PortStpController.php||app/Http/Controllers/Table/PortStpController.php",
          "resources/views/device/tabs/stp.blade.php||resources/views/device/tabs/stp.blade.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "app/Http/Controllers/Table/PortStpController.php||app/Http/Controllers/Table/PortStpController.php"
          ],
          "candidate": [
            "app/Http/Controllers/Table/PortStpController.php||app/Http/Controllers/Table/PortStpController.php"
          ]
        }
      },
      "candidate_diff": {
        "app/Http/Controllers/Table/PortStpController.php||app/Http/Controllers/Table/PortStpController.php": [
          "File: app/Http/Controllers/Table/PortStpController.php -> app/Http/Controllers/Table/PortStpController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "88:         $drMac = Mac::parse($stpPort->designatedRoot);",
          "89:         $dbMac = Mac::parse($stpPort->designatedBridge);",
          "94:         return [",
          "95:             'port_id' => Blade::render('<x-port-link :port=\"$port\">{{ $port->getShortLabel() }}</x-port-link><br /> {{ $port->getDescription() }}', ['port' => $stpPort->port]),",
          "",
          "[Removed Lines]",
          "91:         $dr = DeviceCache::get(Stp::where('bridgeAddress', $stpPort->designatedRoot)->value('device_id'));",
          "92:         $db = DeviceCache::get(Stp::where('bridgeAddress', $stpPort->designatedBridge)->value('device_id'));",
          "",
          "[Added Lines]",
          "91:         $dr = DeviceCache::get(Stp::where('bridgeAddress', $stpPort->designatedRoot)->whereNot('bridgeAddress', '000000000000')->value('device_id'));",
          "92:         $db = DeviceCache::get(Stp::where('bridgeAddress', $stpPort->designatedBridge)->whereNot('bridgeAddress', '')->value('device_id'));",
          "",
          "---------------"
        ],
        "resources/views/device/tabs/stp.blade.php||resources/views/device/tabs/stp.blade.php": [
          "File: resources/views/device/tabs/stp.blade.php -> resources/views/device/tabs/stp.blade.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:                     <td>{{ trans('stp.designated_root') }}</td>",
          "43:                     <td>",
          "44:                         {{ \\LibreNMS\\Util\\Mac::parse($instance['designatedRoot'])->readable() }}",
          "46:                             ({!! $url !!})",
          "47:                         @elseif($drVendor = \\LibreNMS\\Util\\Mac::parse($instance['designatedRoot'])->vendor())",
          "48:                             ({{ $drVendor }})",
          "",
          "[Removed Lines]",
          "45:                         @if($url = \\LibreNMS\\Util\\Url::deviceLink(\\App\\Facades\\DeviceCache::get(\\App\\Models\\Stp::where('bridgeAddress', $instance['designatedRoot'])->value('device_id'))))",
          "",
          "[Added Lines]",
          "45:                         @if($url = \\LibreNMS\\Util\\Url::deviceLink(\\App\\Facades\\DeviceCache::get(\\App\\Models\\Stp::where('bridgeAddress', $instance['designatedRoot'])->whereNot('bridgeAddress', '')->value('device_id'))))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9ca67c3ac7f6b70660296f9ef1c1027ec5bdce61",
      "candidate_info": {
        "commit_hash": "9ca67c3ac7f6b70660296f9ef1c1027ec5bdce61",
        "repo": "librenms/librenms",
        "commit_url": "https://github.com/librenms/librenms/commit/9ca67c3ac7f6b70660296f9ef1c1027ec5bdce61",
        "files": [
          "app/Http/Controllers/Table/RoutesTablesController.php",
          "includes/html/pages/device/routing/routes.inc.php"
        ],
        "message": "Fix routes display (#16898)\n\n* Fix routes display\nremove bad table formatter\n\n* Fix extra whitespace not sure how a newline causes it, but trim it away",
        "before_after_code_files": [
          "app/Http/Controllers/Table/RoutesTablesController.php||app/Http/Controllers/Table/RoutesTablesController.php",
          "includes/html/pages/device/routing/routes.inc.php||includes/html/pages/device/routing/routes.inc.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "app/Http/Controllers/Table/RoutesTablesController.php||app/Http/Controllers/Table/RoutesTablesController.php"
          ],
          "candidate": [
            "app/Http/Controllers/Table/RoutesTablesController.php||app/Http/Controllers/Table/RoutesTablesController.php"
          ]
        }
      },
      "candidate_diff": {
        "app/Http/Controllers/Table/RoutesTablesController.php||app/Http/Controllers/Table/RoutesTablesController.php": [
          "File: app/Http/Controllers/Table/RoutesTablesController.php -> app/Http/Controllers/Table/RoutesTablesController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "172:     public function formatItem($route_entry)",
          "173:     {",
          "181:         try {",
          "182:             $obj_inetCidrRouteDest = IP::parse($route_entry->inetCidrRouteDest);",
          "",
          "[Removed Lines]",
          "174:         $item['updated_at'] = $route_entry->updated_at ? $route_entry->updated_at->diffForHumans() : $route_entry->updated_at;",
          "175:         $item['created_at'] = $route_entry->created_at ? $route_entry->created_at->toDateTimeString() : $route_entry->created_at;",
          "176:         $item['inetCidrRouteIfIndex'] = $route_entry->inetCidrRouteIfIndex == 0 ? 'Undefined' : $route_entry->inetCidrRouteIfIndex;",
          "177:         $item['inetCidrRouteMetric1'] = $route_entry->inetCidrRouteMetric1;",
          "178:         $item['inetCidrRoutePfxLen'] = $route_entry->inetCidrRoutePfxLen;",
          "179:         $item['inetCidrRouteDestType'] = $route_entry->inetCidrRouteDestType;",
          "",
          "[Added Lines]",
          "174:         $item = [",
          "175:             'updated_at' => $route_entry->updated_at ? $route_entry->updated_at->diffForHumans() : $route_entry->updated_at,",
          "176:             'created_at' => $route_entry->created_at ? $route_entry->created_at->toDateTimeString() : $route_entry->created_at,",
          "177:             'inetCidrRouteIfIndex' => $route_entry->inetCidrRouteIfIndex == 0 ? 'Undefined' : $route_entry->inetCidrRouteIfIndex,",
          "178:             'inetCidrRouteMetric1' => $route_entry->inetCidrRouteMetric1,",
          "179:             'inetCidrRoutePfxLen' => $route_entry->inetCidrRoutePfxLen,",
          "180:             'inetCidrRouteDestType' => $route_entry->inetCidrRouteDestType,",
          "181:         ];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "201:             if ($device->device_id == $route_entry->device_id || in_array($route_entry->inetCidrRouteNextHop, ['127.0.0.1', '::1'])) {",
          "202:                 $item['inetCidrRouteNextHop'] = Blade::render('<x-device-link :device=\"$device\">localhost</x-device-link>', ['device' => $device]);",
          "203:             } else {",
          "205:             }",
          "206:         }",
          "",
          "[Removed Lines]",
          "204:                 $item['inetCidrRouteNextHop'] = $item['inetCidrRouteNextHop'] . '<br>(' . Blade::render('<x-device-link :device=\"$device\"/>', ['device' => $device]) . ')';",
          "",
          "[Added Lines]",
          "206:                 $item['inetCidrRouteNextHop'] = $item['inetCidrRouteNextHop'] . '<br>(' . rtrim(Blade::render('<x-device-link :device=\"$device\"/>', ['device' => $device])) . ')';",
          "",
          "---------------"
        ],
        "includes/html/pages/device/routing/routes.inc.php||includes/html/pages/device/routing/routes.inc.php": [
          "File: includes/html/pages/device/routing/routes.inc.php -> includes/html/pages/device/routing/routes.inc.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: <table id=\"routes\" class=\"table table-condensed table-hover table-striped\">",
          "7:     <thead>",
          "8:         <tr>",
          "10:             <th data-column-id=\"inetCidrRouteDestType\" data-width=\"70px\">Proto</th>",
          "12:             <th data-column-id=\"inetCidrRoutePfxLen\" data-width=\"80px\">Mask</th>",
          "15:             <th data-column-id=\"inetCidrRouteMetric1\" data-width=\"85px\">Metric</th>",
          "16:             <th data-column-id=\"inetCidrRouteType\" data-width=\"85px\">Type</th>",
          "17:             <th data-column-id=\"inetCidrRouteProto\" data-width=\"85px\">Proto</th>",
          "20:         </tr>",
          "21:     </thead>",
          "22: </table>",
          "",
          "[Removed Lines]",
          "9:             <th data-column-id=\"context_name\" data-width=\"125px\" data-formatter=\"tooltip\">VRF</th>",
          "11:             <th data-column-id=\"inetCidrRouteDest\" data-formatter=\"tooltip\">Destination</th>",
          "13:             <th data-column-id=\"inetCidrRouteNextHop\" data-formatter=\"tooltip\">Next hop</th>",
          "14:             <th data-column-id=\"inetCidrRouteIfIndex\" data-formatter=\"tooltip\">Interface</th>",
          "18:             <th data-column-id=\"created_at\" data-width=\"165px\" data-formatter=\"tooltip\">First seen</th>",
          "19:             <th data-column-id=\"updated_at\" data-width=\"165px\" data-formatter=\"tooltip\">Last seen</th>",
          "",
          "[Added Lines]",
          "10:             <th data-column-id=\"context_name\" data-width=\"125px\">VRF</th>",
          "12:             <th data-column-id=\"inetCidrRouteDest\">Destination</th>",
          "14:             <th data-column-id=\"inetCidrRouteNextHop\">Next hop</th>",
          "15:             <th data-column-id=\"inetCidrRouteIfIndex\">Interface</th>",
          "19:             <th data-column-id=\"created_at\" data-width=\"165px\">First seen</th>",
          "20:             <th data-column-id=\"updated_at\" data-width=\"165px\">Last seen</th>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46:             showProtocols: list_showProtocols",
          "47:         };",
          "48:     },",
          "58:     url: \"ajax/table/routes\"",
          "59: });",
          "",
          "[Removed Lines]",
          "49:     formatters: {",
          "50:         \"tooltip\": function (column, row) {",
          "51:                 var value = row[column.id];",
          "52:                 if (value.includes('onmouseover=')) {",
          "53:                     return value;",
          "54:                 }",
          "55:                 return \"<span title=\\'\" + value + \"\\' data-toggle=\\'tooltip\\'>\" + value + \"</span>\";",
          "56:             },",
          "57:     },",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}