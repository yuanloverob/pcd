{
  "cve_id": "CVE-2024-28199",
  "cve_desc": "phlex is an open source framework for building object-oriented views in Ruby. There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data. This was due to improper case-sensitivity in the code that was meant to prevent these attacks. If you render an `<a>` tag with an `href` attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user. If you splat user-provided attributes when rendering any HTML tag, malicious event attributes could be included in the output, executing JavaScript when the events are triggered by another user. Patches are available on RubyGems for all 1.x minor versions. Users are advised to upgrade. Users unable to upgrade should consider configuring a content security policy that does not allow `unsafe-inline`.",
  "repo": "phlex-ruby/phlex",
  "patch_hash": "aa50c604cdee1d0ce7ef068a4c66cbd5d43f96a1",
  "patch_info": {
    "commit_hash": "aa50c604cdee1d0ce7ef068a4c66cbd5d43f96a1",
    "repo": "phlex-ruby/phlex",
    "commit_url": "https://github.com/phlex-ruby/phlex/commit/aa50c604cdee1d0ce7ef068a4c66cbd5d43f96a1",
    "files": [
      "lib/phlex/sgml.rb",
      "test/phlex/view/naughty_business.rb"
    ],
    "message": "Fix improper case-sensitivity\n\nSee https://github.com/phlex-ruby/phlex/security/advisories/GHSA-242p-4v39-2v8g",
    "before_after_code_files": [
      "lib/phlex/sgml.rb||lib/phlex/sgml.rb",
      "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb"
    ]
  },
  "patch_diff": {
    "lib/phlex/sgml.rb||lib/phlex/sgml.rb": [
      "File: lib/phlex/sgml.rb -> lib/phlex/sgml.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "393:     attributes = process_attributes(**attributes)",
      "394:    end",
      "404:    buffer = +\"\"",
      "405:    __build_attributes__(attributes, buffer: buffer)",
      "",
      "[Removed Lines]",
      "396:    if attributes[:href]&.start_with?(/\\s*javascript:/)",
      "397:     attributes.delete(:href)",
      "398:    end",
      "400:    if attributes[\"href\"]&.start_with?(/\\s*javascript:/)",
      "401:     attributes.delete(\"href\")",
      "402:    end",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "418:      else raise ArgumentError, \"Attribute keys should be Strings or Symbols.\"",
      "419:     end",
      "421:     # Detect unsafe attribute names. Attribute names are considered unsafe if they match an event attribute or include unsafe characters.",
      "423:      raise ArgumentError, \"Unsafe attribute name detected: #{k}.\"",
      "424:     end",
      "",
      "[Removed Lines]",
      "422:     if HTML::EVENT_ATTRIBUTES[name] || name.match?(/[<>&\"']/)",
      "",
      "[Added Lines]",
      "413:     lower_name = name.downcase",
      "414:     next if lower_name == \"href\" && v.start_with?(/\\s*javascript:/i)",
      "417:     if HTML::EVENT_ATTRIBUTES[lower_name] || name.match?(/[<>&\"']/)",
      "",
      "---------------"
    ],
    "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb": [
      "File: test/phlex/view/naughty_business.rb -> test/phlex/view/naughty_business.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "3: describe Phlex::HTML do",
      "4:  extend ViewHelper",
      "6:  with \"naughty text\" do",
      "7:   view do",
      "8:    def view_template",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6:  with \"naughty javascript links\" do",
      "7:   view do",
      "8:    def template",
      "9:     a(href: \"javascript:alert(1)\") { \"a\" }",
      "10:     a(href: \"JAVASCRIPT:alert(1)\") { \"b\" }",
      "11:     a(href: :\"JAVASCRIPT:alert(1)\") { \"c\" }",
      "12:     a(HREF: \"javascript:alert(1)\") { \"d\" }",
      "13:    end",
      "14:   end",
      "16:   it \"removes the href attributes\" do",
      "17:    expect(output).to be == \"<a>a</a><a>b</a><a>c</a><a>d</a>\"",
      "18:   end",
      "19:  end",
      "21:  with \"naughty uppercase event tag\" do",
      "22:   view do",
      "23:    def template",
      "24:     button ONCLICK: \"ALERT(1)\" do",
      "25:      \"naughty button\"",
      "26:     end",
      "27:    end",
      "28:   end",
      "30:   it \"raises\" do",
      "31:    expect { output }.to raise_exception ArgumentError,",
      "32:     message: be == \"Unsafe attribute name detected: ONCLICK.\"",
      "33:   end",
      "34:  end",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "76bca3d18cdffbbd493a085acdac3e8425502554",
      "candidate_info": {
        "commit_hash": "76bca3d18cdffbbd493a085acdac3e8425502554",
        "repo": "phlex-ruby/phlex",
        "commit_url": "https://github.com/phlex-ruby/phlex/commit/76bca3d18cdffbbd493a085acdac3e8425502554",
        "files": [
          "lib/phlex/helpers.rb",
          "lib/phlex/sgml.rb"
        ],
        "message": "Improve YARD docs",
        "before_after_code_files": [
          "lib/phlex/helpers.rb||lib/phlex/helpers.rb",
          "lib/phlex/sgml.rb||lib/phlex/sgml.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/phlex/sgml.rb||lib/phlex/sgml.rb"
          ],
          "candidate": [
            "lib/phlex/sgml.rb||lib/phlex/sgml.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/phlex/helpers.rb||lib/phlex/helpers.rb": [
          "File: lib/phlex/helpers.rb -> lib/phlex/helpers.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: end",
          "7: module Phlex::Helpers",
          "8:  # @return [String]",
          "10:   conditional_tokens.each do |condition, token|",
          "11:    truthy = case condition",
          "12:     when Symbol then send(condition)",
          "",
          "[Removed Lines]",
          "9:  private def tokens(*tokens, **conditional_tokens)",
          "",
          "[Added Lines]",
          "8:  private",
          "10:  # Tokens",
          "12:  # @example With Proc conditions",
          "13:  #  tokens(",
          "14:  #   -> { true } => \"a\",",
          "15:  #   -> { false } => \"b\"",
          "16:  #  )",
          "17:  # @example With method conditions",
          "18:  #  tokens(",
          "19:  #   active?: \"active\"",
          "20:  #  )",
          "21:  # @example With else condition",
          "22:  #  tokens(",
          "23:  #   active?: { then: \"active\", else: \"inactive\" }",
          "24:  #  )",
          "25:  def tokens(*tokens, **conditional_tokens)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "33:  end",
          "35:  # @api private",
          "37:   case token",
          "38:    when nil then nil",
          "39:    when String then tokens << token",
          "",
          "[Removed Lines]",
          "36:  private def __append_token__(tokens, token)",
          "",
          "[Added Lines]",
          "52:  def __append_token__(tokens, token)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "44:   end",
          "45:  end",
          "47:  # @return [Hash]",
          "49:   tokens = self.tokens(*tokens, **conditional_tokens)",
          "51:   if tokens.empty?",
          "",
          "[Removed Lines]",
          "48:  private def classes(*tokens, **conditional_tokens)",
          "",
          "[Added Lines]",
          "63:  # Like {#tokens} but returns a {Hash} where the tokens are the value for `:class`.",
          "65:  def classes(*tokens, **conditional_tokens)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "56:  end",
          "58:  # @return [Hash]",
          "60:   args.each_with_object({}) do |object, result|",
          "61:    result.merge!(object) do |_key, old, new|",
          "62:     case new",
          "",
          "[Removed Lines]",
          "59:  private def mix(*args)",
          "",
          "[Added Lines]",
          "76:  def mix(*args)",
          "",
          "---------------"
        ],
        "lib/phlex/sgml.rb||lib/phlex/sgml.rb": [
          "File: lib/phlex/sgml.rb -> lib/phlex/sgml.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "71:    yield",
          "72:   end",
          "81:   # @api private",
          "82:   def await(task)",
          "83:    if task.is_a?(Concurrent::IVar)",
          "",
          "[Removed Lines]",
          "74:   # @api private",
          "75:   private def flush",
          "76:    target = @_context.target",
          "77:    @_buffer << target.dup",
          "78:    target.clear",
          "79:   end",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "133:    buffer << context.target unless parent",
          "134:   end",
          "171:   # Output text content. The text will be HTML-escaped.",
          "172:   # @return [nil]",
          "173:   def plain(content)",
          "",
          "[Removed Lines]",
          "136:   # Render another component, block or enumerable",
          "137:   # @return [nil]",
          "138:   # @overload render(component, &block)",
          "139:   #  Renders the component.",
          "140:   #  @param component [Phlex::SGML]",
          "141:   # @overload render(component_class, &block)",
          "142:   #  Renders a new instance of the component class. This is useful for component classes that take no arguments.",
          "143:   #  @param component_class [Class<Phlex::SGML>]",
          "144:   # @overload render(proc)",
          "145:   #  Renders the proc with {#yield_content}.",
          "146:   #  @param proc [Proc]",
          "147:   # @overload render(enumerable)",
          "148:   #  Renders each item of the enumerable.",
          "149:   #  @param enumerable [Enumerable]",
          "150:   #  @example",
          "151:   #   render @items",
          "152:   private def render(renderable, &block)",
          "153:    case renderable",
          "154:    when Phlex::SGML",
          "155:     renderable.call(@_buffer, context: @_context, view_context: @_view_context, parent: self, &block)",
          "156:    when Class",
          "157:     if renderable < Phlex::SGML",
          "158:      renderable.new.call(@_buffer, context: @_context, view_context: @_view_context, parent: self, &block)",
          "159:     end",
          "160:    when Enumerable",
          "161:     renderable.each { |r| render(r, &block) }",
          "162:    when Proc",
          "163:     yield_content(&renderable)",
          "164:    else",
          "165:     raise ArgumentError, \"You can't render a #{renderable}.\"",
          "166:    end",
          "168:    nil",
          "169:   end",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "236:    @_context.with_target(+\"\") { yield_content(&block) }",
          "237:   end",
          "239:   # Like {#capture} but the output is vanished into a BlackHole buffer.",
          "240:   # Because the BlackHole does nothing with the output, this should be faster.",
          "241:   # @return [nil]",
          "242:   # @api private",
          "244:    return unless block_given?",
          "246:    @_context.with_target(BlackHole) { yield(*args) }",
          "",
          "[Removed Lines]",
          "243:   private def __vanish__(*args)",
          "",
          "[Added Lines]",
          "197:   private",
          "199:   # @api private",
          "200:   def flush",
          "201:    target = @_context.target",
          "202:    @_buffer << target.dup",
          "203:    target.clear",
          "204:   end",
          "206:   # Render another component, block or enumerable",
          "207:   # @return [nil]",
          "208:   # @overload render(component, &block)",
          "209:   #  Renders the component.",
          "210:   #  @param component [Phlex::SGML]",
          "211:   # @overload render(component_class, &block)",
          "212:   #  Renders a new instance of the component class. This is useful for component classes that take no arguments.",
          "213:   #  @param component_class [Class<Phlex::SGML>]",
          "214:   # @overload render(proc)",
          "215:   #  Renders the proc with {#yield_content}.",
          "216:   #  @param proc [Proc]",
          "217:   # @overload render(enumerable)",
          "218:   #  Renders each item of the enumerable.",
          "219:   #  @param enumerable [Enumerable]",
          "220:   #  @example",
          "221:   #   render @items",
          "222:   def render(renderable, &block)",
          "223:    case renderable",
          "224:    when Phlex::SGML",
          "225:     renderable.call(@_buffer, context: @_context, view_context: @_view_context, parent: self, &block)",
          "226:    when Class",
          "227:     if renderable < Phlex::SGML",
          "228:      renderable.new.call(@_buffer, context: @_context, view_context: @_view_context, parent: self, &block)",
          "229:     end",
          "230:    when Enumerable",
          "231:     renderable.each { |r| render(r, &block) }",
          "232:    when Proc",
          "233:     yield_content(&renderable)",
          "234:    else",
          "235:     raise ArgumentError, \"You can't render a #{renderable}.\"",
          "236:    end",
          "238:    nil",
          "239:   end",
          "245:   def __vanish__(*args)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "251:   # Determines if the component should render. By default, it returns <code>true</code>.",
          "252:   # @abstract Override to define your own predicate to prevent rendering.",
          "253:   # @return [Boolean]",
          "255:    true",
          "256:   end",
          "258:   # Format the object for output",
          "259:   # @return [String]",
          "261:    case object",
          "262:    when Float",
          "263:     object.to_s",
          "",
          "[Removed Lines]",
          "254:   private def render?",
          "260:   private def format_object(object)",
          "",
          "[Added Lines]",
          "256:   def render?",
          "262:   def format_object(object)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "267:   # @abstract Override this method to hook in around a template render. You can do things before and after calling <code>super</code> to render the template. You should always call <code>super</code> so that callbacks can be added at different layers of the inheritance tree.",
          "268:   # @return [nil]",
          "270:    before_template",
          "271:    yield",
          "272:    after_template",
          "",
          "[Removed Lines]",
          "269:   private def around_template",
          "",
          "[Added Lines]",
          "271:   def around_template",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "277:   # @abstract Override this method to hook in right before a template is rendered. Please remember to call <code>super</code> so that callbacks can be added at different layers of the inheritance tree.",
          "278:   # @return [nil]",
          "280:    nil",
          "281:   end",
          "283:   # @abstract Override this method to hook in right after a template is rendered. Please remember to call <code>super</code> so that callbacks can be added at different layers of the inheritance tree.",
          "284:   # @return [nil]",
          "286:    nil",
          "287:   end",
          "289:   # Yields the block and checks if it buffered anything. If nothing was buffered, the return value is treated as text. The text is always HTML-escaped.",
          "290:   # @yieldparam component [self]",
          "291:   # @return [nil]",
          "293:    return unless block_given?",
          "295:    target = @_context.target",
          "",
          "[Removed Lines]",
          "279:   private def before_template",
          "285:   private def after_template",
          "292:   private def yield_content",
          "",
          "[Added Lines]",
          "281:   def before_template",
          "287:   def after_template",
          "294:   def yield_content",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "304:   # Same as {#yield_content} but yields no arguments.",
          "305:   # @yield Yields the block with no arguments.",
          "307:    return unless block_given?",
          "309:    target = @_context.target",
          "",
          "[Removed Lines]",
          "306:   private def yield_content_with_no_args",
          "",
          "[Added Lines]",
          "308:   def yield_content_with_no_args",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "318:   # Same as {#yield_content} but accepts a splat of arguments to yield. This is slightly slower than {#yield_content}.",
          "319:   # @yield [*args] Yields the given arguments.",
          "320:   # @return [nil]",
          "322:    return unless block_given?",
          "324:    target = @_context.target",
          "",
          "[Removed Lines]",
          "321:   private def yield_content_with_args(*args)",
          "",
          "[Added Lines]",
          "323:   def yield_content_with_args(*args)",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "331:   end",
          "333:   # @api private",
          "335:    __final_attributes__(**attributes).tap do |buffer|",
          "336:     Phlex::ATTRIBUTE_CACHE[respond_to?(:process_attributes) ? (attributes.hash + self.class.hash) : attributes.hash] = buffer.freeze",
          "337:    end",
          "338:   end",
          "340:   # @api private",
          "342:    if respond_to?(:process_attributes)",
          "343:     attributes = process_attributes(**attributes)",
          "344:    end",
          "",
          "[Removed Lines]",
          "334:   private def __attributes__(**attributes)",
          "341:   private def __final_attributes__(**attributes)",
          "",
          "[Added Lines]",
          "336:   def __attributes__(**attributes)",
          "343:   def __final_attributes__(**attributes)",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "358:   end",
          "360:   # @api private",
          "362:    attributes.each do |k, v|",
          "363:     next unless v",
          "",
          "[Removed Lines]",
          "361:   private def __build_attributes__(attributes, buffer:)",
          "",
          "[Added Lines]",
          "363:   def __build_attributes__(attributes, buffer:)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fd18a8087be9d95765617c9a03a350df3d2fe3e3",
      "candidate_info": {
        "commit_hash": "fd18a8087be9d95765617c9a03a350df3d2fe3e3",
        "repo": "phlex-ruby/phlex",
        "commit_url": "https://github.com/phlex-ruby/phlex/commit/fd18a8087be9d95765617c9a03a350df3d2fe3e3",
        "files": [
          ".ruby-version",
          "lib/phlex/sgml.rb",
          "lib/phlex/version.rb",
          "test/phlex/view/naughty_business.rb"
        ],
        "message": "Bump to 1.6.2\n\nSee https://github.com/phlex-ruby/phlex/security/advisories/GHSA-242p-4v39-2v8g",
        "before_after_code_files": [
          "lib/phlex/sgml.rb||lib/phlex/sgml.rb",
          "lib/phlex/version.rb||lib/phlex/version.rb",
          "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "lib/phlex/sgml.rb||lib/phlex/sgml.rb",
            "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb"
          ],
          "candidate": [
            "lib/phlex/sgml.rb||lib/phlex/sgml.rb",
            "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/phlex/sgml.rb||lib/phlex/sgml.rb": [
          "File: lib/phlex/sgml.rb -> lib/phlex/sgml.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "256:     attributes = process_attributes(**attributes)",
          "257:    end",
          "267:    buffer = +\"\"",
          "268:    __build_attributes__(attributes, buffer: buffer)",
          "",
          "[Removed Lines]",
          "259:    if attributes[:href]&.start_with?(/\\s*javascript:/)",
          "260:     attributes.delete(:href)",
          "261:    end",
          "263:    if attributes[\"href\"]&.start_with?(/\\s*javascript:/)",
          "264:     attributes.delete(\"href\")",
          "265:    end",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "281:      else k.to_s",
          "282:     end",
          "284:     # Detect unsafe attribute names. Attribute names are considered unsafe if they match an event attribute or include unsafe characters.",
          "286:      raise ArgumentError, \"Unsafe attribute name detected: #{k}.\"",
          "287:     end",
          "",
          "[Removed Lines]",
          "285:     if HTML::EVENT_ATTRIBUTES[name] || name.match?(/[<>&\"']/)",
          "",
          "[Added Lines]",
          "276:     lower_name = name.downcase",
          "277:     next if lower_name == \"href\" && v.start_with?(/\\s*javascript:/i)",
          "280:     if HTML::EVENT_ATTRIBUTES[lower_name] || name.match?(/[<>&\"']/)",
          "",
          "---------------"
        ],
        "lib/phlex/version.rb||lib/phlex/version.rb": [
          "File: lib/phlex/version.rb -> lib/phlex/version.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # frozen_string_literal: true",
          "3: module Phlex",
          "5: end",
          "",
          "[Removed Lines]",
          "4:  VERSION = \"1.5.1\"",
          "",
          "[Added Lines]",
          "4:  VERSION = \"1.5.2\"",
          "",
          "---------------"
        ],
        "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb": [
          "File: test/phlex/view/naughty_business.rb -> test/phlex/view/naughty_business.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: describe Phlex::HTML do",
          "4:  extend ViewHelper",
          "6:  with \"naughty text\" do",
          "7:   view do",
          "8:    def template",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6:  with \"naughty javascript links\" do",
          "7:   view do",
          "8:    def template",
          "9:     a(href: \"javascript:alert(1)\") { \"a\" }",
          "10:     a(href: \"JAVASCRIPT:alert(1)\") { \"b\" }",
          "11:     a(href: :\"JAVASCRIPT:alert(1)\") { \"c\" }",
          "12:     a(HREF: \"javascript:alert(1)\") { \"d\" }",
          "13:    end",
          "14:   end",
          "16:   it \"removes the href attributes\" do",
          "17:    expect(output).to be == \"<a>a</a><a>b</a><a>c</a><a>d</a>\"",
          "18:   end",
          "19:  end",
          "21:  with \"naughty uppercase event tag\" do",
          "22:   view do",
          "23:    def template",
          "24:     button ONCLICK: \"ALERT(1)\" do",
          "25:      \"naughty button\"",
          "26:     end",
          "27:    end",
          "28:   end",
          "30:   it \"raises\" do",
          "31:    expect { output }.to raise_exception ArgumentError,",
          "32:     message: be == \"Unsafe attribute name detected: ONCLICK.\"",
          "33:   end",
          "34:  end",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cc606f4a2ddae7b3a96912e5287812c2e243df5a",
      "candidate_info": {
        "commit_hash": "cc606f4a2ddae7b3a96912e5287812c2e243df5a",
        "repo": "phlex-ruby/phlex",
        "commit_url": "https://github.com/phlex-ruby/phlex/commit/cc606f4a2ddae7b3a96912e5287812c2e243df5a",
        "files": [
          "lib/phlex/sgml.rb",
          "lib/phlex/version.rb",
          "test/phlex/view/naughty_business.rb"
        ],
        "message": "Bump to 1.8.2\n\nSee https://github.com/phlex-ruby/phlex/security/advisories/GHSA-242p-4v39-2v8g",
        "before_after_code_files": [
          "lib/phlex/sgml.rb||lib/phlex/sgml.rb",
          "lib/phlex/version.rb||lib/phlex/version.rb",
          "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "lib/phlex/sgml.rb||lib/phlex/sgml.rb",
            "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb"
          ],
          "candidate": [
            "lib/phlex/sgml.rb||lib/phlex/sgml.rb",
            "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/phlex/sgml.rb||lib/phlex/sgml.rb": [
          "File: lib/phlex/sgml.rb -> lib/phlex/sgml.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "364:     attributes = process_attributes(**attributes)",
          "365:    end",
          "375:    buffer = +\"\"",
          "376:    __build_attributes__(attributes, buffer: buffer)",
          "",
          "[Removed Lines]",
          "367:    if attributes[:href]&.start_with?(/\\s*javascript:/)",
          "368:     attributes.delete(:href)",
          "369:    end",
          "371:    if attributes[\"href\"]&.start_with?(/\\s*javascript:/)",
          "372:     attributes.delete(\"href\")",
          "373:    end",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "389:      else raise ArgumentError, \"Attribute keys should be Strings or Symbols.\"",
          "390:     end",
          "392:     # Detect unsafe attribute names. Attribute names are considered unsafe if they match an event attribute or include unsafe characters.",
          "394:      raise ArgumentError, \"Unsafe attribute name detected: #{k}.\"",
          "395:     end",
          "",
          "[Removed Lines]",
          "393:     if HTML::EVENT_ATTRIBUTES[name] || name.match?(/[<>&\"']/)",
          "",
          "[Added Lines]",
          "384:     lower_name = name.downcase",
          "385:     next if lower_name == \"href\" && v.start_with?(/\\s*javascript:/i)",
          "388:     if HTML::EVENT_ATTRIBUTES[lower_name] || name.match?(/[<>&\"']/)",
          "",
          "---------------"
        ],
        "lib/phlex/version.rb||lib/phlex/version.rb": [
          "File: lib/phlex/version.rb -> lib/phlex/version.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # frozen_string_literal: true",
          "3: module Phlex",
          "5: end",
          "",
          "[Removed Lines]",
          "4:  VERSION = \"1.8.1\"",
          "",
          "[Added Lines]",
          "4:  VERSION = \"1.8.2\"",
          "",
          "---------------"
        ],
        "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb": [
          "File: test/phlex/view/naughty_business.rb -> test/phlex/view/naughty_business.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: describe Phlex::HTML do",
          "4:  extend ViewHelper",
          "6:  with \"naughty text\" do",
          "7:   view do",
          "8:    def template",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6:  with \"naughty javascript links\" do",
          "7:   view do",
          "8:    def template",
          "9:     a(href: \"javascript:alert(1)\") { \"a\" }",
          "10:     a(href: \"JAVASCRIPT:alert(1)\") { \"b\" }",
          "11:     a(href: :\"JAVASCRIPT:alert(1)\") { \"c\" }",
          "12:     a(HREF: \"javascript:alert(1)\") { \"d\" }",
          "13:    end",
          "14:   end",
          "16:   it \"removes the href attributes\" do",
          "17:    expect(output).to be == \"<a>a</a><a>b</a><a>c</a><a>d</a>\"",
          "18:   end",
          "19:  end",
          "21:  with \"naughty uppercase event tag\" do",
          "22:   view do",
          "23:    def template",
          "24:     button ONCLICK: \"ALERT(1)\" do",
          "25:      \"naughty button\"",
          "26:     end",
          "27:    end",
          "28:   end",
          "30:   it \"raises\" do",
          "31:    expect { output }.to raise_exception ArgumentError,",
          "32:     message: be == \"Unsafe attribute name detected: ONCLICK.\"",
          "33:   end",
          "34:  end",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "775cc75fbdd0c0dab05ce042b706472c3697161a",
      "candidate_info": {
        "commit_hash": "775cc75fbdd0c0dab05ce042b706472c3697161a",
        "repo": "phlex-ruby/phlex",
        "commit_url": "https://github.com/phlex-ruby/phlex/commit/775cc75fbdd0c0dab05ce042b706472c3697161a",
        "files": [
          "Gemfile",
          "lib/phlex/sgml.rb",
          "lib/phlex/version.rb",
          "test/phlex/view/naughty_business.rb"
        ],
        "message": "Bump to 1.9.1\n\nSee https://github.com/phlex-ruby/phlex/security/advisories/GHSA-242p-4v39-2v8g",
        "before_after_code_files": [
          "lib/phlex/sgml.rb||lib/phlex/sgml.rb",
          "lib/phlex/version.rb||lib/phlex/version.rb",
          "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "lib/phlex/sgml.rb||lib/phlex/sgml.rb",
            "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb"
          ],
          "candidate": [
            "lib/phlex/sgml.rb||lib/phlex/sgml.rb",
            "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/phlex/sgml.rb||lib/phlex/sgml.rb": [
          "File: lib/phlex/sgml.rb -> lib/phlex/sgml.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "366:     attributes = process_attributes(**attributes)",
          "367:    end",
          "377:    buffer = +\"\"",
          "378:    __build_attributes__(attributes, buffer: buffer)",
          "",
          "[Removed Lines]",
          "369:    if attributes[:href]&.start_with?(/\\s*javascript:/)",
          "370:     attributes.delete(:href)",
          "371:    end",
          "373:    if attributes[\"href\"]&.start_with?(/\\s*javascript:/)",
          "374:     attributes.delete(\"href\")",
          "375:    end",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "391:      else raise ArgumentError, \"Attribute keys should be Strings or Symbols.\"",
          "392:     end",
          "394:     # Detect unsafe attribute names. Attribute names are considered unsafe if they match an event attribute or include unsafe characters.",
          "396:      raise ArgumentError, \"Unsafe attribute name detected: #{k}.\"",
          "397:     end",
          "",
          "[Removed Lines]",
          "395:     if HTML::EVENT_ATTRIBUTES[name] || name.match?(/[<>&\"']/)",
          "",
          "[Added Lines]",
          "386:     lower_name = name.downcase",
          "387:     next if lower_name == \"href\" && v.start_with?(/\\s*javascript:/i)",
          "390:     if HTML::EVENT_ATTRIBUTES[lower_name] || name.match?(/[<>&\"']/)",
          "",
          "---------------"
        ],
        "lib/phlex/version.rb||lib/phlex/version.rb": [
          "File: lib/phlex/version.rb -> lib/phlex/version.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # frozen_string_literal: true",
          "3: module Phlex",
          "5: end",
          "",
          "[Removed Lines]",
          "4:  VERSION = \"1.9.0\"",
          "",
          "[Added Lines]",
          "4:  VERSION = \"1.9.1\"",
          "",
          "---------------"
        ],
        "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb": [
          "File: test/phlex/view/naughty_business.rb -> test/phlex/view/naughty_business.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: describe Phlex::HTML do",
          "4:  extend ViewHelper",
          "6:  with \"naughty text\" do",
          "7:   view do",
          "8:    def template",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6:  with \"naughty javascript links\" do",
          "7:   view do",
          "8:    def template",
          "9:     a(href: \"javascript:alert(1)\") { \"a\" }",
          "10:     a(href: \"JAVASCRIPT:alert(1)\") { \"b\" }",
          "11:     a(href: :\"JAVASCRIPT:alert(1)\") { \"c\" }",
          "12:     a(HREF: \"javascript:alert(1)\") { \"d\" }",
          "13:    end",
          "14:   end",
          "16:   it \"removes the href attributes\" do",
          "17:    expect(output).to be == \"<a>a</a><a>b</a><a>c</a><a>d</a>\"",
          "18:   end",
          "19:  end",
          "21:  with \"naughty uppercase event tag\" do",
          "22:   view do",
          "23:    def template",
          "24:     button ONCLICK: \"ALERT(1)\" do",
          "25:      \"naughty button\"",
          "26:     end",
          "27:    end",
          "28:   end",
          "30:   it \"raises\" do",
          "31:    expect { output }.to raise_exception ArgumentError,",
          "32:     message: be == \"Unsafe attribute name detected: ONCLICK.\"",
          "33:   end",
          "34:  end",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "470e26680bed5a8dcd25223394023755b5ae859f",
      "candidate_info": {
        "commit_hash": "470e26680bed5a8dcd25223394023755b5ae859f",
        "repo": "phlex-ruby/phlex",
        "commit_url": "https://github.com/phlex-ruby/phlex/commit/470e26680bed5a8dcd25223394023755b5ae859f",
        "files": [
          ".ruby-version",
          "lib/phlex/sgml.rb",
          "lib/phlex/version.rb",
          "test/phlex/view/naughty_business.rb"
        ],
        "message": "Bump to 1.6.2\n\nSee https://github.com/phlex-ruby/phlex/security/advisories/GHSA-242p-4v39-2v8g",
        "before_after_code_files": [
          "lib/phlex/sgml.rb||lib/phlex/sgml.rb",
          "lib/phlex/version.rb||lib/phlex/version.rb",
          "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "lib/phlex/sgml.rb||lib/phlex/sgml.rb",
            "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb"
          ],
          "candidate": [
            "lib/phlex/sgml.rb||lib/phlex/sgml.rb",
            "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/phlex/sgml.rb||lib/phlex/sgml.rb": [
          "File: lib/phlex/sgml.rb -> lib/phlex/sgml.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "259:     attributes = process_attributes(**attributes)",
          "260:    end",
          "270:    buffer = +\"\"",
          "271:    __build_attributes__(attributes, buffer: buffer)",
          "",
          "[Removed Lines]",
          "262:    if attributes[:href]&.start_with?(/\\s*javascript:/)",
          "263:     attributes.delete(:href)",
          "264:    end",
          "266:    if attributes[\"href\"]&.start_with?(/\\s*javascript:/)",
          "267:     attributes.delete(\"href\")",
          "268:    end",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "284:      else k.to_s",
          "285:     end",
          "287:     # Detect unsafe attribute names. Attribute names are considered unsafe if they match an event attribute or include unsafe characters.",
          "289:      raise ArgumentError, \"Unsafe attribute name detected: #{k}.\"",
          "290:     end",
          "",
          "[Removed Lines]",
          "288:     if HTML::EVENT_ATTRIBUTES[name] || name.match?(/[<>&\"']/)",
          "",
          "[Added Lines]",
          "279:     lower_name = name.downcase",
          "280:     next if lower_name == \"href\" && v.start_with?(/\\s*javascript:/i)",
          "283:     if HTML::EVENT_ATTRIBUTES[lower_name] || name.match?(/[<>&\"']/)",
          "",
          "---------------"
        ],
        "lib/phlex/version.rb||lib/phlex/version.rb": [
          "File: lib/phlex/version.rb -> lib/phlex/version.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # frozen_string_literal: true",
          "3: module Phlex",
          "5: end",
          "",
          "[Removed Lines]",
          "4:  VERSION = \"1.6.1\"",
          "",
          "[Added Lines]",
          "4:  VERSION = \"1.6.2\"",
          "",
          "---------------"
        ],
        "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb": [
          "File: test/phlex/view/naughty_business.rb -> test/phlex/view/naughty_business.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: describe Phlex::HTML do",
          "4:  extend ViewHelper",
          "6:  with \"naughty text\" do",
          "7:   view do",
          "8:    def template",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6:  with \"naughty javascript links\" do",
          "7:   view do",
          "8:    def template",
          "9:     a(href: \"javascript:alert(1)\") { \"a\" }",
          "10:     a(href: \"JAVASCRIPT:alert(1)\") { \"b\" }",
          "11:     a(href: :\"JAVASCRIPT:alert(1)\") { \"c\" }",
          "12:     a(HREF: \"javascript:alert(1)\") { \"d\" }",
          "13:    end",
          "14:   end",
          "16:   it \"removes the href attributes\" do",
          "17:    expect(output).to be == \"<a>a</a><a>b</a><a>c</a><a>d</a>\"",
          "18:   end",
          "19:  end",
          "21:  with \"naughty uppercase event tag\" do",
          "22:   view do",
          "23:    def template",
          "24:     button ONCLICK: \"ALERT(1)\" do",
          "25:      \"naughty button\"",
          "26:     end",
          "27:    end",
          "28:   end",
          "30:   it \"raises\" do",
          "31:    expect { output }.to raise_exception ArgumentError,",
          "32:     message: be == \"Unsafe attribute name detected: ONCLICK.\"",
          "33:   end",
          "34:  end",
          "",
          "---------------"
        ]
      }
    }
  ]
}