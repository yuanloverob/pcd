{
  "cve_id": "CVE-2024-28088",
  "cve_desc": "LangChain through 0.1.10 allows ../ directory traversal by an actor who is able to control the final part of the path parameter in a load_chain call. This bypasses the intended behavior of loading configurations only from the hwchase17/langchain-hub GitHub repository. The outcome can be disclosure of an API key for a large language model online service, or remote code execution. (A patch is available as of release 0.1.29 of langchain-core.)",
  "repo": "langchain-ai/langchain",
  "patch_hash": "e1924b3e93d513ca950c72f8e80e1c133749fba5",
  "patch_info": {
    "commit_hash": "e1924b3e93d513ca950c72f8e80e1c133749fba5",
    "repo": "langchain-ai/langchain",
    "commit_url": "https://github.com/langchain-ai/langchain/commit/e1924b3e93d513ca950c72f8e80e1c133749fba5",
    "files": [
      "libs/core/langchain_core/utils/loading.py",
      "libs/core/poetry.lock",
      "libs/core/pyproject.toml",
      "libs/core/tests/unit_tests/utils/test_loading.py"
    ],
    "message": "core[patch]: deprecate hwchase17/langchain-hub, address path traversal (#18600)\n\nDeprecates the old langchain-hub repository. Does *not* deprecate the\nnew https://smith.langchain.com/hub\n\n@PinkDraconian has correctly raised that in the event someone is loading\nunsanitized user input into the `try_load_from_hub` function, they have\nthe ability to load files from other locations in github than the\nhwchase17/langchain-hub repository.\n\nThis PR adds some more path checking to that function and deprecates the\nfunctionality in favor of the hub built into LangSmith.",
    "before_after_code_files": [
      "libs/core/langchain_core/utils/loading.py||libs/core/langchain_core/utils/loading.py",
      "libs/core/poetry.lock||libs/core/poetry.lock",
      "libs/community/tests/unit_tests/utilities/test_loading.py||libs/core/tests/unit_tests/utils/test_loading.py"
    ]
  },
  "patch_diff": {
    "libs/core/langchain_core/utils/loading.py||libs/core/langchain_core/utils/loading.py": [
      "File: libs/core/langchain_core/utils/loading.py -> libs/core/langchain_core/utils/loading.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "10: import requests",
      "12: DEFAULT_REF = os.environ.get(\"LANGCHAIN_HUB_DEFAULT_REF\", \"master\")",
      "13: URL_BASE = os.environ.get(",
      "14:     \"LANGCHAIN_HUB_URL_BASE\",",
      "16: )",
      "17: HUB_PATH_RE = re.compile(r\"lc(?P<ref>@[^:]+)?://(?P<path>.*)\")",
      "19: T = TypeVar(\"T\")",
      "22: def try_load_from_hub(",
      "23:     path: Union[str, Path],",
      "24:     loader: Callable[[str], T],",
      "",
      "[Removed Lines]",
      "15:     \"https://raw.githubusercontent.com/hwchase17/langchain-hub/{ref}/\",",
      "",
      "[Added Lines]",
      "12: from langchain_core._api.deprecation import deprecated",
      "15: LANGCHAINHUB_REPO = \"https://raw.githubusercontent.com/hwchase17/langchain-hub/\"",
      "18:     LANGCHAINHUB_REPO + \"{ref}/\",",
      "25: @deprecated(",
      "26:     since=\"0.1.30\",",
      "27:     removal=\"0.2\",",
      "28:     message=(",
      "29:         \"Using the hwchase17/langchain-hub \"",
      "30:         \"repo for prompts is deprecated. Please use \"",
      "31:         \"https://smith.langchain.com/hub instead.\"",
      "32:     ),",
      "33: )",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "43:     # Instead, use PurePosixPath to ensure that forward slashes are used as the",
      "44:     # path separator, regardless of the operating system.",
      "45:     full_url = urljoin(URL_BASE.format(ref=ref), PurePosixPath(remote_path).__str__())",
      "47:     r = requests.get(full_url, timeout=5)",
      "48:     if r.status_code != 200:",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "58:     if not full_url.startswith(LANGCHAINHUB_REPO):",
      "59:         raise ValueError(f\"Invalid hub path: {path}\")",
      "",
      "---------------"
    ],
    "libs/core/poetry.lock||libs/core/poetry.lock": [
      "File: libs/core/poetry.lock -> libs/core/poetry.lock",
      "--- Hunk 1 ---",
      "[Context before]",
      "2214: socks = [\"PySocks (>=1.5.6,!=1.5.7)\"]",
      "2215: use-chardet-on-py3 = [\"chardet (>=3.0.2,<6)\"]",
      "2217: [[package]]",
      "2218: name = \"rfc3339-validator\"",
      "2219: version = \"0.1.4\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2217: [[package]]",
      "2218: name = \"responses\"",
      "2219: version = \"0.25.0\"",
      "2220: description = \"A utility library for mocking out the `requests` Python library.\"",
      "2221: optional = false",
      "2222: python-versions = \">=3.8\"",
      "2223: files = [",
      "2224:     {file = \"responses-0.25.0-py3-none-any.whl\", hash = \"sha256:2f0b9c2b6437db4b528619a77e5d565e4ec2a9532162ac1a131a83529db7be1a\"},",
      "2225:     {file = \"responses-0.25.0.tar.gz\", hash = \"sha256:01ae6a02b4f34e39bffceb0fc6786b67a25eae919c6368d05eabc8d9576c2a66\"},",
      "2226: ]",
      "2228: [package.dependencies]",
      "2229: pyyaml = \"*\"",
      "2230: requests = \">=2.30.0,<3.0\"",
      "2231: urllib3 = \">=1.25.10,<3.0\"",
      "2233: [package.extras]",
      "2234: tests = [\"coverage (>=6.0.0)\", \"flake8\", \"mypy\", \"pytest (>=7.0.0)\", \"pytest-asyncio\", \"pytest-cov\", \"pytest-httpserver\", \"tomli\", \"tomli-w\", \"types-PyYAML\", \"types-requests\"]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2796: [metadata]",
      "2797: lock-version = \"2.0\"",
      "2798: python-versions = \">=3.8.1,<4.0\"",
      "",
      "[Removed Lines]",
      "2799: content-hash = \"8fe07123109b62d7210542d8aff20df6df00819e5b0f36bc12f02206c5161c43\"",
      "",
      "[Added Lines]",
      "2818: content-hash = \"de97591989f083b89c7a7bc6dabba87e29e13fddc812450d5196d564b2c02ce1\"",
      "",
      "---------------"
    ],
    "libs/community/tests/unit_tests/utilities/test_loading.py||libs/core/tests/unit_tests/utils/test_loading.py": [
      "File: libs/community/tests/unit_tests/utilities/test_loading.py -> libs/core/tests/unit_tests/utils/test_loading.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "94:     with pytest.raises(ValueError, match=re.compile(\"Could not find file at .*\")):",
      "95:         try_load_from_hub(f\"lc://{path}\", loader, \"chains\", {\"json\"})",
      "96:     loader.assert_not_called()",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "100: def test_path_traversal() -> None:",
      "101:     \"\"\"Test that a path traversal attack is prevented.\"\"\"",
      "102:     path = \"lc://chains/../../../../../../../../../it.json\"",
      "103:     loader = Mock()",
      "105:     with pytest.raises(ValueError):",
      "106:         try_load_from_hub(path, loader, \"chains\", {\"json\"})",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b481454000bb359b97c1ce78305079345b18a102",
      "candidate_info": {
        "commit_hash": "b481454000bb359b97c1ce78305079345b18a102",
        "repo": "langchain-ai/langchain",
        "commit_url": "https://github.com/langchain-ai/langchain/commit/b481454000bb359b97c1ce78305079345b18a102",
        "files": [
          "libs/core/poetry.lock",
          "libs/core/pyproject.toml"
        ],
        "message": "fix by bumping pydantic",
        "before_after_code_files": [
          "libs/core/poetry.lock||libs/core/poetry.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libs/core/poetry.lock||libs/core/poetry.lock"
          ],
          "candidate": [
            "libs/core/poetry.lock||libs/core/poetry.lock"
          ]
        }
      },
      "candidate_diff": {
        "libs/core/poetry.lock||libs/core/poetry.lock": [
          "File: libs/core/poetry.lock -> libs/core/poetry.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "1857:     {file = \"pycparser-2.22.tar.gz\", hash = \"sha256:491c8be9c040f5390f5bf44a5b07752bd07f56edf992381b05c701439eec10f6\"},",
          "1858: ]",
          "1879: [[package]]",
          "1880: name = \"pydantic\"",
          "1881: version = \"2.7.4\"",
          "",
          "[Removed Lines]",
          "1860: [[package]]",
          "1861: name = \"pydantic\"",
          "1862: version = \"2.7.3\"",
          "1863: description = \"Data validation using Python type hints\"",
          "1864: optional = false",
          "1865: python-versions = \">=3.8\"",
          "1866: files = [",
          "1867:     {file = \"pydantic-2.7.3-py3-none-any.whl\", hash = \"sha256:ea91b002777bf643bb20dd717c028ec43216b24a6001a280f83877fd2655d0b4\"},",
          "1868:     {file = \"pydantic-2.7.3.tar.gz\", hash = \"sha256:c46c76a40bb1296728d7a8b99aa73dd70a48c3510111ff290034f860c99c419e\"},",
          "1869: ]",
          "1871: [package.dependencies]",
          "1872: annotated-types = \">=0.4.0\"",
          "1873: pydantic-core = \"2.18.4\"",
          "1874: typing-extensions = \">=4.6.1\"",
          "1876: [package.extras]",
          "1877: email = [\"email-validator (>=2.0.0)\"]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3022: [metadata]",
          "3023: lock-version = \"2.0\"",
          "3024: python-versions = \">=3.8.1,<4.0\"",
          "",
          "[Removed Lines]",
          "3025: content-hash = \"d99a238dc01826c5e145bde53ec69ddb1072eb3ea92785df4a70671244027c4e\"",
          "",
          "[Added Lines]",
          "3006: content-hash = \"03fa30ee08b035d61e4e14ff5455a2497caf23fe0ca3b8f9386c5437351d311e\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "764e020a8eee4043614bc43ec67f9166bae055d9",
      "candidate_info": {
        "commit_hash": "764e020a8eee4043614bc43ec67f9166bae055d9",
        "repo": "langchain-ai/langchain",
        "commit_url": "https://github.com/langchain-ai/langchain/commit/764e020a8eee4043614bc43ec67f9166bae055d9",
        "files": [
          "libs/core/poetry.lock",
          "libs/core/pyproject.toml",
          "libs/core/tests/unit_tests/runnables/__snapshots__/test_runnable.ambr"
        ],
        "message": "core: bump langsmith sdk version, run ci",
        "before_after_code_files": [
          "libs/core/poetry.lock||libs/core/poetry.lock",
          "libs/core/tests/unit_tests/runnables/__snapshots__/test_runnable.ambr||libs/core/tests/unit_tests/runnables/__snapshots__/test_runnable.ambr"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libs/core/poetry.lock||libs/core/poetry.lock"
          ],
          "candidate": [
            "libs/core/poetry.lock||libs/core/poetry.lock"
          ]
        }
      },
      "candidate_diff": {
        "libs/core/poetry.lock||libs/core/poetry.lock": [
          "File: libs/core/poetry.lock -> libs/core/poetry.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "1208: [[package]]",
          "1209: name = \"langchain-text-splitters\"",
          "1211: description = \"LangChain text splitting utilities\"",
          "1212: optional = false",
          "1213: python-versions = \">=3.9,<4.0\"",
          "",
          "[Removed Lines]",
          "1210: version = \"0.3.0\"",
          "",
          "[Added Lines]",
          "1210: version = \"0.3.1\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1215: develop = true",
          "1217: [package.dependencies]",
          "1220: [package.source]",
          "1221: type = \"directory\"",
          "",
          "[Removed Lines]",
          "1218: langchain-core = \"^0.3.0\"",
          "",
          "[Added Lines]",
          "1218: langchain-core = \"^0.3.13\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1224: [[package]]",
          "1225: name = \"langsmith\"",
          "1227: description = \"Client library to connect to the LangSmith LLM Tracing and Evaluation Platform.\"",
          "1228: optional = false",
          "1229: python-versions = \"<4.0,>=3.8.1\"",
          "1230: files = [",
          "1233: ]",
          "1235: [package.dependencies]",
          "",
          "[Removed Lines]",
          "1226: version = \"0.1.137\"",
          "1231:     {file = \"langsmith-0.1.137-py3-none-any.whl\", hash = \"sha256:4256d5c61133749890f7b5c88321dbb133ce0f440c621ea28e76513285859b81\"},",
          "1232:     {file = \"langsmith-0.1.137.tar.gz\", hash = \"sha256:56cdfcc6c74cb20a3f437d5bd144feb5bf93f54c5a2918d1e568cbd084a372d4\"},",
          "",
          "[Added Lines]",
          "1226: version = \"0.1.139rc1\"",
          "1231:     {file = \"langsmith-0.1.139rc1-py3-none-any.whl\", hash = \"sha256:539144338fbe4a32d0cc11e69f967b53fe567cb698f7b9b66abb97048489e923\"},",
          "1232:     {file = \"langsmith-0.1.139rc1.tar.gz\", hash = \"sha256:efada0a96f335446128606ecc4fa42bba8b15dfbd84f16d1ae00b95ba560d5d2\"},",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2976: [metadata]",
          "2977: lock-version = \"2.0\"",
          "2978: python-versions = \">=3.9,<4.0\"",
          "",
          "[Removed Lines]",
          "2979: content-hash = \"3c680384ebb62b873c70201979927665c8fcce32dbf1df7457d12e83fba15ac2\"",
          "",
          "[Added Lines]",
          "2979: content-hash = \"249cdc5215b1d6cb1337a6d91ae748a3321673a8fe4444ee19d667e9f058a12f\"",
          "",
          "---------------"
        ],
        "libs/core/tests/unit_tests/runnables/__snapshots__/test_runnable.ambr||libs/core/tests/unit_tests/runnables/__snapshots__/test_runnable.ambr": [
          "File: libs/core/tests/unit_tests/runnables/__snapshots__/test_runnable.ambr -> libs/core/tests/unit_tests/runnables/__snapshots__/test_runnable.ambr",
          "--- Hunk 1 ---",
          "[Context before]",
          "480: # ---",
          "481: # name: test_combining_sequences.3",
          "482:   list([",
          "484:   ])",
          "485: # ---",
          "486: # name: test_configurable_fields[schema2]",
          "",
          "[Removed Lines]",
          "483:     RunTree(id=UUID('00000000-0000-4000-8000-000000000000'), name='RunnableSequence', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='chain', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={}, error=None, serialized=None, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'question': 'What is your name?'}, outputs={'output': ['baz', 'qux']}, reference_example_id=None, parent_run_id=None, tags=[], attachments={}, child_runs=[RunTree(id=UUID('00000000-0000-4000-8000-000000000001'), name='ChatPromptTemplate', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='prompt', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={}, error=None, serialized={'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'ChatPromptTemplate'], 'kwargs': {'input_variables': ['question'], 'messages': [{'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'SystemMessagePromptTemplate'], 'kwargs': {'prompt': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'prompt', 'PromptTemplate'], 'kwargs': {'input_variables': [], 'template': 'You are a nice assistant.', 'template_format': 'f-string'}, 'name': 'PromptTemplate'}}}, {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'HumanMessagePromptTemplate'], 'kwargs': {'prompt': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'prompt', 'PromptTemplate'], 'kwargs': {'input_variables': ['question'], 'template': '{question}', 'template_format': 'f-string'}, 'name': 'PromptTemplate'}}}]}, 'name': 'ChatPromptTemplate'}, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'question': 'What is your name?'}, outputs={'output': ChatPromptValue(messages=[SystemMessage(content='You are a nice assistant.', additional_kwargs={}, response_metadata={}), HumanMessage(content='What is your name?', additional_kwargs={}, response_metadata={})])}, reference_example_id=None, parent_run_id=UUID('00000000-0000-4000-8000-000000000000'), tags=['seq:step:1'], attachments={}, child_runs=[], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000.20230101T000000000000Z00000000-0000-4000-8000-000000000001', trace_id=UUID('00000000-0000-4000-8000-000000000000')), RunTree(id=UUID('00000000-0000-4000-8000-000000000002'), name='FakeListChatModel', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='llm', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={'invocation_params': {'responses': ['foo, bar'], '_type': 'fake-list-chat-model', 'stop': None}, 'options': {'stop': None}, 'batch_size': 1, 'metadata': {'ls_provider': 'fakelistchatmodel', 'ls_model_type': 'chat'}}, error=None, serialized={'lc': 1, 'type': 'not_implemented', 'id': ['langchain_core', 'language_models', 'fake_chat_models', 'FakeListChatModel'], 'repr': \"FakeListChatModel(responses=['foo, bar'])\", 'name': 'FakeListChatModel'}, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'prompts': ['System: You are a nice assistant.\\nHuman: What is your name?']}, outputs={'generations': [[{'text': 'foo, bar', 'generation_info': None, 'type': 'ChatGeneration', 'message': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'schema', 'messages', 'AIMessage'], 'kwargs': {'content': 'foo, bar', 'type': 'ai', 'id': 'run-00000000-0000-4000-8000-000000000002-0', 'tool_calls': [], 'invalid_tool_calls': []}}}]], 'llm_output': None, 'run': None, 'type': 'LLMResult'}, reference_example_id=None, parent_run_id=UUID('00000000-0000-4000-8000-000000000000'), tags=['seq:step:2'], attachments={}, child_runs=[], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000.20230101T000000000000Z00000000-0000-4000-8000-000000000002', trace_id=UUID('00000000-0000-4000-8000-000000000000')), RunTree(id=UUID('00000000-0000-4000-8000-000000000003'), name='CommaSeparatedListOutputParser', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='parser', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={}, error=None, serialized=None, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'input': AIMessage(content='foo, bar', additional_kwargs={}, response_metadata={}, id='00000000-0000-4000-8000-000000000004')}, outputs={'output': ['foo', 'bar']}, reference_example_id=None, parent_run_id=UUID('00000000-0000-4000-8000-000000000000'), tags=['seq:step:3'], attachments={}, child_runs=[], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000.20230101T000000000000Z00000000-0000-4000-8000-000000000003', trace_id=UUID('00000000-0000-4000-8000-000000000000')), RunTree(id=UUID('00000000-0000-4000-8000-000000000005'), name='RunnableLambda', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='chain', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={}, error=None, serialized=None, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'input': ['foo', 'bar']}, outputs={'question': 'foobar'}, reference_example_id=None, parent_run_id=UUID('00000000-0000-4000-8000-000000000000'), tags=['seq:step:4'], attachments={}, child_runs=[], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000.20230101T000000000000Z00000000-0000-4000-8000-000000000005', trace_id=UUID('00000000-0000-4000-8000-000000000000')), RunTree(id=UUID('00000000-0000-4000-8000-000000000006'), name='ChatPromptTemplate', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='prompt', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={}, error=None, serialized={'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'ChatPromptTemplate'], 'kwargs': {'input_variables': ['question'], 'messages': [{'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'SystemMessagePromptTemplate'], 'kwargs': {'prompt': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'prompt', 'PromptTemplate'], 'kwargs': {'input_variables': [], 'template': 'You are a nicer assistant.', 'template_format': 'f-string'}, 'name': 'PromptTemplate'}}}, {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'HumanMessagePromptTemplate'], 'kwargs': {'prompt': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'prompt', 'PromptTemplate'], 'kwargs': {'input_variables': ['question'], 'template': '{question}', 'template_format': 'f-string'}, 'name': 'PromptTemplate'}}}]}, 'name': 'ChatPromptTemplate'}, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'question': 'foobar'}, outputs={'output': ChatPromptValue(messages=[SystemMessage(content='You are a nicer assistant.', additional_kwargs={}, response_metadata={}), HumanMessage(content='foobar', additional_kwargs={}, response_metadata={})])}, reference_example_id=None, parent_run_id=UUID('00000000-0000-4000-8000-000000000000'), tags=['seq:step:5'], attachments={}, child_runs=[], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000.20230101T000000000000Z00000000-0000-4000-8000-000000000006', trace_id=UUID('00000000-0000-4000-8000-000000000000')), RunTree(id=UUID('00000000-0000-4000-8000-000000000007'), name='FakeListChatModel', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='llm', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={'invocation_params': {'responses': ['baz, qux'], '_type': 'fake-list-chat-model', 'stop': None}, 'options': {'stop': None}, 'batch_size': 1, 'metadata': {'ls_provider': 'fakelistchatmodel', 'ls_model_type': 'chat'}}, error=None, serialized={'lc': 1, 'type': 'not_implemented', 'id': ['langchain_core', 'language_models', 'fake_chat_models', 'FakeListChatModel'], 'repr': \"FakeListChatModel(responses=['baz, qux'])\", 'name': 'FakeListChatModel'}, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'prompts': ['System: You are a nicer assistant.\\nHuman: foobar']}, outputs={'generations': [[{'text': 'baz, qux', 'generation_info': None, 'type': 'ChatGeneration', 'message': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'schema', 'messages', 'AIMessage'], 'kwargs': {'content': 'baz, qux', 'type': 'ai', 'id': 'run-00000000-0000-4000-8000-000000000006-0', 'tool_calls': [], 'invalid_tool_calls': []}}}]], 'llm_output': None, 'run': None, 'type': 'LLMResult'}, reference_example_id=None, parent_run_id=UUID('00000000-0000-4000-8000-000000000000'), tags=['seq:step:6'], attachments={}, child_runs=[], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000.20230101T000000000000Z00000000-0000-4000-8000-000000000007', trace_id=UUID('00000000-0000-4000-8000-000000000000')), RunTree(id=UUID('00000000-0000-4000-8000-000000000008'), name='CommaSeparatedListOutputParser', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='parser', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={}, error=None, serialized=None, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'input': AIMessage(content='baz, qux', additional_kwargs={}, response_metadata={}, id='00000000-0000-4000-8000-000000000009')}, outputs={'output': ['baz', 'qux']}, reference_example_id=None, parent_run_id=UUID('00000000-0000-4000-8000-000000000000'), tags=['seq:step:7'], attachments={}, child_runs=[], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000.20230101T000000000000Z00000000-0000-4000-8000-000000000008', trace_id=UUID('00000000-0000-4000-8000-000000000000'))], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000', trace_id=UUID('00000000-0000-4000-8000-000000000000')),",
          "",
          "[Added Lines]",
          "483:     RunTree(id=00000000-0000-4000-8000-000000000000, name='RunnableSequence', run_type='chain', dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000'),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1119: # ---",
          "1120: # name: test_prompt_with_chat_model.2",
          "1121:   list([",
          "1123:   ])",
          "1124: # ---",
          "1125: # name: test_prompt_with_chat_model_and_parser",
          "",
          "[Removed Lines]",
          "1122:     RunTree(id=UUID('00000000-0000-4000-8000-000000000000'), name='RunnableSequence', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='chain', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={}, error=None, serialized=None, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'question': 'What is your name?'}, outputs={'output': AIMessage(content='foo', additional_kwargs={}, response_metadata={}, id='00000000-0000-4000-8000-000000000003')}, reference_example_id=None, parent_run_id=None, tags=[], attachments={}, child_runs=[RunTree(id=UUID('00000000-0000-4000-8000-000000000001'), name='ChatPromptTemplate', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='prompt', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={}, error=None, serialized={'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'ChatPromptTemplate'], 'kwargs': {'input_variables': ['question'], 'messages': [{'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'SystemMessagePromptTemplate'], 'kwargs': {'prompt': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'prompt', 'PromptTemplate'], 'kwargs': {'input_variables': [], 'template': 'You are a nice assistant.', 'template_format': 'f-string'}, 'name': 'PromptTemplate'}}}, {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'HumanMessagePromptTemplate'], 'kwargs': {'prompt': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'prompt', 'PromptTemplate'], 'kwargs': {'input_variables': ['question'], 'template': '{question}', 'template_format': 'f-string'}, 'name': 'PromptTemplate'}}}]}, 'name': 'ChatPromptTemplate'}, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'question': 'What is your name?'}, outputs={'output': ChatPromptValue(messages=[SystemMessage(content='You are a nice assistant.', additional_kwargs={}, response_metadata={}), HumanMessage(content='What is your name?', additional_kwargs={}, response_metadata={})])}, reference_example_id=None, parent_run_id=UUID('00000000-0000-4000-8000-000000000000'), tags=['seq:step:1'], attachments={}, child_runs=[], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000.20230101T000000000000Z00000000-0000-4000-8000-000000000001', trace_id=UUID('00000000-0000-4000-8000-000000000000')), RunTree(id=UUID('00000000-0000-4000-8000-000000000002'), name='FakeListChatModel', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='llm', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={'invocation_params': {'responses': ['foo'], '_type': 'fake-list-chat-model', 'stop': None}, 'options': {'stop': None}, 'batch_size': 1, 'metadata': {'ls_provider': 'fakelistchatmodel', 'ls_model_type': 'chat'}}, error=None, serialized={'lc': 1, 'type': 'not_implemented', 'id': ['langchain_core', 'language_models', 'fake_chat_models', 'FakeListChatModel'], 'repr': \"FakeListChatModel(responses=['foo'])\", 'name': 'FakeListChatModel'}, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'prompts': ['System: You are a nice assistant.\\nHuman: What is your name?']}, outputs={'generations': [[{'text': 'foo', 'generation_info': None, 'type': 'ChatGeneration', 'message': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'schema', 'messages', 'AIMessage'], 'kwargs': {'content': 'foo', 'type': 'ai', 'id': 'run-00000000-0000-4000-8000-000000000002-0', 'tool_calls': [], 'invalid_tool_calls': []}}}]], 'llm_output': None, 'run': None, 'type': 'LLMResult'}, reference_example_id=None, parent_run_id=UUID('00000000-0000-4000-8000-000000000000'), tags=['seq:step:2'], attachments={}, child_runs=[], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000.20230101T000000000000Z00000000-0000-4000-8000-000000000002', trace_id=UUID('00000000-0000-4000-8000-000000000000'))], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000', trace_id=UUID('00000000-0000-4000-8000-000000000000')),",
          "",
          "[Added Lines]",
          "1122:     RunTree(id=00000000-0000-4000-8000-000000000000, name='RunnableSequence', run_type='chain', dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000'),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1243: # ---",
          "1244: # name: test_prompt_with_chat_model_and_parser.1",
          "1245:   list([",
          "1247:   ])",
          "1248: # ---",
          "1249: # name: test_prompt_with_chat_model_async",
          "",
          "[Removed Lines]",
          "1246:     RunTree(id=UUID('00000000-0000-4000-8000-000000000000'), name='RunnableSequence', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='chain', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={}, error=None, serialized=None, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'question': 'What is your name?'}, outputs={'output': ['foo', 'bar']}, reference_example_id=None, parent_run_id=None, tags=[], attachments={}, child_runs=[RunTree(id=UUID('00000000-0000-4000-8000-000000000001'), name='ChatPromptTemplate', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='prompt', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={}, error=None, serialized={'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'ChatPromptTemplate'], 'kwargs': {'input_variables': ['question'], 'messages': [{'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'SystemMessagePromptTemplate'], 'kwargs': {'prompt': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'prompt', 'PromptTemplate'], 'kwargs': {'input_variables': [], 'template': 'You are a nice assistant.', 'template_format': 'f-string'}, 'name': 'PromptTemplate'}}}, {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'HumanMessagePromptTemplate'], 'kwargs': {'prompt': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'prompt', 'PromptTemplate'], 'kwargs': {'input_variables': ['question'], 'template': '{question}', 'template_format': 'f-string'}, 'name': 'PromptTemplate'}}}]}, 'name': 'ChatPromptTemplate'}, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'question': 'What is your name?'}, outputs={'output': ChatPromptValue(messages=[SystemMessage(content='You are a nice assistant.', additional_kwargs={}, response_metadata={}), HumanMessage(content='What is your name?', additional_kwargs={}, response_metadata={})])}, reference_example_id=None, parent_run_id=UUID('00000000-0000-4000-8000-000000000000'), tags=['seq:step:1'], attachments={}, child_runs=[], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000.20230101T000000000000Z00000000-0000-4000-8000-000000000001', trace_id=UUID('00000000-0000-4000-8000-000000000000')), RunTree(id=UUID('00000000-0000-4000-8000-000000000002'), name='FakeListChatModel', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='llm', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={'invocation_params': {'responses': ['foo, bar'], '_type': 'fake-list-chat-model', 'stop': None}, 'options': {'stop': None}, 'batch_size': 1, 'metadata': {'ls_provider': 'fakelistchatmodel', 'ls_model_type': 'chat'}}, error=None, serialized={'lc': 1, 'type': 'not_implemented', 'id': ['langchain_core', 'language_models', 'fake_chat_models', 'FakeListChatModel'], 'repr': \"FakeListChatModel(responses=['foo, bar'])\", 'name': 'FakeListChatModel'}, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'prompts': ['System: You are a nice assistant.\\nHuman: What is your name?']}, outputs={'generations': [[{'text': 'foo, bar', 'generation_info': None, 'type': 'ChatGeneration', 'message': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'schema', 'messages', 'AIMessage'], 'kwargs': {'content': 'foo, bar', 'type': 'ai', 'id': 'run-00000000-0000-4000-8000-000000000002-0', 'tool_calls': [], 'invalid_tool_calls': []}}}]], 'llm_output': None, 'run': None, 'type': 'LLMResult'}, reference_example_id=None, parent_run_id=UUID('00000000-0000-4000-8000-000000000000'), tags=['seq:step:2'], attachments={}, child_runs=[], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000.20230101T000000000000Z00000000-0000-4000-8000-000000000002', trace_id=UUID('00000000-0000-4000-8000-000000000000')), RunTree(id=UUID('00000000-0000-4000-8000-000000000003'), name='CommaSeparatedListOutputParser', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='parser', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={}, error=None, serialized=None, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'input': AIMessage(content='foo, bar', additional_kwargs={}, response_metadata={}, id='00000000-0000-4000-8000-000000000004')}, outputs={'output': ['foo', 'bar']}, reference_example_id=None, parent_run_id=UUID('00000000-0000-4000-8000-000000000000'), tags=['seq:step:3'], attachments={}, child_runs=[], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000.20230101T000000000000Z00000000-0000-4000-8000-000000000003', trace_id=UUID('00000000-0000-4000-8000-000000000000'))], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000', trace_id=UUID('00000000-0000-4000-8000-000000000000')),",
          "",
          "[Added Lines]",
          "1246:     RunTree(id=00000000-0000-4000-8000-000000000000, name='RunnableSequence', run_type='chain', dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000'),",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1359: # ---",
          "1360: # name: test_prompt_with_chat_model_async.2",
          "1361:   list([",
          "1363:   ])",
          "1364: # ---",
          "1365: # name: test_prompt_with_llm",
          "",
          "[Removed Lines]",
          "1362:     RunTree(id=UUID('00000000-0000-4000-8000-000000000000'), name='RunnableSequence', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='chain', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={}, error=None, serialized=None, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'question': 'What is your name?'}, outputs={'output': AIMessage(content='foo', additional_kwargs={}, response_metadata={}, id='00000000-0000-4000-8000-000000000003')}, reference_example_id=None, parent_run_id=None, tags=[], attachments={}, child_runs=[RunTree(id=UUID('00000000-0000-4000-8000-000000000001'), name='ChatPromptTemplate', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='prompt', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={}, error=None, serialized={'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'ChatPromptTemplate'], 'kwargs': {'input_variables': ['question'], 'messages': [{'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'SystemMessagePromptTemplate'], 'kwargs': {'prompt': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'prompt', 'PromptTemplate'], 'kwargs': {'input_variables': [], 'template': 'You are a nice assistant.', 'template_format': 'f-string'}, 'name': 'PromptTemplate'}}}, {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'HumanMessagePromptTemplate'], 'kwargs': {'prompt': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'prompt', 'PromptTemplate'], 'kwargs': {'input_variables': ['question'], 'template': '{question}', 'template_format': 'f-string'}, 'name': 'PromptTemplate'}}}]}, 'name': 'ChatPromptTemplate'}, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'question': 'What is your name?'}, outputs={'output': ChatPromptValue(messages=[SystemMessage(content='You are a nice assistant.', additional_kwargs={}, response_metadata={}), HumanMessage(content='What is your name?', additional_kwargs={}, response_metadata={})])}, reference_example_id=None, parent_run_id=UUID('00000000-0000-4000-8000-000000000000'), tags=['seq:step:1'], attachments={}, child_runs=[], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000.20230101T000000000000Z00000000-0000-4000-8000-000000000001', trace_id=UUID('00000000-0000-4000-8000-000000000000')), RunTree(id=UUID('00000000-0000-4000-8000-000000000002'), name='FakeListChatModel', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='llm', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={'invocation_params': {'responses': ['foo'], '_type': 'fake-list-chat-model', 'stop': None}, 'options': {'stop': None}, 'batch_size': 1, 'metadata': {'ls_provider': 'fakelistchatmodel', 'ls_model_type': 'chat'}}, error=None, serialized={'lc': 1, 'type': 'not_implemented', 'id': ['langchain_core', 'language_models', 'fake_chat_models', 'FakeListChatModel'], 'repr': \"FakeListChatModel(responses=['foo'])\", 'name': 'FakeListChatModel'}, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'prompts': ['System: You are a nice assistant.\\nHuman: What is your name?']}, outputs={'generations': [[{'text': 'foo', 'generation_info': None, 'type': 'ChatGeneration', 'message': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'schema', 'messages', 'AIMessage'], 'kwargs': {'content': 'foo', 'type': 'ai', 'id': 'run-00000000-0000-4000-8000-000000000002-0', 'tool_calls': [], 'invalid_tool_calls': []}}}]], 'llm_output': None, 'run': None, 'type': 'LLMResult'}, reference_example_id=None, parent_run_id=UUID('00000000-0000-4000-8000-000000000000'), tags=['seq:step:2'], attachments={}, child_runs=[], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000.20230101T000000000000Z00000000-0000-4000-8000-000000000002', trace_id=UUID('00000000-0000-4000-8000-000000000000'))], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000', trace_id=UUID('00000000-0000-4000-8000-000000000000')),",
          "",
          "[Added Lines]",
          "1362:     RunTree(id=00000000-0000-4000-8000-000000000000, name='RunnableSequence', run_type='chain', dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000'),",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1469: # ---",
          "1470: # name: test_prompt_with_llm.1",
          "1471:   list([",
          "1473:   ])",
          "1474: # ---",
          "1475: # name: test_prompt_with_llm.2",
          "1476:   list([",
          "1479:   ])",
          "1480: # ---",
          "1481: # name: test_prompt_with_llm_and_async_lambda",
          "",
          "[Removed Lines]",
          "1472:     RunTree(id=UUID('00000000-0000-4000-8000-000000000000'), name='RunnableSequence', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='chain', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={}, error=None, serialized=None, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'question': 'What is your name?'}, outputs={'output': 'foo'}, reference_example_id=None, parent_run_id=None, tags=[], attachments={}, child_runs=[RunTree(id=UUID('00000000-0000-4000-8000-000000000001'), name='ChatPromptTemplate', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='prompt', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={}, error=None, serialized={'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'ChatPromptTemplate'], 'kwargs': {'input_variables': ['question'], 'messages': [{'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'SystemMessagePromptTemplate'], 'kwargs': {'prompt': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'prompt', 'PromptTemplate'], 'kwargs': {'input_variables': [], 'template': 'You are a nice assistant.', 'template_format': 'f-string'}, 'name': 'PromptTemplate'}}}, {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'HumanMessagePromptTemplate'], 'kwargs': {'prompt': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'prompt', 'PromptTemplate'], 'kwargs': {'input_variables': ['question'], 'template': '{question}', 'template_format': 'f-string'}, 'name': 'PromptTemplate'}}}]}, 'name': 'ChatPromptTemplate'}, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'question': 'What is your name?'}, outputs={'output': ChatPromptValue(messages=[SystemMessage(content='You are a nice assistant.', additional_kwargs={}, response_metadata={}), HumanMessage(content='What is your name?', additional_kwargs={}, response_metadata={})])}, reference_example_id=None, parent_run_id=UUID('00000000-0000-4000-8000-000000000000'), tags=['seq:step:1'], attachments={}, child_runs=[], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000.20230101T000000000000Z00000000-0000-4000-8000-000000000001', trace_id=UUID('00000000-0000-4000-8000-000000000000')), RunTree(id=UUID('00000000-0000-4000-8000-000000000002'), name='FakeListLLM', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='llm', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={'invocation_params': {'responses': ['foo', 'bar'], '_type': 'fake-list', 'stop': None}, 'options': {'stop': None}, 'batch_size': 1, 'metadata': {'ls_provider': 'fakelist', 'ls_model_type': 'llm'}}, error=None, serialized={'lc': 1, 'type': 'not_implemented', 'id': ['langchain_core', 'language_models', 'fake', 'FakeListLLM'], 'repr': \"FakeListLLM(responses=['foo', 'bar'])\", 'name': 'FakeListLLM'}, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'prompts': ['System: You are a nice assistant.\\nHuman: What is your name?']}, outputs={'generations': [[{'text': 'foo', 'generation_info': None, 'type': 'Generation'}]], 'llm_output': None, 'run': None, 'type': 'LLMResult'}, reference_example_id=None, parent_run_id=UUID('00000000-0000-4000-8000-000000000000'), tags=['seq:step:2'], attachments={}, child_runs=[], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000.20230101T000000000000Z00000000-0000-4000-8000-000000000002', trace_id=UUID('00000000-0000-4000-8000-000000000000'))], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000', trace_id=UUID('00000000-0000-4000-8000-000000000000')),",
          "1477:     RunTree(id=UUID('00000000-0000-4000-8000-000000000000'), name='RunnableSequence', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='chain', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={}, error=None, serialized=None, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'question': 'What is your name?'}, outputs={'output': 'bar'}, reference_example_id=None, parent_run_id=None, tags=[], attachments={}, child_runs=[RunTree(id=UUID('00000000-0000-4000-8000-000000000001'), name='ChatPromptTemplate', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='prompt', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={}, error=None, serialized={'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'ChatPromptTemplate'], 'kwargs': {'input_variables': ['question'], 'messages': [{'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'SystemMessagePromptTemplate'], 'kwargs': {'prompt': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'prompt', 'PromptTemplate'], 'kwargs': {'input_variables': [], 'template': 'You are a nice assistant.', 'template_format': 'f-string'}, 'name': 'PromptTemplate'}}}, {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'HumanMessagePromptTemplate'], 'kwargs': {'prompt': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'prompt', 'PromptTemplate'], 'kwargs': {'input_variables': ['question'], 'template': '{question}', 'template_format': 'f-string'}, 'name': 'PromptTemplate'}}}]}, 'name': 'ChatPromptTemplate'}, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'question': 'What is your name?'}, outputs={'output': ChatPromptValue(messages=[SystemMessage(content='You are a nice assistant.', additional_kwargs={}, response_metadata={}), HumanMessage(content='What is your name?', additional_kwargs={}, response_metadata={})])}, reference_example_id=None, parent_run_id=UUID('00000000-0000-4000-8000-000000000000'), tags=['seq:step:1'], attachments={}, child_runs=[], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000.20230101T000000000000Z00000000-0000-4000-8000-000000000001', trace_id=UUID('00000000-0000-4000-8000-000000000000')), RunTree(id=UUID('00000000-0000-4000-8000-000000000002'), name='FakeListLLM', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='llm', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={'invocation_params': {'responses': ['foo', 'bar'], '_type': 'fake-list', 'stop': None}, 'options': {'stop': None}, 'batch_size': 2, 'metadata': {'ls_provider': 'fakelist', 'ls_model_type': 'llm'}}, error=None, serialized={'lc': 1, 'type': 'not_implemented', 'id': ['langchain_core', 'language_models', 'fake', 'FakeListLLM'], 'repr': \"FakeListLLM(responses=['foo', 'bar'])\", 'name': 'FakeListLLM'}, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'prompts': ['System: You are a nice assistant.\\nHuman: What is your name?']}, outputs={'generations': [[{'text': 'bar', 'generation_info': None, 'type': 'Generation'}]], 'llm_output': None, 'run': None, 'type': 'LLMResult'}, reference_example_id=None, parent_run_id=UUID('00000000-0000-4000-8000-000000000000'), tags=['seq:step:2'], attachments={}, child_runs=[], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000.20230101T000000000000Z00000000-0000-4000-8000-000000000002', trace_id=UUID('00000000-0000-4000-8000-000000000000'))], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000', trace_id=UUID('00000000-0000-4000-8000-000000000000')),",
          "1478:     RunTree(id=UUID('00000000-0000-4000-8000-000000000003'), name='RunnableSequence', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='chain', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={}, error=None, serialized=None, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'question': 'What is your favorite color?'}, outputs={'output': 'foo'}, reference_example_id=None, parent_run_id=None, tags=[], attachments={}, child_runs=[RunTree(id=UUID('00000000-0000-4000-8000-000000000004'), name='ChatPromptTemplate', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='prompt', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={}, error=None, serialized={'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'ChatPromptTemplate'], 'kwargs': {'input_variables': ['question'], 'messages': [{'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'SystemMessagePromptTemplate'], 'kwargs': {'prompt': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'prompt', 'PromptTemplate'], 'kwargs': {'input_variables': [], 'template': 'You are a nice assistant.', 'template_format': 'f-string'}, 'name': 'PromptTemplate'}}}, {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'HumanMessagePromptTemplate'], 'kwargs': {'prompt': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'prompt', 'PromptTemplate'], 'kwargs': {'input_variables': ['question'], 'template': '{question}', 'template_format': 'f-string'}, 'name': 'PromptTemplate'}}}]}, 'name': 'ChatPromptTemplate'}, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'question': 'What is your favorite color?'}, outputs={'output': ChatPromptValue(messages=[SystemMessage(content='You are a nice assistant.', additional_kwargs={}, response_metadata={}), HumanMessage(content='What is your favorite color?', additional_kwargs={}, response_metadata={})])}, reference_example_id=None, parent_run_id=UUID('00000000-0000-4000-8000-000000000003'), tags=['seq:step:1'], attachments={}, child_runs=[], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000003.20230101T000000000000Z00000000-0000-4000-8000-000000000004', trace_id=UUID('00000000-0000-4000-8000-000000000003')), RunTree(id=UUID('00000000-0000-4000-8000-000000000005'), name='FakeListLLM', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='llm', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={'invocation_params': {'responses': ['foo', 'bar'], '_type': 'fake-list', 'stop': None}, 'options': {'stop': None}, 'batch_size': 2, 'metadata': {'ls_provider': 'fakelist', 'ls_model_type': 'llm'}}, error=None, serialized={'lc': 1, 'type': 'not_implemented', 'id': ['langchain_core', 'language_models', 'fake', 'FakeListLLM'], 'repr': \"FakeListLLM(responses=['foo', 'bar'])\", 'name': 'FakeListLLM'}, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'prompts': ['System: You are a nice assistant.\\nHuman: What is your favorite color?']}, outputs={'generations': [[{'text': 'foo', 'generation_info': None, 'type': 'Generation'}]], 'llm_output': None, 'run': None, 'type': 'LLMResult'}, reference_example_id=None, parent_run_id=UUID('00000000-0000-4000-8000-000000000003'), tags=['seq:step:2'], attachments={}, child_runs=[], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000003.20230101T000000000000Z00000000-0000-4000-8000-000000000005', trace_id=UUID('00000000-0000-4000-8000-000000000003'))], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000003', trace_id=UUID('00000000-0000-4000-8000-000000000003')),",
          "",
          "[Added Lines]",
          "1472:     RunTree(id=00000000-0000-4000-8000-000000000000, name='RunnableSequence', run_type='chain', dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000'),",
          "1477:     RunTree(id=00000000-0000-4000-8000-000000000000, name='RunnableSequence', run_type='chain', dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000'),",
          "1478:     RunTree(id=00000000-0000-4000-8000-000000000003, name='RunnableSequence', run_type='chain', dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000003'),",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1598: # ---",
          "1599: # name: test_prompt_with_llm_and_async_lambda.1",
          "1600:   list([",
          "1602:   ])",
          "1603: # ---",
          "1604: # name: test_prompt_with_llm_parser",
          "",
          "[Removed Lines]",
          "1601:     RunTree(id=UUID('00000000-0000-4000-8000-000000000000'), name='RunnableSequence', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='chain', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={}, error=None, serialized=None, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'question': 'What is your name?'}, outputs={'output': 'foo'}, reference_example_id=None, parent_run_id=None, tags=[], attachments={}, child_runs=[RunTree(id=UUID('00000000-0000-4000-8000-000000000001'), name='ChatPromptTemplate', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='prompt', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={}, error=None, serialized={'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'ChatPromptTemplate'], 'kwargs': {'input_variables': ['question'], 'messages': [{'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'SystemMessagePromptTemplate'], 'kwargs': {'prompt': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'prompt', 'PromptTemplate'], 'kwargs': {'input_variables': [], 'template': 'You are a nice assistant.', 'template_format': 'f-string'}, 'name': 'PromptTemplate'}}}, {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'HumanMessagePromptTemplate'], 'kwargs': {'prompt': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'prompt', 'PromptTemplate'], 'kwargs': {'input_variables': ['question'], 'template': '{question}', 'template_format': 'f-string'}, 'name': 'PromptTemplate'}}}]}, 'name': 'ChatPromptTemplate'}, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'question': 'What is your name?'}, outputs={'output': ChatPromptValue(messages=[SystemMessage(content='You are a nice assistant.', additional_kwargs={}, response_metadata={}), HumanMessage(content='What is your name?', additional_kwargs={}, response_metadata={})])}, reference_example_id=None, parent_run_id=UUID('00000000-0000-4000-8000-000000000000'), tags=['seq:step:1'], attachments={}, child_runs=[], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000.20230101T000000000000Z00000000-0000-4000-8000-000000000001', trace_id=UUID('00000000-0000-4000-8000-000000000000')), RunTree(id=UUID('00000000-0000-4000-8000-000000000002'), name='FakeListLLM', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='llm', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={'invocation_params': {'responses': ['foo', 'bar'], '_type': 'fake-list', 'stop': None}, 'options': {'stop': None}, 'batch_size': 1, 'metadata': {'ls_provider': 'fakelist', 'ls_model_type': 'llm'}}, error=None, serialized={'lc': 1, 'type': 'not_implemented', 'id': ['langchain_core', 'language_models', 'fake', 'FakeListLLM'], 'repr': \"FakeListLLM(responses=['foo', 'bar'])\", 'name': 'FakeListLLM'}, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'prompts': ['System: You are a nice assistant.\\nHuman: What is your name?']}, outputs={'generations': [[{'text': 'foo', 'generation_info': None, 'type': 'Generation'}]], 'llm_output': None, 'run': None, 'type': 'LLMResult'}, reference_example_id=None, parent_run_id=UUID('00000000-0000-4000-8000-000000000000'), tags=['seq:step:2'], attachments={}, child_runs=[], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000.20230101T000000000000Z00000000-0000-4000-8000-000000000002', trace_id=UUID('00000000-0000-4000-8000-000000000000')), RunTree(id=UUID('00000000-0000-4000-8000-000000000003'), name='passthrough', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='chain', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={}, error=None, serialized=None, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'input': 'foo'}, outputs={'output': 'foo'}, reference_example_id=None, parent_run_id=UUID('00000000-0000-4000-8000-000000000000'), tags=['seq:step:3'], attachments={}, child_runs=[], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000.20230101T000000000000Z00000000-0000-4000-8000-000000000003', trace_id=UUID('00000000-0000-4000-8000-000000000000'))], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000', trace_id=UUID('00000000-0000-4000-8000-000000000000')),",
          "",
          "[Added Lines]",
          "1601:     RunTree(id=00000000-0000-4000-8000-000000000000, name='RunnableSequence', run_type='chain', dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000'),",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1722: # ---",
          "1723: # name: test_prompt_with_llm_parser.1",
          "1724:   list([",
          "1726:   ])",
          "1727: # ---",
          "1728: # name: test_router_runnable",
          "",
          "[Removed Lines]",
          "1725:     RunTree(id=UUID('00000000-0000-4000-8000-000000000000'), name='RunnableSequence', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='chain', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={}, error=None, serialized=None, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'question': 'What is your name?'}, outputs={'output': ['bear', 'dog', 'cat']}, reference_example_id=None, parent_run_id=None, tags=[], attachments={}, child_runs=[RunTree(id=UUID('00000000-0000-4000-8000-000000000001'), name='ChatPromptTemplate', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='prompt', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={}, error=None, serialized={'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'ChatPromptTemplate'], 'kwargs': {'input_variables': ['question'], 'messages': [{'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'SystemMessagePromptTemplate'], 'kwargs': {'prompt': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'prompt', 'PromptTemplate'], 'kwargs': {'input_variables': [], 'template': 'You are a nice assistant.', 'template_format': 'f-string'}, 'name': 'PromptTemplate'}}}, {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'HumanMessagePromptTemplate'], 'kwargs': {'prompt': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'prompt', 'PromptTemplate'], 'kwargs': {'input_variables': ['question'], 'template': '{question}', 'template_format': 'f-string'}, 'name': 'PromptTemplate'}}}]}, 'name': 'ChatPromptTemplate'}, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'question': 'What is your name?'}, outputs={'output': ChatPromptValue(messages=[SystemMessage(content='You are a nice assistant.', additional_kwargs={}, response_metadata={}), HumanMessage(content='What is your name?', additional_kwargs={}, response_metadata={})])}, reference_example_id=None, parent_run_id=UUID('00000000-0000-4000-8000-000000000000'), tags=['seq:step:1'], attachments={}, child_runs=[], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000.20230101T000000000000Z00000000-0000-4000-8000-000000000001', trace_id=UUID('00000000-0000-4000-8000-000000000000')), RunTree(id=UUID('00000000-0000-4000-8000-000000000002'), name='FakeStreamingListLLM', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='llm', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={'invocation_params': {'responses': ['bear, dog, cat', 'tomato, lettuce, onion'], '_type': 'fake-list', 'stop': None}, 'options': {'stop': None}, 'batch_size': 1, 'metadata': {'ls_provider': 'fakestreaminglist', 'ls_model_type': 'llm'}}, error=None, serialized={'lc': 1, 'type': 'not_implemented', 'id': ['langchain_core', 'language_models', 'fake', 'FakeStreamingListLLM'], 'repr': \"FakeStreamingListLLM(responses=['bear, dog, cat', 'tomato, lettuce, onion'])\", 'name': 'FakeStreamingListLLM'}, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'prompts': ['System: You are a nice assistant.\\nHuman: What is your name?']}, outputs={'generations': [[{'text': 'bear, dog, cat', 'generation_info': None, 'type': 'Generation'}]], 'llm_output': None, 'run': None, 'type': 'LLMResult'}, reference_example_id=None, parent_run_id=UUID('00000000-0000-4000-8000-000000000000'), tags=['seq:step:2'], attachments={}, child_runs=[], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000.20230101T000000000000Z00000000-0000-4000-8000-000000000002', trace_id=UUID('00000000-0000-4000-8000-000000000000')), RunTree(id=UUID('00000000-0000-4000-8000-000000000003'), name='CommaSeparatedListOutputParser', start_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), run_type='parser', end_time=FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), extra={}, error=None, serialized=None, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0, tzinfo=datetime.timezone.utc)}], inputs={'input': 'bear, dog, cat'}, outputs={'output': ['bear', 'dog', 'cat']}, reference_example_id=None, parent_run_id=UUID('00000000-0000-4000-8000-000000000000'), tags=['seq:step:3'], attachments={}, child_runs=[], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000.20230101T000000000000Z00000000-0000-4000-8000-000000000003', trace_id=UUID('00000000-0000-4000-8000-000000000000'))], session_name='default', session_id=None, dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000', trace_id=UUID('00000000-0000-4000-8000-000000000000')),",
          "",
          "[Added Lines]",
          "1725:     RunTree(id=00000000-0000-4000-8000-000000000000, name='RunnableSequence', run_type='chain', dotted_order='20230101T000000000000Z00000000-0000-4000-8000-000000000000'),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ab7601880ec90e146656af842b7716551c113465",
      "candidate_info": {
        "commit_hash": "ab7601880ec90e146656af842b7716551c113465",
        "repo": "langchain-ai/langchain",
        "commit_url": "https://github.com/langchain-ai/langchain/commit/ab7601880ec90e146656af842b7716551c113465",
        "files": [
          "libs/core/poetry.lock"
        ],
        "message": "lock",
        "before_after_code_files": [
          "libs/core/poetry.lock||libs/core/poetry.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libs/core/poetry.lock||libs/core/poetry.lock"
          ],
          "candidate": [
            "libs/core/poetry.lock||libs/core/poetry.lock"
          ]
        }
      },
      "candidate_diff": {
        "libs/core/poetry.lock||libs/core/poetry.lock": [
          "File: libs/core/poetry.lock -> libs/core/poetry.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "2191:     {file = \"PyYAML-6.0.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:69b023b2b4daa7548bcfbd4aa3da05b3a74b772db9e23b982788168117739938\"},",
          "2192:     {file = \"PyYAML-6.0.1-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:81e0b275a9ecc9c0c0c07b4b90ba548307583c125f54d5b6946cfee6360c733d\"},",
          "2193:     {file = \"PyYAML-6.0.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ba336e390cd8e4d1739f42dfe9bb83a3cc2e80f567d8805e11b46f4a943f5515\"},",
          "2194:     {file = \"PyYAML-6.0.1-cp310-cp310-win32.whl\", hash = \"sha256:bd4af7373a854424dabd882decdc5579653d7868b8fb26dc7d0e99f823aa5924\"},",
          "2195:     {file = \"PyYAML-6.0.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:fd1592b3fdf65fff2ad0004b5e363300ef59ced41c2e6b3a99d4089fa8c5435d\"},",
          "2196:     {file = \"PyYAML-6.0.1-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:6965a7bc3cf88e5a1c3bd2e0b5c22f8d677dc88a455344035f03399034eb3007\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2194:     {file = \"PyYAML-6.0.1-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:326c013efe8048858a6d312ddd31d56e468118ad4cdeda36c719bf5bb6192290\"},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2198:     {file = \"PyYAML-6.0.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:42f8152b8dbc4fe7d96729ec2b99c7097d656dc1213a3229ca5383f973a5ed6d\"},",
          "2199:     {file = \"PyYAML-6.0.1-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:062582fca9fabdd2c8b54a3ef1c978d786e0f6b3a1510e0ac93ef59e0ddae2bc\"},",
          "2200:     {file = \"PyYAML-6.0.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d2b04aac4d386b172d5b9692e2d2da8de7bfb6c387fa4f801fbf6fb2e6ba4673\"},",
          "2201:     {file = \"PyYAML-6.0.1-cp311-cp311-win32.whl\", hash = \"sha256:1635fd110e8d85d55237ab316b5b011de701ea0f29d07611174a1b42f1444741\"},",
          "2202:     {file = \"PyYAML-6.0.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:bf07ee2fef7014951eeb99f56f39c9bb4af143d8aa3c21b1677805985307da34\"},",
          "2203:     {file = \"PyYAML-6.0.1-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:50550eb667afee136e9a77d6dc71ae76a44df8b3e51e41b77f6de2932bfe0f47\"},",
          "2204:     {file = \"PyYAML-6.0.1-cp36-cp36m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:1fe35611261b29bd1de0070f0b2f47cb6ff71fa6595c077e42bd0c419fa27b98\"},",
          "2205:     {file = \"PyYAML-6.0.1-cp36-cp36m-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:704219a11b772aea0d8ecd7058d0082713c3562b4e271b849ad7dc4a5c90c13c\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2202:     {file = \"PyYAML-6.0.1-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:e7d73685e87afe9f3b36c799222440d6cf362062f78be1013661b00c5c6f678b\"},",
          "2205:     {file = \"PyYAML-6.0.1-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:855fb52b0dc35af121542a76b9a84f8d1cd886ea97c84703eaa6d88e37a2ad28\"},",
          "2206:     {file = \"PyYAML-6.0.1-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:40df9b996c2b73138957fe23a16a4f0ba614f4c0efce1e9406a184b6d07fa3a9\"},",
          "2207:     {file = \"PyYAML-6.0.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a08c6f0fe150303c1c6b71ebcd7213c2858041a7e01975da3a99aed1e7a378ef\"},",
          "2208:     {file = \"PyYAML-6.0.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6c22bec3fbe2524cde73d7ada88f6566758a8f7227bfbf93a408a9d86bcc12a0\"},",
          "2209:     {file = \"PyYAML-6.0.1-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:8d4e9c88387b0f5c7d5f281e55304de64cf7f9c0021a3525bd3b1c542da3b0e4\"},",
          "2210:     {file = \"PyYAML-6.0.1-cp312-cp312-win32.whl\", hash = \"sha256:d483d2cdf104e7c9fa60c544d92981f12ad66a457afae824d146093b8c294c54\"},",
          "2211:     {file = \"PyYAML-6.0.1-cp312-cp312-win_amd64.whl\", hash = \"sha256:0d3304d8c0adc42be59c5f8a4d9e3d7379e6955ad754aa9d6ab7a398b59dd1df\"},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2216:     {file = \"PyYAML-6.0.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a0cd17c15d3bb3fa06978b4e8958dcdc6e0174ccea823003a106c7d4d7899ac5\"},",
          "2217:     {file = \"PyYAML-6.0.1-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:28c119d996beec18c05208a8bd78cbe4007878c6dd15091efb73a30e90539696\"},",
          "2218:     {file = \"PyYAML-6.0.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:7e07cbde391ba96ab58e532ff4803f79c4129397514e1413a7dc761ccd755735\"},",
          "2219:     {file = \"PyYAML-6.0.1-cp38-cp38-win32.whl\", hash = \"sha256:184c5108a2aca3c5b3d3bf9395d50893a7ab82a38004c8f61c258d4428e80206\"},",
          "2220:     {file = \"PyYAML-6.0.1-cp38-cp38-win_amd64.whl\", hash = \"sha256:1e2722cc9fbb45d9b87631ac70924c11d3a401b2d7f410cc0e3bbf249f2dca62\"},",
          "2221:     {file = \"PyYAML-6.0.1-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:9eb6caa9a297fc2c2fb8862bc5370d0303ddba53ba97e71f08023b6cd73d16a8\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2228:     {file = \"PyYAML-6.0.1-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:49a183be227561de579b4a36efbb21b3eab9651dd81b1858589f796549873dd6\"},",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2223:     {file = \"PyYAML-6.0.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:5773183b6446b2c99bb77e77595dd486303b4faab2b086e7b17bc6bef28865f6\"},",
          "2224:     {file = \"PyYAML-6.0.1-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:b786eecbdf8499b9ca1d697215862083bd6d2a99965554781d0d8d1ad31e13a0\"},",
          "2225:     {file = \"PyYAML-6.0.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:bc1bf2925a1ecd43da378f4db9e4f799775d6367bdb94671027b73b393a7c42c\"},",
          "2226:     {file = \"PyYAML-6.0.1-cp39-cp39-win32.whl\", hash = \"sha256:faca3bdcf85b2fc05d06ff3fbc1f83e1391b3e724afa3feba7d13eeab355484c\"},",
          "2227:     {file = \"PyYAML-6.0.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:510c9deebc5c0225e8c96813043e62b680ba2f9c50a08d3724c7f28a747d1486\"},",
          "2228:     {file = \"PyYAML-6.0.1.tar.gz\", hash = \"sha256:bfdf460b1736c775f2ba9f6a92bca30bc2095067b8a9d77876d1fad6cc3b4a43\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2236:     {file = \"PyYAML-6.0.1-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:04ac92ad1925b2cff1db0cfebffb6ffc43457495c9b3c39d3fcae417d7125dc5\"},",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3011: [metadata]",
          "3012: lock-version = \"2.0\"",
          "3013: python-versions = \">=3.8.1,<4.0\"",
          "",
          "[Removed Lines]",
          "3014: content-hash = \"368d050ae41dfbb296a7319987ebfe09ddf599474078649a517fb6c432b6d9b1\"",
          "",
          "[Added Lines]",
          "3025: content-hash = \"d99a238dc01826c5e145bde53ec69ddb1072eb3ea92785df4a70671244027c4e\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "184448e130c71d6d9a32087c05eef918e93f4706",
      "candidate_info": {
        "commit_hash": "184448e130c71d6d9a32087c05eef918e93f4706",
        "repo": "langchain-ai/langchain",
        "commit_url": "https://github.com/langchain-ai/langchain/commit/184448e130c71d6d9a32087c05eef918e93f4706",
        "files": [
          "libs/core/poetry.lock",
          "libs/core/pyproject.toml"
        ],
        "message": "remove simsimd and pytest-profiler",
        "before_after_code_files": [
          "libs/core/poetry.lock||libs/core/poetry.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libs/core/poetry.lock||libs/core/poetry.lock"
          ],
          "candidate": [
            "libs/core/poetry.lock||libs/core/poetry.lock"
          ]
        }
      },
      "candidate_diff": {
        "libs/core/poetry.lock||libs/core/poetry.lock": [
          "File: libs/core/poetry.lock -> libs/core/poetry.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "561: [package.dependencies]",
          "562: python-dateutil = \">=2.7\"",
          "575: [[package]]",
          "576: name = \"grandalf\"",
          "577: version = \"0.8\"",
          "",
          "[Removed Lines]",
          "564: [[package]]",
          "565: name = \"gprof2dot\"",
          "566: version = \"2024.6.6\"",
          "567: description = \"Generate a dot graph from the output of several profilers.\"",
          "568: optional = false",
          "569: python-versions = \">=3.8\"",
          "570: files = [",
          "571:     {file = \"gprof2dot-2024.6.6-py2.py3-none-any.whl\", hash = \"sha256:45b14ad7ce64e299c8f526881007b9eb2c6b75505d5613e96e66ee4d5ab33696\"},",
          "572:     {file = \"gprof2dot-2024.6.6.tar.gz\", hash = \"sha256:fa1420c60025a9eb7734f65225b4da02a10fc6dd741b37fa129bc6b41951e5ab\"},",
          "573: ]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2023: [package.extras]",
          "2024: dev = [\"pre-commit\", \"pytest-asyncio\", \"tox\"]",
          "2045: [[package]]",
          "2046: name = \"pytest-watcher\"",
          "2047: version = \"0.3.5\"",
          "",
          "[Removed Lines]",
          "2026: [[package]]",
          "2027: name = \"pytest-profiling\"",
          "2028: version = \"1.7.0\"",
          "2029: description = \"Profiling plugin for py.test\"",
          "2030: optional = false",
          "2031: python-versions = \"*\"",
          "2032: files = [",
          "2033:     {file = \"pytest-profiling-1.7.0.tar.gz\", hash = \"sha256:93938f147662225d2b8bd5af89587b979652426a8a6ffd7e73ec4a23e24b7f29\"},",
          "2034:     {file = \"pytest_profiling-1.7.0-py2.py3-none-any.whl\", hash = \"sha256:999cc9ac94f2e528e3f5d43465da277429984a1c237ae9818f8cfd0b06acb019\"},",
          "2035: ]",
          "2037: [package.dependencies]",
          "2038: gprof2dot = \"*\"",
          "2039: pytest = \"*\"",
          "2040: six = \"*\"",
          "2042: [package.extras]",
          "2043: tests = [\"pytest-virtualenv\"]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2554: testing = [\"build[virtualenv]\", \"filelock (>=3.4.0)\", \"flake8-2020\", \"ini2toml[lite] (>=0.9)\", \"jaraco.envs (>=2.2)\", \"jaraco.path (>=3.2.0)\", \"pip (>=19.1)\", \"pip-run (>=8.8)\", \"pytest (>=6)\", \"pytest-black (>=0.3.7)\", \"pytest-checkdocs (>=2.4)\", \"pytest-cov\", \"pytest-enabler (>=1.3)\", \"pytest-mypy (>=0.9.1)\", \"pytest-perf\", \"pytest-ruff\", \"pytest-timeout\", \"pytest-xdist\", \"tomli-w (>=1.0.0)\", \"virtualenv (>=13.0.0)\", \"wheel\"]",
          "2555: testing-integration = [\"build[virtualenv]\", \"filelock (>=3.4.0)\", \"jaraco.envs (>=2.2)\", \"jaraco.path (>=3.2.0)\", \"pytest\", \"pytest-enabler\", \"pytest-xdist\", \"tomli\", \"virtualenv (>=13.0.0)\", \"wheel\"]",
          "2659: [[package]]",
          "2660: name = \"six\"",
          "2661: version = \"1.16.0\"",
          "",
          "[Removed Lines]",
          "2557: [[package]]",
          "2558: name = \"simsimd\"",
          "2559: version = \"5.4.2\"",
          "2560: description = \"Fastest SIMD-Accelerated Vector Similarity Functions for x86 and Arm\"",
          "2561: optional = false",
          "2562: python-versions = \"*\"",
          "2563: files = [",
          "2564:     {file = \"simsimd-5.4.2-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:66a7c5aad04748a22e872e830a3903d0c75e6cb768de3793dc35e4d882637303\"},",
          "2565:     {file = \"simsimd-5.4.2-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:122017c54782c600fe323d94d58954a742a40966780f778cefdd19d2754f72e1\"},",
          "2566:     {file = \"simsimd-5.4.2-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:abee498ec2d1e58022af112574136e9e0c96eb009d9cdba052ae5991eca1358d\"},",
          "2567:     {file = \"simsimd-5.4.2-cp310-cp310-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:2be43ce56c6557299ae4b65fe7a8ba0b347c21cc18d2fde2e6d8601b2ac384f4\"},",
          "2568:     {file = \"simsimd-5.4.2-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:97d5bf0e3e5728f0dc9d18f274d2d62451132ab007ea1f5bb0ec41f0499628b2\"},",
          "2569:     {file = \"simsimd-5.4.2-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:e6374c10dff1b8273f02e04be7573278e6811881e789d2b23d20f03731d62516\"},",
          "2570:     {file = \"simsimd-5.4.2-cp310-cp310-manylinux_2_28_aarch64.whl\", hash = \"sha256:72e3f0dfde8c8b3dd8082cb418c3c73f969fd4b09913e5a22cda4eb1639a4bf7\"},",
          "2571:     {file = \"simsimd-5.4.2-cp310-cp310-manylinux_2_28_x86_64.whl\", hash = \"sha256:657bc36805d31c536e0d3c5cf5fec86f4213ea7aea17d802a4fa39ea6ddfd4ad\"},",
          "2572:     {file = \"simsimd-5.4.2-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:0163396e23b8c0d764a7847e91135bd3a06ee175d6620889cf21f44602b06d81\"},",
          "2573:     {file = \"simsimd-5.4.2-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:64886dc6c28135d9304f33514cf60d9f055ceaf3cb63a70e77b9fdf283c29589\"},",
          "2574:     {file = \"simsimd-5.4.2-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:4c2bcf56a16eeca463b838843ca80ea7c201cf6cd01de82b2ffbb55aa745780e\"},",
          "2575:     {file = \"simsimd-5.4.2-cp310-cp310-musllinux_1_2_s390x.whl\", hash = \"sha256:f5f4d835afc06a3c6483eecead4670ff395a21cc397822130cf1689dcc93aa31\"},",
          "2576:     {file = \"simsimd-5.4.2-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:5c2978807a7f8711a5c98b485243a88ba709d27f39d869305d90eb6066eae6ed\"},",
          "2577:     {file = \"simsimd-5.4.2-cp310-cp310-win32.whl\", hash = \"sha256:3f83fe2f9bb1ff4fac7157f3be657fa8a18aff3351fb0488e1cf2d541c79139a\"},",
          "2578:     {file = \"simsimd-5.4.2-cp310-cp310-win_amd64.whl\", hash = \"sha256:d52095f31a52f4081c49e0dee43df09fb28a63d018f8a4ed68e454254c97ec8d\"},",
          "2579:     {file = \"simsimd-5.4.2-cp310-cp310-win_arm64.whl\", hash = \"sha256:e90ca7cce00d464ba1f045a2a70f3a6ec37b4620b1855c759f158661ca33e3b5\"},",
          "2580:     {file = \"simsimd-5.4.2-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:9a5a8a0767042b97e3f9e1f3dca3a42007b8b47c7936606d7239c077efd35345\"},",
          "2581:     {file = \"simsimd-5.4.2-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:9084bc98f414dd0343dd2cadc878143458480cc79cbcbd47abe389455c905512\"},",
          "2582:     {file = \"simsimd-5.4.2-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:843d2ef7eaeb7ca741cf6acfe49a1854d29fd65f50b9cca37e82b8301a23d175\"},",
          "2583:     {file = \"simsimd-5.4.2-cp311-cp311-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:301865384756be7af15bf24f7544bbf120c381ac24a0b0b837defa1bc7f0726c\"},",
          "2584:     {file = \"simsimd-5.4.2-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:00b685c51a87506e58bfa1f53d3b1d346e8e09d99dfadaf5f330672235799a39\"},",
          "2585:     {file = \"simsimd-5.4.2-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:53485eac53af43b867fef7dcc9f4323a63933632fc9ed7171af2ab3aa95ea3d0\"},",
          "2586:     {file = \"simsimd-5.4.2-cp311-cp311-manylinux_2_28_aarch64.whl\", hash = \"sha256:ade8e270ef941d4b4148371d5a5f67dc9302843dbf2c6a6e90d8d165f0dea1a1\"},",
          "2587:     {file = \"simsimd-5.4.2-cp311-cp311-manylinux_2_28_x86_64.whl\", hash = \"sha256:ed4d7b4dff94296f698de500097c87d5f8c6935b12e210d9c521b5080cac6be9\"},",
          "2588:     {file = \"simsimd-5.4.2-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:429b998a57826a7b8720088320ef5dca1346abcd43e72ce541b5cc5fbe6f4cd6\"},",
          "2589:     {file = \"simsimd-5.4.2-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:f24d09407f9ada45ade23afed95294b0f0f01743b8f16cbad6f1c46d69cc15a0\"},",
          "2590:     {file = \"simsimd-5.4.2-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:525f4049618a21ed1ec775c77c6d4a261526605b4fed0f5e3832cb38e9e08fef\"},",
          "2591:     {file = \"simsimd-5.4.2-cp311-cp311-musllinux_1_2_s390x.whl\", hash = \"sha256:47d5f48b1599718cb7a7968281c2c981cbad7949ca42218e74d7c3f1a9614086\"},",
          "2592:     {file = \"simsimd-5.4.2-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:f7b075618654fd7676b2b11493edf723c670c864f63bfbf97b2f68cabd9b01d2\"},",
          "2593:     {file = \"simsimd-5.4.2-cp311-cp311-win32.whl\", hash = \"sha256:9dcfe6c9d0ed020f9a886331ea52dac3874703b4790a54963661e7ddd6a7e42a\"},",
          "2594:     {file = \"simsimd-5.4.2-cp311-cp311-win_amd64.whl\", hash = \"sha256:e6656717cdb4c50c5ae120d01a2ffcec3175dd4bbedf0c3223c2b76c4db3f5ed\"},",
          "2595:     {file = \"simsimd-5.4.2-cp311-cp311-win_arm64.whl\", hash = \"sha256:e25fd6110d977737f5a73a701eecf0a393d4d2231301d4ee8cf9223bdade02db\"},",
          "2596:     {file = \"simsimd-5.4.2-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:a5e81fb7aa2965fe7758d281280728f44beced50a5f8c7fa21d0f26ffbea7ce3\"},",
          "2597:     {file = \"simsimd-5.4.2-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:62d861b019be3c3cf492926b61464954f62e76f4d6f67abeeef5c13046694e53\"},",
          "2598:     {file = \"simsimd-5.4.2-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:d0e48b4d40cf54ded06a98509bec8a0ecd2574878afd807b92cce02fc2ed6640\"},",
          "2599:     {file = \"simsimd-5.4.2-cp312-cp312-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:2e42395167d7ee6e052a1ba60789ab0ca1f17eccc4f5d5cd4de7dd8777a271ad\"},",
          "2600:     {file = \"simsimd-5.4.2-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:38caa7cb803d037adb16d7a1ebe91bfdf2f7d844de1b3d23a8d4c461eea98f13\"},",
          "2601:     {file = \"simsimd-5.4.2-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:048659b51556558aba3e268b4a0a523eee7b9e2c5cd6683d86d6af75ce598193\"},",
          "2602:     {file = \"simsimd-5.4.2-cp312-cp312-manylinux_2_28_aarch64.whl\", hash = \"sha256:b25eb72e4ee9e7a51d9658ea5485afac8a6d4e00dadda61e4e275c0617d706a9\"},",
          "2603:     {file = \"simsimd-5.4.2-cp312-cp312-manylinux_2_28_x86_64.whl\", hash = \"sha256:b70b629f538388cf3817a887d9068b393952fe62b236484436324355bfd83809\"},",
          "2604:     {file = \"simsimd-5.4.2-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:3039650261f196abf251ee5fa58ce9bfae6bd571d7b48c525deeba6fe3ff1385\"},",
          "2605:     {file = \"simsimd-5.4.2-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:fa4adee01d5bdd64f3fbd8397a54675d8bc32a8a04c68643ae7724281fa53fab\"},",
          "2606:     {file = \"simsimd-5.4.2-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:6f2a7469a3775e14e92db5333e13ae76df7bb84105e6d5c35274cde3f77ffe4b\"},",
          "2607:     {file = \"simsimd-5.4.2-cp312-cp312-musllinux_1_2_s390x.whl\", hash = \"sha256:d75dbbddf28ee09e05d112e0f993f09fc2b8500ead7f4dbe6ca2f1ca29708f01\"},",
          "2608:     {file = \"simsimd-5.4.2-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:da4994ad65ca44e5bb2a5d9c1240021c29f86b74931c3a4bd8cc2e3a2c1908a2\"},",
          "2609:     {file = \"simsimd-5.4.2-cp312-cp312-win32.whl\", hash = \"sha256:9c3545fff1401abd566a40e2bee63ac59a2bfdc971b47309595435ead0037fa6\"},",
          "2610:     {file = \"simsimd-5.4.2-cp312-cp312-win_amd64.whl\", hash = \"sha256:4363255646f9fc1916fd541383a27f6d02483bbfdc9f8e0a501060f258af4fb0\"},",
          "2611:     {file = \"simsimd-5.4.2-cp312-cp312-win_arm64.whl\", hash = \"sha256:a099b91cd56c96437dfe03ddf9f47c2135a42a45e57f2a6aa6f571cf1f7125bd\"},",
          "2612:     {file = \"simsimd-5.4.2-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:dd7d651b7f2c06772eb70d6ae8bcea37e2674f227472a6faf949e6358ec1fb0f\"},",
          "2613:     {file = \"simsimd-5.4.2-cp37-cp37m-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:1457733032b4177178caab9bc4546f6293c3e6f0fa09fb25460d606dcf2c6e15\"},",
          "2614:     {file = \"simsimd-5.4.2-cp37-cp37m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:6fbe6016f1f39a3a6e10d413a86ab9a02f847dba85a4902c05bc40bece2be197\"},",
          "2615:     {file = \"simsimd-5.4.2-cp37-cp37m-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:591652ca3c1dc4be6916b9ca1f5783acee71663e5408327acfb7d9454954914a\"},",
          "2616:     {file = \"simsimd-5.4.2-cp37-cp37m-manylinux_2_28_aarch64.whl\", hash = \"sha256:2549a455f95cd686017ce96394b87c27ce1b07f14c22e62cf2970a1d0c8c02ae\"},",
          "2617:     {file = \"simsimd-5.4.2-cp37-cp37m-manylinux_2_28_x86_64.whl\", hash = \"sha256:08f3d084e72fecfd429ff1da796f4b80a0cf6c501f270a440c35069d3a04a7be\"},",
          "2618:     {file = \"simsimd-5.4.2-cp37-cp37m-musllinux_1_2_aarch64.whl\", hash = \"sha256:7e586811fb00434434bd5a3378babf9a818d1704b1f4a919765ecc20be4f1d98\"},",
          "2619:     {file = \"simsimd-5.4.2-cp37-cp37m-musllinux_1_2_i686.whl\", hash = \"sha256:e5ee764939640cbc0af11055f3959a25fb95e6c57c2900f650ea81cfbbfeca4d\"},",
          "2620:     {file = \"simsimd-5.4.2-cp37-cp37m-musllinux_1_2_ppc64le.whl\", hash = \"sha256:22f7d140c74d0a28db8e369ff3d9a1334d04500bbea5b0a826b91450dd521ec0\"},",
          "2621:     {file = \"simsimd-5.4.2-cp37-cp37m-musllinux_1_2_s390x.whl\", hash = \"sha256:d68d392c6482039ce4d25c0352532749c5d7b5bbfaa847f98baa023308728140\"},",
          "2622:     {file = \"simsimd-5.4.2-cp37-cp37m-musllinux_1_2_x86_64.whl\", hash = \"sha256:0256d95bb6ffa01e4c200752cfc7f48ba52a22e4d0b655aa88d5ab79d1860c79\"},",
          "2623:     {file = \"simsimd-5.4.2-cp37-cp37m-win32.whl\", hash = \"sha256:c63195c2f8551e0aa599959ce119bd29947f561bb98569889ee08eb084bd5a30\"},",
          "2624:     {file = \"simsimd-5.4.2-cp37-cp37m-win_amd64.whl\", hash = \"sha256:77e13e55ae7e9a7e9dc16fd85a4ce5c48543681dd382a38ec3691f186894dc3d\"},",
          "2625:     {file = \"simsimd-5.4.2-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:4833ca6bfd3fe6625e02279d76788850521d2bc3985b4a686cf80a073a3385d8\"},",
          "2626:     {file = \"simsimd-5.4.2-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:84df304e7da94428af75f53970b99f55987660d38ddcd55a48422f73e2c82f04\"},",
          "2627:     {file = \"simsimd-5.4.2-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:203e0dd865e241e8bb9bb3fb54ea7389ec789fc2c8c6498b55acfa43ac976df2\"},",
          "2628:     {file = \"simsimd-5.4.2-cp38-cp38-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:96969b2e04bf35b04cb865c9aaa3ce71193169b6b291a49f9db75a5736ec17d8\"},",
          "2629:     {file = \"simsimd-5.4.2-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:18012060bea0e4920842d67af4505ae6f9c7712ea8401b058befe17006441661\"},",
          "2630:     {file = \"simsimd-5.4.2-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:dca1a480f68083fc91ce7e75a2cd8881b7da475484451db31c2cc74423cef73f\"},",
          "2631:     {file = \"simsimd-5.4.2-cp38-cp38-manylinux_2_28_aarch64.whl\", hash = \"sha256:2affda3fa0344579b0b6f745b87b13ffd6eb6292fb498ec07bb9055cf06216e9\"},",
          "2632:     {file = \"simsimd-5.4.2-cp38-cp38-manylinux_2_28_x86_64.whl\", hash = \"sha256:aee9c2bc6c4dce1e5a500aece59b5aa619c34236e9f77773100056cf8506eff6\"},",
          "2633:     {file = \"simsimd-5.4.2-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:cf4ec869f7518f2a0dd8d50b0d4307962c1f6ae3f361f6ffdc2f475d18afd57e\"},",
          "2634:     {file = \"simsimd-5.4.2-cp38-cp38-musllinux_1_2_i686.whl\", hash = \"sha256:a0433ffa2fa10389198924c242dff2c267fad33a6670151aaa8280d94af3db16\"},",
          "2635:     {file = \"simsimd-5.4.2-cp38-cp38-musllinux_1_2_ppc64le.whl\", hash = \"sha256:0142ae015a7dbb4902282ba0fc5e72be147d6ea3fa9fed2672e44c6ff00511f7\"},",
          "2636:     {file = \"simsimd-5.4.2-cp38-cp38-musllinux_1_2_s390x.whl\", hash = \"sha256:273b858d167d3190ec4d35f3d151e0dee2b5a242ccb385693ca949ee899b6c62\"},",
          "2637:     {file = \"simsimd-5.4.2-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:292d5e2ca077413a58f5cc31e96e5533f001c5df73468712abe31ad5ddac163a\"},",
          "2638:     {file = \"simsimd-5.4.2-cp38-cp38-win32.whl\", hash = \"sha256:3a53a30e814e11cb5cf802695c6ea1e25629dacf1f7d453681943176386c69b7\"},",
          "2639:     {file = \"simsimd-5.4.2-cp38-cp38-win_amd64.whl\", hash = \"sha256:20c3d90d2c417145d0953ee1cc2f015e514fad198fcf500d3351984d479e25c0\"},",
          "2640:     {file = \"simsimd-5.4.2-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:1a94a17bd8cd18ffd611125ab8a42b8c0cc7ebd18d16a651d096a683a2f40818\"},",
          "2641:     {file = \"simsimd-5.4.2-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:4577b8d7b746536752297fba97116f74da23be3b52b7a955846c2d6ec7aaea51\"},",
          "2642:     {file = \"simsimd-5.4.2-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:34ae1cde6644caba81ceaed8ae429ee470fef39fc9b6be2cfffb8ea0e1092b20\"},",
          "2643:     {file = \"simsimd-5.4.2-cp39-cp39-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:70647c3ff8f24682c0211fc0b88d9fb3a2a7f4a193cd44975d87c215b8f11f34\"},",
          "2644:     {file = \"simsimd-5.4.2-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:6ef37e04858e3dca6d92ff8e27767c5299d634ee91af1e765382d98fe86c54c0\"},",
          "2645:     {file = \"simsimd-5.4.2-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:fbef168a7362b46aa972e9f7b33ad120d9eb637291f7cb971e30374fdc92f0e1\"},",
          "2646:     {file = \"simsimd-5.4.2-cp39-cp39-manylinux_2_28_aarch64.whl\", hash = \"sha256:5f1222baa12b44604ece0febf3adacd279f2866f13751cb0c56d23abf3cc279a\"},",
          "2647:     {file = \"simsimd-5.4.2-cp39-cp39-manylinux_2_28_x86_64.whl\", hash = \"sha256:dfab8bea75f6cc5717131723c13b727f2d70cb0f8268bf0217e8835b720debd6\"},",
          "2648:     {file = \"simsimd-5.4.2-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:0fc362bddd831ab2adebee47ea882a170b3b1275bb462ae68329caea0609255b\"},",
          "2649:     {file = \"simsimd-5.4.2-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:298ccf4ff37e6fc43201245657d65470098694835771d126322ab671f479a54f\"},",
          "2650:     {file = \"simsimd-5.4.2-cp39-cp39-musllinux_1_2_ppc64le.whl\", hash = \"sha256:6f3a5c87f10dd2cc858df4c6dbff0b27905547e05e96944fa4d960cebfbc1e2b\"},",
          "2651:     {file = \"simsimd-5.4.2-cp39-cp39-musllinux_1_2_s390x.whl\", hash = \"sha256:482eb8e6839eba91819f24f1759c5d604fe8b7e0eed576ef99fb1efce7e9675f\"},",
          "2652:     {file = \"simsimd-5.4.2-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:f811d03685b177d8054e20a3a7ba4e9c714ab6eb0c956d9d56cad78e4c2c14dc\"},",
          "2653:     {file = \"simsimd-5.4.2-cp39-cp39-win32.whl\", hash = \"sha256:daac1a76a6c85cfd837510f79c6dbee62d5bc1f448a013a9b4937d6a66fe1cd1\"},",
          "2654:     {file = \"simsimd-5.4.2-cp39-cp39-win_amd64.whl\", hash = \"sha256:bdb92fa486c735cbd7eb6074e0c529cd2665898db9ee70d4801e0581a937febe\"},",
          "2655:     {file = \"simsimd-5.4.2-cp39-cp39-win_arm64.whl\", hash = \"sha256:a7b8afe88c1cc8a06b61932126c0aee1af82d0de45a13135e40a9f406d5a909f\"},",
          "2656:     {file = \"simsimd-5.4.2.tar.gz\", hash = \"sha256:86ef77a237f47bddbdd8e89b36a8096fad461197d6f7ba20602a863191196542\"},",
          "2657: ]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3053: [metadata]",
          "3054: lock-version = \"2.0\"",
          "3055: python-versions = \">=3.9,<4.0\"",
          "",
          "[Removed Lines]",
          "3056: content-hash = \"d226029b416404cd24944878e0381319620636d4b4ccdee5646406e025ed79c4\"",
          "",
          "[Added Lines]",
          "2924: content-hash = \"92ebb365cc699b02cbe43f2042da240703678602a8b2aa95f80d80feee1dfedf\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f1222739f88bfdf37513af146da6b9dbf2a091c4",
      "candidate_info": {
        "commit_hash": "f1222739f88bfdf37513af146da6b9dbf2a091c4",
        "repo": "langchain-ai/langchain",
        "commit_url": "https://github.com/langchain-ai/langchain/commit/f1222739f88bfdf37513af146da6b9dbf2a091c4",
        "files": [
          ".github/scripts/get_min_versions.py",
          "libs/community/poetry.lock",
          "libs/community/pyproject.toml",
          "libs/core/poetry.lock",
          "libs/core/pyproject.toml",
          "libs/langchain/poetry.lock",
          "libs/langchain/pyproject.toml"
        ],
        "message": "core[patch]: support numpy 2 (#27991)",
        "before_after_code_files": [
          ".github/scripts/get_min_versions.py||.github/scripts/get_min_versions.py",
          "libs/community/poetry.lock||libs/community/poetry.lock",
          "libs/core/poetry.lock||libs/core/poetry.lock",
          "libs/langchain/poetry.lock||libs/langchain/poetry.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libs/core/poetry.lock||libs/core/poetry.lock"
          ],
          "candidate": [
            "libs/core/poetry.lock||libs/core/poetry.lock"
          ]
        }
      },
      "candidate_diff": {
        ".github/scripts/get_min_versions.py||.github/scripts/get_min_versions.py": [
          "File: .github/scripts/get_min_versions.py -> .github/scripts/get_min_versions.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:     \"langchain-community\",",
          "24:     \"langchain\",",
          "25:     \"langchain-text-splitters\",",
          "26:     \"SQLAlchemy\",",
          "27: ]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26:     \"numpy\",",
          "",
          "---------------"
        ],
        "libs/community/poetry.lock||libs/community/poetry.lock": [
          "File: libs/community/poetry.lock -> libs/community/poetry.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "1847: langchain-text-splitters = \"^0.3.0\"",
          "1848: langsmith = \"^0.1.17\"",
          "1849: numpy = [",
          "1852: ]",
          "1853: pydantic = \"^2.7.4\"",
          "1854: PyYAML = \">=5.3\"",
          "",
          "[Removed Lines]",
          "1850:     {version = \">=1,<2\", markers = \"python_version < \\\"3.12\\\"\"},",
          "1851:     {version = \">=1.26.0,<2.0.0\", markers = \"python_version >= \\\"3.12\\\"\"},",
          "",
          "[Added Lines]",
          "1850:     {version = \">=1.22.4,<2\", markers = \"python_version < \\\"3.12\\\"\"},",
          "1851:     {version = \">=1.26.2,<2\", markers = \"python_version >= \\\"3.12\\\"\"},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4545: [metadata]",
          "4546: lock-version = \"2.0\"",
          "4547: python-versions = \">=3.9,<4.0\"",
          "",
          "[Removed Lines]",
          "4548: content-hash = \"a02b86c4746a93545fe99f8a30ea9becedead16f881254d7763a052ec50c9648\"",
          "",
          "[Added Lines]",
          "4548: content-hash = \"19d0e7026b0f8b3f829ac928a80325ee1b07cd8788707f1df8ab9496712814a1\"",
          "",
          "---------------"
        ],
        "libs/core/poetry.lock||libs/core/poetry.lock": [
          "File: libs/core/poetry.lock -> libs/core/poetry.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "1574:     {file = \"numpy-1.26.4.tar.gz\", hash = \"sha256:2a02aba9ed12e4ac4eb3ea9421c420301a0c6460d9830d74a9df87efa4912010\"},",
          "1575: ]",
          "1577: [[package]]",
          "1578: name = \"orjson\"",
          "1579: version = \"3.10.11\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1577: [[package]]",
          "1578: name = \"numpy\"",
          "1579: version = \"2.1.3\"",
          "1580: description = \"Fundamental package for array computing in Python\"",
          "1581: optional = false",
          "1582: python-versions = \">=3.10\"",
          "1583: files = [",
          "1584:     {file = \"numpy-2.1.3-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:c894b4305373b9c5576d7a12b473702afdf48ce5369c074ba304cc5ad8730dff\"},",
          "1585:     {file = \"numpy-2.1.3-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:b47fbb433d3260adcd51eb54f92a2ffbc90a4595f8970ee00e064c644ac788f5\"},",
          "1586:     {file = \"numpy-2.1.3-cp310-cp310-macosx_14_0_arm64.whl\", hash = \"sha256:825656d0743699c529c5943554d223c021ff0494ff1442152ce887ef4f7561a1\"},",
          "1587:     {file = \"numpy-2.1.3-cp310-cp310-macosx_14_0_x86_64.whl\", hash = \"sha256:6a4825252fcc430a182ac4dee5a505053d262c807f8a924603d411f6718b88fd\"},",
          "1588:     {file = \"numpy-2.1.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e711e02f49e176a01d0349d82cb5f05ba4db7d5e7e0defd026328e5cfb3226d3\"},",
          "1589:     {file = \"numpy-2.1.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:78574ac2d1a4a02421f25da9559850d59457bac82f2b8d7a44fe83a64f770098\"},",
          "1590:     {file = \"numpy-2.1.3-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:c7662f0e3673fe4e832fe07b65c50342ea27d989f92c80355658c7f888fcc83c\"},",
          "1591:     {file = \"numpy-2.1.3-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:fa2d1337dc61c8dc417fbccf20f6d1e139896a30721b7f1e832b2bb6ef4eb6c4\"},",
          "1592:     {file = \"numpy-2.1.3-cp310-cp310-win32.whl\", hash = \"sha256:72dcc4a35a8515d83e76b58fdf8113a5c969ccd505c8a946759b24e3182d1f23\"},",
          "1593:     {file = \"numpy-2.1.3-cp310-cp310-win_amd64.whl\", hash = \"sha256:ecc76a9ba2911d8d37ac01de72834d8849e55473457558e12995f4cd53e778e0\"},",
          "1594:     {file = \"numpy-2.1.3-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:4d1167c53b93f1f5d8a139a742b3c6f4d429b54e74e6b57d0eff40045187b15d\"},",
          "1595:     {file = \"numpy-2.1.3-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:c80e4a09b3d95b4e1cac08643f1152fa71a0a821a2d4277334c88d54b2219a41\"},",
          "1596:     {file = \"numpy-2.1.3-cp311-cp311-macosx_14_0_arm64.whl\", hash = \"sha256:576a1c1d25e9e02ed7fa5477f30a127fe56debd53b8d2c89d5578f9857d03ca9\"},",
          "1597:     {file = \"numpy-2.1.3-cp311-cp311-macosx_14_0_x86_64.whl\", hash = \"sha256:973faafebaae4c0aaa1a1ca1ce02434554d67e628b8d805e61f874b84e136b09\"},",
          "1598:     {file = \"numpy-2.1.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:762479be47a4863e261a840e8e01608d124ee1361e48b96916f38b119cfda04a\"},",
          "1599:     {file = \"numpy-2.1.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:bc6f24b3d1ecc1eebfbf5d6051faa49af40b03be1aaa781ebdadcbc090b4539b\"},",
          "1600:     {file = \"numpy-2.1.3-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:17ee83a1f4fef3c94d16dc1802b998668b5419362c8a4f4e8a491de1b41cc3ee\"},",
          "1601:     {file = \"numpy-2.1.3-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:15cb89f39fa6d0bdfb600ea24b250e5f1a3df23f901f51c8debaa6a5d122b2f0\"},",
          "1602:     {file = \"numpy-2.1.3-cp311-cp311-win32.whl\", hash = \"sha256:d9beb777a78c331580705326d2367488d5bc473b49a9bc3036c154832520aca9\"},",
          "1603:     {file = \"numpy-2.1.3-cp311-cp311-win_amd64.whl\", hash = \"sha256:d89dd2b6da69c4fff5e39c28a382199ddedc3a5be5390115608345dec660b9e2\"},",
          "1604:     {file = \"numpy-2.1.3-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:f55ba01150f52b1027829b50d70ef1dafd9821ea82905b63936668403c3b471e\"},",
          "1605:     {file = \"numpy-2.1.3-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:13138eadd4f4da03074851a698ffa7e405f41a0845a6b1ad135b81596e4e9958\"},",
          "1606:     {file = \"numpy-2.1.3-cp312-cp312-macosx_14_0_arm64.whl\", hash = \"sha256:a6b46587b14b888e95e4a24d7b13ae91fa22386c199ee7b418f449032b2fa3b8\"},",
          "1607:     {file = \"numpy-2.1.3-cp312-cp312-macosx_14_0_x86_64.whl\", hash = \"sha256:0fa14563cc46422e99daef53d725d0c326e99e468a9320a240affffe87852564\"},",
          "1608:     {file = \"numpy-2.1.3-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:8637dcd2caa676e475503d1f8fdb327bc495554e10838019651b76d17b98e512\"},",
          "1609:     {file = \"numpy-2.1.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:2312b2aa89e1f43ecea6da6ea9a810d06aae08321609d8dc0d0eda6d946a541b\"},",
          "1610:     {file = \"numpy-2.1.3-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:a38c19106902bb19351b83802531fea19dee18e5b37b36454f27f11ff956f7fc\"},",
          "1611:     {file = \"numpy-2.1.3-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:02135ade8b8a84011cbb67dc44e07c58f28575cf9ecf8ab304e51c05528c19f0\"},",
          "1612:     {file = \"numpy-2.1.3-cp312-cp312-win32.whl\", hash = \"sha256:e6988e90fcf617da2b5c78902fe8e668361b43b4fe26dbf2d7b0f8034d4cafb9\"},",
          "1613:     {file = \"numpy-2.1.3-cp312-cp312-win_amd64.whl\", hash = \"sha256:0d30c543f02e84e92c4b1f415b7c6b5326cbe45ee7882b6b77db7195fb971e3a\"},",
          "1614:     {file = \"numpy-2.1.3-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:96fe52fcdb9345b7cd82ecd34547fca4321f7656d500eca497eb7ea5a926692f\"},",
          "1615:     {file = \"numpy-2.1.3-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:f653490b33e9c3a4c1c01d41bc2aef08f9475af51146e4a7710c450cf9761598\"},",
          "1616:     {file = \"numpy-2.1.3-cp313-cp313-macosx_14_0_arm64.whl\", hash = \"sha256:dc258a761a16daa791081d026f0ed4399b582712e6fc887a95af09df10c5ca57\"},",
          "1617:     {file = \"numpy-2.1.3-cp313-cp313-macosx_14_0_x86_64.whl\", hash = \"sha256:016d0f6f5e77b0f0d45d77387ffa4bb89816b57c835580c3ce8e099ef830befe\"},",
          "1618:     {file = \"numpy-2.1.3-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c181ba05ce8299c7aa3125c27b9c2167bca4a4445b7ce73d5febc411ca692e43\"},",
          "1619:     {file = \"numpy-2.1.3-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:5641516794ca9e5f8a4d17bb45446998c6554704d888f86df9b200e66bdcce56\"},",
          "1620:     {file = \"numpy-2.1.3-cp313-cp313-musllinux_1_1_x86_64.whl\", hash = \"sha256:ea4dedd6e394a9c180b33c2c872b92f7ce0f8e7ad93e9585312b0c5a04777a4a\"},",
          "1621:     {file = \"numpy-2.1.3-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:b0df3635b9c8ef48bd3be5f862cf71b0a4716fa0e702155c45067c6b711ddcef\"},",
          "1622:     {file = \"numpy-2.1.3-cp313-cp313-win32.whl\", hash = \"sha256:50ca6aba6e163363f132b5c101ba078b8cbd3fa92c7865fd7d4d62d9779ac29f\"},",
          "1623:     {file = \"numpy-2.1.3-cp313-cp313-win_amd64.whl\", hash = \"sha256:747641635d3d44bcb380d950679462fae44f54b131be347d5ec2bce47d3df9ed\"},",
          "1624:     {file = \"numpy-2.1.3-cp313-cp313t-macosx_10_13_x86_64.whl\", hash = \"sha256:996bb9399059c5b82f76b53ff8bb686069c05acc94656bb259b1d63d04a9506f\"},",
          "1625:     {file = \"numpy-2.1.3-cp313-cp313t-macosx_11_0_arm64.whl\", hash = \"sha256:45966d859916ad02b779706bb43b954281db43e185015df6eb3323120188f9e4\"},",
          "1626:     {file = \"numpy-2.1.3-cp313-cp313t-macosx_14_0_arm64.whl\", hash = \"sha256:baed7e8d7481bfe0874b566850cb0b85243e982388b7b23348c6db2ee2b2ae8e\"},",
          "1627:     {file = \"numpy-2.1.3-cp313-cp313t-macosx_14_0_x86_64.whl\", hash = \"sha256:a9f7f672a3388133335589cfca93ed468509cb7b93ba3105fce780d04a6576a0\"},",
          "1628:     {file = \"numpy-2.1.3-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d7aac50327da5d208db2eec22eb11e491e3fe13d22653dce51b0f4109101b408\"},",
          "1629:     {file = \"numpy-2.1.3-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:4394bc0dbd074b7f9b52024832d16e019decebf86caf909d94f6b3f77a8ee3b6\"},",
          "1630:     {file = \"numpy-2.1.3-cp313-cp313t-musllinux_1_1_x86_64.whl\", hash = \"sha256:50d18c4358a0a8a53f12a8ba9d772ab2d460321e6a93d6064fc22443d189853f\"},",
          "1631:     {file = \"numpy-2.1.3-cp313-cp313t-musllinux_1_2_aarch64.whl\", hash = \"sha256:14e253bd43fc6b37af4921b10f6add6925878a42a0c5fe83daee390bca80bc17\"},",
          "1632:     {file = \"numpy-2.1.3-cp313-cp313t-win32.whl\", hash = \"sha256:08788d27a5fd867a663f6fc753fd7c3ad7e92747efc73c53bca2f19f8bc06f48\"},",
          "1633:     {file = \"numpy-2.1.3-cp313-cp313t-win_amd64.whl\", hash = \"sha256:2564fbdf2b99b3f815f2107c1bbc93e2de8ee655a69c261363a1172a79a257d4\"},",
          "1634:     {file = \"numpy-2.1.3-pp310-pypy310_pp73-macosx_10_15_x86_64.whl\", hash = \"sha256:4f2015dfe437dfebbfce7c85c7b53d81ba49e71ba7eadbf1df40c915af75979f\"},",
          "1635:     {file = \"numpy-2.1.3-pp310-pypy310_pp73-macosx_14_0_x86_64.whl\", hash = \"sha256:3522b0dfe983a575e6a9ab3a4a4dfe156c3e428468ff08ce582b9bb6bd1d71d4\"},",
          "1636:     {file = \"numpy-2.1.3-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:c006b607a865b07cd981ccb218a04fc86b600411d83d6fc261357f1c0966755d\"},",
          "1637:     {file = \"numpy-2.1.3-pp310-pypy310_pp73-win_amd64.whl\", hash = \"sha256:e14e26956e6f1696070788252dcdff11b4aca4c3e8bd166e0df1bb8f315a67cb\"},",
          "1638:     {file = \"numpy-2.1.3.tar.gz\", hash = \"sha256:aa08e04e08aaf974d4458def539dece0d28146d866a39da5639596f4921fd761\"},",
          "1639: ]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2961: [metadata]",
          "2962: lock-version = \"2.0\"",
          "2963: python-versions = \">=3.9,<4.0\"",
          "",
          "[Removed Lines]",
          "2964: content-hash = \"3c680384ebb62b873c70201979927665c8fcce32dbf1df7457d12e83fba15ac2\"",
          "",
          "[Added Lines]",
          "3028: content-hash = \"ecd401dada54abf4af9ad698a1d4c6fedc67937ee5413994c72e7a51886ccb1b\"",
          "",
          "---------------"
        ],
        "libs/langchain/poetry.lock||libs/langchain/poetry.lock": [
          "File: libs/langchain/poetry.lock -> libs/langchain/poetry.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: [[package]]",
          "4: name = \"aiohappyeyeballs\"",
          "",
          "[Removed Lines]",
          "1: # This file is automatically @generated by Poetry 1.8.2 and should not be changed by hand.",
          "",
          "[Added Lines]",
          "1: # This file is automatically @generated by Poetry 1.8.3 and should not be changed by hand.",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1989: [[package]]",
          "1990: name = \"langchain-core\"",
          "1992: description = \"Building applications with LLMs through composability\"",
          "1993: optional = false",
          "1994: python-versions = \">=3.9,<4.0\"",
          "",
          "[Removed Lines]",
          "1991: version = \"0.3.15\"",
          "",
          "[Added Lines]",
          "1991: version = \"0.3.17\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2014: [[package]]",
          "2015: name = \"langchain-openai\"",
          "2017: description = \"An integration package connecting OpenAI and LangChain\"",
          "2018: optional = true",
          "2019: python-versions = \">=3.9,<4.0\"",
          "",
          "[Removed Lines]",
          "2016: version = \"0.2.5\"",
          "",
          "[Added Lines]",
          "2016: version = \"0.2.8\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2021: develop = true",
          "2023: [package.dependencies]",
          "2026: tiktoken = \">=0.7,<1\"",
          "2028: [package.source]",
          "",
          "[Removed Lines]",
          "2024: langchain-core = \"^0.3.15\"",
          "2025: openai = \"^1.52.0\"",
          "",
          "[Added Lines]",
          "2024: langchain-core = \"^0.3.17\"",
          "2025: openai = \"^1.54.0\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2032: [[package]]",
          "2033: name = \"langchain-standard-tests\"",
          "2035: description = \"Standard tests for LangChain implementations\"",
          "2036: optional = false",
          "2037: python-versions = \">=3.9,<4.0\"",
          "",
          "[Removed Lines]",
          "2034: version = \"0.1.1\"",
          "",
          "[Added Lines]",
          "2034: version = \"0.3.0\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2041: [package.dependencies]",
          "2042: httpx = \"^0.27.0\"",
          "2044: pytest = \">=7,<9\"",
          "2045: syrupy = \"^4\"",
          "",
          "[Removed Lines]",
          "2043: langchain-core = \"^0.3.0\"",
          "",
          "[Added Lines]",
          "2043: langchain-core = \"^0.3.15\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2051: [[package]]",
          "2052: name = \"langchain-text-splitters\"",
          "2054: description = \"LangChain text splitting utilities\"",
          "2055: optional = false",
          "2056: python-versions = \">=3.9,<4.0\"",
          "",
          "[Removed Lines]",
          "2053: version = \"0.3.1\"",
          "",
          "[Added Lines]",
          "2053: version = \"0.3.2\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2576: [[package]]",
          "2577: name = \"openai\"",
          "2579: description = \"The official Python library for the openai API\"",
          "2580: optional = true",
          "2582: files = [",
          "2585: ]",
          "2587: [package.dependencies]",
          "",
          "[Removed Lines]",
          "2578: version = \"1.53.0\"",
          "2581: python-versions = \">=3.7.1\"",
          "2583:     {file = \"openai-1.53.0-py3-none-any.whl\", hash = \"sha256:20f408c32fc5cb66e60c6882c994cdca580a5648e10045cd840734194f033418\"},",
          "2584:     {file = \"openai-1.53.0.tar.gz\", hash = \"sha256:be2c4e77721b166cce8130e544178b7d579f751b4b074ffbaade3854b6f85ec5\"},",
          "",
          "[Added Lines]",
          "2578: version = \"1.54.4\"",
          "2581: python-versions = \">=3.8\"",
          "2583:     {file = \"openai-1.54.4-py3-none-any.whl\", hash = \"sha256:0d95cef99346bf9b6d7fbf57faf61a673924c3e34fa8af84c9ffe04660673a7e\"},",
          "2584:     {file = \"openai-1.54.4.tar.gz\", hash = \"sha256:50f3656e45401c54e973fa05dc29f3f0b0d19348d685b2f7ddb4d92bf7b1b6bf\"},",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2697:     {file = \"pandas-2.2.3-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:381175499d3802cde0eabbaf6324cce0c4f5d52ca6f8c377c29ad442f50f6348\"},",
          "2698:     {file = \"pandas-2.2.3-cp310-cp310-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:d9c45366def9a3dd85a6454c0e7908f2b3b8e9c138f5dc38fed7ce720d8453ed\"},",
          "2699:     {file = \"pandas-2.2.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:86976a1c5b25ae3f8ccae3a5306e443569ee3c3faf444dfd0f41cda24667ad57\"},",
          "2701:     {file = \"pandas-2.2.3-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:37e0aced3e8f539eccf2e099f65cdb9c8aa85109b0be6e93e2baff94264bdc6f\"},",
          "2702:     {file = \"pandas-2.2.3-cp310-cp310-win_amd64.whl\", hash = \"sha256:56534ce0746a58afaf7942ba4863e0ef81c9c50d3f0ae93e9497d6a41a057645\"},",
          "2703:     {file = \"pandas-2.2.3-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:66108071e1b935240e74525006034333f98bcdb87ea116de573a6a0dccb6c039\"},",
          "2704:     {file = \"pandas-2.2.3-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:7c2875855b0ff77b2a64a0365e24455d9990730d6431b9e0ee18ad8acee13dbd\"},",
          "2706:     {file = \"pandas-2.2.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:c124333816c3a9b03fbeef3a9f230ba9a737e9e5bb4060aa2107a86cc0a497fc\"},",
          "2708:     {file = \"pandas-2.2.3-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:29401dbfa9ad77319367d36940cd8a0b3a11aba16063e39632d98b0e931ddf32\"},",
          "2709:     {file = \"pandas-2.2.3-cp311-cp311-win_amd64.whl\", hash = \"sha256:3fc6873a41186404dad67245896a6e440baacc92f5b716ccd1bc9ed2995ab2c5\"},",
          "2710:     {file = \"pandas-2.2.3-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:b1d432e8d08679a40e2a6d8b2f9770a5c21793a6f9f47fdd52c5ce1948a5a8a9\"},",
          "2711:     {file = \"pandas-2.2.3-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:a5a1595fe639f5988ba6a8e5bc9649af3baf26df3998a0abe56c02609392e0a4\"},",
          "2713:     {file = \"pandas-2.2.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:fffb8ae78d8af97f849404f21411c95062db1496aeb3e56f146f0355c9989319\"},",
          "2715:     {file = \"pandas-2.2.3-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:062309c1b9ea12a50e8ce661145c6aab431b1e99530d3cd60640e255778bd43a\"},",
          "2716:     {file = \"pandas-2.2.3-cp312-cp312-win_amd64.whl\", hash = \"sha256:59ef3764d0fe818125a5097d2ae867ca3fa64df032331b7e0917cf5d7bf66b13\"},",
          "2717:     {file = \"pandas-2.2.3-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:f00d1345d84d8c86a63e476bb4955e46458b304b9575dcf71102b5c705320015\"},",
          "2718:     {file = \"pandas-2.2.3-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:3508d914817e153ad359d7e069d752cdd736a247c322d932eb89e6bc84217f28\"},",
          "2720:     {file = \"pandas-2.2.3-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f3a255b2c19987fbbe62a9dfd6cff7ff2aa9ccab3fc75218fd4b7530f01efa24\"},",
          "2722:     {file = \"pandas-2.2.3-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:6374c452ff3ec675a8f46fd9ab25c4ad0ba590b71cf0656f8b6daa5202bca3fb\"},",
          "2723:     {file = \"pandas-2.2.3-cp313-cp313-win_amd64.whl\", hash = \"sha256:61c5ad4043f791b61dd4752191d9f07f0ae412515d59ba8f005832a532f8736d\"},",
          "2724:     {file = \"pandas-2.2.3-cp313-cp313t-macosx_10_13_x86_64.whl\", hash = \"sha256:3b71f27954685ee685317063bf13c7709a7ba74fc996b84fc6821c59b0f06468\"},",
          "2725:     {file = \"pandas-2.2.3-cp313-cp313t-macosx_11_0_arm64.whl\", hash = \"sha256:38cf8125c40dae9d5acc10fa66af8ea6fdf760b2714ee482ca691fc66e6fcb18\"},",
          "2727:     {file = \"pandas-2.2.3-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:1db71525a1538b30142094edb9adc10be3f3e176748cd7acc2240c2f2e5aa3a4\"},",
          "2729:     {file = \"pandas-2.2.3-cp313-cp313t-musllinux_1_2_x86_64.whl\", hash = \"sha256:ad5b65698ab28ed8d7f18790a0dc58005c7629f227be9ecc1072aa74c0c1d43a\"},",
          "2730:     {file = \"pandas-2.2.3-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:bc6b93f9b966093cb0fd62ff1a7e4c09e6d546ad7c1de191767baffc57628f39\"},",
          "2731:     {file = \"pandas-2.2.3-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:5dbca4c1acd72e8eeef4753eeca07de9b1db4f398669d5994086f788a5d7cc30\"},",
          "2733:     {file = \"pandas-2.2.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:99df71520d25fade9db7c1076ac94eb994f4d2673ef2aa2e86ee039b6746d20c\"},",
          "2735:     {file = \"pandas-2.2.3-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:7eee9e7cea6adf3e3d24e304ac6b8300646e2a5d1cd3a3c2abed9101b0846761\"},",
          "2736:     {file = \"pandas-2.2.3-cp39-cp39-win_amd64.whl\", hash = \"sha256:4850ba03528b6dd51d6c5d273c46f183f39a9baf3f0143e566b89450965b105e\"},",
          "2737:     {file = \"pandas-2.2.3.tar.gz\", hash = \"sha256:4f18ba62b61d7e192368b84517265a99b4d7ee8912f8708660fb4a366cc82667\"},",
          "",
          "[Removed Lines]",
          "2700:     {file = \"pandas-2.2.3-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:b8661b0238a69d7aafe156b7fa86c44b881387509653fdf857bebc5e4008ad42\"},",
          "2705:     {file = \"pandas-2.2.3-cp311-cp311-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:cd8d0c3be0515c12fed0bdbae072551c8b54b7192c7b1fda0ba56059a0179698\"},",
          "2707:     {file = \"pandas-2.2.3-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:63cc132e40a2e084cf01adf0775b15ac515ba905d7dcca47e9a251819c575ef3\"},",
          "2712:     {file = \"pandas-2.2.3-cp312-cp312-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:5de54125a92bb4d1c051c0659e6fcb75256bf799a732a87184e5ea503965bce3\"},",
          "2714:     {file = \"pandas-2.2.3-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:6dfcb5ee8d4d50c06a51c2fffa6cff6272098ad6540aed1a76d15fb9318194d8\"},",
          "2719:     {file = \"pandas-2.2.3-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:22a9d949bfc9a502d320aa04e5d02feab689d61da4e7764b62c30b991c42c5f0\"},",
          "2721:     {file = \"pandas-2.2.3-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:800250ecdadb6d9c78eae4990da62743b857b470883fa27f652db8bdde7f6659\"},",
          "2726:     {file = \"pandas-2.2.3-cp313-cp313t-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:ba96630bc17c875161df3818780af30e43be9b166ce51c9a18c1feae342906c2\"},",
          "2728:     {file = \"pandas-2.2.3-cp313-cp313t-musllinux_1_2_aarch64.whl\", hash = \"sha256:15c0e1e02e93116177d29ff83e8b1619c93ddc9c49083f237d4312337a61165d\"},",
          "2732:     {file = \"pandas-2.2.3-cp39-cp39-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:8cd6d7cc958a3910f934ea8dbdf17b2364827bb4dafc38ce6eef6bb3d65ff09c\"},",
          "2734:     {file = \"pandas-2.2.3-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:31d0ced62d4ea3e231a9f228366919a5ea0b07440d9d4dac345376fd8e1477ea\"},",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "4900: [metadata]",
          "4901: lock-version = \"2.0\"",
          "4902: python-versions = \">=3.9,<4.0\"",
          "",
          "[Removed Lines]",
          "4903: content-hash = \"7d093bafda2acfc3eae68b365b8a9d3801ad77d6cd47aa8dd3cb8298e3168cb3\"",
          "",
          "[Added Lines]",
          "4892: content-hash = \"ddb83a185d3085f621e322466f84f4ec1f819db04978c843b083f46b008b53d7\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}