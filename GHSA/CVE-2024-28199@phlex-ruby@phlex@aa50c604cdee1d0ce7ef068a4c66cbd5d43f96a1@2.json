{
  "cve_id": "CVE-2024-28199",
  "cve_desc": "phlex is an open source framework for building object-oriented views in Ruby. There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data. This was due to improper case-sensitivity in the code that was meant to prevent these attacks. If you render an `<a>` tag with an `href` attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user. If you splat user-provided attributes when rendering any HTML tag, malicious event attributes could be included in the output, executing JavaScript when the events are triggered by another user. Patches are available on RubyGems for all 1.x minor versions. Users are advised to upgrade. Users unable to upgrade should consider configuring a content security policy that does not allow `unsafe-inline`.",
  "repo": "phlex-ruby/phlex",
  "patch_hash": "aa50c604cdee1d0ce7ef068a4c66cbd5d43f96a1",
  "patch_info": {
    "commit_hash": "aa50c604cdee1d0ce7ef068a4c66cbd5d43f96a1",
    "repo": "phlex-ruby/phlex",
    "commit_url": "https://github.com/phlex-ruby/phlex/commit/aa50c604cdee1d0ce7ef068a4c66cbd5d43f96a1",
    "files": [
      "lib/phlex/sgml.rb",
      "test/phlex/view/naughty_business.rb"
    ],
    "message": "Fix improper case-sensitivity\n\nSee https://github.com/phlex-ruby/phlex/security/advisories/GHSA-242p-4v39-2v8g",
    "before_after_code_files": [
      "lib/phlex/sgml.rb||lib/phlex/sgml.rb",
      "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb"
    ]
  },
  "patch_diff": {
    "lib/phlex/sgml.rb||lib/phlex/sgml.rb": [
      "File: lib/phlex/sgml.rb -> lib/phlex/sgml.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "393:     attributes = process_attributes(**attributes)",
      "394:    end",
      "404:    buffer = +\"\"",
      "405:    __build_attributes__(attributes, buffer: buffer)",
      "",
      "[Removed Lines]",
      "396:    if attributes[:href]&.start_with?(/\\s*javascript:/)",
      "397:     attributes.delete(:href)",
      "398:    end",
      "400:    if attributes[\"href\"]&.start_with?(/\\s*javascript:/)",
      "401:     attributes.delete(\"href\")",
      "402:    end",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "418:      else raise ArgumentError, \"Attribute keys should be Strings or Symbols.\"",
      "419:     end",
      "421:     # Detect unsafe attribute names. Attribute names are considered unsafe if they match an event attribute or include unsafe characters.",
      "423:      raise ArgumentError, \"Unsafe attribute name detected: #{k}.\"",
      "424:     end",
      "",
      "[Removed Lines]",
      "422:     if HTML::EVENT_ATTRIBUTES[name] || name.match?(/[<>&\"']/)",
      "",
      "[Added Lines]",
      "413:     lower_name = name.downcase",
      "414:     next if lower_name == \"href\" && v.start_with?(/\\s*javascript:/i)",
      "417:     if HTML::EVENT_ATTRIBUTES[lower_name] || name.match?(/[<>&\"']/)",
      "",
      "---------------"
    ],
    "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb": [
      "File: test/phlex/view/naughty_business.rb -> test/phlex/view/naughty_business.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "3: describe Phlex::HTML do",
      "4:  extend ViewHelper",
      "6:  with \"naughty text\" do",
      "7:   view do",
      "8:    def view_template",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6:  with \"naughty javascript links\" do",
      "7:   view do",
      "8:    def template",
      "9:     a(href: \"javascript:alert(1)\") { \"a\" }",
      "10:     a(href: \"JAVASCRIPT:alert(1)\") { \"b\" }",
      "11:     a(href: :\"JAVASCRIPT:alert(1)\") { \"c\" }",
      "12:     a(HREF: \"javascript:alert(1)\") { \"d\" }",
      "13:    end",
      "14:   end",
      "16:   it \"removes the href attributes\" do",
      "17:    expect(output).to be == \"<a>a</a><a>b</a><a>c</a><a>d</a>\"",
      "18:   end",
      "19:  end",
      "21:  with \"naughty uppercase event tag\" do",
      "22:   view do",
      "23:    def template",
      "24:     button ONCLICK: \"ALERT(1)\" do",
      "25:      \"naughty button\"",
      "26:     end",
      "27:    end",
      "28:   end",
      "30:   it \"raises\" do",
      "31:    expect { output }.to raise_exception ArgumentError,",
      "32:     message: be == \"Unsafe attribute name detected: ONCLICK.\"",
      "33:   end",
      "34:  end",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d27e2447aba193ae524698c2ba91a0c36914b806",
      "candidate_info": {
        "commit_hash": "d27e2447aba193ae524698c2ba91a0c36914b806",
        "repo": "phlex-ruby/phlex",
        "commit_url": "https://github.com/phlex-ruby/phlex/commit/d27e2447aba193ae524698c2ba91a0c36914b806",
        "files": [
          ".ruby-version",
          ".tool-versions",
          "lib/phlex/sgml.rb",
          "lib/phlex/sgml/safe_object.rb",
          "lib/phlex/sgml/safe_value.rb",
          "quickdraw/sgml/safe_value.test.rb",
          "test/phlex/view/raw.rb"
        ],
        "message": "Safe values (#772)\n\n- Remove `Phlex::SGML#unsafe_raw`\n- Add `Phlex::SGML#safe` which creates a `Phlex::SGML::SafeValue`\n- Add `Phlex::SGML::SafeObject` a generic interface for safe objects,\nwhich `Phlex::SGML::SafeValue` implements\n- Add `Phlex::SGML#raw`, which takes a SafeObject\n- Update `__attributes__` to allow the use of unsafe attribute names\nwhen the values are SafeObjects.\n\nExample\n```ruby\ndef view_template\n  raw \ud83e\uddba \"<script>\"\n  a href: \ud83e\uddba \"javascript:alert(1)\"\n  a onclick: \ud83e\uddba \"alert(1)\"\nend\n```\n\nThanks @bradgessler for writing the original implementation of this PR.\n#719\n\nCloses #718",
        "before_after_code_files": [
          "lib/phlex/sgml.rb||lib/phlex/sgml.rb",
          "lib/phlex/sgml/safe_object.rb||lib/phlex/sgml/safe_object.rb",
          "lib/phlex/sgml/safe_value.rb||lib/phlex/sgml/safe_value.rb",
          "quickdraw/sgml/safe_value.test.rb||quickdraw/sgml/safe_value.test.rb",
          "test/phlex/view/unsafe_raw.rb||test/phlex/view/raw.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/phlex/sgml.rb||lib/phlex/sgml.rb"
          ],
          "candidate": [
            "lib/phlex/sgml.rb||lib/phlex/sgml.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/phlex/sgml.rb||lib/phlex/sgml.rb": [
          "File: lib/phlex/sgml.rb -> lib/phlex/sgml.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: # **Standard Generalized Markup Language** for behaviour common to {HTML} and {SVG}.",
          "4: class Phlex::SGML",
          "5:  include Phlex::Helpers",
          "7:  class << self",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5:  autoload :SafeObject, \"phlex/sgml/safe_object\"",
          "6:  autoload :SafeValue, \"phlex/sgml/safe_value\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "188:  # This method is very dangerous and should usually be avoided. It will output the given String without any HTML safety. You should never use this method to output unsafe user input.",
          "189:  # @param content [String|nil]",
          "190:  # @return [nil]",
          "198:   nil",
          "199:  end",
          "",
          "[Removed Lines]",
          "191:  def unsafe_raw(content = nil)",
          "192:   return nil unless content",
          "194:   context = @_context",
          "195:   return if context.fragments && !context.in_target_fragment",
          "197:   context.buffer << content",
          "",
          "[Added Lines]",
          "194:  def raw(content)",
          "195:   case content",
          "196:   when Phlex::SGML::SafeObject",
          "197:    context = @_context",
          "198:    return if context.fragments && !context.in_target_fragment",
          "200:    context.buffer << content.to_s",
          "201:   when nil # do nothing",
          "202:   else",
          "203:    raise Phlex::ArgumentError.new(\"You passed an unsafe object to `raw`.\")",
          "204:   end",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "229:   end",
          "230:  end",
          "244:  end",
          "246:  private",
          "248:  # @api private",
          "",
          "[Removed Lines]",
          "232:  def unsafe_tag(name, ...)",
          "233:   normalized_name = case name",
          "234:    when Symbol then name.name.downcase",
          "235:    when String then name.downcase",
          "236:    else raise Phlex::ArgumentError.new(\"Expected the tag name as a Symbol or String.\")",
          "237:   end",
          "239:   if registered_elements[normalized_name]",
          "240:    public_send(normalized_name, ...)",
          "241:   else",
          "242:    raise Phlex::ArgumentError.new(\"Unknown tag: #{normalized_name}\")",
          "243:   end",
          "",
          "[Added Lines]",
          "240:  def safe(value)",
          "241:   Phlex::SGML::SafeValue.new(value)",
          "244:  alias_method :\ud83e\uddba, :safe",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "425:    end",
          "427:    lower_name = name.downcase",
          "432:     raise Phlex::ArgumentError.new(\"Unsafe attribute name detected: #{k}.\")",
          "433:    end",
          "",
          "[Removed Lines]",
          "428:    next if lower_name == \"href\" && v.to_s.downcase.delete(\"^a-z:\").start_with?(\"javascript:\")",
          "430:    # Detect unsafe attribute names. Attribute names are considered unsafe if they match an event attribute or include unsafe characters.",
          "431:    if Phlex::HTML::EVENT_ATTRIBUTES.include?(lower_name.delete(\"^a-z-\")) || name.match?(/[<>&\"']/)",
          "",
          "[Added Lines]",
          "429:    unless Phlex::SGML::SafeObject === v",
          "430:     if lower_name == \"href\" && v.to_s.downcase.delete(\"^a-z:\").start_with?(\"javascript:\")",
          "431:      next",
          "432:     end",
          "434:     # Detect unsafe attribute names. Attribute names are considered unsafe if they match an event attribute or include unsafe characters.",
          "435:     if Phlex::HTML::EVENT_ATTRIBUTES.include?(lower_name.delete(\"^a-z-\"))",
          "436:      raise Phlex::ArgumentError.new(\"Unsafe attribute name detected: #{k}.\")",
          "437:     end",
          "438:    end",
          "440:    if name.match?(/[<>&\"']/)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "467:     buffer << \" \" << name << '=\"' << value.gsub('\"', \"&quot;\") << '\"'",
          "468:    when Set",
          "469:     buffer << \" \" << name << '=\"' << __nested_tokens__(v.to_a) << '\"'",
          "470:    else",
          "471:     value = if v.respond_to?(:to_phlex_attribute_value)",
          "472:      v.to_phlex_attribute_value",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "479:    when Phlex::SGML::SafeObject",
          "480:     buffer << \" \" << name << '=\"' << v.to_s.gsub('\"', \"&quot;\") << '\"'",
          "",
          "---------------"
        ],
        "lib/phlex/sgml/safe_object.rb||lib/phlex/sgml/safe_object.rb": [
          "File: lib/phlex/sgml/safe_object.rb -> lib/phlex/sgml/safe_object.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # frozen_string_literal: true",
          "3: # @api private",
          "4: module Phlex::SGML::SafeObject",
          "5:  # This is included in objects that are safe to render in an SGML context.",
          "6:  # They must implement a `to_s` method that returns a string.",
          "7: end",
          "",
          "---------------"
        ],
        "lib/phlex/sgml/safe_value.rb||lib/phlex/sgml/safe_value.rb": [
          "File: lib/phlex/sgml/safe_value.rb -> lib/phlex/sgml/safe_value.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # frozen_string_literal: true",
          "3: class Phlex::SGML::SafeValue",
          "4:  include Phlex::SGML::SafeObject",
          "6:  def initialize(to_s)",
          "7:   @to_s = to_s",
          "8:  end",
          "10:  attr_reader :to_s",
          "11: end",
          "",
          "---------------"
        ],
        "quickdraw/sgml/safe_value.test.rb||quickdraw/sgml/safe_value.test.rb": [
          "File: quickdraw/sgml/safe_value.test.rb -> quickdraw/sgml/safe_value.test.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # frozen_string_literal: true",
          "3: class Example < Phlex::HTML",
          "4:  def view_template",
          "5:   a(",
          "6:    onclick: safe(\"window.history.back()\"),",
          "7:    href: safe(\"javascript:window.history.back()\"),",
          "8:   )",
          "9:  end",
          "10: end",
          "12: test \"safe value\" do",
          "13:  expect(Example.call) == %(<a onclick=\"window.history.back()\" href=\"javascript:window.history.back()\"></a>)",
          "14: end",
          "",
          "---------------"
        ],
        "test/phlex/view/unsafe_raw.rb||test/phlex/view/raw.rb": [
          "File: test/phlex/view/unsafe_raw.rb -> test/phlex/view/raw.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: describe Phlex::HTML do",
          "4:  extend ViewHelper",
          "7:   view do",
          "8:    def view_template",
          "10:    end",
          "11:   end",
          "",
          "[Removed Lines]",
          "6:  with \"raw content\" do",
          "9:     unsafe_raw %(<h1 class=\"test\">Hello</h1>)",
          "",
          "[Added Lines]",
          "6:  with \"raw unsafe content\" do",
          "9:     raw %(<h1 class=\"test\">Hello</h1>)",
          "10:    end",
          "11:   end",
          "13:   it \"renders the correct output\" do",
          "14:    expect { output }.to raise_exception ArgumentError",
          "15:   end",
          "16:  end",
          "18:  with \"raw safe content\" do",
          "19:   view do",
          "20:    def view_template",
          "21:     raw safe %(<h1 class=\"test\">Hello</h1>)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "18:  with \"nil content\" do",
          "19:   view do",
          "20:    def view_template",
          "22:    end",
          "23:   end",
          "",
          "[Removed Lines]",
          "21:     unsafe_raw nil",
          "",
          "[Added Lines]",
          "33:     raw nil",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "da8f94342a84cff9d78c98bcc3b3604ee2e577d2",
      "candidate_info": {
        "commit_hash": "da8f94342a84cff9d78c98bcc3b3604ee2e577d2",
        "repo": "phlex-ruby/phlex",
        "commit_url": "https://github.com/phlex-ruby/phlex/commit/da8f94342a84cff9d78c98bcc3b3604ee2e577d2",
        "files": [
          ".gitignore",
          ".rubocop.yml",
          "Gemfile",
          "browser_tests.rb",
          "fixtures/xss.txt",
          "fixtures/xss/LICENSE.txt",
          "lib/phlex/sgml.rb",
          "phlex.gemspec"
        ],
        "message": "Browser tests for XSS",
        "before_after_code_files": [
          "browser_tests.rb||browser_tests.rb",
          "lib/phlex/sgml.rb||lib/phlex/sgml.rb",
          "phlex.gemspec||phlex.gemspec"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/phlex/sgml.rb||lib/phlex/sgml.rb"
          ],
          "candidate": [
            "lib/phlex/sgml.rb||lib/phlex/sgml.rb"
          ]
        }
      },
      "candidate_diff": {
        "browser_tests.rb||browser_tests.rb": [
          "File: browser_tests.rb -> browser_tests.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #!/usr/bin/env ruby",
          "2: # frozen_string_literal: true",
          "4: require \"phlex\"",
          "5: require \"selenium-webdriver\"",
          "7: ASCII_CHARS = (0..127).to_set(&:chr)",
          "9: class Layout < Phlex::HTML",
          "10:  def view_template(&block)",
          "11:   doctype",
          "12:   html do",
          "13:    head do",
          "14:     meta(charset: \"utf-8\")",
          "15:    end",
          "17:    body(&block)",
          "18:   end",
          "19:  end",
          "20: end",
          "22: class JavaScriptLinks < Phlex::HTML",
          "23:  def initialize(char)",
          "24:   @char = char",
          "25:  end",
          "27:  def view_template",
          "28:   render Layout do",
          "29:    # Standard JavaScript link",
          "30:    a(href: \"javascript:alert(1)\") { \"x\" }",
          "32:    # With capitalization",
          "33:    a(href: \"Javascript:alert(1)\") { \"x\" }",
          "35:    # With extra \"javascript:\" prefixes",
          "36:    a(href: \"javascript:javascript:alert(1)\") { \"x\" }",
          "37:    a(href: \"javascript:javascript:javascript:alert(1)\") { \"x\" }",
          "39:    # With extra \"javascript:\" prefixes and capitalization",
          "40:    a(href: \"javascript:Javascript:alert(1)\") { \"x\" }",
          "41:    a(href: \"Javascript:javascript:alert(1)\") { \"x\" }",
          "43:    a(href: \"#{@char}javascript:alert(1)\") { \"x\" }",
          "44:    a(href: \"j#{@char}avascript:alert(1)\") { \"x\" }",
          "45:    a(href: \"ja#{@char}vascript:alert(1)\") { \"x\" }",
          "46:    a(href: \"jav#{@char}ascript:alert(1)\") { \"x\" }",
          "47:    a(href: \"java#{@char}script:alert(1)\") { \"x\" }",
          "48:    a(href: \"javas#{@char}cript:alert(1)\") { \"x\" }",
          "49:    a(href: \"javasc#{@char}ript:alert(1)\") { \"x\" }",
          "50:    a(href: \"javascr#{@char}ipt:alert(1)\") { \"x\" }",
          "51:    a(href: \"javascr#{@char}ipt:alert(1)\") { \"x\" }",
          "52:    a(href: \"javascri#{@char}pt:alert(1)\") { \"x\" }",
          "53:    a(href: \"javascrip#{@char}t:alert(1)\") { \"x\" }",
          "54:    a(href: \"javascript#{@char}:alert(1)\") { \"x\" }",
          "55:    a(href: \"javascript:#{@char}alert(1)\") { \"x\" }",
          "57:    a(href: \"#{@char}#{@char}javascript:alert(1)\") { \"x\" }",
          "58:    a(href: \"j#{@char}#{@char}avascript:alert(1)\") { \"x\" }",
          "59:    a(href: \"ja#{@char}#{@char}vascript:alert(1)\") { \"x\" }",
          "60:    a(href: \"jav#{@char}#{@char}ascript:alert(1)\") { \"x\" }",
          "61:    a(href: \"java#{@char}#{@char}script:alert(1)\") { \"x\" }",
          "62:    a(href: \"javas#{@char}#{@char}cript:alert(1)\") { \"x\" }",
          "63:    a(href: \"javasc#{@char}#{@char}ript:alert(1)\") { \"x\" }",
          "64:    a(href: \"javascr#{@char}#{@char}ipt:alert(1)\") { \"x\" }",
          "65:    a(href: \"javascr#{@char}#{@char}ipt:alert(1)\") { \"x\" }",
          "66:    a(href: \"javascri#{@char}#{@char}pt:alert(1)\") { \"x\" }",
          "67:    a(href: \"javascrip#{@char}#{@char}t:alert(1)\") { \"x\" }",
          "68:    a(href: \"javascript#{@char}#{@char}:alert(1)\") { \"x\" }",
          "69:    a(href: \"javascript:#{@char}#{@char}alert(1)\") { \"x\" }",
          "71:    a(href: \"#{@char}Javascript:alert(1)\") { \"x\" }",
          "72:    a(href: \"J#{@char}avascript:alert(1)\") { \"x\" }",
          "73:    a(href: \"Ja#{@char}vascript:alert(1)\") { \"x\" }",
          "74:    a(href: \"Jav#{@char}ascript:alert(1)\") { \"x\" }",
          "75:    a(href: \"Java#{@char}script:alert(1)\") { \"x\" }",
          "76:    a(href: \"Javas#{@char}cript:alert(1)\") { \"x\" }",
          "77:    a(href: \"Javasc#{@char}ript:alert(1)\") { \"x\" }",
          "78:    a(href: \"Javascr#{@char}ipt:alert(1)\") { \"x\" }",
          "79:    a(href: \"Javascr#{@char}ipt:alert(1)\") { \"x\" }",
          "80:    a(href: \"Javascri#{@char}pt:alert(1)\") { \"x\" }",
          "81:    a(href: \"Javascrip#{@char}t:alert(1)\") { \"x\" }",
          "82:    a(href: \"Javascript#{@char}:alert(1)\") { \"x\" }",
          "83:    a(href: \"Javascript:#{@char}alert(1)\") { \"x\" }",
          "85:    a(href: \"#{@char}#{@char}Javascript:alert(1)\") { \"x\" }",
          "86:    a(href: \"J#{@char}#{@char}avascript:alert(1)\") { \"x\" }",
          "87:    a(href: \"Ja#{@char}#{@char}vascript:alert(1)\") { \"x\" }",
          "88:    a(href: \"Jav#{@char}#{@char}ascript:alert(1)\") { \"x\" }",
          "89:    a(href: \"Java#{@char}#{@char}script:alert(1)\") { \"x\" }",
          "90:    a(href: \"Javas#{@char}#{@char}cript:alert(1)\") { \"x\" }",
          "91:    a(href: \"Javasc#{@char}#{@char}ript:alert(1)\") { \"x\" }",
          "92:    a(href: \"Javascr#{@char}#{@char}ipt:alert(1)\") { \"x\" }",
          "93:    a(href: \"Javascr#{@char}#{@char}ipt:alert(1)\") { \"x\" }",
          "94:    a(href: \"Javascri#{@char}#{@char}pt:alert(1)\") { \"x\" }",
          "95:    a(href: \"Javascrip#{@char}#{@char}t:alert(1)\") { \"x\" }",
          "96:    a(href: \"Javascript#{@char}#{@char}:alert(1)\") { \"x\" }",
          "97:    a(href: \"Javascript:#{@char}#{@char}alert(1)\") { \"x\" }",
          "98:   end",
          "99:  end",
          "100: end",
          "102: class XSSWithStrings < Phlex::HTML",
          "103:  def view_template",
          "104:   render Layout do",
          "105:    File.open(\"fixtures/xss.txt\") do |file|",
          "106:     file.each_line do |line|",
          "107:      div(class: line) { line }",
          "108:     end",
          "109:    end",
          "110:   end",
          "111:  end",
          "112: end",
          "114: class XSSWithSymbols < Phlex::HTML",
          "115:  def view_template",
          "116:   render Layout do",
          "117:    File.open(\"fixtures/xss.txt\") do |file|",
          "118:     file.each_line do |line|",
          "119:      div(class: line.to_sym) { line.to_sym }",
          "120:     end",
          "121:    end",
          "122:   end",
          "123:  end",
          "124: end",
          "126: class OnClick < Phlex::HTML",
          "127:  def initialize(char)",
          "128:   @char = char",
          "129:  end",
          "131:  def view_template",
          "132:   render Layout do",
          "133:    ignore_warnings { div(\"#{@char}onclick\" => \"alert(1)\") { \"x\" } }",
          "134:    ignore_warnings { div(\"o#{@char}nclick\" => \"alert(1)\") { \"x\" } }",
          "135:    ignore_warnings { div(\"on#{@char}click\" => \"alert(1)\") { \"x\" } }",
          "136:    ignore_warnings { div(\"onc#{@char}lick\" => \"alert(1)\") { \"x\" } }",
          "137:    ignore_warnings { div(\"oncl#{@char}ick\" => \"alert(1)\") { \"x\" } }",
          "138:    ignore_warnings { div(\"oncli#{@char}ck\" => \"alert(1)\") { \"x\" } }",
          "139:    ignore_warnings { div(\"onclic#{@char}k\" => \"alert(1)\") { \"x\" } }",
          "140:    ignore_warnings { div(\"onclick#{@char}\" => \"alert(1)\") { \"x\" } }",
          "142:    ignore_warnings { div(\"#{@char}#{@char}onclick\" => \"alert(1)\") { \"x\" } }",
          "143:    ignore_warnings { div(\"o#{@char}#{@char}nclick\" => \"alert(1)\") { \"x\" } }",
          "144:    ignore_warnings { div(\"on#{@char}#{@char}click\" => \"alert(1)\") { \"x\" } }",
          "145:    ignore_warnings { div(\"onc#{@char}#{@char}lick\" => \"alert(1)\") { \"x\" } }",
          "146:    ignore_warnings { div(\"oncl#{@char}#{@char}ick\" => \"alert(1)\") { \"x\" } }",
          "147:    ignore_warnings { div(\"oncli#{@char}#{@char}ck\" => \"alert(1)\") { \"x\" } }",
          "148:    ignore_warnings { div(\"onclic#{@char}#{@char}k\" => \"alert(1)\") { \"x\" } }",
          "149:    ignore_warnings { div(\"onclick#{@char}#{@char}\" => \"alert(1)\") { \"x\" } }",
          "151:    ignore_warnings { div(\"#{@char}onclick\": \"alert(1)\") { \"x\" } }",
          "152:    ignore_warnings { div(\"o#{@char}nclick\": \"alert(1)\") { \"x\" } }",
          "153:    ignore_warnings { div(\"on#{@char}click\": \"alert(1)\") { \"x\" } }",
          "154:    ignore_warnings { div(\"onc#{@char}lick\": \"alert(1)\") { \"x\" } }",
          "155:    ignore_warnings { div(\"oncl#{@char}ick\": \"alert(1)\") { \"x\" } }",
          "156:    ignore_warnings { div(\"oncli#{@char}ck\": \"alert(1)\") { \"x\" } }",
          "157:    ignore_warnings { div(\"onclic#{@char}k\": \"alert(1)\") { \"x\" } }",
          "158:    ignore_warnings { div(\"onclick#{@char}\": \"alert(1)\") { \"x\" } }",
          "160:    ignore_warnings { div(\"#{@char}#{@char}onclick\": \"alert(1)\") { \"x\" } }",
          "161:    ignore_warnings { div(\"o#{@char}#{@char}nclick\": \"alert(1)\") { \"x\" } }",
          "162:    ignore_warnings { div(\"on#{@char}#{@char}click\": \"alert(1)\") { \"x\" } }",
          "163:    ignore_warnings { div(\"onc#{@char}#{@char}lick\": \"alert(1)\") { \"x\" } }",
          "164:    ignore_warnings { div(\"oncl#{@char}#{@char}ick\": \"alert(1)\") { \"x\" } }",
          "165:    ignore_warnings { div(\"oncli#{@char}#{@char}ck\": \"alert(1)\") { \"x\" } }",
          "166:    ignore_warnings { div(\"onclic#{@char}#{@char}k\": \"alert(1)\") { \"x\" } }",
          "167:    ignore_warnings { div(\"onclick#{@char}#{@char}\": \"alert(1)\") { \"x\" } }",
          "168:   end",
          "169:  end",
          "171:  def ignore_warnings",
          "172:   yield",
          "173:  rescue ArgumentError",
          "174:   # ignore",
          "175:  end",
          "176: end",
          "178: class Browser",
          "179:  MUTEX = { safari: Mutex.new, chrome: Mutex.new, firefox: Mutex.new }",
          "181:  def self.open(driver)",
          "182:   MUTEX.fetch(driver).synchronize do",
          "183:    browser = new(Selenium::WebDriver.for(driver))",
          "184:    yield(browser)",
          "185:    browser.quit",
          "186:   end",
          "187:  end",
          "189:  def self.open_each",
          "190:   [:safari, :chrome, :firefox].map do |driver|",
          "191:    Thread.new do",
          "192:     self.open(driver) do |browser|",
          "193:      yield(browser)",
          "194:     end",
          "195:    end",
          "196:   end.each(&:join)",
          "197:  end",
          "199:  def initialize(driver)",
          "200:   @driver = driver",
          "201:  end",
          "203:  attr_reader :driver",
          "205:  def load_string(string)",
          "206:   navigate_to(\"data:text/html,#{ERB::Util.url_encode(string)}\")",
          "207:  end",
          "209:  def navigate_to(url)",
          "210:   @driver.navigate.to(url)",
          "211:  end",
          "213:  def execute_script(script)",
          "214:   @driver.execute_script(script)",
          "215:  end",
          "217:  def each_alert",
          "218:   while (next_alert = alert)",
          "219:    yield(next_alert)",
          "220:   end",
          "221:  end",
          "223:  def alert",
          "224:   @driver.switch_to.alert",
          "225:  rescue Selenium::WebDriver::Error::NoSuchAlertError",
          "226:   nil",
          "227:  end",
          "229:  def quit",
          "230:   @driver.quit",
          "231:  end",
          "232: end",
          "234: Browser.open_each do |browser|",
          "235:  ASCII_CHARS.each do |char|",
          "236:   browser.load_string(JavaScriptLinks.new(char).call)",
          "237:   browser.execute_script(\"document.querySelectorAll('a').forEach(function(a) { a.click(); });\")",
          "238:   browser.each_alert do |alert|",
          "239:    unless alert.text == \"Safari cannot open the page because the address is invalid.\"",
          "240:     raise \"Failed with #{char.codepoints}\"",
          "241:    end",
          "243:    alert.accept",
          "244:   end",
          "246:   browser.load_string(OnClick.new(char).call)",
          "247:   browser.execute_script(\"document.querySelectorAll('div').forEach(function(div) { div.click(); });\")",
          "248:   browser.each_alert do",
          "249:    raise \"Failed with #{char.codepoints}\"",
          "250:   end",
          "251:  end",
          "253:  browser.load_string(XSSWithStrings.new.call)",
          "254:  browser.execute_script(\"document.querySelectorAll('div').forEach(function(div) { div.click(); });\")",
          "256:  if browser.alert",
          "257:   raise \"Failed with strings\"",
          "258:  end",
          "260:  browser.load_string(XSSWithSymbols.new.call)",
          "261:  browser.execute_script(\"document.querySelectorAll('div').forEach(function(div) { div.click(); });\")",
          "263:  if browser.alert",
          "264:   raise \"Failed with symbols\"",
          "265:  end",
          "266: end",
          "",
          "---------------"
        ],
        "lib/phlex/sgml.rb||lib/phlex/sgml.rb": [
          "File: lib/phlex/sgml.rb -> lib/phlex/sgml.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "382:     end",
          "384:     lower_name = name.downcase",
          "387:     # Detect unsafe attribute names. Attribute names are considered unsafe if they match an event attribute or include unsafe characters.",
          "389:      raise ArgumentError, \"Unsafe attribute name detected: #{k}.\"",
          "390:     end",
          "",
          "[Removed Lines]",
          "385:     next if lower_name == \"href\" && v.to_s.downcase.tr(\"\\t \\n\", \"\").start_with?(\"javascript:\")",
          "388:     if HTML::EVENT_ATTRIBUTES.include?(lower_name) || name.match?(/[<>&\"']/)",
          "",
          "[Added Lines]",
          "385:     next if lower_name == \"href\" && v.to_s.downcase.tr(\"^a-z:\", \"\").start_with?(\"javascript:\")",
          "388:     if HTML::EVENT_ATTRIBUTES.include?(lower_name.tr(\"^a-z-\", \"\")) || name.match?(/[<>&\"']/)",
          "",
          "---------------"
        ],
        "phlex.gemspec||phlex.gemspec": [
          "File: phlex.gemspec -> phlex.gemspec",
          "--- Hunk 1 ---",
          "[Context before]",
          "19:  spec.metadata[\"changelog_uri\"] = \"https://github.com/phlex-ruby/phlex/blob/main/CHANGELOG.md\"",
          "20:  spec.metadata[\"funding_uri\"] = \"https://github.com/sponsors/joeldrapper\"",
          "29:  spec.require_paths = [\"lib\"]",
          "31:  spec.metadata[\"rubygems_mfa_required\"] = \"true\"",
          "",
          "[Removed Lines]",
          "22:  # Specify which files should be added to the gem when it is released.",
          "23:  # The `git ls-files -z` loads the files in the RubyGem that have been added into git.",
          "24:  spec.files = Dir.chdir(File.expand_path(__dir__)) do",
          "25:   `git ls-files -z`.split(\"\\x0\").reject do |f|",
          "26:    (f == __FILE__) || f.match(%r{\\A(?:(?:bin|test|spec|features|quickdraw)/|\\.(?:git|travis|circleci)|appveyor)})",
          "27:   end",
          "28:  end",
          "",
          "[Added Lines]",
          "22:  spec.files = Dir[",
          "23:   \"README.md\",",
          "24:   \"LICENSE.txt\",",
          "25:   \"lib/**/*.rb\"",
          "26:  ]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ffd0e51fce143cc4e4fbc63ea028a1369c13d255",
      "candidate_info": {
        "commit_hash": "ffd0e51fce143cc4e4fbc63ea028a1369c13d255",
        "repo": "phlex-ruby/phlex",
        "commit_url": "https://github.com/phlex-ruby/phlex/commit/ffd0e51fce143cc4e4fbc63ea028a1369c13d255",
        "files": [
          ".github/workflows/ci.yml",
          ".rubocop.yml",
          "lib/phlex.rb",
          "lib/phlex/helpers.rb",
          "lib/phlex/sgml.rb",
          "lib/phlex/testing/view_helper.rb",
          "phlex.gemspec",
          "test/phlex/kit.rb",
          "test/phlex/view/capture.rb"
        ],
        "message": "Support 3.2+",
        "before_after_code_files": [
          "lib/phlex.rb||lib/phlex.rb",
          "lib/phlex/helpers.rb||lib/phlex/helpers.rb",
          "lib/phlex/sgml.rb||lib/phlex/sgml.rb",
          "lib/phlex/testing/view_helper.rb||lib/phlex/testing/view_helper.rb",
          "phlex.gemspec||phlex.gemspec",
          "test/phlex/kit.rb||test/phlex/kit.rb",
          "test/phlex/view/capture.rb||test/phlex/view/capture.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/phlex/sgml.rb||lib/phlex/sgml.rb"
          ],
          "candidate": [
            "lib/phlex/sgml.rb||lib/phlex/sgml.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/phlex.rb||lib/phlex.rb": [
          "File: lib/phlex.rb -> lib/phlex.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:  # @api private",
          "43:  ATTRIBUTE_CACHE = {}",
          "46: end",
          "48: if Gem::Version.new(RUBY_VERSION) < Gem::Version.new(\"3.0\")",
          "",
          "[Removed Lines]",
          "45:  SUPPORTS_FIBER_STORAGE = Gem::Version.new(RUBY_VERSION) >= Gem::Version.new(\"3.2\")",
          "",
          "[Added Lines]",
          "45:  SUPPORTS_FIBER_STORAGE = RUBY_ENGINE == \"ruby\"",
          "",
          "---------------"
        ],
        "lib/phlex/helpers.rb||lib/phlex/helpers.rb": [
          "File: lib/phlex/helpers.rb -> lib/phlex/helpers.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # frozen_string_literal: true",
          "5: module Phlex::Helpers",
          "6:  private",
          "",
          "[Removed Lines]",
          "3: require \"set\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/phlex/sgml.rb||lib/phlex/sgml.rb": [
          "File: lib/phlex/sgml.rb -> lib/phlex/sgml.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "397:    end",
          "399:    buffer = +\"\"",
          "402:    buffer",
          "403:   end",
          "",
          "[Removed Lines]",
          "400:    __build_attributes__(attributes, buffer: buffer)",
          "",
          "[Added Lines]",
          "400:    __build_attributes__(attributes, buffer:)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "437:         when Symbol then\"#{name}-#{subkey.name.tr('_', '-')}\"",
          "438:         else \"#{name}-#{subkey}\"",
          "439:        end",
          "441:      )",
          "442:     when Array",
          "443:      buffer << \" \" << name << '=\"' << Phlex::Escape.html_escape(v.compact.join(\" \")) << '\"'",
          "",
          "[Removed Lines]",
          "440:       }, buffer: buffer",
          "",
          "[Added Lines]",
          "440:       }, buffer:",
          "",
          "---------------"
        ],
        "lib/phlex/testing/view_helper.rb||lib/phlex/testing/view_helper.rb": [
          "File: lib/phlex/testing/view_helper.rb -> lib/phlex/testing/view_helper.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:     view = view.new",
          "8:    end",
          "11:   end",
          "13:   def view_context",
          "",
          "[Removed Lines]",
          "10:    view.call(view_context: view_context, &block)",
          "",
          "[Added Lines]",
          "10:    view.call(view_context:, &block)",
          "",
          "---------------"
        ],
        "phlex.gemspec||phlex.gemspec": [
          "File: phlex.gemspec -> phlex.gemspec",
          "--- Hunk 1 ---",
          "[Context before]",
          "12:  spec.description = \"A high-performance view framework optimised for fun.\"",
          "13:  spec.homepage = \"https://www.phlex.fun\"",
          "14:  spec.license = \"MIT\"",
          "17:  spec.metadata[\"homepage_uri\"] = spec.homepage",
          "18:  spec.metadata[\"source_code_uri\"] = \"https://github.com/phlex-ruby/phlex\"",
          "",
          "[Removed Lines]",
          "15:  spec.required_ruby_version = \">= 2.7\"",
          "",
          "[Added Lines]",
          "15:  spec.required_ruby_version = \">= 3.2\"",
          "",
          "---------------"
        ],
        "test/phlex/kit.rb||test/phlex/kit.rb": [
          "File: test/phlex/kit.rb -> test/phlex/kit.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: end",
          "14: # This feature is only supported in Ruby 3.2 or later.",
          "16:  describe Phlex::Kit do",
          "17:   it \"raises when you try to render a component outside of a rendering context\" do",
          "18:    expect { Components::SayHi() }.to raise_exception(RuntimeError)",
          "",
          "[Removed Lines]",
          "15: if RUBY_VERSION >= \"3.2\"",
          "",
          "[Added Lines]",
          "15: if Phlex::SUPPORTS_FIBER_STORAGE",
          "",
          "---------------"
        ],
        "test/phlex/view/capture.rb||test/phlex/view/capture.rb": [
          "File: test/phlex/view/capture.rb -> test/phlex/view/capture.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "76:     def view_template",
          "77:      srcdoc = capture { yield } if block_given?",
          "80:     end",
          "81:    end",
          "82:   end",
          "",
          "[Removed Lines]",
          "79:      iframe srcdoc: srcdoc",
          "",
          "[Added Lines]",
          "79:      iframe srcdoc:",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4fcaec06879c07912c827d2a87eb7bd248bf4b28",
      "candidate_info": {
        "commit_hash": "4fcaec06879c07912c827d2a87eb7bd248bf4b28",
        "repo": "phlex-ruby/phlex",
        "commit_url": "https://github.com/phlex-ruby/phlex/commit/4fcaec06879c07912c827d2a87eb7bd248bf4b28",
        "files": [
          "fixtures/components/article.rb",
          "lib/phlex/csv.rb",
          "lib/phlex/element_clobbering_guard.rb",
          "lib/phlex/helpers.rb",
          "lib/phlex/kit.rb",
          "lib/phlex/sgml.rb",
          "lib/phlex/testing/view_helper.rb",
          "lib/phlex/unbuffered.rb",
          "quickdraw/csv.test.rb",
          "quickdraw/helpers/mix.test.rb",
          "quickdraw/sgml/attributes.test.rb",
          "quickdraw/sgml/render_enumerable.test.rb",
          "quickdraw/sgml/selective_rendering.test.rb",
          "quickdraw/sgml/tags.test.rb",
          "test/phlex/unbuffered.rb",
          "test/phlex/view/context.rb",
          "test/phlex/view/naughty_business.rb",
          "test/phlex/view/new.rb",
          "test/phlex/view/svg_tags.rb",
          "test/phlex/view/tokens.rb"
        ],
        "message": "Use new good cop rules",
        "before_after_code_files": [
          "fixtures/components/article.rb||fixtures/components/article.rb",
          "lib/phlex/csv.rb||lib/phlex/csv.rb",
          "lib/phlex/element_clobbering_guard.rb||lib/phlex/element_clobbering_guard.rb",
          "lib/phlex/helpers.rb||lib/phlex/helpers.rb",
          "lib/phlex/kit.rb||lib/phlex/kit.rb",
          "lib/phlex/sgml.rb||lib/phlex/sgml.rb",
          "lib/phlex/testing/view_helper.rb||lib/phlex/testing/view_helper.rb",
          "lib/phlex/unbuffered.rb||lib/phlex/unbuffered.rb",
          "quickdraw/csv.test.rb||quickdraw/csv.test.rb",
          "quickdraw/helpers/mix.test.rb||quickdraw/helpers/mix.test.rb",
          "quickdraw/sgml/attributes.test.rb||quickdraw/sgml/attributes.test.rb",
          "quickdraw/sgml/render_enumerable.test.rb||quickdraw/sgml/render_enumerable.test.rb",
          "quickdraw/sgml/selective_rendering.test.rb||quickdraw/sgml/selective_rendering.test.rb",
          "quickdraw/sgml/tags.test.rb||quickdraw/sgml/tags.test.rb",
          "test/phlex/unbuffered.rb||test/phlex/unbuffered.rb",
          "test/phlex/view/context.rb||test/phlex/view/context.rb",
          "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb",
          "test/phlex/view/new.rb||test/phlex/view/new.rb",
          "test/phlex/view/svg_tags.rb||test/phlex/view/svg_tags.rb",
          "test/phlex/view/tokens.rb||test/phlex/view/tokens.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/phlex/sgml.rb||lib/phlex/sgml.rb",
            "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb"
          ],
          "candidate": [
            "lib/phlex/sgml.rb||lib/phlex/sgml.rb",
            "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb"
          ]
        }
      },
      "candidate_diff": {
        "fixtures/components/article.rb||fixtures/components/article.rb": [
          "File: fixtures/components/article.rb -> fixtures/components/article.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # frozen_string_literal: true",
          "3: class Components::Article < Phlex::HTML",
          "6:  end",
          "7: end",
          "",
          "[Removed Lines]",
          "4:  def view_template(&block)",
          "5:   article(&block)",
          "",
          "[Added Lines]",
          "4:  def view_template(&)",
          "5:   article(&)",
          "",
          "---------------"
        ],
        "lib/phlex/csv.rb||lib/phlex/csv.rb": [
          "File: lib/phlex/csv.rb -> lib/phlex/csv.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "84:   @_current_column_index += 1",
          "85:  end",
          "89:  end",
          "91:  def yielder(record)",
          "",
          "[Removed Lines]",
          "87:  def each_item(&block)",
          "88:   collection.each(&block)",
          "",
          "[Added Lines]",
          "87:  def each_item(&)",
          "88:   collection.each(&)",
          "",
          "---------------"
        ],
        "lib/phlex/element_clobbering_guard.rb||lib/phlex/element_clobbering_guard.rb": [
          "File: lib/phlex/element_clobbering_guard.rb -> lib/phlex/element_clobbering_guard.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: module Phlex::ElementClobberingGuard",
          "5:  def method_added(method_name)",
          "6:   if method_name[0] == \"_\" && element_method?(method_name[1..].to_sym)",
          "8:   else",
          "9:    super",
          "10:   end",
          "",
          "[Removed Lines]",
          "7:    raise Phlex::NameError, \"\ud83d\udc4b Redefining the method `#{name}##{method_name}` is not a good idea.\"",
          "",
          "[Added Lines]",
          "7:    raise Phlex::NameError.new(\"\ud83d\udc4b Redefining the method `#{name}##{method_name}` is not a good idea.\")",
          "",
          "---------------"
        ],
        "lib/phlex/helpers.rb||lib/phlex/helpers.rb": [
          "File: lib/phlex/helpers.rb -> lib/phlex/helpers.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:  def tokens(*tokens, **conditional_tokens)",
          "22:   conditional_tokens.each do |condition, token|",
          "23:    truthy = case condition",
          "25:     when Proc then condition.call",
          "27:    end",
          "29:    if truthy",
          "",
          "[Removed Lines]",
          "24:     when Symbol then send(condition)",
          "26:     else raise ArgumentError, \"The class condition must be a Symbol or a Proc.\"",
          "",
          "[Added Lines]",
          "24:     when Symbol then __send__(condition)",
          "26:     else raise ArgumentError.new(\"The class condition must be a Symbol or a Proc.\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "51:    when String then tokens << token",
          "52:    when Symbol then tokens << token.name",
          "53:    when Array then tokens.concat(token)",
          "56:   end",
          "57:  end",
          "",
          "[Removed Lines]",
          "54:    else raise ArgumentError,",
          "55:     \"Conditional classes must be Symbols, Strings, or Arrays of Symbols or Strings.\"",
          "",
          "[Added Lines]",
          "54:    else raise ArgumentError.new(\"Conditional classes must be Symbols, Strings, or Arrays of Symbols or Strings.\")",
          "",
          "---------------"
        ],
        "lib/phlex/kit.rb||lib/phlex/kit.rb": [
          "File: lib/phlex/kit.rb -> lib/phlex/kit.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: module Phlex::Kit",
          "4:  module LazyLoader",
          "6:    if name[0] == name[0].upcase && __phlex_kit_constants__.include?(name) && __get_phlex_kit_constant__(name) && methods.include?(name)",
          "8:    else",
          "9:     super",
          "10:    end",
          "",
          "[Removed Lines]",
          "5:   def method_missing(name, *args, **kwargs, &block)",
          "7:     public_send(name, *args, **kwargs, &block)",
          "",
          "[Added Lines]",
          "5:   def method_missing(name, ...)",
          "7:     public_send(name, ...)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43:   if Class === constant && constant < Phlex::SGML",
          "44:    if instance_methods.include?(name)",
          "46:    elsif methods.include?(name)",
          "48:    end",
          "50:    constant.include(self)",
          "",
          "[Removed Lines]",
          "45:     raise NameError, \"The instance method `#{name}' is already defined on `#{inspect}`.\"",
          "47:     raise NameError, \"The method `#{name}' is already defined on `#{inspect}`.\"",
          "",
          "[Added Lines]",
          "45:     raise NameError.new(\"The instance method `#{name}' is already defined on `#{inspect}`.\")",
          "47:     raise NameError.new(\"The method `#{name}' is already defined on `#{inspect}`.\")",
          "",
          "---------------"
        ],
        "lib/phlex/sgml.rb||lib/phlex/sgml.rb": [
          "File: lib/phlex/sgml.rb -> lib/phlex/sgml.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:    # Create a new instance of the component.",
          "15:    # @note The block will not be delegated {#initialize}. Instead, it will be sent to {#template} when rendering.",
          "17:     if block",
          "19:      object.instance_exec { @_content_block = block }",
          "20:      object",
          "21:     else",
          "",
          "[Removed Lines]",
          "16:    def new(*args, **kwargs, &block)",
          "18:      object = super(*args, **kwargs, &nil)",
          "",
          "[Added Lines]",
          "16:    def new(*, **, &block)",
          "18:      object = super(*, **, &nil)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "72:     flush if task.running?",
          "73:     task.wait",
          "74:    else",
          "76:    end",
          "77:   end",
          "",
          "[Removed Lines]",
          "75:     raise ArgumentError, \"Expected an asynchronous task / promise.\"",
          "",
          "[Added Lines]",
          "75:     raise ArgumentError.new(\"Expected an asynchronous task / promise.\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "83:    @_view_context = view_context",
          "84:    @_parent = parent",
          "87:    @_rendered = true",
          "89:    if fragments",
          "",
          "[Removed Lines]",
          "86:    raise Phlex::DoubleRenderError, \"You can't render a #{self.class.name} more than once.\" if @_rendered",
          "",
          "[Added Lines]",
          "86:    raise Phlex::DoubleRenderError.new(\"You can't render a #{self.class.name} more than once.\") if @_rendered",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "140:   # @see #format_object",
          "141:   def plain(content)",
          "142:    unless __text__(content)",
          "144:    end",
          "146:    nil",
          "",
          "[Removed Lines]",
          "143:     raise ArgumentError, \"You've passed an object to plain that is not handled by format_object. See https://rubydoc.info/gems/phlex/Phlex/SGML#format_object-instance_method for more information\"",
          "",
          "[Added Lines]",
          "143:     raise ArgumentError.new(\"You've passed an object to plain that is not handled by format_object. See https://rubydoc.info/gems/phlex/Phlex/SGML#format_object-instance_method for more information\")",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "149:   # Output a whitespace character. This is useful for getting inline elements to wrap. If you pass a block, a whitespace will be output before and after yielding the block.",
          "150:   # @return [nil]",
          "151:   # @yield If a block is given, it yields the block with no arguments.",
          "153:    context = @_context",
          "154:    return if context.fragments && !context.in_target_fragment",
          "",
          "[Removed Lines]",
          "152:   def whitespace(&block)",
          "",
          "[Added Lines]",
          "152:   def whitespace(&)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "158:    buffer << \" \"",
          "160:    if block_given?",
          "162:     buffer << \" \"",
          "163:    end",
          "",
          "[Removed Lines]",
          "161:     yield_content(&block)",
          "",
          "[Added Lines]",
          "161:     yield_content(&)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "168:   # Output an HTML comment.",
          "169:   # @return [nil]",
          "171:    context = @_context",
          "172:    return if context.fragments && !context.in_target_fragment",
          "174:    buffer = context.buffer",
          "176:    buffer << \"<!-- \"",
          "178:    buffer << \" -->\"",
          "180:    nil",
          "",
          "[Removed Lines]",
          "170:   def comment(&block)",
          "177:    yield_content(&block)",
          "",
          "[Added Lines]",
          "170:   def comment(&)",
          "177:    yield_content(&)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "233:   #  @param enumerable [Enumerable]",
          "234:   #  @example",
          "235:   #   render @items",
          "237:    case renderable",
          "238:    when Phlex::SGML",
          "240:    when Class",
          "241:     if renderable < Phlex::SGML",
          "243:     end",
          "244:    when Enumerable",
          "246:    when Proc, Method",
          "247:     if renderable.arity == 0",
          "248:      yield_content_with_no_args(&renderable)",
          "",
          "[Removed Lines]",
          "236:   def render(renderable, &block)",
          "239:     renderable.call(@_buffer, context: @_context, view_context: @_view_context, parent: self, &block)",
          "242:      renderable.new.call(@_buffer, context: @_context, view_context: @_view_context, parent: self, &block)",
          "245:     renderable.each { |r| render(r, &block) }",
          "",
          "[Added Lines]",
          "236:   def render(renderable, &)",
          "239:     renderable.call(@_buffer, context: @_context, view_context: @_view_context, parent: self, &)",
          "242:      renderable.new.call(@_buffer, context: @_context, view_context: @_view_context, parent: self, &)",
          "245:     renderable.each { |r| render(r, &) }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "252:    when String",
          "253:     plain(renderable)",
          "254:    else",
          "256:    end",
          "258:    nil",
          "",
          "[Removed Lines]",
          "255:     raise ArgumentError, \"You can't render a #{renderable.inspect}.\"",
          "",
          "[Added Lines]",
          "255:     raise ArgumentError.new(\"You can't render a #{renderable.inspect}.\")",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "385:     name = case k",
          "386:      when String then k",
          "387:      when Symbol then k.name.tr(\"_\", \"-\")",
          "389:     end",
          "391:     lower_name = name.downcase",
          "",
          "[Removed Lines]",
          "388:      else raise ArgumentError, \"Attribute keys should be Strings or Symbols.\"",
          "",
          "[Added Lines]",
          "388:      else raise ArgumentError.new(\"Attribute keys should be Strings or Symbols.\")",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "394:     # Detect unsafe attribute names. Attribute names are considered unsafe if they match an event attribute or include unsafe characters.",
          "395:     if HTML::EVENT_ATTRIBUTES.include?(lower_name.delete(\"^a-z-\")) || name.match?(/[<>&\"']/)",
          "397:     end",
          "399:     case v",
          "",
          "[Removed Lines]",
          "396:      raise ArgumentError, \"Unsafe attribute name detected: #{k}.\"",
          "",
          "[Added Lines]",
          "396:      raise ArgumentError.new(\"Unsafe attribute name detected: #{k}.\")",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "406:     when Integer, Float",
          "407:      buffer << \" \" << name << '=\"' << v.to_s << '\"'",
          "408:     when Hash",
          "410:      when :class",
          "411:       buffer << \" \" << name << '=\"' << __classes__(v).gsub('\"', \"&quot;\") << '\"'",
          "412:      when :style",
          "414:      else",
          "415:       __attributes__(",
          "416:        v.transform_keys { |subkey|",
          "",
          "[Removed Lines]",
          "409:        case k",
          "413:        buffer << \" \" << name << '=\"' << __styles__(v).gsub('\"', \"&quot;\") << '\"'",
          "",
          "[Added Lines]",
          "409:      case k",
          "413:       buffer << \" \" << name << '=\"' << __styles__(v).gsub('\"', \"&quot;\") << '\"'",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "422:       )",
          "423:      end",
          "424:     when Array",
          "426:      when :class",
          "427:       __classes__(v)",
          "428:      when :style",
          "430:      else",
          "431:       v.compact.join(\" \")",
          "432:      end",
          "",
          "[Removed Lines]",
          "425:        value = case k",
          "429:        __styles__(v)",
          "",
          "[Added Lines]",
          "425:      value = case k",
          "429:       __styles__(v)",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "465:      case c",
          "466:       when String then c",
          "467:       when Symbol then c.name.tr(\"_\", \"-\").delete_suffix(\"?\")",
          "469:      end",
          "470:     }.join(\" \")",
          "471:    when nil, false",
          "",
          "[Removed Lines]",
          "468:       else raise ArgumentError, \"Class keys should be Strings or Symbols.\"",
          "",
          "[Added Lines]",
          "468:       else raise ArgumentError.new(\"Class keys should be Strings or Symbols.\")",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "498:      prop = case k",
          "499:       when String then k",
          "500:       when Symbol then k.name.tr(\"_\", \"-\")",
          "502:      end",
          "504:      value = __styles__(v)",
          "",
          "[Removed Lines]",
          "501:       else raise ArgumentError, \"Style keys should be Strings or Symbols.\"",
          "",
          "[Added Lines]",
          "501:       else raise ArgumentError.new(\"Style keys should be Strings or Symbols.\")",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "520:     end",
          "521:    end",
          "524:   end",
          "525:  end",
          "526: end",
          "",
          "[Removed Lines]",
          "523:    style.end_with?(\";\") ? style : style + \";\"",
          "",
          "[Added Lines]",
          "523:    style.end_with?(\";\") ? style : \"#{style};\"",
          "",
          "---------------"
        ],
        "lib/phlex/testing/view_helper.rb||lib/phlex/testing/view_helper.rb": [
          "File: lib/phlex/testing/view_helper.rb -> lib/phlex/testing/view_helper.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: module Phlex::Testing",
          "4:  module ViewHelper",
          "6:    if view.is_a?(Class) && view < Phlex::SGML",
          "7:     view = view.new",
          "8:    end",
          "11:   end",
          "13:   def view_context",
          "",
          "[Removed Lines]",
          "5:   def render(view, &block)",
          "10:    view.call(view_context:, &block)",
          "",
          "[Added Lines]",
          "5:   def render(view, &)",
          "10:    view.call(view_context:, &)",
          "",
          "---------------"
        ],
        "lib/phlex/unbuffered.rb||lib/phlex/unbuffered.rb": [
          "File: lib/phlex/unbuffered.rb -> lib/phlex/unbuffered.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:   @object.respond_to?(...)",
          "22:  end",
          "25:   if @object.respond_to?(name)",
          "27:    __class__.define_method(name) do |*a, **k, &b|",
          "",
          "[Removed Lines]",
          "24:  def method_missing(name, *args, **kwargs, &block)",
          "",
          "[Added Lines]",
          "24:  def method_missing(name, ...)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "29:    end",
          "31:    # Now we've defined this missing method, we can call it.",
          "33:   else",
          "34:    super",
          "35:   end",
          "",
          "[Removed Lines]",
          "32:    __public_send__(name, *args, **kwargs, &block)",
          "",
          "[Added Lines]",
          "32:    __public_send__(name, ...)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "40:   @object.call(...)",
          "41:  end",
          "45:  end",
          "47:  def public_send(...)",
          "",
          "[Removed Lines]",
          "43:  def send(...)",
          "44:   @object.send(...)",
          "",
          "[Added Lines]",
          "43:  def __send__(...)",
          "44:   @object.__send__(...)",
          "",
          "---------------"
        ],
        "quickdraw/csv.test.rb||quickdraw/csv.test.rb": [
          "File: quickdraw/csv.test.rb -> quickdraw/csv.test.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  test \"renders a CSV\" do",
          "24:   products = [",
          "25:    Product.new(\"Apple\", 1.00),",
          "27:   ]",
          "29:   csv = Example.new(products).call",
          "",
          "[Removed Lines]",
          "26:    Product.new(\"Banana\", 2.00)",
          "",
          "[Added Lines]",
          "26:    Product.new(\"Banana\", 2.00),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "68:  test \"renders without headers\" do",
          "69:   products = [",
          "70:    Product.new(\"Apple\", 1.00),",
          "72:   ]",
          "74:   csv = ExampleWithoutHeaders.new(products).call",
          "",
          "[Removed Lines]",
          "71:    Product.new(\"Banana\", 2.00)",
          "",
          "[Added Lines]",
          "71:    Product.new(\"Banana\", 2.00),",
          "",
          "---------------"
        ],
        "quickdraw/helpers/mix.test.rb||quickdraw/helpers/mix.test.rb": [
          "File: quickdraw/helpers/mix.test.rb -> quickdraw/helpers/mix.test.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: test \"supports hash concatenation\" do",
          "26:  output = mix(",
          "27:   { data: { controller: \"foo\" } },",
          "29:  )",
          "31:  expect(output) == { data: { controller: \"foo bar\" } }",
          "",
          "[Removed Lines]",
          "28:    { data: { controller: \"bar\" } }",
          "",
          "[Added Lines]",
          "28:   { data: { controller: \"bar\" } },",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34: test \"supports hash override\" do",
          "35:  output = mix(",
          "36:   { data: { controller: \"foo\" } },",
          "38:  )",
          "40:  expect(output) == { data: { controller: \"bar\" } }",
          "",
          "[Removed Lines]",
          "37:    { data!: { controller: \"bar\" } }",
          "",
          "[Added Lines]",
          "37:   { data!: { controller: \"bar\" } },",
          "",
          "---------------"
        ],
        "quickdraw/sgml/attributes.test.rb||quickdraw/sgml/attributes.test.rb": [
          "File: quickdraw/sgml/attributes.test.rb -> quickdraw/sgml/attributes.test.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # frozen_string_literal: true",
          "4:  describe \"<#{tag}> with class array attribute\" do",
          "5:   example = Class.new(Phlex::HTML) do",
          "6:    define_method :view_template do",
          "8:    end",
          "9:   end",
          "",
          "[Removed Lines]",
          "3: {div: \"div\"}.each do |method_name, tag|",
          "7:     send(method_name, class: [\"class\", nil, inactive: false, truthy: 1]) { \"content\" }",
          "",
          "[Added Lines]",
          "3: { div: \"div\" }.each do |method_name, tag|",
          "7:     __send__(method_name, class: [\"class\", nil, inactive: false, truthy: 1]) { \"content\" }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "16:  describe \"<#{tag}> with class hash attribute\" do",
          "17:   example = Class.new(Phlex::HTML) do",
          "18:    define_method :view_template do",
          "20:    end",
          "21:   end",
          "",
          "[Removed Lines]",
          "19:     send(method_name, class: {class: true, inactive: false, truthy: 1}) { \"content\" }",
          "",
          "[Added Lines]",
          "19:     __send__(method_name, class: { class: true, inactive: false, truthy: 1 }) { \"content\" }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "28:  describe \"<#{tag}> with style array attribute\" do",
          "29:   example = Class.new(Phlex::HTML) do",
          "30:    define_method :view_template do",
          "32:    end",
          "33:   end",
          "",
          "[Removed Lines]",
          "31:     send(method_name, style: [\"color: red\", nil, font_weight: \"bold\", opacity: 0]) { \"content\" }",
          "",
          "[Added Lines]",
          "31:     __send__(method_name, style: [\"color: red\", nil, font_weight: \"bold\", opacity: 0]) { \"content\" }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "40:  describe \"<#{tag}> with style hash attribute\" do",
          "41:   example = Class.new(Phlex::HTML) do",
          "42:    define_method :view_template do",
          "44:    end",
          "45:   end",
          "",
          "[Removed Lines]",
          "43:     send(method_name, style: {color: \"red\", word_break: nil, font_weight: \"bold\"}) { \"content\" }",
          "",
          "[Added Lines]",
          "43:     __send__(method_name, style: { color: \"red\", word_break: nil, font_weight: \"bold\" }) { \"content\" }",
          "",
          "---------------"
        ],
        "quickdraw/sgml/render_enumerable.test.rb||quickdraw/sgml/render_enumerable.test.rb": [
          "File: quickdraw/sgml/render_enumerable.test.rb -> quickdraw/sgml/render_enumerable.test.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # frozen_string_literal: true",
          "3: class Card < Phlex::HTML",
          "6:  end",
          "7: end",
          "",
          "[Removed Lines]",
          "4:  def view_template(&block)",
          "5:   article(&block)",
          "",
          "[Added Lines]",
          "4:  def view_template(&)",
          "5:   article(&)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10:  def initialize",
          "11:   @cards = [",
          "12:    Card.new,",
          "14:   ]",
          "15:  end",
          "",
          "[Removed Lines]",
          "13:    Card.new",
          "",
          "[Added Lines]",
          "13:    Card.new,",
          "",
          "---------------"
        ],
        "quickdraw/sgml/selective_rendering.test.rb||quickdraw/sgml/selective_rendering.test.rb": [
          "File: quickdraw/sgml/selective_rendering.test.rb -> quickdraw/sgml/selective_rendering.test.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # frozen_string_literal: true",
          "3: class ExampleComponent < Phlex::HTML",
          "6:  end",
          "7: end",
          "",
          "[Removed Lines]",
          "4:  def view_template(&block)",
          "5:   div(&block)",
          "",
          "[Added Lines]",
          "4:  def view_template(&)",
          "5:   div(&)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "68: test \"renders the just the target fragment\" do",
          "69:  expect(",
          "71:  ) == %(<h1 id=\"target\">Hello<strong>World</strong><img src=\"image.jpg\"></h1>)",
          "72: end",
          "74: test \"works with void elements\" do",
          "75:  expect(",
          "77:  ) == %(<img id=\"target\" src=\"image.jpg\">)",
          "78: end",
          "80: test \"supports multiple fragments\" do",
          "81:  expect(",
          "83:  ) == %(<h1 id=\"target\">Hello<strong>World</strong><img src=\"image.jpg\"></h1><img id=\"image\" src=\"after.jpg\">)",
          "84: end",
          "",
          "[Removed Lines]",
          "70:   StandardElementExample.new.call(fragments: [\"target\"])",
          "76:   VoidElementExample.new.call(fragments: [\"target\"])",
          "82:   StandardElementExample.new.call(fragments: [\"target\", \"image\"])",
          "",
          "[Added Lines]",
          "70:   StandardElementExample.new.call(fragments: [\"target\"]),",
          "76:   VoidElementExample.new.call(fragments: [\"target\"]),",
          "82:   StandardElementExample.new.call(fragments: [\"target\", \"image\"]),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "93: describe \"with a capture block\" do",
          "94:  test \"doesn't render the capture block\" do",
          "95:   expect(",
          "97:   ) == %(<h1 id=\"after\">After</h1>)",
          "98:  end",
          "100:  test \"renders the capture block when selected\" do",
          "101:   expect(",
          "103:   ) == %(<div id=\"around\">&lt;h1 id=&quot;inside&quot;&gt;Inside&lt;/h1&gt;</div>)",
          "104:  end",
          "106:  test \"doesn't select from the capture block\" do",
          "107:   expect(",
          "109:   ) == \"\"",
          "110:  end",
          "111: end",
          "",
          "[Removed Lines]",
          "96:    WithCaptureBlock.new.call(fragments: [\"after\"])",
          "102:    WithCaptureBlock.new.call(fragments: [\"around\"])",
          "108:    WithCaptureBlock.new.call(fragments: [\"inside\"])",
          "",
          "[Added Lines]",
          "96:    WithCaptureBlock.new.call(fragments: [\"after\"]),",
          "102:    WithCaptureBlock.new.call(fragments: [\"around\"]),",
          "108:    WithCaptureBlock.new.call(fragments: [\"inside\"]),",
          "",
          "---------------"
        ],
        "quickdraw/sgml/tags.test.rb||quickdraw/sgml/tags.test.rb": [
          "File: quickdraw/sgml/tags.test.rb -> quickdraw/sgml/tags.test.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:  describe \"<#{tag}> called with an underscore prefix while overridden\" do",
          "5:   example = Class.new(Phlex::HTML) do",
          "6:    define_method :view_template do",
          "8:    end",
          "10:    define_method method_name do",
          "",
          "[Removed Lines]",
          "7:     send(\"_#{method_name}\")",
          "",
          "[Added Lines]",
          "7:     __send__(\"_#{method_name}\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "20:  describe \"<#{tag}> with block content and attributes\" do",
          "21:   example = Class.new(Phlex::HTML) do",
          "22:    define_method :view_template do",
          "24:    end",
          "25:   end",
          "",
          "[Removed Lines]",
          "23:     send(method_name, class: \"class\", id: \"id\", disabled: true, selected: false) { h1 { \"Hello\" } }",
          "",
          "[Added Lines]",
          "23:     __send__(method_name, class: \"class\", id: \"id\", disabled: true, selected: false) { h1 { \"Hello\" } }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "32:  describe \"<#{tag}> with block text content and attributes\" do",
          "33:   example = Class.new(Phlex::HTML) do",
          "34:    define_method :view_template do",
          "36:    end",
          "37:   end",
          "",
          "[Removed Lines]",
          "35:     send(method_name, class: \"class\", id: \"id\", disabled: true, selected: false) { \"content\" }",
          "",
          "[Added Lines]",
          "35:     __send__(method_name, class: \"class\", id: \"id\", disabled: true, selected: false) { \"content\" }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "44:  describe \"<#{tag}> with string attribute keys\" do",
          "45:   example = Class.new(Phlex::HTML) do",
          "46:    define_method :view_template do",
          "48:    end",
          "49:   end",
          "",
          "[Removed Lines]",
          "47:     send(method_name, \"attribute_with_underscore\" => true) { \"content\" }",
          "",
          "[Added Lines]",
          "47:     __send__(method_name, \"attribute_with_underscore\" => true) { \"content\" }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "56:  describe \"<#{tag}> with hash attribute values\" do",
          "57:   example = Class.new(Phlex::HTML) do",
          "58:    define_method :view_template do",
          "60:    end",
          "61:   end",
          "",
          "[Removed Lines]",
          "59:     send(method_name, aria: { hidden: true }, data_turbo: { frame: \"_top\" }) { \"content\" }",
          "",
          "[Added Lines]",
          "59:     __send__(method_name, aria: { hidden: true }, data_turbo: { frame: \"_top\" }) { \"content\" }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "70:  describe \"<#{tag}> called with an underscore prefix while overridden\" do",
          "71:   example = Class.new(Phlex::HTML) do",
          "72:    define_method :view_template do",
          "74:    end",
          "76:    define_method tag do",
          "",
          "[Removed Lines]",
          "73:     send(\"_#{method_name}\")",
          "",
          "[Added Lines]",
          "73:     __send__(\"_#{method_name}\")",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "86:  describe \"<#{tag}> with attributes\" do",
          "87:   example = Class.new(Phlex::HTML) do",
          "88:    define_method :view_template do",
          "90:    end",
          "91:   end",
          "",
          "[Removed Lines]",
          "89:     send(method_name, class: \"class\", id: \"id\", disabled: true, selected: false)",
          "",
          "[Added Lines]",
          "89:     __send__(method_name, class: \"class\", id: \"id\", disabled: true, selected: false)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "98:  describe \"<#{tag}> with string attribute keys\" do",
          "99:   example = Class.new(Phlex::HTML) do",
          "100:    define_method :view_template do",
          "102:    end",
          "103:   end",
          "",
          "[Removed Lines]",
          "101:     send(method_name, \"attribute_with_underscore\" => true)",
          "",
          "[Added Lines]",
          "101:     __send__(method_name, \"attribute_with_underscore\" => true)",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "110:  describe \"<#{tag}> with hash attribute values\" do",
          "111:   example = Class.new(Phlex::HTML) do",
          "112:    define_method :view_template do",
          "114:    end",
          "115:   end",
          "",
          "[Removed Lines]",
          "113:     send(method_name, aria: { hidden: true }, data_turbo: { frame: \"_top\" })",
          "",
          "[Added Lines]",
          "113:     __send__(method_name, aria: { hidden: true }, data_turbo: { frame: \"_top\" })",
          "",
          "---------------"
        ],
        "test/phlex/unbuffered.rb||test/phlex/unbuffered.rb": [
          "File: test/phlex/unbuffered.rb -> test/phlex/unbuffered.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:  it \"delegates #send\" do",
          "35:   view = Example.new",
          "39:  end",
          "40: end",
          "",
          "[Removed Lines]",
          "36:   expect(view).to receive(:send).with(:bar)",
          "38:   view.unbuffered.send(:bar)",
          "",
          "[Added Lines]",
          "36:   expect(view).to receive(:__send__).with(:bar)",
          "38:   view.unbuffered.__send__(:bar)",
          "",
          "---------------"
        ],
        "test/phlex/view/context.rb||test/phlex/view/context.rb": [
          "File: test/phlex/view/context.rb -> test/phlex/view/context.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:   let(:output) do",
          "35:    context_provider.new(ctx).call do |component|",
          "37:    end",
          "38:   end",
          "",
          "[Removed Lines]",
          "36:     component.send(:render, view)",
          "",
          "[Added Lines]",
          "36:     component.__send__(:render, view)",
          "",
          "---------------"
        ],
        "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb": [
          "File: test/phlex/view/naughty_business.rb -> test/phlex/view/naughty_business.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "164:    view do",
          "165:     define_method :view_template do",
          "167:     end",
          "168:    end",
          "",
          "[Removed Lines]",
          "166:      send(:div, **naughty_attributes)",
          "",
          "[Added Lines]",
          "166:      __send__(:div, **naughty_attributes)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "182:    view do",
          "183:     define_method :view_template do",
          "185:     end",
          "186:    end",
          "",
          "[Removed Lines]",
          "184:      send(:div, **naughty_attributes)",
          "",
          "[Added Lines]",
          "184:      __send__(:div, **naughty_attributes)",
          "",
          "---------------"
        ],
        "test/phlex/view/new.rb||test/phlex/view/new.rb": [
          "File: test/phlex/view/new.rb -> test/phlex/view/new.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # frozen_string_literal: true",
          "3: class Example < Phlex::HTML",
          "6:  end",
          "7: end",
          "",
          "[Removed Lines]",
          "4:  def view_template(&block)",
          "5:   h1(&block)",
          "",
          "[Added Lines]",
          "4:  def view_template(&)",
          "5:   h1(&)",
          "",
          "---------------"
        ],
        "test/phlex/view/svg_tags.rb||test/phlex/view/svg_tags.rb": [
          "File: test/phlex/view/svg_tags.rb -> test/phlex/view/svg_tags.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:   with \"<#{tag}> called with an underscore prefix while overridden\" do",
          "8:    svg_view do",
          "9:     define_method :view_template do",
          "11:     end",
          "13:     define_method tag do",
          "",
          "[Removed Lines]",
          "10:      send(\"_#{method_name}\")",
          "",
          "[Added Lines]",
          "10:      __send__(\"_#{method_name}\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "23:   with \"<#{tag}> with block content and attributes\" do",
          "24:    svg_view do",
          "25:     define_method :view_template do",
          "27:     end",
          "28:    end",
          "",
          "[Removed Lines]",
          "26:      send(method_name, class: \"class\", id: \"id\", disabled: true, selected: false) { text { \"Hello\" } }",
          "",
          "[Added Lines]",
          "26:      __send__(method_name, class: \"class\", id: \"id\", disabled: true, selected: false) { text { \"Hello\" } }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "35:   with \"<#{tag}> with block text content and attributes\" do",
          "36:    svg_view do",
          "37:     define_method :view_template do",
          "39:     end",
          "40:    end",
          "",
          "[Removed Lines]",
          "38:      send(method_name, class: \"class\", id: \"id\", disabled: true, selected: false) { \"content\" }",
          "",
          "[Added Lines]",
          "38:      __send__(method_name, class: \"class\", id: \"id\", disabled: true, selected: false) { \"content\" }",
          "",
          "---------------"
        ],
        "test/phlex/view/tokens.rb||test/phlex/view/tokens.rb": [
          "File: test/phlex/view/tokens.rb -> test/phlex/view/tokens.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "50:      a href: \"/\", **classes(\"a\", \"b\", \"c\",",
          "51:       active?: {",
          "52:        then: \"active\",",
          "54:       }) do",
          "55:       \"Home\"",
          "56:      end",
          "",
          "[Removed Lines]",
          "53:        else: \"inactive\"",
          "",
          "[Added Lines]",
          "53:        else: \"inactive\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "72:     def view_template",
          "73:      a href: \"/\", **classes(",
          "74:       active?: {",
          "77:      ) do",
          "78:       \"Home\"",
          "79:      end",
          "",
          "[Removed Lines]",
          "75:        then: \"active\"",
          "76:       }",
          "",
          "[Added Lines]",
          "75:        then: \"active\",",
          "76:       },",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "087c21475cd7e7bb7f86844c35c1feb787819c35",
      "candidate_info": {
        "commit_hash": "087c21475cd7e7bb7f86844c35c1feb787819c35",
        "repo": "phlex-ruby/phlex",
        "commit_url": "https://github.com/phlex-ruby/phlex/commit/087c21475cd7e7bb7f86844c35c1feb787819c35",
        "files": [
          "lib/phlex/html.rb",
          "lib/phlex/sgml.rb",
          "test/phlex/view/naughty_business.rb"
        ],
        "message": "Simplify unsafe attributes detection (#797)",
        "before_after_code_files": [
          "lib/phlex/html.rb||lib/phlex/html.rb",
          "lib/phlex/sgml.rb||lib/phlex/sgml.rb",
          "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/phlex/sgml.rb||lib/phlex/sgml.rb",
            "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb"
          ],
          "candidate": [
            "lib/phlex/sgml.rb||lib/phlex/sgml.rb",
            "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/phlex/html.rb||lib/phlex/html.rb": [
          "File: lib/phlex/html.rb -> lib/phlex/html.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:  autoload :StandardElements, \"phlex/html/standard_elements\"",
          "5:  autoload :VoidElements, \"phlex/html/void_elements\"",
          "10:  extend Phlex::SGML::Elements",
          "11:  include VoidElements, StandardElements",
          "",
          "[Removed Lines]",
          "7:  # A list of HTML attributes that have the potential to execute unsafe JavaScript.",
          "8:  UNSAFE_ATTRIBUTES = Set.new(%w[onabort onafterprint onbeforeprint onbeforeunload onblur oncanplay oncanplaythrough onchange onclick oncontextmenu oncopy oncuechange oncut ondblclick ondrag ondragend ondragenter ondragleave ondragover ondragstart ondrop ondurationchange onemptied onended onerror onfocus onhashchange oninput oninvalid onkeydown onkeypress onkeyup onload onloadeddata onloadedmetadata onloadstart onmessage onmousedown onmousemove onmouseout onmouseover onmouseup onmousewheel onoffline ononline onpagehide onpageshow onpaste onpause onplay onplaying onpopstate onprogress onratechange onreset onresize onscroll onsearch onseeked onseeking onselect onstalled onstorage onsubmit onsuspend ontimeupdate ontoggle onunload onvolumechange onwaiting onwheel srcdoc]).freeze",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/phlex/sgml.rb||lib/phlex/sgml.rb": [
          "File: lib/phlex/sgml.rb -> lib/phlex/sgml.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: # **Standard Generalized Markup Language** for behaviour common to {HTML} and {SVG}.",
          "4: class Phlex::SGML",
          "5:  autoload :Elements, \"phlex/sgml/elements\"",
          "6:  autoload :SafeObject, \"phlex/sgml/safe_object\"",
          "7:  autoload :SafeValue, \"phlex/sgml/safe_value\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5:  UNSAFE_ATTRIBUTES = Set.new(%w[srcdoc sandbox http-equiv]).freeze",
          "6:  REF_ATTRIBUTES = Set.new(%w[href src action formaction lowsrc dynsrc background ping]).freeze",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "357:     else raise Phlex::ArgumentError.new(\"Attribute keys should be Strings or Symbols.\")",
          "358:    end",
          "382:    when true",
          "384:    when String",
          "386:    when Symbol",
          "388:    when Integer, Float",
          "390:    when Hash",
          "391:     case k",
          "392:     when :style",
          "394:     else",
          "395:      __nested_attributes__(v, \"#{name}-\", buffer)",
          "396:     end",
          "397:    when Array",
          "398:     case k",
          "399:     when :style",
          "401:     else",
          "403:     end",
          "404:    when Set",
          "405:     case k",
          "406:     when :style",
          "408:     else",
          "410:     end",
          "411:    when Phlex::SGML::SafeObject",
          "413:    else",
          "414:     raise Phlex::ArgumentError.new(\"Invalid attribute value for #{k}: #{v.inspect}.\")",
          "415:    end",
          "416:   end",
          "418:   buffer",
          "",
          "[Removed Lines]",
          "360:    lower_name = name.downcase",
          "362:    unless Phlex::SGML::SafeObject === v",
          "363:     if lower_name == \"href\" && v.to_s.downcase.delete(\"^a-z:\").start_with?(\"javascript:\")",
          "364:      next",
          "365:     end",
          "367:     # Detect unsafe attribute names. Attribute names are considered unsafe if they match an event attribute or include unsafe characters.",
          "368:     if Phlex::HTML::UNSAFE_ATTRIBUTES.include?(lower_name.delete(\"^a-z-\"))",
          "369:      raise Phlex::ArgumentError.new(\"Unsafe attribute name detected: #{k}.\")",
          "370:     end",
          "371:    end",
          "373:    if name.match?(/[<>&\"']/)",
          "374:     raise Phlex::ArgumentError.new(\"Unsafe attribute name detected: #{k}.\")",
          "375:    end",
          "377:    if lower_name.to_sym == :id && k != :id",
          "378:     raise Phlex::ArgumentError.new(\":id attribute should only be passed as a lowercase symbol.\")",
          "379:    end",
          "381:    case v",
          "383:     buffer << \" \" << name",
          "385:     buffer << \" \" << name << '=\"' << v.gsub('\"', \"&quot;\") << '\"'",
          "387:     buffer << \" \" << name << '=\"' << v.name.tr(\"_\", \"-\").gsub('\"', \"&quot;\") << '\"'",
          "389:     buffer << \" \" << name << '=\"' << v.to_s << '\"'",
          "393:      buffer << \" \" << name << '=\"' << __styles__(v).gsub('\"', \"&quot;\") << '\"'",
          "400:      buffer << \" \" << name << '=\"' << __styles__(v).gsub('\"', \"&quot;\") << '\"'",
          "402:      buffer << \" \" << name << '=\"' << __nested_tokens__(v) << '\"'",
          "407:      buffer << \" \" << name << '=\"' << __styles__(v).gsub('\"', \"&quot;\") << '\"'",
          "409:      buffer << \" \" << name << '=\"' << __nested_tokens__(v.to_a) << '\"'",
          "412:     buffer << \" \" << name << '=\"' << v.to_s.gsub('\"', \"&quot;\") << '\"'",
          "",
          "[Added Lines]",
          "363:    value = case v",
          "365:     true",
          "367:     v.gsub('\"', \"&quot;\")",
          "369:     v.name.tr(\"_\", \"-\").gsub('\"', \"&quot;\")",
          "371:     v.to_s",
          "375:      __styles__(v).gsub('\"', \"&quot;\")",
          "382:      __styles__(v).gsub('\"', \"&quot;\")",
          "384:      __nested_tokens__(v)",
          "389:      __styles__(v).gsub('\"', \"&quot;\")",
          "391:      __nested_tokens__(v.to_a)",
          "394:     v.to_s.gsub('\"', \"&quot;\")",
          "399:    lower_name = name.downcase",
          "401:    unless Phlex::SGML::SafeObject === v",
          "402:     normalized_name = lower_name.delete(\"^a-z-\")",
          "404:     if value != true && REF_ATTRIBUTES.include?(normalized_name) && value.downcase.delete(\"^a-z:\").start_with?(\"javascript:\")",
          "405:      # We just ignore these because they were likely not specified by the developer.",
          "406:      next",
          "407:     end",
          "409:     if normalized_name.bytesize > 2 && normalized_name.start_with?(\"on\") && !normalized_name.include?(\"-\")",
          "410:      raise Phlex::ArgumentError.new(\"Unsafe attribute name detected: #{k}.\")",
          "411:     end",
          "413:     if UNSAFE_ATTRIBUTES.include?(normalized_name)",
          "414:      raise Phlex::ArgumentError.new(\"Unsafe attribute name detected: #{k}.\")",
          "415:     end",
          "416:    end",
          "418:    if name.match?(/[<>&\"']/)",
          "419:     raise Phlex::ArgumentError.new(\"Unsafe attribute name detected: #{k}.\")",
          "420:    end",
          "422:    if lower_name.to_sym == :id && k != :id",
          "423:     raise Phlex::ArgumentError.new(\":id attribute should only be passed as a lowercase symbol.\")",
          "424:    end",
          "426:    case value",
          "427:    when true",
          "428:     buffer << \" \" << name",
          "429:    when String",
          "430:     buffer << \" \" << name << '=\"' << value << '\"'",
          "431:    end",
          "",
          "---------------"
        ],
        "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb": [
          "File: test/phlex/view/naughty_business.rb -> test/phlex/view/naughty_business.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "157:   end",
          "158:  end",
          "161:   with \"with naughty #{event_attribute} attribute\" do",
          "162:    naughty_attributes = { event_attribute => \"alert(1);\" }",
          "",
          "[Removed Lines]",
          "160:  Phlex::HTML::UNSAFE_ATTRIBUTES.each do |event_attribute|",
          "",
          "[Added Lines]",
          "160:  Phlex::SGML::UNSAFE_ATTRIBUTES.each do |event_attribute|",
          "",
          "---------------"
        ]
      }
    }
  ]
}