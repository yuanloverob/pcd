{
  "cve_id": "CVE-2024-11736",
  "cve_desc": "A vulnerability was found in Keycloak. Admin users may have to access sensitive server environment variables and system properties through user-configurable URLs. When configuring backchannel logout URLs or admin URLs, admin users can include placeholders like ${env.VARNAME} or ${PROPNAME}. The server replaces these placeholders with the actual values of environment variables or system properties during URL processing.",
  "repo": "keycloak/keycloak",
  "patch_hash": "7a76858fe4aa39a39fb6b86dd3d2c113d9c59854",
  "patch_info": {
    "commit_hash": "7a76858fe4aa39a39fb6b86dd3d2c113d9c59854",
    "repo": "keycloak/keycloak",
    "commit_url": "https://github.com/keycloak/keycloak/commit/7a76858fe4aa39a39fb6b86dd3d2c113d9c59854",
    "files": [
      "adapters/saml/core/src/main/java/org/keycloak/adapters/saml/config/parsers/KeyParser.java",
      "authz/client/src/main/java/org/keycloak/authorization/client/AuthzClient.java",
      "authz/client/src/main/java/org/keycloak/authorization/client/SystemPropertiesJsonParserFactory.java",
      "authz/client/src/test/java/org/keycloak/authorization/client/JsonParserTest.java",
      "authz/client/src/test/resources/keycloak.json",
      "common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java",
      "common/src/main/java/org/keycloak/common/util/SystemEnvProperties.java",
      "common/src/test/java/org/keycloak/common/util/StringPropertyReplacerTest.java",
      "core/src/main/java/org/keycloak/Config.java",
      "core/src/main/java/org/keycloak/util/JsonSerialization.java",
      "core/src/test/java/org/keycloak/JsonParserTest.java",
      "docs/documentation/upgrading/topics/changes/changes-26_0_8.adoc",
      "docs/guides/server/configuration.adoc",
      "model/jpa/src/main/java/org/keycloak/connections/jpa/DefaultJpaConnectionProviderFactory.java",
      "saml-core/src/main/java/org/keycloak/saml/common/util/StaxParserUtil.java",
      "services/src/main/java/org/keycloak/services/managers/ResourceAdminManager.java",
      "services/src/main/java/org/keycloak/services/resources/account/AccountRestService.java",
      "services/src/main/java/org/keycloak/services/util/ResolveRelative.java",
      "services/src/main/java/org/keycloak/theme/DefaultThemeManager.java",
      "services/src/test/java/org/keycloak/utils/JsonConfigProvider.java",
      "services/src/test/java/org/keycloak/utils/ScopeUtil.java",
      "testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/AuthServerTestEnricher.java",
      "testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/DeploymentTargetModifier.java",
      "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/broker/KcSamlIdPInitiatedSsoTest.java",
      "testsuite/model/src/main/java/org/keycloak/testsuite/model/Config.java",
      "testsuite/utils/src/main/java/org/keycloak/testsuite/JsonConfigProviderFactory.java"
    ],
    "message": "Restrict access to environment variables when at the server runtime\n\nSigned-off-by: Pedro Igor <pigor.craveiro@gmail.com>",
    "before_after_code_files": [
      "adapters/saml/core/src/main/java/org/keycloak/adapters/saml/config/parsers/KeyParser.java||adapters/saml/core/src/main/java/org/keycloak/adapters/saml/config/parsers/KeyParser.java",
      "authz/client/src/main/java/org/keycloak/authorization/client/AuthzClient.java||authz/client/src/main/java/org/keycloak/authorization/client/AuthzClient.java",
      "core/src/main/java/org/keycloak/util/SystemPropertiesJsonParserFactory.java||authz/client/src/main/java/org/keycloak/authorization/client/SystemPropertiesJsonParserFactory.java",
      "authz/client/src/test/java/org/keycloak/authorization/client/JsonParserTest.java||authz/client/src/test/java/org/keycloak/authorization/client/JsonParserTest.java",
      "common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java||common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java",
      "common/src/main/java/org/keycloak/common/util/SystemEnvProperties.java||common/src/main/java/org/keycloak/common/util/SystemEnvProperties.java",
      "common/src/test/java/org/keycloak/common/util/StringPropertyReplacerTest.java||common/src/test/java/org/keycloak/common/util/StringPropertyReplacerTest.java",
      "core/src/main/java/org/keycloak/Config.java||core/src/main/java/org/keycloak/Config.java",
      "core/src/main/java/org/keycloak/util/JsonSerialization.java||core/src/main/java/org/keycloak/util/JsonSerialization.java",
      "core/src/test/java/org/keycloak/JsonParserTest.java||core/src/test/java/org/keycloak/JsonParserTest.java",
      "model/jpa/src/main/java/org/keycloak/connections/jpa/DefaultJpaConnectionProviderFactory.java||model/jpa/src/main/java/org/keycloak/connections/jpa/DefaultJpaConnectionProviderFactory.java",
      "saml-core/src/main/java/org/keycloak/saml/common/util/StaxParserUtil.java||saml-core/src/main/java/org/keycloak/saml/common/util/StaxParserUtil.java",
      "services/src/main/java/org/keycloak/services/managers/ResourceAdminManager.java||services/src/main/java/org/keycloak/services/managers/ResourceAdminManager.java",
      "services/src/main/java/org/keycloak/services/resources/account/AccountRestService.java||services/src/main/java/org/keycloak/services/resources/account/AccountRestService.java",
      "services/src/main/java/org/keycloak/services/util/ResolveRelative.java||services/src/main/java/org/keycloak/services/util/ResolveRelative.java",
      "services/src/main/java/org/keycloak/theme/DefaultThemeManager.java||services/src/main/java/org/keycloak/theme/DefaultThemeManager.java",
      "services/src/main/java/org/keycloak/services/util/JsonConfigProvider.java||services/src/test/java/org/keycloak/utils/JsonConfigProvider.java",
      "services/src/test/java/org/keycloak/utils/ScopeUtil.java||services/src/test/java/org/keycloak/utils/ScopeUtil.java",
      "testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/AuthServerTestEnricher.java||testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/AuthServerTestEnricher.java",
      "testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/DeploymentTargetModifier.java||testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/DeploymentTargetModifier.java",
      "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/broker/KcSamlIdPInitiatedSsoTest.java||testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/broker/KcSamlIdPInitiatedSsoTest.java",
      "testsuite/model/src/main/java/org/keycloak/testsuite/model/Config.java||testsuite/model/src/main/java/org/keycloak/testsuite/model/Config.java",
      "testsuite/utils/src/main/java/org/keycloak/testsuite/JsonConfigProviderFactory.java||testsuite/utils/src/main/java/org/keycloak/testsuite/JsonConfigProviderFactory.java"
    ]
  },
  "patch_diff": {
    "adapters/saml/core/src/main/java/org/keycloak/adapters/saml/config/parsers/KeyParser.java||adapters/saml/core/src/main/java/org/keycloak/adapters/saml/config/parsers/KeyParser.java": [
      "File: adapters/saml/core/src/main/java/org/keycloak/adapters/saml/config/parsers/KeyParser.java -> adapters/saml/core/src/main/java/org/keycloak/adapters/saml/config/parsers/KeyParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "20: import org.keycloak.adapters.saml.config.Key;",
      "21: import org.keycloak.common.util.StringPropertyReplacer;",
      "22: import org.keycloak.saml.common.exceptions.ParsingException;",
      "23: import org.keycloak.saml.common.util.StaxParserUtil;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import org.keycloak.common.util.SystemEnvProperties;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "60:             case CERTIFICATE_PEM:",
      "61:                 StaxParserUtil.advance(xmlEventReader);",
      "62:                 value = StaxParserUtil.getElementText(xmlEventReader);",
      "64:                 break;",
      "66:             case PUBLIC_KEY_PEM:",
      "67:                 StaxParserUtil.advance(xmlEventReader);",
      "68:                 value = StaxParserUtil.getElementText(xmlEventReader);",
      "70:                 break;",
      "72:             case PRIVATE_KEY_PEM:",
      "73:                 StaxParserUtil.advance(xmlEventReader);",
      "74:                 value = StaxParserUtil.getElementText(xmlEventReader);",
      "76:                 break;",
      "77:         }",
      "78:     }",
      "79: }",
      "",
      "[Removed Lines]",
      "63:                 target.setCertificatePem(StringPropertyReplacer.replaceProperties(value));",
      "69:                 target.setPublicKeyPem(StringPropertyReplacer.replaceProperties(value));",
      "75:                 target.setPrivateKeyPem(StringPropertyReplacer.replaceProperties(value));",
      "",
      "[Added Lines]",
      "64:                 target.setCertificatePem(replaceProperties(value));",
      "70:                 target.setPublicKeyPem(replaceProperties(value));",
      "76:                 target.setPrivateKeyPem(replaceProperties(value));",
      "81:     private String replaceProperties(String value) {",
      "82:         return StringPropertyReplacer.replaceProperties(value, SystemEnvProperties.UNFILTERED::getProperty);",
      "83:     }",
      "",
      "---------------"
    ],
    "authz/client/src/main/java/org/keycloak/authorization/client/AuthzClient.java||authz/client/src/main/java/org/keycloak/authorization/client/AuthzClient.java": [
      "File: authz/client/src/main/java/org/keycloak/authorization/client/AuthzClient.java -> authz/client/src/main/java/org/keycloak/authorization/client/AuthzClient.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "22: import java.io.IOException;",
      "23: import java.io.InputStream;",
      "26: import com.fasterxml.jackson.annotation.JsonInclude;",
      "27: import com.fasterxml.jackson.databind.ObjectMapper;",
      "",
      "[Removed Lines]",
      "24: import java.util.Objects;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "33: import org.keycloak.common.crypto.CryptoIntegration;",
      "34: import org.keycloak.common.util.KeycloakUriBuilder;",
      "35: import org.keycloak.representations.AccessTokenResponse;",
      "",
      "[Removed Lines]",
      "36: import org.keycloak.util.SystemPropertiesJsonParserFactory;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "core/src/main/java/org/keycloak/util/SystemPropertiesJsonParserFactory.java||authz/client/src/main/java/org/keycloak/authorization/client/SystemPropertiesJsonParserFactory.java": [
      "File: core/src/main/java/org/keycloak/util/SystemPropertiesJsonParserFactory.java -> authz/client/src/main/java/org/keycloak/authorization/client/SystemPropertiesJsonParserFactory.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "20: import com.fasterxml.jackson.core.JsonParser;",
      "21: import com.fasterxml.jackson.core.io.IOContext;",
      "",
      "[Removed Lines]",
      "18: package org.keycloak.util;",
      "",
      "[Added Lines]",
      "18: package org.keycloak.authorization.client;",
      "20: import java.io.IOException;",
      "21: import java.io.InputStream;",
      "22: import java.io.Reader;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "24: import org.keycloak.common.util.StringPropertyReplacer;",
      "25: import org.keycloak.common.util.SystemEnvProperties;",
      "41:     @Override",
      "42:     protected JsonParser _createParser(InputStream in, IOContext ctxt) throws IOException {",
      "",
      "[Removed Lines]",
      "27: import java.io.IOException;",
      "28: import java.io.InputStream;",
      "29: import java.io.Reader;",
      "30: import java.util.Properties;",
      "37: public class SystemPropertiesJsonParserFactory extends MappingJsonFactory {",
      "39:     private static final Properties properties = new SystemEnvProperties();",
      "",
      "[Added Lines]",
      "36: class SystemPropertiesJsonParserFactory extends MappingJsonFactory {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "71:         @Override",
      "72:         public String getText() throws IOException {",
      "73:             String orig = super.getText();",
      "75:         }",
      "76:     }",
      "77: }",
      "",
      "[Removed Lines]",
      "74:             return StringPropertyReplacer.replaceProperties(orig, properties);",
      "",
      "[Added Lines]",
      "71:             return StringPropertyReplacer.replaceProperties(orig, SystemEnvProperties.UNFILTERED::getProperty);",
      "",
      "---------------"
    ],
    "authz/client/src/test/java/org/keycloak/authorization/client/JsonParserTest.java||authz/client/src/test/java/org/keycloak/authorization/client/JsonParserTest.java": [
      "File: authz/client/src/test/java/org/keycloak/authorization/client/JsonParserTest.java -> authz/client/src/test/java/org/keycloak/authorization/client/JsonParserTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "18: package org.keycloak.authorization.client;",
      "20: import java.io.IOException;",
      "21: import java.io.InputStream;",
      "23: import com.fasterxml.jackson.databind.ObjectMapper;",
      "24: import org.junit.Assert;",
      "25: import org.junit.Test;",
      "26: import org.keycloak.representations.adapters.config.AdapterConfig;",
      "31: public class JsonParserTest {",
      "33:     @Test",
      "34:     public void testParsingSystemProps() throws IOException {",
      "35:         System.setProperty(\"my.host\", \"foo\");",
      "36:         System.setProperty(\"con.pool.size\", \"200\");",
      "37:         System.setProperty(\"allow.any.hostname\", \"true\");",
      "38:         System.setProperty(\"socket.timeout.millis\", \"6000\");",
      "39:         System.setProperty(\"connection.timeout.millis\", \"7000\");",
      "40:         System.setProperty(\"connection.ttl.millis\", \"500\");",
      "42:         InputStream is = getClass().getClassLoader().getResourceAsStream(\"keycloak.json\");",
      "44:         ObjectMapper mapper = new ObjectMapper(new SystemPropertiesJsonParserFactory());",
      "45:         AdapterConfig config = mapper.readValue(is, AdapterConfig.class);",
      "46:         Assert.assertEquals(\"http://foo:8080/auth\", config.getAuthServerUrl());",
      "47:         Assert.assertEquals(\"external\", config.getSslRequired());",
      "48:         Assert.assertEquals(\"angular-product${non.existing}\", config.getResource());",
      "49:         Assert.assertTrue(config.isPublicClient());",
      "50:         Assert.assertTrue(config.isAllowAnyHostname());",
      "51:         Assert.assertEquals(100, config.getCorsMaxAge());",
      "52:         Assert.assertEquals(200, config.getConnectionPoolSize());",
      "53:         Assert.assertEquals(6000L, config.getSocketTimeout());",
      "54:         Assert.assertEquals(7000L, config.getConnectionTimeout());",
      "55:         Assert.assertEquals(500L, config.getConnectionTTL());",
      "56:     }",
      "57: }",
      "",
      "---------------"
    ],
    "common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java||common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java": [
      "File: common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java -> common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "17: package org.keycloak.common.util;",
      "19: import java.io.File;",
      "32: public final class StringPropertyReplacer",
      "33: {",
      "38:     private static final String FILE_SEPARATOR = File.separator;",
      "",
      "[Removed Lines]",
      "20: import java.util.Properties;",
      "35:     public static final String NEWLINE = System.getProperty(\"line.separator\", \"\\n\");",
      "",
      "[Added Lines]",
      "20: import java.util.Optional;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "51:     private static final int SEEN_DOLLAR = 1;",
      "52:     private static final int IN_BRACKET = 2;",
      "",
      "[Removed Lines]",
      "54:     private static final Properties systemEnvProperties = new SystemEnvProperties();",
      "",
      "[Added Lines]",
      "52:     private static final PropertyResolver NULL_RESOLVER = property -> null;",
      "53:     private static PropertyResolver DEFAULT_PROPERTY_RESOLVER;",
      "55:     public static void setDefaultPropertyResolver(PropertyResolver systemVariables) {",
      "56:         DEFAULT_PROPERTY_RESOLVER = systemVariables;",
      "57:     }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "78:     }",
      "",
      "[Removed Lines]",
      "75:     public static String replaceProperties(final String string)",
      "76:     {",
      "77:         return replaceProperties(string, (Properties) null);",
      "",
      "[Added Lines]",
      "78:     public static String replaceProperties(final String string) {",
      "79:         return replaceProperties(string, getDefaultPropertyResolver());",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "107:     public static String replaceProperties(final String string, PropertyResolver resolver)",
      "108:     {",
      "109:         if(string == null) {",
      "",
      "[Removed Lines]",
      "100:     public static String replaceProperties(final String string, final Properties props) {",
      "101:         if (props == null) {",
      "102:             return replaceProperties(string, (PropertyResolver) null);",
      "103:         }",
      "104:         return replaceProperties(string, props::getProperty);",
      "105:     }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "171:                     else",
      "172:                     {",
      "179:                         if (value == null)",
      "180:                         {",
      "",
      "[Removed Lines]",
      "174:                         if (resolver != null)",
      "175:                             value = resolver.resolve(key);",
      "176:                         else",
      "177:                             value = systemEnvProperties.getProperty(key);",
      "",
      "[Added Lines]",
      "169:                         value = resolveValue(resolver, key);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "183:                             if (colon > 0)",
      "184:                             {",
      "185:                                 String realKey = key.substring(0, colon);",
      "191:                                 if (value == null)",
      "192:                                 {",
      "",
      "[Removed Lines]",
      "186:                                 if (resolver != null)",
      "187:                                     value = resolver.resolve(realKey);",
      "188:                                 else",
      "189:                                     value = systemEnvProperties.getProperty(realKey);",
      "",
      "[Added Lines]",
      "178:                                 value = resolveValue(resolver, realKey);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "257:             {",
      "259:                 String key1 = key.substring(0, comma);",
      "264:             }",
      "266:             if (value == null && comma < key.length() - 1)",
      "267:             {",
      "268:                 String key2 = key.substring(comma + 1);",
      "273:             }",
      "274:         }",
      "276:         return value;",
      "277:     }",
      "279:     public interface PropertyResolver {",
      "280:         String resolve(String property);",
      "281:     }",
      "282: }",
      "",
      "[Removed Lines]",
      "260:                 if (resolver != null)",
      "261:                     value = resolver.resolve(key1);",
      "262:                 else",
      "263:                     value = systemEnvProperties.getProperty(key1);",
      "269:                 if (resolver != null)",
      "270:                     value = resolver.resolve(key2);",
      "271:                 else",
      "272:                     value = systemEnvProperties.getProperty(key2);",
      "",
      "[Added Lines]",
      "249:                 value = resolveValue(resolver, key1);",
      "255:                 value = resolveValue(resolver, key2);",
      "266:     private static String resolveValue(PropertyResolver resolver, String key) {",
      "267:         if (resolver == null) {",
      "268:             return getDefaultPropertyResolver().resolve(key);",
      "269:         }",
      "271:         return resolver.resolve(key);",
      "272:     }",
      "274:     private static PropertyResolver getDefaultPropertyResolver() {",
      "275:         return Optional.ofNullable(DEFAULT_PROPERTY_RESOLVER).orElse(NULL_RESOLVER);",
      "276:     }",
      "",
      "---------------"
    ],
    "common/src/main/java/org/keycloak/common/util/SystemEnvProperties.java||common/src/main/java/org/keycloak/common/util/SystemEnvProperties.java": [
      "File: common/src/main/java/org/keycloak/common/util/SystemEnvProperties.java -> common/src/main/java/org/keycloak/common/util/SystemEnvProperties.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "18: package org.keycloak.common.util;",
      "20: import java.util.Properties;",
      "25: public class SystemEnvProperties extends Properties {",
      "27:     @Override",
      "28:     public String getProperty(String key) {",
      "29:         if (key.startsWith(\"env.\")) {",
      "31:         } else {",
      "33:         }",
      "34:     }",
      "",
      "[Removed Lines]",
      "30:             return System.getenv().get(key.substring(4));",
      "32:             return System.getProperty(key);",
      "",
      "[Added Lines]",
      "20: import java.util.Collections;",
      "21: import java.util.Optional;",
      "23: import java.util.Set;",
      "42:     public static final SystemEnvProperties UNFILTERED = new SystemEnvProperties(Collections.emptySet()) {",
      "43:         @Override",
      "44:         protected boolean isAllowed(String key) {",
      "45:             return true;",
      "46:         }",
      "47:     };",
      "49:     private final Set<String> allowedSystemVariables;",
      "56:     public SystemEnvProperties(Set<String> allowedSystemVariables) {",
      "57:         this.allowedSystemVariables = Optional.ofNullable(allowedSystemVariables).orElse(Collections.emptySet());",
      "58:     }",
      "63:             String envKey = key.substring(4);",
      "64:             return isAllowed(envKey) ? System.getenv().get(envKey) : null;",
      "66:             return isAllowed(key) ? System.getProperty(key) : null;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "39:         return value != null ? value : defaultValue;",
      "40:     }",
      "42: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "76:     protected boolean isAllowed(String key) {",
      "77:         return allowedSystemVariables.contains(key);",
      "78:     }",
      "",
      "---------------"
    ],
    "common/src/test/java/org/keycloak/common/util/StringPropertyReplacerTest.java||common/src/test/java/org/keycloak/common/util/StringPropertyReplacerTest.java": [
      "File: common/src/test/java/org/keycloak/common/util/StringPropertyReplacerTest.java -> common/src/test/java/org/keycloak/common/util/StringPropertyReplacerTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "33:     @Test",
      "34:     public void testSystemProperties() throws NoSuchAlgorithmException {",
      "35:         System.setProperty(\"prop1\", \"val1\");",
      "39:         System.setProperty(\"prop2\", \"val2\");",
      "45:         System.setProperty(\"prop5\", \"val5\");",
      "47:         System.setProperty(\"prop4\", \"val4\");",
      "49:         System.setProperty(\"prop3\", \"val3\");",
      "55:         System.setProperty(\"prop7\", \"val7\");",
      "57:         System.setProperty(\"prop6\", \"val6\");",
      "59:     }",
      "61:     @Test",
      "62:     public void testStackOverflow() {",
      "63:         System.setProperty(\"prop\", \"${prop}\");",
      "65:         Assert.assertEquals(\"Infinite recursion happening when replacing properties on '${prop}'\", ise.getMessage());",
      "66:     }",
      "",
      "[Removed Lines]",
      "36:         Assert.assertEquals(\"foo-val1\", StringPropertyReplacer.replaceProperties(\"foo-${prop1}\"));",
      "38:         Assert.assertEquals(\"foo-def\", StringPropertyReplacer.replaceProperties(\"foo-${prop2:def}\"));",
      "40:         Assert.assertEquals(\"foo-val2\", StringPropertyReplacer.replaceProperties(\"foo-${prop2:def}\"));",
      "44:         Assert.assertEquals(\"foo-def\", StringPropertyReplacer.replaceProperties(\"foo-${prop3:${prop4:${prop5:def}}}\"));",
      "46:         Assert.assertEquals(\"foo-val5\", StringPropertyReplacer.replaceProperties(\"foo-${prop3:${prop4:${prop5:def}}}\"));",
      "48:         Assert.assertEquals(\"foo-val4\", StringPropertyReplacer.replaceProperties(\"foo-${prop3:${prop4:${prop5:def}}}\"));",
      "50:         Assert.assertEquals(\"foo-val3\", StringPropertyReplacer.replaceProperties(\"foo-${prop3:${prop4:${prop5:def}}}\"));",
      "54:         Assert.assertEquals(\"foo-def\", StringPropertyReplacer.replaceProperties(\"foo-${prop6,prop7:def}\"));",
      "56:         Assert.assertEquals(\"foo-val7\", StringPropertyReplacer.replaceProperties(\"foo-${prop6,prop7:def}\"));",
      "58:         Assert.assertEquals(\"foo-val6\", StringPropertyReplacer.replaceProperties(\"foo-${prop6,prop7:def}\"));",
      "64:         IllegalStateException ise = Assert.assertThrows(IllegalStateException.class, () -> StringPropertyReplacer.replaceProperties(\"${prop}\"));",
      "",
      "[Added Lines]",
      "36:         Assert.assertEquals(\"foo-val1\", replaceProperties(\"foo-${prop1}\"));",
      "38:         Assert.assertEquals(\"foo-def\", replaceProperties(\"foo-${prop2:def}\"));",
      "40:         Assert.assertEquals(\"foo-val2\", replaceProperties(\"foo-${prop2:def}\"));",
      "44:         Assert.assertEquals(\"foo-def\", replaceProperties(\"foo-${prop3:${prop4:${prop5:def}}}\"));",
      "46:         Assert.assertEquals(\"foo-val5\", replaceProperties(\"foo-${prop3:${prop4:${prop5:def}}}\"));",
      "48:         Assert.assertEquals(\"foo-val4\", replaceProperties(\"foo-${prop3:${prop4:${prop5:def}}}\"));",
      "50:         Assert.assertEquals(\"foo-val3\", replaceProperties(\"foo-${prop3:${prop4:${prop5:def}}}\"));",
      "54:         Assert.assertEquals(\"foo-def\", replaceProperties(\"foo-${prop6,prop7:def}\"));",
      "56:         Assert.assertEquals(\"foo-val7\", replaceProperties(\"foo-${prop6,prop7:def}\"));",
      "58:         Assert.assertEquals(\"foo-val6\", replaceProperties(\"foo-${prop6,prop7:def}\"));",
      "64:         IllegalStateException ise = Assert.assertThrows(IllegalStateException.class, () -> replaceProperties(\"${prop}\"));",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "72:         for (String key : env.keySet()) {",
      "73:             String value = env.get(key);",
      "74:             if ( !(value == null || \"\".equals(value)) ) {",
      "76:                 break;",
      "77:             }",
      "78:         }",
      "79:     }",
      "80: }",
      "",
      "[Removed Lines]",
      "75:                 Assert.assertEquals(\"foo-\" + value, StringPropertyReplacer.replaceProperties(\"foo-${env.\" + key + \"}\"));",
      "",
      "[Added Lines]",
      "75:                 Assert.assertEquals(\"foo-\" + value, replaceProperties(\"foo-${env.\" + key + \"}\"));",
      "81:     private String replaceProperties(String key) {",
      "82:         return StringPropertyReplacer.replaceProperties(key, SystemEnvProperties.UNFILTERED::getProperty);",
      "83:     }",
      "",
      "---------------"
    ],
    "core/src/main/java/org/keycloak/Config.java||core/src/main/java/org/keycloak/Config.java": [
      "File: core/src/main/java/org/keycloak/Config.java -> core/src/main/java/org/keycloak/Config.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "18: package org.keycloak;",
      "20: import java.util.Set;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "20: import java.util.Arrays;",
      "21: import java.util.Collections;",
      "22: import java.util.HashSet;",
      "25: import org.keycloak.common.util.StringPropertyReplacer;",
      "26: import org.keycloak.common.util.StringPropertyReplacer.PropertyResolver;",
      "27: import org.keycloak.common.util.SystemEnvProperties;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "29:     public static void init(ConfigProvider configProvider) {",
      "30:         Config.configProvider = configProvider;",
      "31:     }",
      "33:     public static String getAdminRealm() {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "38:         StringPropertyReplacer.setDefaultPropertyResolver(new PropertyResolver() {",
      "39:             SystemEnvProperties systemVariables = new SystemEnvProperties(Config.getAllowedSystemVariables());",
      "41:             @Override",
      "42:             public String resolve(String property) {",
      "43:                 return systemVariables.getProperty(property);",
      "44:             }",
      "45:         });",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "56:          return configProvider.scope(scope);",
      "57:     }",
      "59:     public static interface ConfigProvider {",
      "61:         String getProvider(String spi);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "74:     private static Set<String> getAllowedSystemVariables() {",
      "75:         Scope adminScope = configProvider.scope(\"admin\");",
      "77:         if (adminScope == null) {",
      "78:             return Collections.emptySet();",
      "79:         }",
      "81:         String[] allowedSystemVariables = adminScope.getArray(\"allowed-system-variables\");",
      "83:         if (allowedSystemVariables == null) {",
      "84:             return Collections.emptySet();",
      "85:         }",
      "87:         return new HashSet<>(Arrays.asList(allowedSystemVariables));",
      "88:     }",
      "",
      "---------------"
    ],
    "core/src/main/java/org/keycloak/util/JsonSerialization.java||core/src/main/java/org/keycloak/util/JsonSerialization.java": [
      "File: core/src/main/java/org/keycloak/util/JsonSerialization.java -> core/src/main/java/org/keycloak/util/JsonSerialization.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "40: public class JsonSerialization {",
      "41:     public static final ObjectMapper mapper = new ObjectMapper();",
      "42:     public static final ObjectMapper prettyMapper = new ObjectMapper();",
      "45:     static {",
      "46:         mapper.registerModule(new Jdk8Module());",
      "",
      "[Removed Lines]",
      "43:     public static final ObjectMapper sysPropertiesAwareMapper = new ObjectMapper(new SystemPropertiesJsonParserFactory());",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "80:     }",
      "82:     public static <T> T readValue(InputStream bytes, Class<T> type) throws IOException {",
      "84:     }",
      "86:     public static <T> T readValue(String string, TypeReference<T> type) throws IOException {",
      "",
      "[Removed Lines]",
      "83:         return readValue(bytes, type, false);",
      "",
      "[Added Lines]",
      "82:         return mapper.readValue(bytes, type);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "91:         return mapper.readValue(bytes, type);",
      "92:     }",
      "",
      "[Removed Lines]",
      "94:     public static <T> T readValue(InputStream bytes, Class<T> type, boolean replaceSystemProperties) throws IOException {",
      "95:         if (replaceSystemProperties) {",
      "96:             return sysPropertiesAwareMapper.readValue(bytes, type);",
      "97:         } else {",
      "98:             return mapper.readValue(bytes, type);",
      "99:         }",
      "100:     }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "core/src/test/java/org/keycloak/JsonParserTest.java||core/src/test/java/org/keycloak/JsonParserTest.java": [
      "File: core/src/test/java/org/keycloak/JsonParserTest.java -> core/src/test/java/org/keycloak/JsonParserTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "23: import org.keycloak.representations.ClaimsRepresentation;",
      "24: import org.keycloak.representations.IDToken;",
      "25: import org.keycloak.representations.JsonWebToken;",
      "27: import org.keycloak.representations.idm.ClientPoliciesRepresentation;",
      "28: import org.keycloak.representations.idm.ClientPolicyConditionConfigurationRepresentation;",
      "29: import org.keycloak.representations.idm.ClientPolicyConditionRepresentation;",
      "",
      "[Removed Lines]",
      "26: import org.keycloak.representations.adapters.config.AdapterConfig;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "97:         Assert.assertNotNull(nested.get(\"foo\"));",
      "98:     }",
      "124:     static Pattern substitution = Pattern.compile(\"\\\\$\\\\{([^}]+)\\\\}\");",
      "126:     @Test",
      "",
      "[Removed Lines]",
      "100:     @Test",
      "101:     public void testParsingSystemProps() throws IOException {",
      "102:         System.setProperty(\"my.host\", \"foo\");",
      "103:         System.setProperty(\"con.pool.size\", \"200\");",
      "104:         System.setProperty(\"allow.any.hostname\", \"true\");",
      "105:         System.setProperty(\"socket.timeout.millis\", \"6000\");",
      "106:         System.setProperty(\"connection.timeout.millis\", \"7000\");",
      "107:         System.setProperty(\"connection.ttl.millis\", \"500\");",
      "109:         InputStream is = getClass().getClassLoader().getResourceAsStream(\"keycloak.json\");",
      "111:         AdapterConfig config = JsonSerialization.readValue(is, AdapterConfig.class, true);",
      "112:         Assert.assertEquals(\"http://foo:8080/auth\", config.getAuthServerUrl());",
      "113:         Assert.assertEquals(\"external\", config.getSslRequired());",
      "114:         Assert.assertEquals(\"angular-product${non.existing}\", config.getResource());",
      "115:         Assert.assertTrue(config.isPublicClient());",
      "116:         Assert.assertTrue(config.isAllowAnyHostname());",
      "117:         Assert.assertEquals(100, config.getCorsMaxAge());",
      "118:         Assert.assertEquals(200, config.getConnectionPoolSize());",
      "119:         Assert.assertEquals(6000L, config.getSocketTimeout());",
      "120:         Assert.assertEquals(7000L, config.getConnectionTimeout());",
      "121:         Assert.assertEquals(500L, config.getConnectionTTL());",
      "122:     }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "263:         }",
      "264:     }",
      "",
      "[Removed Lines]",
      "266: }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "model/jpa/src/main/java/org/keycloak/connections/jpa/DefaultJpaConnectionProviderFactory.java||model/jpa/src/main/java/org/keycloak/connections/jpa/DefaultJpaConnectionProviderFactory.java": [
      "File: model/jpa/src/main/java/org/keycloak/connections/jpa/DefaultJpaConnectionProviderFactory.java -> model/jpa/src/main/java/org/keycloak/connections/jpa/DefaultJpaConnectionProviderFactory.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "377:                     url = addH2NonKeywords(url);",
      "378:                 }",
      "379:                 Class.forName(driver);",
      "381:             }",
      "382:         } catch (Exception e) {",
      "383:             throw new RuntimeException(\"Failed to connect to database\", e);",
      "",
      "[Removed Lines]",
      "380:                 return DriverManager.getConnection(StringPropertyReplacer.replaceProperties(url, System.getProperties()), config.get(\"user\"), config.get(\"password\"));",
      "",
      "[Added Lines]",
      "380:                 return DriverManager.getConnection(StringPropertyReplacer.replaceProperties(url, System.getProperties()::getProperty), config.get(\"user\"), config.get(\"password\"));",
      "",
      "---------------"
    ],
    "saml-core/src/main/java/org/keycloak/saml/common/util/StaxParserUtil.java||saml-core/src/main/java/org/keycloak/saml/common/util/StaxParserUtil.java": [
      "File: saml-core/src/main/java/org/keycloak/saml/common/util/StaxParserUtil.java -> saml-core/src/main/java/org/keycloak/saml/common/util/StaxParserUtil.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "17: package org.keycloak.saml.common.util;",
      "19: import org.keycloak.common.util.StringPropertyReplacer;",
      "20: import org.keycloak.saml.common.ErrorCodes;",
      "21: import org.keycloak.saml.common.PicketLinkLogger;",
      "22: import org.keycloak.saml.common.PicketLinkLoggerFactory;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "20: import org.keycloak.common.util.SystemEnvProperties;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "211:         final String value = attribute.getValue();",
      "214:     }",
      "",
      "[Removed Lines]",
      "213:         return value == null ? null : trim(StringPropertyReplacer.replaceProperties(value));",
      "",
      "[Added Lines]",
      "214:         return value == null ? null : trim(StringPropertyReplacer.replaceProperties(value, SystemEnvProperties.UNFILTERED::getProperty));",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "251:     public static String getAttributeValueRP(StartElement startElement, HasQName attrName) {",
      "252:         final String value = getAttributeValue(startElement, attrName.getQName());",
      "254:     }",
      "",
      "[Removed Lines]",
      "253:         return value == null ? null : StringPropertyReplacer.replaceProperties(value);",
      "",
      "[Added Lines]",
      "254:         return value == null ? null : StringPropertyReplacer.replaceProperties(value, SystemEnvProperties.UNFILTERED::getProperty);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "536:     public static String getElementTextRP(XMLEventReader xmlEventReader) throws ParsingException {",
      "537:         try {",
      "539:         } catch (XMLStreamException e) {",
      "540:             throw logger.parserException(e);",
      "541:         }",
      "",
      "[Removed Lines]",
      "538:             return trim(StringPropertyReplacer.replaceProperties(xmlEventReader.getElementText()));",
      "",
      "[Added Lines]",
      "539:             return trim(StringPropertyReplacer.replaceProperties(xmlEventReader.getElementText(), SystemEnvProperties.UNFILTERED::getProperty));",
      "",
      "---------------"
    ],
    "services/src/main/java/org/keycloak/services/managers/ResourceAdminManager.java||services/src/main/java/org/keycloak/services/managers/ResourceAdminManager.java": [
      "File: services/src/main/java/org/keycloak/services/managers/ResourceAdminManager.java -> services/src/main/java/org/keycloak/services/managers/ResourceAdminManager.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "26: import org.keycloak.TokenIdGenerator;",
      "27: import org.keycloak.common.util.KeycloakUriBuilder;",
      "28: import org.keycloak.common.util.MultivaluedHashMap;",
      "30: import org.keycloak.common.util.Time;",
      "31: import org.keycloak.connections.httpclient.HttpClientProvider;",
      "32: import org.keycloak.constants.AdapterConstants;",
      "",
      "[Removed Lines]",
      "29: import org.keycloak.common.util.StringPropertyReplacer;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "58: import java.util.Map;",
      "59: import java.util.Set;",
      "60: import java.util.concurrent.atomic.AtomicInteger;",
      "62: import org.apache.http.client.methods.CloseableHttpResponse;",
      "63: import org.apache.http.impl.client.CloseableHttpClient;",
      "",
      "[Removed Lines]",
      "61: import java.util.stream.Stream;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "77:     }",
      "79:     public static String resolveUri(KeycloakSession session, String rootUrl, String uri) {",
      "83:    }",
      "",
      "[Removed Lines]",
      "80:         String absoluteURI = ResolveRelative.resolveRelativeUri(session, rootUrl, uri);",
      "81:         return StringPropertyReplacer.replaceProperties(absoluteURI);",
      "",
      "[Added Lines]",
      "78:         return ResolveRelative.resolveRelativeUri(session, rootUrl, uri);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "88:             return null;",
      "89:         }",
      "95:     }",
      "",
      "[Removed Lines]",
      "91:         String absoluteURI = ResolveRelative.resolveRelativeUri(session, client.getRootUrl(), mgmtUrl);",
      "94:         return StringPropertyReplacer.replaceProperties(absoluteURI);",
      "",
      "[Added Lines]",
      "88:         return ResolveRelative.resolveRelativeUri(session, client.getRootUrl(), mgmtUrl);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "192:             return null;",
      "193:         }",
      "199:     }",
      "201:     protected Response sendBackChannelLogoutRequestToClientUri(ClientModel resource,",
      "",
      "[Removed Lines]",
      "195:         String absoluteURI = ResolveRelative.resolveRelativeUri(session, client.getRootUrl(), backchannelLogoutUrl);",
      "198:         return StringPropertyReplacer.replaceProperties(absoluteURI);",
      "",
      "[Added Lines]",
      "189:         return ResolveRelative.resolveRelativeUri(session, client.getRootUrl(), backchannelLogoutUrl);",
      "",
      "---------------"
    ],
    "services/src/main/java/org/keycloak/services/resources/account/AccountRestService.java||services/src/main/java/org/keycloak/services/resources/account/AccountRestService.java": [
      "File: services/src/main/java/org/keycloak/services/resources/account/AccountRestService.java -> services/src/main/java/org/keycloak/services/resources/account/AccountRestService.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "265:     private ConsentRepresentation modelToRepresentation(UserConsentModel model) {",
      "266:         List<ConsentScopeRepresentation> grantedScopes = model.getGrantedClientScopes().stream()",
      "268:                 .collect(Collectors.toList());",
      "269:         return new ConsentRepresentation(grantedScopes, model.getCreatedDate(), model.getLastUpdatedDate());",
      "270:     }",
      "",
      "[Removed Lines]",
      "267:                 .map(m -> new ConsentScopeRepresentation(m.getId(), m.getConsentScreenText()!= null ? m.getConsentScreenText() : m.getName(), StringPropertyReplacer.replaceProperties(m.getConsentScreenText(), getProperties())))",
      "",
      "[Added Lines]",
      "267:                 .map(m -> new ConsentScopeRepresentation(m.getId(), m.getConsentScreenText()!= null ? m.getConsentScreenText() : m.getName(), StringPropertyReplacer.replaceProperties(m.getConsentScreenText(), getProperties()::getProperty)))",
      "",
      "---------------"
    ],
    "services/src/main/java/org/keycloak/services/util/ResolveRelative.java||services/src/main/java/org/keycloak/services/util/ResolveRelative.java": [
      "File: services/src/main/java/org/keycloak/services/util/ResolveRelative.java -> services/src/main/java/org/keycloak/services/util/ResolveRelative.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "18: package org.keycloak.services.util;",
      "20: import org.keycloak.models.Constants;",
      "21: import org.keycloak.models.KeycloakSession;",
      "22: import org.keycloak.urls.UrlType;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "20: import org.keycloak.common.util.StringPropertyReplacer;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "36:     }",
      "38:     public static String resolveRelativeUri(String frontendUrl, String adminUrl, String rootUrl, String url) {",
      "39:         if (url == null || !url.startsWith(\"/\")) {",
      "41:         } else if (rootUrl != null && !rootUrl.isEmpty()) {",
      "43:         } else {",
      "45:         }",
      "46:     }",
      "47:     public static String resolveRootUrl(KeycloakSession session, String rootUrl) {",
      "48:         String frontendUrl = session.getContext().getUri(UrlType.FRONTEND).getBaseUri().toString();",
      "49:         String adminUrl = session.getContext().getUri(UrlType.ADMIN).getBaseUri().toString();",
      "",
      "[Removed Lines]",
      "40:             return url;",
      "42:             return resolveRootUrl(frontendUrl, adminUrl, rootUrl) + url;",
      "44:             return UriBuilder.fromUri(frontendUrl).replacePath(url).build().toString();",
      "",
      "[Added Lines]",
      "40:         String finalUrl;",
      "43:             finalUrl = url;",
      "45:             finalUrl = resolveRootUrl(frontendUrl, adminUrl, rootUrl) + url;",
      "47:             finalUrl = UriBuilder.fromUri(frontendUrl).replacePath(url).build().toString();",
      "50:         return StringPropertyReplacer.replaceProperties(finalUrl);",
      "",
      "---------------"
    ],
    "services/src/main/java/org/keycloak/theme/DefaultThemeManager.java||services/src/main/java/org/keycloak/theme/DefaultThemeManager.java": [
      "File: services/src/main/java/org/keycloak/theme/DefaultThemeManager.java -> services/src/main/java/org/keycloak/theme/DefaultThemeManager.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "353:         private void substituteProperties(final Properties properties) {",
      "354:             for (final String propertyName : properties.stringPropertyNames()) {",
      "356:             }",
      "357:         }",
      "358:     }",
      "",
      "[Removed Lines]",
      "355:                 properties.setProperty(propertyName, StringPropertyReplacer.replaceProperties(properties.getProperty(propertyName), new SystemEnvProperties()));",
      "",
      "[Added Lines]",
      "355:                 properties.setProperty(propertyName, StringPropertyReplacer.replaceProperties(properties.getProperty(propertyName), SystemEnvProperties.UNFILTERED::getProperty));",
      "",
      "---------------"
    ],
    "services/src/main/java/org/keycloak/services/util/JsonConfigProvider.java||services/src/test/java/org/keycloak/utils/JsonConfigProvider.java": [
      "File: services/src/main/java/org/keycloak/services/util/JsonConfigProvider.java -> services/src/test/java/org/keycloak/utils/JsonConfigProvider.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "20: import com.fasterxml.jackson.databind.JsonNode;",
      "21: import org.keycloak.Config;",
      "22: import org.keycloak.common.util.StringPropertyReplacer;",
      "30: public class JsonConfigProvider implements Config.ConfigProvider {",
      "34:     private JsonNode config;",
      "37:         this.config = config;",
      "39:     }",
      "41:     @Override",
      "",
      "[Removed Lines]",
      "18: package org.keycloak.services.util;",
      "24: import java.util.Properties;",
      "25: import java.util.Set;",
      "32:     private Properties properties;",
      "36:     public JsonConfigProvider(JsonNode config, Properties properties) {",
      "38:         this.properties = properties;",
      "",
      "[Added Lines]",
      "18: package org.keycloak.utils;",
      "20: import java.util.Set;",
      "25: import org.keycloak.common.util.SystemEnvProperties;",
      "34:     public JsonConfigProvider(JsonNode config) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "70:     }",
      "72:     private String replaceProperties(String value) {",
      "74:     }",
      "76:     public class JsonScope implements Config.Scope {",
      "",
      "[Removed Lines]",
      "73:         return StringPropertyReplacer.replaceProperties(value, properties);",
      "",
      "[Added Lines]",
      "70:         return StringPropertyReplacer.replaceProperties(value, SystemEnvProperties.UNFILTERED::getProperty);",
      "",
      "---------------"
    ],
    "services/src/test/java/org/keycloak/utils/ScopeUtil.java||services/src/test/java/org/keycloak/utils/ScopeUtil.java": [
      "File: services/src/test/java/org/keycloak/utils/ScopeUtil.java -> services/src/test/java/org/keycloak/utils/ScopeUtil.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "18: package org.keycloak.utils;",
      "20: import org.junit.Assert;",
      "24: import java.io.IOException;",
      "25: import java.util.Map;",
      "28: import com.fasterxml.jackson.databind.JsonNode;",
      "29: import com.fasterxml.jackson.databind.ObjectMapper;",
      "31: public class ScopeUtil {",
      "",
      "[Removed Lines]",
      "21: import org.keycloak.services.util.JsonConfigProvider;",
      "22: import org.keycloak.services.util.JsonConfigProvider.JsonScope;",
      "26: import java.util.Properties;",
      "",
      "[Added Lines]",
      "27: import org.keycloak.utils.JsonConfigProvider.JsonScope;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "34:         ObjectMapper mapper = new ObjectMapper();",
      "35:         try {",
      "36:             JsonNode config = mapper.readTree(json(properties));",
      "38:         } catch (IOException e) {",
      "39:             Assert.fail(\"Could not parse json\");",
      "40:         }",
      "",
      "[Removed Lines]",
      "37:             return new JsonConfigProvider(config, new Properties()).new JsonScope(config);",
      "",
      "[Added Lines]",
      "35:             return new JsonConfigProvider(config).new JsonScope(config);",
      "",
      "---------------"
    ],
    "testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/AuthServerTestEnricher.java||testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/AuthServerTestEnricher.java": [
      "File: testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/AuthServerTestEnricher.java -> testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/AuthServerTestEnricher.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "42: import org.keycloak.admin.client.Keycloak;",
      "43: import org.keycloak.common.crypto.FipsMode;",
      "44: import org.keycloak.common.util.StringPropertyReplacer;",
      "45: import org.keycloak.representations.idm.RealmRepresentation;",
      "46: import org.keycloak.services.error.KeycloakErrorHandler;",
      "47: import org.keycloak.testsuite.ProfileAssume;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "45: import org.keycloak.common.util.SystemEnvProperties;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "436:         log.infof(\"Running SQL script created by liquibase during manual migration flow\", sqlScriptPath);",
      "437:         String prefix = \"keycloak.connectionsJpa.\";",
      "438:         String jdbcDriver = System.getProperty(prefix + \"driver\");",
      "440:         String dbUser = System.getProperty(prefix + \"user\");",
      "441:         String dbPassword = System.getProperty(prefix + \"password\");",
      "",
      "[Removed Lines]",
      "439:         String dbUrl = StringPropertyReplacer.replaceProperties(System.getProperty(prefix + \"url\"));",
      "",
      "[Added Lines]",
      "440:         String dbUrl = StringPropertyReplacer.replaceProperties(System.getProperty(prefix + \"url\"), SystemEnvProperties.UNFILTERED::getProperty);",
      "",
      "---------------"
    ],
    "testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/DeploymentTargetModifier.java||testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/DeploymentTargetModifier.java": [
      "File: testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/DeploymentTargetModifier.java -> testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/DeploymentTargetModifier.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "29: import org.jboss.arquillian.test.spi.TestClass;",
      "30: import org.jboss.logging.Logger;",
      "31: import org.keycloak.common.util.StringPropertyReplacer;",
      "32: import org.keycloak.testsuite.utils.arquillian.ContainerConstants;",
      "34: import static org.keycloak.testsuite.arquillian.AppServerTestEnricher.getAppServerQualifiers;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "32: import org.keycloak.common.util.SystemEnvProperties;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "100:                     String newAppServerQualifier = ContainerConstants.APP_SERVER_PREFIX  + AppServerTestEnricher.CURRENT_APP_SERVER + \"-\" + suffix;",
      "101:                     updateServerQualifier(deployment, testClass, newAppServerQualifier);",
      "102:                 } else {",
      "104:                     if (!newServerQualifier.equals(containerQualifier)) {",
      "105:                         updateServerQualifier(deployment, testClass, newServerQualifier);",
      "106:                     }",
      "",
      "[Removed Lines]",
      "103:                     String newServerQualifier = StringPropertyReplacer.replaceProperties(containerQualifier);",
      "",
      "[Added Lines]",
      "104:                     String newServerQualifier = StringPropertyReplacer.replaceProperties(containerQualifier, SystemEnvProperties.UNFILTERED::getProperty);",
      "",
      "---------------"
    ],
    "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/broker/KcSamlIdPInitiatedSsoTest.java||testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/broker/KcSamlIdPInitiatedSsoTest.java": [
      "File: testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/broker/KcSamlIdPInitiatedSsoTest.java -> testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/broker/KcSamlIdPInitiatedSsoTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "39: import java.io.InputStream;",
      "40: import java.net.URI;",
      "41: import java.nio.charset.Charset;",
      "42: import java.time.Duration;",
      "43: import java.util.List;",
      "44: import java.util.Map;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "42: import java.nio.charset.StandardCharsets;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "97:         InputStream is = KcSamlIdPInitiatedSsoTest.class.getResourceAsStream(fileName);",
      "98:         try {",
      "99:             String template = StreamUtil.readString(is, Charset.defaultCharset());",
      "102:         } catch (IOException ex) {",
      "103:             throw new RuntimeException(ex);",
      "104:         }",
      "",
      "[Removed Lines]",
      "100:             String realmString = StringPropertyReplacer.replaceProperties(template, properties);",
      "101:             return IOUtil.loadRealm(new ByteArrayInputStream(realmString.getBytes(\"UTF-8\")));",
      "",
      "[Added Lines]",
      "101:             String realmString = StringPropertyReplacer.replaceProperties(template, properties::getProperty);",
      "102:             return IOUtil.loadRealm(new ByteArrayInputStream(realmString.getBytes(StandardCharsets.UTF_8)));",
      "",
      "---------------"
    ],
    "testsuite/model/src/main/java/org/keycloak/testsuite/model/Config.java||testsuite/model/src/main/java/org/keycloak/testsuite/model/Config.java": [
      "File: testsuite/model/src/main/java/org/keycloak/testsuite/model/Config.java -> testsuite/model/src/main/java/org/keycloak/testsuite/model/Config.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "21: import org.keycloak.Config.SystemPropertiesScope;",
      "22: import org.keycloak.common.util.StringPropertyReplacer;",
      "23: import org.keycloak.common.util.SystemEnvProperties;",
      "24: import java.util.HashMap;",
      "25: import java.util.Map;",
      "27: import java.util.concurrent.ConcurrentHashMap;",
      "28: import java.util.function.BooleanSupplier;",
      "29: import java.util.stream.Collectors;",
      "",
      "[Removed Lines]",
      "26: import java.util.Properties;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "35: public class Config implements ConfigProvider {",
      "39:     private final Map<String, String> defaultProperties = new ConcurrentHashMap<>();",
      "40:     private final ThreadLocal<Map<String, String>> properties = new ThreadLocal<Map<String, String>>() {",
      "41:         @Override",
      "",
      "[Removed Lines]",
      "37:     private final Properties systemProperties = new SystemEnvProperties();",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "157:     }",
      "159:     private String replaceProperties(String value) {",
      "161:     }",
      "163:     @Override",
      "",
      "[Removed Lines]",
      "160:         return StringPropertyReplacer.replaceProperties(value, systemProperties);",
      "",
      "[Added Lines]",
      "158:         return StringPropertyReplacer.replaceProperties(value, SystemEnvProperties.UNFILTERED::getProperty);",
      "",
      "---------------"
    ],
    "testsuite/utils/src/main/java/org/keycloak/testsuite/JsonConfigProviderFactory.java||testsuite/utils/src/main/java/org/keycloak/testsuite/JsonConfigProviderFactory.java": [
      "File: testsuite/utils/src/main/java/org/keycloak/testsuite/JsonConfigProviderFactory.java -> testsuite/utils/src/main/java/org/keycloak/testsuite/JsonConfigProviderFactory.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "23: import java.io.IOException;",
      "24: import java.net.URL;",
      "25: import java.util.Optional;",
      "27: import org.jboss.logging.Logger;",
      "28: import org.keycloak.Config;",
      "30: import org.keycloak.services.ServicesLogger;",
      "32: import org.keycloak.util.JsonSerialization;",
      "34: public class JsonConfigProviderFactory implements ConfigProviderFactory {",
      "",
      "[Removed Lines]",
      "26: import java.util.Properties;",
      "29: import org.keycloak.common.util.SystemEnvProperties;",
      "31: import org.keycloak.services.util.JsonConfigProvider;",
      "",
      "[Added Lines]",
      "30: import org.keycloak.utils.JsonConfigProvider;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "66:     }",
      "68:     protected Optional<Config.ConfigProvider> createJsonProvider(JsonNode node) {",
      "70:     }",
      "76: }",
      "",
      "[Removed Lines]",
      "69:         return Optional.ofNullable(node).map(n -> new JsonConfigProvider(n, getProperties()));",
      "72:     protected Properties getProperties() {",
      "73:         return new SystemEnvProperties();",
      "74:     }",
      "",
      "[Added Lines]",
      "67:         return Optional.ofNullable(node).map(n -> new JsonConfigProvider(n));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ea3937f37c31eed4df605b1fd09a6e8703dfc06b",
      "candidate_info": {
        "commit_hash": "ea3937f37c31eed4df605b1fd09a6e8703dfc06b",
        "repo": "keycloak/keycloak",
        "commit_url": "https://github.com/keycloak/keycloak/commit/ea3937f37c31eed4df605b1fd09a6e8703dfc06b",
        "files": [
          "common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java",
          "docs/documentation/upgrading/topics/changes/changes-26_0_0.adoc",
          "docs/guides/server/importExport.adoc",
          "operator/src/main/java/org/keycloak/operator/controllers/KeycloakRealmImportJobDependentResource.java",
          "quarkus/runtime/src/main/java/org/keycloak/quarkus/runtime/cli/command/Import.java",
          "quarkus/tests/integration/src/test/java/org/keycloak/it/cli/dist/ImportDistTest.java"
        ],
        "message": "fix: always replacing placeholders (#31871)\n\ncloses: #31625\n\nSigned-off-by: Steve Hawkins <shawkins@redhat.com>",
        "before_after_code_files": [
          "common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java||common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java",
          "operator/src/main/java/org/keycloak/operator/controllers/KeycloakRealmImportJobDependentResource.java||operator/src/main/java/org/keycloak/operator/controllers/KeycloakRealmImportJobDependentResource.java",
          "quarkus/runtime/src/main/java/org/keycloak/quarkus/runtime/cli/command/Import.java||quarkus/runtime/src/main/java/org/keycloak/quarkus/runtime/cli/command/Import.java",
          "quarkus/tests/integration/src/test/java/org/keycloak/it/cli/dist/ImportDistTest.java||quarkus/tests/integration/src/test/java/org/keycloak/it/cli/dist/ImportDistTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java||common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java"
          ],
          "candidate": [
            "common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java||common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java"
          ]
        }
      },
      "candidate_diff": {
        "common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java||common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java": [
          "File: common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java -> common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "101:         if (props == null) {",
          "102:             return replaceProperties(string, (PropertyResolver) null);",
          "103:         }",
          "110:     }",
          "112:     public static String replaceProperties(final String string, PropertyResolver resolver)",
          "",
          "[Removed Lines]",
          "104:         return replaceProperties(string, new PropertyResolver() {",
          "105:             @Override",
          "106:             public String resolve(String property) {",
          "107:                 return props.getProperty(property);",
          "108:             }",
          "109:         });",
          "",
          "[Added Lines]",
          "104:         return replaceProperties(string, props::getProperty);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "249:         return buffer.toString();",
          "250:     }",
          "275:     private static String resolveCompositeKey(String key, PropertyResolver resolver)",
          "276:     {",
          "277:         String value = null;",
          "",
          "[Removed Lines]",
          "263:     private static String resolveCompositeKey(String key, final Properties props) {",
          "264:         if (props == null) {",
          "265:             return resolveCompositeKey(key, (PropertyResolver) null);",
          "266:         }",
          "267:         return resolveCompositeKey(key, new PropertyResolver() {",
          "268:             @Override",
          "269:             public String resolve(String property) {",
          "270:                 return props.getProperty(property);",
          "271:             }",
          "272:         });",
          "273:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "operator/src/main/java/org/keycloak/operator/controllers/KeycloakRealmImportJobDependentResource.java||operator/src/main/java/org/keycloak/operator/controllers/KeycloakRealmImportJobDependentResource.java": [
          "File: operator/src/main/java/org/keycloak/operator/controllers/KeycloakRealmImportJobDependentResource.java -> operator/src/main/java/org/keycloak/operator/controllers/KeycloakRealmImportJobDependentResource.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "150:         var runBuild = !keycloakContainer.getArgs().contains(KeycloakDeploymentDependentResource.OPTIMIZED_ARG) ? \"/opt/keycloak/bin/kc.sh --verbose build && \" : \"\";",
          "154:         var commandArgs = List.of(\"-c\",",
          "157:         keycloakContainer.setCommand(command);",
          "158:         keycloakContainer.setArgs(commandArgs);",
          "",
          "[Removed Lines]",
          "152:         var replaceOption = (replacePlaceholders) ? \" -Dkeycloak.migration.replace-placeholders=true\": \"\";",
          "155:                 runBuild + \"/opt/keycloak/bin/kc.sh\" + replaceOption + \" --verbose import --optimized --file='\" + importMntPath + keycloakRealmImport.getRealmName() + \"-realm.json' \" + override);",
          "",
          "[Added Lines]",
          "153:                 runBuild + \"/opt/keycloak/bin/kc.sh --verbose import --optimized --file='\" + importMntPath + keycloakRealmImport.getRealmName() + \"-realm.json' \" + override);",
          "",
          "---------------"
        ],
        "quarkus/runtime/src/main/java/org/keycloak/quarkus/runtime/cli/command/Import.java||quarkus/runtime/src/main/java/org/keycloak/quarkus/runtime/cli/command/Import.java": [
          "File: quarkus/runtime/src/main/java/org/keycloak/quarkus/runtime/cli/command/Import.java -> quarkus/runtime/src/main/java/org/keycloak/quarkus/runtime/cli/command/Import.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "36:     @Override",
          "37:     protected void doBeforeRun() {",
          "39:     }",
          "41:     @Override",
          "",
          "[Removed Lines]",
          "38:         System.setProperty(ExportImportConfig.ACTION, ACTION_IMPORT);",
          "",
          "[Added Lines]",
          "38:         if (System.getProperty(ExportImportConfig.REPLACE_PLACEHOLDERS) == null) {",
          "39:             ExportImportConfig.setReplacePlaceholders(true);",
          "40:         }",
          "41:         ExportImportConfig.setAction(ACTION_IMPORT);",
          "",
          "---------------"
        ],
        "quarkus/tests/integration/src/test/java/org/keycloak/it/cli/dist/ImportDistTest.java||quarkus/tests/integration/src/test/java/org/keycloak/it/cli/dist/ImportDistTest.java": [
          "File: quarkus/tests/integration/src/test/java/org/keycloak/it/cli/dist/ImportDistTest.java -> quarkus/tests/integration/src/test/java/org/keycloak/it/cli/dist/ImportDistTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: package org.keycloak.it.cli.dist;",
          "20: import org.junit.jupiter.api.MethodOrderer;",
          "21: import org.junit.jupiter.api.Test;",
          "22: import org.junit.jupiter.api.TestMethodOrder;",
          "23: import org.keycloak.it.junit5.extension.CLIResult;",
          "24: import org.keycloak.it.junit5.extension.DistributionTest;",
          "25: import org.keycloak.it.junit5.extension.RawDistOnly;",
          "26: import org.keycloak.it.utils.KeycloakDistribution;",
          "28: @DistributionTest",
          "29: @RawDistOnly(reason = \"Containers are immutable\")",
          "30: @TestMethodOrder(MethodOrderer.OrderAnnotation.class)",
          "31: public class ImportDistTest {",
          "33:     @Test",
          "35:         CLIResult cliResult = dist.run(\"build\");",
          "38:         cliResult.assertMessage(\"Export of realm 'master' requested.\");",
          "39:         cliResult.assertMessage(\"Export finished successfully\");",
          "42:         cliResult.assertMessage(\"Realm 'master' imported\");",
          "43:         cliResult.assertMessage(\"Import finished successfully\");",
          "44:         cliResult.assertNoMessage(\"Changes detected in configuration\");",
          "",
          "[Removed Lines]",
          "34:     void testImport(KeycloakDistribution dist) {",
          "37:         cliResult = dist.run(\"export\", \"--realm=master\", \"--dir=.\");",
          "41:         cliResult = dist.run(\"import\", \"--dir=.\");",
          "",
          "[Added Lines]",
          "20: import java.io.File;",
          "21: import java.io.IOException;",
          "29: import org.keycloak.it.junit5.extension.WithEnvVars;",
          "32: import com.fasterxml.jackson.databind.ObjectMapper;",
          "33: import com.fasterxml.jackson.databind.node.ObjectNode;",
          "41:     void testImport(KeycloakDistribution dist) throws IOException {",
          "44:         File dir = new File(\"target\");",
          "46:         cliResult = dist.run(\"export\", \"--realm=master\", \"--dir=\" + dir.getAbsolutePath());",
          "51:         ObjectMapper mapper = new ObjectMapper();",
          "52:         File file = new File(dir, \"master-realm.json\");",
          "53:         ObjectNode node = (ObjectNode)mapper.readTree(file);",
          "54:         node.put(\"enabled\", \"${REALM_ENABLED}\");",
          "55:         mapper.writer().writeValue(file, node);",
          "57:         dist.setEnvVar(\"REALM_ENABLED\", \"true\");",
          "58:         cliResult = dist.run(\"import\", \"--dir=\" + dir.getAbsolutePath());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3cdc69ddbb5c14c27653bc9b040330808fa879e7",
      "candidate_info": {
        "commit_hash": "3cdc69ddbb5c14c27653bc9b040330808fa879e7",
        "repo": "keycloak/keycloak",
        "commit_url": "https://github.com/keycloak/keycloak/commit/3cdc69ddbb5c14c27653bc9b040330808fa879e7",
        "files": [
          "common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java",
          "common/src/test/java/org/keycloak/common/util/StringPropertyReplacerTest.java"
        ],
        "message": "Have a more descriptive error message when infinite recusion happens (#26043)\n\nCloses #21151\n\nSigned-off-by: Alexander Schwartz <aschwart@redhat.com>",
        "before_after_code_files": [
          "common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java||common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java",
          "common/src/test/java/org/keycloak/common/util/StringPropertyReplacerTest.java||common/src/test/java/org/keycloak/common/util/StringPropertyReplacerTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java||common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java",
            "common/src/test/java/org/keycloak/common/util/StringPropertyReplacerTest.java||common/src/test/java/org/keycloak/common/util/StringPropertyReplacerTest.java"
          ],
          "candidate": [
            "common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java||common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java",
            "common/src/test/java/org/keycloak/common/util/StringPropertyReplacerTest.java||common/src/test/java/org/keycloak/common/util/StringPropertyReplacerTest.java"
          ]
        }
      },
      "candidate_diff": {
        "common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java||common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java": [
          "File: common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java -> common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "238:             buffer.append(string.substring(start, chars.length));",
          "240:         if (buffer.indexOf(\"${\") != -1) {",
          "242:         }",
          "",
          "[Removed Lines]",
          "241:             return replaceProperties(buffer.toString(), resolver);",
          "",
          "[Added Lines]",
          "241:             try {",
          "242:                 return replaceProperties(buffer.toString(), resolver);",
          "243:             } catch (StackOverflowError ex) {",
          "244:                 throw new IllegalStateException(\"Infinite recursion happening when replacing properties on '\" + buffer + \"'\");",
          "245:             }",
          "",
          "---------------"
        ],
        "common/src/test/java/org/keycloak/common/util/StringPropertyReplacerTest.java||common/src/test/java/org/keycloak/common/util/StringPropertyReplacerTest.java": [
          "File: common/src/test/java/org/keycloak/common/util/StringPropertyReplacerTest.java -> common/src/test/java/org/keycloak/common/util/StringPropertyReplacerTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import java.security.NoSuchAlgorithmException;",
          "23: import java.util.Map;",
          "26: import org.junit.Assert;",
          "27: import org.junit.Test;",
          "",
          "[Removed Lines]",
          "24: import java.util.Set;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "59:         Assert.assertEquals(\"foo-val6\", StringPropertyReplacer.replaceProperties(\"foo-${prop6,prop7:def}\"));",
          "60:     }",
          "62:     @Test",
          "63:     public void testEnvironmentVariables() throws NoSuchAlgorithmException {",
          "64:         Map<String, String> env = System.getenv();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "61:     @Test",
          "62:     public void testStackOverflow() {",
          "63:         System.setProperty(\"prop\", \"${prop}\");",
          "64:         IllegalStateException ise = Assert.assertThrows(IllegalStateException.class, () -> StringPropertyReplacer.replaceProperties(\"${prop}\"));",
          "65:         Assert.assertEquals(\"Infinite recursion happening when replacing properties on '${prop}'\", ise.getMessage());",
          "66:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c1c147cb17897aee537ec2781eef819cd684e074",
      "candidate_info": {
        "commit_hash": "c1c147cb17897aee537ec2781eef819cd684e074",
        "repo": "keycloak/keycloak",
        "commit_url": "https://github.com/keycloak/keycloak/commit/c1c147cb17897aee537ec2781eef819cd684e074",
        "files": [
          "adapters/saml/core/src/main/java/org/keycloak/adapters/saml/config/parsers/KeyParser.java",
          "authz/client/src/main/java/org/keycloak/authorization/client/AuthzClient.java",
          "authz/client/src/main/java/org/keycloak/authorization/client/SystemPropertiesJsonParserFactory.java",
          "authz/client/src/test/java/org/keycloak/authorization/client/JsonParserTest.java",
          "authz/client/src/test/resources/keycloak.json",
          "common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java",
          "common/src/main/java/org/keycloak/common/util/SystemEnvProperties.java",
          "common/src/test/java/org/keycloak/common/util/StringPropertyReplacerTest.java",
          "core/src/main/java/org/keycloak/Config.java",
          "core/src/main/java/org/keycloak/util/JsonSerialization.java",
          "core/src/test/java/org/keycloak/JsonParserTest.java",
          "docs/documentation/upgrading/topics/changes/changes-26_0_8.adoc",
          "docs/guides/server/configuration.adoc",
          "model/jpa/src/main/java/org/keycloak/connections/jpa/DefaultJpaConnectionProviderFactory.java",
          "saml-core/src/main/java/org/keycloak/saml/common/util/StaxParserUtil.java",
          "services/src/main/java/org/keycloak/services/managers/ResourceAdminManager.java",
          "services/src/main/java/org/keycloak/services/resources/account/AccountRestService.java",
          "services/src/main/java/org/keycloak/services/util/ResolveRelative.java",
          "services/src/main/java/org/keycloak/theme/DefaultThemeManager.java",
          "services/src/test/java/org/keycloak/utils/JsonConfigProvider.java",
          "services/src/test/java/org/keycloak/utils/ScopeUtil.java",
          "testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/AuthServerTestEnricher.java",
          "testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/DeploymentTargetModifier.java",
          "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/broker/KcSamlIdPInitiatedSsoTest.java",
          "testsuite/model/src/main/java/org/keycloak/testsuite/model/Config.java",
          "testsuite/utils/src/main/java/org/keycloak/testsuite/JsonConfigProviderFactory.java"
        ],
        "message": "Restrict access to environment variables when at the server runtime (#36472)\n\nSigned-off-by: Pedro Igor <pigor.craveiro@gmail.com>\nCo-authored-by: Pedro Igor <pigor.craveiro@gmail.com>",
        "before_after_code_files": [
          "adapters/saml/core/src/main/java/org/keycloak/adapters/saml/config/parsers/KeyParser.java||adapters/saml/core/src/main/java/org/keycloak/adapters/saml/config/parsers/KeyParser.java",
          "authz/client/src/main/java/org/keycloak/authorization/client/AuthzClient.java||authz/client/src/main/java/org/keycloak/authorization/client/AuthzClient.java",
          "core/src/main/java/org/keycloak/util/SystemPropertiesJsonParserFactory.java||authz/client/src/main/java/org/keycloak/authorization/client/SystemPropertiesJsonParserFactory.java",
          "authz/client/src/test/java/org/keycloak/authorization/client/JsonParserTest.java||authz/client/src/test/java/org/keycloak/authorization/client/JsonParserTest.java",
          "common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java||common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java",
          "common/src/main/java/org/keycloak/common/util/SystemEnvProperties.java||common/src/main/java/org/keycloak/common/util/SystemEnvProperties.java",
          "common/src/test/java/org/keycloak/common/util/StringPropertyReplacerTest.java||common/src/test/java/org/keycloak/common/util/StringPropertyReplacerTest.java",
          "core/src/main/java/org/keycloak/Config.java||core/src/main/java/org/keycloak/Config.java",
          "core/src/main/java/org/keycloak/util/JsonSerialization.java||core/src/main/java/org/keycloak/util/JsonSerialization.java",
          "core/src/test/java/org/keycloak/JsonParserTest.java||core/src/test/java/org/keycloak/JsonParserTest.java",
          "model/jpa/src/main/java/org/keycloak/connections/jpa/DefaultJpaConnectionProviderFactory.java||model/jpa/src/main/java/org/keycloak/connections/jpa/DefaultJpaConnectionProviderFactory.java",
          "saml-core/src/main/java/org/keycloak/saml/common/util/StaxParserUtil.java||saml-core/src/main/java/org/keycloak/saml/common/util/StaxParserUtil.java",
          "services/src/main/java/org/keycloak/services/managers/ResourceAdminManager.java||services/src/main/java/org/keycloak/services/managers/ResourceAdminManager.java",
          "services/src/main/java/org/keycloak/services/resources/account/AccountRestService.java||services/src/main/java/org/keycloak/services/resources/account/AccountRestService.java",
          "services/src/main/java/org/keycloak/services/util/ResolveRelative.java||services/src/main/java/org/keycloak/services/util/ResolveRelative.java",
          "services/src/main/java/org/keycloak/theme/DefaultThemeManager.java||services/src/main/java/org/keycloak/theme/DefaultThemeManager.java",
          "services/src/main/java/org/keycloak/services/util/JsonConfigProvider.java||services/src/test/java/org/keycloak/utils/JsonConfigProvider.java",
          "services/src/test/java/org/keycloak/utils/ScopeUtil.java||services/src/test/java/org/keycloak/utils/ScopeUtil.java",
          "testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/AuthServerTestEnricher.java||testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/AuthServerTestEnricher.java",
          "testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/DeploymentTargetModifier.java||testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/DeploymentTargetModifier.java",
          "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/broker/KcSamlIdPInitiatedSsoTest.java||testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/broker/KcSamlIdPInitiatedSsoTest.java",
          "testsuite/model/src/main/java/org/keycloak/testsuite/model/Config.java||testsuite/model/src/main/java/org/keycloak/testsuite/model/Config.java",
          "testsuite/utils/src/main/java/org/keycloak/testsuite/JsonConfigProviderFactory.java||testsuite/utils/src/main/java/org/keycloak/testsuite/JsonConfigProviderFactory.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "adapters/saml/core/src/main/java/org/keycloak/adapters/saml/config/parsers/KeyParser.java||adapters/saml/core/src/main/java/org/keycloak/adapters/saml/config/parsers/KeyParser.java",
            "authz/client/src/main/java/org/keycloak/authorization/client/AuthzClient.java||authz/client/src/main/java/org/keycloak/authorization/client/AuthzClient.java",
            "core/src/main/java/org/keycloak/util/SystemPropertiesJsonParserFactory.java||authz/client/src/main/java/org/keycloak/authorization/client/SystemPropertiesJsonParserFactory.java",
            "authz/client/src/test/java/org/keycloak/authorization/client/JsonParserTest.java||authz/client/src/test/java/org/keycloak/authorization/client/JsonParserTest.java",
            "common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java||common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java",
            "common/src/main/java/org/keycloak/common/util/SystemEnvProperties.java||common/src/main/java/org/keycloak/common/util/SystemEnvProperties.java",
            "common/src/test/java/org/keycloak/common/util/StringPropertyReplacerTest.java||common/src/test/java/org/keycloak/common/util/StringPropertyReplacerTest.java",
            "core/src/main/java/org/keycloak/Config.java||core/src/main/java/org/keycloak/Config.java",
            "core/src/main/java/org/keycloak/util/JsonSerialization.java||core/src/main/java/org/keycloak/util/JsonSerialization.java",
            "core/src/test/java/org/keycloak/JsonParserTest.java||core/src/test/java/org/keycloak/JsonParserTest.java",
            "model/jpa/src/main/java/org/keycloak/connections/jpa/DefaultJpaConnectionProviderFactory.java||model/jpa/src/main/java/org/keycloak/connections/jpa/DefaultJpaConnectionProviderFactory.java",
            "saml-core/src/main/java/org/keycloak/saml/common/util/StaxParserUtil.java||saml-core/src/main/java/org/keycloak/saml/common/util/StaxParserUtil.java",
            "services/src/main/java/org/keycloak/services/managers/ResourceAdminManager.java||services/src/main/java/org/keycloak/services/managers/ResourceAdminManager.java",
            "services/src/main/java/org/keycloak/services/resources/account/AccountRestService.java||services/src/main/java/org/keycloak/services/resources/account/AccountRestService.java",
            "services/src/main/java/org/keycloak/services/util/ResolveRelative.java||services/src/main/java/org/keycloak/services/util/ResolveRelative.java",
            "services/src/main/java/org/keycloak/theme/DefaultThemeManager.java||services/src/main/java/org/keycloak/theme/DefaultThemeManager.java",
            "services/src/main/java/org/keycloak/services/util/JsonConfigProvider.java||services/src/test/java/org/keycloak/utils/JsonConfigProvider.java",
            "services/src/test/java/org/keycloak/utils/ScopeUtil.java||services/src/test/java/org/keycloak/utils/ScopeUtil.java",
            "testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/AuthServerTestEnricher.java||testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/AuthServerTestEnricher.java",
            "testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/DeploymentTargetModifier.java||testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/DeploymentTargetModifier.java",
            "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/broker/KcSamlIdPInitiatedSsoTest.java||testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/broker/KcSamlIdPInitiatedSsoTest.java",
            "testsuite/model/src/main/java/org/keycloak/testsuite/model/Config.java||testsuite/model/src/main/java/org/keycloak/testsuite/model/Config.java",
            "testsuite/utils/src/main/java/org/keycloak/testsuite/JsonConfigProviderFactory.java||testsuite/utils/src/main/java/org/keycloak/testsuite/JsonConfigProviderFactory.java"
          ],
          "candidate": [
            "adapters/saml/core/src/main/java/org/keycloak/adapters/saml/config/parsers/KeyParser.java||adapters/saml/core/src/main/java/org/keycloak/adapters/saml/config/parsers/KeyParser.java",
            "authz/client/src/main/java/org/keycloak/authorization/client/AuthzClient.java||authz/client/src/main/java/org/keycloak/authorization/client/AuthzClient.java",
            "core/src/main/java/org/keycloak/util/SystemPropertiesJsonParserFactory.java||authz/client/src/main/java/org/keycloak/authorization/client/SystemPropertiesJsonParserFactory.java",
            "authz/client/src/test/java/org/keycloak/authorization/client/JsonParserTest.java||authz/client/src/test/java/org/keycloak/authorization/client/JsonParserTest.java",
            "common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java||common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java",
            "common/src/main/java/org/keycloak/common/util/SystemEnvProperties.java||common/src/main/java/org/keycloak/common/util/SystemEnvProperties.java",
            "common/src/test/java/org/keycloak/common/util/StringPropertyReplacerTest.java||common/src/test/java/org/keycloak/common/util/StringPropertyReplacerTest.java",
            "core/src/main/java/org/keycloak/Config.java||core/src/main/java/org/keycloak/Config.java",
            "core/src/main/java/org/keycloak/util/JsonSerialization.java||core/src/main/java/org/keycloak/util/JsonSerialization.java",
            "core/src/test/java/org/keycloak/JsonParserTest.java||core/src/test/java/org/keycloak/JsonParserTest.java",
            "model/jpa/src/main/java/org/keycloak/connections/jpa/DefaultJpaConnectionProviderFactory.java||model/jpa/src/main/java/org/keycloak/connections/jpa/DefaultJpaConnectionProviderFactory.java",
            "saml-core/src/main/java/org/keycloak/saml/common/util/StaxParserUtil.java||saml-core/src/main/java/org/keycloak/saml/common/util/StaxParserUtil.java",
            "services/src/main/java/org/keycloak/services/managers/ResourceAdminManager.java||services/src/main/java/org/keycloak/services/managers/ResourceAdminManager.java",
            "services/src/main/java/org/keycloak/services/resources/account/AccountRestService.java||services/src/main/java/org/keycloak/services/resources/account/AccountRestService.java",
            "services/src/main/java/org/keycloak/services/util/ResolveRelative.java||services/src/main/java/org/keycloak/services/util/ResolveRelative.java",
            "services/src/main/java/org/keycloak/theme/DefaultThemeManager.java||services/src/main/java/org/keycloak/theme/DefaultThemeManager.java",
            "services/src/main/java/org/keycloak/services/util/JsonConfigProvider.java||services/src/test/java/org/keycloak/utils/JsonConfigProvider.java",
            "services/src/test/java/org/keycloak/utils/ScopeUtil.java||services/src/test/java/org/keycloak/utils/ScopeUtil.java",
            "testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/AuthServerTestEnricher.java||testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/AuthServerTestEnricher.java",
            "testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/DeploymentTargetModifier.java||testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/DeploymentTargetModifier.java",
            "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/broker/KcSamlIdPInitiatedSsoTest.java||testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/broker/KcSamlIdPInitiatedSsoTest.java",
            "testsuite/model/src/main/java/org/keycloak/testsuite/model/Config.java||testsuite/model/src/main/java/org/keycloak/testsuite/model/Config.java",
            "testsuite/utils/src/main/java/org/keycloak/testsuite/JsonConfigProviderFactory.java||testsuite/utils/src/main/java/org/keycloak/testsuite/JsonConfigProviderFactory.java"
          ]
        }
      },
      "candidate_diff": {
        "adapters/saml/core/src/main/java/org/keycloak/adapters/saml/config/parsers/KeyParser.java||adapters/saml/core/src/main/java/org/keycloak/adapters/saml/config/parsers/KeyParser.java": [
          "File: adapters/saml/core/src/main/java/org/keycloak/adapters/saml/config/parsers/KeyParser.java -> adapters/saml/core/src/main/java/org/keycloak/adapters/saml/config/parsers/KeyParser.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: import org.keycloak.adapters.saml.config.Key;",
          "21: import org.keycloak.common.util.StringPropertyReplacer;",
          "22: import org.keycloak.saml.common.exceptions.ParsingException;",
          "23: import org.keycloak.saml.common.util.StaxParserUtil;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: import org.keycloak.common.util.SystemEnvProperties;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "60:             case CERTIFICATE_PEM:",
          "61:                 StaxParserUtil.advance(xmlEventReader);",
          "62:                 value = StaxParserUtil.getElementText(xmlEventReader);",
          "64:                 break;",
          "66:             case PUBLIC_KEY_PEM:",
          "67:                 StaxParserUtil.advance(xmlEventReader);",
          "68:                 value = StaxParserUtil.getElementText(xmlEventReader);",
          "70:                 break;",
          "72:             case PRIVATE_KEY_PEM:",
          "73:                 StaxParserUtil.advance(xmlEventReader);",
          "74:                 value = StaxParserUtil.getElementText(xmlEventReader);",
          "76:                 break;",
          "77:         }",
          "78:     }",
          "79: }",
          "",
          "[Removed Lines]",
          "63:                 target.setCertificatePem(StringPropertyReplacer.replaceProperties(value));",
          "69:                 target.setPublicKeyPem(StringPropertyReplacer.replaceProperties(value));",
          "75:                 target.setPrivateKeyPem(StringPropertyReplacer.replaceProperties(value));",
          "",
          "[Added Lines]",
          "64:                 target.setCertificatePem(replaceProperties(value));",
          "70:                 target.setPublicKeyPem(replaceProperties(value));",
          "76:                 target.setPrivateKeyPem(replaceProperties(value));",
          "81:     private String replaceProperties(String value) {",
          "82:         return StringPropertyReplacer.replaceProperties(value, SystemEnvProperties.UNFILTERED::getProperty);",
          "83:     }",
          "",
          "---------------"
        ],
        "authz/client/src/main/java/org/keycloak/authorization/client/AuthzClient.java||authz/client/src/main/java/org/keycloak/authorization/client/AuthzClient.java": [
          "File: authz/client/src/main/java/org/keycloak/authorization/client/AuthzClient.java -> authz/client/src/main/java/org/keycloak/authorization/client/AuthzClient.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import java.io.IOException;",
          "23: import java.io.InputStream;",
          "26: import com.fasterxml.jackson.annotation.JsonInclude;",
          "27: import com.fasterxml.jackson.databind.ObjectMapper;",
          "",
          "[Removed Lines]",
          "24: import java.util.Objects;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "33: import org.keycloak.common.crypto.CryptoIntegration;",
          "34: import org.keycloak.common.util.KeycloakUriBuilder;",
          "35: import org.keycloak.representations.AccessTokenResponse;",
          "",
          "[Removed Lines]",
          "36: import org.keycloak.util.SystemPropertiesJsonParserFactory;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "core/src/main/java/org/keycloak/util/SystemPropertiesJsonParserFactory.java||authz/client/src/main/java/org/keycloak/authorization/client/SystemPropertiesJsonParserFactory.java": [
          "File: core/src/main/java/org/keycloak/util/SystemPropertiesJsonParserFactory.java -> authz/client/src/main/java/org/keycloak/authorization/client/SystemPropertiesJsonParserFactory.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: import com.fasterxml.jackson.core.JsonParser;",
          "21: import com.fasterxml.jackson.core.io.IOContext;",
          "",
          "[Removed Lines]",
          "18: package org.keycloak.util;",
          "",
          "[Added Lines]",
          "18: package org.keycloak.authorization.client;",
          "20: import java.io.IOException;",
          "21: import java.io.InputStream;",
          "22: import java.io.Reader;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "24: import org.keycloak.common.util.StringPropertyReplacer;",
          "25: import org.keycloak.common.util.SystemEnvProperties;",
          "41:     @Override",
          "42:     protected JsonParser _createParser(InputStream in, IOContext ctxt) throws IOException {",
          "",
          "[Removed Lines]",
          "27: import java.io.IOException;",
          "28: import java.io.InputStream;",
          "29: import java.io.Reader;",
          "30: import java.util.Properties;",
          "37: public class SystemPropertiesJsonParserFactory extends MappingJsonFactory {",
          "39:     private static final Properties properties = new SystemEnvProperties();",
          "",
          "[Added Lines]",
          "36: class SystemPropertiesJsonParserFactory extends MappingJsonFactory {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "71:         @Override",
          "72:         public String getText() throws IOException {",
          "73:             String orig = super.getText();",
          "75:         }",
          "76:     }",
          "77: }",
          "",
          "[Removed Lines]",
          "74:             return StringPropertyReplacer.replaceProperties(orig, properties);",
          "",
          "[Added Lines]",
          "71:             return StringPropertyReplacer.replaceProperties(orig, SystemEnvProperties.UNFILTERED::getProperty);",
          "",
          "---------------"
        ],
        "authz/client/src/test/java/org/keycloak/authorization/client/JsonParserTest.java||authz/client/src/test/java/org/keycloak/authorization/client/JsonParserTest.java": [
          "File: authz/client/src/test/java/org/keycloak/authorization/client/JsonParserTest.java -> authz/client/src/test/java/org/keycloak/authorization/client/JsonParserTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18: package org.keycloak.authorization.client;",
          "20: import java.io.IOException;",
          "21: import java.io.InputStream;",
          "23: import com.fasterxml.jackson.databind.ObjectMapper;",
          "24: import org.junit.Assert;",
          "25: import org.junit.Test;",
          "26: import org.keycloak.representations.adapters.config.AdapterConfig;",
          "31: public class JsonParserTest {",
          "33:     @Test",
          "34:     public void testParsingSystemProps() throws IOException {",
          "35:         System.setProperty(\"my.host\", \"foo\");",
          "36:         System.setProperty(\"con.pool.size\", \"200\");",
          "37:         System.setProperty(\"allow.any.hostname\", \"true\");",
          "38:         System.setProperty(\"socket.timeout.millis\", \"6000\");",
          "39:         System.setProperty(\"connection.timeout.millis\", \"7000\");",
          "40:         System.setProperty(\"connection.ttl.millis\", \"500\");",
          "42:         InputStream is = getClass().getClassLoader().getResourceAsStream(\"keycloak.json\");",
          "44:         ObjectMapper mapper = new ObjectMapper(new SystemPropertiesJsonParserFactory());",
          "45:         AdapterConfig config = mapper.readValue(is, AdapterConfig.class);",
          "46:         Assert.assertEquals(\"http://foo:8080/auth\", config.getAuthServerUrl());",
          "47:         Assert.assertEquals(\"external\", config.getSslRequired());",
          "48:         Assert.assertEquals(\"angular-product${non.existing}\", config.getResource());",
          "49:         Assert.assertTrue(config.isPublicClient());",
          "50:         Assert.assertTrue(config.isAllowAnyHostname());",
          "51:         Assert.assertEquals(100, config.getCorsMaxAge());",
          "52:         Assert.assertEquals(200, config.getConnectionPoolSize());",
          "53:         Assert.assertEquals(6000L, config.getSocketTimeout());",
          "54:         Assert.assertEquals(7000L, config.getConnectionTimeout());",
          "55:         Assert.assertEquals(500L, config.getConnectionTTL());",
          "56:     }",
          "57: }",
          "",
          "---------------"
        ],
        "common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java||common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java": [
          "File: common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java -> common/src/main/java/org/keycloak/common/util/StringPropertyReplacer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: package org.keycloak.common.util;",
          "19: import java.io.File;",
          "32: public final class StringPropertyReplacer",
          "33: {",
          "38:     private static final String FILE_SEPARATOR = File.separator;",
          "",
          "[Removed Lines]",
          "20: import java.util.Properties;",
          "35:     public static final String NEWLINE = System.getProperty(\"line.separator\", \"\\n\");",
          "",
          "[Added Lines]",
          "20: import java.util.Optional;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "51:     private static final int SEEN_DOLLAR = 1;",
          "52:     private static final int IN_BRACKET = 2;",
          "",
          "[Removed Lines]",
          "54:     private static final Properties systemEnvProperties = new SystemEnvProperties();",
          "",
          "[Added Lines]",
          "52:     private static final PropertyResolver NULL_RESOLVER = property -> null;",
          "53:     private static PropertyResolver DEFAULT_PROPERTY_RESOLVER;",
          "55:     public static void setDefaultPropertyResolver(PropertyResolver systemVariables) {",
          "56:         DEFAULT_PROPERTY_RESOLVER = systemVariables;",
          "57:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "78:     }",
          "",
          "[Removed Lines]",
          "75:     public static String replaceProperties(final String string)",
          "76:     {",
          "77:         return replaceProperties(string, (Properties) null);",
          "",
          "[Added Lines]",
          "78:     public static String replaceProperties(final String string) {",
          "79:         return replaceProperties(string, getDefaultPropertyResolver());",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "107:     public static String replaceProperties(final String string, PropertyResolver resolver)",
          "108:     {",
          "109:         if(string == null) {",
          "",
          "[Removed Lines]",
          "100:     public static String replaceProperties(final String string, final Properties props) {",
          "101:         if (props == null) {",
          "102:             return replaceProperties(string, (PropertyResolver) null);",
          "103:         }",
          "104:         return replaceProperties(string, props::getProperty);",
          "105:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "171:                     else",
          "172:                     {",
          "179:                         if (value == null)",
          "180:                         {",
          "",
          "[Removed Lines]",
          "174:                         if (resolver != null)",
          "175:                             value = resolver.resolve(key);",
          "176:                         else",
          "177:                             value = systemEnvProperties.getProperty(key);",
          "",
          "[Added Lines]",
          "169:                         value = resolveValue(resolver, key);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "183:                             if (colon > 0)",
          "184:                             {",
          "185:                                 String realKey = key.substring(0, colon);",
          "191:                                 if (value == null)",
          "192:                                 {",
          "",
          "[Removed Lines]",
          "186:                                 if (resolver != null)",
          "187:                                     value = resolver.resolve(realKey);",
          "188:                                 else",
          "189:                                     value = systemEnvProperties.getProperty(realKey);",
          "",
          "[Added Lines]",
          "178:                                 value = resolveValue(resolver, realKey);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "257:             {",
          "259:                 String key1 = key.substring(0, comma);",
          "264:             }",
          "266:             if (value == null && comma < key.length() - 1)",
          "267:             {",
          "268:                 String key2 = key.substring(comma + 1);",
          "273:             }",
          "274:         }",
          "276:         return value;",
          "277:     }",
          "279:     public interface PropertyResolver {",
          "280:         String resolve(String property);",
          "281:     }",
          "282: }",
          "",
          "[Removed Lines]",
          "260:                 if (resolver != null)",
          "261:                     value = resolver.resolve(key1);",
          "262:                 else",
          "263:                     value = systemEnvProperties.getProperty(key1);",
          "269:                 if (resolver != null)",
          "270:                     value = resolver.resolve(key2);",
          "271:                 else",
          "272:                     value = systemEnvProperties.getProperty(key2);",
          "",
          "[Added Lines]",
          "249:                 value = resolveValue(resolver, key1);",
          "255:                 value = resolveValue(resolver, key2);",
          "266:     private static String resolveValue(PropertyResolver resolver, String key) {",
          "267:         if (resolver == null) {",
          "268:             return getDefaultPropertyResolver().resolve(key);",
          "269:         }",
          "271:         return resolver.resolve(key);",
          "272:     }",
          "274:     private static PropertyResolver getDefaultPropertyResolver() {",
          "275:         return Optional.ofNullable(DEFAULT_PROPERTY_RESOLVER).orElse(NULL_RESOLVER);",
          "276:     }",
          "",
          "---------------"
        ],
        "common/src/main/java/org/keycloak/common/util/SystemEnvProperties.java||common/src/main/java/org/keycloak/common/util/SystemEnvProperties.java": [
          "File: common/src/main/java/org/keycloak/common/util/SystemEnvProperties.java -> common/src/main/java/org/keycloak/common/util/SystemEnvProperties.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: package org.keycloak.common.util;",
          "20: import java.util.Properties;",
          "25: public class SystemEnvProperties extends Properties {",
          "27:     @Override",
          "28:     public String getProperty(String key) {",
          "29:         if (key.startsWith(\"env.\")) {",
          "31:         } else {",
          "33:         }",
          "34:     }",
          "",
          "[Removed Lines]",
          "30:             return System.getenv().get(key.substring(4));",
          "32:             return System.getProperty(key);",
          "",
          "[Added Lines]",
          "20: import java.util.Collections;",
          "21: import java.util.Optional;",
          "23: import java.util.Set;",
          "42:     public static final SystemEnvProperties UNFILTERED = new SystemEnvProperties(Collections.emptySet()) {",
          "43:         @Override",
          "44:         protected boolean isAllowed(String key) {",
          "45:             return true;",
          "46:         }",
          "47:     };",
          "49:     private final Set<String> allowedSystemVariables;",
          "56:     public SystemEnvProperties(Set<String> allowedSystemVariables) {",
          "57:         this.allowedSystemVariables = Optional.ofNullable(allowedSystemVariables).orElse(Collections.emptySet());",
          "58:     }",
          "63:             String envKey = key.substring(4);",
          "64:             return isAllowed(envKey) ? System.getenv().get(envKey) : null;",
          "66:             return isAllowed(key) ? System.getProperty(key) : null;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "39:         return value != null ? value : defaultValue;",
          "40:     }",
          "42: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76:     protected boolean isAllowed(String key) {",
          "77:         return allowedSystemVariables.contains(key);",
          "78:     }",
          "",
          "---------------"
        ],
        "common/src/test/java/org/keycloak/common/util/StringPropertyReplacerTest.java||common/src/test/java/org/keycloak/common/util/StringPropertyReplacerTest.java": [
          "File: common/src/test/java/org/keycloak/common/util/StringPropertyReplacerTest.java -> common/src/test/java/org/keycloak/common/util/StringPropertyReplacerTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:     @Test",
          "34:     public void testSystemProperties() throws NoSuchAlgorithmException {",
          "35:         System.setProperty(\"prop1\", \"val1\");",
          "39:         System.setProperty(\"prop2\", \"val2\");",
          "45:         System.setProperty(\"prop5\", \"val5\");",
          "47:         System.setProperty(\"prop4\", \"val4\");",
          "49:         System.setProperty(\"prop3\", \"val3\");",
          "55:         System.setProperty(\"prop7\", \"val7\");",
          "57:         System.setProperty(\"prop6\", \"val6\");",
          "59:     }",
          "61:     @Test",
          "62:     public void testStackOverflow() {",
          "63:         System.setProperty(\"prop\", \"${prop}\");",
          "65:         Assert.assertEquals(\"Infinite recursion happening when replacing properties on '${prop}'\", ise.getMessage());",
          "66:     }",
          "",
          "[Removed Lines]",
          "36:         Assert.assertEquals(\"foo-val1\", StringPropertyReplacer.replaceProperties(\"foo-${prop1}\"));",
          "38:         Assert.assertEquals(\"foo-def\", StringPropertyReplacer.replaceProperties(\"foo-${prop2:def}\"));",
          "40:         Assert.assertEquals(\"foo-val2\", StringPropertyReplacer.replaceProperties(\"foo-${prop2:def}\"));",
          "44:         Assert.assertEquals(\"foo-def\", StringPropertyReplacer.replaceProperties(\"foo-${prop3:${prop4:${prop5:def}}}\"));",
          "46:         Assert.assertEquals(\"foo-val5\", StringPropertyReplacer.replaceProperties(\"foo-${prop3:${prop4:${prop5:def}}}\"));",
          "48:         Assert.assertEquals(\"foo-val4\", StringPropertyReplacer.replaceProperties(\"foo-${prop3:${prop4:${prop5:def}}}\"));",
          "50:         Assert.assertEquals(\"foo-val3\", StringPropertyReplacer.replaceProperties(\"foo-${prop3:${prop4:${prop5:def}}}\"));",
          "54:         Assert.assertEquals(\"foo-def\", StringPropertyReplacer.replaceProperties(\"foo-${prop6,prop7:def}\"));",
          "56:         Assert.assertEquals(\"foo-val7\", StringPropertyReplacer.replaceProperties(\"foo-${prop6,prop7:def}\"));",
          "58:         Assert.assertEquals(\"foo-val6\", StringPropertyReplacer.replaceProperties(\"foo-${prop6,prop7:def}\"));",
          "64:         IllegalStateException ise = Assert.assertThrows(IllegalStateException.class, () -> StringPropertyReplacer.replaceProperties(\"${prop}\"));",
          "",
          "[Added Lines]",
          "36:         Assert.assertEquals(\"foo-val1\", replaceProperties(\"foo-${prop1}\"));",
          "38:         Assert.assertEquals(\"foo-def\", replaceProperties(\"foo-${prop2:def}\"));",
          "40:         Assert.assertEquals(\"foo-val2\", replaceProperties(\"foo-${prop2:def}\"));",
          "44:         Assert.assertEquals(\"foo-def\", replaceProperties(\"foo-${prop3:${prop4:${prop5:def}}}\"));",
          "46:         Assert.assertEquals(\"foo-val5\", replaceProperties(\"foo-${prop3:${prop4:${prop5:def}}}\"));",
          "48:         Assert.assertEquals(\"foo-val4\", replaceProperties(\"foo-${prop3:${prop4:${prop5:def}}}\"));",
          "50:         Assert.assertEquals(\"foo-val3\", replaceProperties(\"foo-${prop3:${prop4:${prop5:def}}}\"));",
          "54:         Assert.assertEquals(\"foo-def\", replaceProperties(\"foo-${prop6,prop7:def}\"));",
          "56:         Assert.assertEquals(\"foo-val7\", replaceProperties(\"foo-${prop6,prop7:def}\"));",
          "58:         Assert.assertEquals(\"foo-val6\", replaceProperties(\"foo-${prop6,prop7:def}\"));",
          "64:         IllegalStateException ise = Assert.assertThrows(IllegalStateException.class, () -> replaceProperties(\"${prop}\"));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "72:         for (String key : env.keySet()) {",
          "73:             String value = env.get(key);",
          "74:             if ( !(value == null || \"\".equals(value)) ) {",
          "76:                 break;",
          "77:             }",
          "78:         }",
          "79:     }",
          "80: }",
          "",
          "[Removed Lines]",
          "75:                 Assert.assertEquals(\"foo-\" + value, StringPropertyReplacer.replaceProperties(\"foo-${env.\" + key + \"}\"));",
          "",
          "[Added Lines]",
          "75:                 Assert.assertEquals(\"foo-\" + value, replaceProperties(\"foo-${env.\" + key + \"}\"));",
          "81:     private String replaceProperties(String key) {",
          "82:         return StringPropertyReplacer.replaceProperties(key, SystemEnvProperties.UNFILTERED::getProperty);",
          "83:     }",
          "",
          "---------------"
        ],
        "core/src/main/java/org/keycloak/Config.java||core/src/main/java/org/keycloak/Config.java": [
          "File: core/src/main/java/org/keycloak/Config.java -> core/src/main/java/org/keycloak/Config.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: package org.keycloak;",
          "20: import java.util.Set;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: import java.util.Arrays;",
          "21: import java.util.Collections;",
          "22: import java.util.HashSet;",
          "25: import org.keycloak.common.util.StringPropertyReplacer;",
          "26: import org.keycloak.common.util.StringPropertyReplacer.PropertyResolver;",
          "27: import org.keycloak.common.util.SystemEnvProperties;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "29:     public static void init(ConfigProvider configProvider) {",
          "30:         Config.configProvider = configProvider;",
          "31:     }",
          "33:     public static String getAdminRealm() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38:         StringPropertyReplacer.setDefaultPropertyResolver(new PropertyResolver() {",
          "39:             SystemEnvProperties systemVariables = new SystemEnvProperties(Config.getAllowedSystemVariables());",
          "41:             @Override",
          "42:             public String resolve(String property) {",
          "43:                 return systemVariables.getProperty(property);",
          "44:             }",
          "45:         });",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "56:          return configProvider.scope(scope);",
          "57:     }",
          "59:     public static interface ConfigProvider {",
          "61:         String getProvider(String spi);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "74:     private static Set<String> getAllowedSystemVariables() {",
          "75:         Scope adminScope = configProvider.scope(\"admin\");",
          "77:         if (adminScope == null) {",
          "78:             return Collections.emptySet();",
          "79:         }",
          "81:         String[] allowedSystemVariables = adminScope.getArray(\"allowed-system-variables\");",
          "83:         if (allowedSystemVariables == null) {",
          "84:             return Collections.emptySet();",
          "85:         }",
          "87:         return new HashSet<>(Arrays.asList(allowedSystemVariables));",
          "88:     }",
          "",
          "---------------"
        ],
        "core/src/main/java/org/keycloak/util/JsonSerialization.java||core/src/main/java/org/keycloak/util/JsonSerialization.java": [
          "File: core/src/main/java/org/keycloak/util/JsonSerialization.java -> core/src/main/java/org/keycloak/util/JsonSerialization.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "40: public class JsonSerialization {",
          "41:     public static final ObjectMapper mapper = new ObjectMapper();",
          "42:     public static final ObjectMapper prettyMapper = new ObjectMapper();",
          "45:     static {",
          "46:         mapper.registerModule(new Jdk8Module());",
          "",
          "[Removed Lines]",
          "43:     public static final ObjectMapper sysPropertiesAwareMapper = new ObjectMapper(new SystemPropertiesJsonParserFactory());",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "80:     }",
          "82:     public static <T> T readValue(InputStream bytes, Class<T> type) throws IOException {",
          "84:     }",
          "86:     public static <T> T readValue(String string, TypeReference<T> type) throws IOException {",
          "",
          "[Removed Lines]",
          "83:         return readValue(bytes, type, false);",
          "",
          "[Added Lines]",
          "82:         return mapper.readValue(bytes, type);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "91:         return mapper.readValue(bytes, type);",
          "92:     }",
          "",
          "[Removed Lines]",
          "94:     public static <T> T readValue(InputStream bytes, Class<T> type, boolean replaceSystemProperties) throws IOException {",
          "95:         if (replaceSystemProperties) {",
          "96:             return sysPropertiesAwareMapper.readValue(bytes, type);",
          "97:         } else {",
          "98:             return mapper.readValue(bytes, type);",
          "99:         }",
          "100:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "core/src/test/java/org/keycloak/JsonParserTest.java||core/src/test/java/org/keycloak/JsonParserTest.java": [
          "File: core/src/test/java/org/keycloak/JsonParserTest.java -> core/src/test/java/org/keycloak/JsonParserTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: import org.keycloak.representations.ClaimsRepresentation;",
          "24: import org.keycloak.representations.IDToken;",
          "25: import org.keycloak.representations.JsonWebToken;",
          "27: import org.keycloak.representations.idm.ClientPoliciesRepresentation;",
          "28: import org.keycloak.representations.idm.ClientPolicyConditionConfigurationRepresentation;",
          "29: import org.keycloak.representations.idm.ClientPolicyConditionRepresentation;",
          "",
          "[Removed Lines]",
          "26: import org.keycloak.representations.adapters.config.AdapterConfig;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "97:         Assert.assertNotNull(nested.get(\"foo\"));",
          "98:     }",
          "124:     static Pattern substitution = Pattern.compile(\"\\\\$\\\\{([^}]+)\\\\}\");",
          "126:     @Test",
          "",
          "[Removed Lines]",
          "100:     @Test",
          "101:     public void testParsingSystemProps() throws IOException {",
          "102:         System.setProperty(\"my.host\", \"foo\");",
          "103:         System.setProperty(\"con.pool.size\", \"200\");",
          "104:         System.setProperty(\"allow.any.hostname\", \"true\");",
          "105:         System.setProperty(\"socket.timeout.millis\", \"6000\");",
          "106:         System.setProperty(\"connection.timeout.millis\", \"7000\");",
          "107:         System.setProperty(\"connection.ttl.millis\", \"500\");",
          "109:         InputStream is = getClass().getClassLoader().getResourceAsStream(\"keycloak.json\");",
          "111:         AdapterConfig config = JsonSerialization.readValue(is, AdapterConfig.class, true);",
          "112:         Assert.assertEquals(\"http://foo:8080/auth\", config.getAuthServerUrl());",
          "113:         Assert.assertEquals(\"external\", config.getSslRequired());",
          "114:         Assert.assertEquals(\"angular-product${non.existing}\", config.getResource());",
          "115:         Assert.assertTrue(config.isPublicClient());",
          "116:         Assert.assertTrue(config.isAllowAnyHostname());",
          "117:         Assert.assertEquals(100, config.getCorsMaxAge());",
          "118:         Assert.assertEquals(200, config.getConnectionPoolSize());",
          "119:         Assert.assertEquals(6000L, config.getSocketTimeout());",
          "120:         Assert.assertEquals(7000L, config.getConnectionTimeout());",
          "121:         Assert.assertEquals(500L, config.getConnectionTTL());",
          "122:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "263:         }",
          "264:     }",
          "",
          "[Removed Lines]",
          "266: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "model/jpa/src/main/java/org/keycloak/connections/jpa/DefaultJpaConnectionProviderFactory.java||model/jpa/src/main/java/org/keycloak/connections/jpa/DefaultJpaConnectionProviderFactory.java": [
          "File: model/jpa/src/main/java/org/keycloak/connections/jpa/DefaultJpaConnectionProviderFactory.java -> model/jpa/src/main/java/org/keycloak/connections/jpa/DefaultJpaConnectionProviderFactory.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "373:                 String driver = config.get(\"driver\");",
          "374:                 url = augmentJdbcUrl(driver, url);",
          "375:                 Class.forName(driver);",
          "377:             }",
          "378:         } catch (Exception e) {",
          "379:             throw new RuntimeException(\"Failed to connect to database\", e);",
          "",
          "[Removed Lines]",
          "376:                 return DriverManager.getConnection(StringPropertyReplacer.replaceProperties(url, System.getProperties()), config.get(\"user\"), config.get(\"password\"));",
          "",
          "[Added Lines]",
          "376:                 return DriverManager.getConnection(StringPropertyReplacer.replaceProperties(url, System.getProperties()::getProperty), config.get(\"user\"), config.get(\"password\"));",
          "",
          "---------------"
        ],
        "saml-core/src/main/java/org/keycloak/saml/common/util/StaxParserUtil.java||saml-core/src/main/java/org/keycloak/saml/common/util/StaxParserUtil.java": [
          "File: saml-core/src/main/java/org/keycloak/saml/common/util/StaxParserUtil.java -> saml-core/src/main/java/org/keycloak/saml/common/util/StaxParserUtil.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: package org.keycloak.saml.common.util;",
          "19: import org.keycloak.common.util.StringPropertyReplacer;",
          "20: import org.keycloak.saml.common.ErrorCodes;",
          "21: import org.keycloak.saml.common.PicketLinkLogger;",
          "22: import org.keycloak.saml.common.PicketLinkLoggerFactory;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: import org.keycloak.common.util.SystemEnvProperties;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "211:         final String value = attribute.getValue();",
          "214:     }",
          "",
          "[Removed Lines]",
          "213:         return value == null ? null : trim(StringPropertyReplacer.replaceProperties(value));",
          "",
          "[Added Lines]",
          "214:         return value == null ? null : trim(StringPropertyReplacer.replaceProperties(value, SystemEnvProperties.UNFILTERED::getProperty));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "251:     public static String getAttributeValueRP(StartElement startElement, HasQName attrName) {",
          "252:         final String value = getAttributeValue(startElement, attrName.getQName());",
          "254:     }",
          "",
          "[Removed Lines]",
          "253:         return value == null ? null : StringPropertyReplacer.replaceProperties(value);",
          "",
          "[Added Lines]",
          "254:         return value == null ? null : StringPropertyReplacer.replaceProperties(value, SystemEnvProperties.UNFILTERED::getProperty);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "536:     public static String getElementTextRP(XMLEventReader xmlEventReader) throws ParsingException {",
          "537:         try {",
          "539:         } catch (XMLStreamException e) {",
          "540:             throw logger.parserException(e);",
          "541:         }",
          "",
          "[Removed Lines]",
          "538:             return trim(StringPropertyReplacer.replaceProperties(xmlEventReader.getElementText()));",
          "",
          "[Added Lines]",
          "539:             return trim(StringPropertyReplacer.replaceProperties(xmlEventReader.getElementText(), SystemEnvProperties.UNFILTERED::getProperty));",
          "",
          "---------------"
        ],
        "services/src/main/java/org/keycloak/services/managers/ResourceAdminManager.java||services/src/main/java/org/keycloak/services/managers/ResourceAdminManager.java": [
          "File: services/src/main/java/org/keycloak/services/managers/ResourceAdminManager.java -> services/src/main/java/org/keycloak/services/managers/ResourceAdminManager.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: import org.keycloak.TokenIdGenerator;",
          "27: import org.keycloak.common.util.KeycloakUriBuilder;",
          "28: import org.keycloak.common.util.MultivaluedHashMap;",
          "30: import org.keycloak.common.util.Time;",
          "31: import org.keycloak.connections.httpclient.HttpClientProvider;",
          "32: import org.keycloak.constants.AdapterConstants;",
          "",
          "[Removed Lines]",
          "29: import org.keycloak.common.util.StringPropertyReplacer;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "58: import java.util.Map;",
          "59: import java.util.Set;",
          "60: import java.util.concurrent.atomic.AtomicInteger;",
          "62: import org.apache.http.client.methods.CloseableHttpResponse;",
          "63: import org.apache.http.impl.client.CloseableHttpClient;",
          "",
          "[Removed Lines]",
          "61: import java.util.stream.Stream;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "77:     }",
          "79:     public static String resolveUri(KeycloakSession session, String rootUrl, String uri) {",
          "83:    }",
          "",
          "[Removed Lines]",
          "80:         String absoluteURI = ResolveRelative.resolveRelativeUri(session, rootUrl, uri);",
          "81:         return StringPropertyReplacer.replaceProperties(absoluteURI);",
          "",
          "[Added Lines]",
          "78:         return ResolveRelative.resolveRelativeUri(session, rootUrl, uri);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "88:             return null;",
          "89:         }",
          "95:     }",
          "",
          "[Removed Lines]",
          "91:         String absoluteURI = ResolveRelative.resolveRelativeUri(session, client.getRootUrl(), mgmtUrl);",
          "94:         return StringPropertyReplacer.replaceProperties(absoluteURI);",
          "",
          "[Added Lines]",
          "88:         return ResolveRelative.resolveRelativeUri(session, client.getRootUrl(), mgmtUrl);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "192:             return null;",
          "193:         }",
          "199:     }",
          "201:     protected Response sendBackChannelLogoutRequestToClientUri(ClientModel resource,",
          "",
          "[Removed Lines]",
          "195:         String absoluteURI = ResolveRelative.resolveRelativeUri(session, client.getRootUrl(), backchannelLogoutUrl);",
          "198:         return StringPropertyReplacer.replaceProperties(absoluteURI);",
          "",
          "[Added Lines]",
          "189:         return ResolveRelative.resolveRelativeUri(session, client.getRootUrl(), backchannelLogoutUrl);",
          "",
          "---------------"
        ],
        "services/src/main/java/org/keycloak/services/resources/account/AccountRestService.java||services/src/main/java/org/keycloak/services/resources/account/AccountRestService.java": [
          "File: services/src/main/java/org/keycloak/services/resources/account/AccountRestService.java -> services/src/main/java/org/keycloak/services/resources/account/AccountRestService.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "265:     private ConsentRepresentation modelToRepresentation(UserConsentModel model) {",
          "266:         List<ConsentScopeRepresentation> grantedScopes = model.getGrantedClientScopes().stream()",
          "268:                 .collect(Collectors.toList());",
          "269:         return new ConsentRepresentation(grantedScopes, model.getCreatedDate(), model.getLastUpdatedDate());",
          "270:     }",
          "",
          "[Removed Lines]",
          "267:                 .map(m -> new ConsentScopeRepresentation(m.getId(), m.getConsentScreenText()!= null ? m.getConsentScreenText() : m.getName(), StringPropertyReplacer.replaceProperties(m.getConsentScreenText(), getProperties())))",
          "",
          "[Added Lines]",
          "267:                 .map(m -> new ConsentScopeRepresentation(m.getId(), m.getConsentScreenText()!= null ? m.getConsentScreenText() : m.getName(), StringPropertyReplacer.replaceProperties(m.getConsentScreenText(), getProperties()::getProperty)))",
          "",
          "---------------"
        ],
        "services/src/main/java/org/keycloak/services/util/ResolveRelative.java||services/src/main/java/org/keycloak/services/util/ResolveRelative.java": [
          "File: services/src/main/java/org/keycloak/services/util/ResolveRelative.java -> services/src/main/java/org/keycloak/services/util/ResolveRelative.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: package org.keycloak.services.util;",
          "20: import org.keycloak.models.Constants;",
          "21: import org.keycloak.models.KeycloakSession;",
          "22: import org.keycloak.urls.UrlType;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: import org.keycloak.common.util.StringPropertyReplacer;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36:     }",
          "38:     public static String resolveRelativeUri(String frontendUrl, String adminUrl, String rootUrl, String url) {",
          "39:         if (url == null || !url.startsWith(\"/\")) {",
          "41:         } else if (rootUrl != null && !rootUrl.isEmpty()) {",
          "43:         } else {",
          "45:         }",
          "46:     }",
          "47:     public static String resolveRootUrl(KeycloakSession session, String rootUrl) {",
          "48:         String frontendUrl = session.getContext().getUri(UrlType.FRONTEND).getBaseUri().toString();",
          "49:         String adminUrl = session.getContext().getUri(UrlType.ADMIN).getBaseUri().toString();",
          "",
          "[Removed Lines]",
          "40:             return url;",
          "42:             return resolveRootUrl(frontendUrl, adminUrl, rootUrl) + url;",
          "44:             return UriBuilder.fromUri(frontendUrl).replacePath(url).build().toString();",
          "",
          "[Added Lines]",
          "40:         String finalUrl;",
          "43:             finalUrl = url;",
          "45:             finalUrl = resolveRootUrl(frontendUrl, adminUrl, rootUrl) + url;",
          "47:             finalUrl = UriBuilder.fromUri(frontendUrl).replacePath(url).build().toString();",
          "50:         return StringPropertyReplacer.replaceProperties(finalUrl);",
          "",
          "---------------"
        ],
        "services/src/main/java/org/keycloak/theme/DefaultThemeManager.java||services/src/main/java/org/keycloak/theme/DefaultThemeManager.java": [
          "File: services/src/main/java/org/keycloak/theme/DefaultThemeManager.java -> services/src/main/java/org/keycloak/theme/DefaultThemeManager.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "353:         private void substituteProperties(final Properties properties) {",
          "354:             for (final String propertyName : properties.stringPropertyNames()) {",
          "356:             }",
          "357:         }",
          "358:     }",
          "",
          "[Removed Lines]",
          "355:                 properties.setProperty(propertyName, StringPropertyReplacer.replaceProperties(properties.getProperty(propertyName), new SystemEnvProperties()));",
          "",
          "[Added Lines]",
          "355:                 properties.setProperty(propertyName, StringPropertyReplacer.replaceProperties(properties.getProperty(propertyName), SystemEnvProperties.UNFILTERED::getProperty));",
          "",
          "---------------"
        ],
        "services/src/main/java/org/keycloak/services/util/JsonConfigProvider.java||services/src/test/java/org/keycloak/utils/JsonConfigProvider.java": [
          "File: services/src/main/java/org/keycloak/services/util/JsonConfigProvider.java -> services/src/test/java/org/keycloak/utils/JsonConfigProvider.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: import com.fasterxml.jackson.databind.JsonNode;",
          "21: import org.keycloak.Config;",
          "22: import org.keycloak.common.util.StringPropertyReplacer;",
          "30: public class JsonConfigProvider implements Config.ConfigProvider {",
          "34:     private JsonNode config;",
          "37:         this.config = config;",
          "39:     }",
          "41:     @Override",
          "",
          "[Removed Lines]",
          "18: package org.keycloak.services.util;",
          "24: import java.util.Properties;",
          "25: import java.util.Set;",
          "32:     private Properties properties;",
          "36:     public JsonConfigProvider(JsonNode config, Properties properties) {",
          "38:         this.properties = properties;",
          "",
          "[Added Lines]",
          "18: package org.keycloak.utils;",
          "20: import java.util.Set;",
          "25: import org.keycloak.common.util.SystemEnvProperties;",
          "34:     public JsonConfigProvider(JsonNode config) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "70:     }",
          "72:     private String replaceProperties(String value) {",
          "74:     }",
          "76:     public class JsonScope implements Config.Scope {",
          "",
          "[Removed Lines]",
          "73:         return StringPropertyReplacer.replaceProperties(value, properties);",
          "",
          "[Added Lines]",
          "70:         return StringPropertyReplacer.replaceProperties(value, SystemEnvProperties.UNFILTERED::getProperty);",
          "",
          "---------------"
        ],
        "services/src/test/java/org/keycloak/utils/ScopeUtil.java||services/src/test/java/org/keycloak/utils/ScopeUtil.java": [
          "File: services/src/test/java/org/keycloak/utils/ScopeUtil.java -> services/src/test/java/org/keycloak/utils/ScopeUtil.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: package org.keycloak.utils;",
          "20: import org.junit.Assert;",
          "24: import java.io.IOException;",
          "25: import java.util.Map;",
          "28: import com.fasterxml.jackson.databind.JsonNode;",
          "29: import com.fasterxml.jackson.databind.ObjectMapper;",
          "31: public class ScopeUtil {",
          "",
          "[Removed Lines]",
          "21: import org.keycloak.services.util.JsonConfigProvider;",
          "22: import org.keycloak.services.util.JsonConfigProvider.JsonScope;",
          "26: import java.util.Properties;",
          "",
          "[Added Lines]",
          "27: import org.keycloak.utils.JsonConfigProvider.JsonScope;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34:         ObjectMapper mapper = new ObjectMapper();",
          "35:         try {",
          "36:             JsonNode config = mapper.readTree(json(properties));",
          "38:         } catch (IOException e) {",
          "39:             Assert.fail(\"Could not parse json\");",
          "40:         }",
          "",
          "[Removed Lines]",
          "37:             return new JsonConfigProvider(config, new Properties()).new JsonScope(config);",
          "",
          "[Added Lines]",
          "35:             return new JsonConfigProvider(config).new JsonScope(config);",
          "",
          "---------------"
        ],
        "testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/AuthServerTestEnricher.java||testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/AuthServerTestEnricher.java": [
          "File: testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/AuthServerTestEnricher.java -> testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/AuthServerTestEnricher.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "42: import org.keycloak.admin.client.Keycloak;",
          "43: import org.keycloak.common.crypto.FipsMode;",
          "44: import org.keycloak.common.util.StringPropertyReplacer;",
          "45: import org.keycloak.representations.idm.RealmRepresentation;",
          "46: import org.keycloak.services.error.KeycloakErrorHandler;",
          "47: import org.keycloak.testsuite.ProfileAssume;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45: import org.keycloak.common.util.SystemEnvProperties;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "438:         log.infof(\"Running SQL script created by liquibase during manual migration flow\", sqlScriptPath);",
          "439:         String prefix = \"keycloak.connectionsJpa.\";",
          "440:         String jdbcDriver = System.getProperty(prefix + \"driver\");",
          "442:         String dbUser = System.getProperty(prefix + \"user\");",
          "443:         String dbPassword = System.getProperty(prefix + \"password\");",
          "",
          "[Removed Lines]",
          "441:         String dbUrl = StringPropertyReplacer.replaceProperties(System.getProperty(prefix + \"url\"));",
          "",
          "[Added Lines]",
          "442:         String dbUrl = StringPropertyReplacer.replaceProperties(System.getProperty(prefix + \"url\"), SystemEnvProperties.UNFILTERED::getProperty);",
          "",
          "---------------"
        ],
        "testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/DeploymentTargetModifier.java||testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/DeploymentTargetModifier.java": [
          "File: testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/DeploymentTargetModifier.java -> testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/arquillian/DeploymentTargetModifier.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: import org.jboss.arquillian.test.spi.TestClass;",
          "30: import org.jboss.logging.Logger;",
          "31: import org.keycloak.common.util.StringPropertyReplacer;",
          "32: import org.keycloak.testsuite.utils.arquillian.ContainerConstants;",
          "34: import static org.keycloak.testsuite.arquillian.AppServerTestEnricher.getAppServerQualifiers;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32: import org.keycloak.common.util.SystemEnvProperties;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "100:                     String newAppServerQualifier = ContainerConstants.APP_SERVER_PREFIX  + AppServerTestEnricher.CURRENT_APP_SERVER + \"-\" + suffix;",
          "101:                     updateServerQualifier(deployment, testClass, newAppServerQualifier);",
          "102:                 } else {",
          "104:                     if (!newServerQualifier.equals(containerQualifier)) {",
          "105:                         updateServerQualifier(deployment, testClass, newServerQualifier);",
          "106:                     }",
          "",
          "[Removed Lines]",
          "103:                     String newServerQualifier = StringPropertyReplacer.replaceProperties(containerQualifier);",
          "",
          "[Added Lines]",
          "104:                     String newServerQualifier = StringPropertyReplacer.replaceProperties(containerQualifier, SystemEnvProperties.UNFILTERED::getProperty);",
          "",
          "---------------"
        ],
        "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/broker/KcSamlIdPInitiatedSsoTest.java||testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/broker/KcSamlIdPInitiatedSsoTest.java": [
          "File: testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/broker/KcSamlIdPInitiatedSsoTest.java -> testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/broker/KcSamlIdPInitiatedSsoTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "98:         InputStream is = KcSamlIdPInitiatedSsoTest.class.getResourceAsStream(fileName);",
          "99:         try {",
          "100:             String template = StreamUtil.readString(is, Charset.defaultCharset());",
          "102:             return IOUtil.loadRealm(new ByteArrayInputStream(realmString.getBytes(StandardCharsets.UTF_8)));",
          "103:         } catch (IOException ex) {",
          "104:             throw new RuntimeException(ex);",
          "",
          "[Removed Lines]",
          "101:             String realmString = StringPropertyReplacer.replaceProperties(template, properties);",
          "",
          "[Added Lines]",
          "101:             String realmString = StringPropertyReplacer.replaceProperties(template, properties::getProperty);",
          "",
          "---------------"
        ],
        "testsuite/model/src/main/java/org/keycloak/testsuite/model/Config.java||testsuite/model/src/main/java/org/keycloak/testsuite/model/Config.java": [
          "File: testsuite/model/src/main/java/org/keycloak/testsuite/model/Config.java -> testsuite/model/src/main/java/org/keycloak/testsuite/model/Config.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: import org.keycloak.Config.SystemPropertiesScope;",
          "22: import org.keycloak.common.util.StringPropertyReplacer;",
          "23: import org.keycloak.common.util.SystemEnvProperties;",
          "24: import java.util.HashMap;",
          "25: import java.util.Map;",
          "27: import java.util.concurrent.ConcurrentHashMap;",
          "28: import java.util.function.BooleanSupplier;",
          "29: import java.util.stream.Collectors;",
          "",
          "[Removed Lines]",
          "26: import java.util.Properties;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "35: public class Config implements ConfigProvider {",
          "39:     private final Map<String, String> defaultProperties = new ConcurrentHashMap<>();",
          "40:     private final ThreadLocal<Map<String, String>> properties = new ThreadLocal<Map<String, String>>() {",
          "41:         @Override",
          "",
          "[Removed Lines]",
          "37:     private final Properties systemProperties = new SystemEnvProperties();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "157:     }",
          "159:     private String replaceProperties(String value) {",
          "161:     }",
          "163:     @Override",
          "",
          "[Removed Lines]",
          "160:         return StringPropertyReplacer.replaceProperties(value, systemProperties);",
          "",
          "[Added Lines]",
          "158:         return StringPropertyReplacer.replaceProperties(value, SystemEnvProperties.UNFILTERED::getProperty);",
          "",
          "---------------"
        ],
        "testsuite/utils/src/main/java/org/keycloak/testsuite/JsonConfigProviderFactory.java||testsuite/utils/src/main/java/org/keycloak/testsuite/JsonConfigProviderFactory.java": [
          "File: testsuite/utils/src/main/java/org/keycloak/testsuite/JsonConfigProviderFactory.java -> testsuite/utils/src/main/java/org/keycloak/testsuite/JsonConfigProviderFactory.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: import java.io.IOException;",
          "24: import java.net.URL;",
          "25: import java.util.Optional;",
          "27: import org.jboss.logging.Logger;",
          "28: import org.keycloak.Config;",
          "30: import org.keycloak.services.ServicesLogger;",
          "32: import org.keycloak.util.JsonSerialization;",
          "34: public class JsonConfigProviderFactory implements ConfigProviderFactory {",
          "",
          "[Removed Lines]",
          "26: import java.util.Properties;",
          "29: import org.keycloak.common.util.SystemEnvProperties;",
          "31: import org.keycloak.services.util.JsonConfigProvider;",
          "",
          "[Added Lines]",
          "30: import org.keycloak.utils.JsonConfigProvider;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "66:     }",
          "68:     protected Optional<Config.ConfigProvider> createJsonProvider(JsonNode node) {",
          "70:     }",
          "76: }",
          "",
          "[Removed Lines]",
          "69:         return Optional.ofNullable(node).map(n -> new JsonConfigProvider(n, getProperties()));",
          "72:     protected Properties getProperties() {",
          "73:         return new SystemEnvProperties();",
          "74:     }",
          "",
          "[Added Lines]",
          "67:         return Optional.ofNullable(node).map(n -> new JsonConfigProvider(n));",
          "",
          "---------------"
        ]
      }
    }
  ]
}