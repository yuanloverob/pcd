{
  "cve_id": "CVE-2024-8060",
  "cve_desc": "OpenWebUI version 0.3.0 contains a vulnerability in the audio API endpoint `/audio/api/v1/transcriptions` that allows for arbitrary file upload. The application performs insufficient validation on the `file.content_type` and allows user-controlled filenames, leading to a path traversal vulnerability. This can be exploited by an authenticated user to overwrite critical files within the Docker container, potentially leading to remote code execution as the root user.",
  "repo": "open-webui/open-webui",
  "patch_hash": "613a087387c094e71ee91d29c015195ef401e160",
  "patch_info": {
    "commit_hash": "613a087387c094e71ee91d29c015195ef401e160",
    "repo": "open-webui/open-webui",
    "commit_url": "https://github.com/open-webui/open-webui/commit/613a087387c094e71ee91d29c015195ef401e160",
    "files": [
      "backend/open_webui/routers/audio.py"
    ],
    "message": "refac",
    "before_after_code_files": [
      "backend/open_webui/routers/audio.py||backend/open_webui/routers/audio.py"
    ]
  },
  "patch_diff": {
    "backend/open_webui/routers/audio.py||backend/open_webui/routers/audio.py": [
      "File: backend/open_webui/routers/audio.py -> backend/open_webui/routers/audio.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "681:     available_models = []",
      "682:     if request.app.state.config.TTS_ENGINE == \"openai\":",
      "683:         # Use custom endpoint if not using the official OpenAI API URL",
      "685:             try:",
      "687:                 response.raise_for_status()",
      "688:                 data = response.json()",
      "689:                 available_models = data.get(\"models\", [])",
      "690:             except Exception as e:",
      "691:                 log.error(f\"Error fetching models from custom endpoint: {str(e)}\")",
      "693:         else:",
      "694:             available_models = [{\"id\": \"tts-1\"}, {\"id\": \"tts-1-hd\"}]",
      "695:     elif request.app.state.config.TTS_ENGINE == \"elevenlabs\":",
      "",
      "[Removed Lines]",
      "684:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(\"https://api.openai.com\"):",
      "686:                 response = requests.get(f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/models\")",
      "692:                 available_models = []",
      "",
      "[Added Lines]",
      "684:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(",
      "685:             \"https://api.openai.com\"",
      "686:         ):",
      "688:                 response = requests.get(",
      "689:                     f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/models\"",
      "690:                 )",
      "696:                 available_models = [{\"id\": \"tts-1\"}, {\"id\": \"tts-1-hd\"}]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "723:     available_voices = {}",
      "724:     if request.app.state.config.TTS_ENGINE == \"openai\":",
      "725:         # Use custom endpoint if not using the official OpenAI API URL",
      "727:             try:",
      "729:                 response.raise_for_status()",
      "730:                 data = response.json()",
      "731:                 voices_list = data.get(\"voices\", [])",
      "732:                 available_voices = {voice[\"id\"]: voice[\"name\"] for voice in voices_list}",
      "733:             except Exception as e:",
      "734:                 log.error(f\"Error fetching voices from custom endpoint: {str(e)}\")",
      "736:         else:",
      "737:             available_voices = {",
      "738:                 \"alloy\": \"alloy\",",
      "",
      "[Removed Lines]",
      "726:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(\"https://api.openai.com\"):",
      "728:                 response = requests.get(f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/voices\")",
      "735:                 available_voices = {}",
      "",
      "[Added Lines]",
      "730:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(",
      "731:             \"https://api.openai.com\"",
      "732:         ):",
      "734:                 response = requests.get(",
      "735:                     f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/voices\"",
      "736:                 )",
      "743:                 available_voices = {",
      "744:                     \"alloy\": \"alloy\",",
      "745:                     \"echo\": \"echo\",",
      "746:                     \"fable\": \"fable\",",
      "747:                     \"onyx\": \"onyx\",",
      "748:                     \"nova\": \"nova\",",
      "749:                     \"shimmer\": \"shimmer\",",
      "750:                 }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0777ab70117b9b67a317605460ac76b652a2ac96",
      "candidate_info": {
        "commit_hash": "0777ab70117b9b67a317605460ac76b652a2ac96",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/0777ab70117b9b67a317605460ac76b652a2ac96",
        "files": [
          "src/lib/components/layout/Navbar/Menu.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/layout/Navbar/Menu.svelte||src/lib/components/layout/Navbar/Menu.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/layout/Navbar/Menu.svelte||src/lib/components/layout/Navbar/Menu.svelte": [
          "File: src/lib/components/layout/Navbar/Menu.svelte -> src/lib/components/layout/Navbar/Menu.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:     const virtualWidth = 800; // Fixed width (adjust as needed)",
          "76:     const clonedElement = containerElement.cloneNode(true);",
          "77:     clonedElement.style.width = `${virtualWidth}px`; // Apply fixed width",
          "78:     clonedElement.style.height = 'auto'; // Allow content to expand",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "77:     clonedElement.classList.add('text-black');",
          "78:     clonedElement.classList.add('dark:text-white');",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0a49c366f0146ecbe842aa14aba1c6b23f27091a",
      "candidate_info": {
        "commit_hash": "0a49c366f0146ecbe842aa14aba1c6b23f27091a",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/0a49c366f0146ecbe842aa14aba1c6b23f27091a",
        "files": [
          "src/lib/components/common/Collapsible.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/common/Collapsible.svelte||src/lib/components/common/Collapsible.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/common/Collapsible.svelte||src/lib/components/common/Collapsible.svelte": [
          "File: src/lib/components/common/Collapsible.svelte -> src/lib/components/common/Collapsible.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "167:       <Markdown",
          "168:        id={`tool-calls-${attributes?.id}-result`}",
          "169:        content={`> \\`\\`\\`json",
          "172: > \\`\\`\\``}",
          "173:       />",
          "174:      {:else}",
          "175:       <Markdown",
          "176:        id={`tool-calls-${attributes?.id}-result`}",
          "177:        content={`> \\`\\`\\`json",
          "179: > \\`\\`\\``}",
          "180:       />",
          "181:      {/if}",
          "",
          "[Removed Lines]",
          "170: > ${JSON.parse(decode(attributes?.arguments))}",
          "171: > ${JSON.parse(decode(attributes?.result))}",
          "178: > ${JSON.parse(decode(attributes?.arguments))}",
          "",
          "[Added Lines]",
          "170: > ${JSON.stringify(JSON.parse(JSON.parse(decode(attributes?.arguments))), null, 2)}",
          "171: > ${JSON.stringify(JSON.parse(JSON.parse(decode(attributes?.result))), null, 2)}",
          "178: > ${JSON.stringify(JSON.parse(JSON.parse(decode(attributes?.arguments))), null, 2)}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3e7077bb736745e952be6453c73099bfb726f042",
      "candidate_info": {
        "commit_hash": "3e7077bb736745e952be6453c73099bfb726f042",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/3e7077bb736745e952be6453c73099bfb726f042",
        "files": [
          "backend/open_webui/main.py",
          "src/lib/components/chat/ModelSelector/Selector.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "backend/open_webui/main.py||backend/open_webui/main.py",
          "src/lib/components/chat/ModelSelector/Selector.svelte||src/lib/components/chat/ModelSelector/Selector.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "backend/open_webui/main.py||backend/open_webui/main.py": [
          "File: backend/open_webui/main.py -> backend/open_webui/main.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1142:         if data is not None and \"id\" in data:",
          "1143:             user = Users.get_user_by_id(data[\"id\"])",
          "1145:     onboarding = False",
          "1146:     if user is None:",
          "1148:         onboarding = user_count == 0",
          "1150:     return {",
          "",
          "[Removed Lines]",
          "1147:         user_count = Users.get_num_users()",
          "",
          "[Added Lines]",
          "1145:     user_count = Users.get_num_users()",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1213:                     \"api_key\": GOOGLE_DRIVE_API_KEY.value,",
          "1214:                 },",
          "1215:                 \"onedrive\": {\"client_id\": ONEDRIVE_CLIENT_ID.value},",
          "1216:             }",
          "1217:             if user is not None",
          "1218:             else {}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1218:                     {",
          "1219:                         \"record_count\": user_count,",
          "1220:                         \"active_entries\": app.state.USER_COUNT,",
          "1221:                     }",
          "1222:                     if user.role == \"admin\"",
          "1223:                     else {}",
          "1224:                 ),",
          "",
          "---------------"
        ],
        "src/lib/components/chat/ModelSelector/Selector.svelte||src/lib/components/chat/ModelSelector/Selector.svelte": [
          "File: src/lib/components/chat/ModelSelector/Selector.svelte -> src/lib/components/chat/ModelSelector/Selector.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "334:        <button",
          "335:         class=\"min-w-fit outline-none p-1.5 {selectedTag === ''",
          "336:          ? ''",
          "338:         on:click={() => {",
          "339:          selectedTag = '';",
          "340:         }}",
          "",
          "[Removed Lines]",
          "337:          : 'text-gray-300 dark:text-gray-600 hover:text-gray-700 dark:hover:text-white'} transition\"",
          "",
          "[Added Lines]",
          "337:          : 'text-gray-300 dark:text-gray-600 hover:text-gray-700 dark:hover:text-white'} transition capitalize\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "346:         <button",
          "347:          class=\"min-w-fit outline-none p-1.5 {selectedTag === tag",
          "348:           ? ''",
          "350:          on:click={() => {",
          "351:           selectedTag = tag;",
          "352:          }}",
          "",
          "[Removed Lines]",
          "349:           : 'text-gray-300 dark:text-gray-600 hover:text-gray-700 dark:hover:text-white'} transition\"",
          "",
          "[Added Lines]",
          "349:           : 'text-gray-300 dark:text-gray-600 hover:text-gray-700 dark:hover:text-white'} transition capitalize\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "57d1527ce101590a2b8d92dd2340ee6ed79ab7a2",
      "candidate_info": {
        "commit_hash": "57d1527ce101590a2b8d92dd2340ee6ed79ab7a2",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/57d1527ce101590a2b8d92dd2340ee6ed79ab7a2",
        "files": [
          "src/lib/components/chat/ModelSelector/Selector.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/chat/ModelSelector/Selector.svelte||src/lib/components/chat/ModelSelector/Selector.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/chat/ModelSelector/Selector.svelte||src/lib/components/chat/ModelSelector/Selector.svelte": [
          "File: src/lib/components/chat/ModelSelector/Selector.svelte -> src/lib/components/chat/ModelSelector/Selector.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "600:          <div",
          "601:           class=\"flex gap-0.5 self-center items-center h-full translate-y-[0.5px] overflow-x-auto scrollbar-none\"",
          "602:          >",
          "604:            <Tooltip content={tag.name} className=\"flex-shrink-0\">",
          "605:             <div",
          "606:              class=\" text-xs font-bold px-1 rounded-sm uppercase bg-gray-500/20 text-gray-700 dark:text-gray-200\"",
          "",
          "[Removed Lines]",
          "603:           {#each item.model?.tags as tag}",
          "",
          "[Added Lines]",
          "603:           {#each item.model?.tags.sort((a, b) => a.name.localeCompare(b.name)) as tag}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "29c781875dbc9c2fe7907f2fbff54429133e49b5",
      "candidate_info": {
        "commit_hash": "29c781875dbc9c2fe7907f2fbff54429133e49b5",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/29c781875dbc9c2fe7907f2fbff54429133e49b5",
        "files": [
          "src/lib/workers/kokoro.worker.ts"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/workers/kokoro.worker.ts||src/lib/workers/kokoro.worker.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/workers/kokoro.worker.ts||src/lib/workers/kokoro.worker.ts": [
          "File: src/lib/workers/kokoro.worker.ts -> src/lib/workers/kokoro.worker.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import { KokoroTTS } from 'kokoro-js';",
          "3: let tts;",
          "4: let isInitialized = false; // Flag to track initialization status",
          "5: const DEFAULT_MODEL_ID = 'onnx-community/Kokoro-82M-v1.0-ONNX'; // Default model",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import { env } from '@huggingface/transformers';",
          "5: env.backends.onnx.wasm.wasmPaths = '/wasm/';",
          "",
          "---------------"
        ]
      }
    }
  ]
}