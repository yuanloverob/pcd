{
  "cve_id": "CVE-2024-28199",
  "cve_desc": "phlex is an open source framework for building object-oriented views in Ruby. There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data. This was due to improper case-sensitivity in the code that was meant to prevent these attacks. If you render an `<a>` tag with an `href` attribute set to a user-provided link, that link could potentially execute JavaScript when clicked by another user. If you splat user-provided attributes when rendering any HTML tag, malicious event attributes could be included in the output, executing JavaScript when the events are triggered by another user. Patches are available on RubyGems for all 1.x minor versions. Users are advised to upgrade. Users unable to upgrade should consider configuring a content security policy that does not allow `unsafe-inline`.",
  "repo": "phlex-ruby/phlex",
  "patch_hash": "aa50c604cdee1d0ce7ef068a4c66cbd5d43f96a1",
  "patch_info": {
    "commit_hash": "aa50c604cdee1d0ce7ef068a4c66cbd5d43f96a1",
    "repo": "phlex-ruby/phlex",
    "commit_url": "https://github.com/phlex-ruby/phlex/commit/aa50c604cdee1d0ce7ef068a4c66cbd5d43f96a1",
    "files": [
      "lib/phlex/sgml.rb",
      "test/phlex/view/naughty_business.rb"
    ],
    "message": "Fix improper case-sensitivity\n\nSee https://github.com/phlex-ruby/phlex/security/advisories/GHSA-242p-4v39-2v8g",
    "before_after_code_files": [
      "lib/phlex/sgml.rb||lib/phlex/sgml.rb",
      "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb"
    ]
  },
  "patch_diff": {
    "lib/phlex/sgml.rb||lib/phlex/sgml.rb": [
      "File: lib/phlex/sgml.rb -> lib/phlex/sgml.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "393:     attributes = process_attributes(**attributes)",
      "394:    end",
      "404:    buffer = +\"\"",
      "405:    __build_attributes__(attributes, buffer: buffer)",
      "",
      "[Removed Lines]",
      "396:    if attributes[:href]&.start_with?(/\\s*javascript:/)",
      "397:     attributes.delete(:href)",
      "398:    end",
      "400:    if attributes[\"href\"]&.start_with?(/\\s*javascript:/)",
      "401:     attributes.delete(\"href\")",
      "402:    end",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "418:      else raise ArgumentError, \"Attribute keys should be Strings or Symbols.\"",
      "419:     end",
      "421:     # Detect unsafe attribute names. Attribute names are considered unsafe if they match an event attribute or include unsafe characters.",
      "423:      raise ArgumentError, \"Unsafe attribute name detected: #{k}.\"",
      "424:     end",
      "",
      "[Removed Lines]",
      "422:     if HTML::EVENT_ATTRIBUTES[name] || name.match?(/[<>&\"']/)",
      "",
      "[Added Lines]",
      "413:     lower_name = name.downcase",
      "414:     next if lower_name == \"href\" && v.start_with?(/\\s*javascript:/i)",
      "417:     if HTML::EVENT_ATTRIBUTES[lower_name] || name.match?(/[<>&\"']/)",
      "",
      "---------------"
    ],
    "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb": [
      "File: test/phlex/view/naughty_business.rb -> test/phlex/view/naughty_business.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "3: describe Phlex::HTML do",
      "4:  extend ViewHelper",
      "6:  with \"naughty text\" do",
      "7:   view do",
      "8:    def view_template",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6:  with \"naughty javascript links\" do",
      "7:   view do",
      "8:    def template",
      "9:     a(href: \"javascript:alert(1)\") { \"a\" }",
      "10:     a(href: \"JAVASCRIPT:alert(1)\") { \"b\" }",
      "11:     a(href: :\"JAVASCRIPT:alert(1)\") { \"c\" }",
      "12:     a(HREF: \"javascript:alert(1)\") { \"d\" }",
      "13:    end",
      "14:   end",
      "16:   it \"removes the href attributes\" do",
      "17:    expect(output).to be == \"<a>a</a><a>b</a><a>c</a><a>d</a>\"",
      "18:   end",
      "19:  end",
      "21:  with \"naughty uppercase event tag\" do",
      "22:   view do",
      "23:    def template",
      "24:     button ONCLICK: \"ALERT(1)\" do",
      "25:      \"naughty button\"",
      "26:     end",
      "27:    end",
      "28:   end",
      "30:   it \"raises\" do",
      "31:    expect { output }.to raise_exception ArgumentError,",
      "32:     message: be == \"Unsafe attribute name detected: ONCLICK.\"",
      "33:   end",
      "34:  end",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2f40e7762a5ab3ce2dfb805c6c34fbed6e1ae121",
      "candidate_info": {
        "commit_hash": "2f40e7762a5ab3ce2dfb805c6c34fbed6e1ae121",
        "repo": "phlex-ruby/phlex",
        "commit_url": "https://github.com/phlex-ruby/phlex/commit/2f40e7762a5ab3ce2dfb805c6c34fbed6e1ae121",
        "files": [
          "lib/phlex/sgml.rb",
          "test/phlex/view/capture.rb",
          "test/phlex/view/naughty_business.rb"
        ],
        "message": "Quoted escapes (#709)\n\nIf I\u2019m not mistaken, the only thing we need to escape inside a\ndouble-quoted attribute value is double-quotes.\n\nThis is a potential solution to #708 because it would allow for the use\nof `'`, `<`, `>` and `&` in attribute values, while still replacing `\"`\nwith `&quot;` so the value cannot escape.\n\nCloses #708",
        "before_after_code_files": [
          "lib/phlex/sgml.rb||lib/phlex/sgml.rb",
          "test/phlex/view/capture.rb||test/phlex/view/capture.rb",
          "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/phlex/sgml.rb||lib/phlex/sgml.rb",
            "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb"
          ],
          "candidate": [
            "lib/phlex/sgml.rb||lib/phlex/sgml.rb",
            "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/phlex/sgml.rb||lib/phlex/sgml.rb": [
          "File: lib/phlex/sgml.rb -> lib/phlex/sgml.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "393:     when true",
          "394:      buffer << \" \" << name",
          "395:     when String",
          "397:     when Symbol",
          "399:     when Integer, Float",
          "400:      buffer << \" \" << name << '=\"' << v.to_s << '\"'",
          "401:     when Hash",
          "",
          "[Removed Lines]",
          "396:      buffer << \" \" << name << '=\"' << Phlex::Escape.html_escape(v) << '\"'",
          "398:      buffer << \" \" << name << '=\"' << Phlex::Escape.html_escape(v.name) << '\"'",
          "",
          "[Added Lines]",
          "396:      buffer << \" \" << name << '=\"' << v.gsub('\"', \"&quot;\") << '\"'",
          "398:      buffer << \" \" << name << '=\"' << v.name.gsub('\"', \"&quot;\") << '\"'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "408:       }, buffer",
          "409:      )",
          "410:     when Array",
          "412:     when Set",
          "414:     else",
          "415:      value = if v.respond_to?(:to_phlex_attribute_value)",
          "416:       v.to_phlex_attribute_value",
          "",
          "[Removed Lines]",
          "411:      buffer << \" \" << name << '=\"' << Phlex::Escape.html_escape(v.compact.join(\" \")) << '\"'",
          "413:      buffer << \" \" << name << '=\"' << Phlex::Escape.html_escape(v.to_a.compact.join(\" \")) << '\"'",
          "",
          "[Added Lines]",
          "411:      buffer << \" \" << name << '=\"' << v.compact.join(\" \").gsub('\"', \"&quot;\") << '\"'",
          "413:      buffer << \" \" << name << '=\"' << v.to_a.compact.join(\" \").gsub('\"', \"&quot;\") << '\"'",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "420:       v.to_s",
          "421:      end",
          "424:     end",
          "425:    end",
          "",
          "[Removed Lines]",
          "423:      buffer << \" \" << name << '=\"' << Phlex::Escape.html_escape(value) << '\"'",
          "",
          "[Added Lines]",
          "423:      buffer << \" \" << name << '=\"' << value.gsub('\"', \"&quot;\") << '\"'",
          "",
          "---------------"
        ],
        "test/phlex/view/capture.rb||test/phlex/view/capture.rb": [
          "File: test/phlex/view/capture.rb -> test/phlex/view/capture.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "92:   end",
          "94:   it \"should contain the full capture\" do",
          "96:   end",
          "98:   it \"should contain the full capture if the buffer is provided\" do",
          "99:    my_buffer = +\"\"",
          "100:    example.call(my_buffer, view_context: self)",
          "102:   end",
          "103:  end",
          "104: end",
          "",
          "[Removed Lines]",
          "95:    expect(example.call(view_context: self)).to be == %(<h1>Before</h1><iframe srcdoc=\"&lt;h1&gt;Hello&lt;/h1&gt;&lt;h1&gt;World&lt;/h1&gt;\"></iframe><h1>After</h1>)",
          "101:    expect(my_buffer).to be == %(<h1>Before</h1><iframe srcdoc=\"&lt;h1&gt;Hello&lt;/h1&gt;&lt;h1&gt;World&lt;/h1&gt;\"></iframe><h1>After</h1>)",
          "",
          "[Added Lines]",
          "95:    expect(example.call(view_context: self)).to be == %(<h1>Before</h1><iframe srcdoc=\"<h1>Hello</h1><h1>World</h1>\"></iframe><h1>After</h1>)",
          "101:    expect(my_buffer).to be == %(<h1>Before</h1><iframe srcdoc=\"<h1>Hello</h1><h1>World</h1>\"></iframe><h1>After</h1>)",
          "",
          "---------------"
        ],
        "test/phlex/view/naughty_business.rb||test/phlex/view/naughty_business.rb": [
          "File: test/phlex/view/naughty_business.rb -> test/phlex/view/naughty_business.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:   end",
          "55:   it \"escapes the attributes\" do",
          "57:   end",
          "58:  end",
          "",
          "[Removed Lines]",
          "56:    expect(output).to be == %(<article id=\"&quot;&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;bad_script.js&quot;&gt;&lt;/script&gt;\"></article>)",
          "",
          "[Added Lines]",
          "56:    expect(output).to be == %(<article id=\"&quot;><script type=&quot;text/javascript&quot; src=&quot;bad_script.js&quot;></script>\"></article>)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4fd79b76344df3228d67d745f9c026dd071256c9",
      "candidate_info": {
        "commit_hash": "4fd79b76344df3228d67d745f9c026dd071256c9",
        "repo": "phlex-ruby/phlex",
        "commit_url": "https://github.com/phlex-ruby/phlex/commit/4fd79b76344df3228d67d745f9c026dd071256c9",
        "files": [
          "lib/phlex.rb",
          "lib/phlex/elements.rb",
          "lib/phlex/fifo.rb",
          "lib/phlex/sgml.rb",
          "test/phlex/view/process_attributes.rb"
        ],
        "message": "FIFO cache (#704)",
        "before_after_code_files": [
          "lib/phlex.rb||lib/phlex.rb",
          "lib/phlex/elements.rb||lib/phlex/elements.rb",
          "lib/phlex/fifo.rb||lib/phlex/fifo.rb",
          "lib/phlex/sgml.rb||lib/phlex/sgml.rb",
          "test/phlex/view/process_attributes.rb||test/phlex/view/process_attributes.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/phlex/sgml.rb||lib/phlex/sgml.rb"
          ],
          "candidate": [
            "lib/phlex/sgml.rb||lib/phlex/sgml.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/phlex.rb||lib/phlex.rb": [
          "File: lib/phlex.rb -> lib/phlex.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "13:  autoload :ElementClobberingGuard, \"phlex/element_clobbering_guard\"",
          "14:  autoload :Elements, \"phlex/elements\"",
          "15:  autoload :Error, \"phlex/error\"",
          "16:  autoload :HTML, \"phlex/html\"",
          "17:  autoload :Helpers, \"phlex/helpers\"",
          "18:  autoload :Kit, \"phlex/kit\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16:  autoload :FIFO, \"phlex/fifo\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "22:  autoload :Unbuffered, \"phlex/unbuffered\"",
          "24:  Escape = ERB::Escape",
          "29:  SUPPORTS_FIBER_STORAGE = RUBY_ENGINE == \"ruby\"",
          "30: end",
          "",
          "[Removed Lines]",
          "26:  # @api private",
          "27:  ATTRIBUTE_CACHE = {}",
          "",
          "[Added Lines]",
          "26:  ATTRIBUTE_CACHE = FIFO.new(3_000_000) # 3MB",
          "",
          "---------------"
        ],
        "lib/phlex/elements.rb||lib/phlex/elements.rb": [
          "File: lib/phlex/elements.rb -> lib/phlex/elements.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:  # @note The methods defined by this macro depend on other methods from {SGML} so they should always be mixed into an {HTML} or {SVG} component.",
          "29:  # @example Register the custom element `<trix-editor>`",
          "30:  #  register_element :trix_editor",
          "40:   class_eval(<<-RUBY, __FILE__, __LINE__ + 1)",
          "41:    # frozen_string_literal: true",
          "43:    def #{method_name}(**attributes, &block)",
          "46:     context = @_context",
          "47:     buffer = context.buffer",
          "48:     fragment = context.fragments",
          "",
          "[Removed Lines]",
          "31:  def register_element(method_name, tag: method_name.name.tr(\"_\", \"-\"), deprecated: false)",
          "32:   if deprecated",
          "33:    deprecation = <<~RUBY",
          "34:     Kernel.warn \"#{deprecated}\"",
          "35:    RUBY",
          "36:   else",
          "37:    deprecation = \"\"",
          "38:   end",
          "44:     #{deprecation}",
          "",
          "[Added Lines]",
          "31:  def register_element(method_name, tag: method_name.name.tr(\"_\", \"-\"))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "67:     if attributes.length > 0 # with attributes",
          "68:      if block # with content block",
          "70:       yield_content(&block)",
          "71:       buffer << \"</#{tag}>\"",
          "72:      else # without content block",
          "74:      end",
          "75:     else # without attributes",
          "76:      if block # with content block",
          "",
          "[Removed Lines]",
          "69:       buffer << \"<#{tag}\" << (Phlex::ATTRIBUTE_CACHE[respond_to?(:process_attributes) ? (attributes.hash + self.class.hash) : attributes.hash] || __attributes__(**attributes)) << \">\"",
          "73:       buffer << \"<#{tag}\" << (Phlex::ATTRIBUTE_CACHE[respond_to?(:process_attributes) ? (attributes.hash + self.class.hash) : attributes.hash] || __attributes__(**attributes)) << \"></#{tag}>\"",
          "",
          "[Added Lines]",
          "59:       buffer << \"<#{tag}\" << (Phlex::ATTRIBUTE_CACHE[attributes.hash] ||= __attributes__(attributes)) << \">\"",
          "63:       buffer << \"<#{tag}\" << (Phlex::ATTRIBUTE_CACHE[attributes.hash] ||= __attributes__(attributes)) << \"></#{tag}>\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "123:     end",
          "125:     if attributes.length > 0 # with attributes",
          "127:     else # without attributes",
          "128:      buffer << \"<#{tag}>\"",
          "129:     end",
          "",
          "[Removed Lines]",
          "126:      buffer << \"<#{tag}\" << (Phlex::ATTRIBUTE_CACHE[respond_to?(:process_attributes) ? (attributes.hash + self.class.hash) : attributes.hash] || __attributes__(**attributes)) << \">\"",
          "",
          "[Added Lines]",
          "116:      buffer << \"<#{tag}\" << (Phlex::ATTRIBUTE_CACHE[attributes.hash] ||= __attributes__(attributes)) << \">\"",
          "",
          "---------------"
        ],
        "lib/phlex/fifo.rb||lib/phlex/fifo.rb": [
          "File: lib/phlex/fifo.rb -> lib/phlex/fifo.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # frozen_string_literal: true",
          "3: class Phlex::FIFO",
          "4:  def initialize(max_bytesize)",
          "5:   @hash = {}",
          "6:   @mutex = Mutex.new",
          "8:   @bytesize = 0",
          "9:   @max_bytesize = max_bytesize",
          "10:  end",
          "12:  def [](key)",
          "13:   @hash[key]",
          "14:  end",
          "16:  def []=(key, value)",
          "17:   @mutex.synchronize do",
          "18:    old_value = @hash.delete(key)",
          "19:    @hash[key] = value",
          "21:    if old_value",
          "22:     @bytesize += value.bytesize - old_value.bytesize",
          "23:    else",
          "24:     @bytesize += value.bytesize",
          "25:    end",
          "27:    while @bytesize > @max_bytesize",
          "28:     key, value = @hash.shift",
          "29:     @bytesize -= value.bytesize",
          "30:    end",
          "31:   end",
          "32:  end",
          "33: end",
          "",
          "---------------"
        ],
        "lib/phlex/sgml.rb||lib/phlex/sgml.rb": [
          "File: lib/phlex/sgml.rb -> lib/phlex/sgml.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:     end",
          "24:    end",
          "32:    # @api private",
          "33:    def element_method?(method_name)",
          "34:     return false unless instance_methods.include?(method_name)",
          "",
          "[Removed Lines]",
          "26:    # @api private",
          "27:    def rendered_at_least_once!",
          "28:     alias_method :__attributes__, :__final_attributes__",
          "29:     alias_method :call, :__final_call__",
          "30:    end",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "83:   end",
          "85:   # Renders the view and returns the buffer. The default buffer is a mutable String.",
          "94:    @_buffer = buffer",
          "95:    @_context = context",
          "96:    @_view_context = view_context",
          "",
          "[Removed Lines]",
          "86:   def call(...)",
          "87:    __final_call__(...).tap do",
          "88:     self.class.rendered_at_least_once!",
          "89:    end",
          "90:   end",
          "92:   # @api private",
          "93:   def __final_call__(buffer = +\"\", context: Phlex::Context.new, view_context: nil, parent: nil, fragments: nil, &block)",
          "",
          "[Added Lines]",
          "80:   def call(buffer = +\"\", context: Phlex::Context.new, view_context: nil, parent: nil, fragments: nil, &block)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "384:   end",
          "386:   # @api private",
          "407:    attributes.each do |k, v|",
          "408:     next unless v",
          "",
          "[Removed Lines]",
          "387:   def __attributes__(**attributes)",
          "388:    __final_attributes__(**attributes).tap do |buffer|",
          "389:     Phlex::ATTRIBUTE_CACHE[respond_to?(:process_attributes) ? (attributes.hash + self.class.hash) : attributes.hash] = buffer.freeze",
          "390:    end",
          "391:   end",
          "393:   # @api private",
          "394:   def __final_attributes__(**attributes)",
          "395:    if respond_to?(:process_attributes)",
          "396:     attributes = process_attributes(**attributes)",
          "397:    end",
          "399:    buffer = +\"\"",
          "400:    __build_attributes__(attributes, buffer:)",
          "402:    buffer",
          "403:   end",
          "405:   # @api private",
          "406:   def __build_attributes__(attributes, buffer:)",
          "",
          "[Added Lines]",
          "374:   def __attributes__(attributes, buffer = +\"\")",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "431:     when Integer, Float",
          "432:      buffer << \" \" << name << '=\"' << v.to_s << '\"'",
          "433:     when Hash",
          "435:       v.transform_keys { |subkey|",
          "436:        case subkey",
          "437:         when Symbol then\"#{name}-#{subkey.name.tr('_', '-')}\"",
          "438:         else \"#{name}-#{subkey}\"",
          "439:        end",
          "441:      )",
          "442:     when Array",
          "443:      buffer << \" \" << name << '=\"' << Phlex::Escape.html_escape(v.compact.join(\" \")) << '\"'",
          "",
          "[Removed Lines]",
          "434:      __build_attributes__(",
          "440:       }, buffer:",
          "",
          "[Added Lines]",
          "402:      __attributes__(",
          "408:       }, buffer",
          "",
          "---------------"
        ],
        "test/phlex/view/process_attributes.rb||test/phlex/view/process_attributes.rb": [
          "File: test/phlex/view/process_attributes.rb -> test/phlex/view/process_attributes.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b311eaf7cb3c91417653cc705518dde42cd7391a",
      "candidate_info": {
        "commit_hash": "b311eaf7cb3c91417653cc705518dde42cd7391a",
        "repo": "phlex-ruby/phlex",
        "commit_url": "https://github.com/phlex-ruby/phlex/commit/b311eaf7cb3c91417653cc705518dde42cd7391a",
        "files": [
          "lib/phlex/sgml.rb"
        ],
        "message": "Prefer `delete` to `tr` when using it to remove characters from a string (#714)\n\nAfter doing some benchmarking, it looks like `delete` is about 19%\nfaster than `tr` when removing characters from a string.\n\n```rb\ntest_string = \"this is the test string\"\n\nBenchmark.ips do |x|\n  x.report(\"tr\") do\n    test_string.tr(\" \", \"\")\n  end\n\n  x.report(\"delete\") do\n    test_string.delete(\" \")\n  end\nend\n```\n```\nCalculating -------------------------------------\n          tr      6.367M (\u00b1 3.4%) i/s -     31.997M in   5.032180s\n      delete      7.567M (\u00b1 6.0%) i/s -     38.022M in   5.053830s\n\nComparison:\n      delete:  7566538.8 i/s\n          tr:  6366671.2 i/s - 1.19x  slower\n```",
        "before_after_code_files": [
          "lib/phlex/sgml.rb||lib/phlex/sgml.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/phlex/sgml.rb||lib/phlex/sgml.rb"
          ],
          "candidate": [
            "lib/phlex/sgml.rb||lib/phlex/sgml.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/phlex/sgml.rb||lib/phlex/sgml.rb": [
          "File: lib/phlex/sgml.rb -> lib/phlex/sgml.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "382:     end",
          "384:     lower_name = name.downcase",
          "387:     # Detect unsafe attribute names. Attribute names are considered unsafe if they match an event attribute or include unsafe characters.",
          "389:      raise ArgumentError, \"Unsafe attribute name detected: #{k}.\"",
          "390:     end",
          "",
          "[Removed Lines]",
          "385:     next if lower_name == \"href\" && v.to_s.downcase.tr(\"^a-z:\", \"\").start_with?(\"javascript:\")",
          "388:     if HTML::EVENT_ATTRIBUTES.include?(lower_name.tr(\"^a-z-\", \"\")) || name.match?(/[<>&\"']/)",
          "",
          "[Added Lines]",
          "385:     next if lower_name == \"href\" && v.to_s.downcase.delete(\"^a-z:\").start_with?(\"javascript:\")",
          "388:     if HTML::EVENT_ATTRIBUTES.include?(lower_name.delete(\"^a-z-\")) || name.match?(/[<>&\"']/)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c8af6a0c0d4833ff0bd5a602bbca234891d4b1d4",
      "candidate_info": {
        "commit_hash": "c8af6a0c0d4833ff0bd5a602bbca234891d4b1d4",
        "repo": "phlex-ruby/phlex",
        "commit_url": "https://github.com/phlex-ruby/phlex/commit/c8af6a0c0d4833ff0bd5a602bbca234891d4b1d4",
        "files": [
          "lib/phlex/sgml.rb"
        ],
        "message": "Add `__nested__attributes__`\n\nSpecial-cases the serialization of nested attributes to avoid\nallocations. This avoids having to build up a new hash on each recursive\ncall, and lets us \"bypass\" a lot of the safety features (such as\ndangerous attribute sanitation) that Phlex includes when serializing\nnested attributes on elements.\n\nThis should redeuce the number of allocations and make the code more\nperformant.",
        "before_after_code_files": [
          "lib/phlex/sgml.rb||lib/phlex/sgml.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/phlex/sgml.rb||lib/phlex/sgml.rb"
          ],
          "candidate": [
            "lib/phlex/sgml.rb||lib/phlex/sgml.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/phlex/sgml.rb||lib/phlex/sgml.rb": [
          "File: lib/phlex/sgml.rb -> lib/phlex/sgml.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "416:      when :style",
          "417:       buffer << \" \" << name << '=\"' << __styles__(v).gsub('\"', \"&quot;\") << '\"'",
          "418:      else",
          "426:       )",
          "427:      end",
          "428:     when Array",
          "",
          "[Removed Lines]",
          "419:       __attributes__(",
          "420:        v.transform_keys { |subkey|",
          "421:         case subkey",
          "422:          when Symbol then\"#{name}-#{subkey.name.tr('_', '-')}\"",
          "423:          else \"#{name}-#{subkey}\"",
          "424:         end",
          "425:        }, buffer",
          "",
          "[Added Lines]",
          "419:       __nested_attributes__(",
          "420:        v,",
          "421:        \"#{name}-\",",
          "422:        buffer,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "454:    buffer",
          "455:   end",
          "457:   # @api private",
          "458:   def __classes__(c)",
          "459:    case c",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "454:   # @api private",
          "455:   #",
          "456:   # Provides the nested-attributes case for serializing out attributes.",
          "457:   # This allows us to skip many of the checks the `__attributes__` method must perform.",
          "458:   def __nested_attributes__(attributes, base_name, buffer = +\"\")",
          "459:    attributes.each do |k, v|",
          "460:     next unless v",
          "462:     name = case k",
          "463:            when String then k",
          "464:            when Symbol then k.name.tr(\"_\", \"-\")",
          "465:            else raise ArgumentError.new(\"Attribute keys should be Strings or Symbols\")",
          "466:     end",
          "468:     case v",
          "469:     when true",
          "470:      buffer << \" \" << base_name << name",
          "471:     when String",
          "472:      buffer << \" \" << base_name << name << '=\"' << v.gsub('\"', \"&quot;\") << '\"'",
          "473:     when Symbol",
          "474:      buffer << \" \" << base_name << name << '=\"' << v.name.gsub('\"', \"&quot;\") << '\"'",
          "475:     when Integer, Float",
          "476:      buffer << \" \" << base_name << name << '=\"' << v.to_s << '\"'",
          "477:     when Hash",
          "478:      __nested_attributes__(v, \"#{base_name}-#{name}-\", buffer)",
          "479:     when Array",
          "480:      buffer << \" \" << base_name << name << '=\"' << v.compact.join(\" \").gsub('\"', \"&quot;\") << '\"'",
          "481:     when Set",
          "482:      buffer << \" \" << base_name << name << '=\"' << v.to_a.compact.join(\" \").gsub('\"', \"&quot;\") << '\"'",
          "483:     else",
          "484:      value = if v.respond_to?(:to_phlex_attribute_value)",
          "485:       v.to_phlex_attribute_value",
          "486:      elsif v.respond_to?(:to_str)",
          "487:       v.to_str",
          "488:      else",
          "489:       v.to_s",
          "490:      end",
          "491:      buffer << \" \" << base_name << name << '=\"' << value.gsub('\"', \"&quot;\") << '\"'",
          "492:     end",
          "494:     buffer",
          "495:    end",
          "496:   end",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7052ee8f7dce3692be1e7cd5658128fabb9b8101",
      "candidate_info": {
        "commit_hash": "7052ee8f7dce3692be1e7cd5658128fabb9b8101",
        "repo": "phlex-ruby/phlex",
        "commit_url": "https://github.com/phlex-ruby/phlex/commit/7052ee8f7dce3692be1e7cd5658128fabb9b8101",
        "files": [
          ".rubocop.yml",
          "Gemfile",
          "browser_tests.rb",
          "fixtures/xss.txt",
          "fixtures/xss/LICENSE.txt",
          "lib/phlex/sgml.rb",
          "lib/phlex/version.rb",
          "phlex.gemspec"
        ],
        "message": "1.10.2",
        "before_after_code_files": [
          "browser_tests.rb||browser_tests.rb",
          "lib/phlex/sgml.rb||lib/phlex/sgml.rb",
          "lib/phlex/version.rb||lib/phlex/version.rb",
          "phlex.gemspec||phlex.gemspec"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/phlex/sgml.rb||lib/phlex/sgml.rb"
          ],
          "candidate": [
            "lib/phlex/sgml.rb||lib/phlex/sgml.rb"
          ]
        }
      },
      "candidate_diff": {
        "browser_tests.rb||browser_tests.rb": [
          "File: browser_tests.rb -> browser_tests.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #!/usr/bin/env ruby",
          "2: # frozen_string_literal: true",
          "4: require \"phlex\"",
          "5: require \"selenium-webdriver\"",
          "7: ASCII_CHARS = (0..127).to_set(&:chr)",
          "9: class Layout < Phlex::HTML",
          "10:  def view_template(&block)",
          "11:   doctype",
          "12:   html do",
          "13:    head do",
          "14:     meta(charset: \"utf-8\")",
          "15:    end",
          "17:    body(&block)",
          "18:   end",
          "19:  end",
          "20: end",
          "22: class JavaScriptLinks < Phlex::HTML",
          "23:  def initialize(char)",
          "24:   @char = char",
          "25:  end",
          "27:  def view_template",
          "28:   render Layout do",
          "29:    # Standard JavaScript link",
          "30:    a(href: \"javascript:alert(1)\") { \"x\" }",
          "32:    # With capitalization",
          "33:    a(href: \"Javascript:alert(1)\") { \"x\" }",
          "35:    # With extra \"javascript:\" prefixes",
          "36:    a(href: \"javascript:javascript:alert(1)\") { \"x\" }",
          "37:    a(href: \"javascript:javascript:javascript:alert(1)\") { \"x\" }",
          "39:    # With extra \"javascript:\" prefixes and capitalization",
          "40:    a(href: \"javascript:Javascript:alert(1)\") { \"x\" }",
          "41:    a(href: \"Javascript:javascript:alert(1)\") { \"x\" }",
          "43:    a(href: \"#{@char}javascript:alert(1)\") { \"x\" }",
          "44:    a(href: \"j#{@char}avascript:alert(1)\") { \"x\" }",
          "45:    a(href: \"ja#{@char}vascript:alert(1)\") { \"x\" }",
          "46:    a(href: \"jav#{@char}ascript:alert(1)\") { \"x\" }",
          "47:    a(href: \"java#{@char}script:alert(1)\") { \"x\" }",
          "48:    a(href: \"javas#{@char}cript:alert(1)\") { \"x\" }",
          "49:    a(href: \"javasc#{@char}ript:alert(1)\") { \"x\" }",
          "50:    a(href: \"javascr#{@char}ipt:alert(1)\") { \"x\" }",
          "51:    a(href: \"javascr#{@char}ipt:alert(1)\") { \"x\" }",
          "52:    a(href: \"javascri#{@char}pt:alert(1)\") { \"x\" }",
          "53:    a(href: \"javascrip#{@char}t:alert(1)\") { \"x\" }",
          "54:    a(href: \"javascript#{@char}:alert(1)\") { \"x\" }",
          "55:    a(href: \"javascript:#{@char}alert(1)\") { \"x\" }",
          "57:    a(href: \"#{@char}#{@char}javascript:alert(1)\") { \"x\" }",
          "58:    a(href: \"j#{@char}#{@char}avascript:alert(1)\") { \"x\" }",
          "59:    a(href: \"ja#{@char}#{@char}vascript:alert(1)\") { \"x\" }",
          "60:    a(href: \"jav#{@char}#{@char}ascript:alert(1)\") { \"x\" }",
          "61:    a(href: \"java#{@char}#{@char}script:alert(1)\") { \"x\" }",
          "62:    a(href: \"javas#{@char}#{@char}cript:alert(1)\") { \"x\" }",
          "63:    a(href: \"javasc#{@char}#{@char}ript:alert(1)\") { \"x\" }",
          "64:    a(href: \"javascr#{@char}#{@char}ipt:alert(1)\") { \"x\" }",
          "65:    a(href: \"javascr#{@char}#{@char}ipt:alert(1)\") { \"x\" }",
          "66:    a(href: \"javascri#{@char}#{@char}pt:alert(1)\") { \"x\" }",
          "67:    a(href: \"javascrip#{@char}#{@char}t:alert(1)\") { \"x\" }",
          "68:    a(href: \"javascript#{@char}#{@char}:alert(1)\") { \"x\" }",
          "69:    a(href: \"javascript:#{@char}#{@char}alert(1)\") { \"x\" }",
          "71:    a(href: \"#{@char}Javascript:alert(1)\") { \"x\" }",
          "72:    a(href: \"J#{@char}avascript:alert(1)\") { \"x\" }",
          "73:    a(href: \"Ja#{@char}vascript:alert(1)\") { \"x\" }",
          "74:    a(href: \"Jav#{@char}ascript:alert(1)\") { \"x\" }",
          "75:    a(href: \"Java#{@char}script:alert(1)\") { \"x\" }",
          "76:    a(href: \"Javas#{@char}cript:alert(1)\") { \"x\" }",
          "77:    a(href: \"Javasc#{@char}ript:alert(1)\") { \"x\" }",
          "78:    a(href: \"Javascr#{@char}ipt:alert(1)\") { \"x\" }",
          "79:    a(href: \"Javascr#{@char}ipt:alert(1)\") { \"x\" }",
          "80:    a(href: \"Javascri#{@char}pt:alert(1)\") { \"x\" }",
          "81:    a(href: \"Javascrip#{@char}t:alert(1)\") { \"x\" }",
          "82:    a(href: \"Javascript#{@char}:alert(1)\") { \"x\" }",
          "83:    a(href: \"Javascript:#{@char}alert(1)\") { \"x\" }",
          "85:    a(href: \"#{@char}#{@char}Javascript:alert(1)\") { \"x\" }",
          "86:    a(href: \"J#{@char}#{@char}avascript:alert(1)\") { \"x\" }",
          "87:    a(href: \"Ja#{@char}#{@char}vascript:alert(1)\") { \"x\" }",
          "88:    a(href: \"Jav#{@char}#{@char}ascript:alert(1)\") { \"x\" }",
          "89:    a(href: \"Java#{@char}#{@char}script:alert(1)\") { \"x\" }",
          "90:    a(href: \"Javas#{@char}#{@char}cript:alert(1)\") { \"x\" }",
          "91:    a(href: \"Javasc#{@char}#{@char}ript:alert(1)\") { \"x\" }",
          "92:    a(href: \"Javascr#{@char}#{@char}ipt:alert(1)\") { \"x\" }",
          "93:    a(href: \"Javascr#{@char}#{@char}ipt:alert(1)\") { \"x\" }",
          "94:    a(href: \"Javascri#{@char}#{@char}pt:alert(1)\") { \"x\" }",
          "95:    a(href: \"Javascrip#{@char}#{@char}t:alert(1)\") { \"x\" }",
          "96:    a(href: \"Javascript#{@char}#{@char}:alert(1)\") { \"x\" }",
          "97:    a(href: \"Javascript:#{@char}#{@char}alert(1)\") { \"x\" }",
          "98:   end",
          "99:  end",
          "100: end",
          "102: class XSSWithStrings < Phlex::HTML",
          "103:  def view_template",
          "104:   render Layout do",
          "105:    File.open(\"fixtures/xss.txt\") do |file|",
          "106:     file.each_line do |line|",
          "107:      div(class: line) { line }",
          "108:     end",
          "109:    end",
          "110:   end",
          "111:  end",
          "112: end",
          "114: class XSSWithSymbols < Phlex::HTML",
          "115:  def view_template",
          "116:   render Layout do",
          "117:    File.open(\"fixtures/xss.txt\") do |file|",
          "118:     file.each_line do |line|",
          "119:      div(class: line.to_sym) { line.to_sym }",
          "120:     end",
          "121:    end",
          "122:   end",
          "123:  end",
          "124: end",
          "126: class OnClick < Phlex::HTML",
          "127:  def initialize(char)",
          "128:   @char = char",
          "129:  end",
          "131:  def view_template",
          "132:   render Layout do",
          "133:    ignore_warnings { div(\"#{@char}onclick\" => \"alert(1)\") { \"x\" } }",
          "134:    ignore_warnings { div(\"o#{@char}nclick\" => \"alert(1)\") { \"x\" } }",
          "135:    ignore_warnings { div(\"on#{@char}click\" => \"alert(1)\") { \"x\" } }",
          "136:    ignore_warnings { div(\"onc#{@char}lick\" => \"alert(1)\") { \"x\" } }",
          "137:    ignore_warnings { div(\"oncl#{@char}ick\" => \"alert(1)\") { \"x\" } }",
          "138:    ignore_warnings { div(\"oncli#{@char}ck\" => \"alert(1)\") { \"x\" } }",
          "139:    ignore_warnings { div(\"onclic#{@char}k\" => \"alert(1)\") { \"x\" } }",
          "140:    ignore_warnings { div(\"onclick#{@char}\" => \"alert(1)\") { \"x\" } }",
          "142:    ignore_warnings { div(\"#{@char}#{@char}onclick\" => \"alert(1)\") { \"x\" } }",
          "143:    ignore_warnings { div(\"o#{@char}#{@char}nclick\" => \"alert(1)\") { \"x\" } }",
          "144:    ignore_warnings { div(\"on#{@char}#{@char}click\" => \"alert(1)\") { \"x\" } }",
          "145:    ignore_warnings { div(\"onc#{@char}#{@char}lick\" => \"alert(1)\") { \"x\" } }",
          "146:    ignore_warnings { div(\"oncl#{@char}#{@char}ick\" => \"alert(1)\") { \"x\" } }",
          "147:    ignore_warnings { div(\"oncli#{@char}#{@char}ck\" => \"alert(1)\") { \"x\" } }",
          "148:    ignore_warnings { div(\"onclic#{@char}#{@char}k\" => \"alert(1)\") { \"x\" } }",
          "149:    ignore_warnings { div(\"onclick#{@char}#{@char}\" => \"alert(1)\") { \"x\" } }",
          "151:    ignore_warnings { div(\"#{@char}onclick\": \"alert(1)\") { \"x\" } }",
          "152:    ignore_warnings { div(\"o#{@char}nclick\": \"alert(1)\") { \"x\" } }",
          "153:    ignore_warnings { div(\"on#{@char}click\": \"alert(1)\") { \"x\" } }",
          "154:    ignore_warnings { div(\"onc#{@char}lick\": \"alert(1)\") { \"x\" } }",
          "155:    ignore_warnings { div(\"oncl#{@char}ick\": \"alert(1)\") { \"x\" } }",
          "156:    ignore_warnings { div(\"oncli#{@char}ck\": \"alert(1)\") { \"x\" } }",
          "157:    ignore_warnings { div(\"onclic#{@char}k\": \"alert(1)\") { \"x\" } }",
          "158:    ignore_warnings { div(\"onclick#{@char}\": \"alert(1)\") { \"x\" } }",
          "160:    ignore_warnings { div(\"#{@char}#{@char}onclick\": \"alert(1)\") { \"x\" } }",
          "161:    ignore_warnings { div(\"o#{@char}#{@char}nclick\": \"alert(1)\") { \"x\" } }",
          "162:    ignore_warnings { div(\"on#{@char}#{@char}click\": \"alert(1)\") { \"x\" } }",
          "163:    ignore_warnings { div(\"onc#{@char}#{@char}lick\": \"alert(1)\") { \"x\" } }",
          "164:    ignore_warnings { div(\"oncl#{@char}#{@char}ick\": \"alert(1)\") { \"x\" } }",
          "165:    ignore_warnings { div(\"oncli#{@char}#{@char}ck\": \"alert(1)\") { \"x\" } }",
          "166:    ignore_warnings { div(\"onclic#{@char}#{@char}k\": \"alert(1)\") { \"x\" } }",
          "167:    ignore_warnings { div(\"onclick#{@char}#{@char}\": \"alert(1)\") { \"x\" } }",
          "168:   end",
          "169:  end",
          "171:  def ignore_warnings",
          "172:   yield",
          "173:  rescue ArgumentError",
          "174:   # ignore",
          "175:  end",
          "176: end",
          "178: class Browser",
          "179:  MUTEX = { safari: Mutex.new, chrome: Mutex.new, firefox: Mutex.new }",
          "181:  def self.open(driver)",
          "182:   MUTEX.fetch(driver).synchronize do",
          "183:    browser = new(Selenium::WebDriver.for(driver))",
          "184:    yield(browser)",
          "185:    browser.quit",
          "186:   end",
          "187:  end",
          "189:  def self.open_each",
          "190:   [:safari, :chrome, :firefox].map do |driver|",
          "191:    Thread.new do",
          "192:     self.open(driver) do |browser|",
          "193:      yield(browser)",
          "194:     end",
          "195:    end",
          "196:   end.each(&:join)",
          "197:  end",
          "199:  def initialize(driver)",
          "200:   @driver = driver",
          "201:  end",
          "203:  attr_reader :driver",
          "205:  def load_string(string)",
          "206:   navigate_to(\"data:text/html,#{ERB::Util.url_encode(string)}\")",
          "207:  end",
          "209:  def navigate_to(url)",
          "210:   @driver.navigate.to(url)",
          "211:  end",
          "213:  def execute_script(script)",
          "214:   @driver.execute_script(script)",
          "215:  end",
          "217:  def each_alert",
          "218:   while (next_alert = alert)",
          "219:    yield(next_alert)",
          "220:   end",
          "221:  end",
          "223:  def alert",
          "224:   @driver.switch_to.alert",
          "225:  rescue Selenium::WebDriver::Error::NoSuchAlertError",
          "226:   nil",
          "227:  end",
          "229:  def quit",
          "230:   @driver.quit",
          "231:  end",
          "232: end",
          "234: Browser.open_each do |browser|",
          "235:  ASCII_CHARS.each do |char|",
          "236:   browser.load_string(JavaScriptLinks.new(char).call)",
          "237:   browser.execute_script(\"document.querySelectorAll('a').forEach(function(a) { a.click(); });\")",
          "238:   browser.each_alert do |alert|",
          "239:    unless alert.text == \"Safari cannot open the page because the address is invalid.\"",
          "240:     raise \"Failed with #{char.codepoints}\"",
          "241:    end",
          "243:    alert.accept",
          "244:   end",
          "246:   browser.load_string(OnClick.new(char).call)",
          "247:   browser.execute_script(\"document.querySelectorAll('div').forEach(function(div) { div.click(); });\")",
          "248:   browser.each_alert do",
          "249:    raise \"Failed with #{char.codepoints}\"",
          "250:   end",
          "251:  end",
          "253:  browser.load_string(XSSWithStrings.new.call)",
          "254:  browser.execute_script(\"document.querySelectorAll('div').forEach(function(div) { div.click(); });\")",
          "256:  if browser.alert",
          "257:   raise \"Failed with strings\"",
          "258:  end",
          "260:  browser.load_string(XSSWithSymbols.new.call)",
          "261:  browser.execute_script(\"document.querySelectorAll('div').forEach(function(div) { div.click(); });\")",
          "263:  if browser.alert",
          "264:   raise \"Failed with symbols\"",
          "265:  end",
          "266: end",
          "",
          "---------------"
        ],
        "lib/phlex/sgml.rb||lib/phlex/sgml.rb": [
          "File: lib/phlex/sgml.rb -> lib/phlex/sgml.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "424:     end",
          "426:     lower_name = name.downcase",
          "429:     # Detect unsafe attribute names. Attribute names are considered unsafe if they match an event attribute or include unsafe characters.",
          "431:      raise ArgumentError, \"Unsafe attribute name detected: #{k}.\"",
          "432:     end",
          "",
          "[Removed Lines]",
          "427:     next if lower_name == \"href\" && v.to_s.downcase.tr(\"\\t \\n\", \"\").start_with?(\"javascript:\")",
          "430:     if HTML::EVENT_ATTRIBUTES[lower_name] || name.match?(/[<>&\"']/)",
          "",
          "[Added Lines]",
          "427:     next if lower_name == \"href\" && v.to_s.downcase.tr(\"^a-z:\", \"\").start_with?(\"javascript:\")",
          "430:     if HTML::EVENT_ATTRIBUTES.include?(lower_name.tr(\"^a-z-\", \"\")) || name.match?(/[<>&\"']/)",
          "",
          "---------------"
        ],
        "lib/phlex/version.rb||lib/phlex/version.rb": [
          "File: lib/phlex/version.rb -> lib/phlex/version.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # frozen_string_literal: true",
          "3: module Phlex",
          "5: end",
          "",
          "[Removed Lines]",
          "4:  VERSION = \"1.10.1\"",
          "",
          "[Added Lines]",
          "4:  VERSION = \"1.10.2\"",
          "",
          "---------------"
        ],
        "phlex.gemspec||phlex.gemspec": [
          "File: phlex.gemspec -> phlex.gemspec",
          "--- Hunk 1 ---",
          "[Context before]",
          "19:  spec.metadata[\"changelog_uri\"] = \"https://github.com/phlex-ruby/phlex/blob/main/CHANGELOG.md\"",
          "20:  spec.metadata[\"funding_uri\"] = \"https://github.com/sponsors/joeldrapper\"",
          "29:  spec.require_paths = [\"lib\"]",
          "31:  spec.metadata[\"rubygems_mfa_required\"] = \"true\"",
          "",
          "[Removed Lines]",
          "22:  # Specify which files should be added to the gem when it is released.",
          "23:  # The `git ls-files -z` loads the files in the RubyGem that have been added into git.",
          "24:  spec.files = Dir.chdir(File.expand_path(__dir__)) do",
          "25:   `git ls-files -z`.split(\"\\x0\").reject do |f|",
          "26:    (f == __FILE__) || f.match(%r{\\A(?:(?:bin|test|spec|features)/|\\.(?:git|travis|circleci)|appveyor)})",
          "27:   end",
          "28:  end",
          "",
          "[Added Lines]",
          "22:  spec.files = Dir[",
          "23:   \"README.md\",",
          "24:   \"LICENSE.txt\",",
          "25:   \"lib/**/*.rb\"",
          "26:  ]",
          "",
          "---------------"
        ]
      }
    }
  ]
}