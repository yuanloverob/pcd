{
  "cve_id": "CVE-2024-28850",
  "cve_desc": "WP Crontrol controls the cron events on WordPress websites.  WP Crontrol includes a feature that allows administrative users to create events in the WP-Cron system that store and execute PHP code subject to the restrictive security permissions documented here. While there is no known vulnerability in this feature on its own, there exists potential for this feature to be vulnerable to RCE if it were specifically targeted via vulnerability chaining that exploited a separate SQLi (or similar) vulnerability. This is exploitable on a site if one of the below preconditions are met, the site is vulnerable to a writeable SQLi vulnerability in any plugin, theme, or WordPress core, the site's database is compromised at the hosting level, the site is vulnerable to a method of updating arbitrary options in the wp_options table, or the site is vulnerable to a method of triggering an arbitrary action, filter, or function with control of the parameters.  As a hardening measure, WP Crontrol version 1.16.2 ships with a new feature that prevents tampering of the code stored in a PHP cron event.",
  "repo": "johnbillion/wp-crontrol",
  "patch_hash": "6d1fadcf6dfdd54e55feef27f916b0cfcd602405",
  "patch_info": {
    "commit_hash": "6d1fadcf6dfdd54e55feef27f916b0cfcd602405",
    "repo": "johnbillion/wp-crontrol",
    "commit_url": "https://github.com/johnbillion/wp-crontrol/commit/6d1fadcf6dfdd54e55feef27f916b0cfcd602405",
    "files": [
      "src/bootstrap.php",
      "src/event.php"
    ],
    "message": "Begin implementing an integrity checking feature for code stored in PHP cron events.",
    "before_after_code_files": [
      "src/bootstrap.php||src/bootstrap.php",
      "src/event.php||src/event.php"
    ]
  },
  "patch_diff": {
    "src/bootstrap.php||src/bootstrap.php": [
      "File: src/bootstrap.php -> src/bootstrap.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "9: use stdClass;",
      "10: use WP_Error;",
      "12: const TRANSIENT = 'crontrol-message-%d';",
      "13: const PAUSED_OPTION = 'wp_crontrol_paused';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "12: use function Crontrol\\Event\\check_integrity;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "32:  add_action( 'load-tools_page_crontrol_admin_manage_page', __NAMESPACE__ . '\\setup_manage_page' );",
      "34:  add_filter( 'cron_schedules',        __NAMESPACE__ . '\\filter_cron_schedules' );",
      "36:  add_action( 'admin_enqueue_scripts', __NAMESPACE__ . '\\enqueue_assets' );",
      "37:  add_action( 'crontrol/tab-header',   __NAMESPACE__ . '\\show_cron_status', 20 );",
      "38:  add_action( 'activated_plugin',      __NAMESPACE__ . '\\flush_status_cache', 10, 0 );",
      "",
      "[Removed Lines]",
      "35:  add_action( 'crontrol_cron_job',     __NAMESPACE__ . '\\action_php_cron_event' );",
      "",
      "[Added Lines]",
      "37:  add_action( 'crontrol_cron_job',     __NAMESPACE__ . '\\action_php_cron_event', 10, 3 );",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "198:   $args           = array(",
      "199:    'code' => $cr->hookcode,",
      "200:    'name' => $cr->eventname,",
      "201:   );",
      "203:   add_filter( 'schedule_event', function( $event ) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "203:    'hash' => wp_hash( $cr->hookcode ),",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "343:   $args = array(",
      "344:    'code' => $cr->hookcode,",
      "345:    'name' => $cr->eventname,",
      "346:   );",
      "347:   $hookname = ( ! empty( $cr->eventname ) ) ? $cr->eventname : __( 'PHP Cron', 'wp-crontrol' );",
      "348:   $redirect = array(",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "349:    'hash' => wp_hash( $cr->hookcode ),",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2200:  eval( $code );",
      "2201: }",
      "",
      "[Removed Lines]",
      "2198: function action_php_cron_event( $code ) {",
      "",
      "[Added Lines]",
      "2212: function action_php_cron_event( $code, $name, $stored_hash = null ) {",
      "2213:  if ( empty( $stored_hash ) ) {",
      "2215:   return;",
      "2216:  }",
      "2219:  if ( ! check_integrity( $code, $stored_hash ) ) {",
      "2221:   return;",
      "2222:  }",
      "",
      "---------------"
    ],
    "src/event.php||src/event.php": [
      "File: src/event.php -> src/event.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "479:  return array_key_exists( $event->hook, $paused );",
      "480: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "488: function integrity_passed( stdClass $event ): bool {",
      "490:  if ( 'crontrol_cron_job' !== $event->hook ) {",
      "491:   return true;",
      "492:  }",
      "494:  return check_integrity( $event->args['code'] ?? null, $event->args['hash'] ?? null );",
      "495: }",
      "504: function check_integrity( $code, $stored_hash ): bool {",
      "506:  if ( empty( $code ) ) {",
      "507:   return true;",
      "508:  }",
      "511:  if ( empty( $stored_hash ) ) {",
      "512:   return false;",
      "513:  }",
      "515:  $known_hash = wp_hash( $code );",
      "518:  if ( hash_equals( $known_hash, $stored_hash ) ) {",
      "519:   return true;",
      "520:  }",
      "522:  return false;",
      "523: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "55de152f16d616c30061b850c143773225176514",
      "candidate_info": {
        "commit_hash": "55de152f16d616c30061b850c143773225176514",
        "repo": "johnbillion/wp-crontrol",
        "commit_url": "https://github.com/johnbillion/wp-crontrol/commit/55de152f16d616c30061b850c143773225176514",
        "files": [
          "src/bootstrap.php"
        ],
        "message": "Tweaks.",
        "before_after_code_files": [
          "src/bootstrap.php||src/bootstrap.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/bootstrap.php||src/bootstrap.php"
          ],
          "candidate": [
            "src/bootstrap.php||src/bootstrap.php"
          ]
        }
      },
      "candidate_diff": {
        "src/bootstrap.php||src/bootstrap.php": [
          "File: src/bootstrap.php -> src/bootstrap.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1374:    <?php",
          "1375:   } else {",
          "1376:    ?>",
          "1378:     <?php",
          "1379:     printf(",
          "1380:      '<p>%1$s</p><p><a href=\"%2$s\">%3$s</a></p>',",
          "",
          "[Removed Lines]",
          "1377:    <div id=\"crontrol-status-error\" class=\"error\">",
          "",
          "[Added Lines]",
          "1377:    <div id=\"crontrol-status-error\" class=\"notice notice-error\">",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2540:  if ( is_string( $args ) ) {",
          "",
          "[Removed Lines]",
          "2539: function action_php_cron_event( $args ) {",
          "",
          "[Added Lines]",
          "2538: function action_php_cron_event( $args ): void {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2555:   trigger_error(",
          "2556:    sprintf(",
          "2558:     esc_url_raw( admin_url( 'tools.php?page=crontrol_admin_manage_page&crontrol_hooks_type=php' ) ),",
          "2559:    ),",
          "2560:    E_USER_WARNING",
          "",
          "[Removed Lines]",
          "2557:     'The stored hash is missing for a PHP cron event; for more information see %s',",
          "",
          "[Added Lines]",
          "2556:     'WP Crontrol: The stored hash is missing for a PHP cron event; for more information see %s',",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2568:   trigger_error(",
          "2569:    sprintf(",
          "2571:     esc_url_raw( admin_url( 'tools.php?page=crontrol_admin_manage_page&crontrol_hooks_type=php' ) ),",
          "2572:    ),",
          "2573:    E_USER_WARNING",
          "",
          "[Removed Lines]",
          "2570:     'The stored hash for a PHP cron event is not valid; for more information see %s',",
          "",
          "[Added Lines]",
          "2569:     'WP Crontrol: The stored hash for a PHP cron event is not valid; for more information see %s',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8071d338dacd6e741cc78c9957230415749fd345",
      "candidate_info": {
        "commit_hash": "8071d338dacd6e741cc78c9957230415749fd345",
        "repo": "johnbillion/wp-crontrol",
        "commit_url": "https://github.com/johnbillion/wp-crontrol/commit/8071d338dacd6e741cc78c9957230415749fd345",
        "files": [
          "src/bootstrap.php"
        ],
        "message": "Tweak this message text.",
        "before_after_code_files": [
          "src/bootstrap.php||src/bootstrap.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/bootstrap.php||src/bootstrap.php"
          ],
          "candidate": [
            "src/bootstrap.php||src/bootstrap.php"
          ]
        }
      },
      "candidate_diff": {
        "src/bootstrap.php||src/bootstrap.php": [
          "File: src/bootstrap.php -> src/bootstrap.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "2303:   trigger_error(",
          "2304:    sprintf(",
          "2306:     esc_url_raw( admin_url( 'tools.php?page=crontrol_admin_manage_page&crontrol_hooks_type=php' ) ),",
          "2307:    ),",
          "2308:    E_USER_WARNING",
          "",
          "[Removed Lines]",
          "2305:     'The stored hash is missing for a PHP cron event. For more information see %s.',",
          "",
          "[Added Lines]",
          "2305:     'The stored hash is missing for a PHP cron event; for more information see %s',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2316:   trigger_error(",
          "2317:    sprintf(",
          "2319:     esc_url_raw( admin_url( 'tools.php?page=crontrol_admin_manage_page&crontrol_hooks_type=php' ) ),",
          "2320:    ),",
          "2321:    E_USER_WARNING",
          "",
          "[Removed Lines]",
          "2318:     'The stored hash for a PHP cron event is not valid. For more information see %s.',",
          "",
          "[Added Lines]",
          "2318:     'The stored hash for a PHP cron event is not valid; for more information see %s',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a2725ad2a376e39ba9be21cfb7c367ec388d8115",
      "candidate_info": {
        "commit_hash": "a2725ad2a376e39ba9be21cfb7c367ec388d8115",
        "repo": "johnbillion/wp-crontrol",
        "commit_url": "https://github.com/johnbillion/wp-crontrol/commit/a2725ad2a376e39ba9be21cfb7c367ec388d8115",
        "files": [
          "src/event.php"
        ],
        "message": "More terminology adjustments.",
        "before_after_code_files": [
          "src/event.php||src/event.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/event.php||src/event.php"
          ],
          "candidate": [
            "src/event.php||src/event.php"
          ]
        }
      },
      "candidate_diff": {
        "src/event.php||src/event.php": [
          "File: src/event.php -> src/event.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "511:   return false;",
          "512:  }",
          "518: }",
          "",
          "[Removed Lines]",
          "514:  $potentially_tampered_hash = wp_hash( $code );",
          "517:  return hash_equals( $stored_hash, $potentially_tampered_hash );",
          "",
          "[Added Lines]",
          "514:  $code_hash = wp_hash( $code );",
          "517:  return hash_equals( $stored_hash, $code_hash );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3aaeaf0c727ffbd5d6b5758ae79e0df5af04cc0b",
      "candidate_info": {
        "commit_hash": "3aaeaf0c727ffbd5d6b5758ae79e0df5af04cc0b",
        "repo": "johnbillion/wp-crontrol",
        "commit_url": "https://github.com/johnbillion/wp-crontrol/commit/3aaeaf0c727ffbd5d6b5758ae79e0df5af04cc0b",
        "files": [
          "src/bootstrap.php",
          "src/event-list-table.php",
          "src/schedule-list-table.php",
          "tests/_support/AcceptanceTester.php"
        ],
        "message": "Make the admin page slugs a little nicer.",
        "before_after_code_files": [
          "src/bootstrap.php||src/bootstrap.php",
          "src/event-list-table.php||src/event-list-table.php",
          "src/schedule-list-table.php||src/schedule-list-table.php",
          "tests/_support/AcceptanceTester.php||tests/_support/AcceptanceTester.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/bootstrap.php||src/bootstrap.php"
          ],
          "candidate": [
            "src/bootstrap.php||src/bootstrap.php"
          ]
        }
      },
      "candidate_diff": {
        "src/bootstrap.php||src/bootstrap.php": [
          "File: src/bootstrap.php -> src/bootstrap.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:  add_filter( 'pre_unschedule_event',               __NAMESPACE__ . '\\maybe_clear_doing_cron' );",
          "33:  add_filter( 'plugin_row_meta',                    __NAMESPACE__ . '\\filter_plugin_row_meta', 10, 2 );",
          "37:  add_filter( 'cron_schedules',        __NAMESPACE__ . '\\filter_cron_schedules' );",
          "38:  add_action( 'crontrol_cron_job',     __NAMESPACE__ . '\\action_php_cron_event' );",
          "",
          "[Removed Lines]",
          "35:  add_action( 'load-tools_page_crontrol_admin_manage_page', __NAMESPACE__ . '\\setup_manage_page' );",
          "",
          "[Added Lines]",
          "35:  add_action( 'load-tools_page_wp-crontrol', __NAMESPACE__ . '\\setup_manage_page' );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "177:   $added = Event\\add( $next_run_local, $cr->schedule, $cr->hookname, $args );",
          "179:   $redirect = array(",
          "181:    'crontrol_message' => '4',",
          "182:    'crontrol_name'    => rawurlencode( $cr->hookname ),",
          "183:   );",
          "",
          "[Removed Lines]",
          "180:    'page'             => 'crontrol_admin_manage_page',",
          "",
          "[Added Lines]",
          "180:    'page'             => 'wp-crontrol',",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "236:   $hookname = ( ! empty( $cr->eventname ) ) ? $cr->eventname : __( 'URL Cron', 'wp-crontrol' );",
          "237:   $redirect = array(",
          "239:    'crontrol_message' => '13',",
          "240:    'crontrol_name'    => rawurlencode( $hookname ),",
          "241:   );",
          "",
          "[Removed Lines]",
          "238:    'page'             => 'crontrol_admin_manage_page',",
          "",
          "[Added Lines]",
          "238:    'page'             => 'wp-crontrol',",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "294:   $hookname = ( ! empty( $cr->eventname ) ) ? $cr->eventname : __( 'PHP Cron', 'wp-crontrol' );",
          "295:   $redirect = array(",
          "297:    'crontrol_message' => '14',",
          "298:    'crontrol_name'    => rawurlencode( $hookname ),",
          "299:   );",
          "",
          "[Removed Lines]",
          "296:    'page'             => 'crontrol_admin_manage_page',",
          "",
          "[Added Lines]",
          "296:    'page'             => 'wp-crontrol',",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "326:   }",
          "328:   $redirect = array(",
          "330:    'crontrol_message' => '4',",
          "331:    'crontrol_name'    => rawurlencode( $cr->hookname ),",
          "332:   );",
          "",
          "[Removed Lines]",
          "329:    'page'             => 'crontrol_admin_manage_page',",
          "",
          "[Added Lines]",
          "329:    'page'             => 'wp-crontrol',",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "417:   );",
          "418:   $hookname = ( ! empty( $cr->eventname ) ) ? $cr->eventname : __( 'URL Cron', 'wp-crontrol' );",
          "419:   $redirect = array(",
          "421:    'crontrol_message' => '13',",
          "422:    'crontrol_name'    => rawurlencode( $hookname ),",
          "423:   );",
          "",
          "[Removed Lines]",
          "420:    'page'             => 'crontrol_admin_manage_page',",
          "",
          "[Added Lines]",
          "420:    'page'             => 'wp-crontrol',",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "507:   );",
          "508:   $hookname = ( ! empty( $cr->eventname ) ) ? $cr->eventname : __( 'PHP Cron', 'wp-crontrol' );",
          "509:   $redirect = array(",
          "511:    'crontrol_message' => '14',",
          "512:    'crontrol_name'    => rawurlencode( $hookname ),",
          "513:   );",
          "",
          "[Removed Lines]",
          "510:    'page'             => 'crontrol_admin_manage_page',",
          "",
          "[Added Lines]",
          "510:    'page'             => 'wp-crontrol',",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "591:   Schedule\\add( $name, $interval, $display );",
          "592:   $redirect = array(",
          "594:    'crontrol_message' => '3',",
          "595:    'crontrol_name'    => rawurlencode( $name ),",
          "596:   );",
          "",
          "[Removed Lines]",
          "593:    'page'             => 'crontrol_admin_options_page',",
          "",
          "[Added Lines]",
          "593:    'page'             => 'wp-crontrol-schedules',",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "605:   check_admin_referer( \"crontrol-delete-schedule_{$schedule}\" );",
          "606:   Schedule\\delete( $schedule );",
          "607:   $redirect = array(",
          "609:    'crontrol_message' => '2',",
          "610:    'crontrol_name'    => rawurlencode( $schedule ),",
          "611:   );",
          "",
          "[Removed Lines]",
          "608:    'page'             => 'crontrol_admin_options_page',",
          "",
          "[Added Lines]",
          "608:    'page'             => 'wp-crontrol-schedules',",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "647:   }",
          "649:   $redirect = array(",
          "651:    'crontrol_name'    => $deleted,",
          "652:    'crontrol_message' => '9',",
          "653:   );",
          "",
          "[Removed Lines]",
          "650:    'page'             => 'crontrol_admin_manage_page',",
          "",
          "[Added Lines]",
          "650:    'page'             => 'wp-crontrol',",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "668:   }",
          "670:   $redirect = array(",
          "672:    'crontrol_message' => '6',",
          "673:    'crontrol_name'    => rawurlencode( $hook ),",
          "674:   );",
          "",
          "[Removed Lines]",
          "671:    'page'             => 'crontrol_admin_manage_page',",
          "",
          "[Added Lines]",
          "671:    'page'             => 'wp-crontrol',",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "724:   if ( 0 === $deleted ) {",
          "725:    $redirect = array(",
          "727:     'crontrol_message' => '3',",
          "728:     'crontrol_name'    => rawurlencode( $hook ),",
          "729:    );",
          "",
          "[Removed Lines]",
          "726:     'page'             => 'crontrol_admin_manage_page',",
          "",
          "[Added Lines]",
          "726:     'page'             => 'wp-crontrol',",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "739:    do_action( 'crontrol/deleted_all_with_hook', $hook, $deleted );",
          "741:    $redirect = array(",
          "743:     'crontrol_message' => '2',",
          "744:     'crontrol_name'    => rawurlencode( $hook ),",
          "745:    );",
          "",
          "[Removed Lines]",
          "742:     'page'             => 'crontrol_admin_manage_page',",
          "",
          "[Added Lines]",
          "742:     'page'             => 'wp-crontrol',",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "747:    exit;",
          "748:   } else {",
          "749:    $redirect = array(",
          "751:     'crontrol_message' => '7',",
          "752:     'crontrol_name'    => rawurlencode( $hook ),",
          "753:    );",
          "",
          "[Removed Lines]",
          "750:     'page'             => 'crontrol_admin_manage_page',",
          "",
          "[Added Lines]",
          "750:     'page'             => 'wp-crontrol',",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "765:   $ran = Event\\run( $hook, $sig );",
          "767:   $redirect = array(",
          "769:    'crontrol_message' => '1',",
          "770:    'crontrol_name'    => rawurlencode( $hook ),",
          "771:   );",
          "",
          "[Removed Lines]",
          "768:    'page'             => 'crontrol_admin_manage_page',",
          "",
          "[Added Lines]",
          "768:    'page'             => 'wp-crontrol',",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "805:   $paused = Event\\pause( $hook );",
          "807:   $redirect = array(",
          "809:    'crontrol_message' => '11',",
          "810:    'crontrol_name'    => rawurlencode( $hook ),",
          "811:   );",
          "",
          "[Removed Lines]",
          "808:    'page'             => 'crontrol_admin_manage_page',",
          "",
          "[Added Lines]",
          "808:    'page'             => 'wp-crontrol',",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "852:   $resumed = Event\\resume( $hook );",
          "854:   $redirect = array(",
          "856:    'crontrol_message' => '12',",
          "857:    'crontrol_name'    => rawurlencode( $hook ),",
          "858:   );",
          "",
          "[Removed Lines]",
          "855:    'page'             => 'crontrol_admin_manage_page',",
          "",
          "[Added Lines]",
          "855:    'page'             => 'wp-crontrol',",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "985:   esc_html__( 'Cron Schedules', 'wp-crontrol' ),",
          "986:   esc_html__( 'Cron Schedules', 'wp-crontrol' ),",
          "987:   'manage_options',",
          "989:   __NAMESPACE__ . '\\admin_options_page'",
          "990:  );",
          "991:  $events = add_management_page(",
          "992:   esc_html__( 'Cron Events', 'wp-crontrol' ),",
          "993:   esc_html__( 'Cron Events', 'wp-crontrol' ),",
          "994:   'manage_options',",
          "996:   __NAMESPACE__ . '\\admin_manage_page'",
          "997:  );",
          "",
          "[Removed Lines]",
          "988:   'crontrol_admin_options_page',",
          "995:   'crontrol_admin_manage_page',",
          "",
          "[Added Lines]",
          "988:   'wp-crontrol-schedules',",
          "995:   'wp-crontrol',",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1080:  $new = array(",
          "1081:   'crontrol-events'    => sprintf(",
          "1082:    '<a href=\"%s\">%s</a>',",
          "1084:    esc_html__( 'Events', 'wp-crontrol' )",
          "1085:   ),",
          "1086:   'crontrol-schedules' => sprintf(",
          "1087:    '<a href=\"%s\">%s</a>',",
          "1089:    esc_html__( 'Schedules', 'wp-crontrol' )",
          "1090:   ),",
          "1091:   'crontrol-help' => sprintf(",
          "",
          "[Removed Lines]",
          "1083:    esc_url( admin_url( 'tools.php?page=crontrol_admin_manage_page' ) ),",
          "1088:    esc_url( admin_url( 'options-general.php?page=crontrol_admin_options_page' ) ),",
          "",
          "[Added Lines]",
          "1083:    esc_url( admin_url( 'tools.php?page=wp-crontrol' ) ),",
          "1088:    esc_url( admin_url( 'options-general.php?page=wp-crontrol-schedules' ) ),",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1185:     <div class=\"form-wrap\">",
          "1186:      <h2><?php esc_html_e( 'Add Cron Schedule', 'wp-crontrol' ); ?></h2>",
          "1187:      <p><?php esc_html_e( 'Adding a new schedule allows you to schedule recurring events at the given interval.', 'wp-crontrol' ); ?></p>",
          "1189:       <div class=\"form-field form-required\">",
          "1190:        <label for=\"crontrol_schedule_internal_name\">",
          "1191:         <?php esc_html_e( 'Internal Name', 'wp-crontrol' ); ?>",
          "",
          "[Removed Lines]",
          "1188:      <form method=\"post\" action=\"options-general.php?page=crontrol_admin_options_page\">",
          "",
          "[Added Lines]",
          "1188:      <form method=\"post\" action=\"options-general.php?page=wp-crontrol-schedules\">",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1574:     $cron_type = 'standard';",
          "1575:    }",
          "1576:    ?>",
          "1578:    <?php",
          "1580:     echo $other_fields;",
          "",
          "[Removed Lines]",
          "1577:   <form method=\"post\" action=\"<?php echo esc_url( admin_url( 'tools.php?page=crontrol_admin_manage_page' ) ); ?>\" class=\"crontrol-edit-event crontrol-edit-event-<?php echo esc_attr( $cron_type ); ?>\">",
          "",
          "[Added Lines]",
          "1577:   <form method=\"post\" action=\"<?php echo esc_url( admin_url( 'tools.php?page=wp-crontrol' ) ); ?>\" class=\"crontrol-edit-event crontrol-edit-event-<?php echo esc_attr( $cron_type ); ?>\">",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1983:     <h1 class=\"wp-heading-inline\"><?php esc_html_e( 'Cron Events', 'wp-crontrol' ); ?></h1>",
          "1987:     <hr class=\"wp-header-end\">",
          "1989:     <?php $table->views(); ?>",
          "1991:     <form id=\"posts-filter\" method=\"get\" action=\"tools.php\">",
          "1993:      <?php $table->search_box( esc_html__( 'Search Hook Names', 'wp-crontrol' ), 'cron-event' ); ?>",
          "1994:     </form>",
          "1997:      <div class=\"table-responsive\">",
          "1998:       <?php $table->display(); ?>",
          "1999:      </div>",
          "",
          "[Removed Lines]",
          "1985:     <?php echo '<a href=\"' . esc_url( admin_url( 'tools.php?page=crontrol_admin_manage_page&crontrol_action=new-cron' ) ) . '\" class=\"page-title-action\">' . esc_html__( 'Add New Cron Event', 'wp-crontrol' ) . '</a>'; ?>",
          "1992:      <input type=\"hidden\" name=\"page\" value=\"crontrol_admin_manage_page\" />",
          "1996:     <form method=\"post\" action=\"tools.php?page=crontrol_admin_manage_page\">",
          "",
          "[Added Lines]",
          "1985:     <?php echo '<a href=\"' . esc_url( admin_url( 'tools.php?page=wp-crontrol&crontrol_action=new-cron' ) ) . '\" class=\"page-title-action\">' . esc_html__( 'Add New Cron Event', 'wp-crontrol' ) . '</a>'; ?>",
          "1992:      <input type=\"hidden\" name=\"page\" value=\"wp-crontrol\" />",
          "1996:     <form method=\"post\" action=\"tools.php?page=wp-crontrol\">",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "2034: function get_tab_states() {",
          "2035:  $tabs = array(",
          "2038:   'add-event'  => ( ! empty( $_GET['crontrol_action'] ) && 'new-cron' === $_GET['crontrol_action'] ),",
          "2039:   'edit-event' => ( ! empty( $_GET['crontrol_action'] ) && 'edit-cron' === $_GET['crontrol_action'] ),",
          "2040:  );",
          "",
          "[Removed Lines]",
          "2036:   'events'     => ( ! empty( $_GET['page'] ) && 'crontrol_admin_manage_page' === $_GET['page'] && empty( $_GET['crontrol_action'] ) ),",
          "2037:   'schedules'  => ( ! empty( $_GET['page'] ) && 'crontrol_admin_options_page' === $_GET['page'] ),",
          "",
          "[Added Lines]",
          "2036:   'events'     => ( ! empty( $_GET['page'] ) && 'wp-crontrol' === $_GET['page'] && empty( $_GET['crontrol_action'] ) ),",
          "2037:   'schedules'  => ( ! empty( $_GET['page'] ) && 'wp-crontrol-schedules' === $_GET['page'] ),",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "2061:  $tab   = reset( $tab );",
          "2062:  $links = array(",
          "2063:   'events'    => array(",
          "2065:    __( 'Cron Events', 'wp-crontrol' ),",
          "2066:   ),",
          "2067:   'schedules' => array(",
          "2069:    __( 'Cron Schedules', 'wp-crontrol' ),",
          "2070:   ),",
          "2071:  );",
          "",
          "[Removed Lines]",
          "2064:    'tools.php?page=crontrol_admin_manage_page',",
          "2068:    'options-general.php?page=crontrol_admin_options_page',",
          "",
          "[Added Lines]",
          "2064:    'tools.php?page=wp-crontrol',",
          "2068:    'options-general.php?page=wp-crontrol-schedules',",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "2515:   trigger_error(",
          "2516:    sprintf(",
          "2517:     'WP Crontrol: The stored hash is missing for a URL cron event; for more information see %s',",
          "2519:    ),",
          "2520:    E_USER_WARNING",
          "2521:   );",
          "",
          "[Removed Lines]",
          "2518:     esc_url_raw( admin_url( 'tools.php?page=crontrol_admin_manage_page&crontrol_hooks_type=url' ) ),",
          "",
          "[Added Lines]",
          "2518:     esc_url_raw( admin_url( 'tools.php?page=wp-crontrol&crontrol_hooks_type=url' ) ),",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "2528:   trigger_error(",
          "2529:    sprintf(",
          "2530:     'WP Crontrol: The stored hash for a URL cron event is not valid; for more information see %s',",
          "2532:    ),",
          "2533:    E_USER_WARNING",
          "2534:   );",
          "",
          "[Removed Lines]",
          "2531:     esc_url_raw( admin_url( 'tools.php?page=crontrol_admin_manage_page&crontrol_hooks_type=url' ) ),",
          "",
          "[Added Lines]",
          "2531:     esc_url_raw( admin_url( 'tools.php?page=wp-crontrol&crontrol_hooks_type=url' ) ),",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "2617:   trigger_error(",
          "2618:    sprintf(",
          "2619:     'WP Crontrol: The stored hash is missing for a PHP cron event; for more information see %s',",
          "2621:    ),",
          "2622:    E_USER_WARNING",
          "2623:   );",
          "",
          "[Removed Lines]",
          "2620:     esc_url_raw( admin_url( 'tools.php?page=crontrol_admin_manage_page&crontrol_hooks_type=php' ) ),",
          "",
          "[Added Lines]",
          "2620:     esc_url_raw( admin_url( 'tools.php?page=wp-crontrol&crontrol_hooks_type=php' ) ),",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "2630:   trigger_error(",
          "2631:    sprintf(",
          "2632:     'WP Crontrol: The stored hash for a PHP cron event is not valid; for more information see %s',",
          "2634:    ),",
          "2635:    E_USER_WARNING",
          "2636:   );",
          "",
          "[Removed Lines]",
          "2633:     esc_url_raw( admin_url( 'tools.php?page=crontrol_admin_manage_page&crontrol_hooks_type=php' ) ),",
          "",
          "[Added Lines]",
          "2633:     esc_url_raw( admin_url( 'tools.php?page=wp-crontrol&crontrol_hooks_type=php' ) ),",
          "",
          "---------------"
        ],
        "src/event-list-table.php||src/event-list-table.php": [
          "File: src/event-list-table.php -> src/event-list-table.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "270:   $types = apply_filters( 'crontrol/filter-types', $types, $hooks_type );",
          "",
          "[Removed Lines]",
          "272:   $url = admin_url( 'tools.php?page=crontrol_admin_manage_page' );",
          "",
          "[Added Lines]",
          "272:   $url = admin_url( 'tools.php?page=wp-crontrol' );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "393:   if ( ( 'crontrol_cron_job' !== $event->hook ) || self::$can_manage_php_crons ) {",
          "394:    $link = array(",
          "396:     'crontrol_action'       => 'edit-cron',",
          "397:     'crontrol_id'           => rawurlencode( $event->hook ),",
          "398:     'crontrol_sig'          => rawurlencode( $event->sig ),",
          "",
          "[Removed Lines]",
          "395:     'page'                  => 'crontrol_admin_manage_page',",
          "",
          "[Added Lines]",
          "395:     'page'                  => 'wp-crontrol',",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "416:   if ( ! is_paused( $event ) && ! integrity_failed( $event ) ) {",
          "417:    $link = array(",
          "419:     'crontrol_action'       => 'run-cron',",
          "420:     'crontrol_id'           => rawurlencode( $event->hook ),",
          "421:     'crontrol_sig'          => rawurlencode( $event->sig ),",
          "",
          "[Removed Lines]",
          "418:     'page'                  => 'crontrol_admin_manage_page',",
          "",
          "[Added Lines]",
          "418:     'page'                  => 'wp-crontrol',",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "430:   if ( is_paused( $event ) ) {",
          "431:    $link = array(",
          "433:     'crontrol_action' => 'resume-hook',",
          "434:     'crontrol_id'     => rawurlencode( $event->hook ),",
          "435:    );",
          "",
          "[Removed Lines]",
          "432:     'page'            => 'crontrol_admin_manage_page',",
          "",
          "[Added Lines]",
          "432:     'page'            => 'wp-crontrol',",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "440:    $links[] = \"<a href='\" . esc_url( $link ) . \"'>\" . esc_html__( 'Resume this hook', 'wp-crontrol' ) . '</a>';",
          "441:   } elseif ( 'crontrol_cron_job' !== $event->hook && 'crontrol_url_cron_job' !== $event->hook ) {",
          "442:    $link = array(",
          "444:     'crontrol_action' => 'pause-hook',",
          "445:     'crontrol_id'     => rawurlencode( $event->hook ),",
          "446:    );",
          "",
          "[Removed Lines]",
          "443:     'page'            => 'crontrol_admin_manage_page',",
          "",
          "[Added Lines]",
          "443:     'page'            => 'wp-crontrol',",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "454:   if ( ! in_array( $event->hook, self::$persistent_core_hooks, true ) && ( ( 'crontrol_cron_job' !== $event->hook ) || self::$can_manage_php_crons ) ) {",
          "455:    $link = array(",
          "457:     'crontrol_action'       => 'delete-cron',",
          "458:     'crontrol_id'           => rawurlencode( $event->hook ),",
          "459:     'crontrol_sig'          => rawurlencode( $event->sig ),",
          "",
          "[Removed Lines]",
          "456:     'page'                  => 'crontrol_admin_manage_page',",
          "",
          "[Added Lines]",
          "456:     'page'                  => 'wp-crontrol',",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "468:   if ( 'crontrol_cron_job' !== $event->hook && 'crontrol_url_cron_job' !== $event->hook ) {",
          "469:    if ( self::$count_by_hook[ $event->hook ] > 1 ) {",
          "470:     $link = array(",
          "472:      'crontrol_action' => 'delete-hook',",
          "473:      'crontrol_id'     => rawurlencode( $event->hook ),",
          "474:     );",
          "",
          "[Removed Lines]",
          "471:      'page'            => 'crontrol_admin_manage_page',",
          "",
          "[Added Lines]",
          "471:      'page'            => 'wp-crontrol',",
          "",
          "---------------"
        ],
        "src/schedule-list-table.php||src/schedule-list-table.php": [
          "File: src/schedule-list-table.php -> src/schedule-list-table.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "122:    $links[] = \"<span class='crontrol-in-use'>\" . esc_html__( 'This custom schedule is in use and cannot be deleted', 'wp-crontrol' ) . '</span>';",
          "123:   } else {",
          "124:    $link = add_query_arg( array(",
          "126:     'crontrol_action' => 'delete-schedule',",
          "127:     'crontrol_id'     => rawurlencode( $schedule['name'] ),",
          "128:    ), admin_url( 'options-general.php' ) );",
          "",
          "[Removed Lines]",
          "125:     'page'            => 'crontrol_admin_options_page',",
          "",
          "[Added Lines]",
          "125:     'page'            => 'wp-crontrol-schedules',",
          "",
          "---------------"
        ],
        "tests/_support/AcceptanceTester.php||tests/_support/AcceptanceTester.php": [
          "File: tests/_support/AcceptanceTester.php -> tests/_support/AcceptanceTester.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "82:  public function amOnCronEventListingPage() {",
          "84:  }",
          "",
          "[Removed Lines]",
          "83:   return $this->amOnAdminPage( 'tools.php?page=crontrol_admin_manage_page' );",
          "",
          "[Added Lines]",
          "83:   return $this->amOnAdminPage( 'tools.php?page=wp-crontrol' );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "91:  public function amOnCronScheduleListingPage() {",
          "93:  }",
          "",
          "[Removed Lines]",
          "92:   return $this->amOnAdminPage( 'options-general.php?page=crontrol_admin_options_page' );",
          "",
          "[Added Lines]",
          "92:   return $this->amOnAdminPage( 'options-general.php?page=wp-crontrol-schedules' );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "14adda54891cd821aa8766c49fe882d847f5f605",
      "candidate_info": {
        "commit_hash": "14adda54891cd821aa8766c49fe882d847f5f605",
        "repo": "johnbillion/wp-crontrol",
        "commit_url": "https://github.com/johnbillion/wp-crontrol/commit/14adda54891cd821aa8766c49fe882d847f5f605",
        "files": [
          "src/bootstrap.php",
          "src/event-list-table.php",
          "src/event.php"
        ],
        "message": "Let's take this opportunity to upgrade the top level args array of a PHP cron event to a list instead of an associative array.",
        "before_after_code_files": [
          "src/bootstrap.php||src/bootstrap.php",
          "src/event-list-table.php||src/event-list-table.php",
          "src/event.php||src/event.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/bootstrap.php||src/bootstrap.php",
            "src/event.php||src/event.php"
          ],
          "candidate": [
            "src/bootstrap.php||src/bootstrap.php",
            "src/event.php||src/event.php"
          ]
        }
      },
      "candidate_diff": {
        "src/bootstrap.php||src/bootstrap.php": [
          "File: src/bootstrap.php -> src/bootstrap.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:  add_action( 'load-tools_page_crontrol_admin_manage_page', __NAMESPACE__ . '\\setup_manage_page' );",
          "36:  add_filter( 'cron_schedules',        __NAMESPACE__ . '\\filter_cron_schedules' );",
          "38:  add_action( 'admin_enqueue_scripts', __NAMESPACE__ . '\\enqueue_assets' );",
          "39:  add_action( 'crontrol/tab-header',   __NAMESPACE__ . '\\show_cron_status', 20 );",
          "40:  add_action( 'activated_plugin',      __NAMESPACE__ . '\\flush_status_cache', 10, 0 );",
          "",
          "[Removed Lines]",
          "37:  add_action( 'crontrol_cron_job',     __NAMESPACE__ . '\\action_php_cron_event', 10, 3 );",
          "",
          "[Added Lines]",
          "37:  add_action( 'crontrol_cron_job',     __NAMESPACE__ . '\\action_php_cron_event', 10 );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "197:   $cr = $request->init( wp_unslash( $_POST ) );",
          "199:   $next_run_local = ( 'custom' === $cr->next_run_date_local ) ? $cr->next_run_date_local_custom_date . ' ' . $cr->next_run_date_local_custom_time : $cr->next_run_date_local;",
          "204:   );",
          "206:   add_filter( 'schedule_event', function( $event ) {",
          "",
          "[Removed Lines]",
          "200:   $args           = array(",
          "201:    'code' => $cr->hookcode,",
          "202:    'name' => $cr->eventname,",
          "203:    'hash' => wp_hash( $cr->hookcode ),",
          "",
          "[Added Lines]",
          "201:   $args = array(",
          "202:    array(",
          "203:     'code' => $cr->hookcode,",
          "204:     'name' => $cr->eventname,",
          "205:     'hash' => wp_hash( $cr->hookcode ),",
          "206:    ),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "343:   $cr = $request->init( wp_unslash( $_POST ) );",
          "345:   check_admin_referer( \"crontrol-edit-cron_{$cr->original_hookname}_{$cr->original_sig}_{$cr->original_next_run_utc}\" );",
          "346:   $args = array(",
          "350:   );",
          "351:   $hookname = ( ! empty( $cr->eventname ) ) ? $cr->eventname : __( 'PHP Cron', 'wp-crontrol' );",
          "352:   $redirect = array(",
          "",
          "[Removed Lines]",
          "347:    'code' => $cr->hookcode,",
          "348:    'name' => $cr->eventname,",
          "349:    'hash' => wp_hash( $cr->hookcode ),",
          "",
          "[Added Lines]",
          "351:    array(",
          "352:     'code' => $cr->hookcode,",
          "353:     'name' => $cr->eventname,",
          "354:     'hash' => wp_hash( $cr->hookcode ),",
          "355:    ),",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1365:   $next_run_time_local = '';",
          "1366:  }",
          "1375:  }",
          "1377:  $can_add_php = current_user_can( 'edit_files' ) && ! $editing;",
          "",
          "[Removed Lines]",
          "1368:  if ( $is_editing_php ) {",
          "1369:   if ( ! isset( $existing['args']['code'] ) ) {",
          "1370:    $existing['args']['code'] = '';",
          "1371:   }",
          "1372:   if ( ! isset( $existing['args']['name'] ) ) {",
          "1373:    $existing['args']['name'] = '';",
          "1374:   }",
          "",
          "[Added Lines]",
          "1374:  if ( $is_editing_php && isset( $existing['args']['code'] ) ) {",
          "1376:   $existing['args'] = array(",
          "1377:    array(",
          "1378:     'code' => $existing['args']['code'],",
          "1379:     'name' => $existing['args']['name'] ?? '',",
          "1380:     'hash' => null,",
          "1381:    ),",
          "1382:   );",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1393:     esc_html( $heading )",
          "1394:    );",
          "1397:     printf(",
          "1398:      '<div id=\"crontrol-integrity-failures-message\" class=\"notice notice-error\"><p>%1$s</p><p><a href=\"%2$s\">%3$s</a></p></div>',",
          "",
          "[Removed Lines]",
          "1396:    if ( $is_editing_php && ! check_integrity( $existing['args']['code'], $existing['args']['hash'] ?? null ) ) {",
          "",
          "[Added Lines]",
          "1404:    if ( $is_editing_php && ! check_integrity( $existing['args'][0]['code'], $existing['args'][0]['hash'] ) ) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1458:          );",
          "1459:         ?>",
          "1460:        </p>",
          "1462:        <?php do_action( 'crontrol/manage/hookcode', $existing ); ?>",
          "1463:       </td>",
          "1464:      </tr>",
          "",
          "[Removed Lines]",
          "1461:        <p><textarea class=\"large-text code\" rows=\"10\" cols=\"50\" id=\"crontrol_hookcode\" name=\"crontrol_hookcode\"><?php echo esc_textarea( $editing ? $existing['args']['code'] : '' ); ?></textarea></p>",
          "",
          "[Added Lines]",
          "1469:        <p><textarea class=\"large-text code\" rows=\"10\" cols=\"50\" id=\"crontrol_hookcode\" name=\"crontrol_hookcode\"><?php echo esc_textarea( $editing ? $existing['args'][0]['code'] : '' ); ?></textarea></p>",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1469:        </label>",
          "1470:       </th>",
          "1471:       <td>",
          "1473:        <?php do_action( 'crontrol/manage/eventname', $existing ); ?>",
          "1474:       </td>",
          "1475:      </tr>",
          "",
          "[Removed Lines]",
          "1472:        <input type=\"text\" class=\"regular-text\" id=\"crontrol_eventname\" name=\"crontrol_eventname\" value=\"<?php echo esc_attr( $editing ? $existing['args']['name'] : '' ); ?>\"/>",
          "",
          "[Added Lines]",
          "1480:        <input type=\"text\" class=\"regular-text\" id=\"crontrol_eventname\" name=\"crontrol_eventname\" value=\"<?php echo esc_attr( $editing ? $existing['args'][0]['name'] : '' ); ?>\"/>",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2241:   return;",
          "2242:  }",
          "2247:   return;",
          "2248:  }",
          "2251:  eval( $code );",
          "2252: }",
          "",
          "[Removed Lines]",
          "2238: function action_php_cron_event( $code, $name, $stored_hash = null ) {",
          "2239:  if ( empty( $stored_hash ) ) {",
          "2245:  if ( ! check_integrity( $code, $stored_hash ) ) {",
          "",
          "[Added Lines]",
          "2249: function action_php_cron_event( $args ) {",
          "2250:  if ( is_string( $args ) ) {",
          "2254:   $code = $args;",
          "2255:   $hash = null;",
          "2256:  } else {",
          "2259:   $code = $args['code'] ?? null;",
          "2260:   $hash = $args['hash'] ?? null;",
          "2261:  }",
          "2263:  if ( empty( $hash ) ) {",
          "2265:   trigger_error(",
          "2266:    sprintf(",
          "2267:     'The stored hash is missing for a PHP cron event. For more information see %s.',",
          "2268:     esc_url_raw( admin_url( 'tools.php?page=crontrol_admin_manage_page&crontrol_hooks_type=php' ) ),",
          "2269:    ),",
          "2270:    E_USER_WARNING",
          "2271:   );",
          "2276:  if ( ! check_integrity( $code, $hash ) ) {",
          "2278:   trigger_error(",
          "2279:    sprintf(",
          "2280:     'The stored hash for a PHP cron event is not valid. For more information see %s.',",
          "2281:     esc_url_raw( admin_url( 'tools.php?page=crontrol_admin_manage_page&crontrol_hooks_type=php' ) ),",
          "2282:    ),",
          "2283:    E_USER_WARNING",
          "2284:   );",
          "",
          "---------------"
        ],
        "src/event-list-table.php||src/event-list-table.php": [
          "File: src/event-list-table.php -> src/event-list-table.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "327:  public function single_row( $event ) {",
          "328:   $classes = array();",
          "331:    $classes[] = 'crontrol-error';",
          "332:   }",
          "",
          "[Removed Lines]",
          "330:   if ( ( 'crontrol_cron_job' === $event->hook ) && ! empty( $event->args['syntax_error_message'] ) ) {",
          "",
          "[Added Lines]",
          "330:   if ( ( 'crontrol_cron_job' === $event->hook ) && isset( $event->args[0]['syntax_error_message'] ) ) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "576:   if ( 'crontrol_cron_job' === $event->hook ) {",
          "577:    $return = '<em>' . esc_html__( 'PHP Code', 'wp-crontrol' ) . '</em>';",
          "580:     $return .= '<br><span class=\"status-crontrol-error\"><span class=\"dashicons dashicons-warning\" aria-hidden=\"true\"></span> ';",
          "581:     $return .= sprintf(",
          "583:      esc_html__( 'Line %1$s: %2$s', 'wp-crontrol' ),",
          "586:     );",
          "587:     $return .= '</span>';",
          "588:    }",
          "592:     $code  = reset( $lines );",
          "593:     $code  = substr( $code, 0, 50 );",
          "",
          "[Removed Lines]",
          "579:    if ( ! empty( $event->args['syntax_error_message'] ) ) {",
          "584:      esc_html( number_format_i18n( $event->args['syntax_error_line'] ) ),",
          "585:      esc_html( $event->args['syntax_error_message'] )",
          "590:    if ( ! empty( $event->args['code'] ) ) {",
          "591:     $lines = explode( \"\\n\", trim( $event->args['code'] ) );",
          "",
          "[Added Lines]",
          "579:    if ( isset( $event->args['code'] ) ) {",
          "580:     $args = $event->args;",
          "581:    } else {",
          "582:     $args = $event->args[0];",
          "583:    }",
          "585:    if ( isset( $args['syntax_error_message'], $args['syntax_error_line'] ) ) {",
          "590:      esc_html( number_format_i18n( $args['syntax_error_line'] ) ),",
          "591:      esc_html( $args['syntax_error_message'] )",
          "596:    if ( ! empty( $args['code'] ) ) {",
          "597:     $lines = explode( \"\\n\", trim( $args['code'] ) );",
          "",
          "---------------"
        ],
        "src/event.php||src/event.php": [
          "File: src/event.php -> src/event.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "145:  $next_run_utc = (int) get_gmt_from_date( gmdate( 'Y-m-d H:i:s', $next_run_local ), 'U' );",
          "152:   try {",
          "",
          "[Removed Lines]",
          "147:  if ( ! is_array( $args ) ) {",
          "148:   $args = array();",
          "149:  }",
          "151:  if ( 'crontrol_cron_job' === $hook && ! empty( $args['code'] ) && class_exists( '\\ParseError' ) ) {",
          "",
          "[Added Lines]",
          "148:  if ( 'crontrol_cron_job' === $hook && ! empty( $args[0]['code'] ) && class_exists( '\\ParseError' ) ) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "162:    eval( sprintf(",
          "163:     'return true; %s',",
          "165:    ) );",
          "167:   } catch ( \\ParseError $e ) {",
          "170:   }",
          "171:  }",
          "",
          "[Removed Lines]",
          "164:     $args['code']",
          "168:    $args['syntax_error_message'] = $e->getMessage();",
          "169:    $args['syntax_error_line']    = $e->getLine();",
          "",
          "[Added Lines]",
          "161:     $args[0]['code']",
          "165:    $args[0]['syntax_error_message'] = $e->getMessage();",
          "166:    $args[0]['syntax_error_line'] = $e->getLine();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "491:   return false;",
          "492:  }",
          "495: }",
          "",
          "[Removed Lines]",
          "494:  return ! check_integrity( $event->args['code'] ?? null, $event->args['hash'] ?? null );",
          "",
          "[Added Lines]",
          "492:  if ( isset( $event->args['code'] ) ) {",
          "493:   return true;",
          "494:  }",
          "496:  $args = $event->args[0] ?? array();",
          "498:  return ! check_integrity( $args['code'] ?? null, $args['hash'] ?? null );",
          "",
          "---------------"
        ]
      }
    }
  ]
}