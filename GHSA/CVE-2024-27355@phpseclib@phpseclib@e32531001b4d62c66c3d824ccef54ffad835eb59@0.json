{
  "cve_id": "CVE-2024-27355",
  "cve_desc": "An issue was discovered in phpseclib 1.x before 1.0.23, 2.x before 2.0.47, and 3.x before 3.0.36. When processing the ASN.1 object identifier of a certificate, a sub identifier may be provided that leads to a denial of service (CPU consumption for decodeOID).",
  "repo": "phpseclib/phpseclib",
  "patch_hash": "e32531001b4d62c66c3d824ccef54ffad835eb59",
  "patch_info": {
    "commit_hash": "e32531001b4d62c66c3d824ccef54ffad835eb59",
    "repo": "phpseclib/phpseclib",
    "commit_url": "https://github.com/phpseclib/phpseclib/commit/e32531001b4d62c66c3d824ccef54ffad835eb59",
    "files": [
      "phpseclib/File/ASN1.php",
      "tests/Unit/File/ASN1/mal-cert-02.der",
      "tests/Unit/File/ASN1Test.php"
    ],
    "message": "ASN1: limit OID length",
    "before_after_code_files": [
      "phpseclib/File/ASN1.php||phpseclib/File/ASN1.php",
      "tests/Unit/File/ASN1Test.php||tests/Unit/File/ASN1Test.php"
    ]
  },
  "patch_diff": {
    "phpseclib/File/ASN1.php||phpseclib/File/ASN1.php": [
      "File: phpseclib/File/ASN1.php -> phpseclib/File/ASN1.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "1277:         $oid = array();",
      "1278:         $pos = 0;",
      "1279:         $len = strlen($content);",
      "1281:         if (ord($content[$len - 1]) & 0x80) {",
      "1282:             return false;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1281:         if ($len > 4096) {",
      "1283:             return false;",
      "1284:         }",
      "",
      "---------------"
    ],
    "tests/Unit/File/ASN1Test.php||tests/Unit/File/ASN1Test.php": [
      "File: tests/Unit/File/ASN1Test.php -> tests/Unit/File/ASN1Test.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "448:         $decoded = $asn1->decodeBER($em);",
      "449:         $this->assertFalse($decoded[0]);",
      "450:     }",
      "451: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "452:     public function testLongOID()",
      "453:     {",
      "454:         $cert = file_get_contents(dirname(__FILE__) . '/ASN1/mal-cert-02.der');",
      "456:         $asn1 = new File_ASN1();",
      "458:         $decoded = $asn1->decodeBER($cert);",
      "459:         $this->assertFalse($decoded[0]);",
      "463:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0777e700b966b68287081cdb83e89834b846f84a",
      "candidate_info": {
        "commit_hash": "0777e700b966b68287081cdb83e89834b846f84a",
        "repo": "phpseclib/phpseclib",
        "commit_url": "https://github.com/phpseclib/phpseclib/commit/0777e700b966b68287081cdb83e89834b846f84a",
        "files": [
          "tests/Unit/File/ASN1Test.php"
        ],
        "message": "Tests: updates for phpseclib 2.0",
        "before_after_code_files": [
          "tests/Unit/File/ASN1Test.php||tests/Unit/File/ASN1Test.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tests/Unit/File/ASN1Test.php||tests/Unit/File/ASN1Test.php"
          ],
          "candidate": [
            "tests/Unit/File/ASN1Test.php||tests/Unit/File/ASN1Test.php"
          ]
        }
      },
      "candidate_diff": {
        "tests/Unit/File/ASN1Test.php||tests/Unit/File/ASN1Test.php": [
          "File: tests/Unit/File/ASN1Test.php -> tests/Unit/File/ASN1Test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "453:     {",
          "454:         $cert = file_get_contents(dirname(__FILE__) . '/ASN1/mal-cert-02.der');",
          "458:         $decoded = $asn1->decodeBER($cert);",
          "459:         $this->assertFalse($decoded[0]);",
          "",
          "[Removed Lines]",
          "456:         $asn1 = new File_ASN1();",
          "",
          "[Added Lines]",
          "456:         $asn1 = new ASN1();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4cdcb74b8ca08941c465a70c62c7c1ba56babaf2",
      "candidate_info": {
        "commit_hash": "4cdcb74b8ca08941c465a70c62c7c1ba56babaf2",
        "repo": "phpseclib/phpseclib",
        "commit_url": "https://github.com/phpseclib/phpseclib/commit/4cdcb74b8ca08941c465a70c62c7c1ba56babaf2",
        "files": [
          "phpseclib/Crypt/Blowfish.php",
          "phpseclib/Crypt/Common/AsymmetricKey.php",
          "phpseclib/Crypt/Common/Formats/Keys/PKCS8.php",
          "phpseclib/Crypt/DH/PrivateKey.php",
          "phpseclib/Crypt/EC/BaseCurves/Base.php",
          "phpseclib/Math/BigInteger.php",
          "phpseclib/Net/SFTP.php",
          "phpseclib/Net/SSH2.php",
          "tests/Unit/Crypt/RSA/LoadKeyTest.php",
          "tests/Unit/File/ASN1Test.php",
          "tests/Unit/File/X509/X509Test.php"
        ],
        "message": "CS adjustments",
        "before_after_code_files": [
          "phpseclib/Crypt/Blowfish.php||phpseclib/Crypt/Blowfish.php",
          "phpseclib/Crypt/Common/AsymmetricKey.php||phpseclib/Crypt/Common/AsymmetricKey.php",
          "phpseclib/Crypt/Common/Formats/Keys/PKCS8.php||phpseclib/Crypt/Common/Formats/Keys/PKCS8.php",
          "phpseclib/Crypt/DH/PrivateKey.php||phpseclib/Crypt/DH/PrivateKey.php",
          "phpseclib/Crypt/EC/BaseCurves/Base.php||phpseclib/Crypt/EC/BaseCurves/Base.php",
          "phpseclib/Math/BigInteger.php||phpseclib/Math/BigInteger.php",
          "phpseclib/Net/SFTP.php||phpseclib/Net/SFTP.php",
          "phpseclib/Net/SSH2.php||phpseclib/Net/SSH2.php",
          "tests/Unit/Crypt/RSA/LoadKeyTest.php||tests/Unit/Crypt/RSA/LoadKeyTest.php",
          "tests/Unit/File/ASN1Test.php||tests/Unit/File/ASN1Test.php",
          "tests/Unit/File/X509/X509Test.php||tests/Unit/File/X509/X509Test.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tests/Unit/File/ASN1Test.php||tests/Unit/File/ASN1Test.php"
          ],
          "candidate": [
            "tests/Unit/File/ASN1Test.php||tests/Unit/File/ASN1Test.php"
          ]
        }
      },
      "candidate_diff": {
        "phpseclib/Crypt/Blowfish.php||phpseclib/Crypt/Blowfish.php": [
          "File: phpseclib/Crypt/Blowfish.php -> phpseclib/Crypt/Blowfish.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "387:         $this->bctx = [",
          "388:             'p'  => [],",
          "390:         ];",
          "",
          "[Removed Lines]",
          "389:             'sb' => self::$sbox",
          "",
          "[Added Lines]",
          "389:             'sb' => self::$sbox,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "543:         [$p[16], $p[17]] = self::encryptBlockHelperFast($p[14], $p[15], $sbox, $p);",
          "547:         for ($i = 2; $i < 1024; $i += 2) {",
          "548:             [$sbox[$i], $sbox[$i + 1]] = self::encryptBlockHelperFast($sbox[$i - 2], $sbox[$i - 1], $sbox, $p);",
          "549:         }",
          "",
          "[Removed Lines]",
          "546:         list($sbox[0], $sbox[1]) = self::encryptBlockHelperFast($p[16], $p[17], $sbox, $p);",
          "",
          "[Added Lines]",
          "546:         [$sbox[0], $sbox[1]] = self::encryptBlockHelperFast($p[16], $p[17], $sbox, $p);",
          "",
          "---------------"
        ],
        "phpseclib/Crypt/Common/AsymmetricKey.php||phpseclib/Crypt/Common/AsymmetricKey.php": [
          "File: phpseclib/Crypt/Common/AsymmetricKey.php -> phpseclib/Crypt/Common/AsymmetricKey.php"
        ],
        "phpseclib/Crypt/Common/Formats/Keys/PKCS8.php||phpseclib/Crypt/Common/Formats/Keys/PKCS8.php": [
          "File: phpseclib/Crypt/Common/Formats/Keys/PKCS8.php -> phpseclib/Crypt/Common/Formats/Keys/PKCS8.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "670:         $decoded = self::preParse($key);",
          "673:         if (!is_array($r)) {",
          "674:             throw new RuntimeException('Unable to parse using EncryptedPrivateKeyInfo map');",
          "675:         }",
          "",
          "[Removed Lines]",
          "672:         $r = ASN1::asn1map($decoded[0], ASN1\\Maps\\EncryptedPrivateKeyInfo::MAP);",
          "",
          "[Added Lines]",
          "672:         $r = ASN1::asn1map($decoded[0], Maps\\EncryptedPrivateKeyInfo::MAP);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "679:             if (!$decoded) {",
          "680:                 throw new RuntimeException('Unable to decode BER');",
          "681:             }",
          "684:             $kdf = &$r['encryptionAlgorithm']['parameters']['keyDerivationFunc'];",
          "685:             switch ($kdf['algorithm']) {",
          "",
          "[Removed Lines]",
          "682:             $r['encryptionAlgorithm']['parameters'] = ASN1::asn1map($decoded[0], ASN1\\Maps\\PBES2params::MAP);",
          "",
          "[Added Lines]",
          "682:             $r['encryptionAlgorithm']['parameters'] = ASN1::asn1map($decoded[0], Maps\\PBES2params::MAP);",
          "",
          "---------------"
        ],
        "phpseclib/Crypt/DH/PrivateKey.php||phpseclib/Crypt/DH/PrivateKey.php": [
          "File: phpseclib/Crypt/DH/PrivateKey.php -> phpseclib/Crypt/DH/PrivateKey.php"
        ],
        "phpseclib/Crypt/EC/BaseCurves/Base.php||phpseclib/Crypt/EC/BaseCurves/Base.php": [
          "File: phpseclib/Crypt/EC/BaseCurves/Base.php -> phpseclib/Crypt/EC/BaseCurves/Base.php"
        ],
        "phpseclib/Math/BigInteger.php||phpseclib/Math/BigInteger.php": [
          "File: phpseclib/Math/BigInteger.php -> phpseclib/Math/BigInteger.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "173:         if ($x instanceof self::$mainEngine) {",
          "174:             $this->value = clone $x;",
          "176:             $this->value = new static(\"$x\");",
          "177:             $this->value->setPrecision($x->getPrecision());",
          "178:         } else {",
          "",
          "[Removed Lines]",
          "175:         } elseif ($x instanceof BigInteger\\Engines\\Engine) {",
          "",
          "[Added Lines]",
          "175:         } elseif ($x instanceof Engine) {",
          "",
          "---------------"
        ],
        "phpseclib/Net/SFTP.php||phpseclib/Net/SFTP.php": [
          "File: phpseclib/Net/SFTP.php -> phpseclib/Net/SFTP.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: use phpseclib3\\Net\\SFTP\\OpenFlag5;",
          "47: use phpseclib3\\Net\\SFTP\\PacketType as SFTPPacketType;",
          "48: use phpseclib3\\Net\\SFTP\\StatusCode;",
          "50: use phpseclib3\\Net\\SSH2\\MessageType as SSH2MessageType;",
          "",
          "[Removed Lines]",
          "49: use phpseclib3\\Net\\SSH2\\DisconnectReason;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "phpseclib/Net/SSH2.php||phpseclib/Net/SSH2.php": [
          "File: phpseclib/Net/SSH2.php -> phpseclib/Net/SSH2.php"
        ],
        "tests/Unit/Crypt/RSA/LoadKeyTest.php||tests/Unit/Crypt/RSA/LoadKeyTest.php": [
          "File: tests/Unit/Crypt/RSA/LoadKeyTest.php -> tests/Unit/Crypt/RSA/LoadKeyTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1430:     {",
          "1431:         $rsa = PublicKeyLoader::load([",
          "1433:             'n' => new BigInteger('5BDD6AFB1E1AFB50D1B2989F70B549B8D44AE3712B444F2C5D862C46C99526E998B79BF0B4F1461524E39D263F3130B9E08F3B17C2070785EFB0EDEC1E75C6C2B8185FA9596886D5DAF8B68E92FCF5F1B33E7CD772845555B086D2A2466B6398A04DFE1C727BB020g1ED2BF3F03D2826F89616D0846C18B1D87064616FAD394462', 16),",
          "1437:         ])",
          "1438:             ->withPadding(RSA::SIGNATURE_PKCS1)",
          "1439:             ->withHash('md5')",
          "",
          "[Removed Lines]",
          "1429:     public function testCloseNumbers()",
          "1436:             'e' => new BigInteger('6FE4F5D0AFCC16E8A5CC68955D4EF28255A546D06F34DD103540B9A7D202AEC96353072DB65D9C360E9030F413971142EE6A28974767CCF3ABFA4E7ADDAEAD81D3F8AE5FF1B8241CA9EF51C10941FFFA74482A636CBD909D29CF7A0346653D3C286EA1F392F4968AEF1489EC4B4BCEA4F248F3931B1C9BE2808DBD33B049731A', 16)",
          "",
          "[Added Lines]",
          "1429:     public function testCloseNumbers(): void",
          "1436:             'e' => new BigInteger('6FE4F5D0AFCC16E8A5CC68955D4EF28255A546D06F34DD103540B9A7D202AEC96353072DB65D9C360E9030F413971142EE6A28974767CCF3ABFA4E7ADDAEAD81D3F8AE5FF1B8241CA9EF51C10941FFFA74482A636CBD909D29CF7A0346653D3C286EA1F392F4968AEF1489EC4B4BCEA4F248F3931B1C9BE2808DBD33B049731A', 16),",
          "",
          "---------------"
        ],
        "tests/Unit/File/ASN1Test.php||tests/Unit/File/ASN1Test.php": [
          "File: tests/Unit/File/ASN1Test.php -> tests/Unit/File/ASN1Test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "453:         $this->assertNull($decoded);",
          "454:     }",
          "457:     {",
          "458:         $cert = file_get_contents(dirname(__FILE__) . '/ASN1/mal-cert-02.der');",
          "",
          "[Removed Lines]",
          "456:     public function testLongOID()",
          "",
          "[Added Lines]",
          "456:     public function testLongOID(): void",
          "",
          "---------------"
        ],
        "tests/Unit/File/X509/X509Test.php||tests/Unit/File/X509/X509Test.php": [
          "File: tests/Unit/File/X509/X509Test.php -> tests/Unit/File/X509/X509Test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1395:         $this->assertFalse($x509->validateURL('https://aa'));",
          "1396:     }",
          "1399:     {",
          "",
          "[Removed Lines]",
          "1398:     public function testLargeInteger()",
          "",
          "[Added Lines]",
          "1398:     public function testLargeInteger(): void",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e67c9dd555d20e00295f54d63ef4b0e1a3bd0554",
      "candidate_info": {
        "commit_hash": "e67c9dd555d20e00295f54d63ef4b0e1a3bd0554",
        "repo": "phpseclib/phpseclib",
        "commit_url": "https://github.com/phpseclib/phpseclib/commit/e67c9dd555d20e00295f54d63ef4b0e1a3bd0554",
        "files": [
          "tests/Unit/File/ASN1Test.php"
        ],
        "message": "Tests: phpseclib 2.0 updates",
        "before_after_code_files": [
          "tests/Unit/File/ASN1Test.php||tests/Unit/File/ASN1Test.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tests/Unit/File/ASN1Test.php||tests/Unit/File/ASN1Test.php"
          ],
          "candidate": [
            "tests/Unit/File/ASN1Test.php||tests/Unit/File/ASN1Test.php"
          ]
        }
      },
      "candidate_diff": {
        "tests/Unit/File/ASN1Test.php||tests/Unit/File/ASN1Test.php": [
          "File: tests/Unit/File/ASN1Test.php -> tests/Unit/File/ASN1Test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "453:     {",
          "454:         $cert = file_get_contents(dirname(__FILE__) . '/ASN1/mal-cert-02.der');",
          "458:         $decoded = $asn1->decodeBER($cert);",
          "459:         $this->assertFalse($decoded[0]);",
          "",
          "[Removed Lines]",
          "456:         $asn1 = new File_ASN1();",
          "",
          "[Added Lines]",
          "456:         $asn1 = new ASN1();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "baba459ca1b2619b173805ca3dfedc4e5a88eac6",
      "candidate_info": {
        "commit_hash": "baba459ca1b2619b173805ca3dfedc4e5a88eac6",
        "repo": "phpseclib/phpseclib",
        "commit_url": "https://github.com/phpseclib/phpseclib/commit/baba459ca1b2619b173805ca3dfedc4e5a88eac6",
        "files": [
          "phpseclib/File/ASN1.php",
          "tests/Unit/File/ASN1Test.php"
        ],
        "message": "Tests: phpseclib 3.0 updates",
        "before_after_code_files": [
          "phpseclib/File/ASN1.php||phpseclib/File/ASN1.php",
          "tests/Unit/File/ASN1Test.php||tests/Unit/File/ASN1Test.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "phpseclib/File/ASN1.php||phpseclib/File/ASN1.php",
            "tests/Unit/File/ASN1Test.php||tests/Unit/File/ASN1Test.php"
          ],
          "candidate": [
            "phpseclib/File/ASN1.php||phpseclib/File/ASN1.php",
            "tests/Unit/File/ASN1Test.php||tests/Unit/File/ASN1Test.php"
          ]
        }
      },
      "candidate_diff": {
        "phpseclib/File/ASN1.php||phpseclib/File/ASN1.php": [
          "File: phpseclib/File/ASN1.php -> phpseclib/File/ASN1.php"
        ],
        "tests/Unit/File/ASN1Test.php||tests/Unit/File/ASN1Test.php": [
          "File: tests/Unit/File/ASN1Test.php -> tests/Unit/File/ASN1Test.php"
        ]
      }
    },
    {
      "candidate_hash": "a922309855328273b818bbff049e9f422b0678ed",
      "candidate_info": {
        "commit_hash": "a922309855328273b818bbff049e9f422b0678ed",
        "repo": "phpseclib/phpseclib",
        "commit_url": "https://github.com/phpseclib/phpseclib/commit/a922309855328273b818bbff049e9f422b0678ed",
        "files": [
          "phpseclib/Math/BigInteger/Engines/Engine.php",
          "phpseclib/Math/BigInteger/Engines/PHP.php",
          "tests/Unit/File/ASN1Test.php"
        ],
        "message": "BigInteger: optimize getLength()",
        "before_after_code_files": [
          "phpseclib/Math/BigInteger/Engines/Engine.php||phpseclib/Math/BigInteger/Engines/Engine.php",
          "phpseclib/Math/BigInteger/Engines/PHP.php||phpseclib/Math/BigInteger/Engines/PHP.php",
          "tests/Unit/File/ASN1Test.php||tests/Unit/File/ASN1Test.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tests/Unit/File/ASN1Test.php||tests/Unit/File/ASN1Test.php"
          ],
          "candidate": [
            "tests/Unit/File/ASN1Test.php||tests/Unit/File/ASN1Test.php"
          ]
        }
      },
      "candidate_diff": {
        "phpseclib/Math/BigInteger/Engines/Engine.php||phpseclib/Math/BigInteger/Engines/Engine.php": [
          "File: phpseclib/Math/BigInteger/Engines/Engine.php -> phpseclib/Math/BigInteger/Engines/Engine.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "620:     public function getLengthInBytes()",
          "621:     {",
          "623:     }",
          "",
          "[Removed Lines]",
          "622:         return strlen($this->toBytes());",
          "",
          "[Added Lines]",
          "622:         return (int) ceil($this->getLength() / 8);",
          "",
          "---------------"
        ],
        "phpseclib/Math/BigInteger/Engines/PHP.php||phpseclib/Math/BigInteger/Engines/PHP.php": [
          "File: phpseclib/Math/BigInteger/Engines/PHP.php -> phpseclib/Math/BigInteger/Engines/PHP.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1341:         }",
          "1342:         return false;",
          "1343:     }",
          "1344: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1350:     public function getLength()",
          "1351:     {",
          "1352:         $max = count($this->value) - 1;",
          "1353:         return $max != -1 ?",
          "1354:             $max * static::BASE + intval(ceil(log($this->value[$max] + 1, 2))) :",
          "1355:             0;",
          "1356:     }",
          "",
          "---------------"
        ],
        "tests/Unit/File/ASN1Test.php||tests/Unit/File/ASN1Test.php": [
          "File: tests/Unit/File/ASN1Test.php -> tests/Unit/File/ASN1Test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "455:     {",
          "456:         $cert = file_get_contents(dirname(__FILE__) . '/ASN1/mal-cert-02.der');",
          "",
          "[Removed Lines]",
          "458:         $asn1 = new ASN1();",
          "459:         $decoded = $asn1->decodeBER($cert);",
          "460:         $this->assertFalse($decoded[0]);",
          "",
          "[Added Lines]",
          "458:         $decoded = ASN1::decodeBER($cert);",
          "459:         $this->assertNull($decoded);",
          "",
          "---------------"
        ]
      }
    }
  ]
}