{
  "cve_id": "CVE-2024-8060",
  "cve_desc": "OpenWebUI version 0.3.0 contains a vulnerability in the audio API endpoint `/audio/api/v1/transcriptions` that allows for arbitrary file upload. The application performs insufficient validation on the `file.content_type` and allows user-controlled filenames, leading to a path traversal vulnerability. This can be exploited by an authenticated user to overwrite critical files within the Docker container, potentially leading to remote code execution as the root user.",
  "repo": "open-webui/open-webui",
  "patch_hash": "613a087387c094e71ee91d29c015195ef401e160",
  "patch_info": {
    "commit_hash": "613a087387c094e71ee91d29c015195ef401e160",
    "repo": "open-webui/open-webui",
    "commit_url": "https://github.com/open-webui/open-webui/commit/613a087387c094e71ee91d29c015195ef401e160",
    "files": [
      "backend/open_webui/routers/audio.py"
    ],
    "message": "refac",
    "before_after_code_files": [
      "backend/open_webui/routers/audio.py||backend/open_webui/routers/audio.py"
    ]
  },
  "patch_diff": {
    "backend/open_webui/routers/audio.py||backend/open_webui/routers/audio.py": [
      "File: backend/open_webui/routers/audio.py -> backend/open_webui/routers/audio.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "681:     available_models = []",
      "682:     if request.app.state.config.TTS_ENGINE == \"openai\":",
      "683:         # Use custom endpoint if not using the official OpenAI API URL",
      "685:             try:",
      "687:                 response.raise_for_status()",
      "688:                 data = response.json()",
      "689:                 available_models = data.get(\"models\", [])",
      "690:             except Exception as e:",
      "691:                 log.error(f\"Error fetching models from custom endpoint: {str(e)}\")",
      "693:         else:",
      "694:             available_models = [{\"id\": \"tts-1\"}, {\"id\": \"tts-1-hd\"}]",
      "695:     elif request.app.state.config.TTS_ENGINE == \"elevenlabs\":",
      "",
      "[Removed Lines]",
      "684:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(\"https://api.openai.com\"):",
      "686:                 response = requests.get(f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/models\")",
      "692:                 available_models = []",
      "",
      "[Added Lines]",
      "684:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(",
      "685:             \"https://api.openai.com\"",
      "686:         ):",
      "688:                 response = requests.get(",
      "689:                     f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/models\"",
      "690:                 )",
      "696:                 available_models = [{\"id\": \"tts-1\"}, {\"id\": \"tts-1-hd\"}]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "723:     available_voices = {}",
      "724:     if request.app.state.config.TTS_ENGINE == \"openai\":",
      "725:         # Use custom endpoint if not using the official OpenAI API URL",
      "727:             try:",
      "729:                 response.raise_for_status()",
      "730:                 data = response.json()",
      "731:                 voices_list = data.get(\"voices\", [])",
      "732:                 available_voices = {voice[\"id\"]: voice[\"name\"] for voice in voices_list}",
      "733:             except Exception as e:",
      "734:                 log.error(f\"Error fetching voices from custom endpoint: {str(e)}\")",
      "736:         else:",
      "737:             available_voices = {",
      "738:                 \"alloy\": \"alloy\",",
      "",
      "[Removed Lines]",
      "726:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(\"https://api.openai.com\"):",
      "728:                 response = requests.get(f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/voices\")",
      "735:                 available_voices = {}",
      "",
      "[Added Lines]",
      "730:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(",
      "731:             \"https://api.openai.com\"",
      "732:         ):",
      "734:                 response = requests.get(",
      "735:                     f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/voices\"",
      "736:                 )",
      "743:                 available_voices = {",
      "744:                     \"alloy\": \"alloy\",",
      "745:                     \"echo\": \"echo\",",
      "746:                     \"fable\": \"fable\",",
      "747:                     \"onyx\": \"onyx\",",
      "748:                     \"nova\": \"nova\",",
      "749:                     \"shimmer\": \"shimmer\",",
      "750:                 }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "436e3ff7de122961b8817e79a0d3f28f3b8c91ac",
      "candidate_info": {
        "commit_hash": "436e3ff7de122961b8817e79a0d3f28f3b8c91ac",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/436e3ff7de122961b8817e79a0d3f28f3b8c91ac",
        "files": [
          "src/lib/components/AddServerModal.svelte",
          "src/lib/components/chat/Settings/Tools.svelte",
          "src/lib/components/chat/Settings/Tools/Connection.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/AddServerModal.svelte||src/lib/components/AddServerModal.svelte",
          "src/lib/components/chat/Settings/Tools.svelte||src/lib/components/chat/Settings/Tools.svelte",
          "src/lib/components/chat/Settings/Tools/Connection.svelte||src/lib/components/chat/Settings/Tools/Connection.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/AddServerModal.svelte||src/lib/components/AddServerModal.svelte": [
          "File: src/lib/components/AddServerModal.svelte -> src/lib/components/AddServerModal.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:  export let connection = null;",
          "27:  let url = '';",
          "30:  let auth_type = 'bearer';",
          "31:  let key = '';",
          "",
          "[Removed Lines]",
          "28:  let openApiPath = '/openapi.json';",
          "",
          "[Added Lines]",
          "28:  let path = '/openapi.json';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43:   const connection = {",
          "44:    url,",
          "45:    key,",
          "46:    config: {",
          "47:     enable: enable",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45:    path,",
          "46:    auth_type,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "56:   url = '';",
          "57:   key = '';",
          "58:   enable = true;",
          "59:  };",
          "61:  const init = () => {",
          "62:   if (connection) {",
          "63:    url = connection.url;",
          "67:    key = connection?.key ?? '';",
          "69:    enable = connection.config?.enable ?? true;",
          "",
          "[Removed Lines]",
          "64:    openApiPath = connection.openApiPath ?? '/openapi.json';",
          "66:    auth_type = connection.auth_type ?? 'bearer';",
          "",
          "[Added Lines]",
          "60:   path = '/openapi.json';",
          "61:   auth_type = 'bearer';",
          "69:    path = connection?.path ?? '/openapi.json';",
          "71:    auth_type = connection?.auth_type ?? 'bearer';",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "137:          <input",
          "138:           class=\"w-full text-sm bg-transparent placeholder:text-gray-300 dark:placeholder:text-gray-700 outline-hidden\"",
          "139:           type=\"text\"",
          "141:           placeholder={$i18n.t('openapi.json Path')}",
          "142:           autocomplete=\"off\"",
          "143:           required",
          "",
          "[Removed Lines]",
          "140:           bind:value={openApiPath}",
          "",
          "[Added Lines]",
          "145:           bind:value={path}",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "155:       <div class=\"text-xs text-gray-500 mt-1\">",
          "156:        {$i18n.t(`WebUI will make requests to \"{{url}}{{path}}\"`, {",
          "157:         url: url,",
          "159:        })}",
          "160:       </div>",
          "",
          "[Removed Lines]",
          "158:         path: openApiPath",
          "",
          "[Added Lines]",
          "163:         path: path",
          "",
          "---------------"
        ],
        "src/lib/components/chat/Settings/Tools.svelte||src/lib/components/chat/Settings/Tools.svelte": [
          "File: src/lib/components/chat/Settings/Tools.svelte -> src/lib/components/chat/Settings/Tools.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:       <div class=\"flex flex-col gap-1.5\">",
          "75:        {#each servers as server, idx}",
          "76:         <Connection",
          "80:          onSubmit={() => {",
          "81:           updateHandler();",
          "82:          }}",
          "",
          "[Removed Lines]",
          "77:          bind:url={server.url}",
          "78:          bind:key={server.key}",
          "79:          bind:config={server.config}",
          "",
          "[Added Lines]",
          "77:          bind:connection={server}",
          "",
          "---------------"
        ],
        "src/lib/components/chat/Settings/Tools/Connection.svelte||src/lib/components/chat/Settings/Tools/Connection.svelte": [
          "File: src/lib/components/chat/Settings/Tools/Connection.svelte -> src/lib/components/chat/Settings/Tools/Connection.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:  export let onDelete = () => {};",
          "12:  export let onSubmit = () => {};",
          "20:  let showConfigModal = false;",
          "21:  let showDeleteConfirmDialog = false;",
          "",
          "[Removed Lines]",
          "14:  export let pipeline = false;",
          "16:  export let url = '';",
          "17:  export let key = '';",
          "18:  export let config = {};",
          "",
          "[Added Lines]",
          "14:  export let connection = null;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "25:  edit",
          "26:  direct",
          "27:  bind:show={showConfigModal}",
          "33:  onDelete={() => {",
          "34:   showDeleteConfirmDialog = true;",
          "35:  }}",
          "41:  }}",
          "42: />",
          "",
          "[Removed Lines]",
          "28:  connection={{",
          "29:   url,",
          "30:   key,",
          "31:   config",
          "32:  }}",
          "36:  onSubmit={(connection) => {",
          "37:   url = connection.url;",
          "38:   key = connection.key;",
          "39:   config = connection.config;",
          "40:   onSubmit(connection);",
          "",
          "[Added Lines]",
          "24:  {connection}",
          "28:  onSubmit={(c) => {",
          "29:   connection = c;",
          "30:   onSubmit(c);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "52: <div class=\"flex w-full gap-2 items-center\">",
          "53:  <Tooltip",
          "54:   className=\"w-full relative\"",
          "57:   })}",
          "58:   placement=\"top-start\"",
          "59:  >",
          "61:    <div",
          "62:     class=\"absolute top-0 bottom-0 left-0 right-0 opacity-60 bg-white dark:bg-gray-900 z-10\"",
          "63:    ></div>",
          "",
          "[Removed Lines]",
          "55:   content={$i18n.t(`WebUI will make requests to \"{{url}}/openapi.json\"`, {",
          "56:    url: url",
          "60:   {#if !(config?.enable ?? true)}",
          "",
          "[Added Lines]",
          "45:   content={$i18n.t(`WebUI will make requests to \"{{url}}{{path}}\"`, {",
          "46:    url: connection?.url,",
          "47:    path: connection?.path ?? '/openapi.json'",
          "51:   {#if !(connection?.config?.enable ?? true)}",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "65:   <div class=\"flex w-full\">",
          "66:    <div class=\"flex-1 relative\">",
          "67:     <input",
          "69:      placeholder={$i18n.t('API Base URL')}",
          "71:      autocomplete=\"off\"",
          "72:     />",
          "73:    </div>",
          "81:   </div>",
          "82:  </Tooltip>",
          "",
          "[Removed Lines]",
          "68:      class=\" outline-hidden w-full bg-transparent {pipeline ? 'pr-8' : ''}\"",
          "70:      bind:value={url}",
          "75:    <SensitiveInput",
          "76:     inputClassName=\" outline-hidden bg-transparent w-full\"",
          "77:     placeholder={$i18n.t('API Key')}",
          "78:     bind:value={key}",
          "79:     required={false}",
          "80:    />",
          "",
          "[Added Lines]",
          "59:      class=\" outline-hidden w-full bg-transparent\"",
          "61:      bind:value={connection.url}",
          "66:    {#if (connection?.auth_type ?? 'bearer') === 'bearer'}",
          "67:     <SensitiveInput",
          "68:      inputClassName=\" outline-hidden bg-transparent w-full\"",
          "69:      placeholder={$i18n.t('API Key')}",
          "70:      bind:value={connection.key}",
          "71:      required={false}",
          "72:     />",
          "73:    {/if}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "34aeaaf020e22066ff2189b055365d9e95884eeb",
      "candidate_info": {
        "commit_hash": "34aeaaf020e22066ff2189b055365d9e95884eeb",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/34aeaaf020e22066ff2189b055365d9e95884eeb",
        "files": [
          "backend/open_webui/retrieval/vector/dbs/chroma.py"
        ],
        "message": "refac",
        "before_after_code_files": [
          "backend/open_webui/retrieval/vector/dbs/chroma.py||backend/open_webui/retrieval/vector/dbs/chroma.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "backend/open_webui/retrieval/vector/dbs/chroma.py||backend/open_webui/retrieval/vector/dbs/chroma.py": [
          "File: backend/open_webui/retrieval/vector/dbs/chroma.py -> backend/open_webui/retrieval/vector/dbs/chroma.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "108:                 )",
          "109:             return None",
          "110:         except Exception as e:",
          "114:             return None",
          "116:     def get(self, collection_name: str) -> Optional[GetResult]:",
          "",
          "[Removed Lines]",
          "111:             log.exception(",
          "112:                 f\"Error querying collection {collection_name} with limit {limit}: {e}\"",
          "113:             )",
          "",
          "[Added Lines]",
          "111:             log.exception(f\"{e}\")",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ceaefd805354e1858b55ed3e3b4d126390a54f52",
      "candidate_info": {
        "commit_hash": "ceaefd805354e1858b55ed3e3b4d126390a54f52",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/ceaefd805354e1858b55ed3e3b4d126390a54f52",
        "files": [
          "backend/open_webui/utils/middleware.py"
        ],
        "message": "refac",
        "before_after_code_files": [
          "backend/open_webui/utils/middleware.py||backend/open_webui/utils/middleware.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "backend/open_webui/utils/middleware.py||backend/open_webui/utils/middleware.py": [
          "File: backend/open_webui/utils/middleware.py -> backend/open_webui/utils/middleware.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1079:                 # We might want to disable this by default",
          "1080:                 detect_reasoning = True",
          "1082:                 current_tag = None",
          "1084:                 reasoning_start_time = None",
          "",
          "[Removed Lines]",
          "1081:                 reasoning_tags = [\"think\", \"reason\", \"reasoning\", \"thought\"]",
          "",
          "[Added Lines]",
          "1081:                 reasoning_tags = [\"think\", \"reason\", \"reasoning\", \"thought\", \"Thought\"]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6bd2bc5683fcd7d716746b4524008d0573b4084f",
      "candidate_info": {
        "commit_hash": "6bd2bc5683fcd7d716746b4524008d0573b4084f",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/6bd2bc5683fcd7d716746b4524008d0573b4084f",
        "files": [
          "src/routes/+layout.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/routes/+layout.svelte||src/routes/+layout.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/routes/+layout.svelte||src/routes/+layout.svelte": [
          "File: src/routes/+layout.svelte -> src/routes/+layout.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "463:     $socket?.on('chat-events', chatEventHandler);",
          "464:     $socket?.on('channel-events', channelEventHandler);",
          "465:    }",
          "466:   });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "465:    } else {",
          "466:     $socket?.off('chat-events', chatEventHandler);",
          "467:     $socket?.off('channel-events', channelEventHandler);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1080ecd22c15c31108ef660f6392853e09594a62",
      "candidate_info": {
        "commit_hash": "1080ecd22c15c31108ef660f6392853e09594a62",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/1080ecd22c15c31108ef660f6392853e09594a62",
        "files": [
          "src/lib/components/chat/MessageInput/Commands/Knowledge.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/chat/MessageInput/Commands/Knowledge.svelte||src/lib/components/chat/MessageInput/Commands/Knowledge.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/chat/MessageInput/Commands/Knowledge.svelte||src/lib/components/chat/MessageInput/Commands/Knowledge.svelte": [
          "File: src/lib/components/chat/MessageInput/Commands/Knowledge.svelte -> src/lib/components/chat/MessageInput/Commands/Knowledge.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "127:           ...a,",
          "128:           ...(item?.files ?? []).map((file) => ({",
          "129:            ...file,",
          "131:           }))",
          "132:          ])",
          "133:         ];",
          "",
          "[Removed Lines]",
          "130:            collection: { name: item.name, description: item.description }",
          "",
          "[Added Lines]",
          "130:            collection: { name: item.name, description: item.description } // DO NOT REMOVE, USED IN FILE DESCRIPTION/ATTACHMENT",
          "",
          "---------------"
        ]
      }
    }
  ]
}