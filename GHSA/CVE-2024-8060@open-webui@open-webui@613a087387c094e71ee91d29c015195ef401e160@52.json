{
  "cve_id": "CVE-2024-8060",
  "cve_desc": "OpenWebUI version 0.3.0 contains a vulnerability in the audio API endpoint `/audio/api/v1/transcriptions` that allows for arbitrary file upload. The application performs insufficient validation on the `file.content_type` and allows user-controlled filenames, leading to a path traversal vulnerability. This can be exploited by an authenticated user to overwrite critical files within the Docker container, potentially leading to remote code execution as the root user.",
  "repo": "open-webui/open-webui",
  "patch_hash": "613a087387c094e71ee91d29c015195ef401e160",
  "patch_info": {
    "commit_hash": "613a087387c094e71ee91d29c015195ef401e160",
    "repo": "open-webui/open-webui",
    "commit_url": "https://github.com/open-webui/open-webui/commit/613a087387c094e71ee91d29c015195ef401e160",
    "files": [
      "backend/open_webui/routers/audio.py"
    ],
    "message": "refac",
    "before_after_code_files": [
      "backend/open_webui/routers/audio.py||backend/open_webui/routers/audio.py"
    ]
  },
  "patch_diff": {
    "backend/open_webui/routers/audio.py||backend/open_webui/routers/audio.py": [
      "File: backend/open_webui/routers/audio.py -> backend/open_webui/routers/audio.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "681:     available_models = []",
      "682:     if request.app.state.config.TTS_ENGINE == \"openai\":",
      "683:         # Use custom endpoint if not using the official OpenAI API URL",
      "685:             try:",
      "687:                 response.raise_for_status()",
      "688:                 data = response.json()",
      "689:                 available_models = data.get(\"models\", [])",
      "690:             except Exception as e:",
      "691:                 log.error(f\"Error fetching models from custom endpoint: {str(e)}\")",
      "693:         else:",
      "694:             available_models = [{\"id\": \"tts-1\"}, {\"id\": \"tts-1-hd\"}]",
      "695:     elif request.app.state.config.TTS_ENGINE == \"elevenlabs\":",
      "",
      "[Removed Lines]",
      "684:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(\"https://api.openai.com\"):",
      "686:                 response = requests.get(f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/models\")",
      "692:                 available_models = []",
      "",
      "[Added Lines]",
      "684:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(",
      "685:             \"https://api.openai.com\"",
      "686:         ):",
      "688:                 response = requests.get(",
      "689:                     f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/models\"",
      "690:                 )",
      "696:                 available_models = [{\"id\": \"tts-1\"}, {\"id\": \"tts-1-hd\"}]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "723:     available_voices = {}",
      "724:     if request.app.state.config.TTS_ENGINE == \"openai\":",
      "725:         # Use custom endpoint if not using the official OpenAI API URL",
      "727:             try:",
      "729:                 response.raise_for_status()",
      "730:                 data = response.json()",
      "731:                 voices_list = data.get(\"voices\", [])",
      "732:                 available_voices = {voice[\"id\"]: voice[\"name\"] for voice in voices_list}",
      "733:             except Exception as e:",
      "734:                 log.error(f\"Error fetching voices from custom endpoint: {str(e)}\")",
      "736:         else:",
      "737:             available_voices = {",
      "738:                 \"alloy\": \"alloy\",",
      "",
      "[Removed Lines]",
      "726:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(\"https://api.openai.com\"):",
      "728:                 response = requests.get(f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/voices\")",
      "735:                 available_voices = {}",
      "",
      "[Added Lines]",
      "730:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(",
      "731:             \"https://api.openai.com\"",
      "732:         ):",
      "734:                 response = requests.get(",
      "735:                     f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/voices\"",
      "736:                 )",
      "743:                 available_voices = {",
      "744:                     \"alloy\": \"alloy\",",
      "745:                     \"echo\": \"echo\",",
      "746:                     \"fable\": \"fable\",",
      "747:                     \"onyx\": \"onyx\",",
      "748:                     \"nova\": \"nova\",",
      "749:                     \"shimmer\": \"shimmer\",",
      "750:                 }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7e2b2ec7619ecb53e733e8a820c65a29c3bc4b1d",
      "candidate_info": {
        "commit_hash": "7e2b2ec7619ecb53e733e8a820c65a29c3bc4b1d",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/7e2b2ec7619ecb53e733e8a820c65a29c3bc4b1d",
        "files": [
          "backend/open_webui/utils/middleware.py"
        ],
        "message": "fix: openai usage display issue",
        "before_after_code_files": [
          "backend/open_webui/utils/middleware.py||backend/open_webui/utils/middleware.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/open-webui/open-webui/pull/10469"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "backend/open_webui/utils/middleware.py||backend/open_webui/utils/middleware.py": [
          "File: backend/open_webui/utils/middleware.py -> backend/open_webui/utils/middleware.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1487:                                 else:",
          "1488:                                     choices = data.get(\"choices\", [])",
          "1489:                                     if not choices:",
          "1490:                                         continue",
          "1492:                                     delta = choices[0].get(\"delta\", {})",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1490:                                         usage = data.get(\"usage\", {})",
          "1491:                                         if usage:",
          "1492:                                             await event_emitter(",
          "1493:                                                 {",
          "1494:                                                     \"type\": \"chat:completion\",",
          "1495:                                                     \"data\": {",
          "1496:                                                         \"usage\": usage,",
          "1497:                                                     },",
          "1498:                                                 }",
          "1499:                                             )",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "802f8809dd603b047bfe1e6107e120e4c0d6ac02",
      "candidate_info": {
        "commit_hash": "802f8809dd603b047bfe1e6107e120e4c0d6ac02",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/802f8809dd603b047bfe1e6107e120e4c0d6ac02",
        "files": [
          "src/lib/components/chat/Messages/CodeBlock.svelte",
          "src/lib/components/chat/Messages/Markdown/MarkdownTokens.svelte",
          "src/lib/components/common/CodeEditor.svelte"
        ],
        "message": "fix: codeblock",
        "before_after_code_files": [
          "src/lib/components/chat/Messages/CodeBlock.svelte||src/lib/components/chat/Messages/CodeBlock.svelte",
          "src/lib/components/chat/Messages/Markdown/MarkdownTokens.svelte||src/lib/components/chat/Messages/Markdown/MarkdownTokens.svelte",
          "src/lib/components/common/CodeEditor.svelte||src/lib/components/common/CodeEditor.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/open-webui/open-webui/pull/10469"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/chat/Messages/CodeBlock.svelte||src/lib/components/chat/Messages/CodeBlock.svelte": [
          "File: src/lib/components/chat/Messages/CodeBlock.svelte -> src/lib/components/chat/Messages/CodeBlock.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "464:      onSave={() => {",
          "465:       saveCode();",
          "466:      }}",
          "469:      }}",
          "470:     />",
          "471:    </div>",
          "",
          "[Removed Lines]",
          "467:      onChange={(e) => {",
          "468:       _code = e;",
          "",
          "[Added Lines]",
          "467:      onChange={(value) => {",
          "468:       _code = value;",
          "",
          "---------------"
        ],
        "src/lib/components/chat/Messages/Markdown/MarkdownTokens.svelte||src/lib/components/chat/Messages/Markdown/MarkdownTokens.svelte": [
          "File: src/lib/components/chat/Messages/Markdown/MarkdownTokens.svelte -> src/lib/components/chat/Messages/Markdown/MarkdownTokens.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "88:     code={token?.text ?? ''}",
          "89:     {attributes}",
          "90:     {save}",
          "93:     }}",
          "94:     onSave={(e) => {",
          "95:      dispatch('update', {",
          "96:       raw: token.raw,",
          "97:       oldContent: token.text,",
          "99:      });",
          "100:     }}",
          "101:    />",
          "",
          "[Removed Lines]",
          "91:     onCode={(e) => {",
          "92:      dispatch('code', e);",
          "98:       newContent: e",
          "",
          "[Added Lines]",
          "91:     onCode={(value) => {",
          "92:      dispatch('code', value);",
          "98:       newContent: value",
          "",
          "---------------"
        ],
        "src/lib/components/common/CodeEditor.svelte||src/lib/components/common/CodeEditor.svelte": [
          "File: src/lib/components/common/CodeEditor.svelte -> src/lib/components/common/CodeEditor.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "79:     });",
          "81:     _value = formattedCode;",
          "83:     await tick();",
          "85:     toast.success($i18n.t('Code formatted successfully'));",
          "",
          "[Removed Lines]",
          "82:     onChange({ value: _value });",
          "",
          "[Added Lines]",
          "82:     onChange(_value);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "98:   EditorView.updateListener.of((e) => {",
          "99:    if (e.docChanged) {",
          "100:     _value = e.state.doc.toString();",
          "102:    }",
          "103:   }),",
          "104:   editorTheme.of([]),",
          "",
          "[Removed Lines]",
          "101:     onChange({ value: _value });",
          "",
          "[Added Lines]",
          "101:     onChange(_value);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7a63947b945a1f53c060d6da55f16c05fc2cbfcd",
      "candidate_info": {
        "commit_hash": "7a63947b945a1f53c060d6da55f16c05fc2cbfcd",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/7a63947b945a1f53c060d6da55f16c05fc2cbfcd",
        "files": [
          "src/tailwind.css"
        ],
        "message": "fix: tailwind v4 ios 16.4 compatibility issue",
        "before_after_code_files": [
          "src/tailwind.css||src/tailwind.css"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/open-webui/open-webui/pull/10469"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/tailwind.css||src/tailwind.css": [
          "File: src/tailwind.css -> src/tailwind.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "35:  button {",
          "36:   @apply cursor-pointer;",
          "37:  }",
          "38: }",
          "40: @custom-variant hover (&:hover);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39:  input::placeholder,",
          "40:  textarea::placeholder {",
          "41:   color: theme(--color-gray-400);",
          "42:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8c4d967ef4fe9c308ee7ece05045fcc4681cf6b2",
      "candidate_info": {
        "commit_hash": "8c4d967ef4fe9c308ee7ece05045fcc4681cf6b2",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/8c4d967ef4fe9c308ee7ece05045fcc4681cf6b2",
        "files": [
          "src/lib/components/admin/Settings/Evaluations.svelte"
        ],
        "message": "refac: evaluations settings ui",
        "before_after_code_files": [
          "src/lib/components/admin/Settings/Evaluations.svelte||src/lib/components/admin/Settings/Evaluations.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/open-webui/open-webui/pull/10469"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/admin/Settings/Evaluations.svelte||src/lib/components/admin/Settings/Evaluations.svelte": [
          "File: src/lib/components/admin/Settings/Evaluations.svelte -> src/lib/components/admin/Settings/Evaluations.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "103:  <div class=\"overflow-y-scroll scrollbar-hidden h-full\">",
          "104:   {#if evaluationConfig !== null}",
          "105:    <div class=\"\">",
          "110:       <div class=\" text-xs font-medium\">{$i18n.t('Arena Models')}</div>",
          "112:       <Tooltip content={$i18n.t(`Message rating should be enabled to use this feature`)}>",
          "",
          "[Removed Lines]",
          "106:     <div class=\"text-sm font-medium mb-2\">{$i18n.t('General Settings')}</div>",
          "108:     <div class=\" mb-2\">",
          "109:      <div class=\"flex justify-between items-center text-xs\">",
          "",
          "[Added Lines]",
          "106:     <div class=\"mb-3\">",
          "107:      <div class=\" mb-2.5 text-base font-medium\">{$i18n.t('General')}</div>",
          "109:      <hr class=\" border-gray-100 dark:border-gray-850 my-2\" />",
          "111:      <div class=\"mb-2.5 flex w-full justify-between\">",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "116:     </div>",
          "118:     {#if evaluationConfig.ENABLE_EVALUATION_ARENA_MODELS}",
          "157:        </div>",
          "159:      </div>",
          "160:     {/if}",
          "161:    </div>",
          "",
          "[Removed Lines]",
          "119:      <hr class=\" border-gray-50 dark:border-gray-700/10 my-2\" />",
          "121:      <div class=\"flex justify-between items-center mb-2\">",
          "122:       <div class=\"text-sm font-medium\">{$i18n.t('Manage Arena Models')}</div>",
          "124:       <div>",
          "125:        <Tooltip content={$i18n.t('Add Arena Model')}>",
          "126:         <button",
          "127:          class=\"p-1\"",
          "128:          type=\"button\"",
          "129:          on:click={() => {",
          "130:           showAddModel = true;",
          "131:          }}",
          "132:         >",
          "133:          <Plus />",
          "134:         </button>",
          "135:        </Tooltip>",
          "136:       </div>",
          "137:      </div>",
          "139:      <div class=\"flex flex-col gap-2\">",
          "140:       {#if (evaluationConfig?.EVALUATION_ARENA_MODELS ?? []).length > 0}",
          "141:        {#each evaluationConfig.EVALUATION_ARENA_MODELS as model, index}",
          "142:         <Model",
          "143:          {model}",
          "144:          on:edit={(e) => {",
          "145:           editModelHandler(e.detail, index);",
          "146:          }}",
          "147:          on:delete={(e) => {",
          "148:           deleteModelHandler(index);",
          "149:          }}",
          "150:         />",
          "151:        {/each}",
          "152:       {:else}",
          "153:        <div class=\" text-center text-xs text-gray-500\">",
          "154:         {$i18n.t(",
          "155:          `Using the default arena model with all models. Click the plus button to add custom models.`",
          "156:         )}",
          "158:       {/if}",
          "",
          "[Added Lines]",
          "121:      <div class=\"mb-3\">",
          "122:       <div class=\" mb-2.5 text-base font-medium flex justify-between items-center\">",
          "123:        <div>",
          "124:         {$i18n.t('Manage')}",
          "125:        </div>",
          "127:        <div>",
          "128:         <Tooltip content={$i18n.t('Add Arena Model')}>",
          "129:          <button",
          "130:           class=\"p-1\"",
          "131:           type=\"button\"",
          "132:           on:click={() => {",
          "133:            showAddModel = true;",
          "134:           }}",
          "135:          >",
          "136:           <Plus />",
          "137:          </button>",
          "138:         </Tooltip>",
          "140:       </div>",
          "142:       <hr class=\" border-gray-100 dark:border-gray-850 my-2\" />",
          "144:       <div class=\"flex flex-col gap-2\">",
          "145:        {#if (evaluationConfig?.EVALUATION_ARENA_MODELS ?? []).length > 0}",
          "146:         {#each evaluationConfig.EVALUATION_ARENA_MODELS as model, index}",
          "147:          <Model",
          "148:           {model}",
          "149:           on:edit={(e) => {",
          "150:            editModelHandler(e.detail, index);",
          "151:           }}",
          "152:           on:delete={(e) => {",
          "153:            deleteModelHandler(index);",
          "154:           }}",
          "155:          />",
          "156:         {/each}",
          "157:        {:else}",
          "158:         <div class=\" text-center text-xs text-gray-500\">",
          "159:          {$i18n.t(",
          "160:           `Using the default arena model with all models. Click the plus button to add custom models.`",
          "161:          )}",
          "162:         </div>",
          "163:        {/if}",
          "164:       </div>",
          "",
          "---------------"
        ]
      }
    }
  ]
}