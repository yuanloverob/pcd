{
  "cve_id": "CVE-2024-51417",
  "cve_desc": "An issue in System.Linq.Dynamic.Core before 1.6.0 allows remote access to properties on reflection types and static properties/fields.",
  "repo": "zzzprojects/System.Linq.Dynamic.Core",
  "patch_hash": "49b6cf0909cf3571e0d3580317675408300dbdac",
  "patch_info": {
    "commit_hash": "49b6cf0909cf3571e0d3580317675408300dbdac",
    "repo": "zzzprojects/System.Linq.Dynamic.Core",
    "commit_url": "https://github.com/zzzprojects/System.Linq.Dynamic.Core/commit/49b6cf0909cf3571e0d3580317675408300dbdac",
    "files": [
      "src/System.Linq.Dynamic.Core/CustomTypeProviders/AbstractDynamicLinqCustomTypeProvider.cs",
      "src/System.Linq.Dynamic.Core/CustomTypeProviders/DefaultDynamicLinqCustomTypeProvider.cs",
      "src/System.Linq.Dynamic.Core/CustomTypeProviders/IDynamicLinkCustomTypeProvider.cs",
      "src/System.Linq.Dynamic.Core/Extensions/LinqExtensions.cs",
      "src/System.Linq.Dynamic.Core/Parser/PredefinedTypesHelper.cs",
      "src/System.Linq.Dynamic.Core/ParsingConfig.cs",
      "test/System.Linq.Dynamic.Core.Tests/CustomTypeProviders/DefaultDynamicLinqCustomTypeProviderTests.cs",
      "test/System.Linq.Dynamic.Core.Tests/DynamicClassTest.cs",
      "test/System.Linq.Dynamic.Core.Tests/DynamicExpressionParserTests.cs",
      "test/System.Linq.Dynamic.Core.Tests/Entities/Worker.cs",
      "test/System.Linq.Dynamic.Core.Tests/ExpressionTests.cs",
      "test/System.Linq.Dynamic.Core.Tests/Helpers/Models/AppSettings.cs",
      "test/System.Linq.Dynamic.Core.Tests/Parser/ExpressionParserTests.cs",
      "test/System.Linq.Dynamic.Core.Tests/Parser/MethodFinderTest.cs",
      "test/System.Linq.Dynamic.Core.Tests/QueryableTests.Is,OfType,As,Cast.cs",
      "test/System.Linq.Dynamic.Core.Tests/QueryableTests.Select.cs",
      "test/System.Linq.Dynamic.Core.Tests/SecurityTests.cs",
      "test/System.Linq.Dynamic.Core.Tests/TestClasses/TestCustomTypeProvider.cs"
    ],
    "message": "Fix CVE-2024-51417 (#870)\n\n* Fix CVE-2024-51417\n- remove 'object' from PredefinedTypes\n- refactor DefaultDynamicLinqCustomTypeProvider so that only classes with DynamicLinqType annotation are resolved\n\n* UsingStaticClass_WhenAddedDefaultDynamicLinqCustomTypeProvider_ShouldBeOk\n\n* Fix Select_Dynamic_SystemType1 unit test\n\n* Add more tests\n\n* re-enable old constructor for DefaultDynamicLinqCustomTypeProvider\n\n* IDynamicLinkCustomTypeProvider\n\n* add comment to PredefinedTypesHelper\n\n* [Theory(Skip = \"873\")]",
    "before_after_code_files": [
      "src/System.Linq.Dynamic.Core/CustomTypeProviders/AbstractDynamicLinqCustomTypeProvider.cs||src/System.Linq.Dynamic.Core/CustomTypeProviders/AbstractDynamicLinqCustomTypeProvider.cs",
      "src/System.Linq.Dynamic.Core/CustomTypeProviders/DefaultDynamicLinqCustomTypeProvider.cs||src/System.Linq.Dynamic.Core/CustomTypeProviders/DefaultDynamicLinqCustomTypeProvider.cs",
      "src/System.Linq.Dynamic.Core/CustomTypeProviders/IDynamicLinkCustomTypeProvider.cs||src/System.Linq.Dynamic.Core/CustomTypeProviders/IDynamicLinkCustomTypeProvider.cs",
      "src/System.Linq.Dynamic.Core/Extensions/LinqExtensions.cs||src/System.Linq.Dynamic.Core/Extensions/LinqExtensions.cs",
      "src/System.Linq.Dynamic.Core/Parser/PredefinedTypesHelper.cs||src/System.Linq.Dynamic.Core/Parser/PredefinedTypesHelper.cs",
      "src/System.Linq.Dynamic.Core/ParsingConfig.cs||src/System.Linq.Dynamic.Core/ParsingConfig.cs",
      "test/System.Linq.Dynamic.Core.Tests/CustomTypeProviders/DefaultDynamicLinqCustomTypeProviderTests.cs||test/System.Linq.Dynamic.Core.Tests/CustomTypeProviders/DefaultDynamicLinqCustomTypeProviderTests.cs",
      "test/System.Linq.Dynamic.Core.Tests/DynamicClassTest.cs||test/System.Linq.Dynamic.Core.Tests/DynamicClassTest.cs",
      "test/System.Linq.Dynamic.Core.Tests/DynamicExpressionParserTests.cs||test/System.Linq.Dynamic.Core.Tests/DynamicExpressionParserTests.cs",
      "test/System.Linq.Dynamic.Core.Tests/Entities/Worker.cs||test/System.Linq.Dynamic.Core.Tests/Entities/Worker.cs",
      "test/System.Linq.Dynamic.Core.Tests/ExpressionTests.cs||test/System.Linq.Dynamic.Core.Tests/ExpressionTests.cs",
      "test/System.Linq.Dynamic.Core.Tests/Helpers/Models/AppSettings.cs||test/System.Linq.Dynamic.Core.Tests/Helpers/Models/AppSettings.cs",
      "test/System.Linq.Dynamic.Core.Tests/Parser/ExpressionParserTests.cs||test/System.Linq.Dynamic.Core.Tests/Parser/ExpressionParserTests.cs",
      "test/System.Linq.Dynamic.Core.Tests/Parser/MethodFinderTest.cs||test/System.Linq.Dynamic.Core.Tests/Parser/MethodFinderTest.cs",
      "test/System.Linq.Dynamic.Core.Tests/QueryableTests.Is,OfType,As,Cast.cs||test/System.Linq.Dynamic.Core.Tests/QueryableTests.Is,OfType,As,Cast.cs",
      "test/System.Linq.Dynamic.Core.Tests/QueryableTests.Select.cs||test/System.Linq.Dynamic.Core.Tests/QueryableTests.Select.cs",
      "test/System.Linq.Dynamic.Core.Tests/SecurityTests.cs||test/System.Linq.Dynamic.Core.Tests/SecurityTests.cs",
      "test/System.Linq.Dynamic.Core.Tests/TestClasses/TestCustomTypeProvider.cs||test/System.Linq.Dynamic.Core.Tests/TestClasses/TestCustomTypeProvider.cs"
    ]
  },
  "patch_diff": {
    "src/System.Linq.Dynamic.Core/CustomTypeProviders/AbstractDynamicLinqCustomTypeProvider.cs||src/System.Linq.Dynamic.Core/CustomTypeProviders/AbstractDynamicLinqCustomTypeProvider.cs": [
      "File: src/System.Linq.Dynamic.Core/CustomTypeProviders/AbstractDynamicLinqCustomTypeProvider.cs -> src/System.Linq.Dynamic.Core/CustomTypeProviders/AbstractDynamicLinqCustomTypeProvider.cs",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: \ufeffusing System.Collections.Generic;",
      "2: using System.Diagnostics.CodeAnalysis;",
      "4: using System.Linq.Dynamic.Core.Validation;",
      "5: using System.Reflection;",
      "",
      "[Removed Lines]",
      "3: using System.Linq.Dynamic.Core.Extensions;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "13: public abstract class AbstractDynamicLinqCustomTypeProvider",
      "14: {",
      "21:     {",
      "22:         Check.NotNull(assemblies);",
      "23: #if !NET35",
      "",
      "[Removed Lines]",
      "20:     protected IEnumerable<Type> FindTypesMarkedWithDynamicLinqTypeAttribute(IEnumerable<Assembly> assemblies)",
      "",
      "[Added Lines]",
      "17:     protected readonly IList<Type> AdditionalTypes;",
      "23:     protected AbstractDynamicLinqCustomTypeProvider(IList<Type> additionalTypes)",
      "24:     {",
      "25:         AdditionalTypes = Check.NotNull(additionalTypes);",
      "26:     }",
      "33:     protected Type[] FindTypesMarkedWithDynamicLinqTypeAttribute(IEnumerable<Assembly> assemblies)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "37:         Check.NotNull(assemblies);",
      "38:         Check.NotEmpty(typeName);",
      "50:     }",
      "",
      "[Removed Lines]",
      "40:         foreach (var assembly in assemblies)",
      "41:         {",
      "42:             var resolvedType = assembly.GetType(typeName, false, true);",
      "43:             if (resolvedType != null)",
      "44:             {",
      "45:                 return resolvedType;",
      "46:             }",
      "47:         }",
      "49:         return null;",
      "",
      "[Added Lines]",
      "53:         var types = FindTypesMarkedWithDynamicLinqTypeAttribute(assemblies).Union(AdditionalTypes);",
      "54:         return types.FirstOrDefault(t => t.FullName == typeName);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "60:         Check.NotNull(assemblies);",
      "61:         Check.NotEmpty(simpleTypeName);",
      "76:         }",
      "79:     }",
      "81: #if (UAP10_0 || NETSTANDARD)",
      "",
      "[Removed Lines]",
      "63:         foreach (var assembly in assemblies)",
      "64:         {",
      "65:             var fullNames = assembly.GetTypes().Select(t => t.FullName!).Distinct();",
      "66:             var firstMatchingFullname = fullNames.FirstOrDefault(fn => fn.EndsWith($\".{simpleTypeName}\"));",
      "68:             if (firstMatchingFullname != null)",
      "69:             {",
      "70:                 var resolvedType = assembly.GetType(firstMatchingFullname, false, true);",
      "71:                 if (resolvedType != null)",
      "72:                 {",
      "73:                     return resolvedType;",
      "74:                 }",
      "75:             }",
      "78:         return null;",
      "",
      "[Added Lines]",
      "69:         var types = FindTypesMarkedWithDynamicLinqTypeAttribute(assemblies);",
      "70:         var fullNames = types.Select(t => t.FullName!).Distinct().ToArray();",
      "71:         var firstMatchingFullname = fullNames.FirstOrDefault(fn => fn.EndsWith($\".{simpleTypeName}\"));",
      "73:         if (firstMatchingFullname == null)",
      "74:         {",
      "75:             return null;",
      "78:         return types.FirstOrDefault(t => t.FullName == firstMatchingFullname);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "147:             }",
      "148:             catch (ReflectionTypeLoadException reflectionTypeLoadException)",
      "149:             {",
      "151:             }",
      "152:             catch",
      "153:             {",
      "",
      "[Removed Lines]",
      "150:                 definedTypes = reflectionTypeLoadException.Types.WhereNotNull().ToArray();",
      "",
      "[Added Lines]",
      "150:                 definedTypes = reflectionTypeLoadException.Types.OfType<Type>().ToArray();",
      "",
      "---------------"
    ],
    "src/System.Linq.Dynamic.Core/CustomTypeProviders/DefaultDynamicLinqCustomTypeProvider.cs||src/System.Linq.Dynamic.Core/CustomTypeProviders/DefaultDynamicLinqCustomTypeProvider.cs": [
      "File: src/System.Linq.Dynamic.Core/CustomTypeProviders/DefaultDynamicLinqCustomTypeProvider.cs -> src/System.Linq.Dynamic.Core/CustomTypeProviders/DefaultDynamicLinqCustomTypeProvider.cs",
      "--- Hunk 1 ---",
      "[Context before]",
      "22:     private HashSet<Type>? _cachedCustomTypes;",
      "23:     private Dictionary<Type, List<MethodInfo>>? _cachedExtensionMethods;",
      "31:     public DefaultDynamicLinqCustomTypeProvider(bool cacheCustomTypes = true) : this(ParsingConfig.Default, cacheCustomTypes)",
      "32:     {",
      "33:     }",
      "",
      "[Removed Lines]",
      "30:     [Obsolete(\"Please use the DefaultDynamicLinqCustomTypeProvider(ParsingConfig config, bool cacheCustomTypes = true) constructor.\")]",
      "",
      "[Added Lines]",
      "28:     [Obsolete(\"Please use the DefaultDynamicLinqCustomTypeProvider(ParsingConfig config, IList<Type> additionalTypes, bool cacheCustomTypes = true) constructor.\")]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "41:     {",
      "42:         _assemblyHelper = new DefaultAssemblyHelper(Check.NotNull(config));",
      "43:         _cacheCustomTypes = cacheCustomTypes;",
      "",
      "[Removed Lines]",
      "40:     public DefaultDynamicLinqCustomTypeProvider(ParsingConfig config, bool cacheCustomTypes = true)",
      "",
      "[Added Lines]",
      "38:     public DefaultDynamicLinqCustomTypeProvider(ParsingConfig config, bool cacheCustomTypes = true) : this(config, new List<Type>(), cacheCustomTypes)",
      "39:     {",
      "40:     }",
      "48:     public DefaultDynamicLinqCustomTypeProvider(ParsingConfig config, IList<Type> additionalTypes, bool cacheCustomTypes = true) : base(additionalTypes)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "96:     private HashSet<Type> GetCustomTypesInternal()",
      "97:     {",
      "98:         IEnumerable<Assembly> assemblies = _assemblyHelper.GetAssemblies();",
      "100:     }",
      "102:     private Dictionary<Type, List<MethodInfo>> GetExtensionMethodsInternal()",
      "",
      "[Removed Lines]",
      "99:         return new HashSet<Type>(FindTypesMarkedWithDynamicLinqTypeAttribute(assemblies));",
      "",
      "[Added Lines]",
      "107:         var types = FindTypesMarkedWithDynamicLinqTypeAttribute(assemblies).Union(AdditionalTypes);",
      "108:         return new HashSet<Type>(types);",
      "",
      "---------------"
    ],
    "src/System.Linq.Dynamic.Core/CustomTypeProviders/IDynamicLinkCustomTypeProvider.cs||src/System.Linq.Dynamic.Core/CustomTypeProviders/IDynamicLinkCustomTypeProvider.cs": [
      "File: src/System.Linq.Dynamic.Core/CustomTypeProviders/IDynamicLinkCustomTypeProvider.cs -> src/System.Linq.Dynamic.Core/CustomTypeProviders/IDynamicLinkCustomTypeProvider.cs",
      "--- Hunk 1 ---",
      "[Context before]",
      "2: {",
      "7:     public interface IDynamicLinkCustomTypeProvider : IDynamicLinqCustomTypeProvider",
      "8:     {",
      "9:     }",
      "",
      "[Removed Lines]",
      "10: }",
      "",
      "[Added Lines]",
      "6:     [Obsolete(\"Please use the IDynamicLinqCustomTypeProvider interface instead.\")]",
      "10: }",
      "",
      "---------------"
    ],
    "src/System.Linq.Dynamic.Core/Extensions/LinqExtensions.cs||src/System.Linq.Dynamic.Core/Extensions/LinqExtensions.cs": [
      "File: src/System.Linq.Dynamic.Core/Extensions/LinqExtensions.cs -> src/System.Linq.Dynamic.Core/Extensions/LinqExtensions.cs",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/System.Linq.Dynamic.Core/Parser/PredefinedTypesHelper.cs||src/System.Linq.Dynamic.Core/Parser/PredefinedTypesHelper.cs": [
      "File: src/System.Linq.Dynamic.Core/Parser/PredefinedTypesHelper.cs -> src/System.Linq.Dynamic.Core/Parser/PredefinedTypesHelper.cs",
      "--- Hunk 1 ---",
      "[Context before]",
      "29:     public static readonly IDictionary<Type, int> PredefinedTypes = new ConcurrentDictionary<Type, int>(new Dictionary<Type, int>",
      "30:     {",
      "32:         { typeof(bool), 0 },",
      "33:         { typeof(char), 0 },",
      "34:         { typeof(string), 0 },",
      "",
      "[Removed Lines]",
      "31:         { typeof(object), 0 },",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/System.Linq.Dynamic.Core/ParsingConfig.cs||src/System.Linq.Dynamic.Core/ParsingConfig.cs": [
      "File: src/System.Linq.Dynamic.Core/ParsingConfig.cs -> src/System.Linq.Dynamic.Core/ParsingConfig.cs",
      "--- Hunk 1 ---",
      "[Context before]",
      "71:         }",
      "72:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "78:     public void UseDefaultDynamicLinqCustomTypeProvider(bool cacheCustomTypes = true)",
      "79:     {",
      "80:         _customTypeProvider = new DefaultDynamicLinqCustomTypeProvider(this, cacheCustomTypes);",
      "81:     }",
      "88:     public void UseDefaultDynamicLinqCustomTypeProvider(IList<Type> additionalTypes, bool cacheCustomTypes = true)",
      "89:     {",
      "90:         _customTypeProvider = new DefaultDynamicLinqCustomTypeProvider(this, additionalTypes, cacheCustomTypes);",
      "91:     }",
      "",
      "---------------"
    ],
    "test/System.Linq.Dynamic.Core.Tests/CustomTypeProviders/DefaultDynamicLinqCustomTypeProviderTests.cs||test/System.Linq.Dynamic.Core.Tests/CustomTypeProviders/DefaultDynamicLinqCustomTypeProviderTests.cs": [
      "File: test/System.Linq.Dynamic.Core.Tests/CustomTypeProviders/DefaultDynamicLinqCustomTypeProviderTests.cs -> test/System.Linq.Dynamic.Core.Tests/CustomTypeProviders/DefaultDynamicLinqCustomTypeProviderTests.cs",
      "--- Hunk 1 ---",
      "[Context before]",
      "2: using System.Linq.Dynamic.Core.CustomTypeProviders;",
      "3: using FluentAssertions;",
      "4: using NFluent;",
      "",
      "[Removed Lines]",
      "1: \ufeffusing System.IO;",
      "",
      "[Added Lines]",
      "1: \ufeffusing System.Collections.Generic;",
      "2: using System.IO;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "9: public class DefaultDynamicLinqCustomTypeProviderTests",
      "10: {",
      "11:     private readonly DefaultDynamicLinqCustomTypeProvider _sut;",
      "13:     public DefaultDynamicLinqCustomTypeProviderTests()",
      "14:     {",
      "16:     }",
      "18:     [Fact]",
      "",
      "[Removed Lines]",
      "15:         _sut = new DefaultDynamicLinqCustomTypeProvider(ParsingConfig.Default);",
      "",
      "[Added Lines]",
      "12:     private readonly IList<Type> _additionalTypes = new List<Type>",
      "13:     {",
      "14:         typeof(DirectoryInfo),",
      "15:         typeof(DefaultDynamicLinqCustomTypeProviderTests)",
      "16:     };",
      "22:         _sut = new DefaultDynamicLinqCustomTypeProvider(ParsingConfig.Default, _additionalTypes);",
      "",
      "---------------"
    ],
    "test/System.Linq.Dynamic.Core.Tests/DynamicClassTest.cs||test/System.Linq.Dynamic.Core.Tests/DynamicClassTest.cs": [
      "File: test/System.Linq.Dynamic.Core.Tests/DynamicClassTest.cs -> test/System.Linq.Dynamic.Core.Tests/DynamicClassTest.cs",
      "--- Hunk 1 ---",
      "[Context before]",
      "281:         isValid.Should().BeFalse(); // This should actually be true, but fails. For solution see Issue593_Solution1 and Issue593_Solution2.",
      "282:     }",
      "285:     public void DynamicClassArray_Issue593_Solution1()",
      "286:     {",
      "",
      "[Removed Lines]",
      "284:     [SkipIfGitHubActions]",
      "",
      "[Added Lines]",
      "285:     [Fact(Skip = \"867\")]",
      "",
      "---------------"
    ],
    "test/System.Linq.Dynamic.Core.Tests/DynamicExpressionParserTests.cs||test/System.Linq.Dynamic.Core.Tests/DynamicExpressionParserTests.cs": [
      "File: test/System.Linq.Dynamic.Core.Tests/DynamicExpressionParserTests.cs -> test/System.Linq.Dynamic.Core.Tests/DynamicExpressionParserTests.cs",
      "--- Hunk 1 ---",
      "[Context before]",
      "1058:         Assert.Equal(expectedRightValue, rightValue);",
      "1059:     }",
      "1062:     public void DynamicExpressionParser_ParseLambda_TupleToStringMethodCall_ReturnsStringLambdaExpression()",
      "1063:     {",
      "1064:         var expression = DynamicExpressionParser.ParseLambda(",
      "",
      "[Removed Lines]",
      "1061:     [Fact]",
      "",
      "[Added Lines]",
      "1061:     [Fact(Skip = \"867\")]",
      "",
      "---------------"
    ],
    "test/System.Linq.Dynamic.Core.Tests/Entities/Worker.cs||test/System.Linq.Dynamic.Core.Tests/Entities/Worker.cs": [
      "File: test/System.Linq.Dynamic.Core.Tests/Entities/Worker.cs -> test/System.Linq.Dynamic.Core.Tests/Entities/Worker.cs",
      "--- Hunk 1 ---",
      "[Context before]",
      "2: {",
      "3:     public class Worker : BaseEmployee",
      "4:     {",
      "5:         public string Other { get; set; }",
      "",
      "[Removed Lines]",
      "1: \ufeffnamespace System.Linq.Dynamic.Core.Tests.Entities",
      "",
      "[Added Lines]",
      "1: \ufeffusing System.Linq.Dynamic.Core.CustomTypeProviders;",
      "3: namespace System.Linq.Dynamic.Core.Tests.Entities",
      "5:     [DynamicLinqType]",
      "",
      "---------------"
    ],
    "test/System.Linq.Dynamic.Core.Tests/ExpressionTests.cs||test/System.Linq.Dynamic.Core.Tests/ExpressionTests.cs": [
      "File: test/System.Linq.Dynamic.Core.Tests/ExpressionTests.cs -> test/System.Linq.Dynamic.Core.Tests/ExpressionTests.cs",
      "--- Hunk 1 ---",
      "[Context before]",
      "14: namespace System.Linq.Dynamic.Core.Tests",
      "15: {",
      "16:     public enum TestEnumPublic : sbyte",
      "17:     {",
      "18:         Var1 = 0,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "16:     [DynamicLinqType]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "26:     public partial class ExpressionTests",
      "27:     {",
      "28:         public enum TestEnum2 : sbyte",
      "29:         {",
      "30:             Var1 = 0,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "29:         [DynamicLinqType]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "919:         public void ExpressionTests_Enum_Property_Equality_Using_Enum_And_FullName_Inline()",
      "920:         {",
      "922:             var qry = new List<TestEnumClass> { new TestEnumClass { B = TestEnum2.Var2 } }.AsQueryable();",
      "923:             string enumType = typeof(TestEnum2).FullName!;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "924:             var config = new ParsingConfig();",
      "925:             config.UseDefaultDynamicLinqCustomTypeProvider([typeof(TestEnum2)]);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "948:         }",
      "950:         [Fact]",
      "952:         {",
      "954:             var config = new ParsingConfig",
      "",
      "[Removed Lines]",
      "951:         public void ExpressionTests_Enum_Property_Equality_Using_Enum_Name_Inline_Should_Throw_Exception()",
      "",
      "[Added Lines]",
      "956:         public void ExpressionTests_Enum_Property_Equality_Using_Enum_Name_Inline_ShouldBeOk()",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "962:             Action a = () => qry.Where(config, $\"{enumType}.Var2 == it.B\").ToDynamicArray();",
      "966:         }",
      "968:         [Fact]",
      "",
      "[Removed Lines]",
      "965:             a.Should().Throw<Exception>();",
      "",
      "[Added Lines]",
      "970:             a.Should().NotThrow();",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1031:         [Fact]",
      "1032:         public void ExpressionTests_Enum_MoreTests()",
      "1033:         {",
      "1037:             var lst = new List<TestEnum> { TestEnum.Var1, TestEnum.Var2, TestEnum.Var3, TestEnum.Var4, TestEnum.Var5, TestEnum.Var6 };",
      "",
      "[Removed Lines]",
      "1034:             var config = new ParsingConfig();",
      "",
      "[Added Lines]",
      "1039:             var config = new ParsingConfig",
      "1040:             {",
      "1041:                 ResolveTypesBySimpleName = true",
      "1042:             };",
      "",
      "---------------"
    ],
    "test/System.Linq.Dynamic.Core.Tests/Helpers/Models/AppSettings.cs||test/System.Linq.Dynamic.Core.Tests/Helpers/Models/AppSettings.cs": [
      "File: test/System.Linq.Dynamic.Core.Tests/Helpers/Models/AppSettings.cs -> test/System.Linq.Dynamic.Core.Tests/Helpers/Models/AppSettings.cs",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: \ufeffusing System.Collections.Generic;",
      "2: using System.Linq.Dynamic.Core.CustomTypeProviders;",
      "4: namespace System.Linq.Dynamic.Core.Tests.Helpers.Models",
      "5: {",
      "6:     public static class AppSettings",
      "7:     {",
      "8:         public static Dictionary<string, string> SettingsProp { get; } = new()",
      "9:         {",
      "10:             { \"jwt\", \"test\" }",
      "11:         };",
      "13:         public static Dictionary<string, string> SettingsField = new()",
      "14:         {",
      "15:             { \"jwt\", \"test\" }",
      "16:         };",
      "17:     }",
      "19:     [DynamicLinqType]",
      "20:     public static class AppSettings2",
      "21:     {",
      "22:         public static Dictionary<string, string> SettingsProp { get; } = new()",
      "23:         {",
      "24:             { \"jwt\", \"test\" }",
      "25:         };",
      "27:         public static Dictionary<string, string> SettingsField = new()",
      "28:         {",
      "29:             { \"jwt\", \"test\" }",
      "30:         };",
      "31:     }",
      "33:     public class AppSettings3",
      "34:     {",
      "35:         public static Dictionary<string, string> SettingsProp { get; } = new()",
      "36:         {",
      "37:             { \"jwt\", \"test\" }",
      "38:         };",
      "40:         public static Dictionary<string, string> SettingsField = new()",
      "41:         {",
      "42:             { \"jwt\", \"test\" }",
      "43:         };",
      "44:     }",
      "45: }",
      "",
      "---------------"
    ],
    "test/System.Linq.Dynamic.Core.Tests/Parser/ExpressionParserTests.cs||test/System.Linq.Dynamic.Core.Tests/Parser/ExpressionParserTests.cs": [
      "File: test/System.Linq.Dynamic.Core.Tests/Parser/ExpressionParserTests.cs -> test/System.Linq.Dynamic.Core.Tests/Parser/ExpressionParserTests.cs",
      "--- Hunk 1 ---",
      "[Context before]",
      "346:     [Theory]",
      "347:     [InlineData(\"it.MainCompany.Name != null\", \"(company.MainCompany.Name != null)\")]",
      "348:     [InlineData(\"@MainCompany.Companies.Count() > 0\", \"(company.MainCompany.Companies.Count() > 0)\")]",
      "350:     [InlineData(\"MainCompany.Name\", \"company.MainCompany.Name\")]",
      "351:     [InlineData(\"Name\", \"company.Name\")]",
      "352:     [InlineData(\"company.Name\", \"company.Name\")]",
      "",
      "[Removed Lines]",
      "349:     [InlineData(\"Company.Equals(null, null)\", \"Equals(null, null)\")]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "test/System.Linq.Dynamic.Core.Tests/Parser/MethodFinderTest.cs||test/System.Linq.Dynamic.Core.Tests/Parser/MethodFinderTest.cs": [
      "File: test/System.Linq.Dynamic.Core.Tests/Parser/MethodFinderTest.cs -> test/System.Linq.Dynamic.Core.Tests/Parser/MethodFinderTest.cs",
      "--- Hunk 1 ---",
      "[Context before]",
      "8: public class MethodFinderTest",
      "9: {",
      "11:     public void MethodsOfDynamicLinqAndSystemLinqShouldBeEqual()",
      "12:     {",
      "13:         Expression<Func<int?, string?>> expr = x => x.ToString();",
      "15:         var selector = \"ToString()\";",
      "16:         var prm = Parameter(typeof(int?));",
      "18:         var expr1 = parser.Parse(null);",
      "20:         Assert.Equal(((MethodCallExpression)expr.Body).Method.DeclaringType, ((MethodCallExpression)expr1).Method.DeclaringType);",
      "",
      "[Removed Lines]",
      "10:     [Fact]",
      "17:         var parser = new ExpressionParser(new[] { prm }, selector, new object[] { }, ParsingConfig.Default);",
      "",
      "[Added Lines]",
      "10:     [Fact(Skip = \"867\")]",
      "17:         var parser = new ExpressionParser([prm], selector, [], ParsingConfig.Default);",
      "",
      "---------------"
    ],
    "test/System.Linq.Dynamic.Core.Tests/QueryableTests.Is,OfType,As,Cast.cs||test/System.Linq.Dynamic.Core.Tests/QueryableTests.Is,OfType,As,Cast.cs": [
      "File: test/System.Linq.Dynamic.Core.Tests/QueryableTests.Is,OfType,As,Cast.cs -> test/System.Linq.Dynamic.Core.Tests/QueryableTests.Is,OfType,As,Cast.cs",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: \ufeffusing System.Collections.Generic;",
      "2: using System.Linq.Dynamic.Core.Exceptions;",
      "3: using System.Linq.Dynamic.Core.Tests.Entities;",
      "4: using FluentAssertions;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2: using System.Linq.Dynamic.Core.CustomTypeProviders;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "99:         internal class Base { }",
      "101:         internal class DerivedA : Base { }",
      "103:         internal class DerivedB : Base { }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "102:         [DynamicLinqType]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "294:             countAsDynamic.Should().Be(count);",
      "295:         }",
      "298:         {",
      "299:             None = 0,",
      "",
      "[Removed Lines]",
      "297:         public enum TestEnum",
      "",
      "[Added Lines]",
      "299:         [DynamicLinqType]",
      "300:         public enum TestEnumForThisTest",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "305:         public void As_Dynamic_ActingOnProperty_NullableEnum()",
      "306:         {",
      "309:             var qry = new[]",
      "310:             {",
      "312:             }.AsQueryable();",
      "",
      "[Removed Lines]",
      "308:             var nullableEnumType = $\"{typeof(TestEnum).FullName}?\";",
      "311:                 new { Value = TestEnum.X }",
      "",
      "[Added Lines]",
      "311:             var nullableEnumType = $\"{typeof(TestEnumForThisTest).FullName}?\";",
      "314:                 new { Value = TestEnumForThisTest.X }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "365:             countAsDynamic.Should().Be(1);",
      "366:         }",
      "368:         public class AS_A { }",
      "369:         public class AS_B : AS_A",
      "370:         {",
      "371:             public string MyProperty { get; set; }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "371:         [DynamicLinqType]",
      "374:         [DynamicLinqType]",
      "",
      "---------------"
    ],
    "test/System.Linq.Dynamic.Core.Tests/QueryableTests.Select.cs||test/System.Linq.Dynamic.Core.Tests/QueryableTests.Select.cs": [
      "File: test/System.Linq.Dynamic.Core.Tests/QueryableTests.Select.cs -> test/System.Linq.Dynamic.Core.Tests/QueryableTests.Select.cs",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: \ufeffusing System.Collections;",
      "2: using System.Collections.Generic;",
      "3: using System.IO;",
      "4: using System.Linq.Dynamic.Core.Exceptions;",
      "5: using System.Linq.Dynamic.Core.Tests.Helpers.Models;",
      "6: using FluentAssertions;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4: using System.Linq.Dynamic.Core.CustomTypeProviders;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "19: {",
      "20:     public partial class QueryableTests",
      "21:     {",
      "22:         public class Example",
      "23:         {",
      "24:             public int Field;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "23:         [DynamicLinqType]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "29:             public int Sec { get; set; }",
      "30:             public int? SecNull { get; set; }",
      "32:             public class NestedDto",
      "33:             {",
      "34:                 public string Name { get; set; }",
      "36:                 public class NestedDto2",
      "37:                 {",
      "38:                     public string Name2 { get; set; }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "34:             [DynamicLinqType]",
      "39:                 [DynamicLinqType]",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "324:         public void Select_Dynamic_SystemType1()",
      "325:         {",
      "328:             var queryable = new[] { \"test\" }.AsQueryable();",
      "",
      "[Removed Lines]",
      "327:             var config = new ParsingConfig { AllowNewToEvaluateAnyType = true };",
      "",
      "[Added Lines]",
      "331:             var config = new ParsingConfig",
      "332:             {",
      "333:                 AllowNewToEvaluateAnyType = true",
      "334:             };",
      "335:             config.UseDefaultDynamicLinqCustomTypeProvider([typeof(DirectoryInfo)]);",
      "",
      "---------------"
    ],
    "test/System.Linq.Dynamic.Core.Tests/SecurityTests.cs||test/System.Linq.Dynamic.Core.Tests/SecurityTests.cs": [
      "File: test/System.Linq.Dynamic.Core.Tests/SecurityTests.cs -> test/System.Linq.Dynamic.Core.Tests/SecurityTests.cs",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: \ufeffusing System.IO;",
      "2: using System.Linq.Dynamic.Core.Exceptions;",
      "4: using System.Reflection;",
      "5: using FluentAssertions;",
      "6: using Xunit;",
      "",
      "[Removed Lines]",
      "3: using System.Net;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "26:     {",
      "28:         var baseQuery = new[] { 1, 2, 3 }.AsQueryable();",
      "32:         Action action = () => baseQuery.OrderBy(predicate);",
      "36:     }",
      "38:     [Fact]",
      "",
      "[Removed Lines]",
      "29:         string predicate = \"\\\"\\\".GetType().Assembly.DefinedTypes.Where(it.name == \\\"Assembly\\\").First().DeclaredMethods.Where(it.Name == \\\"GetName\\\").First().Invoke(\\\"\\\".GetType().Assembly, new Object[] {} ).Name.ToString() != \\\"Test\\\"\";",
      "35:         action.Should().Throw<ParseException>().WithMessage(\"Methods on type 'MethodBase' are not accessible\");",
      "",
      "[Added Lines]",
      "28:         var predicate = \"\\\"\\\".GetType().Assembly.DefinedTypes.Where(it.name == \\\"Assembly\\\").First().DeclaredMethods.Where(it.Name == \\\"GetName\\\").First().Invoke(\\\"\\\".GetType().Assembly, new Object[] {} ).Name.ToString() != \\\"Test\\\"\";",
      "34:         action.Should().Throw<ParseException>().WithMessage(\"Methods on type 'Object' are not accessible\");",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "42:         var messages = new[]",
      "43:         {",
      "46:         }.AsQueryable();",
      "48:         Action action = () => messages.Where(",
      "",
      "[Removed Lines]",
      "44:             new Message(\"Alice\", \"Bob\"),",
      "45:             new Message(\"Bob\", \"Alice\")",
      "",
      "[Added Lines]",
      "43:             new Message(\"Alice\", \"Bob\")",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "50:         );",
      "54:     }",
      "56:     [Theory]",
      "",
      "[Removed Lines]",
      "53:         action.Should().Throw<ParseException>().WithMessage($\"Methods on type 'Assembly' are not accessible\");",
      "",
      "[Added Lines]",
      "51:         action.Should().Throw<ParseException>().WithMessage($\"Methods on type 'Object' are not accessible\");",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "65:         action.Should().Throw<ParseException>().WithMessage($\"Methods on type '{type}' are not accessible\");",
      "66:     }",
      "67: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "66:     [Theory]",
      "67:     [InlineData(\"c => string.Join(\\\"_\\\", c.GetType().Assembly.DefinedTypes.SelectMany(t => t.CustomAttributes).Select(a => a.AttributeType).Select(t => t.AssemblyQualifiedName))\")]",
      "68:     [InlineData(\"c => string.Join(\\\"_\\\", c.GetType().Assembly.DefinedTypes.Select(t => t.BaseType).Select(t => t.AssemblyQualifiedName))\")]",
      "69:     [InlineData(\"c => string.Join(\\\"_\\\", c.GetType().Assembly.FullName))\")]",
      "70:     public void UsingSystemReflectionAssembly_ThrowsException(string selector)",
      "71:     {",
      "73:         var queryable = new[]",
      "74:         {",
      "75:             new Message(\"Alice\", \"Bob\")",
      "76:         }.AsQueryable();",
      "79:         Action action = () => queryable.Select(selector);",
      "82:         action.Should().Throw<ParseException>().WithMessage(\"Methods on type 'Object' are not accessible\");",
      "83:     }",
      "85:     [Theory]",
      "86:     [InlineData(\"System.Linq.Dynamic.Core.Tests.Helpers.Models.AppSettings.SettingsProp[\\\"jwt\\\"]\")]",
      "87:     [InlineData(\"System.Linq.Dynamic.Core.Tests.Helpers.Models.AppSettings.SettingsField[\\\"jwt\\\"]\")]",
      "88:     [InlineData(\"c => System.Linq.Dynamic.Core.Tests.Helpers.Models.AppSettings.SettingsProp[\\\"jwt\\\"]\")]",
      "89:     [InlineData(\"c => System.Linq.Dynamic.Core.Tests.Helpers.Models.AppSettings.SettingsField[\\\"jwt\\\"]\")]",
      "90:     public void UsingStaticClassAsType_ThrowsException(string selector)",
      "91:     {",
      "93:         var queryable = new[]",
      "94:         {",
      "95:             new Message(\"Alice\", \"Bob\")",
      "96:         }.AsQueryable();",
      "99:         Action action = () => queryable.Select(selector);",
      "102:         action.Should().Throw<ParseException>().WithMessage(\"Type 'System.Linq.Dynamic.Core.Tests.Helpers.Models.AppSettings' not found\");",
      "103:     }",
      "105:     [Theory]",
      "106:     [InlineData(\"new System.Linq.Dynamic.Core.Tests.Helpers.Models.AppSettings3().SettingsProp[\\\"jwt\\\"]\")]",
      "107:     [InlineData(\"new System.Linq.Dynamic.Core.Tests.Helpers.Models.AppSettings3().SettingsField[\\\"jwt\\\"]\")]",
      "108:     [InlineData(\"c => new System.Linq.Dynamic.Core.Tests.Helpers.Models.AppSettings3().SettingsProp[\\\"jwt\\\"]\")]",
      "109:     [InlineData(\"c => new System.Linq.Dynamic.Core.Tests.Helpers.Models.AppSettings3().SettingsField[\\\"jwt\\\"]\")]",
      "110:     public void UsingClassAsType_ThrowsException(string selector)",
      "111:     {",
      "113:         var queryable = new[]",
      "114:         {",
      "115:             new Message(\"Alice\", \"Bob\")",
      "116:         }.AsQueryable();",
      "119:         Action action = () => queryable.Select(selector);",
      "122:         action.Should().Throw<ParseException>().WithMessage(\"Type 'System.Linq.Dynamic.Core.Tests.Helpers.Models.AppSettings3' not found\");",
      "123:     }",
      "125:     [Theory]",
      "126:     [InlineData(\"System.Linq.Dynamic.Core.Tests.Helpers.Models.AppSettings.SettingsProp[\\\"jwt\\\"]\")]",
      "127:     [InlineData(\"System.Linq.Dynamic.Core.Tests.Helpers.Models.AppSettings.SettingsField[\\\"jwt\\\"]\")]",
      "128:     [InlineData(\"c => System.Linq.Dynamic.Core.Tests.Helpers.Models.AppSettings.SettingsProp[\\\"jwt\\\"]\")]",
      "129:     [InlineData(\"c => System.Linq.Dynamic.Core.Tests.Helpers.Models.AppSettings.SettingsField[\\\"jwt\\\"]\")]",
      "130:     public void UsingStaticClassAsType_WhenAddedToDefaultDynamicLinqCustomTypeProvider_ShouldBeOk(string selector)",
      "131:     {",
      "133:         var config = new ParsingConfig();",
      "134:         config.UseDefaultDynamicLinqCustomTypeProvider([typeof(Helpers.Models.AppSettings), typeof(Helpers.Models.AppSettings3)]);",
      "136:         var queryable = new[]",
      "137:         {",
      "138:             new Message(\"Alice\", \"Bob\")",
      "139:         }.AsQueryable();",
      "142:         Action action = () => queryable.Select(config, selector);",
      "145:         action.Should().NotThrow();",
      "146:     }",
      "148:     [Theory(Skip = \"873\")]",
      "149:     [InlineData(\"new System.Linq.Dynamic.Core.Tests.Helpers.Models.AppSettings3()\", \"SettingsProp[\\\"jwt\\\"]\")]",
      "150:     [InlineData(\"new System.Linq.Dynamic.Core.Tests.Helpers.Models.AppSettings3()\", \"SettingsField[\\\"jwt\\\"]\")]",
      "151:     [InlineData(\"c => new System.Linq.Dynamic.Core.Tests.Helpers.Models.AppSettings3()\", \"SettingsProp[\\\"jwt\\\"]\")]",
      "152:     [InlineData(\"c => new System.Linq.Dynamic.Core.Tests.Helpers.Models.AppSettings3()\", \"SettingsField[\\\"jwt\\\"]\")]",
      "153:     public void UsingClassAsType_WhenAddedToDefaultDynamicLinqCustomTypeProvider_ShouldBeOk(string selector1, string selector2)",
      "154:     {",
      "156:         var config = new ParsingConfig();",
      "157:         config.UseDefaultDynamicLinqCustomTypeProvider([typeof(Helpers.Models.AppSettings), typeof(Helpers.Models.AppSettings3)]);",
      "159:         var queryable = new[]",
      "160:         {",
      "161:             new Message(\"Alice\", \"Bob\")",
      "162:         }.AsQueryable();",
      "165:         Action action = () => queryable.Select(config, selector1).Select(config, selector2);",
      "168:         action.Should().NotThrow();",
      "169:     }",
      "171:     [Theory]",
      "172:     [InlineData(\"System.Linq.Dynamic.Core.Tests.Helpers.Models.AppSettings2.SettingsProp[\\\"jwt\\\"]\")]",
      "173:     [InlineData(\"System.Linq.Dynamic.Core.Tests.Helpers.Models.AppSettings2.SettingsField[\\\"jwt\\\"]\")]",
      "174:     [InlineData(\"c => System.Linq.Dynamic.Core.Tests.Helpers.Models.AppSettings2.SettingsProp[\\\"jwt\\\"]\")]",
      "175:     [InlineData(\"c => System.Linq.Dynamic.Core.Tests.Helpers.Models.AppSettings2.SettingsField[\\\"jwt\\\"]\")]",
      "176:     public void UsingStaticClassWithDynamicTypeAttribute_ShouldBeOk(string selector)",
      "177:     {",
      "179:         var queryable = new[]",
      "180:         {",
      "181:             new Message(\"Alice\", \"Bob\")",
      "182:         }.AsQueryable();",
      "185:         Action action = () => queryable.Select(selector);",
      "188:         action.Should().NotThrow();",
      "189:     }",
      "",
      "---------------"
    ],
    "test/System.Linq.Dynamic.Core.Tests/TestClasses/TestCustomTypeProvider.cs||test/System.Linq.Dynamic.Core.Tests/TestClasses/TestCustomTypeProvider.cs": [
      "File: test/System.Linq.Dynamic.Core.Tests/TestClasses/TestCustomTypeProvider.cs -> test/System.Linq.Dynamic.Core.Tests/TestClasses/TestCustomTypeProvider.cs",
      "--- Hunk 1 ---",
      "[Context before]",
      "9:     {",
      "10:         private HashSet<Type>? _customTypes;",
      "12:         public virtual HashSet<Type> GetCustomTypes()",
      "13:         {",
      "14:             if (_customTypes != null)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "12:         public TestCustomTypeProvider() : base([])",
      "13:         {",
      "14:         }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "16:                 return _customTypes;",
      "17:             }",
      "20:             {",
      "21:                 typeof(CustomClassWithStaticMethod),",
      "22:                 typeof(StaticHelper),",
      "23:                 typeof(StaticHelper.Nested)",
      "24:             };",
      "25:             return _customTypes;",
      "26:         }",
      "",
      "[Removed Lines]",
      "19:             _customTypes = new HashSet<Type>(FindTypesMarkedWithDynamicLinqTypeAttribute(new[] { GetType().GetTypeInfo().Assembly }))",
      "",
      "[Added Lines]",
      "23:             _customTypes = new HashSet<Type>(FindTypesMarkedWithDynamicLinqTypeAttribute([GetType().GetTypeInfo().Assembly]))",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "852434ce03e318a45b4fb5fd0a656e7d9bab989c",
      "candidate_info": {
        "commit_hash": "852434ce03e318a45b4fb5fd0a656e7d9bab989c",
        "repo": "zzzprojects/System.Linq.Dynamic.Core",
        "commit_url": "https://github.com/zzzprojects/System.Linq.Dynamic.Core/commit/852434ce03e318a45b4fb5fd0a656e7d9bab989c",
        "files": [
          "System.Linq.Dynamic.Core.sln",
          "src-console/ConsoleAppEF6_InMemory/ConsoleApp_net6.0_EF6_InMemory.csproj",
          "src-console/ConsoleAppEF6_Sqlite/ConsoleApp_net6.0_EF6_Sqlite.csproj",
          "src-console/ConsoleApp_net452_EF6/Program.cs",
          "src-console/Demo.Host/Demo.Host.csproj",
          "src-console/Demo.Host/Program.cs",
          "src-console/Demo.Plugin/Demo.Plugin.csproj",
          "src-console/Demo.Plugin/MyPlugin.cs",
          "src-console/build.ps1",
          "src/Directory.Build.props",
          "src/EntityFramework.DynamicLinq/EFType.cs",
          "src/EntityFramework.DynamicLinq/EntityFramework.DynamicLinq.csproj",
          "src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore2/Microsoft.EntityFrameworkCore.DynamicLinq.AppVeyor.csproj",
          "src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore2/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore2.csproj",
          "src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore3/EFCoreType.cs",
          "src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore3/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore3.csproj",
          "src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore5/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore5.csproj",
          "src/System.Linq.Dynamic.Core/CustomTypeProviders/DefaultDynamicLinqCustomTypeProvider.cs",
          "src/System.Linq.Dynamic.Core/DefaultAssemblyHelper.cs",
          "src/System.Linq.Dynamic.Core/Parser/KeywordsHelper.cs",
          "src/System.Linq.Dynamic.Core/Parser/PredefinedTypesHelper.cs",
          "src/System.Linq.Dynamic.Core/Parser/SupportedMethods/MethodFinder.cs",
          "src/System.Linq.Dynamic.Core/ParsingConfig.cs",
          "src/Z.EntityFramework.Classic.DynamicLinq/Z.EntityFramework.Classic.DynamicLinq.csproj",
          "test/Directory.Build.props",
          "test/System.Linq.Dynamic.Core.Tests/DefaultDynamicLinqCustomTypeProviderTests.cs",
          "test/System.Linq.Dynamic.Core.Tests/DynamicExpressionParserTests.cs",
          "test/System.Linq.Dynamic.Core.Tests/ExpressionTests.MethodCall.cs",
          "test/System.Linq.Dynamic.Core.Tests/System.Linq.Dynamic.Core.Tests.csproj"
        ],
        "message": "PredefinedTypesHelper: Fix loading types from System.Data.Entity and EntityFramework (#807)\n\n* PredefinedTypesHelper: Fix loading types from System.Data.Entity and EntityFramework\n\n* .\n\n* type\n\n* Add Demo\n\n* .\n\n* .\n\n* bs\n\n* 12\n\n* 12test\n\n* .\n\n* .\n\n* fs\n\n* .",
        "before_after_code_files": [
          "System.Linq.Dynamic.Core.sln||System.Linq.Dynamic.Core.sln",
          "src-console/ConsoleAppEF6_InMemory/ConsoleApp_net6.0_EF6_InMemory.csproj||src-console/ConsoleAppEF6_InMemory/ConsoleApp_net6.0_EF6_InMemory.csproj",
          "src-console/ConsoleAppEF6_Sqlite/ConsoleApp_net6.0_EF6_Sqlite.csproj||src-console/ConsoleAppEF6_Sqlite/ConsoleApp_net6.0_EF6_Sqlite.csproj",
          "src-console/ConsoleApp_net452_EF6/Program.cs||src-console/ConsoleApp_net452_EF6/Program.cs",
          "src-console/Demo.Host/Demo.Host.csproj||src-console/Demo.Host/Demo.Host.csproj",
          "src-console/Demo.Host/Program.cs||src-console/Demo.Host/Program.cs",
          "src-console/Demo.Plugin/Demo.Plugin.csproj||src-console/Demo.Plugin/Demo.Plugin.csproj",
          "src-console/Demo.Plugin/MyPlugin.cs||src-console/Demo.Plugin/MyPlugin.cs",
          "src-console/build.ps1||src-console/build.ps1",
          "src/Directory.Build.props||src/Directory.Build.props",
          "src/EntityFramework.DynamicLinq/EFType.cs||src/EntityFramework.DynamicLinq/EFType.cs",
          "src/EntityFramework.DynamicLinq/EntityFramework.DynamicLinq.csproj||src/EntityFramework.DynamicLinq/EntityFramework.DynamicLinq.csproj",
          "src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore2/Microsoft.EntityFrameworkCore.DynamicLinq.AppVeyor.csproj||src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore2/Microsoft.EntityFrameworkCore.DynamicLinq.AppVeyor.csproj",
          "src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore2/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore2.csproj||src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore2/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore2.csproj",
          "src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore3/EFCoreType.cs||src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore3/EFCoreType.cs",
          "src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore3/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore3.csproj||src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore3/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore3.csproj",
          "src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore5/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore5.csproj||src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore5/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore5.csproj",
          "src/System.Linq.Dynamic.Core/CustomTypeProviders/DefaultDynamicLinqCustomTypeProvider.cs||src/System.Linq.Dynamic.Core/CustomTypeProviders/DefaultDynamicLinqCustomTypeProvider.cs",
          "src/System.Linq.Dynamic.Core/DefaultAssemblyHelper.cs||src/System.Linq.Dynamic.Core/DefaultAssemblyHelper.cs",
          "src/System.Linq.Dynamic.Core/Parser/KeywordsHelper.cs||src/System.Linq.Dynamic.Core/Parser/KeywordsHelper.cs",
          "src/System.Linq.Dynamic.Core/Parser/PredefinedTypesHelper.cs||src/System.Linq.Dynamic.Core/Parser/PredefinedTypesHelper.cs",
          "src/System.Linq.Dynamic.Core/Parser/SupportedMethods/MethodFinder.cs||src/System.Linq.Dynamic.Core/Parser/SupportedMethods/MethodFinder.cs",
          "src/System.Linq.Dynamic.Core/ParsingConfig.cs||src/System.Linq.Dynamic.Core/ParsingConfig.cs",
          "src/Z.EntityFramework.Classic.DynamicLinq/Z.EntityFramework.Classic.DynamicLinq.csproj||src/Z.EntityFramework.Classic.DynamicLinq/Z.EntityFramework.Classic.DynamicLinq.csproj",
          "test/Directory.Build.props||test/Directory.Build.props",
          "test/System.Linq.Dynamic.Core.Tests/DefaultDynamicLinqCustomTypeProviderTests.cs||test/System.Linq.Dynamic.Core.Tests/DefaultDynamicLinqCustomTypeProviderTests.cs",
          "test/System.Linq.Dynamic.Core.Tests/DynamicExpressionParserTests.cs||test/System.Linq.Dynamic.Core.Tests/DynamicExpressionParserTests.cs",
          "test/System.Linq.Dynamic.Core.Tests/ExpressionTests.MethodCall.cs||test/System.Linq.Dynamic.Core.Tests/ExpressionTests.MethodCall.cs",
          "test/System.Linq.Dynamic.Core.Tests/System.Linq.Dynamic.Core.Tests.csproj||test/System.Linq.Dynamic.Core.Tests/System.Linq.Dynamic.Core.Tests.csproj"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/System.Linq.Dynamic.Core/CustomTypeProviders/DefaultDynamicLinqCustomTypeProvider.cs||src/System.Linq.Dynamic.Core/CustomTypeProviders/DefaultDynamicLinqCustomTypeProvider.cs",
            "src/System.Linq.Dynamic.Core/Parser/PredefinedTypesHelper.cs||src/System.Linq.Dynamic.Core/Parser/PredefinedTypesHelper.cs",
            "src/System.Linq.Dynamic.Core/ParsingConfig.cs||src/System.Linq.Dynamic.Core/ParsingConfig.cs",
            "test/System.Linq.Dynamic.Core.Tests/DynamicExpressionParserTests.cs||test/System.Linq.Dynamic.Core.Tests/DynamicExpressionParserTests.cs"
          ],
          "candidate": [
            "src/System.Linq.Dynamic.Core/CustomTypeProviders/DefaultDynamicLinqCustomTypeProvider.cs||src/System.Linq.Dynamic.Core/CustomTypeProviders/DefaultDynamicLinqCustomTypeProvider.cs",
            "src/System.Linq.Dynamic.Core/Parser/PredefinedTypesHelper.cs||src/System.Linq.Dynamic.Core/Parser/PredefinedTypesHelper.cs",
            "src/System.Linq.Dynamic.Core/ParsingConfig.cs||src/System.Linq.Dynamic.Core/ParsingConfig.cs",
            "test/System.Linq.Dynamic.Core.Tests/DynamicExpressionParserTests.cs||test/System.Linq.Dynamic.Core.Tests/DynamicExpressionParserTests.cs"
          ]
        }
      },
      "candidate_diff": {
        "System.Linq.Dynamic.Core.sln||System.Linq.Dynamic.Core.sln": [
          "File: System.Linq.Dynamic.Core.sln -> System.Linq.Dynamic.Core.sln",
          "--- Hunk 1 ---",
          "[Context before]",
          "151: EndProject",
          "152: Project(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"CodeFirst.ConsoleApp8\", \"src-examples\\CodeFirst.ConsoleApp8\\CodeFirst.ConsoleApp8.csproj\", \"{68C7FF71-54F6-4D68-B419-65D1B10206D4}\"",
          "153: EndProject",
          "154: Global",
          "155:  GlobalSection(SolutionConfigurationPlatforms) = preSolution",
          "156:   Debug|Any CPU = Debug|Any CPU",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "154: Project(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Demo.Host\", \"src-console\\Demo.Host\\Demo.Host.csproj\", \"{D8368319-F370-4071-9411-A3DADB234330}\"",
          "155: EndProject",
          "156: Project(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Demo.Plugin\", \"src-console\\Demo.Plugin\\Demo.Plugin.csproj\", \"{B01B327C-FC68-49B6-BDE3-A13D0C66DF5C}\"",
          "157: EndProject",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "869:   {51074A4C-15C2-4E72-81F2-2FC53903553B}.Release|x64.Build.0 = Release|Any CPU",
          "870:   {51074A4C-15C2-4E72-81F2-2FC53903553B}.Release|x86.ActiveCfg = Release|Any CPU",
          "871:   {51074A4C-15C2-4E72-81F2-2FC53903553B}.Release|x86.Build.0 = Release|Any CPU",
          "872:   {E36D1A08-F3ED-48C7-9DBF-8F625974A6C4}.Debug|Any CPU.ActiveCfg = Debug|Any CPU",
          "873:   {E36D1A08-F3ED-48C7-9DBF-8F625974A6C4}.Debug|Any CPU.Build.0 = Debug|Any CPU",
          "874:   {E36D1A08-F3ED-48C7-9DBF-8F625974A6C4}.Debug|ARM.ActiveCfg = Debug|Any CPU",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "876:   {CA03FD55-9DAB-4827-9A35-A96D3804B311}.Debug|Any CPU.ActiveCfg = Debug|Any CPU",
          "877:   {CA03FD55-9DAB-4827-9A35-A96D3804B311}.Debug|Any CPU.Build.0 = Debug|Any CPU",
          "878:   {CA03FD55-9DAB-4827-9A35-A96D3804B311}.Debug|ARM.ActiveCfg = Debug|Any CPU",
          "879:   {CA03FD55-9DAB-4827-9A35-A96D3804B311}.Debug|ARM.Build.0 = Debug|Any CPU",
          "880:   {CA03FD55-9DAB-4827-9A35-A96D3804B311}.Debug|x64.ActiveCfg = Debug|Any CPU",
          "881:   {CA03FD55-9DAB-4827-9A35-A96D3804B311}.Debug|x64.Build.0 = Debug|Any CPU",
          "882:   {CA03FD55-9DAB-4827-9A35-A96D3804B311}.Debug|x86.ActiveCfg = Debug|Any CPU",
          "883:   {CA03FD55-9DAB-4827-9A35-A96D3804B311}.Debug|x86.Build.0 = Debug|Any CPU",
          "884:   {CA03FD55-9DAB-4827-9A35-A96D3804B311}.Release|Any CPU.ActiveCfg = Release|Any CPU",
          "885:   {CA03FD55-9DAB-4827-9A35-A96D3804B311}.Release|Any CPU.Build.0 = Release|Any CPU",
          "886:   {CA03FD55-9DAB-4827-9A35-A96D3804B311}.Release|ARM.ActiveCfg = Release|Any CPU",
          "887:   {CA03FD55-9DAB-4827-9A35-A96D3804B311}.Release|ARM.Build.0 = Release|Any CPU",
          "888:   {CA03FD55-9DAB-4827-9A35-A96D3804B311}.Release|x64.ActiveCfg = Release|Any CPU",
          "889:   {CA03FD55-9DAB-4827-9A35-A96D3804B311}.Release|x64.Build.0 = Release|Any CPU",
          "890:   {CA03FD55-9DAB-4827-9A35-A96D3804B311}.Release|x86.ActiveCfg = Release|Any CPU",
          "891:   {CA03FD55-9DAB-4827-9A35-A96D3804B311}.Release|x86.Build.0 = Release|Any CPU",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "917:   {68C7FF71-54F6-4D68-B419-65D1B10206D4}.Release|x64.Build.0 = Release|Any CPU",
          "918:   {68C7FF71-54F6-4D68-B419-65D1B10206D4}.Release|x86.ActiveCfg = Release|Any CPU",
          "919:   {68C7FF71-54F6-4D68-B419-65D1B10206D4}.Release|x86.Build.0 = Release|Any CPU",
          "936:  EndGlobalSection",
          "937:  GlobalSection(SolutionProperties) = preSolution",
          "938:   HideSolutionNode = FALSE",
          "",
          "[Removed Lines]",
          "920:   {CA03FD55-9DAB-4827-9A35-A96D3804B311}.Debug|Any CPU.ActiveCfg = Debug|Any CPU",
          "921:   {CA03FD55-9DAB-4827-9A35-A96D3804B311}.Debug|Any CPU.Build.0 = Debug|Any CPU",
          "922:   {CA03FD55-9DAB-4827-9A35-A96D3804B311}.Debug|ARM.ActiveCfg = Debug|Any CPU",
          "923:   {CA03FD55-9DAB-4827-9A35-A96D3804B311}.Debug|ARM.Build.0 = Debug|Any CPU",
          "924:   {CA03FD55-9DAB-4827-9A35-A96D3804B311}.Debug|x64.ActiveCfg = Debug|Any CPU",
          "925:   {CA03FD55-9DAB-4827-9A35-A96D3804B311}.Debug|x64.Build.0 = Debug|Any CPU",
          "926:   {CA03FD55-9DAB-4827-9A35-A96D3804B311}.Debug|x86.ActiveCfg = Debug|Any CPU",
          "927:   {CA03FD55-9DAB-4827-9A35-A96D3804B311}.Debug|x86.Build.0 = Debug|Any CPU",
          "928:   {CA03FD55-9DAB-4827-9A35-A96D3804B311}.Release|Any CPU.ActiveCfg = Release|Any CPU",
          "929:   {CA03FD55-9DAB-4827-9A35-A96D3804B311}.Release|Any CPU.Build.0 = Release|Any CPU",
          "930:   {CA03FD55-9DAB-4827-9A35-A96D3804B311}.Release|ARM.ActiveCfg = Release|Any CPU",
          "931:   {CA03FD55-9DAB-4827-9A35-A96D3804B311}.Release|ARM.Build.0 = Release|Any CPU",
          "932:   {CA03FD55-9DAB-4827-9A35-A96D3804B311}.Release|x64.ActiveCfg = Release|Any CPU",
          "933:   {CA03FD55-9DAB-4827-9A35-A96D3804B311}.Release|x64.Build.0 = Release|Any CPU",
          "934:   {CA03FD55-9DAB-4827-9A35-A96D3804B311}.Release|x86.ActiveCfg = Release|Any CPU",
          "935:   {CA03FD55-9DAB-4827-9A35-A96D3804B311}.Release|x86.Build.0 = Release|Any CPU",
          "",
          "[Added Lines]",
          "940:   {D8368319-F370-4071-9411-A3DADB234330}.Debug|Any CPU.ActiveCfg = Debug|Any CPU",
          "941:   {D8368319-F370-4071-9411-A3DADB234330}.Debug|Any CPU.Build.0 = Debug|Any CPU",
          "942:   {D8368319-F370-4071-9411-A3DADB234330}.Debug|ARM.ActiveCfg = Debug|Any CPU",
          "943:   {D8368319-F370-4071-9411-A3DADB234330}.Debug|ARM.Build.0 = Debug|Any CPU",
          "944:   {D8368319-F370-4071-9411-A3DADB234330}.Debug|x64.ActiveCfg = Debug|Any CPU",
          "945:   {D8368319-F370-4071-9411-A3DADB234330}.Debug|x64.Build.0 = Debug|Any CPU",
          "946:   {D8368319-F370-4071-9411-A3DADB234330}.Debug|x86.ActiveCfg = Debug|Any CPU",
          "947:   {D8368319-F370-4071-9411-A3DADB234330}.Debug|x86.Build.0 = Debug|Any CPU",
          "948:   {D8368319-F370-4071-9411-A3DADB234330}.Release|Any CPU.ActiveCfg = Release|Any CPU",
          "949:   {D8368319-F370-4071-9411-A3DADB234330}.Release|Any CPU.Build.0 = Release|Any CPU",
          "950:   {D8368319-F370-4071-9411-A3DADB234330}.Release|ARM.ActiveCfg = Release|Any CPU",
          "951:   {D8368319-F370-4071-9411-A3DADB234330}.Release|ARM.Build.0 = Release|Any CPU",
          "952:   {D8368319-F370-4071-9411-A3DADB234330}.Release|x64.ActiveCfg = Release|Any CPU",
          "953:   {D8368319-F370-4071-9411-A3DADB234330}.Release|x64.Build.0 = Release|Any CPU",
          "954:   {D8368319-F370-4071-9411-A3DADB234330}.Release|x86.ActiveCfg = Release|Any CPU",
          "955:   {D8368319-F370-4071-9411-A3DADB234330}.Release|x86.Build.0 = Release|Any CPU",
          "956:   {B01B327C-FC68-49B6-BDE3-A13D0C66DF5C}.Debug|Any CPU.ActiveCfg = Debug|Any CPU",
          "957:   {B01B327C-FC68-49B6-BDE3-A13D0C66DF5C}.Debug|Any CPU.Build.0 = Debug|Any CPU",
          "958:   {B01B327C-FC68-49B6-BDE3-A13D0C66DF5C}.Debug|ARM.ActiveCfg = Debug|Any CPU",
          "959:   {B01B327C-FC68-49B6-BDE3-A13D0C66DF5C}.Debug|ARM.Build.0 = Debug|Any CPU",
          "960:   {B01B327C-FC68-49B6-BDE3-A13D0C66DF5C}.Debug|x64.ActiveCfg = Debug|Any CPU",
          "961:   {B01B327C-FC68-49B6-BDE3-A13D0C66DF5C}.Debug|x64.Build.0 = Debug|Any CPU",
          "962:   {B01B327C-FC68-49B6-BDE3-A13D0C66DF5C}.Debug|x86.ActiveCfg = Debug|Any CPU",
          "963:   {B01B327C-FC68-49B6-BDE3-A13D0C66DF5C}.Debug|x86.Build.0 = Debug|Any CPU",
          "964:   {B01B327C-FC68-49B6-BDE3-A13D0C66DF5C}.Release|Any CPU.ActiveCfg = Release|Any CPU",
          "965:   {B01B327C-FC68-49B6-BDE3-A13D0C66DF5C}.Release|Any CPU.Build.0 = Release|Any CPU",
          "966:   {B01B327C-FC68-49B6-BDE3-A13D0C66DF5C}.Release|ARM.ActiveCfg = Release|Any CPU",
          "967:   {B01B327C-FC68-49B6-BDE3-A13D0C66DF5C}.Release|ARM.Build.0 = Release|Any CPU",
          "968:   {B01B327C-FC68-49B6-BDE3-A13D0C66DF5C}.Release|x64.ActiveCfg = Release|Any CPU",
          "969:   {B01B327C-FC68-49B6-BDE3-A13D0C66DF5C}.Release|x64.Build.0 = Release|Any CPU",
          "970:   {B01B327C-FC68-49B6-BDE3-A13D0C66DF5C}.Release|x86.ActiveCfg = Release|Any CPU",
          "971:   {B01B327C-FC68-49B6-BDE3-A13D0C66DF5C}.Release|x86.Build.0 = Release|Any CPU",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "982:   {9000129D-322D-4FE6-9C47-75464577C374} = {DBD7D9B6-FCC7-4650-91AF-E6457573A68F}",
          "983:   {ABB1BF71-8927-49BB-99F3-70BCB2CD161E} = {8463ED7E-69FB-49AE-85CF-0791AFD98E38}",
          "984:   {51074A4C-15C2-4E72-81F2-2FC53903553B} = {122BC4FA-7563-4E35-9D17-077F16F1629F}",
          "985:   {E36D1A08-F3ED-48C7-9DBF-8F625974A6C4} = {BCA2A024-9032-4E56-A6C4-17A15D921728}",
          "986:   {9E0D0994-7D84-40FF-8383-189F142FEF11} = {BCA2A024-9032-4E56-A6C4-17A15D921728}",
          "987:   {68C7FF71-54F6-4D68-B419-65D1B10206D4} = {BCA2A024-9032-4E56-A6C4-17A15D921728}",
          "989:  EndGlobalSection",
          "990:  GlobalSection(ExtensibilityGlobals) = postSolution",
          "991:   SolutionGuid = {94C56722-194E-4B8B-BC23-B3F754E89A20}",
          "",
          "[Removed Lines]",
          "988:   {CA03FD55-9DAB-4827-9A35-A96D3804B311} = {7971CAEB-B9F2-416B-966D-2D697C4C1E62}",
          "",
          "[Added Lines]",
          "1021:   {CA03FD55-9DAB-4827-9A35-A96D3804B311} = {7971CAEB-B9F2-416B-966D-2D697C4C1E62}",
          "1025:   {D8368319-F370-4071-9411-A3DADB234330} = {7971CAEB-B9F2-416B-966D-2D697C4C1E62}",
          "1026:   {B01B327C-FC68-49B6-BDE3-A13D0C66DF5C} = {7971CAEB-B9F2-416B-966D-2D697C4C1E62}",
          "",
          "---------------"
        ],
        "src-console/ConsoleAppEF6_InMemory/ConsoleApp_net6.0_EF6_InMemory.csproj||src-console/ConsoleAppEF6_InMemory/ConsoleApp_net6.0_EF6_InMemory.csproj": [
          "File: src-console/ConsoleAppEF6_InMemory/ConsoleApp_net6.0_EF6_InMemory.csproj -> src-console/ConsoleAppEF6_InMemory/ConsoleApp_net6.0_EF6_InMemory.csproj",
          "--- Hunk 1 ---",
          "[Context before]",
          "3:     <PropertyGroup>",
          "4:         <OutputType>Exe</OutputType>",
          "5:         <TargetFramework>net6.0</TargetFramework>",
          "7:         <Nullable>enable</Nullable>",
          "8:     </PropertyGroup>",
          "",
          "[Removed Lines]",
          "6:         <LangVersion>10</LangVersion>",
          "",
          "[Added Lines]",
          "6:         <LangVersion>12</LangVersion>",
          "",
          "---------------"
        ],
        "src-console/ConsoleAppEF6_Sqlite/ConsoleApp_net6.0_EF6_Sqlite.csproj||src-console/ConsoleAppEF6_Sqlite/ConsoleApp_net6.0_EF6_Sqlite.csproj": [
          "File: src-console/ConsoleAppEF6_Sqlite/ConsoleApp_net6.0_EF6_Sqlite.csproj -> src-console/ConsoleAppEF6_Sqlite/ConsoleApp_net6.0_EF6_Sqlite.csproj",
          "--- Hunk 1 ---",
          "[Context before]",
          "3:     <PropertyGroup>",
          "4:         <OutputType>Exe</OutputType>",
          "5:         <TargetFramework>net6.0</TargetFramework>",
          "7:         <Nullable>enable</Nullable>",
          "8:     </PropertyGroup>",
          "",
          "[Removed Lines]",
          "6:         <LangVersion>10</LangVersion>",
          "",
          "[Added Lines]",
          "6:         <LangVersion>12</LangVersion>",
          "",
          "---------------"
        ],
        "src-console/ConsoleApp_net452_EF6/Program.cs||src-console/ConsoleApp_net452_EF6/Program.cs": [
          "File: src-console/ConsoleApp_net452_EF6/Program.cs -> src-console/ConsoleApp_net452_EF6/Program.cs",
          "--- Hunk 1 ---",
          "[Context before]",
          "9:     {",
          "10:         static void Main(string[] args)",
          "11:         {",
          "13:             {",
          "19:                 var found1 = context.Employees.FirstOrDefault(config, \"EmployeeNumber > 1000\");",
          "20:                 Console.WriteLine($\"found1 : {found1.Id} - {found1.EmployeeNumber}\");",
          "",
          "[Removed Lines]",
          "12:             using (var context = new KendoGridDbContext())",
          "14:                 var config = new ParsingConfig",
          "15:                 {",
          "16:                     UseParameterizedNamesInDynamicQuery = true",
          "17:                 };",
          "",
          "[Added Lines]",
          "12:             var config = new ParsingConfig",
          "14:                 UseParameterizedNamesInDynamicQuery = true",
          "15:             };",
          "17:             var q = new[] { 1, 2, 3 }.AsQueryable();",
          "18:             var r = q.Where(\"it > 1\").ToArray();",
          "20:             using (var context = new KendoGridDbContext())",
          "21:             {",
          "",
          "---------------"
        ],
        "src-console/Demo.Host/Demo.Host.csproj||src-console/Demo.Host/Demo.Host.csproj": [
          "File: src-console/Demo.Host/Demo.Host.csproj -> src-console/Demo.Host/Demo.Host.csproj",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: \ufeff<Project Sdk=\"Microsoft.NET.Sdk\">",
          "3:     <PropertyGroup>",
          "4:         <OutputType>Exe</OutputType>",
          "5:         <TargetFramework>net8.0</TargetFramework>",
          "6:         <ImplicitUsings>enable</ImplicitUsings>",
          "7:         <Nullable>enable</Nullable>",
          "8:     </PropertyGroup>",
          "10:     <ItemGroup>",
          "11:       <PackageReference Include=\"Serilog\" Version=\"3.1.1\" />",
          "12:       <PackageReference Include=\"Serilog.Exceptions\" Version=\"8.4.0\" />",
          "13:       <PackageReference Include=\"Serilog.Sinks.Console\" Version=\"5.0.1\" />",
          "14:       <!--<PackageReference Include=\"System.Linq.Dynamic.Core\" Version=\"1.3.13\" />-->",
          "15:     </ItemGroup>",
          "17:     <ItemGroup>",
          "18:       <ProjectReference Include=\"..\\..\\src\\System.Linq.Dynamic.Core\\System.Linq.Dynamic.Core.csproj\" />",
          "19:     </ItemGroup>",
          "21: </Project>",
          "",
          "---------------"
        ],
        "src-console/Demo.Host/Program.cs||src-console/Demo.Host/Program.cs": [
          "File: src-console/Demo.Host/Program.cs -> src-console/Demo.Host/Program.cs",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: \ufeffusing System.Diagnostics;",
          "2: using System.Diagnostics.CodeAnalysis;",
          "3: using System.Linq.Dynamic.Core;",
          "4: using System.Reflection;",
          "5: using Serilog;",
          "6: using Serilog.Exceptions;",
          "8: AppDomain.CurrentDomain.AssemblyResolve += CurrentDomainOnAssemblyResolve;",
          "10: Log.Logger = new LoggerConfiguration()",
          "11:     .Enrich.WithExceptionDetails()",
          "12:     .WriteTo.Console(outputTemplate: \"{Timestamp:HH:mm:ss.fff} [{Level}] {Message}{NewLine}{Exception}\")",
          "13:     .CreateLogger();",
          "15: var customers = new List<Customer>",
          "16: {",
          "17:     new(Guid.NewGuid(), [",
          "18:         new Order(Guid.NewGuid()),",
          "19:         new Order(Guid.NewGuid()),",
          "20:         new Order(Guid.NewGuid()),",
          "21:         new Order(Guid.NewGuid())",
          "22:     ]),",
          "23:     new(Guid.NewGuid(), [",
          "24:         new Order(Guid.NewGuid()),",
          "25:         new Order(Guid.NewGuid())",
          "26:     ])",
          "27: };",
          "29: Log.Information(\"--- LoadAdditionalAssembliesFromCurrentDomainBaseDirectory = {load} ---\", false);",
          "30: var result = customers",
          "31:     .AsQueryable()",
          "32:     .Where(\"Orders.Count >= @0\", 3)",
          "33:     .OrderBy(\"Orders.Count\")",
          "34:     .ToList();",
          "35: Log.Information(\"Found {Count} customers: {Customers}\", result.Count, result);",
          "37: Log.Information(new string('*', 80));",
          "39: Log.Information(\"--- LoadAdditionalAssembliesFromCurrentDomainBaseDirectory = {load} ---\", true);",
          "40: var config = new ParsingConfig",
          "41: {",
          "42:     LoadAdditionalAssembliesFromCurrentDomainBaseDirectory = true",
          "43: };",
          "44: var result2 = customers",
          "45:     .AsQueryable()",
          "46:     .Where(config, \"Orders.Count >= @0\", 3)",
          "47:     .OrderBy(\"Orders.Count\")",
          "48:     .ToList();",
          "49: Log.Information(\"Found {Count} customers: {Customers}\", result2.Count, result2);",
          "51: return;",
          "53: static Assembly? CurrentDomainOnAssemblyResolve(object? sender, ResolveEventArgs resolveEventArgs)",
          "54: {",
          "55:     Log.Warning(\"Attempted to resolve assembly {Name} by {RequestingAssembly}\", resolveEventArgs.Name, resolveEventArgs.RequestingAssembly?.GetName().Name);",
          "57:     return null;",
          "58: }",
          "60: [SuppressMessage(\"Design\", \"CA1050:Declare types in namespaces\")]",
          "61: [SuppressMessage(\"ReSharper\", \"NotAccessedPositionalProperty.Global\")]",
          "62: public record Order(Guid Id);",
          "64: [SuppressMessage(\"Design\", \"CA1050:Declare types in namespaces\")]",
          "65: [SuppressMessage(\"ReSharper\", \"NotAccessedPositionalProperty.Global\")]",
          "66: public record Customer(Guid Id, List<Order> Orders);",
          "",
          "---------------"
        ],
        "src-console/Demo.Plugin/Demo.Plugin.csproj||src-console/Demo.Plugin/Demo.Plugin.csproj": [
          "File: src-console/Demo.Plugin/Demo.Plugin.csproj -> src-console/Demo.Plugin/Demo.Plugin.csproj",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: \ufeff<Project Sdk=\"Microsoft.NET.Sdk\">",
          "3:     <PropertyGroup>",
          "4:         <TargetFramework>net8.0</TargetFramework>",
          "5:         <ImplicitUsings>enable</ImplicitUsings>",
          "6:         <Nullable>enable</Nullable>",
          "7:     </PropertyGroup>",
          "9:     <Target Name=\"CopyDllAfterBuild\" AfterTargets=\"PostBuildEvent\">",
          "10:         <Copy",
          "11:             SourceFiles=\"$(OutputPath)Demo.Plugin.dll\"",
          "12:             DestinationFolder=\"../Demo.Host/bin/Debug/net8.0\" />",
          "13:     </Target>",
          "15: </Project>",
          "",
          "---------------"
        ],
        "src-console/Demo.Plugin/MyPlugin.cs||src-console/Demo.Plugin/MyPlugin.cs": [
          "File: src-console/Demo.Plugin/MyPlugin.cs -> src-console/Demo.Plugin/MyPlugin.cs",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: \ufeffnamespace Demo.Plugin;",
          "3: public static class MyPlugin",
          "4: {",
          "5:     public static void Print()",
          "6:     {",
          "7:         Console.WriteLine(\"Hello, World!\");",
          "8:     }",
          "9: }",
          "",
          "---------------"
        ],
        "src-console/build.ps1||src-console/build.ps1": [
          "File: src-console/build.ps1 -> src-console/build.ps1",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: if (Test-Path -Path \".\\output\") {",
          "2:     Remove-Item -Force -Recurse -Path \".\\output\\\"",
          "3: }",
          "4: else {",
          "5:     New-Item -Path \".\\output\" -ItemType Directory",
          "6: }",
          "9: Write-Host \"Build solution...\"",
          "11: dotnet build .\\LinqCoreDemo.sln --nologo --configuration \"Debug\"",
          "13: Write-Host \"Publish projects...\"",
          "14: dotnet publish .\\src\\Demo.Plugin\\Demo.Plugin.csproj --nologo --no-build --configuration \"Debug\" --output .\\output",
          "15: dotnet publish .\\src\\Demo.Host\\Demo.Host.csproj --nologo --no-build --configuration \"Debug\" --output .\\output",
          "",
          "---------------"
        ],
        "src/Directory.Build.props||src/Directory.Build.props": [
          "File: src/Directory.Build.props -> src/Directory.Build.props",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:         <Copyright>Copyright \u00a9 ZZZ Projects</Copyright>",
          "8:         <DefaultLanguage>en-us</DefaultLanguage>",
          "9:         <GenerateDocumentationFile>true</GenerateDocumentationFile>",
          "11:         <Nullable>enable</Nullable>",
          "12:         <PackageIcon>logo.png</PackageIcon>",
          "13:         <PackageReadmeFile>PackageReadme.md</PackageReadmeFile>",
          "",
          "[Removed Lines]",
          "10:         <LangVersion>latest</LangVersion>",
          "",
          "[Added Lines]",
          "10:         <LangVersion>12</LangVersion>",
          "",
          "---------------"
        ],
        "src/EntityFramework.DynamicLinq/EFType.cs||src/EntityFramework.DynamicLinq/EFType.cs": [
          "File: src/EntityFramework.DynamicLinq/EFType.cs -> src/EntityFramework.DynamicLinq/EFType.cs",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: \ufeffnamespace EntityFramework.DynamicLinq;",
          "6: public struct EFType",
          "7: {",
          "8: }",
          "",
          "---------------"
        ],
        "src/EntityFramework.DynamicLinq/EntityFramework.DynamicLinq.csproj||src/EntityFramework.DynamicLinq/EntityFramework.DynamicLinq.csproj": [
          "File: src/EntityFramework.DynamicLinq/EntityFramework.DynamicLinq.csproj -> src/EntityFramework.DynamicLinq/EntityFramework.DynamicLinq.csproj",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:         <PackageTags>system;linq;dynamic;entityframework;core;async</PackageTags>",
          "11:         <ProjectGuid>{D3804228-91F4-4502-9595-39584E510000}</ProjectGuid>",
          "12:         <TargetFrameworks>net45;net452;net46;netstandard2.1</TargetFrameworks>",
          "14:         <Version>1.3.$(PatchVersion)</Version>",
          "15:     </PropertyGroup>",
          "",
          "[Removed Lines]",
          "13:         <LangVersion>10</LangVersion>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore2/Microsoft.EntityFrameworkCore.DynamicLinq.AppVeyor.csproj||src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore2/Microsoft.EntityFrameworkCore.DynamicLinq.AppVeyor.csproj": [
          "File: src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore2/Microsoft.EntityFrameworkCore.DynamicLinq.AppVeyor.csproj -> src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore2/Microsoft.EntityFrameworkCore.DynamicLinq.AppVeyor.csproj",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore2/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore2.csproj||src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore2/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore2.csproj": [
          "File: src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore2/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore2.csproj -> src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore2/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore2.csproj",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:         <PackageTags>system;linq;dynamic;entityframework;core;async</PackageTags>",
          "11:         <ProjectGuid>{D3804228-91F4-4502-9595-39584E510001}</ProjectGuid>",
          "12:         <TargetFrameworks>netstandard2.0</TargetFrameworks>",
          "14:         <Version>2.3.$(PatchVersion)</Version>",
          "15:     </PropertyGroup>",
          "",
          "[Removed Lines]",
          "13:         <LangVersion>10</LangVersion>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore3/EFCoreType.cs||src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore3/EFCoreType.cs": [
          "File: src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore3/EFCoreType.cs -> src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore3/EFCoreType.cs",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: \ufeffnamespace Microsoft.EntityFrameworkCore.DynamicLinq;",
          "6: public struct EFCoreType",
          "7: {",
          "8: }",
          "",
          "---------------"
        ],
        "src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore3/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore3.csproj||src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore3/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore3.csproj": [
          "File: src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore3/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore3.csproj -> src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore3/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore3.csproj",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:         <PackageTags>system;linq;dynamic;entityframework;core;async</PackageTags>",
          "11:         <ProjectGuid>{7994FECC-965C-4A5D-8B0E-1A6EA769D4BE}</ProjectGuid>",
          "12:         <TargetFrameworks>netstandard2.0</TargetFrameworks>",
          "14:         <Version>3.3.$(PatchVersion)</Version>",
          "15:     </PropertyGroup>",
          "",
          "[Removed Lines]",
          "13:         <LangVersion>10</LangVersion>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "44:     <ItemGroup>",
          "45:         <PackageReference Include=\"JetBrains.Annotations\" Version=\"2022.3.1\" PrivateAssets=\"All\" />",
          "49:         <PackageReference Include=\"Microsoft.EntityFrameworkCore\" Version=\"3.1.0\" />",
          "50:     </ItemGroup>",
          "",
          "[Removed Lines]",
          "46:     </ItemGroup>",
          "48:     <ItemGroup Condition=\" '$(TargetFramework)' == 'netstandard2.0'\">",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore5/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore5.csproj||src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore5/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore5.csproj": [
          "File: src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore5/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore5.csproj -> src/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore5/Microsoft.EntityFrameworkCore.DynamicLinq.EFCore5.csproj",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:         <PackageTags>system;linq;dynamic;entityframework;core;async</PackageTags>",
          "11:         <ProjectGuid>{D3804228-91F4-4502-9595-39584E519901}</ProjectGuid>",
          "12:         <TargetFrameworks>netstandard2.1;net5.0</TargetFrameworks>",
          "14:         <Version>5.3.$(PatchVersion)</Version>",
          "15:     </PropertyGroup>",
          "",
          "[Removed Lines]",
          "13:         <LangVersion>10</LangVersion>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/System.Linq.Dynamic.Core/CustomTypeProviders/DefaultDynamicLinqCustomTypeProvider.cs||src/System.Linq.Dynamic.Core/CustomTypeProviders/DefaultDynamicLinqCustomTypeProvider.cs": [
          "File: src/System.Linq.Dynamic.Core/CustomTypeProviders/DefaultDynamicLinqCustomTypeProvider.cs -> src/System.Linq.Dynamic.Core/CustomTypeProviders/DefaultDynamicLinqCustomTypeProvider.cs",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: using System.Reflection;",
          "4: using System.Runtime.CompilerServices;",
          "7: {",
          "18:     {",
          "36:         {",
          "38:             {",
          "45:             }",
          "48:         }",
          "52:         {",
          "54:             {",
          "61:             }",
          "64:         }",
          "107:         }",
          "108:     }",
          "109: }",
          "",
          "[Removed Lines]",
          "6: namespace System.Linq.Dynamic.Core.CustomTypeProviders",
          "17:     public class DefaultDynamicLinqCustomTypeProvider : AbstractDynamicLinqCustomTypeProvider, IDynamicLinkCustomTypeProvider",
          "19:         private readonly IAssemblyHelper _assemblyHelper = new DefaultAssemblyHelper();",
          "20:         private readonly bool _cacheCustomTypes;",
          "22:         private HashSet<Type>? _cachedCustomTypes;",
          "23:         private Dictionary<Type, List<MethodInfo>>? _cachedExtensionMethods;",
          "29:         public DefaultDynamicLinqCustomTypeProvider(bool cacheCustomTypes = true)",
          "30:         {",
          "31:             _cacheCustomTypes = cacheCustomTypes;",
          "32:         }",
          "35:         public virtual HashSet<Type> GetCustomTypes()",
          "37:             if (_cacheCustomTypes)",
          "39:                 if (_cachedCustomTypes == null)",
          "40:                 {",
          "41:                     _cachedCustomTypes = GetCustomTypesInternal();",
          "42:                 }",
          "44:                 return _cachedCustomTypes;",
          "47:             return GetCustomTypesInternal();",
          "51:         public Dictionary<Type, List<MethodInfo>> GetExtensionMethods()",
          "53:             if (_cacheCustomTypes)",
          "55:                 if (_cachedExtensionMethods == null)",
          "56:                 {",
          "57:                     _cachedExtensionMethods = GetExtensionMethodsInternal();",
          "58:                 }",
          "60:                 return _cachedExtensionMethods;",
          "63:             return GetExtensionMethodsInternal();",
          "67:         public Type? ResolveType(string typeName)",
          "68:         {",
          "69:             Check.NotEmpty(typeName);",
          "71:             IEnumerable<Assembly> assemblies = _assemblyHelper.GetAssemblies();",
          "72:             return ResolveType(assemblies, typeName);",
          "73:         }",
          "76:         public Type? ResolveTypeBySimpleName(string simpleTypeName)",
          "77:         {",
          "78:             Check.NotEmpty(simpleTypeName);",
          "80:             IEnumerable<Assembly> assemblies = _assemblyHelper.GetAssemblies();",
          "81:             return ResolveTypeBySimpleName(assemblies, simpleTypeName);",
          "82:         }",
          "84:         private HashSet<Type> GetCustomTypesInternal()",
          "85:         {",
          "86:             IEnumerable<Assembly> assemblies = _assemblyHelper.GetAssemblies();",
          "87:             return new HashSet<Type>(FindTypesMarkedWithDynamicLinqTypeAttribute(assemblies));",
          "88:         }",
          "90:         private Dictionary<Type, List<MethodInfo>> GetExtensionMethodsInternal()",
          "91:         {",
          "92:             var types = GetCustomTypes();",
          "94:             var list = new List<Tuple<Type, MethodInfo>>();",
          "96:             foreach (var type in types)",
          "97:             {",
          "98:                 var extensionMethods = type",
          "99:                     .GetMethods(BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic)",
          "100:                     .Where(x => x.IsDefined(typeof(ExtensionAttribute), false))",
          "101:                     .ToList();",
          "103:                 extensionMethods.ForEach(x => list.Add(new Tuple<Type, MethodInfo>(x.GetParameters()[0].ParameterType, x)));",
          "104:             }",
          "106:             return list.GroupBy(x => x.Item1, tuple => tuple.Item2).ToDictionary(key => key.Key, methods => methods.ToList());",
          "",
          "[Added Lines]",
          "6: namespace System.Linq.Dynamic.Core.CustomTypeProviders;",
          "17: public class DefaultDynamicLinqCustomTypeProvider : AbstractDynamicLinqCustomTypeProvider, IDynamicLinkCustomTypeProvider",
          "19:     private readonly IAssemblyHelper _assemblyHelper;",
          "20:     private readonly bool _cacheCustomTypes;",
          "22:     private HashSet<Type>? _cachedCustomTypes;",
          "23:     private Dictionary<Type, List<MethodInfo>>? _cachedExtensionMethods;",
          "30:     public DefaultDynamicLinqCustomTypeProvider(ParsingConfig config, bool cacheCustomTypes = true)",
          "32:         _assemblyHelper = new DefaultAssemblyHelper(config);",
          "33:         _cacheCustomTypes = cacheCustomTypes;",
          "34:     }",
          "37:     public virtual HashSet<Type> GetCustomTypes()",
          "38:     {",
          "39:         if (_cacheCustomTypes)",
          "41:             if (_cachedCustomTypes == null)",
          "43:                 _cachedCustomTypes = GetCustomTypesInternal();",
          "46:             return _cachedCustomTypes;",
          "49:         return GetCustomTypesInternal();",
          "50:     }",
          "53:     public Dictionary<Type, List<MethodInfo>> GetExtensionMethods()",
          "54:     {",
          "55:         if (_cacheCustomTypes)",
          "57:             if (_cachedExtensionMethods == null)",
          "59:                 _cachedExtensionMethods = GetExtensionMethodsInternal();",
          "62:             return _cachedExtensionMethods;",
          "65:         return GetExtensionMethodsInternal();",
          "66:     }",
          "69:     public Type? ResolveType(string typeName)",
          "70:     {",
          "71:         Check.NotEmpty(typeName);",
          "73:         IEnumerable<Assembly> assemblies = _assemblyHelper.GetAssemblies();",
          "74:         return ResolveType(assemblies, typeName);",
          "75:     }",
          "78:     public Type? ResolveTypeBySimpleName(string simpleTypeName)",
          "79:     {",
          "80:         Check.NotEmpty(simpleTypeName);",
          "82:         IEnumerable<Assembly> assemblies = _assemblyHelper.GetAssemblies();",
          "83:         return ResolveTypeBySimpleName(assemblies, simpleTypeName);",
          "84:     }",
          "86:     private HashSet<Type> GetCustomTypesInternal()",
          "87:     {",
          "88:         IEnumerable<Assembly> assemblies = _assemblyHelper.GetAssemblies();",
          "89:         return new HashSet<Type>(FindTypesMarkedWithDynamicLinqTypeAttribute(assemblies));",
          "90:     }",
          "92:     private Dictionary<Type, List<MethodInfo>> GetExtensionMethodsInternal()",
          "93:     {",
          "94:         var types = GetCustomTypes();",
          "96:         var list = new List<Tuple<Type, MethodInfo>>();",
          "98:         foreach (var type in types)",
          "99:         {",
          "100:             var extensionMethods = type",
          "101:                 .GetMethods(BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic)",
          "102:                 .Where(x => x.IsDefined(typeof(ExtensionAttribute), false))",
          "103:                 .ToList();",
          "105:             extensionMethods.ForEach(x => list.Add(new Tuple<Type, MethodInfo>(x.GetParameters()[0].ParameterType, x)));",
          "108:         return list.GroupBy(x => x.Item1, tuple => tuple.Item2).ToDictionary(key => key.Key, methods => methods.ToList());",
          "",
          "---------------"
        ],
        "src/System.Linq.Dynamic.Core/DefaultAssemblyHelper.cs||src/System.Linq.Dynamic.Core/DefaultAssemblyHelper.cs": [
          "File: src/System.Linq.Dynamic.Core/DefaultAssemblyHelper.cs -> src/System.Linq.Dynamic.Core/DefaultAssemblyHelper.cs",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: \ufeffusing System.IO;",
          "2: using System.Reflection;",
          "3: using System.Collections.Generic;",
          "5: namespace System.Linq.Dynamic.Core;",
          "8: {",
          "9:     public Assembly[] GetAssemblies()",
          "10:     {",
          "11: #if WINDOWS_APP || UAP10_0 || NETSTANDARD || WPSL",
          "",
          "[Removed Lines]",
          "7: internal class DefaultAssemblyHelper : IAssemblyHelper",
          "",
          "[Added Lines]",
          "4: using System.Linq.Dynamic.Core.Validation;",
          "8: internal class DefaultAssemblyHelper(ParsingConfig parsingConfig) : IAssemblyHelper",
          "10:     private readonly ParsingConfig _config = Check.NotNull(parsingConfig);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "31:             }",
          "32:         }",
          "34:         string[] referencedPaths;",
          "35:         try",
          "36:         {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37:         if (!_config.LoadAdditionalAssembliesFromCurrentDomainBaseDirectory)",
          "38:         {",
          "39:             return loadedAssemblies.ToArray();",
          "40:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "38:         }",
          "39:         catch",
          "40:         {",
          "42:         }",
          "45:         foreach (var path in pathsToLoad)",
          "46:         {",
          "47:             try",
          "",
          "[Removed Lines]",
          "41:             referencedPaths = new string[0];",
          "44:         var pathsToLoad = referencedPaths.Where(referencedPath => !loadedPaths.Contains(referencedPath, StringComparer.InvariantCultureIgnoreCase));",
          "",
          "[Added Lines]",
          "49:             referencedPaths = [];",
          "52:         var pathsToLoad = referencedPaths",
          "53:             .Where(referencedPath => !loadedPaths.Contains(referencedPath, StringComparer.InvariantCultureIgnoreCase))",
          "54:             .ToArray();",
          "",
          "---------------"
        ],
        "src/System.Linq.Dynamic.Core/Parser/KeywordsHelper.cs||src/System.Linq.Dynamic.Core/Parser/KeywordsHelper.cs": [
          "File: src/System.Linq.Dynamic.Core/Parser/KeywordsHelper.cs -> src/System.Linq.Dynamic.Core/Parser/KeywordsHelper.cs",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:     };",
          "52:     private readonly Dictionary<string, object> _customTypeMapping = new();",
          "",
          "[Removed Lines]",
          "49:     private static readonly Dictionary<string, object> _preDefinedTypeMapping = new();",
          "",
          "[Added Lines]",
          "49:     private static readonly Dictionary<string, object> PreDefinedTypeMapping = new();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "55:     {",
          "56:         foreach (var type in PredefinedTypesHelper.PredefinedTypes.OrderBy(kvp => kvp.Value).Select(kvp => kvp.Key))",
          "57:         {",
          "60:         }",
          "61:     }",
          "",
          "[Removed Lines]",
          "58:             _preDefinedTypeMapping[type.FullName!] = type;",
          "59:             _preDefinedTypeMapping[type.Name] = type;",
          "",
          "[Added Lines]",
          "58:             PreDefinedTypeMapping[type.FullName!] = type;",
          "59:             PreDefinedTypeMapping[type.Name] = type;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "99:         }",
          "103:         {",
          "104:             keyWordOrType = predefinedType;",
          "105:             return true;",
          "",
          "[Removed Lines]",
          "102:         if (_preDefinedTypeMapping.TryGetValue(name, out var predefinedType))",
          "",
          "[Added Lines]",
          "102:         if (PreDefinedTypeMapping.TryGetValue(name, out var predefinedType))",
          "",
          "---------------"
        ],
        "src/System.Linq.Dynamic.Core/Parser/PredefinedTypesHelper.cs||src/System.Linq.Dynamic.Core/Parser/PredefinedTypesHelper.cs": [
          "File: src/System.Linq.Dynamic.Core/Parser/PredefinedTypesHelper.cs -> src/System.Linq.Dynamic.Core/Parser/PredefinedTypesHelper.cs",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: internal static class PredefinedTypesHelper",
          "8: {",
          "14:     public static readonly IDictionary<string, Type> PredefinedTypesShorthands = new Dictionary<string, Type>",
          "15:     {",
          "",
          "[Removed Lines]",
          "9: #if NETSTANDARD2_0",
          "10:     private static readonly string Version = Text.RegularExpressions.Regex.Match(typeof(PredefinedTypesHelper).AssemblyQualifiedName!, @\"\\d+\\.\\d+\\.\\d+\\.\\d+\").ToString();",
          "11: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "27:         { \"string\", typeof(string) },",
          "28:         { \"uint\", typeof(uint) },",
          "29:         { \"ulong\", typeof(ulong) },",
          "31:     };",
          "34:     {",
          "35:         { typeof(object), 0 },",
          "36:         { typeof(bool), 0 },",
          "",
          "[Removed Lines]",
          "30:         { \"ushort\", typeof(ushort) },",
          "33:     public static readonly IDictionary<Type, int> PredefinedTypes = new ConcurrentDictionary<Type, int>(new Dictionary<Type, int>",
          "",
          "[Added Lines]",
          "26:         { \"ushort\", typeof(ushort) }",
          "29:     public static readonly IDictionary<Type, int> PredefinedTypes = new ConcurrentDictionary<Type, int>(new Dictionary<Type, int>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "64:     static PredefinedTypesHelper()",
          "65:     {",
          "80: #endif",
          "84: #endif",
          "85:     }",
          "",
          "[Removed Lines]",
          "66: #if !(NET35 || SILVERLIGHT || NETFX_CORE || WINDOWS_APP ||  UAP10_0 || NETSTANDARD)",
          "70:         TryAdd(\"System.Data.Objects.EntityFunctions, System.Data.Entity, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\", 1);",
          "71:         TryAdd(\"System.Data.Objects.SqlClient.SqlFunctions, System.Data.Entity, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\", 1);",
          "72:         TryAdd(\"System.Data.Objects.SqlClient.SqlSpatialFunctions, System.Data.Entity, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\", 1);",
          "75:         TryAdd(\"System.Data.Entity.Core.Objects.EntityFunctions, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\", 2);",
          "76:         TryAdd(\"System.Data.Entity.DbFunctions, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\", 2);",
          "77:         TryAdd(\"System.Data.Entity.Spatial.DbGeography, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\", 2);",
          "78:         TryAdd(\"System.Data.Entity.SqlServer.SqlFunctions, EntityFramework.SqlServer, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\", 2);",
          "79:         TryAdd(\"System.Data.Entity.SqlServer.SqlSpatialFunctions, EntityFramework.SqlServer, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\", 2);",
          "82: #if NETSTANDARD2_0",
          "83:         TryAdd($\"Microsoft.EntityFrameworkCore.DynamicLinq.DynamicFunctions, Microsoft.EntityFrameworkCore.DynamicLinq, Version={Version}, Culture=neutral, PublicKeyToken=974e7e1b462f3693\", 3);",
          "",
          "[Added Lines]",
          "64: #if NET452_OR_GREATER || NETSTANDARD2_1",
          "65:         if (Type.GetType(\"EntityFramework.DynamicLinq.EFType, EntityFramework.DynamicLinq\") != null)",
          "66:         {",
          "67:             TryAdd(\"System.Data.Objects.EntityFunctions, System.Data.Entity, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\", 1);",
          "68:             TryAdd(\"System.Data.Objects.SqlClient.SqlFunctions, System.Data.Entity, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\", 1);",
          "69:             TryAdd(\"System.Data.Objects.SqlClient.SqlSpatialFunctions, System.Data.Entity, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\", 1);",
          "70:             TryAdd(\"System.Data.Entity.Core.Objects.EntityFunctions, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\", 2);",
          "71:             TryAdd(\"System.Data.Entity.DbFunctions, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\", 2);",
          "72:             TryAdd(\"System.Data.Entity.Spatial.DbGeography, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\", 2);",
          "73:             TryAdd(\"System.Data.Entity.SqlServer.SqlFunctions, EntityFramework.SqlServer, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\", 2);",
          "74:             TryAdd(\"System.Data.Entity.SqlServer.SqlSpatialFunctions, EntityFramework.SqlServer, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\", 2);",
          "75:         }",
          "78: #if NETSTANDARD2_0_OR_GREATER || NET5_0_OR_GREATER",
          "79:         const string publicKeyToken = \"974e7e1b462f3693\";",
          "80:         var version = Text.RegularExpressions.Regex.Match(typeof(PredefinedTypesHelper).AssemblyQualifiedName!, @\"\\d+\\.\\d+\\.\\d+\\.\\d+\").ToString();",
          "81:         if (Type.GetType($\"Microsoft.EntityFrameworkCore.DynamicLinq.EFType, Microsoft.EntityFrameworkCore.DynamicLinq, Version={version}, Culture=neutral, PublicKeyToken={publicKeyToken}\") != null)",
          "82:         {",
          "83:             TryAdd($\"Microsoft.EntityFrameworkCore.DynamicLinq.DynamicFunctions, Microsoft.EntityFrameworkCore.DynamicLinq, Version={version}, Culture=neutral, PublicKeyToken={publicKeyToken}\", 3);",
          "84:         }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "88:     {",
          "89:         try",
          "90:         {",
          "93:             {",
          "95:             }",
          "96:         }",
          "97:         catch",
          "98:         {",
          "100:         }",
          "101:     }",
          "",
          "[Removed Lines]",
          "91:             var efType = Type.GetType(typeName);",
          "92:             if (efType != null)",
          "94:                 PredefinedTypes.Add(efType, x);",
          "",
          "[Added Lines]",
          "92:             var type = Type.GetType(typeName);",
          "93:             if (type != null)",
          "95:                 PredefinedTypes.Add(type, x);",
          "",
          "---------------"
        ],
        "src/System.Linq.Dynamic.Core/Parser/SupportedMethods/MethodFinder.cs||src/System.Linq.Dynamic.Core/Parser/SupportedMethods/MethodFinder.cs": [
          "File: src/System.Linq.Dynamic.Core/Parser/SupportedMethods/MethodFinder.cs -> src/System.Linq.Dynamic.Core/Parser/SupportedMethods/MethodFinder.cs",
          "--- Hunk 1 ---",
          "[Context before]",
          "113:         }",
          "114: #endif",
          "117:         {",
          "119:             var methods = new List<MethodInfo>();",
          "",
          "[Removed Lines]",
          "116:         if (instance != null)",
          "",
          "[Added Lines]",
          "116:         if (instance != null && _parsingConfig.CustomTypeProvider != null)",
          "",
          "---------------"
        ],
        "src/System.Linq.Dynamic.Core/ParsingConfig.cs||src/System.Linq.Dynamic.Core/ParsingConfig.cs": [
          "File: src/System.Linq.Dynamic.Core/ParsingConfig.cs -> src/System.Linq.Dynamic.Core/ParsingConfig.cs",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: public class ParsingConfig",
          "14: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15:     private IDynamicLinkCustomTypeProvider? _customTypeProvider;",
          "16:     private IExpressionPromoter? _expressionPromoter;",
          "17:     private IQueryableAnalyzer? _queryableAnalyzer;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "25:         EvaluateGroupByAtDatabase = true",
          "26:     };",
          "",
          "[Removed Lines]",
          "29:     public bool IsCaseSensitive { get; set; }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "36:         RenameEmptyParameterExpressionNames = true",
          "37:     };",
          "49:     {",
          "50:         get",
          "51:         {",
          "55: #else",
          "56:             return _customTypeProvider;",
          "57: #endif",
          "58:         }",
          "60:         set",
          "61:         {",
          "67:         }",
          "68:     }",
          "73:     public IExpressionPromoter ExpressionPromoter",
          "74:     {",
          "75:         get => _expressionPromoter ??= new ExpressionPromoter(this);",
          "77:         set",
          "78:         {",
          "",
          "[Removed Lines]",
          "39:     private IDynamicLinkCustomTypeProvider? _customTypeProvider;",
          "41:     private IExpressionPromoter? _expressionPromoter;",
          "43:     private IQueryableAnalyzer? _queryableAnalyzer;",
          "48:     public IDynamicLinkCustomTypeProvider CustomTypeProvider",
          "52: #if !( WINDOWS_APP || UAP10_0 || NETSTANDARD)",
          "54:             return _customTypeProvider ??= new DefaultDynamicLinqCustomTypeProvider();",
          "63:             if (_customTypeProvider != value)",
          "64:             {",
          "65:                 _customTypeProvider = value;",
          "66:             }",
          "",
          "[Added Lines]",
          "45:     public bool IsCaseSensitive { get; set; }",
          "50:     public IDynamicLinkCustomTypeProvider? CustomTypeProvider",
          "54: #if !(WINDOWS_APP || UAP10_0 || NETSTANDARD)",
          "56:             return _customTypeProvider ??= new DefaultDynamicLinqCustomTypeProvider(this);",
          "63:             _customTypeProvider = value;",
          "73:     public bool LoadAdditionalAssembliesFromCurrentDomainBaseDirectory { get; set; }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "131:     public bool UseParameterizedNamesInDynamicQuery { get; set; } = false;",
          "138:     public bool AllowNewToEvaluateAnyType { get; set; } = false;",
          "145:     public bool RenameParameterExpression { get; set; } = false;",
          "",
          "[Added Lines]",
          "133:     public bool UseParameterizedNamesInDynamicQuery { get; set; }",
          "140:     public bool AllowNewToEvaluateAnyType { get; set; }",
          "147:     public bool RenameParameterExpression { get; set; }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "152:     public bool RenameEmptyParameterExpressionNames { get; set; }",
          "177:     public bool SupportEnumerationsFromSystemNamespace { get; set; } = true;",
          "",
          "[Removed Lines]",
          "161:     public bool DisableMemberAccessToIndexAccessorFallback { get; set; } = false;",
          "170:     public bool ResolveTypesBySimpleName { get; set; } = false;",
          "185:     public bool DateTimeIsParsedAsUTC { get; set; } = false;",
          "",
          "[Added Lines]",
          "162:     public bool DisableMemberAccessToIndexAccessorFallback { get; set; }",
          "171:     public bool ResolveTypesBySimpleName { get; set; }",
          "186:     public bool DateTimeIsParsedAsUTC { get; set; }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "204:     public bool NullPropagatingUseDefaultValueForNonNullableValueTypes { get; set; } = false;",
          "",
          "[Added Lines]",
          "205:     public bool NullPropagatingUseDefaultValueForNonNullableValueTypes { get; set; }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "230:     public bool SupportDotInPropertyNames { get; set; } = false;",
          "237:     public bool DisallowNewKeyword { get; set; } = false;",
          "",
          "[Added Lines]",
          "230:     public bool SupportDotInPropertyNames { get; set; }",
          "237:     public bool DisallowNewKeyword { get; set; }",
          "",
          "---------------"
        ],
        "src/Z.EntityFramework.Classic.DynamicLinq/Z.EntityFramework.Classic.DynamicLinq.csproj||src/Z.EntityFramework.Classic.DynamicLinq/Z.EntityFramework.Classic.DynamicLinq.csproj": [
          "File: src/Z.EntityFramework.Classic.DynamicLinq/Z.EntityFramework.Classic.DynamicLinq.csproj -> src/Z.EntityFramework.Classic.DynamicLinq/Z.EntityFramework.Classic.DynamicLinq.csproj",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:         <PackageTags>system;linq;dynamic;Z.EntityFramework;core;async;classic</PackageTags>",
          "11:         <ProjectGuid>{D3804228-91F4-4502-9595-39584Ea20000}</ProjectGuid>",
          "12:         <TargetFrameworks>net45;netstandard2.0</TargetFrameworks>",
          "14:         <Version>1.3.$(PatchVersion)</Version>",
          "15:     </PropertyGroup>",
          "",
          "[Removed Lines]",
          "13:         <LangVersion>10</LangVersion>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/Directory.Build.props||test/Directory.Build.props": [
          "File: test/Directory.Build.props -> test/Directory.Build.props",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <Project>",
          "2:     <PropertyGroup>",
          "3:         <LangVersion>12</LangVersion>",
          "4:     </PropertyGroup>",
          "5: </Project>",
          "",
          "---------------"
        ],
        "test/System.Linq.Dynamic.Core.Tests/DefaultDynamicLinqCustomTypeProviderTests.cs||test/System.Linq.Dynamic.Core.Tests/DefaultDynamicLinqCustomTypeProviderTests.cs": [
          "File: test/System.Linq.Dynamic.Core.Tests/DefaultDynamicLinqCustomTypeProviderTests.cs -> test/System.Linq.Dynamic.Core.Tests/DefaultDynamicLinqCustomTypeProviderTests.cs",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: using NFluent;",
          "5: using Xunit;",
          "8: {",
          "10:     {",
          "57:     }",
          "",
          "[Removed Lines]",
          "7: namespace System.Linq.Dynamic.Core.Tests",
          "9:     public class DefaultDynamicLinqCustomTypeProviderTests",
          "11:         private readonly IDynamicLinkCustomTypeProvider _sut;",
          "13:         public DefaultDynamicLinqCustomTypeProviderTests()",
          "14:         {",
          "15:             _sut = new DefaultDynamicLinqCustomTypeProvider();",
          "16:         }",
          "18:         [Fact]",
          "19:         public void DefaultDynamicLinqCustomTypeProvider_ResolveSystemType()",
          "20:         {",
          "22:             var type = _sut.ResolveType(typeof(DirectoryInfo).FullName);",
          "25:             type.Should().Be(typeof(DirectoryInfo));",
          "26:         }",
          "28:         [Fact]",
          "29:         public void DefaultDynamicLinqCustomTypeProvider_GetCustomTypes()",
          "30:         {",
          "32:             var types = _sut.GetCustomTypes();",
          "35:             Check.That(types.Count).IsStrictlyGreaterThan(0);",
          "36:         }",
          "38:         [Fact]",
          "39:         public void DefaultDynamicLinqCustomTypeProvider_ResolveType_UnknownReturnsNull()",
          "40:         {",
          "42:             var result = _sut.ResolveType(\"dummy\");",
          "45:             Check.That(result).IsNull();",
          "46:         }",
          "48:         [Fact]",
          "49:         public void DefaultDynamicLinqCustomTypeProvider_ResolveType_DefinedReturnsType()",
          "50:         {",
          "52:             var result = _sut.ResolveType(typeof(DefaultDynamicLinqCustomTypeProviderTests).FullName);",
          "55:             Check.That(result).IsNotNull();",
          "56:         }",
          "58: }",
          "",
          "[Added Lines]",
          "7: namespace System.Linq.Dynamic.Core.Tests;",
          "9: public class DefaultDynamicLinqCustomTypeProviderTests",
          "11:     private readonly IDynamicLinkCustomTypeProvider _sut;",
          "13:     public DefaultDynamicLinqCustomTypeProviderTests()",
          "14:     {",
          "15:         _sut = new DefaultDynamicLinqCustomTypeProvider(ParsingConfig.Default);",
          "16:     }",
          "18:     [Fact]",
          "19:     public void DefaultDynamicLinqCustomTypeProvider_ResolveSystemType()",
          "20:     {",
          "22:         var type = _sut.ResolveType(typeof(DirectoryInfo).FullName);",
          "25:         type.Should().Be(typeof(DirectoryInfo));",
          "26:     }",
          "28:     [Fact]",
          "29:     public void DefaultDynamicLinqCustomTypeProvider_GetCustomTypes()",
          "32:         var types = _sut.GetCustomTypes();",
          "35:         Check.That(types.Count).IsStrictlyGreaterThan(0);",
          "36:     }",
          "38:     [Fact]",
          "39:     public void DefaultDynamicLinqCustomTypeProvider_ResolveType_UnknownReturnsNull()",
          "40:     {",
          "42:         var result = _sut.ResolveType(\"dummy\");",
          "45:         Check.That(result).IsNull();",
          "46:     }",
          "48:     [Fact]",
          "49:     public void DefaultDynamicLinqCustomTypeProvider_ResolveType_DefinedReturnsType()",
          "50:     {",
          "52:         var result = _sut.ResolveType(typeof(DefaultDynamicLinqCustomTypeProviderTests).FullName);",
          "55:         Check.That(result).IsNotNull();",
          "57: }",
          "",
          "---------------"
        ],
        "test/System.Linq.Dynamic.Core.Tests/DynamicExpressionParserTests.cs||test/System.Linq.Dynamic.Core.Tests/DynamicExpressionParserTests.cs": [
          "File: test/System.Linq.Dynamic.Core.Tests/DynamicExpressionParserTests.cs -> test/System.Linq.Dynamic.Core.Tests/DynamicExpressionParserTests.cs",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:         public MyClass Child { get; set; }",
          "56:     }",
          "59:     {",
          "60:         public override HashSet<Type> GetCustomTypes()",
          "61:         {",
          "",
          "[Removed Lines]",
          "58:     private class MyClassCustomTypeProvider : DefaultDynamicLinqCustomTypeProvider",
          "",
          "[Added Lines]",
          "58:     private class MyClassCustomTypeProvider() : DefaultDynamicLinqCustomTypeProvider(ParsingConfig.Default)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2113:         DynamicExpressionParser.ParseLambda<bool>(new ParsingConfig(), false, \"new[]{1,2,3}.Any(z => z > 0)\");",
          "2114:     }",
          "2117:     {",
          "2118:         public override HashSet<Type> GetCustomTypes() => new HashSet<Type>(base.GetCustomTypes()) { typeof(Methods), typeof(MethodsItemExtension) };",
          "2119:     }",
          "",
          "[Removed Lines]",
          "2116:     public class DefaultDynamicLinqCustomTypeProviderForGenericExtensionMethod : DefaultDynamicLinqCustomTypeProvider",
          "",
          "[Added Lines]",
          "2116:     public class DefaultDynamicLinqCustomTypeProviderForGenericExtensionMethod() : DefaultDynamicLinqCustomTypeProvider(ParsingConfig.Default)",
          "",
          "---------------"
        ],
        "test/System.Linq.Dynamic.Core.Tests/ExpressionTests.MethodCall.cs||test/System.Linq.Dynamic.Core.Tests/ExpressionTests.MethodCall.cs": [
          "File: test/System.Linq.Dynamic.Core.Tests/ExpressionTests.MethodCall.cs -> test/System.Linq.Dynamic.Core.Tests/ExpressionTests.MethodCall.cs",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:         };",
          "21:     }",
          "24:     {",
          "25:         public override HashSet<Type> GetCustomTypes() => new(base.GetCustomTypes()) { typeof(Methods), typeof(MethodsItemExtension) };",
          "26:     }",
          "",
          "[Removed Lines]",
          "23:     private class DefaultDynamicLinqCustomTypeProviderForStaticTesting : DefaultDynamicLinqCustomTypeProvider",
          "",
          "[Added Lines]",
          "23:     private class DefaultDynamicLinqCustomTypeProviderForStaticTesting() : DefaultDynamicLinqCustomTypeProvider(ParsingConfig.Default)",
          "",
          "---------------"
        ],
        "test/System.Linq.Dynamic.Core.Tests/System.Linq.Dynamic.Core.Tests.csproj||test/System.Linq.Dynamic.Core.Tests/System.Linq.Dynamic.Core.Tests.csproj": [
          "File: test/System.Linq.Dynamic.Core.Tests/System.Linq.Dynamic.Core.Tests.csproj -> test/System.Linq.Dynamic.Core.Tests/System.Linq.Dynamic.Core.Tests.csproj",
          "--- Hunk 1 ---",
          "[Context before]",
          "5:         <AssemblyName>System.Linq.Dynamic.Core.Tests</AssemblyName>",
          "6:         <DebugType>full</DebugType>",
          "7:         <SignAssembly>True</SignAssembly>",
          "9:         <Nullable>enable</Nullable>",
          "10:         <AssemblyOriginatorKeyFile>../../src/System.Linq.Dynamic.Core/System.Linq.Dynamic.Core.snk</AssemblyOriginatorKeyFile>",
          "11:         <ProjectGuid>{912FBF24-3CAE-4A50-B5EA-E525B9FAEC80}</ProjectGuid>",
          "",
          "[Removed Lines]",
          "8:         <LangVersion>latest</LangVersion>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "06610fbfafc447fd1032f4597a1a75579b310cee",
      "candidate_info": {
        "commit_hash": "06610fbfafc447fd1032f4597a1a75579b310cee",
        "repo": "zzzprojects/System.Linq.Dynamic.Core",
        "commit_url": "https://github.com/zzzprojects/System.Linq.Dynamic.Core/commit/06610fbfafc447fd1032f4597a1a75579b310cee",
        "files": [
          "src/System.Linq.Dynamic.Core/CustomTypeProviders/DefaultDynamicLinqCustomTypeProvider.cs"
        ],
        "message": "Update DefaultDynamicLinqCustomTypeProvider constructor to be compatible with microsoft/RulesEngine (#833)\n\n* Update DefaultDynamicLinqCustomTypeProvider to make ParsingConfig optional\n\n* Obsolete",
        "before_after_code_files": [
          "src/System.Linq.Dynamic.Core/CustomTypeProviders/DefaultDynamicLinqCustomTypeProvider.cs||src/System.Linq.Dynamic.Core/CustomTypeProviders/DefaultDynamicLinqCustomTypeProvider.cs"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/System.Linq.Dynamic.Core/CustomTypeProviders/DefaultDynamicLinqCustomTypeProvider.cs||src/System.Linq.Dynamic.Core/CustomTypeProviders/DefaultDynamicLinqCustomTypeProvider.cs"
          ],
          "candidate": [
            "src/System.Linq.Dynamic.Core/CustomTypeProviders/DefaultDynamicLinqCustomTypeProvider.cs||src/System.Linq.Dynamic.Core/CustomTypeProviders/DefaultDynamicLinqCustomTypeProvider.cs"
          ]
        }
      },
      "candidate_diff": {
        "src/System.Linq.Dynamic.Core/CustomTypeProviders/DefaultDynamicLinqCustomTypeProvider.cs||src/System.Linq.Dynamic.Core/CustomTypeProviders/DefaultDynamicLinqCustomTypeProvider.cs": [
          "File: src/System.Linq.Dynamic.Core/CustomTypeProviders/DefaultDynamicLinqCustomTypeProvider.cs -> src/System.Linq.Dynamic.Core/CustomTypeProviders/DefaultDynamicLinqCustomTypeProvider.cs",
          "--- Hunk 1 ---",
          "[Context before]",
          "22:     private HashSet<Type>? _cachedCustomTypes;",
          "23:     private Dictionary<Type, List<MethodInfo>>? _cachedExtensionMethods;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30:     [Obsolete(\"Please use the DefaultDynamicLinqCustomTypeProvider(ParsingConfig config, bool cacheCustomTypes = true) constructor.\")]",
          "31:     public DefaultDynamicLinqCustomTypeProvider(bool cacheCustomTypes = true) : this(ParsingConfig.Default, cacheCustomTypes)",
          "32:     {",
          "33:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30:     public DefaultDynamicLinqCustomTypeProvider(ParsingConfig config, bool cacheCustomTypes = true)",
          "31:     {",
          "33:         _cacheCustomTypes = cacheCustomTypes;",
          "34:     }",
          "",
          "[Removed Lines]",
          "32:         _assemblyHelper = new DefaultAssemblyHelper(config);",
          "",
          "[Added Lines]",
          "42:         _assemblyHelper = new DefaultAssemblyHelper(Check.NotNull(config));",
          "",
          "---------------"
        ]
      }
    }
  ]
}