{
  "cve_id": "CVE-2024-1455",
  "cve_desc": "A vulnerability in the langchain-ai/langchain repository allows for a Billion Laughs Attack, a type of XML External Entity (XXE) exploitation. By nesting multiple layers of entities within an XML document, an attacker can cause the XML parser to consume excessive CPU and memory resources, leading to a denial of service (DoS). ",
  "repo": "langchain-ai/langchain",
  "patch_hash": "727d5023ce88e18e3074ef620a98137d26ff92a3",
  "patch_info": {
    "commit_hash": "727d5023ce88e18e3074ef620a98137d26ff92a3",
    "repo": "langchain-ai/langchain",
    "commit_url": "https://github.com/langchain-ai/langchain/commit/727d5023ce88e18e3074ef620a98137d26ff92a3",
    "files": [
      "libs/core/langchain_core/output_parsers/xml.py",
      "libs/core/poetry.lock",
      "libs/core/pyproject.toml",
      "libs/core/tests/unit_tests/output_parsers/test_xml_parser.py"
    ],
    "message": "core[patch]: Use defusedxml in XMLOutputParser (#19526)\n\nThis mitigates a security concern for users still using older versions of libexpat that causes an attacker to compromise the availability of the system if an attacker manages to surface malicious payload to this XMLParser.",
    "before_after_code_files": [
      "libs/core/langchain_core/output_parsers/xml.py||libs/core/langchain_core/output_parsers/xml.py",
      "libs/core/poetry.lock||libs/core/poetry.lock",
      "libs/core/tests/unit_tests/output_parsers/test_xml_parser.py||libs/core/tests/unit_tests/output_parsers/test_xml_parser.py"
    ]
  },
  "patch_diff": {
    "libs/core/langchain_core/output_parsers/xml.py||libs/core/langchain_core/output_parsers/xml.py": [
      "File: libs/core/langchain_core/output_parsers/xml.py -> libs/core/langchain_core/output_parsers/xml.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: import re",
      "3: from typing import Any, AsyncIterator, Dict, Iterator, List, Optional, Union",
      "5: from langchain_core.exceptions import OutputParserException",
      "6: from langchain_core.messages import BaseMessage",
      "",
      "[Removed Lines]",
      "2: import xml.etree.ElementTree as ET",
      "",
      "[Added Lines]",
      "3: from xml.etree import ElementTree as ET",
      "4: from xml.etree.ElementTree import TreeBuilder",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "35:         return XML_FORMAT_INSTRUCTIONS.format(tags=self.tags)",
      "37:     def parse(self, text: str) -> Dict[str, List[Any]]:",
      "38:         # Try to find XML string within triple backticks",
      "39:         match = re.search(r\"```(xml)?(.*)```\", text, re.DOTALL)",
      "40:         if match is not None:",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "39:         # Imports are temporarily placed here to avoid issue with caching on CI",
      "40:         # likely if you're reading this you can move them to the top of the file",
      "41:         from defusedxml import ElementTree as DET  # type: ignore[import]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "47:         text = text.strip()",
      "48:         try:",
      "50:             return self._root_to_dict(root)",
      "53:             msg = f\"Failed to parse XML format from completion {text}. Got: {e}\"",
      "54:             raise OutputParserException(msg, llm_output=text) from e",
      "56:     def _transform(",
      "57:         self, input: Iterator[Union[str, BaseMessage]]",
      "58:     ) -> Iterator[AddableDict]:",
      "59:         xml_start_re = re.compile(r\"<[a-zA-Z:_]\")",
      "61:         xml_started = False",
      "62:         current_path: List[str] = []",
      "63:         current_path_has_children = False",
      "",
      "[Removed Lines]",
      "49:             root = ET.fromstring(text)",
      "52:         except ET.ParseError as e:",
      "60:         parser = ET.XMLPullParser([\"start\", \"end\"])",
      "",
      "[Added Lines]",
      "54:             root = DET.fromstring(text)",
      "57:         except (DET.ParseError, DET.EntitiesForbidden) as e:",
      "64:         # Imports are temporarily placed here to avoid issue with caching on CI",
      "65:         # likely if you're reading this you can move them to the top of the file",
      "66:         from defusedxml.ElementTree import DefusedXMLParser  # type: ignore[import]",
      "68:         parser = ET.XMLPullParser(",
      "69:             [\"start\", \"end\"], _parser=DefusedXMLParser(target=TreeBuilder())",
      "70:         )",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "105:     async def _atransform(",
      "106:         self, input: AsyncIterator[Union[str, BaseMessage]]",
      "107:     ) -> AsyncIterator[AddableDict]:",
      "109:         current_path: List[str] = []",
      "110:         current_path_has_children = False",
      "111:         async for chunk in input:",
      "112:             if isinstance(chunk, BaseMessage):",
      "113:                 # extract text",
      "",
      "[Removed Lines]",
      "108:         parser = ET.XMLPullParser([\"start\", \"end\"])",
      "",
      "[Added Lines]",
      "120:         # Imports are temporarily placed here to avoid issue with caching on CI",
      "121:         # likely if you're reading this you can move them to the top of the file",
      "122:         from defusedxml.ElementTree import DefusedXMLParser  # type: ignore[import]",
      "124:         _parser = DefusedXMLParser(target=TreeBuilder())",
      "125:         parser = ET.XMLPullParser([\"start\", \"end\"], _parser=_parser)",
      "126:         xml_start_re = re.compile(r\"<[a-zA-Z:_]\")",
      "127:         xml_started = False",
      "130:         buffer = \"\"",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "115:                 if not isinstance(chunk_content, str):",
      "116:                     continue",
      "117:                 chunk = chunk_content",
      "120:             # yield all events",
      "121:             for event, elem in parser.read_events():",
      "122:                 if event == \"start\":",
      "",
      "[Removed Lines]",
      "118:             # pass chunk to parser",
      "119:             parser.feed(chunk)",
      "",
      "[Added Lines]",
      "138:             # add chunk to buffer of unprocessed text",
      "139:             buffer += chunk",
      "140:             # if xml string hasn't started yet, continue to next chunk",
      "141:             if not xml_started:",
      "142:                 if match := xml_start_re.search(buffer):",
      "143:                     # if xml string has started, remove all text before it",
      "144:                     buffer = buffer[match.start() :]",
      "145:                     xml_started = True",
      "146:                 else:",
      "147:                     continue",
      "148:             # feed buffer to parser",
      "149:             parser.feed(buffer)",
      "150:             buffer = \"\"",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "130:                     if not current_path_has_children:",
      "131:                         yield nested_element(current_path, elem)",
      "132:                     # prevent yielding of parent element",
      "134:         # close parser",
      "135:         parser.close()",
      "",
      "[Removed Lines]",
      "133:                     current_path_has_children = True",
      "",
      "[Added Lines]",
      "164:                     if current_path:",
      "165:                         current_path_has_children = True",
      "166:                     else:",
      "167:                         xml_started = False",
      "",
      "---------------"
    ],
    "libs/core/poetry.lock||libs/core/poetry.lock": [
      "File: libs/core/poetry.lock -> libs/core/poetry.lock",
      "--- Hunk 1 ---",
      "[Context before]",
      "661: [[package]]",
      "662: name = \"importlib-metadata\"",
      "664: description = \"Read metadata from Python packages\"",
      "665: optional = false",
      "666: python-versions = \">=3.8\"",
      "667: files = [",
      "670: ]",
      "672: [package.dependencies]",
      "",
      "[Removed Lines]",
      "663: version = \"7.0.2\"",
      "668:     {file = \"importlib_metadata-7.0.2-py3-none-any.whl\", hash = \"sha256:f4bc4c0c070c490abf4ce96d715f68e95923320370efb66143df00199bb6c100\"},",
      "669:     {file = \"importlib_metadata-7.0.2.tar.gz\", hash = \"sha256:198f568f3230878cb1b44fbd7975f87906c22336dba2e4a7f05278c281fbd792\"},",
      "",
      "[Added Lines]",
      "663: version = \"7.1.0\"",
      "668:     {file = \"importlib_metadata-7.1.0-py3-none-any.whl\", hash = \"sha256:30962b96c0c223483ed6cc7280e7f0199feb01a0e40cfae4d4450fc6fab1f570\"},",
      "669:     {file = \"importlib_metadata-7.1.0.tar.gz\", hash = \"sha256:b78938b926ee8d5f020fc4772d487045805a55ddbad2ecf21c6d60938dc7fcd2\"},",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "675: [package.extras]",
      "676: docs = [\"furo\", \"jaraco.packaging (>=9.3)\", \"jaraco.tidelift (>=1.4)\", \"rst.linker (>=1.9)\", \"sphinx (>=3.5)\", \"sphinx-lint\"]",
      "677: perf = [\"ipython\"]",
      "680: [[package]]",
      "681: name = \"importlib-resources\"",
      "683: description = \"Read resources from Python packages\"",
      "684: optional = false",
      "685: python-versions = \">=3.8\"",
      "686: files = [",
      "689: ]",
      "691: [package.dependencies]",
      "",
      "[Removed Lines]",
      "678: testing = [\"flufl.flake8\", \"importlib-resources (>=1.3)\", \"packaging\", \"pyfakefs\", \"pytest (>=6)\", \"pytest-checkdocs (>=2.4)\", \"pytest-cov\", \"pytest-enabler (>=2.2)\", \"pytest-mypy\", \"pytest-perf (>=0.9.2)\", \"pytest-ruff (>=0.2.1)\"]",
      "682: version = \"6.3.1\"",
      "687:     {file = \"importlib_resources-6.3.1-py3-none-any.whl\", hash = \"sha256:4811639ca7fa830abdb8e9ca0a104dc6ad13de691d9fe0d3173a71304f068159\"},",
      "688:     {file = \"importlib_resources-6.3.1.tar.gz\", hash = \"sha256:29a3d16556e330c3c8fb8202118c5ff41241cc34cbfb25989bbad226d99b7995\"},",
      "",
      "[Added Lines]",
      "678: testing = [\"flufl.flake8\", \"importlib-resources (>=1.3)\", \"jaraco.test (>=5.4)\", \"packaging\", \"pyfakefs\", \"pytest (>=6)\", \"pytest-checkdocs (>=2.4)\", \"pytest-cov\", \"pytest-enabler (>=2.2)\", \"pytest-mypy\", \"pytest-perf (>=0.9.2)\", \"pytest-ruff (>=0.2.1)\"]",
      "682: version = \"6.4.0\"",
      "687:     {file = \"importlib_resources-6.4.0-py3-none-any.whl\", hash = \"sha256:50d10f043df931902d4194ea07ec57960f66a80449ff867bfe782b4c486ba78c\"},",
      "688:     {file = \"importlib_resources-6.4.0.tar.gz\", hash = \"sha256:cdb2b453b8046ca4e3798eb1d84f3cce1446a0e8e7b5ef4efb600f19fc398145\"},",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "694: [package.extras]",
      "695: docs = [\"furo\", \"jaraco.packaging (>=9.3)\", \"jaraco.tidelift (>=1.4)\", \"rst.linker (>=1.9)\", \"sphinx (<7.2.5)\", \"sphinx (>=3.5)\", \"sphinx-lint\"]",
      "698: [[package]]",
      "699: name = \"iniconfig\"",
      "",
      "[Removed Lines]",
      "696: testing = [\"jaraco.collections\", \"pytest (>=6)\", \"pytest-checkdocs (>=2.4)\", \"pytest-cov\", \"pytest-enabler (>=2.2)\", \"pytest-mypy\", \"pytest-ruff (>=0.2.1)\", \"zipp (>=3.17)\"]",
      "",
      "[Added Lines]",
      "696: testing = [\"jaraco.test (>=5.4)\", \"pytest (>=6)\", \"pytest-checkdocs (>=2.4)\", \"pytest-cov\", \"pytest-enabler (>=2.2)\", \"pytest-mypy\", \"pytest-ruff (>=0.2.1)\", \"zipp (>=3.17)\"]",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1021: [[package]]",
      "1022: name = \"jupyter-events\"",
      "1024: description = \"Jupyter Event System library\"",
      "1025: optional = false",
      "1026: python-versions = \">=3.8\"",
      "1027: files = [",
      "1030: ]",
      "1032: [package.dependencies]",
      "",
      "[Removed Lines]",
      "1023: version = \"0.9.1\"",
      "1028:     {file = \"jupyter_events-0.9.1-py3-none-any.whl\", hash = \"sha256:e51f43d2c25c2ddf02d7f7a5045f71fc1d5cb5ad04ef6db20da961c077654b9b\"},",
      "1029:     {file = \"jupyter_events-0.9.1.tar.gz\", hash = \"sha256:a52e86f59eb317ee71ff2d7500c94b963b8a24f0b7a1517e2e653e24258e15c7\"},",
      "",
      "[Added Lines]",
      "1023: version = \"0.10.0\"",
      "1028:     {file = \"jupyter_events-0.10.0-py3-none-any.whl\", hash = \"sha256:4b72130875e59d57716d327ea70d3ebc3af1944d3717e5a498b8a06c6c159960\"},",
      "1029:     {file = \"jupyter_events-0.10.0.tar.gz\", hash = \"sha256:670b8229d3cc882ec782144ed22e0d29e1c2d639263f92ca8383e66682845e22\"},",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1217: [[package]]",
      "1218: name = \"langsmith\"",
      "1220: description = \"Client library to connect to the LangSmith LLM Tracing and Evaluation Platform.\"",
      "1221: optional = false",
      "1223: files = [",
      "1226: ]",
      "1228: [package.dependencies]",
      "",
      "[Removed Lines]",
      "1219: version = \"0.1.27\"",
      "1222: python-versions = \">=3.8.1,<4.0\"",
      "1224:     {file = \"langsmith-0.1.27-py3-none-any.whl\", hash = \"sha256:d223176952b1525c958189ab1b894f5bd9891ec9177222f7a978aeee4bf1cc95\"},",
      "1225:     {file = \"langsmith-0.1.27.tar.gz\", hash = \"sha256:e0a339d976362051adf3fdbc43fcc7c00bb4615a401321ad7e556bd2dab556c0\"},",
      "",
      "[Added Lines]",
      "1219: version = \"0.1.31\"",
      "1222: python-versions = \"<4.0,>=3.8.1\"",
      "1224:     {file = \"langsmith-0.1.31-py3-none-any.whl\", hash = \"sha256:5211a9dc00831db307eb843485a97096484b697b5d2cd1efaac34228e97ca087\"},",
      "1225:     {file = \"langsmith-0.1.31.tar.gz\", hash = \"sha256:efd54ccd44be7fda911bfdc0ead340473df2fdd07345c7252901834d0c4aa37e\"},",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1407: [[package]]",
      "1408: name = \"nbconvert\"",
      "1410: description = \"Converting Jupyter Notebooks (.ipynb files) to other formats.  Output formats include asciidoc, html, latex, markdown, pdf, py, rst, script.  nbconvert can be used both as a Python library (`import nbconvert`) or as a command line tool (invoked as `jupyter nbconvert ...`).\"",
      "1411: optional = false",
      "1412: python-versions = \">=3.8\"",
      "1413: files = [",
      "1416: ]",
      "1418: [package.dependencies]",
      "",
      "[Removed Lines]",
      "1409: version = \"7.16.2\"",
      "1414:     {file = \"nbconvert-7.16.2-py3-none-any.whl\", hash = \"sha256:0c01c23981a8de0220255706822c40b751438e32467d6a686e26be08ba784382\"},",
      "1415:     {file = \"nbconvert-7.16.2.tar.gz\", hash = \"sha256:8310edd41e1c43947e4ecf16614c61469ebc024898eb808cce0999860fc9fb16\"},",
      "",
      "[Added Lines]",
      "1409: version = \"7.16.3\"",
      "1414:     {file = \"nbconvert-7.16.3-py3-none-any.whl\", hash = \"sha256:ddeff14beeeedf3dd0bc506623e41e4507e551736de59df69a91f86700292b3b\"},",
      "1415:     {file = \"nbconvert-7.16.3.tar.gz\", hash = \"sha256:a6733b78ce3d47c3f85e504998495b07e6ea9cf9bf6ec1c98dda63ec6ad19142\"},",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1439: qtpdf = [\"nbconvert[qtpng]\"]",
      "1440: qtpng = [\"pyqtwebengine (>=5.15)\"]",
      "1441: serve = [\"tornado (>=6.1)\"]",
      "1443: webpdf = [\"playwright\"]",
      "1445: [[package]]",
      "",
      "[Removed Lines]",
      "1442: test = [\"flaky\", \"ipykernel\", \"ipywidgets (>=7.5)\", \"pytest\"]",
      "",
      "[Added Lines]",
      "1442: test = [\"flaky\", \"ipykernel\", \"ipywidgets (>=7.5)\", \"pytest (>=7)\"]",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1998: [[package]]",
      "1999: name = \"pytest-mock\"",
      "2001: description = \"Thin-wrapper around the mock package for easier use with pytest\"",
      "2002: optional = false",
      "2003: python-versions = \">=3.8\"",
      "2004: files = [",
      "2007: ]",
      "2009: [package.dependencies]",
      "2012: [package.extras]",
      "2013: dev = [\"pre-commit\", \"pytest-asyncio\", \"tox\"]",
      "",
      "[Removed Lines]",
      "2000: version = \"3.12.0\"",
      "2005:     {file = \"pytest-mock-3.12.0.tar.gz\", hash = \"sha256:31a40f038c22cad32287bb43932054451ff5583ff094bca6f675df2f8bc1a6e9\"},",
      "2006:     {file = \"pytest_mock-3.12.0-py3-none-any.whl\", hash = \"sha256:0972719a7263072da3a21c7f4773069bcc7486027d7e8e1f81d98a47e701bc4f\"},",
      "2010: pytest = \">=5.0\"",
      "",
      "[Added Lines]",
      "2000: version = \"3.14.0\"",
      "2005:     {file = \"pytest-mock-3.14.0.tar.gz\", hash = \"sha256:2719255a1efeceadbc056d6bf3df3d1c5015530fb40cf347c0f9afac88410bd0\"},",
      "2006:     {file = \"pytest_mock-3.14.0-py3-none-any.whl\", hash = \"sha256:0b72c38033392a5f4621342fe11e9219ac11ec9d375f8e2a0c164539e0d70f6f\"},",
      "2010: pytest = \">=6.2.5\"",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "2966: [metadata]",
      "2967: lock-version = \"2.0\"",
      "2968: python-versions = \">=3.8.1,<4.0\"",
      "",
      "[Removed Lines]",
      "2969: content-hash = \"ca611429e3dd84ce6dac7ef69d7d9b4da78bf467356946e37016b821e5fe752e\"",
      "",
      "[Added Lines]",
      "2969: content-hash = \"a13a0a8454b242106bb681fa74e1f1320a0198f2e07b35d29d985b03a310cf67\"",
      "",
      "---------------"
    ],
    "libs/core/tests/unit_tests/output_parsers/test_xml_parser.py||libs/core/tests/unit_tests/output_parsers/test_xml_parser.py": [
      "File: libs/core/tests/unit_tests/output_parsers/test_xml_parser.py -> libs/core/tests/unit_tests/output_parsers/test_xml_parser.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: \"\"\"Test XMLOutputParser\"\"\"",
      "2: import pytest",
      "4: from langchain_core.exceptions import OutputParserException",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2: from typing import AsyncIterator",
      "3: from xml.etree.ElementTree import ParseError",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "40: \"\"\",",
      "41:     ],",
      "42: )",
      "44:     \"\"\"Test XMLOutputParser.\"\"\"",
      "46:     xml_parser = XMLOutputParser()",
      "50:     assert list(xml_parser.transform(iter(result))) == [",
      "51:         {\"foo\": [{\"bar\": [{\"baz\": None}]}]},",
      "52:         {\"foo\": [{\"bar\": [{\"baz\": \"slim.shady\"}]}]},",
      "53:         {\"foo\": [{\"baz\": \"tag\"}]},",
      "54:     ]",
      "57: @pytest.mark.parametrize(\"result\", [\"foo></foo>\", \"<foo></foo\", \"foo></foo\", \"foofoo\"])",
      "58: def test_xml_output_parser_fail(result: str) -> None:",
      "",
      "[Removed Lines]",
      "43: def test_xml_output_parser(result: str) -> None:",
      "48:     xml_result = xml_parser.parse(result)",
      "49:     assert DEF_RESULT_EXPECTED == xml_result",
      "",
      "[Added Lines]",
      "46: async def test_xml_output_parser(result: str) -> None:",
      "50:     assert DEF_RESULT_EXPECTED == xml_parser.parse(result)",
      "51:     assert DEF_RESULT_EXPECTED == (await xml_parser.aparse(result))",
      "58:     async def _as_iter(string: str) -> AsyncIterator[str]:",
      "59:         for c in string:",
      "60:             yield c",
      "62:     chunks = [chunk async for chunk in xml_parser.atransform(_as_iter(result))]",
      "63:     assert chunks == [",
      "64:         {\"foo\": [{\"bar\": [{\"baz\": None}]}]},",
      "65:         {\"foo\": [{\"bar\": [{\"baz\": \"slim.shady\"}]}]},",
      "66:         {\"foo\": [{\"baz\": \"tag\"}]},",
      "67:     ]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "63:     with pytest.raises(OutputParserException) as e:",
      "64:         xml_parser.parse(result)",
      "65:     assert \"Failed to parse\" in str(e)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "81: MALICIOUS_XML = \"\"\"<?xml version=\"1.0\"?>",
      "82: <!DOCTYPE lolz [<!ENTITY lol \"lol\"><!ELEMENT lolz (#PCDATA)>",
      "83:  <!ENTITY lol1 \"&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;\">",
      "84:  <!ENTITY lol2 \"&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;\">",
      "85:  <!ENTITY lol3 \"&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;\">",
      "86:  <!ENTITY lol4 \"&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;\">",
      "87:  <!ENTITY lol5 \"&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;\">",
      "88:  <!ENTITY lol6 \"&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;\">",
      "89:  <!ENTITY lol7 \"&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;\">",
      "90:  <!ENTITY lol8 \"&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;\">",
      "91:  <!ENTITY lol9 \"&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;\">",
      "92: ]>",
      "93: <lolz>&lol9;</lolz>\"\"\"",
      "96: async def tests_billion_laughs_attack() -> None:",
      "97:     parser = XMLOutputParser()",
      "98:     with pytest.raises(OutputParserException):",
      "99:         parser.parse(MALICIOUS_XML)",
      "101:     with pytest.raises(OutputParserException):",
      "102:         await parser.aparse(MALICIOUS_XML)",
      "104:     with pytest.raises(ParseError):",
      "105:         # Right now raises undefined entity error",
      "106:         assert list(parser.transform(iter(MALICIOUS_XML))) == [",
      "107:             {\"foo\": [{\"bar\": [{\"baz\": None}]}]}",
      "108:         ]",
      "110:     async def _as_iter(string: str) -> AsyncIterator[str]:",
      "111:         for c in string:",
      "112:             yield c",
      "114:     with pytest.raises(ParseError):",
      "115:         chunks = [chunk async for chunk in parser.atransform(_as_iter(MALICIOUS_XML))]",
      "116:         assert chunks == [{\"foo\": [{\"bar\": [{\"baz\": None}]}]}]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ab7601880ec90e146656af842b7716551c113465",
      "candidate_info": {
        "commit_hash": "ab7601880ec90e146656af842b7716551c113465",
        "repo": "langchain-ai/langchain",
        "commit_url": "https://github.com/langchain-ai/langchain/commit/ab7601880ec90e146656af842b7716551c113465",
        "files": [
          "libs/core/poetry.lock"
        ],
        "message": "lock",
        "before_after_code_files": [
          "libs/core/poetry.lock||libs/core/poetry.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libs/core/poetry.lock||libs/core/poetry.lock"
          ],
          "candidate": [
            "libs/core/poetry.lock||libs/core/poetry.lock"
          ]
        }
      },
      "candidate_diff": {
        "libs/core/poetry.lock||libs/core/poetry.lock": [
          "File: libs/core/poetry.lock -> libs/core/poetry.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "2191:     {file = \"PyYAML-6.0.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:69b023b2b4daa7548bcfbd4aa3da05b3a74b772db9e23b982788168117739938\"},",
          "2192:     {file = \"PyYAML-6.0.1-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:81e0b275a9ecc9c0c0c07b4b90ba548307583c125f54d5b6946cfee6360c733d\"},",
          "2193:     {file = \"PyYAML-6.0.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ba336e390cd8e4d1739f42dfe9bb83a3cc2e80f567d8805e11b46f4a943f5515\"},",
          "2194:     {file = \"PyYAML-6.0.1-cp310-cp310-win32.whl\", hash = \"sha256:bd4af7373a854424dabd882decdc5579653d7868b8fb26dc7d0e99f823aa5924\"},",
          "2195:     {file = \"PyYAML-6.0.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:fd1592b3fdf65fff2ad0004b5e363300ef59ced41c2e6b3a99d4089fa8c5435d\"},",
          "2196:     {file = \"PyYAML-6.0.1-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:6965a7bc3cf88e5a1c3bd2e0b5c22f8d677dc88a455344035f03399034eb3007\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2194:     {file = \"PyYAML-6.0.1-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:326c013efe8048858a6d312ddd31d56e468118ad4cdeda36c719bf5bb6192290\"},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2198:     {file = \"PyYAML-6.0.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:42f8152b8dbc4fe7d96729ec2b99c7097d656dc1213a3229ca5383f973a5ed6d\"},",
          "2199:     {file = \"PyYAML-6.0.1-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:062582fca9fabdd2c8b54a3ef1c978d786e0f6b3a1510e0ac93ef59e0ddae2bc\"},",
          "2200:     {file = \"PyYAML-6.0.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d2b04aac4d386b172d5b9692e2d2da8de7bfb6c387fa4f801fbf6fb2e6ba4673\"},",
          "2201:     {file = \"PyYAML-6.0.1-cp311-cp311-win32.whl\", hash = \"sha256:1635fd110e8d85d55237ab316b5b011de701ea0f29d07611174a1b42f1444741\"},",
          "2202:     {file = \"PyYAML-6.0.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:bf07ee2fef7014951eeb99f56f39c9bb4af143d8aa3c21b1677805985307da34\"},",
          "2203:     {file = \"PyYAML-6.0.1-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:50550eb667afee136e9a77d6dc71ae76a44df8b3e51e41b77f6de2932bfe0f47\"},",
          "2204:     {file = \"PyYAML-6.0.1-cp36-cp36m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:1fe35611261b29bd1de0070f0b2f47cb6ff71fa6595c077e42bd0c419fa27b98\"},",
          "2205:     {file = \"PyYAML-6.0.1-cp36-cp36m-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:704219a11b772aea0d8ecd7058d0082713c3562b4e271b849ad7dc4a5c90c13c\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2202:     {file = \"PyYAML-6.0.1-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:e7d73685e87afe9f3b36c799222440d6cf362062f78be1013661b00c5c6f678b\"},",
          "2205:     {file = \"PyYAML-6.0.1-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:855fb52b0dc35af121542a76b9a84f8d1cd886ea97c84703eaa6d88e37a2ad28\"},",
          "2206:     {file = \"PyYAML-6.0.1-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:40df9b996c2b73138957fe23a16a4f0ba614f4c0efce1e9406a184b6d07fa3a9\"},",
          "2207:     {file = \"PyYAML-6.0.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a08c6f0fe150303c1c6b71ebcd7213c2858041a7e01975da3a99aed1e7a378ef\"},",
          "2208:     {file = \"PyYAML-6.0.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6c22bec3fbe2524cde73d7ada88f6566758a8f7227bfbf93a408a9d86bcc12a0\"},",
          "2209:     {file = \"PyYAML-6.0.1-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:8d4e9c88387b0f5c7d5f281e55304de64cf7f9c0021a3525bd3b1c542da3b0e4\"},",
          "2210:     {file = \"PyYAML-6.0.1-cp312-cp312-win32.whl\", hash = \"sha256:d483d2cdf104e7c9fa60c544d92981f12ad66a457afae824d146093b8c294c54\"},",
          "2211:     {file = \"PyYAML-6.0.1-cp312-cp312-win_amd64.whl\", hash = \"sha256:0d3304d8c0adc42be59c5f8a4d9e3d7379e6955ad754aa9d6ab7a398b59dd1df\"},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2216:     {file = \"PyYAML-6.0.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a0cd17c15d3bb3fa06978b4e8958dcdc6e0174ccea823003a106c7d4d7899ac5\"},",
          "2217:     {file = \"PyYAML-6.0.1-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:28c119d996beec18c05208a8bd78cbe4007878c6dd15091efb73a30e90539696\"},",
          "2218:     {file = \"PyYAML-6.0.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:7e07cbde391ba96ab58e532ff4803f79c4129397514e1413a7dc761ccd755735\"},",
          "2219:     {file = \"PyYAML-6.0.1-cp38-cp38-win32.whl\", hash = \"sha256:184c5108a2aca3c5b3d3bf9395d50893a7ab82a38004c8f61c258d4428e80206\"},",
          "2220:     {file = \"PyYAML-6.0.1-cp38-cp38-win_amd64.whl\", hash = \"sha256:1e2722cc9fbb45d9b87631ac70924c11d3a401b2d7f410cc0e3bbf249f2dca62\"},",
          "2221:     {file = \"PyYAML-6.0.1-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:9eb6caa9a297fc2c2fb8862bc5370d0303ddba53ba97e71f08023b6cd73d16a8\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2228:     {file = \"PyYAML-6.0.1-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:49a183be227561de579b4a36efbb21b3eab9651dd81b1858589f796549873dd6\"},",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2223:     {file = \"PyYAML-6.0.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:5773183b6446b2c99bb77e77595dd486303b4faab2b086e7b17bc6bef28865f6\"},",
          "2224:     {file = \"PyYAML-6.0.1-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:b786eecbdf8499b9ca1d697215862083bd6d2a99965554781d0d8d1ad31e13a0\"},",
          "2225:     {file = \"PyYAML-6.0.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:bc1bf2925a1ecd43da378f4db9e4f799775d6367bdb94671027b73b393a7c42c\"},",
          "2226:     {file = \"PyYAML-6.0.1-cp39-cp39-win32.whl\", hash = \"sha256:faca3bdcf85b2fc05d06ff3fbc1f83e1391b3e724afa3feba7d13eeab355484c\"},",
          "2227:     {file = \"PyYAML-6.0.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:510c9deebc5c0225e8c96813043e62b680ba2f9c50a08d3724c7f28a747d1486\"},",
          "2228:     {file = \"PyYAML-6.0.1.tar.gz\", hash = \"sha256:bfdf460b1736c775f2ba9f6a92bca30bc2095067b8a9d77876d1fad6cc3b4a43\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2236:     {file = \"PyYAML-6.0.1-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:04ac92ad1925b2cff1db0cfebffb6ffc43457495c9b3c39d3fcae417d7125dc5\"},",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3011: [metadata]",
          "3012: lock-version = \"2.0\"",
          "3013: python-versions = \">=3.8.1,<4.0\"",
          "",
          "[Removed Lines]",
          "3014: content-hash = \"368d050ae41dfbb296a7319987ebfe09ddf599474078649a517fb6c432b6d9b1\"",
          "",
          "[Added Lines]",
          "3025: content-hash = \"d99a238dc01826c5e145bde53ec69ddb1072eb3ea92785df4a70671244027c4e\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "789f4b1c9cc7ed177b54ee5a22e9aeb38c1767c7",
      "candidate_info": {
        "commit_hash": "789f4b1c9cc7ed177b54ee5a22e9aeb38c1767c7",
        "repo": "langchain-ai/langchain",
        "commit_url": "https://github.com/langchain-ai/langchain/commit/789f4b1c9cc7ed177b54ee5a22e9aeb38c1767c7",
        "files": [
          "libs/core/poetry.lock"
        ],
        "message": "fmt",
        "before_after_code_files": [
          "libs/core/poetry.lock||libs/core/poetry.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libs/core/poetry.lock||libs/core/poetry.lock"
          ],
          "candidate": [
            "libs/core/poetry.lock||libs/core/poetry.lock"
          ]
        }
      },
      "candidate_diff": {
        "libs/core/poetry.lock||libs/core/poetry.lock": [
          "File: libs/core/poetry.lock -> libs/core/poetry.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "3015: [metadata]",
          "3016: lock-version = \"2.0\"",
          "3017: python-versions = \">=3.9,<4.0\"",
          "",
          "[Removed Lines]",
          "3018: content-hash = \"0e0eec209d5652d6476b0d71393415eea2917f38235ad6e0b09ffd97f5b2ce87\"",
          "",
          "[Added Lines]",
          "3018: content-hash = \"b64871f84ca286a52214d52134d1e3401a35ae4f0595b8acc7f6696e69b17001\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "213101b4615e5c70f901221a156ed6c60a905bdf",
      "candidate_info": {
        "commit_hash": "213101b4615e5c70f901221a156ed6c60a905bdf",
        "repo": "langchain-ai/langchain",
        "commit_url": "https://github.com/langchain-ai/langchain/commit/213101b4615e5c70f901221a156ed6c60a905bdf",
        "files": [
          "libs/core/poetry.lock",
          "libs/core/pyproject.toml"
        ],
        "message": "break tests",
        "before_after_code_files": [
          "libs/core/poetry.lock||libs/core/poetry.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libs/core/poetry.lock||libs/core/poetry.lock"
          ],
          "candidate": [
            "libs/core/poetry.lock||libs/core/poetry.lock"
          ]
        }
      },
      "candidate_diff": {
        "libs/core/poetry.lock||libs/core/poetry.lock": [
          "File: libs/core/poetry.lock -> libs/core/poetry.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: [[package]]",
          "4: name = \"annotated-types\"",
          "",
          "[Removed Lines]",
          "1: # This file is automatically @generated by Poetry 1.7.1 and should not be changed by hand.",
          "",
          "[Added Lines]",
          "1: # This file is automatically @generated by Poetry 1.8.3 and should not be changed by hand.",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1857:     {file = \"pycparser-2.22.tar.gz\", hash = \"sha256:491c8be9c040f5390f5bf44a5b07752bd07f56edf992381b05c701439eec10f6\"},",
          "1858: ]",
          "1860: [[package]]",
          "1861: name = \"pydantic\"",
          "1862: version = \"2.7.4\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1860: [[package]]",
          "1861: name = \"pydantic\"",
          "1862: version = \"2.7.3\"",
          "1863: description = \"Data validation using Python type hints\"",
          "1864: optional = false",
          "1865: python-versions = \">=3.8\"",
          "1866: files = [",
          "1867:     {file = \"pydantic-2.7.3-py3-none-any.whl\", hash = \"sha256:ea91b002777bf643bb20dd717c028ec43216b24a6001a280f83877fd2655d0b4\"},",
          "1868:     {file = \"pydantic-2.7.3.tar.gz\", hash = \"sha256:c46c76a40bb1296728d7a8b99aa73dd70a48c3510111ff290034f860c99c419e\"},",
          "1869: ]",
          "1871: [package.dependencies]",
          "1872: annotated-types = \">=0.4.0\"",
          "1873: pydantic-core = \"2.18.4\"",
          "1874: typing-extensions = \">=4.6.1\"",
          "1876: [package.extras]",
          "1877: email = [\"email-validator (>=2.0.0)\"]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3003: [metadata]",
          "3004: lock-version = \"2.0\"",
          "3005: python-versions = \">=3.8.1,<4.0\"",
          "",
          "[Removed Lines]",
          "3006: content-hash = \"80ea26d7abea8a3ce812adf528ba2aa3250e97b6309575d678bd68d454096ecb\"",
          "",
          "[Added Lines]",
          "3025: content-hash = \"22666d4603b9b4fa1801843efd3598abbd2bc4ce03096746e12a715bb462328b\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7d5800ee515bf0cf38b97d09abb6857b767ab05f",
      "candidate_info": {
        "commit_hash": "7d5800ee515bf0cf38b97d09abb6857b767ab05f",
        "repo": "langchain-ai/langchain",
        "commit_url": "https://github.com/langchain-ai/langchain/commit/7d5800ee515bf0cf38b97d09abb6857b767ab05f",
        "files": [
          "libs/core/langchain_core/beta/runnables/context.py",
          "libs/core/langchain_core/runnables/base.py",
          "libs/core/langchain_core/runnables/graph.py",
          "libs/core/langchain_core/runnables/graph_draw.py",
          "libs/core/langchain_core/runnables/utils.py",
          "libs/core/poetry.lock",
          "libs/core/pyproject.toml",
          "libs/core/tests/unit_tests/runnables/__snapshots__/test_graph.ambr",
          "libs/core/tests/unit_tests/runnables/__snapshots__/test_runnable.ambr",
          "libs/core/tests/unit_tests/runnables/test_graph.py",
          "libs/core/tests/unit_tests/runnables/test_runnable.py",
          "poetry.lock"
        ],
        "message": "Add Runnable.get_graph() to get a graph representation of a Runnable (#15040)\n\nIt can be drawn in ascii with Runnable.get_graph().draw()",
        "before_after_code_files": [
          "libs/core/langchain_core/beta/runnables/context.py||libs/core/langchain_core/beta/runnables/context.py",
          "libs/core/langchain_core/runnables/base.py||libs/core/langchain_core/runnables/base.py",
          "libs/core/langchain_core/runnables/graph.py||libs/core/langchain_core/runnables/graph.py",
          "libs/core/langchain_core/runnables/graph_draw.py||libs/core/langchain_core/runnables/graph_draw.py",
          "libs/core/langchain_core/runnables/utils.py||libs/core/langchain_core/runnables/utils.py",
          "libs/core/poetry.lock||libs/core/poetry.lock",
          "libs/core/tests/unit_tests/runnables/__snapshots__/test_graph.ambr||libs/core/tests/unit_tests/runnables/__snapshots__/test_graph.ambr",
          "libs/core/tests/unit_tests/runnables/__snapshots__/test_runnable.ambr||libs/core/tests/unit_tests/runnables/__snapshots__/test_runnable.ambr",
          "libs/core/tests/unit_tests/runnables/test_graph.py||libs/core/tests/unit_tests/runnables/test_graph.py",
          "libs/core/tests/unit_tests/runnables/test_runnable.py||libs/core/tests/unit_tests/runnables/test_runnable.py",
          "poetry.lock||poetry.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libs/core/poetry.lock||libs/core/poetry.lock"
          ],
          "candidate": [
            "libs/core/poetry.lock||libs/core/poetry.lock"
          ]
        }
      },
      "candidate_diff": {
        "libs/core/langchain_core/beta/runnables/context.py||libs/core/langchain_core/beta/runnables/context.py": [
          "File: libs/core/langchain_core/beta/runnables/context.py -> libs/core/langchain_core/beta/runnables/context.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "12:     List,",
          "13:     Mapping,",
          "14:     Optional,",
          "15:     Type,",
          "16:     TypeVar,",
          "17:     Union,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15:     Sequence,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "164:     key: Union[str, List[str]]",
          "166:     @property",
          "167:     def ids(self) -> List[str]:",
          "168:         prefix = self.prefix + \"/\" if self.prefix else \"\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "167:     def __str__(self) -> str:",
          "168:         return f\"ContextGet({_print_keys(self.key)})\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "243:             prefix=prefix,",
          "244:         )",
          "246:     @property",
          "247:     def ids(self) -> List[str]:",
          "248:         prefix = self.prefix + \"/\" if self.prefix else \"\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "250:     def __str__(self) -> str:",
          "251:         return f\"ContextSet({_print_keys(list(self.keys.keys()))})\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "346:     ) -> ContextSet:",
          "347:         return ContextSet(_key, _value, prefix=self.prefix, **kwargs)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "357: def _print_keys(keys: Union[str, Sequence[str]]) -> str:",
          "358:     if isinstance(keys, str):",
          "359:         return f\"'{keys}'\"",
          "360:     else:",
          "361:         return \", \".join(f\"'{k}'\" for k in keys)",
          "",
          "---------------"
        ],
        "libs/core/langchain_core/runnables/base.py||libs/core/langchain_core/runnables/base.py": [
          "File: libs/core/langchain_core/runnables/base.py -> libs/core/langchain_core/runnables/base.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:     from langchain_core.runnables.fallbacks import (",
          "75:         RunnableWithFallbacks as RunnableWithFallbacksT,",
          "76:     )",
          "77:     from langchain_core.tracers.log_stream import RunLog, RunLogPatch",
          "78:     from langchain_core.tracers.root_listeners import Listener",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "77:     from langchain_core.runnables.graph import Graph",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "352:             },",
          "353:         )",
          "355:     def __or__(",
          "356:         self,",
          "357:         other: Union[",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "356:     def get_graph(self, config: Optional[RunnableConfig] = None) -> Graph:",
          "357:         \"\"\"Return a graph representation of this runnable.\"\"\"",
          "358:         from langchain_core.runnables.graph import Graph",
          "360:         graph = Graph()",
          "361:         input_node = graph.add_node(self.get_input_schema(config))",
          "362:         runnable_node = graph.add_node(self)",
          "363:         output_node = graph.add_node(self.get_output_schema(config))",
          "364:         graph.add_edge(input_node, runnable_node)",
          "365:         graph.add_edge(runnable_node, output_node)",
          "366:         return graph",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1448:         return get_unique_config_specs(spec for spec, _ in all_specs)",
          "1450:     def __repr__(self) -> str:",
          "1451:         return \"\\n| \".join(",
          "1452:             repr(s) if i == 0 else indent_lines_after_first(repr(s), \"| \")",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1463:     def get_graph(self, config: Optional[RunnableConfig] = None) -> Graph:",
          "1464:         from langchain_core.runnables.graph import Graph",
          "1466:         graph = Graph()",
          "1467:         for step in self.steps:",
          "1468:             current_last_node = graph.last_node()",
          "1469:             step_graph = step.get_graph(config)",
          "1470:             if step is not self.first:",
          "1471:                 step_graph.trim_first_node()",
          "1472:             if step is not self.last:",
          "1473:                 step_graph.trim_last_node()",
          "1474:             graph.extend(step_graph)",
          "1475:             step_first_node = step_graph.first_node()",
          "1476:             if not step_first_node:",
          "1477:                 raise ValueError(f\"Runnable {step} has no first node\")",
          "1478:             if current_last_node:",
          "1479:                 graph.add_edge(current_last_node, step_first_node)",
          "1481:         return graph",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1992:             spec for step in self.steps.values() for spec in step.config_specs",
          "1993:         )",
          "1995:     def __repr__(self) -> str:",
          "1996:         map_for_repr = \",\\n  \".join(",
          "1997:             f\"{k}: {indent_lines_after_first(repr(v), '  ' + k + ': ')}\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2028:     def get_graph(self, config: Optional[RunnableConfig] = None) -> Graph:",
          "2029:         from langchain_core.runnables.graph import Graph",
          "2031:         graph = Graph()",
          "2032:         input_node = graph.add_node(self.get_input_schema(config))",
          "2033:         output_node = graph.add_node(self.get_output_schema(config))",
          "2034:         for step in self.steps.values():",
          "2035:             step_graph = step.get_graph()",
          "2036:             step_graph.trim_first_node()",
          "2037:             step_graph.trim_last_node()",
          "2038:             if not step_graph:",
          "2039:                 graph.add_edge(input_node, output_node)",
          "2040:             else:",
          "2041:                 graph.extend(step_graph)",
          "2042:                 step_first_node = step_graph.first_node()",
          "2043:                 if not step_first_node:",
          "2044:                     raise ValueError(f\"Runnable {step} has no first node\")",
          "2045:                 step_last_node = step_graph.last_node()",
          "2046:                 if not step_last_node:",
          "2047:                     raise ValueError(f\"Runnable {step} has no last node\")",
          "2048:                 graph.add_edge(input_node, step_first_node)",
          "2049:                 graph.add_edge(step_last_node, output_node)",
          "2051:         return graph",
          "",
          "---------------"
        ],
        "libs/core/langchain_core/runnables/graph.py||libs/core/langchain_core/runnables/graph.py": [
          "File: libs/core/langchain_core/runnables/graph.py -> libs/core/langchain_core/runnables/graph.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: from __future__ import annotations",
          "3: from dataclasses import dataclass, field",
          "4: from typing import Dict, List, NamedTuple, Optional, Type, Union",
          "5: from uuid import uuid4",
          "7: from langchain_core.pydantic_v1 import BaseModel",
          "8: from langchain_core.runnables.base import Runnable",
          "9: from langchain_core.runnables.graph_draw import draw",
          "12: class Edge(NamedTuple):",
          "13:     source: str",
          "14:     target: str",
          "17: class Node(NamedTuple):",
          "18:     id: str",
          "19:     data: Union[Type[BaseModel], Runnable]",
          "22: @dataclass",
          "23: class Graph:",
          "24:     nodes: Dict[str, Node] = field(default_factory=dict)",
          "25:     edges: List[Edge] = field(default_factory=list)",
          "27:     def __bool__(self) -> bool:",
          "28:         return bool(self.nodes)",
          "30:     def next_id(self) -> str:",
          "31:         return uuid4().hex",
          "33:     def add_node(self, data: Union[Type[BaseModel], Runnable]) -> Node:",
          "34:         \"\"\"Add a node to the graph and return it.\"\"\"",
          "35:         node = Node(id=self.next_id(), data=data)",
          "36:         self.nodes[node.id] = node",
          "37:         return node",
          "39:     def remove_node(self, node: Node) -> None:",
          "40:         \"\"\"Remove a node from the graphm and all edges connected to it.\"\"\"",
          "41:         self.nodes.pop(node.id)",
          "42:         self.edges = [",
          "43:             edge",
          "44:             for edge in self.edges",
          "45:             if edge.source != node.id and edge.target != node.id",
          "46:         ]",
          "48:     def add_edge(self, source: Node, target: Node) -> Edge:",
          "49:         \"\"\"Add an edge to the graph and return it.\"\"\"",
          "50:         if source.id not in self.nodes:",
          "51:             raise ValueError(f\"Source node {source.id} not in graph\")",
          "52:         if target.id not in self.nodes:",
          "53:             raise ValueError(f\"Target node {target.id} not in graph\")",
          "54:         edge = Edge(source=source.id, target=target.id)",
          "55:         self.edges.append(edge)",
          "56:         return edge",
          "58:     def extend(self, graph: Graph) -> None:",
          "59:         \"\"\"Add all nodes and edges from another graph.",
          "60:         Note this doesn't check for duplicates, nor does it connect the graphs.\"\"\"",
          "61:         self.nodes.update(graph.nodes)",
          "62:         self.edges.extend(graph.edges)",
          "64:     def first_node(self) -> Optional[Node]:",
          "65:         \"\"\"Find the single node that is not a target of any edge.",
          "66:         If there is no such node, or there are multiple, return None.",
          "67:         When drawing the graph this node would be the origin.\"\"\"",
          "68:         targets = {edge.target for edge in self.edges}",
          "69:         found: List[Node] = []",
          "70:         for node in self.nodes.values():",
          "71:             if node.id not in targets:",
          "72:                 found.append(node)",
          "73:         return found[0] if len(found) == 1 else None",
          "75:     def last_node(self) -> Optional[Node]:",
          "76:         \"\"\"Find the single node that is not a source of any edge.",
          "77:         If there is no such node, or there are multiple, return None.",
          "78:         When drawing the graph this node would be the destination.",
          "79:         \"\"\"",
          "80:         sources = {edge.source for edge in self.edges}",
          "81:         found: List[Node] = []",
          "82:         for node in self.nodes.values():",
          "83:             if node.id not in sources:",
          "84:                 found.append(node)",
          "85:         return found[0] if len(found) == 1 else None",
          "87:     def trim_first_node(self) -> None:",
          "88:         \"\"\"Remove the first node if it exists and has a single outgoing edge,",
          "89:         ie. if removing it would not leave the graph without a \"first\" node.\"\"\"",
          "90:         first_node = self.first_node()",
          "91:         if first_node:",
          "92:             if (",
          "93:                 len(self.nodes) == 1",
          "94:                 or len([edge for edge in self.edges if edge.source == first_node.id])",
          "95:                 == 1",
          "96:             ):",
          "97:                 self.remove_node(first_node)",
          "99:     def trim_last_node(self) -> None:",
          "100:         \"\"\"Remove the last node if it exists and has a single incoming edge,",
          "101:         ie. if removing it would not leave the graph without a \"last\" node.\"\"\"",
          "102:         last_node = self.last_node()",
          "103:         if last_node:",
          "104:             if (",
          "105:                 len(self.nodes) == 1",
          "106:                 or len([edge for edge in self.edges if edge.target == last_node.id])",
          "107:                 == 1",
          "108:             ):",
          "109:                 self.remove_node(last_node)",
          "111:     def draw_ascii(self) -> str:",
          "112:         def node_data(node: Node) -> str:",
          "113:             if isinstance(node.data, Runnable):",
          "114:                 try:",
          "115:                     data = str(node.data)",
          "116:                     if (",
          "117:                         data.startswith(\"<\")",
          "118:                         or data[0] != data[0].upper()",
          "119:                         or len(data.splitlines()) > 1",
          "120:                     ):",
          "121:                         data = node.data.__class__.__name__",
          "122:                     elif len(data) > 36:",
          "123:                         data = data[:36] + \"...\"",
          "124:                 except Exception:",
          "125:                     data = node.data.__class__.__name__",
          "126:             else:",
          "127:                 data = node.data.__name__",
          "128:             return data",
          "130:         return draw(",
          "131:             {node.id: node_data(node) for node in self.nodes.values()},",
          "132:             [(edge.source, edge.target) for edge in self.edges],",
          "133:         )",
          "",
          "---------------"
        ],
        "libs/core/langchain_core/runnables/graph_draw.py||libs/core/langchain_core/runnables/graph_draw.py": [
          "File: libs/core/langchain_core/runnables/graph_draw.py -> libs/core/langchain_core/runnables/graph_draw.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: \"\"\"Draws DAG in ASCII.",
          "2: Adapted from https://github.com/iterative/dvc/blob/main/dvc/dagascii.py\"\"\"",
          "4: import math",
          "5: import os",
          "6: from typing import Any, Mapping, Sequence, Tuple",
          "9: class VertexViewer:",
          "10:     \"\"\"Class to define vertex box boundaries that will be accounted for during",
          "11:     graph building by grandalf.",
          "13:     Args:",
          "14:         name (str): name of the vertex.",
          "15:     \"\"\"",
          "17:     HEIGHT = 3  # top and bottom box edges + text",
          "19:     def __init__(self, name: str) -> None:",
          "20:         self._h = self.HEIGHT  # top and bottom box edges + text",
          "21:         self._w = len(name) + 2  # right and left bottom edges + text",
          "23:     @property",
          "24:     def h(self) -> int:",
          "25:         \"\"\"Height of the box.\"\"\"",
          "26:         return self._h",
          "28:     @property",
          "29:     def w(self) -> int:",
          "30:         \"\"\"Width of the box.\"\"\"",
          "31:         return self._w",
          "34: class AsciiCanvas:",
          "35:     \"\"\"Class for drawing in ASCII.",
          "37:     Args:",
          "38:         cols (int): number of columns in the canvas. Should be > 1.",
          "39:         lines (int): number of lines in the canvas. Should be > 1.",
          "40:     \"\"\"",
          "42:     TIMEOUT = 10",
          "44:     def __init__(self, cols: int, lines: int) -> None:",
          "45:         assert cols > 1",
          "46:         assert lines > 1",
          "48:         self.cols = cols",
          "49:         self.lines = lines",
          "51:         self.canvas = [[\" \"] * cols for line in range(lines)]",
          "53:     def draw(self) -> str:",
          "54:         \"\"\"Draws ASCII canvas on the screen.\"\"\"",
          "55:         lines = map(\"\".join, self.canvas)",
          "56:         return os.linesep.join(lines)",
          "58:     def point(self, x: int, y: int, char: str) -> None:",
          "59:         \"\"\"Create a point on ASCII canvas.",
          "61:         Args:",
          "62:             x (int): x coordinate. Should be >= 0 and < number of columns in",
          "63:                 the canvas.",
          "64:             y (int): y coordinate. Should be >= 0 an < number of lines in the",
          "65:                 canvas.",
          "66:             char (str): character to place in the specified point on the",
          "67:                 canvas.",
          "68:         \"\"\"",
          "69:         assert len(char) == 1",
          "70:         assert x >= 0",
          "71:         assert x < self.cols",
          "72:         assert y >= 0",
          "73:         assert y < self.lines",
          "75:         self.canvas[y][x] = char",
          "77:     def line(self, x0: int, y0: int, x1: int, y1: int, char: str) -> None:",
          "78:         \"\"\"Create a line on ASCII canvas.",
          "80:         Args:",
          "81:             x0 (int): x coordinate where the line should start.",
          "82:             y0 (int): y coordinate where the line should start.",
          "83:             x1 (int): x coordinate where the line should end.",
          "84:             y1 (int): y coordinate where the line should end.",
          "85:             char (str): character to draw the line with.",
          "86:         \"\"\"",
          "87:         if x0 > x1:",
          "88:             x1, x0 = x0, x1",
          "89:             y1, y0 = y0, y1",
          "91:         dx = x1 - x0",
          "92:         dy = y1 - y0",
          "94:         if dx == 0 and dy == 0:",
          "95:             self.point(x0, y0, char)",
          "96:         elif abs(dx) >= abs(dy):",
          "97:             for x in range(x0, x1 + 1):",
          "98:                 if dx == 0:",
          "99:                     y = y0",
          "100:                 else:",
          "101:                     y = y0 + int(round((x - x0) * dy / float(dx)))",
          "102:                 self.point(x, y, char)",
          "103:         elif y0 < y1:",
          "104:             for y in range(y0, y1 + 1):",
          "105:                 if dy == 0:",
          "106:                     x = x0",
          "107:                 else:",
          "108:                     x = x0 + int(round((y - y0) * dx / float(dy)))",
          "109:                 self.point(x, y, char)",
          "110:         else:",
          "111:             for y in range(y1, y0 + 1):",
          "112:                 if dy == 0:",
          "113:                     x = x0",
          "114:                 else:",
          "115:                     x = x1 + int(round((y - y1) * dx / float(dy)))",
          "116:                 self.point(x, y, char)",
          "118:     def text(self, x: int, y: int, text: str) -> None:",
          "119:         \"\"\"Print a text on ASCII canvas.",
          "121:         Args:",
          "122:             x (int): x coordinate where the text should start.",
          "123:             y (int): y coordinate where the text should start.",
          "124:             text (str): string that should be printed.",
          "125:         \"\"\"",
          "126:         for i, char in enumerate(text):",
          "127:             self.point(x + i, y, char)",
          "129:     def box(self, x0: int, y0: int, width: int, height: int) -> None:",
          "130:         \"\"\"Create a box on ASCII canvas.",
          "132:         Args:",
          "133:             x0 (int): x coordinate of the box corner.",
          "134:             y0 (int): y coordinate of the box corner.",
          "135:             width (int): box width.",
          "136:             height (int): box height.",
          "137:         \"\"\"",
          "138:         assert width > 1",
          "139:         assert height > 1",
          "141:         width -= 1",
          "142:         height -= 1",
          "144:         for x in range(x0, x0 + width):",
          "145:             self.point(x, y0, \"-\")",
          "146:             self.point(x, y0 + height, \"-\")",
          "148:         for y in range(y0, y0 + height):",
          "149:             self.point(x0, y, \"|\")",
          "150:             self.point(x0 + width, y, \"|\")",
          "152:         self.point(x0, y0, \"+\")",
          "153:         self.point(x0 + width, y0, \"+\")",
          "154:         self.point(x0, y0 + height, \"+\")",
          "155:         self.point(x0 + width, y0 + height, \"+\")",
          "158: def _build_sugiyama_layout(",
          "159:     vertices: Mapping[str, str], edges: Sequence[Tuple[str, str]]",
          "160: ) -> Any:",
          "161:     try:",
          "162:         from grandalf.graphs import Edge, Graph, Vertex  # type: ignore[import]",
          "163:         from grandalf.layouts import SugiyamaLayout  # type: ignore[import]",
          "164:         from grandalf.routing import (  # type: ignore[import]",
          "165:             EdgeViewer,",
          "166:             route_with_lines,",
          "167:         )",
          "168:     except ImportError:",
          "169:         print(\"Install grandalf to draw graphs. `pip install grandalf`\")",
          "170:         raise",
          "171:     #",
          "172:     # Just a reminder about naming conventions:",
          "173:     # +------------X",
          "174:     # |",
          "175:     # |",
          "176:     # |",
          "177:     # |",
          "178:     # Y",
          "179:     #",
          "181:     vertices_ = {id: Vertex(f\" {data} \") for id, data in vertices.items()}",
          "182:     edges_ = [Edge(vertices_[s], vertices_[e]) for s, e in edges]",
          "183:     vertices_list = vertices_.values()",
          "184:     graph = Graph(vertices_list, edges_)",
          "186:     for vertex in vertices_list:",
          "187:         vertex.view = VertexViewer(vertex.data)",
          "189:     # NOTE: determine min box length to create the best layout",
          "190:     minw = min(v.view.w for v in vertices_list)",
          "192:     for edge in edges_:",
          "193:         edge.view = EdgeViewer()",
          "195:     sug = SugiyamaLayout(graph.C[0])",
          "196:     graph = graph.C[0]",
          "197:     roots = list(filter(lambda x: len(x.e_in()) == 0, graph.sV))",
          "199:     sug.init_all(roots=roots, optimize=True)",
          "201:     sug.yspace = VertexViewer.HEIGHT",
          "202:     sug.xspace = minw",
          "203:     sug.route_edge = route_with_lines",
          "205:     sug.draw()",
          "207:     return sug",
          "210: def draw(vertices: Mapping[str, str], edges: Sequence[Tuple[str, str]]) -> str:",
          "211:     \"\"\"Build a DAG and draw it in ASCII.",
          "213:     Args:",
          "214:         vertices (list): list of graph vertices.",
          "215:         edges (list): list of graph edges.",
          "217:     Returns:",
          "218:         str: ASCII representation",
          "220:     Example:",
          "221:         >>> from dvc.dagascii import draw",
          "222:         >>> vertices = [1, 2, 3, 4]",
          "223:         >>> edges = [(1, 2), (2, 3), (2, 4), (1, 4)]",
          "224:         >>> print(draw(vertices, edges))",
          "225:         +---+     +---+",
          "226:         | 3 |     | 4 |",
          "227:         +---+    *+---+",
          "231:         +---+       *",
          "232:         | 2 |      *",
          "233:         +---+     *",
          "237:              +---+",
          "238:              | 1 |",
          "239:              +---+",
          "240:     \"\"\"",
          "242:     # NOTE: coordinates might me negative, so we need to shift",
          "243:     # everything to the positive plane before we actually draw it.",
          "244:     Xs = []  # noqa: N806",
          "245:     Ys = []  # noqa: N806",
          "247:     sug = _build_sugiyama_layout(vertices, edges)",
          "249:     for vertex in sug.g.sV:",
          "250:         # NOTE: moving boxes w/2 to the left",
          "251:         Xs.append(vertex.view.xy[0] - vertex.view.w / 2.0)",
          "252:         Xs.append(vertex.view.xy[0] + vertex.view.w / 2.0)",
          "253:         Ys.append(vertex.view.xy[1])",
          "254:         Ys.append(vertex.view.xy[1] + vertex.view.h)",
          "256:     for edge in sug.g.sE:",
          "257:         for x, y in edge.view._pts:",
          "258:             Xs.append(x)",
          "259:             Ys.append(y)",
          "261:     minx = min(Xs)",
          "262:     miny = min(Ys)",
          "263:     maxx = max(Xs)",
          "264:     maxy = max(Ys)",
          "266:     canvas_cols = int(math.ceil(math.ceil(maxx) - math.floor(minx))) + 1",
          "267:     canvas_lines = int(round(maxy - miny))",
          "269:     canvas = AsciiCanvas(canvas_cols, canvas_lines)",
          "271:     # NOTE: first draw edges so that node boxes could overwrite them",
          "272:     for edge in sug.g.sE:",
          "273:         assert len(edge.view._pts) > 1",
          "274:         for index in range(1, len(edge.view._pts)):",
          "275:             start = edge.view._pts[index - 1]",
          "276:             end = edge.view._pts[index]",
          "278:             start_x = int(round(start[0] - minx))",
          "279:             start_y = int(round(start[1] - miny))",
          "280:             end_x = int(round(end[0] - minx))",
          "281:             end_y = int(round(end[1] - miny))",
          "283:             assert start_x >= 0",
          "284:             assert start_y >= 0",
          "285:             assert end_x >= 0",
          "286:             assert end_y >= 0",
          "288:             canvas.line(start_x, start_y, end_x, end_y, \"*\")",
          "290:     for vertex in sug.g.sV:",
          "291:         # NOTE: moving boxes w/2 to the left",
          "292:         x = vertex.view.xy[0] - vertex.view.w / 2.0",
          "293:         y = vertex.view.xy[1]",
          "295:         canvas.box(",
          "296:             int(round(x - minx)),",
          "297:             int(round(y - miny)),",
          "298:             vertex.view.w,",
          "299:             vertex.view.h,",
          "300:         )",
          "302:         canvas.text(int(round(x - minx)) + 1, int(round(y - miny)) + 1, vertex.data)",
          "304:     return canvas.draw()",
          "",
          "---------------"
        ],
        "libs/core/langchain_core/runnables/utils.py||libs/core/langchain_core/runnables/utils.py": [
          "File: libs/core/langchain_core/runnables/utils.py -> libs/core/langchain_core/runnables/utils.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "155:     Returns:",
          "156:         str: the source code of the lambda function",
          "157:     \"\"\"",
          "158:     try:",
          "159:         code = inspect.getsource(func)",
          "160:         tree = ast.parse(textwrap.dedent(code))",
          "161:         visitor = GetLambdaSource()",
          "162:         visitor.visit(tree)",
          "164:     except (SyntaxError, TypeError, OSError):",
          "168: def indent_lines_after_first(text: str, prefix: str) -> str:",
          "",
          "[Removed Lines]",
          "163:         return visitor.source if visitor.count == 1 else None",
          "165:         return None",
          "",
          "[Added Lines]",
          "158:     try:",
          "159:         name = func.__name__ if func.__name__ != \"<lambda>\" else None",
          "160:     except AttributeError:",
          "161:         name = None",
          "167:         return visitor.source if visitor.count == 1 else name",
          "169:         return name",
          "",
          "---------------"
        ],
        "libs/core/poetry.lock||libs/core/poetry.lock": [
          "File: libs/core/poetry.lock -> libs/core/poetry.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: [[package]]",
          "4: name = \"annotated-types\"",
          "",
          "[Removed Lines]",
          "1: # This file is automatically @generated by Poetry 1.6.1 and should not be changed by hand.",
          "",
          "[Added Lines]",
          "1: # This file is automatically @generated by Poetry 1.7.1 and should not be changed by hand.",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "555: [package.dependencies]",
          "556: python-dateutil = \">=2.7\"",
          "558: [[package]]",
          "559: name = \"idna\"",
          "560: version = \"3.4\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "558: [[package]]",
          "559: name = \"grandalf\"",
          "560: version = \"0.8\"",
          "561: description = \"Graph and drawing algorithms framework\"",
          "562: optional = false",
          "563: python-versions = \"*\"",
          "564: files = [",
          "565:     {file = \"grandalf-0.8-py3-none-any.whl\", hash = \"sha256:793ca254442f4a79252ea9ff1ab998e852c1e071b863593e5383afee906b4185\"},",
          "566:     {file = \"grandalf-0.8.tar.gz\", hash = \"sha256:2813f7aab87f0d20f334a3162ccfbcbf085977134a17a5b516940a93a77ea974\"},",
          "567: ]",
          "569: [package.dependencies]",
          "570: pyparsing = \"*\"",
          "572: [package.extras]",
          "573: full = [\"numpy\", \"ply\"]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1764: plugins = [\"importlib-metadata\"]",
          "1765: windows-terminal = [\"colorama (>=0.4.6)\"]",
          "1767: [[package]]",
          "1768: name = \"pytest\"",
          "1769: version = \"7.4.3\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1784: [[package]]",
          "1785: name = \"pyparsing\"",
          "1786: version = \"3.1.1\"",
          "1787: description = \"pyparsing module - Classes and methods to define and execute parsing grammars\"",
          "1788: optional = false",
          "1789: python-versions = \">=3.6.8\"",
          "1790: files = [",
          "1791:     {file = \"pyparsing-3.1.1-py3-none-any.whl\", hash = \"sha256:32c7c0b711493c72ff18a981d24f28aaf9c1fb7ed5e9667c9e84e3db623bdbfb\"},",
          "1792:     {file = \"pyparsing-3.1.1.tar.gz\", hash = \"sha256:ede28a1a32462f5a9705e07aea48001a08f7cf81a021585011deba701581a0db\"},",
          "1793: ]",
          "1795: [package.extras]",
          "1796: diagrams = [\"jinja2\", \"railroad-diagrams\"]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2734: [metadata]",
          "2735: lock-version = \"2.0\"",
          "2736: python-versions = \">=3.8.1,<4.0\"",
          "",
          "[Removed Lines]",
          "2737: content-hash = \"64fa7ef31713835d12d5213f04b52adf7423299d023f9558b8b4e65ce1e5262f\"",
          "",
          "[Added Lines]",
          "2768: content-hash = \"941239bad030d610728f204c17ea49ddbb6fc72e55dadf1691f317f4795c7b1f\"",
          "",
          "---------------"
        ],
        "libs/core/tests/unit_tests/runnables/__snapshots__/test_graph.ambr||libs/core/tests/unit_tests/runnables/__snapshots__/test_graph.ambr": [
          "File: libs/core/tests/unit_tests/runnables/__snapshots__/test_graph.ambr -> libs/core/tests/unit_tests/runnables/__snapshots__/test_graph.ambr",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # serializer version: 1",
          "2: # name: test_graph_sequence",
          "3:   '''",
          "4:               +-------------+",
          "5:               | PromptInput |",
          "6:               +-------------+",
          "10:              +----------------+",
          "11:              | PromptTemplate |",
          "12:              +----------------+",
          "16:               +-------------+",
          "17:               | FakeListLLM |",
          "18:               +-------------+",
          "22:      +--------------------------------+",
          "23:      | CommaSeparatedListOutputParser |",
          "24:      +--------------------------------+",
          "28:   +--------------------------------------+",
          "29:   | CommaSeparatedListOutputParserOutput |",
          "30:   +--------------------------------------+",
          "31:   '''",
          "32: # ---",
          "33: # name: test_graph_sequence_map",
          "34:   '''",
          "35:                             +-------------+",
          "36:                             | PromptInput |",
          "37:                             +-------------+",
          "41:                           +----------------+",
          "42:                           | PromptTemplate |",
          "43:                           +----------------+",
          "47:                             +-------------+",
          "48:                             | FakeListLLM |",
          "49:                             +-------------+",
          "53:                        +-----------------------+",
          "54:                        | RunnableParallelInput |",
          "55:                        +-----------------------+",
          "59:   +---------------------+               +--------------------------------+",
          "60:   | RunnablePassthrough |               | CommaSeparatedListOutputParser |",
          "61:   +---------------------+               +--------------------------------+",
          "65:                       +------------------------+",
          "66:                       | RunnableParallelOutput |",
          "67:                       +------------------------+",
          "68:   '''",
          "69: # ---",
          "70: # name: test_graph_single_runnable",
          "71:   '''",
          "72:   +----------------------+",
          "73:   | StrOutputParserInput |",
          "74:   +----------------------+",
          "78:      +-----------------+",
          "79:      | StrOutputParser |",
          "80:      +-----------------+",
          "84:   +-----------------------+",
          "85:   | StrOutputParserOutput |",
          "86:   +-----------------------+",
          "87:   '''",
          "88: # ---",
          "",
          "---------------"
        ],
        "libs/core/tests/unit_tests/runnables/__snapshots__/test_runnable.ambr||libs/core/tests/unit_tests/runnables/__snapshots__/test_runnable.ambr": [
          "File: libs/core/tests/unit_tests/runnables/__snapshots__/test_runnable.ambr -> libs/core/tests/unit_tests/runnables/__snapshots__/test_runnable.ambr",
          "--- Hunk 1 ---",
          "[Context before]",
          "684:           \"base\",",
          "685:           \"RunnableLambda\"",
          "686:         ],",
          "688:       }",
          "689:     }",
          "690:   }",
          "",
          "[Removed Lines]",
          "687:         \"repr\": \"RunnableLambda(...)\"",
          "",
          "[Added Lines]",
          "687:         \"repr\": \"RunnableLambda(router)\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1531:           \"base\",",
          "1532:           \"RunnableLambda\"",
          "1533:         ],",
          "1535:       }",
          "1536:     }",
          "1537:   }",
          "",
          "[Removed Lines]",
          "1534:         \"repr\": \"RunnableLambda(afunc=...)\"",
          "",
          "[Added Lines]",
          "1534:         \"repr\": \"RunnableLambda(afunc=passthrough)\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1539: # ---",
          "1540: # name: test_prompt_with_llm_and_async_lambda.1",
          "1541:   list([",
          "1543:   ])",
          "1544: # ---",
          "1545: # name: test_router_runnable",
          "",
          "[Removed Lines]",
          "1542:     Run(id=UUID('00000000-0000-4000-8000-000000000000'), name='RunnableSequence', start_time=FakeDatetime(2023, 1, 1, 0, 0), run_type='chain', end_time=FakeDatetime(2023, 1, 1, 0, 0), extra={}, error=None, serialized={'lc': 1, 'type': 'constructor', 'id': ['langchain', 'schema', 'runnable', 'RunnableSequence'], 'kwargs': {'first': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'ChatPromptTemplate'], 'kwargs': {'messages': [{'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'SystemMessagePromptTemplate'], 'kwargs': {'prompt': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'prompt', 'PromptTemplate'], 'kwargs': {'input_variables': [], 'template': 'You are a nice assistant.', 'template_format': 'f-string', 'partial_variables': {}}}}}, {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'HumanMessagePromptTemplate'], 'kwargs': {'prompt': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'prompt', 'PromptTemplate'], 'kwargs': {'input_variables': ['question'], 'template': '{question}', 'template_format': 'f-string', 'partial_variables': {}}}}}], 'input_variables': ['question']}}, 'middle': [{'lc': 1, 'type': 'not_implemented', 'id': ['tests', 'unit_tests', 'fake', 'llm', 'FakeListLLM'], 'repr': \"FakeListLLM(responses=['foo', 'bar'])\"}], 'last': {'lc': 1, 'type': 'not_implemented', 'id': ['langchain_core', 'runnables', 'base', 'RunnableLambda'], 'repr': 'RunnableLambda(afunc=...)'}}}, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0)}], inputs={'question': 'What is your name?'}, outputs={'output': 'foo'}, reference_example_id=None, parent_run_id=None, tags=[], execution_order=None, child_execution_order=None, child_runs=[Run(id=UUID('00000000-0000-4000-8000-000000000001'), name='ChatPromptTemplate', start_time=FakeDatetime(2023, 1, 1, 0, 0), run_type='prompt', end_time=FakeDatetime(2023, 1, 1, 0, 0), extra={}, error=None, serialized={'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'ChatPromptTemplate'], 'kwargs': {'messages': [{'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'SystemMessagePromptTemplate'], 'kwargs': {'prompt': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'prompt', 'PromptTemplate'], 'kwargs': {'input_variables': [], 'template': 'You are a nice assistant.', 'template_format': 'f-string', 'partial_variables': {}}}}}, {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'HumanMessagePromptTemplate'], 'kwargs': {'prompt': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'prompt', 'PromptTemplate'], 'kwargs': {'input_variables': ['question'], 'template': '{question}', 'template_format': 'f-string', 'partial_variables': {}}}}}], 'input_variables': ['question']}}, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0)}], inputs={'question': 'What is your name?'}, outputs={'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'ChatPromptValue'], 'kwargs': {'messages': [{'lc': 1, 'type': 'constructor', 'id': ['langchain', 'schema', 'messages', 'SystemMessage'], 'kwargs': {'content': 'You are a nice assistant.', 'additional_kwargs': {}}}, {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'schema', 'messages', 'HumanMessage'], 'kwargs': {'content': 'What is your name?', 'additional_kwargs': {}}}]}}, reference_example_id=None, parent_run_id=UUID('00000000-0000-4000-8000-000000000000'), tags=['seq:step:1'], execution_order=None, child_execution_order=None, child_runs=[]), Run(id=UUID('00000000-0000-4000-8000-000000000002'), name='FakeListLLM', start_time=FakeDatetime(2023, 1, 1, 0, 0), run_type='llm', end_time=FakeDatetime(2023, 1, 1, 0, 0), extra={'invocation_params': {'responses': ['foo', 'bar'], '_type': 'fake-list', 'stop': None}, 'options': {'stop': None}, 'batch_size': 1}, error=None, serialized={'lc': 1, 'type': 'not_implemented', 'id': ['tests', 'unit_tests', 'fake', 'llm', 'FakeListLLM'], 'repr': \"FakeListLLM(responses=['foo', 'bar'])\"}, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0)}], inputs={'prompts': ['System: You are a nice assistant.\\nHuman: What is your name?']}, outputs={'generations': [[{'text': 'foo', 'generation_info': None, 'type': 'Generation'}]], 'llm_output': None, 'run': None}, reference_example_id=None, parent_run_id=UUID('00000000-0000-4000-8000-000000000000'), tags=['seq:step:2'], execution_order=None, child_execution_order=None, child_runs=[]), Run(id=UUID('00000000-0000-4000-8000-000000000003'), name='passthrough', start_time=FakeDatetime(2023, 1, 1, 0, 0), run_type='chain', end_time=FakeDatetime(2023, 1, 1, 0, 0), extra={}, error=None, serialized={'lc': 1, 'type': 'not_implemented', 'id': ['langchain_core', 'runnables', 'base', 'RunnableLambda'], 'repr': 'RunnableLambda(afunc=...)'}, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0)}], inputs={'input': 'foo'}, outputs={'output': 'foo'}, reference_example_id=None, parent_run_id=UUID('00000000-0000-4000-8000-000000000000'), tags=['seq:step:3'], execution_order=None, child_execution_order=None, child_runs=[])]),",
          "",
          "[Added Lines]",
          "1542:     Run(id=UUID('00000000-0000-4000-8000-000000000000'), name='RunnableSequence', start_time=FakeDatetime(2023, 1, 1, 0, 0), run_type='chain', end_time=FakeDatetime(2023, 1, 1, 0, 0), extra={}, error=None, serialized={'lc': 1, 'type': 'constructor', 'id': ['langchain', 'schema', 'runnable', 'RunnableSequence'], 'kwargs': {'first': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'ChatPromptTemplate'], 'kwargs': {'messages': [{'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'SystemMessagePromptTemplate'], 'kwargs': {'prompt': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'prompt', 'PromptTemplate'], 'kwargs': {'input_variables': [], 'template': 'You are a nice assistant.', 'template_format': 'f-string', 'partial_variables': {}}}}}, {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'HumanMessagePromptTemplate'], 'kwargs': {'prompt': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'prompt', 'PromptTemplate'], 'kwargs': {'input_variables': ['question'], 'template': '{question}', 'template_format': 'f-string', 'partial_variables': {}}}}}], 'input_variables': ['question']}}, 'middle': [{'lc': 1, 'type': 'not_implemented', 'id': ['tests', 'unit_tests', 'fake', 'llm', 'FakeListLLM'], 'repr': \"FakeListLLM(responses=['foo', 'bar'])\"}], 'last': {'lc': 1, 'type': 'not_implemented', 'id': ['langchain_core', 'runnables', 'base', 'RunnableLambda'], 'repr': 'RunnableLambda(afunc=passthrough)'}}}, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0)}], inputs={'question': 'What is your name?'}, outputs={'output': 'foo'}, reference_example_id=None, parent_run_id=None, tags=[], execution_order=None, child_execution_order=None, child_runs=[Run(id=UUID('00000000-0000-4000-8000-000000000001'), name='ChatPromptTemplate', start_time=FakeDatetime(2023, 1, 1, 0, 0), run_type='prompt', end_time=FakeDatetime(2023, 1, 1, 0, 0), extra={}, error=None, serialized={'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'ChatPromptTemplate'], 'kwargs': {'messages': [{'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'SystemMessagePromptTemplate'], 'kwargs': {'prompt': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'prompt', 'PromptTemplate'], 'kwargs': {'input_variables': [], 'template': 'You are a nice assistant.', 'template_format': 'f-string', 'partial_variables': {}}}}}, {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'HumanMessagePromptTemplate'], 'kwargs': {'prompt': {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'prompt', 'PromptTemplate'], 'kwargs': {'input_variables': ['question'], 'template': '{question}', 'template_format': 'f-string', 'partial_variables': {}}}}}], 'input_variables': ['question']}}, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0)}], inputs={'question': 'What is your name?'}, outputs={'lc': 1, 'type': 'constructor', 'id': ['langchain', 'prompts', 'chat', 'ChatPromptValue'], 'kwargs': {'messages': [{'lc': 1, 'type': 'constructor', 'id': ['langchain', 'schema', 'messages', 'SystemMessage'], 'kwargs': {'content': 'You are a nice assistant.', 'additional_kwargs': {}}}, {'lc': 1, 'type': 'constructor', 'id': ['langchain', 'schema', 'messages', 'HumanMessage'], 'kwargs': {'content': 'What is your name?', 'additional_kwargs': {}}}]}}, reference_example_id=None, parent_run_id=UUID('00000000-0000-4000-8000-000000000000'), tags=['seq:step:1'], execution_order=None, child_execution_order=None, child_runs=[]), Run(id=UUID('00000000-0000-4000-8000-000000000002'), name='FakeListLLM', start_time=FakeDatetime(2023, 1, 1, 0, 0), run_type='llm', end_time=FakeDatetime(2023, 1, 1, 0, 0), extra={'invocation_params': {'responses': ['foo', 'bar'], '_type': 'fake-list', 'stop': None}, 'options': {'stop': None}, 'batch_size': 1}, error=None, serialized={'lc': 1, 'type': 'not_implemented', 'id': ['tests', 'unit_tests', 'fake', 'llm', 'FakeListLLM'], 'repr': \"FakeListLLM(responses=['foo', 'bar'])\"}, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0)}], inputs={'prompts': ['System: You are a nice assistant.\\nHuman: What is your name?']}, outputs={'generations': [[{'text': 'foo', 'generation_info': None, 'type': 'Generation'}]], 'llm_output': None, 'run': None}, reference_example_id=None, parent_run_id=UUID('00000000-0000-4000-8000-000000000000'), tags=['seq:step:2'], execution_order=None, child_execution_order=None, child_runs=[]), Run(id=UUID('00000000-0000-4000-8000-000000000003'), name='passthrough', start_time=FakeDatetime(2023, 1, 1, 0, 0), run_type='chain', end_time=FakeDatetime(2023, 1, 1, 0, 0), extra={}, error=None, serialized={'lc': 1, 'type': 'not_implemented', 'id': ['langchain_core', 'runnables', 'base', 'RunnableLambda'], 'repr': 'RunnableLambda(afunc=passthrough)'}, events=[{'name': 'start', 'time': FakeDatetime(2023, 1, 1, 0, 0)}, {'name': 'end', 'time': FakeDatetime(2023, 1, 1, 0, 0)}], inputs={'input': 'foo'}, outputs={'output': 'foo'}, reference_example_id=None, parent_run_id=UUID('00000000-0000-4000-8000-000000000000'), tags=['seq:step:3'], execution_order=None, child_execution_order=None, child_runs=[])]),",
          "",
          "---------------"
        ],
        "libs/core/tests/unit_tests/runnables/test_graph.py||libs/core/tests/unit_tests/runnables/test_graph.py": [
          "File: libs/core/tests/unit_tests/runnables/test_graph.py -> libs/core/tests/unit_tests/runnables/test_graph.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: from syrupy import SnapshotAssertion",
          "3: from langchain_core.output_parsers.list import CommaSeparatedListOutputParser",
          "4: from langchain_core.output_parsers.string import StrOutputParser",
          "5: from langchain_core.prompts.prompt import PromptTemplate",
          "6: from langchain_core.runnables.base import Runnable",
          "7: from langchain_core.runnables.passthrough import RunnablePassthrough",
          "8: from tests.unit_tests.fake.llm import FakeListLLM",
          "11: def test_graph_single_runnable(snapshot: SnapshotAssertion) -> None:",
          "12:     runnable = StrOutputParser()",
          "13:     graph = StrOutputParser().get_graph()",
          "14:     first_node = graph.first_node()",
          "15:     assert first_node is not None",
          "16:     assert first_node.data.schema() == runnable.input_schema.schema()  # type: ignore[union-attr]",
          "17:     last_node = graph.last_node()",
          "18:     assert last_node is not None",
          "19:     assert last_node.data.schema() == runnable.output_schema.schema()  # type: ignore[union-attr]",
          "20:     assert len(graph.nodes) == 3",
          "21:     assert len(graph.edges) == 2",
          "22:     assert graph.edges[0].source == first_node.id",
          "23:     assert graph.edges[1].target == last_node.id",
          "24:     assert graph.draw_ascii() == snapshot",
          "27: def test_graph_sequence(snapshot: SnapshotAssertion) -> None:",
          "28:     fake_llm = FakeListLLM(responses=[\"a\"])",
          "29:     prompt = PromptTemplate.from_template(\"Hello, {name}!\")",
          "30:     list_parser = CommaSeparatedListOutputParser()",
          "32:     sequence = prompt | fake_llm | list_parser",
          "33:     graph = sequence.get_graph()",
          "34:     assert graph.draw_ascii() == snapshot",
          "37: def test_graph_sequence_map(snapshot: SnapshotAssertion) -> None:",
          "38:     fake_llm = FakeListLLM(responses=[\"a\"])",
          "39:     prompt = PromptTemplate.from_template(\"Hello, {name}!\")",
          "40:     list_parser = CommaSeparatedListOutputParser()",
          "42:     sequence: Runnable = (",
          "43:         prompt",
          "44:         | fake_llm",
          "45:         | {",
          "46:             \"original\": RunnablePassthrough(input_type=str),",
          "47:             \"as_list\": list_parser,",
          "48:         }",
          "49:     )",
          "50:     graph = sequence.get_graph()",
          "51:     assert graph.draw_ascii() == snapshot",
          "",
          "---------------"
        ],
        "libs/core/tests/unit_tests/runnables/test_runnable.py||libs/core/tests/unit_tests/runnables/test_runnable.py": [
          "File: libs/core/tests/unit_tests/runnables/test_runnable.py -> libs/core/tests/unit_tests/runnables/test_runnable.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "4127:         \"\"\"Return 2.\"\"\"",
          "4128:         return 2",
          "4132:     async def af(x: int) -> int:",
          "4133:         \"\"\"Return 2.\"\"\"",
          "4134:         return 2",
          "4138:     assert repr(",
          "4139:         RunnableLambda(lambda x: x + 2)",
          "",
          "[Removed Lines]",
          "4130:     assert repr(RunnableLambda(func=f)) == \"RunnableLambda(...)\"",
          "4136:     assert repr(RunnableLambda(func=f, afunc=af)) == \"RunnableLambda(...)\"",
          "",
          "[Added Lines]",
          "4130:     assert repr(RunnableLambda(func=f)) == \"RunnableLambda(f)\"",
          "4136:     assert repr(RunnableLambda(func=f, afunc=af)) == \"RunnableLambda(f)\"",
          "",
          "---------------"
        ],
        "poetry.lock||poetry.lock": [
          "File: poetry.lock -> poetry.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: [[package]]",
          "4: name = \"aiohttp\"",
          "",
          "[Removed Lines]",
          "1: # This file is automatically @generated by Poetry 1.6.1 and should not be changed by hand.",
          "",
          "[Added Lines]",
          "1: # This file is automatically @generated by Poetry 1.7.1 and should not be changed by hand.",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "987:     {file = \"greenlet-3.0.0-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:0b72b802496cccbd9b31acea72b6f87e7771ccfd7f7927437d592e5c92ed703c\"},",
          "988:     {file = \"greenlet-3.0.0-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:527cd90ba3d8d7ae7dceb06fda619895768a46a1b4e423bdb24c1969823b8362\"},",
          "989:     {file = \"greenlet-3.0.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:37f60b3a42d8b5499be910d1267b24355c495064f271cfe74bf28b17b099133c\"},",
          "991:     {file = \"greenlet-3.0.0-cp312-cp312-macosx_13_0_arm64.whl\", hash = \"sha256:be557119bf467d37a8099d91fbf11b2de5eb1fd5fc5b91598407574848dc910f\"},",
          "992:     {file = \"greenlet-3.0.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:73b2f1922a39d5d59cc0e597987300df3396b148a9bd10b76a058a2f2772fc04\"},",
          "993:     {file = \"greenlet-3.0.0-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:d1e22c22f7826096ad503e9bb681b05b8c1f5a8138469b255eb91f26a76634f2\"},",
          "",
          "[Removed Lines]",
          "990:     {file = \"greenlet-3.0.0-cp311-universal2-macosx_10_9_universal2.whl\", hash = \"sha256:c3692ecf3fe754c8c0f2c95ff19626584459eab110eaab66413b1e7425cd84e9\"},",
          "",
          "[Added Lines]",
          "990:     {file = \"greenlet-3.0.0-cp312-cp312-macosx_10_9_universal2.whl\", hash = \"sha256:1482fba7fbed96ea7842b5a7fc11d61727e8be75a077e603e8ab49d24e234383\"},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "997:     {file = \"greenlet-3.0.0-cp312-cp312-musllinux_1_1_aarch64.whl\", hash = \"sha256:952256c2bc5b4ee8df8dfc54fc4de330970bf5d79253c863fb5e6761f00dda35\"},",
          "998:     {file = \"greenlet-3.0.0-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:269d06fa0f9624455ce08ae0179430eea61085e3cf6457f05982b37fd2cefe17\"},",
          "999:     {file = \"greenlet-3.0.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:9adbd8ecf097e34ada8efde9b6fec4dd2a903b1e98037adf72d12993a1c80b51\"},",
          "1001:     {file = \"greenlet-3.0.0-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c6b5ce7f40f0e2f8b88c28e6691ca6806814157ff05e794cdd161be928550f4c\"},",
          "1002:     {file = \"greenlet-3.0.0-cp37-cp37m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:ecf94aa539e97a8411b5ea52fc6ccd8371be9550c4041011a091eb8b3ca1d810\"},",
          "1003:     {file = \"greenlet-3.0.0-cp37-cp37m-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:80dcd3c938cbcac986c5c92779db8e8ce51a89a849c135172c88ecbdc8c056b7\"},",
          "",
          "[Removed Lines]",
          "1000:     {file = \"greenlet-3.0.0-cp312-universal2-macosx_10_9_universal2.whl\", hash = \"sha256:553d6fb2324e7f4f0899e5ad2c427a4579ed4873f42124beba763f16032959af\"},",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1629: [[package]]",
          "1630: name = \"langchain\"",
          "1632: description = \"Building applications with LLMs through composability\"",
          "1633: optional = false",
          "1634: python-versions = \">=3.8.1,<4.0\"",
          "",
          "[Removed Lines]",
          "1631: version = \"0.0.349-rc.1\"",
          "",
          "[Added Lines]",
          "1630: version = \"0.0.352\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1640: async-timeout = {version = \"^4.0.0\", markers = \"python_version < \\\"3.11\\\"\"}",
          "1641: dataclasses-json = \">= 0.5.7, < 0.7\"",
          "1642: jsonpatch = \"^1.33\"",
          "1646: numpy = \"^1\"",
          "1647: pydantic = \">=1,<3\"",
          "1648: PyYAML = \">=5.3\"",
          "",
          "[Removed Lines]",
          "1643: langchain-community = \">=0.0.1-rc.1,<0.1\"",
          "1644: langchain-core = \">=0.0.13rc1,<0.1\"",
          "1645: langsmith = \"~0.0.63\"",
          "",
          "[Added Lines]",
          "1642: langchain-community = \">=0.0.2,<0.1\"",
          "1643: langchain-core = \"^0.1\"",
          "1644: langsmith = \"~0.0.70\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1651: tenacity = \"^8.1.0\"",
          "1653: [package.extras]",
          "1655: azure = [\"azure-ai-formrecognizer (>=3.2.1,<4.0.0)\", \"azure-ai-textanalytics (>=5.3.0,<6.0.0)\", \"azure-ai-vision (>=0.11.1b1,<0.12.0)\", \"azure-cognitiveservices-speech (>=1.28.0,<2.0.0)\", \"azure-core (>=1.26.4,<2.0.0)\", \"azure-cosmos (>=4.4.0b1,<5.0.0)\", \"azure-identity (>=1.12.0,<2.0.0)\", \"azure-search-documents (==11.4.0b8)\", \"openai (<2)\"]",
          "1656: clarifai = [\"clarifai (>=9.1.0)\"]",
          "1657: cli = [\"typer (>=0.9.0,<0.10.0)\"]",
          "",
          "[Removed Lines]",
          "1654: all = [\"O365 (>=2.0.26,<3.0.0)\", \"aleph-alpha-client (>=2.15.0,<3.0.0)\", \"amadeus (>=8.1.0)\", \"arxiv (>=1.4,<2.0)\", \"atlassian-python-api (>=3.36.0,<4.0.0)\", \"awadb (>=0.3.9,<0.4.0)\", \"azure-ai-formrecognizer (>=3.2.1,<4.0.0)\", \"azure-ai-textanalytics (>=5.3.0,<6.0.0)\", \"azure-ai-vision (>=0.11.1b1,<0.12.0)\", \"azure-cognitiveservices-speech (>=1.28.0,<2.0.0)\", \"azure-cosmos (>=4.4.0b1,<5.0.0)\", \"azure-identity (>=1.12.0,<2.0.0)\", \"beautifulsoup4 (>=4,<5)\", \"clarifai (>=9.1.0)\", \"clickhouse-connect (>=0.5.14,<0.6.0)\", \"cohere (>=4,<5)\", \"deeplake (>=3.8.3,<4.0.0)\", \"dgml-utils (>=0.3.0,<0.4.0)\", \"docarray[hnswlib] (>=0.32.0,<0.33.0)\", \"duckduckgo-search (>=3.8.3,<4.0.0)\", \"elasticsearch (>=8,<9)\", \"esprima (>=4.0.1,<5.0.0)\", \"faiss-cpu (>=1,<2)\", \"google-api-python-client (==2.70.0)\", \"google-auth (>=2.18.1,<3.0.0)\", \"google-search-results (>=2,<3)\", \"gptcache (>=0.1.7)\", \"hologres-vector (>=0.0.6,<0.0.7)\", \"html2text (>=2020.1.16,<2021.0.0)\", \"huggingface_hub (>=0,<1)\", \"jinja2 (>=3,<4)\", \"jq (>=1.4.1,<2.0.0)\", \"lancedb (>=0.1,<0.2)\", \"langkit (>=0.0.6,<0.1.0)\", \"lark (>=1.1.5,<2.0.0)\", \"librosa (>=0.10.0.post2,<0.11.0)\", \"lxml (>=4.9.2,<5.0.0)\", \"manifest-ml (>=0.0.1,<0.0.2)\", \"marqo (>=1.2.4,<2.0.0)\", \"momento (>=1.13.0,<2.0.0)\", \"nebula3-python (>=3.4.0,<4.0.0)\", \"neo4j (>=5.8.1,<6.0.0)\", \"networkx (>=2.6.3,<4)\", \"nlpcloud (>=1,<2)\", \"nltk (>=3,<4)\", \"nomic (>=1.0.43,<2.0.0)\", \"openai (<2)\", \"openlm (>=0.0.5,<0.0.6)\", \"opensearch-py (>=2.0.0,<3.0.0)\", \"pdfminer-six (>=20221105,<20221106)\", \"pexpect (>=4.8.0,<5.0.0)\", \"pgvector (>=0.1.6,<0.2.0)\", \"pinecone-client (>=2,<3)\", \"pinecone-text (>=0.4.2,<0.5.0)\", \"psycopg2-binary (>=2.9.5,<3.0.0)\", \"pymongo (>=4.3.3,<5.0.0)\", \"pyowm (>=3.3.0,<4.0.0)\", \"pypdf (>=3.4.0,<4.0.0)\", \"pytesseract (>=0.3.10,<0.4.0)\", \"python-arango (>=7.5.9,<8.0.0)\", \"pyvespa (>=0.33.0,<0.34.0)\", \"qdrant-client (>=1.3.1,<2.0.0)\", \"rdflib (>=6.3.2,<7.0.0)\", \"redis (>=4,<5)\", \"requests-toolbelt (>=1.0.0,<2.0.0)\", \"sentence-transformers (>=2,<3)\", \"singlestoredb (>=0.7.1,<0.8.0)\", \"tensorflow-text (>=2.11.0,<3.0.0)\", \"tigrisdb (>=1.0.0b6,<2.0.0)\", \"tiktoken (>=0.3.2,<0.6.0)\", \"torch (>=1,<3)\", \"transformers (>=4,<5)\", \"weaviate-client (>=3,<4)\", \"wikipedia (>=1,<2)\", \"wolframalpha (==5.0.0)\"]",
          "",
          "[Added Lines]",
          "1653: all = []",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1672: [[package]]",
          "1673: name = \"langchain-community\"",
          "1675: description = \"Community contributed LangChain integrations.\"",
          "1676: optional = false",
          "1677: python-versions = \">=3.8.1,<4.0\"",
          "",
          "[Removed Lines]",
          "1674: version = \"0.0.1-rc.1\"",
          "",
          "[Added Lines]",
          "1673: version = \"0.0.6\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1681: [package.dependencies]",
          "1682: aiohttp = \"^3.8.3\"",
          "1683: dataclasses-json = \">= 0.5.7, < 0.7\"",
          "1685: langsmith = \"~0.0.63\"",
          "1686: numpy = \"^1\"",
          "1687: PyYAML = \">=5.3\"",
          "",
          "[Removed Lines]",
          "1684: langchain-core = \">=0.0.13rc1,<0.1\"",
          "",
          "[Added Lines]",
          "1683: langchain-core = \"^0.1\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1692: [package.extras]",
          "1693: cli = [\"typer (>=0.9.0,<0.10.0)\"]",
          "1696: [package.source]",
          "1697: type = \"directory\"",
          "",
          "[Removed Lines]",
          "1694: extended-testing = [\"aiosqlite (>=0.19.0,<0.20.0)\", \"aleph-alpha-client (>=2.15.0,<3.0.0)\", \"anthropic (>=0.3.11,<0.4.0)\", \"arxiv (>=1.4,<2.0)\", \"assemblyai (>=0.17.0,<0.18.0)\", \"atlassian-python-api (>=3.36.0,<4.0.0)\", \"beautifulsoup4 (>=4,<5)\", \"bibtexparser (>=1.4.0,<2.0.0)\", \"cassio (>=0.1.0,<0.2.0)\", \"chardet (>=5.1.0,<6.0.0)\", \"cohere (>=4,<5)\", \"dashvector (>=1.0.1,<2.0.0)\", \"databricks-vectorsearch (>=0.21,<0.22)\", \"datasets (>=2.15.0,<3.0.0)\", \"dgml-utils (>=0.3.0,<0.4.0)\", \"esprima (>=4.0.1,<5.0.0)\", \"faiss-cpu (>=1,<2)\", \"feedparser (>=6.0.10,<7.0.0)\", \"fireworks-ai (>=0.9.0,<0.10.0)\", \"geopandas (>=0.13.1,<0.14.0)\", \"gitpython (>=3.1.32,<4.0.0)\", \"google-cloud-documentai (>=2.20.1,<3.0.0)\", \"gql (>=3.4.1,<4.0.0)\", \"hologres-vector (>=0.0.6,<0.0.7)\", \"html2text (>=2020.1.16,<2021.0.0)\", \"javelin-sdk (>=0.1.8,<0.2.0)\", \"jinja2 (>=3,<4)\", \"jq (>=1.4.1,<2.0.0)\", \"jsonschema (>1)\", \"lxml (>=4.9.2,<5.0.0)\", \"markdownify (>=0.11.6,<0.12.0)\", \"motor (>=3.3.1,<4.0.0)\", \"msal (>=1.25.0,<2.0.0)\", \"mwparserfromhell (>=0.6.4,<0.7.0)\", \"mwxml (>=0.3.3,<0.4.0)\", \"newspaper3k (>=0.2.8,<0.3.0)\", \"numexpr (>=2.8.6,<3.0.0)\", \"openai (<2)\", \"openapi-pydantic (>=0.3.2,<0.4.0)\", \"pandas (>=2.0.1,<3.0.0)\", \"pdfminer-six (>=20221105,<20221106)\", \"pgvector (>=0.1.6,<0.2.0)\", \"praw (>=7.7.1,<8.0.0)\", \"psychicapi (>=0.8.0,<0.9.0)\", \"py-trello (>=0.19.0,<0.20.0)\", \"pymupdf (>=1.22.3,<2.0.0)\", \"pypdf (>=3.4.0,<4.0.0)\", \"pypdfium2 (>=4.10.0,<5.0.0)\", \"pyspark (>=3.4.0,<4.0.0)\", \"rank-bm25 (>=0.2.2,<0.3.0)\", \"rapidfuzz (>=3.1.1,<4.0.0)\", \"rapidocr-onnxruntime (>=1.3.2,<2.0.0)\", \"requests-toolbelt (>=1.0.0,<2.0.0)\", \"rspace_client (>=2.5.0,<3.0.0)\", \"scikit-learn (>=1.2.2,<2.0.0)\", \"sqlite-vss (>=0.1.2,<0.2.0)\", \"streamlit (>=1.18.0,<2.0.0)\", \"sympy (>=1.12,<2.0)\", \"telethon (>=1.28.5,<2.0.0)\", \"timescale-vector (>=0.0.1,<0.0.2)\", \"tqdm (>=4.48.0)\", \"upstash-redis (>=0.15.0,<0.16.0)\", \"xata (>=1.0.0a7,<2.0.0)\", \"xmltodict (>=0.13.0,<0.14.0)\"]",
          "",
          "[Added Lines]",
          "1693: extended-testing = [\"aiosqlite (>=0.19.0,<0.20.0)\", \"aleph-alpha-client (>=2.15.0,<3.0.0)\", \"anthropic (>=0.3.11,<0.4.0)\", \"arxiv (>=1.4,<2.0)\", \"assemblyai (>=0.17.0,<0.18.0)\", \"atlassian-python-api (>=3.36.0,<4.0.0)\", \"beautifulsoup4 (>=4,<5)\", \"bibtexparser (>=1.4.0,<2.0.0)\", \"cassio (>=0.1.0,<0.2.0)\", \"chardet (>=5.1.0,<6.0.0)\", \"cohere (>=4,<5)\", \"dashvector (>=1.0.1,<2.0.0)\", \"databricks-vectorsearch (>=0.21,<0.22)\", \"datasets (>=2.15.0,<3.0.0)\", \"dgml-utils (>=0.3.0,<0.4.0)\", \"esprima (>=4.0.1,<5.0.0)\", \"faiss-cpu (>=1,<2)\", \"feedparser (>=6.0.10,<7.0.0)\", \"fireworks-ai (>=0.9.0,<0.10.0)\", \"geopandas (>=0.13.1,<0.14.0)\", \"gitpython (>=3.1.32,<4.0.0)\", \"google-cloud-documentai (>=2.20.1,<3.0.0)\", \"gql (>=3.4.1,<4.0.0)\", \"gradientai (>=1.4.0,<2.0.0)\", \"hologres-vector (>=0.0.6,<0.0.7)\", \"html2text (>=2020.1.16,<2021.0.0)\", \"javelin-sdk (>=0.1.8,<0.2.0)\", \"jinja2 (>=3,<4)\", \"jq (>=1.4.1,<2.0.0)\", \"jsonschema (>1)\", \"lxml (>=4.9.2,<5.0.0)\", \"markdownify (>=0.11.6,<0.12.0)\", \"motor (>=3.3.1,<4.0.0)\", \"msal (>=1.25.0,<2.0.0)\", \"mwparserfromhell (>=0.6.4,<0.7.0)\", \"mwxml (>=0.3.3,<0.4.0)\", \"newspaper3k (>=0.2.8,<0.3.0)\", \"numexpr (>=2.8.6,<3.0.0)\", \"openai (<2)\", \"openapi-pydantic (>=0.3.2,<0.4.0)\", \"oracle-ads (>=2.9.1,<3.0.0)\", \"pandas (>=2.0.1,<3.0.0)\", \"pdfminer-six (>=20221105,<20221106)\", \"pgvector (>=0.1.6,<0.2.0)\", \"praw (>=7.7.1,<8.0.0)\", \"psychicapi (>=0.8.0,<0.9.0)\", \"py-trello (>=0.19.0,<0.20.0)\", \"pymupdf (>=1.22.3,<2.0.0)\", \"pypdf (>=3.4.0,<4.0.0)\", \"pypdfium2 (>=4.10.0,<5.0.0)\", \"pyspark (>=3.4.0,<4.0.0)\", \"rank-bm25 (>=0.2.2,<0.3.0)\", \"rapidfuzz (>=3.1.1,<4.0.0)\", \"rapidocr-onnxruntime (>=1.3.2,<2.0.0)\", \"requests-toolbelt (>=1.0.0,<2.0.0)\", \"rspace_client (>=2.5.0,<3.0.0)\", \"scikit-learn (>=1.2.2,<2.0.0)\", \"sqlite-vss (>=0.1.2,<0.2.0)\", \"streamlit (>=1.18.0,<2.0.0)\", \"sympy (>=1.12,<2.0)\", \"telethon (>=1.28.5,<2.0.0)\", \"timescale-vector (>=0.0.1,<0.0.2)\", \"tqdm (>=4.48.0)\", \"upstash-redis (>=0.15.0,<0.16.0)\", \"xata (>=1.0.0a7,<2.0.0)\", \"xmltodict (>=0.13.0,<0.14.0)\"]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1700: [[package]]",
          "1701: name = \"langchain-core\"",
          "1703: description = \"Building applications with LLMs through composability\"",
          "1704: optional = false",
          "1705: python-versions = \">=3.8.1,<4.0\"",
          "",
          "[Removed Lines]",
          "1702: version = \"0.0.13rc1\"",
          "",
          "[Added Lines]",
          "1701: version = \"0.1.3\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1726: [[package]]",
          "1727: name = \"langchain-experimental\"",
          "1729: description = \"Building applications with LLMs through composability\"",
          "1730: optional = false",
          "1731: python-versions = \">=3.8.1,<4.0\"",
          "",
          "[Removed Lines]",
          "1728: version = \"0.0.45\"",
          "",
          "[Added Lines]",
          "1727: version = \"0.0.47\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1733: develop = true",
          "1735: [package.dependencies]",
          "1739: [package.extras]",
          "1740: extended-testing = [\"faker (>=19.3.1,<20.0.0)\", \"jinja2 (>=3,<4)\", \"presidio-analyzer (>=2.2.33,<3.0.0)\", \"presidio-anonymizer (>=2.2.33,<3.0.0)\", \"sentence-transformers (>=2,<3)\", \"vowpal-wabbit-next (==0.6.0)\"]",
          "",
          "[Removed Lines]",
          "1736: langchain = \">=0.0.348,<0.1\"",
          "1737: langchain-core = \">=0.0.12,<0.1\"",
          "",
          "[Added Lines]",
          "1735: langchain = \">=0.0.350,<0.1\"",
          "1736: langchain-core = \"^0.1\"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1746: [[package]]",
          "1747: name = \"langsmith\"",
          "1749: description = \"Client library to connect to the LangSmith LLM Tracing and Evaluation Platform.\"",
          "1750: optional = false",
          "1751: python-versions = \">=3.8.1,<4.0\"",
          "1752: files = [",
          "1755: ]",
          "1757: [package.dependencies]",
          "",
          "[Removed Lines]",
          "1748: version = \"0.0.63\"",
          "1753:     {file = \"langsmith-0.0.63-py3-none-any.whl\", hash = \"sha256:43a521dd10d8405ac21a0b959e3de33e2270e4abe6c73cc4036232a6990a0793\"},",
          "1754:     {file = \"langsmith-0.0.63.tar.gz\", hash = \"sha256:ddb2dfadfad3e05151ed8ba1643d1c516024b80fbd0c6263024400ced06a3768\"},",
          "",
          "[Added Lines]",
          "1747: version = \"0.0.74\"",
          "1752:     {file = \"langsmith-0.0.74-py3-none-any.whl\", hash = \"sha256:5d573dae3c59c84aca9e4d30a79ef49906151a32bf43830ff83863a825993ac2\"},",
          "1753:     {file = \"langsmith-0.0.74.tar.gz\", hash = \"sha256:249dae3625580fc9c1477be447ecd8dc1db76d1c8b59d0296abc027a37a0ce0b\"},",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1840:     {file = \"MarkupSafe-2.1.3-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:5bbe06f8eeafd38e5d0a4894ffec89378b6c6a625ff57e3028921f8ff59318ac\"},",
          "1841:     {file = \"MarkupSafe-2.1.3-cp311-cp311-win32.whl\", hash = \"sha256:dd15ff04ffd7e05ffcb7fe79f1b98041b8ea30ae9234aed2a9168b5797c3effb\"},",
          "1842:     {file = \"MarkupSafe-2.1.3-cp311-cp311-win_amd64.whl\", hash = \"sha256:134da1eca9ec0ae528110ccc9e48041e0828d79f24121a1a146161103c76e686\"},",
          "1843:     {file = \"MarkupSafe-2.1.3-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:8e254ae696c88d98da6555f5ace2279cf7cd5b3f52be2b5cf97feafe883b58d2\"},",
          "1844:     {file = \"MarkupSafe-2.1.3-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:cb0932dc158471523c9637e807d9bfb93e06a95cbf010f1a38b98623b929ef2b\"},",
          "1845:     {file = \"MarkupSafe-2.1.3-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9402b03f1a1b4dc4c19845e5c749e3ab82d5078d16a2a4c2cd2df62d57bb0707\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1842:     {file = \"MarkupSafe-2.1.3-cp312-cp312-macosx_10_9_universal2.whl\", hash = \"sha256:f698de3fd0c4e6972b92290a45bd9b1536bffe8c6759c62471efaa8acb4c37bc\"},",
          "1843:     {file = \"MarkupSafe-2.1.3-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:aa57bd9cf8ae831a362185ee444e15a93ecb2e344c8e52e4d721ea3ab6ef1823\"},",
          "1844:     {file = \"MarkupSafe-2.1.3-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ffcc3f7c66b5f5b7931a5aa68fc9cecc51e685ef90282f4a82f0f5e9b704ad11\"},",
          "1845:     {file = \"MarkupSafe-2.1.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:47d4f1c5f80fc62fdd7777d0d40a2e9dda0a05883ab11374334f6c4de38adffd\"},",
          "1846:     {file = \"MarkupSafe-2.1.3-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:1f67c7038d560d92149c060157d623c542173016c4babc0c1913cca0564b9939\"},",
          "1847:     {file = \"MarkupSafe-2.1.3-cp312-cp312-musllinux_1_1_aarch64.whl\", hash = \"sha256:9aad3c1755095ce347e26488214ef77e0485a3c34a50c5a5e2471dff60b9dd9c\"},",
          "1848:     {file = \"MarkupSafe-2.1.3-cp312-cp312-musllinux_1_1_i686.whl\", hash = \"sha256:14ff806850827afd6b07a5f32bd917fb7f45b046ba40c57abdb636674a8b559c\"},",
          "1849:     {file = \"MarkupSafe-2.1.3-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:8f9293864fe09b8149f0cc42ce56e3f0e54de883a9de90cd427f191c346eb2e1\"},",
          "1850:     {file = \"MarkupSafe-2.1.3-cp312-cp312-win32.whl\", hash = \"sha256:715d3562f79d540f251b99ebd6d8baa547118974341db04f5ad06d5ea3eb8007\"},",
          "1851:     {file = \"MarkupSafe-2.1.3-cp312-cp312-win_amd64.whl\", hash = \"sha256:1b8dd8c3fd14349433c79fa8abeb573a55fc0fdd769133baac1f5e07abf54aeb\"},",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2815:     {file = \"PyYAML-6.0.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:69b023b2b4daa7548bcfbd4aa3da05b3a74b772db9e23b982788168117739938\"},",
          "2816:     {file = \"PyYAML-6.0.1-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:81e0b275a9ecc9c0c0c07b4b90ba548307583c125f54d5b6946cfee6360c733d\"},",
          "2817:     {file = \"PyYAML-6.0.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ba336e390cd8e4d1739f42dfe9bb83a3cc2e80f567d8805e11b46f4a943f5515\"},",
          "2818:     {file = \"PyYAML-6.0.1-cp310-cp310-win32.whl\", hash = \"sha256:bd4af7373a854424dabd882decdc5579653d7868b8fb26dc7d0e99f823aa5924\"},",
          "2819:     {file = \"PyYAML-6.0.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:fd1592b3fdf65fff2ad0004b5e363300ef59ced41c2e6b3a99d4089fa8c5435d\"},",
          "2820:     {file = \"PyYAML-6.0.1-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:6965a7bc3cf88e5a1c3bd2e0b5c22f8d677dc88a455344035f03399034eb3007\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2827:     {file = \"PyYAML-6.0.1-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:326c013efe8048858a6d312ddd31d56e468118ad4cdeda36c719bf5bb6192290\"},",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "2822:     {file = \"PyYAML-6.0.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:42f8152b8dbc4fe7d96729ec2b99c7097d656dc1213a3229ca5383f973a5ed6d\"},",
          "2823:     {file = \"PyYAML-6.0.1-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:062582fca9fabdd2c8b54a3ef1c978d786e0f6b3a1510e0ac93ef59e0ddae2bc\"},",
          "2824:     {file = \"PyYAML-6.0.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d2b04aac4d386b172d5b9692e2d2da8de7bfb6c387fa4f801fbf6fb2e6ba4673\"},",
          "2825:     {file = \"PyYAML-6.0.1-cp311-cp311-win32.whl\", hash = \"sha256:1635fd110e8d85d55237ab316b5b011de701ea0f29d07611174a1b42f1444741\"},",
          "2826:     {file = \"PyYAML-6.0.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:bf07ee2fef7014951eeb99f56f39c9bb4af143d8aa3c21b1677805985307da34\"},",
          "2827:     {file = \"PyYAML-6.0.1-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:50550eb667afee136e9a77d6dc71ae76a44df8b3e51e41b77f6de2932bfe0f47\"},",
          "2828:     {file = \"PyYAML-6.0.1-cp36-cp36m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:1fe35611261b29bd1de0070f0b2f47cb6ff71fa6595c077e42bd0c419fa27b98\"},",
          "2829:     {file = \"PyYAML-6.0.1-cp36-cp36m-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:704219a11b772aea0d8ecd7058d0082713c3562b4e271b849ad7dc4a5c90c13c\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2835:     {file = \"PyYAML-6.0.1-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:e7d73685e87afe9f3b36c799222440d6cf362062f78be1013661b00c5c6f678b\"},",
          "2838:     {file = \"PyYAML-6.0.1-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:855fb52b0dc35af121542a76b9a84f8d1cd886ea97c84703eaa6d88e37a2ad28\"},",
          "2839:     {file = \"PyYAML-6.0.1-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:40df9b996c2b73138957fe23a16a4f0ba614f4c0efce1e9406a184b6d07fa3a9\"},",
          "2840:     {file = \"PyYAML-6.0.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6c22bec3fbe2524cde73d7ada88f6566758a8f7227bfbf93a408a9d86bcc12a0\"},",
          "2841:     {file = \"PyYAML-6.0.1-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:8d4e9c88387b0f5c7d5f281e55304de64cf7f9c0021a3525bd3b1c542da3b0e4\"},",
          "2842:     {file = \"PyYAML-6.0.1-cp312-cp312-win32.whl\", hash = \"sha256:d483d2cdf104e7c9fa60c544d92981f12ad66a457afae824d146093b8c294c54\"},",
          "2843:     {file = \"PyYAML-6.0.1-cp312-cp312-win_amd64.whl\", hash = \"sha256:0d3304d8c0adc42be59c5f8a4d9e3d7379e6955ad754aa9d6ab7a398b59dd1df\"},",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2840:     {file = \"PyYAML-6.0.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a0cd17c15d3bb3fa06978b4e8958dcdc6e0174ccea823003a106c7d4d7899ac5\"},",
          "2841:     {file = \"PyYAML-6.0.1-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:28c119d996beec18c05208a8bd78cbe4007878c6dd15091efb73a30e90539696\"},",
          "2842:     {file = \"PyYAML-6.0.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:7e07cbde391ba96ab58e532ff4803f79c4129397514e1413a7dc761ccd755735\"},",
          "2843:     {file = \"PyYAML-6.0.1-cp38-cp38-win32.whl\", hash = \"sha256:184c5108a2aca3c5b3d3bf9395d50893a7ab82a38004c8f61c258d4428e80206\"},",
          "2844:     {file = \"PyYAML-6.0.1-cp38-cp38-win_amd64.whl\", hash = \"sha256:1e2722cc9fbb45d9b87631ac70924c11d3a401b2d7f410cc0e3bbf249f2dca62\"},",
          "2845:     {file = \"PyYAML-6.0.1-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:9eb6caa9a297fc2c2fb8862bc5370d0303ddba53ba97e71f08023b6cd73d16a8\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2860:     {file = \"PyYAML-6.0.1-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:49a183be227561de579b4a36efbb21b3eab9651dd81b1858589f796549873dd6\"},",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "2847:     {file = \"PyYAML-6.0.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:5773183b6446b2c99bb77e77595dd486303b4faab2b086e7b17bc6bef28865f6\"},",
          "2848:     {file = \"PyYAML-6.0.1-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:b786eecbdf8499b9ca1d697215862083bd6d2a99965554781d0d8d1ad31e13a0\"},",
          "2849:     {file = \"PyYAML-6.0.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:bc1bf2925a1ecd43da378f4db9e4f799775d6367bdb94671027b73b393a7c42c\"},",
          "2850:     {file = \"PyYAML-6.0.1-cp39-cp39-win32.whl\", hash = \"sha256:faca3bdcf85b2fc05d06ff3fbc1f83e1391b3e724afa3feba7d13eeab355484c\"},",
          "2851:     {file = \"PyYAML-6.0.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:510c9deebc5c0225e8c96813043e62b680ba2f9c50a08d3724c7f28a747d1486\"},",
          "2852:     {file = \"PyYAML-6.0.1.tar.gz\", hash = \"sha256:bfdf460b1736c775f2ba9f6a92bca30bc2095067b8a9d77876d1fad6cc3b4a43\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2868:     {file = \"PyYAML-6.0.1-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:04ac92ad1925b2cff1db0cfebffb6ffc43457495c9b3c39d3fcae417d7125dc5\"},",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "3526:     {file = \"SQLAlchemy-2.0.21-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:b69f1f754d92eb1cc6b50938359dead36b96a1dcf11a8670bff65fd9b21a4b09\"},",
          "3527:     {file = \"SQLAlchemy-2.0.21-cp311-cp311-win32.whl\", hash = \"sha256:af520a730d523eab77d754f5cf44cc7dd7ad2d54907adeb3233177eeb22f271b\"},",
          "3528:     {file = \"SQLAlchemy-2.0.21-cp311-cp311-win_amd64.whl\", hash = \"sha256:141675dae56522126986fa4ca713739d00ed3a6f08f3c2eb92c39c6dfec463ce\"},",
          "3529:     {file = \"SQLAlchemy-2.0.21-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:7614f1eab4336df7dd6bee05bc974f2b02c38d3d0c78060c5faa4cd1ca2af3b8\"},",
          "3530:     {file = \"SQLAlchemy-2.0.21-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d59cb9e20d79686aa473e0302e4a82882d7118744d30bb1dfb62d3c47141b3ec\"},",
          "3531:     {file = \"SQLAlchemy-2.0.21-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:a95aa0672e3065d43c8aa80080cdd5cc40fe92dc873749e6c1cf23914c4b83af\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3548:     {file = \"SQLAlchemy-2.0.21-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:56628ca27aa17b5890391ded4e385bf0480209726f198799b7e980c6bd473bd7\"},",
          "3549:     {file = \"SQLAlchemy-2.0.21-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:db726be58837fe5ac39859e0fa40baafe54c6d54c02aba1d47d25536170b690f\"},",
          "3550:     {file = \"SQLAlchemy-2.0.21-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e7421c1bfdbb7214313919472307be650bd45c4dc2fcb317d64d078993de045b\"},",
          "3551:     {file = \"SQLAlchemy-2.0.21-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:632784f7a6f12cfa0e84bf2a5003b07660addccf5563c132cd23b7cc1d7371a9\"},",
          "3552:     {file = \"SQLAlchemy-2.0.21-cp312-cp312-musllinux_1_1_aarch64.whl\", hash = \"sha256:f6f7276cf26145a888f2182a98f204541b519d9ea358a65d82095d9c9e22f917\"},",
          "3553:     {file = \"SQLAlchemy-2.0.21-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:2a1f7ffac934bc0ea717fa1596f938483fb8c402233f9b26679b4f7b38d6ab6e\"},",
          "3554:     {file = \"SQLAlchemy-2.0.21-cp312-cp312-win32.whl\", hash = \"sha256:bfece2f7cec502ec5f759bbc09ce711445372deeac3628f6fa1c16b7fb45b682\"},",
          "3555:     {file = \"SQLAlchemy-2.0.21-cp312-cp312-win_amd64.whl\", hash = \"sha256:526b869a0f4f000d8d8ee3409d0becca30ae73f494cbb48801da0129601f72c6\"},",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "45b394268c88b121d5acda3287f78b3e1d11efe4",
      "candidate_info": {
        "commit_hash": "45b394268c88b121d5acda3287f78b3e1d11efe4",
        "repo": "langchain-ai/langchain",
        "commit_url": "https://github.com/langchain-ai/langchain/commit/45b394268c88b121d5acda3287f78b3e1d11efe4",
        "files": [
          "libs/core/poetry.lock",
          "libs/core/pyproject.toml"
        ],
        "message": "core[patch]: allowing latest `packaging` versions (#22792)\n\nAllowing version 24 of https://github.com/pypa/packaging\n\n---------\n\nCo-authored-by: Erick Friis <erick@langchain.dev>",
        "before_after_code_files": [
          "libs/core/poetry.lock||libs/core/poetry.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libs/core/poetry.lock||libs/core/poetry.lock"
          ],
          "candidate": [
            "libs/core/poetry.lock||libs/core/poetry.lock"
          ]
        }
      },
      "candidate_diff": {
        "libs/core/poetry.lock||libs/core/poetry.lock": [
          "File: libs/core/poetry.lock -> libs/core/poetry.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "244: [[package]]",
          "245: name = \"certifi\"",
          "247: description = \"Python package for providing Mozilla's CA Bundle.\"",
          "248: optional = false",
          "249: python-versions = \">=3.6\"",
          "250: files = [",
          "253: ]",
          "255: [[package]]",
          "",
          "[Removed Lines]",
          "246: version = \"2024.2.2\"",
          "251:     {file = \"certifi-2024.2.2-py3-none-any.whl\", hash = \"sha256:dc383c07b76109f368f6106eee2b593b04a011ea4d55f652c6ca24a754d1cdd1\"},",
          "252:     {file = \"certifi-2024.2.2.tar.gz\", hash = \"sha256:0569859f95fc761b18b45ef421b1290a0f65f147e92a1e5eb3e635f9a5e4e66f\"},",
          "",
          "[Added Lines]",
          "246: version = \"2024.6.2\"",
          "251:     {file = \"certifi-2024.6.2-py3-none-any.whl\", hash = \"sha256:ddc6c8ce995e6987e7faf5e3f1b02b302836a0e5d98ece18392cb1a36c72ad56\"},",
          "252:     {file = \"certifi-2024.6.2.tar.gz\", hash = \"sha256:3cd43f1c6fa7dedc5899d69d3ad0398fd018ad1a17fba83ddaf78aa46c747516\"},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "566: [[package]]",
          "567: name = \"gprof2dot\"",
          "569: description = \"Generate a dot graph from the output of several profilers.\"",
          "570: optional = false",
          "572: files = [",
          "575: ]",
          "577: [[package]]",
          "",
          "[Removed Lines]",
          "568: version = \"2022.7.29\"",
          "571: python-versions = \">=2.7\"",
          "573:     {file = \"gprof2dot-2022.7.29-py2.py3-none-any.whl\", hash = \"sha256:f165b3851d3c52ee4915eb1bd6cca571e5759823c2cd0f71a79bda93c2dc85d6\"},",
          "574:     {file = \"gprof2dot-2022.7.29.tar.gz\", hash = \"sha256:45b4d298bd36608fccf9511c3fd88a773f7a1abc04d6cd39445b11ba43133ec5\"},",
          "",
          "[Added Lines]",
          "568: version = \"2024.6.6\"",
          "571: python-versions = \">=3.8\"",
          "573:     {file = \"gprof2dot-2024.6.6-py2.py3-none-any.whl\", hash = \"sha256:45b14ad7ce64e299c8f526881007b9eb2c6b75505d5613e96e66ee4d5ab33696\"},",
          "574:     {file = \"gprof2dot-2024.6.6.tar.gz\", hash = \"sha256:fa1420c60025a9eb7734f65225b4da02a10fc6dd741b37fa129bc6b41951e5ab\"},",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "877: [[package]]",
          "878: name = \"jsonpointer\"",
          "880: description = \"Identify specific nodes in a JSON document (RFC 6901)\"",
          "881: optional = false",
          "883: files = [",
          "886: ]",
          "888: [[package]]",
          "",
          "[Removed Lines]",
          "879: version = \"2.4\"",
          "882: python-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, !=3.6.*\"",
          "884:     {file = \"jsonpointer-2.4-py2.py3-none-any.whl\", hash = \"sha256:15d51bba20eea3165644553647711d150376234112651b4f1811022aecad7d7a\"},",
          "885:     {file = \"jsonpointer-2.4.tar.gz\", hash = \"sha256:585cee82b70211fa9e6043b7bb89db6e1aa49524340dde8ad6b63206ea689d88\"},",
          "",
          "[Added Lines]",
          "879: version = \"3.0.0\"",
          "882: python-versions = \">=3.7\"",
          "884:     {file = \"jsonpointer-3.0.0-py2.py3-none-any.whl\", hash = \"sha256:13e088adc14fca8b6aa8177c044e12701e6ad4b28ff10e65f2267a90109c9942\"},",
          "885:     {file = \"jsonpointer-3.0.0.tar.gz\", hash = \"sha256:2b2d729f2091522d61c3b31f82e11870f60b68f43fbc705cb76bf4b832af59ef\"},",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1061: [[package]]",
          "1062: name = \"jupyter-server\"",
          "1064: description = \"The backend\u2014i.e. core services, APIs, and REST endpoints\u2014to Jupyter web applications.\"",
          "1065: optional = false",
          "1066: python-versions = \">=3.8\"",
          "1067: files = [",
          "1070: ]",
          "1072: [package.dependencies]",
          "",
          "[Removed Lines]",
          "1063: version = \"2.14.0\"",
          "1068:     {file = \"jupyter_server-2.14.0-py3-none-any.whl\", hash = \"sha256:fb6be52c713e80e004fac34b35a0990d6d36ba06fd0a2b2ed82b899143a64210\"},",
          "1069:     {file = \"jupyter_server-2.14.0.tar.gz\", hash = \"sha256:659154cea512083434fd7c93b7fe0897af7a2fd0b9dd4749282b42eaac4ae677\"},",
          "",
          "[Added Lines]",
          "1063: version = \"2.14.1\"",
          "1068:     {file = \"jupyter_server-2.14.1-py3-none-any.whl\", hash = \"sha256:16f7177c3a4ea8fe37784e2d31271981a812f0b2874af17339031dc3510cc2a5\"},",
          "1069:     {file = \"jupyter_server-2.14.1.tar.gz\", hash = \"sha256:12558d158ec7a0653bf96cc272bc7ad79e0127d503b982ed144399346694f726\"},",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1091: websocket-client = \">=1.7\"",
          "1093: [package.extras]",
          "1095: test = [\"flaky\", \"ipykernel\", \"pre-commit\", \"pytest (>=7.0,<9)\", \"pytest-console-scripts\", \"pytest-jupyter[server] (>=0.7)\", \"pytest-timeout\", \"requests\"]",
          "1097: [[package]]",
          "",
          "[Removed Lines]",
          "1094: docs = [\"ipykernel\", \"jinja2\", \"jupyter-client\", \"jupyter-server\", \"myst-parser\", \"nbformat\", \"prometheus-client\", \"pydata-sphinx-theme\", \"send2trash\", \"sphinx-autodoc-typehints\", \"sphinxcontrib-github-alt\", \"sphinxcontrib-openapi (>=0.8.0)\", \"sphinxcontrib-spelling\", \"sphinxemoji\", \"tornado\", \"typing-extensions\"]",
          "",
          "[Added Lines]",
          "1094: docs = [\"ipykernel\", \"jinja2\", \"jupyter-client\", \"myst-parser\", \"nbformat\", \"prometheus-client\", \"pydata-sphinx-theme\", \"send2trash\", \"sphinx-autodoc-typehints\", \"sphinxcontrib-github-alt\", \"sphinxcontrib-openapi (>=0.8.0)\", \"sphinxcontrib-spelling\", \"sphinxemoji\", \"tornado\", \"typing-extensions\"]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1116: [[package]]",
          "1117: name = \"jupyterlab\"",
          "1119: description = \"JupyterLab computational environment\"",
          "1120: optional = false",
          "1121: python-versions = \">=3.8\"",
          "1122: files = [",
          "1125: ]",
          "1127: [package.dependencies]",
          "",
          "[Removed Lines]",
          "1118: version = \"4.2.1\"",
          "1123:     {file = \"jupyterlab-4.2.1-py3-none-any.whl\", hash = \"sha256:6ac6e3827b3c890e6e549800e8a4f4aaea6a69321e2240007902aa7a0c56a8e4\"},",
          "1124:     {file = \"jupyterlab-4.2.1.tar.gz\", hash = \"sha256:a10fb71085a6900820c62d43324005046402ffc8f0fde696103e37238a839507\"},",
          "",
          "[Added Lines]",
          "1118: version = \"4.2.2\"",
          "1123:     {file = \"jupyterlab-4.2.2-py3-none-any.whl\", hash = \"sha256:59ee9b839f43308c3dfd55d72d1f1a299ed42a7f91f2d1afe9c12a783f9e525f\"},",
          "1124:     {file = \"jupyterlab-4.2.2.tar.gz\", hash = \"sha256:a534b6a25719a92a40d514fb133a9fe8f0d9981b0bbce5d8a5fcaa33344a3038\"},",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1137: jupyterlab-server = \">=2.27.1,<3\"",
          "1138: notebook-shim = \">=0.2\"",
          "1139: packaging = \"*\"",
          "1140: tomli = {version = \">=1.2.2\", markers = \"python_version < \\\"3.11\\\"\"}",
          "1141: tornado = \">=6.2.0\"",
          "1142: traitlets = \"*\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1140: setuptools = \">=40.1.0\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1215: [[package]]",
          "1216: name = \"langsmith\"",
          "1218: description = \"Client library to connect to the LangSmith LLM Tracing and Evaluation Platform.\"",
          "1219: optional = false",
          "1220: python-versions = \"<4.0,>=3.8.1\"",
          "1221: files = [",
          "1224: ]",
          "1226: [package.dependencies]",
          "",
          "[Removed Lines]",
          "1217: version = \"0.1.75\"",
          "1222:     {file = \"langsmith-0.1.75-py3-none-any.whl\", hash = \"sha256:d08b08dd6b3fa4da170377f95123d77122ef4c52999d10fff4ae08ff70d07aed\"},",
          "1223:     {file = \"langsmith-0.1.75.tar.gz\", hash = \"sha256:61274e144ea94c297dd78ce03e6dfae18459fe9bd8ab5094d61a0c4816561279\"},",
          "",
          "[Added Lines]",
          "1218: version = \"0.1.77\"",
          "1223:     {file = \"langsmith-0.1.77-py3-none-any.whl\", hash = \"sha256:2202cc21b1ed7e7b9e5d2af2694be28898afa048c09fdf09f620cbd9301755ae\"},",
          "1224:     {file = \"langsmith-0.1.77.tar.gz\", hash = \"sha256:4ace09077a9a4e412afeb4b517ca68e7de7b07f36e4792dc8236ac5207c0c0c7\"},",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1475: [[package]]",
          "1476: name = \"notebook\"",
          "1478: description = \"Jupyter Notebook - A web-based notebook environment for interactive computing\"",
          "1479: optional = false",
          "1480: python-versions = \">=3.8\"",
          "1481: files = [",
          "1484: ]",
          "1486: [package.dependencies]",
          "",
          "[Removed Lines]",
          "1477: version = \"7.2.0\"",
          "1482:     {file = \"notebook-7.2.0-py3-none-any.whl\", hash = \"sha256:b4752d7407d6c8872fc505df0f00d3cae46e8efb033b822adacbaa3f1f3ce8f5\"},",
          "1483:     {file = \"notebook-7.2.0.tar.gz\", hash = \"sha256:34a2ba4b08ad5d19ec930db7484fb79746a1784be9e1a5f8218f9af8656a141f\"},",
          "",
          "[Added Lines]",
          "1478: version = \"7.2.1\"",
          "1483:     {file = \"notebook-7.2.1-py3-none-any.whl\", hash = \"sha256:f45489a3995746f2195a137e0773e2130960b51c9ac3ce257dbc2705aab3a6ca\"},",
          "1484:     {file = \"notebook-7.2.1.tar.gz\", hash = \"sha256:4287b6da59740b32173d01d641f763d292f49c30e7a51b89c46ba8473126341e\"},",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1597: [[package]]",
          "1598: name = \"orjson\"",
          "1600: description = \"Fast, correct Python JSON library supporting dataclasses, datetimes, and numpy\"",
          "1601: optional = false",
          "1602: python-versions = \">=3.8\"",
          "1603: files = [",
          "1650: ]",
          "1652: [[package]]",
          "",
          "[Removed Lines]",
          "1599: version = \"3.10.3\"",
          "1604:     {file = \"orjson-3.10.3-cp310-cp310-macosx_10_15_x86_64.macosx_11_0_arm64.macosx_10_15_universal2.whl\", hash = \"sha256:9fb6c3f9f5490a3eb4ddd46fc1b6eadb0d6fc16fb3f07320149c3286a1409dd8\"},",
          "1605:     {file = \"orjson-3.10.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:252124b198662eee80428f1af8c63f7ff077c88723fe206a25df8dc57a57b1fa\"},",
          "1606:     {file = \"orjson-3.10.3-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:9f3e87733823089a338ef9bbf363ef4de45e5c599a9bf50a7a9b82e86d0228da\"},",
          "1607:     {file = \"orjson-3.10.3-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:c8334c0d87103bb9fbbe59b78129f1f40d1d1e8355bbed2ca71853af15fa4ed3\"},",
          "1608:     {file = \"orjson-3.10.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:1952c03439e4dce23482ac846e7961f9d4ec62086eb98ae76d97bd41d72644d7\"},",
          "1609:     {file = \"orjson-3.10.3-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:c0403ed9c706dcd2809f1600ed18f4aae50be263bd7112e54b50e2c2bc3ebd6d\"},",
          "1610:     {file = \"orjson-3.10.3-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:382e52aa4270a037d41f325e7d1dfa395b7de0c367800b6f337d8157367bf3a7\"},",
          "1611:     {file = \"orjson-3.10.3-cp310-none-win32.whl\", hash = \"sha256:be2aab54313752c04f2cbaab4515291ef5af8c2256ce22abc007f89f42f49109\"},",
          "1612:     {file = \"orjson-3.10.3-cp310-none-win_amd64.whl\", hash = \"sha256:416b195f78ae461601893f482287cee1e3059ec49b4f99479aedf22a20b1098b\"},",
          "1613:     {file = \"orjson-3.10.3-cp311-cp311-macosx_10_15_x86_64.macosx_11_0_arm64.macosx_10_15_universal2.whl\", hash = \"sha256:73100d9abbbe730331f2242c1fc0bcb46a3ea3b4ae3348847e5a141265479700\"},",
          "1614:     {file = \"orjson-3.10.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:544a12eee96e3ab828dbfcb4d5a0023aa971b27143a1d35dc214c176fdfb29b3\"},",
          "1615:     {file = \"orjson-3.10.3-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:520de5e2ef0b4ae546bea25129d6c7c74edb43fc6cf5213f511a927f2b28148b\"},",
          "1616:     {file = \"orjson-3.10.3-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:ccaa0a401fc02e8828a5bedfd80f8cd389d24f65e5ca3954d72c6582495b4bcf\"},",
          "1617:     {file = \"orjson-3.10.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9a7bc9e8bc11bac40f905640acd41cbeaa87209e7e1f57ade386da658092dc16\"},",
          "1618:     {file = \"orjson-3.10.3-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:3582b34b70543a1ed6944aca75e219e1192661a63da4d039d088a09c67543b08\"},",
          "1619:     {file = \"orjson-3.10.3-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:1c23dfa91481de880890d17aa7b91d586a4746a4c2aa9a145bebdbaf233768d5\"},",
          "1620:     {file = \"orjson-3.10.3-cp311-none-win32.whl\", hash = \"sha256:1770e2a0eae728b050705206d84eda8b074b65ee835e7f85c919f5705b006c9b\"},",
          "1621:     {file = \"orjson-3.10.3-cp311-none-win_amd64.whl\", hash = \"sha256:93433b3c1f852660eb5abdc1f4dd0ced2be031ba30900433223b28ee0140cde5\"},",
          "1622:     {file = \"orjson-3.10.3-cp312-cp312-macosx_10_15_x86_64.macosx_11_0_arm64.macosx_10_15_universal2.whl\", hash = \"sha256:a39aa73e53bec8d410875683bfa3a8edf61e5a1c7bb4014f65f81d36467ea098\"},",
          "1623:     {file = \"orjson-3.10.3-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:0943a96b3fa09bee1afdfccc2cb236c9c64715afa375b2af296c73d91c23eab2\"},",
          "1624:     {file = \"orjson-3.10.3-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:e852baafceff8da3c9defae29414cc8513a1586ad93e45f27b89a639c68e8176\"},",
          "1625:     {file = \"orjson-3.10.3-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:18566beb5acd76f3769c1d1a7ec06cdb81edc4d55d2765fb677e3eaa10fa99e0\"},",
          "1626:     {file = \"orjson-3.10.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:1bd2218d5a3aa43060efe649ec564ebedec8ce6ae0a43654b81376216d5ebd42\"},",
          "1627:     {file = \"orjson-3.10.3-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:cf20465e74c6e17a104ecf01bf8cd3b7b252565b4ccee4548f18b012ff2f8069\"},",
          "1628:     {file = \"orjson-3.10.3-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:ba7f67aa7f983c4345eeda16054a4677289011a478ca947cd69c0a86ea45e534\"},",
          "1629:     {file = \"orjson-3.10.3-cp312-none-win32.whl\", hash = \"sha256:17e0713fc159abc261eea0f4feda611d32eabc35708b74bef6ad44f6c78d5ea0\"},",
          "1630:     {file = \"orjson-3.10.3-cp312-none-win_amd64.whl\", hash = \"sha256:4c895383b1ec42b017dd2c75ae8a5b862fc489006afde06f14afbdd0309b2af0\"},",
          "1631:     {file = \"orjson-3.10.3-cp38-cp38-macosx_10_15_x86_64.macosx_11_0_arm64.macosx_10_15_universal2.whl\", hash = \"sha256:be2719e5041e9fb76c8c2c06b9600fe8e8584e6980061ff88dcbc2691a16d20d\"},",
          "1632:     {file = \"orjson-3.10.3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:cb0175a5798bdc878956099f5c54b9837cb62cfbf5d0b86ba6d77e43861bcec2\"},",
          "1633:     {file = \"orjson-3.10.3-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:978be58a68ade24f1af7758626806e13cff7748a677faf95fbb298359aa1e20d\"},",
          "1634:     {file = \"orjson-3.10.3-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:16bda83b5c61586f6f788333d3cf3ed19015e3b9019188c56983b5a299210eb5\"},",
          "1635:     {file = \"orjson-3.10.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:4ad1f26bea425041e0a1adad34630c4825a9e3adec49079b1fb6ac8d36f8b754\"},",
          "1636:     {file = \"orjson-3.10.3-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:9e253498bee561fe85d6325ba55ff2ff08fb5e7184cd6a4d7754133bd19c9195\"},",
          "1637:     {file = \"orjson-3.10.3-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:0a62f9968bab8a676a164263e485f30a0b748255ee2f4ae49a0224be95f4532b\"},",
          "1638:     {file = \"orjson-3.10.3-cp38-none-win32.whl\", hash = \"sha256:8d0b84403d287d4bfa9bf7d1dc298d5c1c5d9f444f3737929a66f2fe4fb8f134\"},",
          "1639:     {file = \"orjson-3.10.3-cp38-none-win_amd64.whl\", hash = \"sha256:8bc7a4df90da5d535e18157220d7915780d07198b54f4de0110eca6b6c11e290\"},",
          "1640:     {file = \"orjson-3.10.3-cp39-cp39-macosx_10_15_x86_64.macosx_11_0_arm64.macosx_10_15_universal2.whl\", hash = \"sha256:9059d15c30e675a58fdcd6f95465c1522b8426e092de9fff20edebfdc15e1cb0\"},",
          "1641:     {file = \"orjson-3.10.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:8d40c7f7938c9c2b934b297412c067936d0b54e4b8ab916fd1a9eb8f54c02294\"},",
          "1642:     {file = \"orjson-3.10.3-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:d4a654ec1de8fdaae1d80d55cee65893cb06494e124681ab335218be6a0691e7\"},",
          "1643:     {file = \"orjson-3.10.3-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:831c6ef73f9aa53c5f40ae8f949ff7681b38eaddb6904aab89dca4d85099cb78\"},",
          "1644:     {file = \"orjson-3.10.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:99b880d7e34542db89f48d14ddecbd26f06838b12427d5a25d71baceb5ba119d\"},",
          "1645:     {file = \"orjson-3.10.3-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:2e5e176c994ce4bd434d7aafb9ecc893c15f347d3d2bbd8e7ce0b63071c52e25\"},",
          "1646:     {file = \"orjson-3.10.3-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:b69a58a37dab856491bf2d3bbf259775fdce262b727f96aafbda359cb1d114d8\"},",
          "1647:     {file = \"orjson-3.10.3-cp39-none-win32.whl\", hash = \"sha256:b8d4d1a6868cde356f1402c8faeb50d62cee765a1f7ffcfd6de732ab0581e063\"},",
          "1648:     {file = \"orjson-3.10.3-cp39-none-win_amd64.whl\", hash = \"sha256:5102f50c5fc46d94f2033fe00d392588564378260d64377aec702f21a7a22912\"},",
          "1649:     {file = \"orjson-3.10.3.tar.gz\", hash = \"sha256:2b166507acae7ba2f7c315dcf185a9111ad5e992ac81f2d507aac39193c2c818\"},",
          "",
          "[Added Lines]",
          "1600: version = \"3.10.4\"",
          "1605:     {file = \"orjson-3.10.4-cp310-cp310-macosx_10_15_x86_64.macosx_11_0_arm64.macosx_10_15_universal2.whl\", hash = \"sha256:afca963f19ca60c7aedadea9979f769139127288dd58ccf3f7c5e8e6dc62cabf\"},",
          "1606:     {file = \"orjson-3.10.4-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:42b112eff36ba7ccc7a9d6b87e17b9d6bde4312d05e3ddf66bf5662481dee846\"},",
          "1607:     {file = \"orjson-3.10.4-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:02b192eaba048b1039eca9a0cef67863bd5623042f5c441889a9957121d97e14\"},",
          "1608:     {file = \"orjson-3.10.4-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:827c3d0e4fc44242c82bfdb1a773235b8c0575afee99a9fa9a8ce920c14e440f\"},",
          "1609:     {file = \"orjson-3.10.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ca8ec09724f10ec209244caeb1f9f428b6bb03f2eda9ed5e2c4dd7f2b7fabd44\"},",
          "1610:     {file = \"orjson-3.10.4-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:8eaa5d531a8fde11993cbcb27e9acf7d9c457ba301adccb7fa3a021bfecab46c\"},",
          "1611:     {file = \"orjson-3.10.4-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:e112aa7fc4ea67367ec5e86c39a6bb6c5719eddc8f999087b1759e765ddaf2d4\"},",
          "1612:     {file = \"orjson-3.10.4-cp310-none-win32.whl\", hash = \"sha256:1538844fb88446c42da3889f8c4ecce95a630b5a5ba18ecdfe5aea596f4dff21\"},",
          "1613:     {file = \"orjson-3.10.4-cp310-none-win_amd64.whl\", hash = \"sha256:de02811903a2e434127fba5389c3cc90f689542339a6e52e691ab7f693407b5a\"},",
          "1614:     {file = \"orjson-3.10.4-cp311-cp311-macosx_10_15_x86_64.macosx_11_0_arm64.macosx_10_15_universal2.whl\", hash = \"sha256:358afaec75de7237dfea08e6b1b25d226e33a1e3b6dc154fc99eb697f24a1ffa\"},",
          "1615:     {file = \"orjson-3.10.4-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:bb4e292c3198ab3d93e5f877301d2746be4ca0ba2d9c513da5e10eb90e19ff52\"},",
          "1616:     {file = \"orjson-3.10.4-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:5c39e57cf6323a39238490092985d5d198a7da4a3be013cc891a33fef13a536e\"},",
          "1617:     {file = \"orjson-3.10.4-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:f86df433fc01361ff9270ad27455ce1ad43cd05e46de7152ca6adb405a16b2f6\"},",
          "1618:     {file = \"orjson-3.10.4-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0c9966276a2c97e93e6cbe8286537f88b2a071827514f0d9d47a0aefa77db458\"},",
          "1619:     {file = \"orjson-3.10.4-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:c499a14155a1f5a1e16e0cd31f6cf6f93965ac60a0822bc8340e7e2d3dac1108\"},",
          "1620:     {file = \"orjson-3.10.4-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:3087023ce904a327c29487eb7e1f2c060070e8dbb9a3991b8e7952a9c6e62f38\"},",
          "1621:     {file = \"orjson-3.10.4-cp311-none-win32.whl\", hash = \"sha256:f965893244fe348b59e5ce560693e6dd03368d577ce26849b5d261ce31c70101\"},",
          "1622:     {file = \"orjson-3.10.4-cp311-none-win_amd64.whl\", hash = \"sha256:c212f06fad6aa6ce85d5665e91a83b866579f29441a47d3865c57329c0857357\"},",
          "1623:     {file = \"orjson-3.10.4-cp312-cp312-macosx_10_15_x86_64.macosx_11_0_arm64.macosx_10_15_universal2.whl\", hash = \"sha256:d0965a8b0131959833ca8a65af60285995d57ced0de2fd8f16fc03235975d238\"},",
          "1624:     {file = \"orjson-3.10.4-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:27b64695d9f2aef3ae15a0522e370ec95c946aaea7f2c97a1582a62b3bdd9169\"},",
          "1625:     {file = \"orjson-3.10.4-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:867d882ddee6a20be4c8b03ae3d2b0333894d53ad632d32bd9b8123649577171\"},",
          "1626:     {file = \"orjson-3.10.4-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:a0667458f8a8ceb6dee5c08fec0b46195f92c474cbbec71dca2a6b7fd5b67b8d\"},",
          "1627:     {file = \"orjson-3.10.4-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:a3eac9befc4eaec1d1ff3bba6210576be4945332dde194525601c5ddb5c060d3\"},",
          "1628:     {file = \"orjson-3.10.4-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:4343245443552eae240a33047a6d1bcac7a754ad4b1c57318173c54d7efb9aea\"},",
          "1629:     {file = \"orjson-3.10.4-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:30153e269eea43e98918d4d462a36a7065031d9246407dfff2579a4e457515c1\"},",
          "1630:     {file = \"orjson-3.10.4-cp312-none-win32.whl\", hash = \"sha256:1a7d092ee043abf3db19c2183115e80676495c9911843fdb3ebd48ca7b73079e\"},",
          "1631:     {file = \"orjson-3.10.4-cp312-none-win_amd64.whl\", hash = \"sha256:07a2adbeb8b9efe6d68fc557685954a1f19d9e33f5cc018ae1a89e96647c1b65\"},",
          "1632:     {file = \"orjson-3.10.4-cp38-cp38-macosx_10_15_x86_64.macosx_11_0_arm64.macosx_10_15_universal2.whl\", hash = \"sha256:f5a746f3d908bce1a1e347b9ca89864047533bdfab5a450066a0315f6566527b\"},",
          "1633:     {file = \"orjson-3.10.4-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:465b4a8a3e459f8d304c19071b4badaa9b267c59207a005a7dd9dfe13d3a423f\"},",
          "1634:     {file = \"orjson-3.10.4-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:35858d260728c434a3d91b60685ab32418318567e8902039837e1c2af2719e0b\"},",
          "1635:     {file = \"orjson-3.10.4-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:8a5ba090d40c4460312dd69c232b38c2ff67a823185cfe667e841c9dd5c06841\"},",
          "1636:     {file = \"orjson-3.10.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:5dde86755d064664e62e3612a166c28298aa8dfd35a991553faa58855ae739cc\"},",
          "1637:     {file = \"orjson-3.10.4-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:020a9e9001cfec85c156ef3b185ff758b62ef986cefdb8384c4579facd5ce126\"},",
          "1638:     {file = \"orjson-3.10.4-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:3bf8e6e3388a2e83a86466c912387e0f0a765494c65caa7e865f99969b76ba0d\"},",
          "1639:     {file = \"orjson-3.10.4-cp38-none-win32.whl\", hash = \"sha256:c5a1cca6a4a3129db3da68a25dc0a459a62ae58e284e363b35ab304202d9ba9e\"},",
          "1640:     {file = \"orjson-3.10.4-cp38-none-win_amd64.whl\", hash = \"sha256:ecd97d98d7bee3e3d51d0b51c92c457f05db4993329eea7c69764f9820e27eb3\"},",
          "1641:     {file = \"orjson-3.10.4-cp39-cp39-macosx_10_15_x86_64.macosx_11_0_arm64.macosx_10_15_universal2.whl\", hash = \"sha256:71362daa330a2fc85553a1469185ac448547392a8f83d34e67779f8df3a52743\"},",
          "1642:     {file = \"orjson-3.10.4-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d24b59d1fecb0fd080c177306118a143f7322335309640c55ed9580d2044e363\"},",
          "1643:     {file = \"orjson-3.10.4-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:e906670aea5a605b083ebb58d575c35e88cf880fa372f7cedaac3d51e98ff164\"},",
          "1644:     {file = \"orjson-3.10.4-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:7ce32ed4bc4d632268e4978e595fe5ea07e026b751482b4a0feec48f66a90abc\"},",
          "1645:     {file = \"orjson-3.10.4-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:1dcd34286246e0c5edd0e230d1da2daab2c1b465fcb6bac85b8d44057229d40a\"},",
          "1646:     {file = \"orjson-3.10.4-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:c45d4b8c403e50beedb1d006a8916d9910ed56bceaf2035dc253618b44d0a161\"},",
          "1647:     {file = \"orjson-3.10.4-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:aaed3253041b5002a4f5bfdf6f7b5cce657d974472b0699a469d439beba40381\"},",
          "1648:     {file = \"orjson-3.10.4-cp39-none-win32.whl\", hash = \"sha256:9a4f41b7dbf7896f8dbf559b9b43dcd99e31e0d49ac1b59d74f52ce51ab10eb9\"},",
          "1649:     {file = \"orjson-3.10.4-cp39-none-win_amd64.whl\", hash = \"sha256:6c4eb7d867ed91cb61e6514cb4f457aa01d7b0fd663089df60a69f3d38b69d4c\"},",
          "1650:     {file = \"orjson-3.10.4.tar.gz\", hash = \"sha256:c912ed25b787c73fe994a5decd81c3f3b256599b8a87d410d799d5d52013af2a\"},",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1663: [[package]]",
          "1664: name = \"packaging\"",
          "1666: description = \"Core utilities for Python packages\"",
          "1667: optional = false",
          "1669: files = [",
          "1672: ]",
          "1674: [[package]]",
          "",
          "[Removed Lines]",
          "1665: version = \"23.2\"",
          "1668: python-versions = \">=3.7\"",
          "1670:     {file = \"packaging-23.2-py3-none-any.whl\", hash = \"sha256:8c491190033a9af7e1d931d0b5dacc2ef47509b34dd0de67ed209b5203fc88c7\"},",
          "1671:     {file = \"packaging-23.2.tar.gz\", hash = \"sha256:048fb0e9405036518eaaf48a55953c750c11e1a1b68e0dd1a9d62ed0c092cfc5\"},",
          "",
          "[Added Lines]",
          "1666: version = \"24.1\"",
          "1669: python-versions = \">=3.8\"",
          "1671:     {file = \"packaging-24.1-py3-none-any.whl\", hash = \"sha256:5b8f2217dbdbd2f7f384c41c628544e6d52f2d0f53c6d0c3ea61aa5d1d7ff124\"},",
          "1672:     {file = \"packaging-24.1.tar.gz\", hash = \"sha256:026ed72c8ed3fcce5bf8950572258698927fd1dbda10a5e981cdf0ac37f4f002\"},",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1781: [[package]]",
          "1782: name = \"prompt-toolkit\"",
          "1784: description = \"Library for building powerful interactive command lines in Python\"",
          "1785: optional = false",
          "1786: python-versions = \">=3.7.0\"",
          "1787: files = [",
          "1790: ]",
          "1792: [package.dependencies]",
          "",
          "[Removed Lines]",
          "1783: version = \"3.0.45\"",
          "1788:     {file = \"prompt_toolkit-3.0.45-py3-none-any.whl\", hash = \"sha256:a29b89160e494e3ea8622b09fa5897610b437884dcdcd054fdc1308883326c2a\"},",
          "1789:     {file = \"prompt_toolkit-3.0.45.tar.gz\", hash = \"sha256:07c60ee4ab7b7e90824b61afa840c8f5aad2d46b3e2e10acc33d8ecc94a49089\"},",
          "",
          "[Added Lines]",
          "1784: version = \"3.0.47\"",
          "1789:     {file = \"prompt_toolkit-3.0.47-py3-none-any.whl\", hash = \"sha256:0d7bfa67001d5e39d02c224b663abc33687405033a8c422d0d675a5a13361d10\"},",
          "1790:     {file = \"prompt_toolkit-3.0.47.tar.gz\", hash = \"sha256:1e1b29cb58080b1e69f207c893a1a7bf16d127a5c30c9d17a25a5d77792e5360\"},",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1859: [[package]]",
          "1860: name = \"pydantic\"",
          "1862: description = \"Data validation using Python type hints\"",
          "1863: optional = false",
          "1864: python-versions = \">=3.8\"",
          "1865: files = [",
          "1868: ]",
          "1870: [package.dependencies]",
          "1871: annotated-types = \">=0.4.0\"",
          "1873: typing-extensions = \">=4.6.1\"",
          "1875: [package.extras]",
          "",
          "[Removed Lines]",
          "1861: version = \"2.7.2\"",
          "1866:     {file = \"pydantic-2.7.2-py3-none-any.whl\", hash = \"sha256:834ab954175f94e6e68258537dc49402c4a5e9d0409b9f1b86b7e934a8372de7\"},",
          "1867:     {file = \"pydantic-2.7.2.tar.gz\", hash = \"sha256:71b2945998f9c9b7919a45bde9a50397b289937d215ae141c1d0903ba7149fd7\"},",
          "1872: pydantic-core = \"2.18.3\"",
          "",
          "[Added Lines]",
          "1862: version = \"2.7.4\"",
          "1867:     {file = \"pydantic-2.7.4-py3-none-any.whl\", hash = \"sha256:ee8538d41ccb9c0a9ad3e0e5f07bf15ed8015b481ced539a1759d8cc89ae90d0\"},",
          "1868:     {file = \"pydantic-2.7.4.tar.gz\", hash = \"sha256:0c84efd9548d545f63ac0060c1e4d39bb9b14db8b3c0652338aecc07b5adec52\"},",
          "1873: pydantic-core = \"2.18.4\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1878: [[package]]",
          "1879: name = \"pydantic-core\"",
          "1881: description = \"Core functionality for Pydantic validation and serialization\"",
          "1882: optional = false",
          "1883: python-versions = \">=3.8\"",
          "1884: files = [",
          "1964: ]",
          "1966: [package.dependencies]",
          "",
          "[Removed Lines]",
          "1880: version = \"2.18.3\"",
          "1885:     {file = \"pydantic_core-2.18.3-cp310-cp310-macosx_10_12_x86_64.whl\", hash = \"sha256:744697428fcdec6be5670460b578161d1ffe34743a5c15656be7ea82b008197c\"},",
          "1886:     {file = \"pydantic_core-2.18.3-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:37b40c05ced1ba4218b14986fe6f283d22e1ae2ff4c8e28881a70fb81fbfcda7\"},",
          "1887:     {file = \"pydantic_core-2.18.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:544a9a75622357076efb6b311983ff190fbfb3c12fc3a853122b34d3d358126c\"},",
          "1888:     {file = \"pydantic_core-2.18.3-cp310-cp310-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:e2e253af04ceaebde8eb201eb3f3e3e7e390f2d275a88300d6a1959d710539e2\"},",
          "1889:     {file = \"pydantic_core-2.18.3-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:855ec66589c68aa367d989da5c4755bb74ee92ccad4fdb6af942c3612c067e34\"},",
          "1890:     {file = \"pydantic_core-2.18.3-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:3d3e42bb54e7e9d72c13ce112e02eb1b3b55681ee948d748842171201a03a98a\"},",
          "1891:     {file = \"pydantic_core-2.18.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:c6ac9ffccc9d2e69d9fba841441d4259cb668ac180e51b30d3632cd7abca2b9b\"},",
          "1892:     {file = \"pydantic_core-2.18.3-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:c56eca1686539fa0c9bda992e7bd6a37583f20083c37590413381acfc5f192d6\"},",
          "1893:     {file = \"pydantic_core-2.18.3-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:17954d784bf8abfc0ec2a633108207ebc4fa2df1a0e4c0c3ccbaa9bb01d2c426\"},",
          "1894:     {file = \"pydantic_core-2.18.3-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:98ed737567d8f2ecd54f7c8d4f8572ca7c7921ede93a2e52939416170d357812\"},",
          "1895:     {file = \"pydantic_core-2.18.3-cp310-none-win32.whl\", hash = \"sha256:9f9e04afebd3ed8c15d67a564ed0a34b54e52136c6d40d14c5547b238390e779\"},",
          "1896:     {file = \"pydantic_core-2.18.3-cp310-none-win_amd64.whl\", hash = \"sha256:45e4ffbae34f7ae30d0047697e724e534a7ec0a82ef9994b7913a412c21462a0\"},",
          "1897:     {file = \"pydantic_core-2.18.3-cp311-cp311-macosx_10_12_x86_64.whl\", hash = \"sha256:b9ebe8231726c49518b16b237b9fe0d7d361dd221302af511a83d4ada01183ab\"},",
          "1898:     {file = \"pydantic_core-2.18.3-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:b8e20e15d18bf7dbb453be78a2d858f946f5cdf06c5072453dace00ab652e2b2\"},",
          "1899:     {file = \"pydantic_core-2.18.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c0d9ff283cd3459fa0bf9b0256a2b6f01ac1ff9ffb034e24457b9035f75587cb\"},",
          "1900:     {file = \"pydantic_core-2.18.3-cp311-cp311-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:2f7ef5f0ebb77ba24c9970da18b771711edc5feaf00c10b18461e0f5f5949231\"},",
          "1901:     {file = \"pydantic_core-2.18.3-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:73038d66614d2e5cde30435b5afdced2b473b4c77d4ca3a8624dd3e41a9c19be\"},",
          "1902:     {file = \"pydantic_core-2.18.3-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:6afd5c867a74c4d314c557b5ea9520183fadfbd1df4c2d6e09fd0d990ce412cd\"},",
          "1903:     {file = \"pydantic_core-2.18.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:bd7df92f28d351bb9f12470f4c533cf03d1b52ec5a6e5c58c65b183055a60106\"},",
          "1904:     {file = \"pydantic_core-2.18.3-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:80aea0ffeb1049336043d07799eace1c9602519fb3192916ff525b0287b2b1e4\"},",
          "1905:     {file = \"pydantic_core-2.18.3-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:aaee40f25bba38132e655ffa3d1998a6d576ba7cf81deff8bfa189fb43fd2bbe\"},",
          "1906:     {file = \"pydantic_core-2.18.3-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:9128089da8f4fe73f7a91973895ebf2502539d627891a14034e45fb9e707e26d\"},",
          "1907:     {file = \"pydantic_core-2.18.3-cp311-none-win32.whl\", hash = \"sha256:fec02527e1e03257aa25b1a4dcbe697b40a22f1229f5d026503e8b7ff6d2eda7\"},",
          "1908:     {file = \"pydantic_core-2.18.3-cp311-none-win_amd64.whl\", hash = \"sha256:58ff8631dbab6c7c982e6425da8347108449321f61fe427c52ddfadd66642af7\"},",
          "1909:     {file = \"pydantic_core-2.18.3-cp311-none-win_arm64.whl\", hash = \"sha256:3fc1c7f67f34c6c2ef9c213e0f2a351797cda98249d9ca56a70ce4ebcaba45f4\"},",
          "1910:     {file = \"pydantic_core-2.18.3-cp312-cp312-macosx_10_12_x86_64.whl\", hash = \"sha256:f0928cde2ae416a2d1ebe6dee324709c6f73e93494d8c7aea92df99aab1fc40f\"},",
          "1911:     {file = \"pydantic_core-2.18.3-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:0bee9bb305a562f8b9271855afb6ce00223f545de3d68560b3c1649c7c5295e9\"},",
          "1912:     {file = \"pydantic_core-2.18.3-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e862823be114387257dacbfa7d78547165a85d7add33b446ca4f4fae92c7ff5c\"},",
          "1913:     {file = \"pydantic_core-2.18.3-cp312-cp312-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:6a36f78674cbddc165abab0df961b5f96b14461d05feec5e1f78da58808b97e7\"},",
          "1914:     {file = \"pydantic_core-2.18.3-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:ba905d184f62e7ddbb7a5a751d8a5c805463511c7b08d1aca4a3e8c11f2e5048\"},",
          "1915:     {file = \"pydantic_core-2.18.3-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:7fdd362f6a586e681ff86550b2379e532fee63c52def1c666887956748eaa326\"},",
          "1916:     {file = \"pydantic_core-2.18.3-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:24b214b7ee3bd3b865e963dbed0f8bc5375f49449d70e8d407b567af3222aae4\"},",
          "1917:     {file = \"pydantic_core-2.18.3-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:691018785779766127f531674fa82bb368df5b36b461622b12e176c18e119022\"},",
          "1918:     {file = \"pydantic_core-2.18.3-cp312-cp312-musllinux_1_1_aarch64.whl\", hash = \"sha256:60e4c625e6f7155d7d0dcac151edf5858102bc61bf959d04469ca6ee4e8381bd\"},",
          "1919:     {file = \"pydantic_core-2.18.3-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:a4e651e47d981c1b701dcc74ab8fec5a60a5b004650416b4abbef13db23bc7be\"},",
          "1920:     {file = \"pydantic_core-2.18.3-cp312-none-win32.whl\", hash = \"sha256:ffecbb5edb7f5ffae13599aec33b735e9e4c7676ca1633c60f2c606beb17efc5\"},",
          "1921:     {file = \"pydantic_core-2.18.3-cp312-none-win_amd64.whl\", hash = \"sha256:2c8333f6e934733483c7eddffdb094c143b9463d2af7e6bd85ebcb2d4a1b82c6\"},",
          "1922:     {file = \"pydantic_core-2.18.3-cp312-none-win_arm64.whl\", hash = \"sha256:7a20dded653e516a4655f4c98e97ccafb13753987434fe7cf044aa25f5b7d417\"},",
          "1923:     {file = \"pydantic_core-2.18.3-cp38-cp38-macosx_10_12_x86_64.whl\", hash = \"sha256:eecf63195be644b0396f972c82598cd15693550f0ff236dcf7ab92e2eb6d3522\"},",
          "1924:     {file = \"pydantic_core-2.18.3-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:2c44efdd3b6125419c28821590d7ec891c9cb0dff33a7a78d9d5c8b6f66b9702\"},",
          "1925:     {file = \"pydantic_core-2.18.3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:6e59fca51ffbdd1638b3856779342ed69bcecb8484c1d4b8bdb237d0eb5a45e2\"},",
          "1926:     {file = \"pydantic_core-2.18.3-cp38-cp38-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:70cf099197d6b98953468461d753563b28e73cf1eade2ffe069675d2657ed1d5\"},",
          "1927:     {file = \"pydantic_core-2.18.3-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:63081a49dddc6124754b32a3774331467bfc3d2bd5ff8f10df36a95602560361\"},",
          "1928:     {file = \"pydantic_core-2.18.3-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:370059b7883485c9edb9655355ff46d912f4b03b009d929220d9294c7fd9fd60\"},",
          "1929:     {file = \"pydantic_core-2.18.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:5a64faeedfd8254f05f5cf6fc755023a7e1606af3959cfc1a9285744cc711044\"},",
          "1930:     {file = \"pydantic_core-2.18.3-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:19d2e725de0f90d8671f89e420d36c3dd97639b98145e42fcc0e1f6d492a46dc\"},",
          "1931:     {file = \"pydantic_core-2.18.3-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:67bc078025d70ec5aefe6200ef094576c9d86bd36982df1301c758a9fff7d7f4\"},",
          "1932:     {file = \"pydantic_core-2.18.3-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:adf952c3f4100e203cbaf8e0c907c835d3e28f9041474e52b651761dc248a3c0\"},",
          "1933:     {file = \"pydantic_core-2.18.3-cp38-none-win32.whl\", hash = \"sha256:9a46795b1f3beb167eaee91736d5d17ac3a994bf2215a996aed825a45f897558\"},",
          "1934:     {file = \"pydantic_core-2.18.3-cp38-none-win_amd64.whl\", hash = \"sha256:200ad4e3133cb99ed82342a101a5abf3d924722e71cd581cc113fe828f727fbc\"},",
          "1935:     {file = \"pydantic_core-2.18.3-cp39-cp39-macosx_10_12_x86_64.whl\", hash = \"sha256:304378b7bf92206036c8ddd83a2ba7b7d1a5b425acafff637172a3aa72ad7083\"},",
          "1936:     {file = \"pydantic_core-2.18.3-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:c826870b277143e701c9ccf34ebc33ddb4d072612683a044e7cce2d52f6c3fef\"},",
          "1937:     {file = \"pydantic_core-2.18.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e201935d282707394f3668380e41ccf25b5794d1b131cdd96b07f615a33ca4b1\"},",
          "1938:     {file = \"pydantic_core-2.18.3-cp39-cp39-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:5560dda746c44b48bf82b3d191d74fe8efc5686a9ef18e69bdabccbbb9ad9442\"},",
          "1939:     {file = \"pydantic_core-2.18.3-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:6b32c2a1f8032570842257e4c19288eba9a2bba4712af542327de9a1204faff8\"},",
          "1940:     {file = \"pydantic_core-2.18.3-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:929c24e9dea3990bc8bcd27c5f2d3916c0c86f5511d2caa69e0d5290115344a9\"},",
          "1941:     {file = \"pydantic_core-2.18.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e1a8376fef60790152564b0eab376b3e23dd6e54f29d84aad46f7b264ecca943\"},",
          "1942:     {file = \"pydantic_core-2.18.3-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:dccf3ef1400390ddd1fb55bf0632209d39140552d068ee5ac45553b556780e06\"},",
          "1943:     {file = \"pydantic_core-2.18.3-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:41dbdcb0c7252b58fa931fec47937edb422c9cb22528f41cb8963665c372caf6\"},",
          "1944:     {file = \"pydantic_core-2.18.3-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:666e45cf071669fde468886654742fa10b0e74cd0fa0430a46ba6056b24fb0af\"},",
          "1945:     {file = \"pydantic_core-2.18.3-cp39-none-win32.whl\", hash = \"sha256:f9c08cabff68704a1b4667d33f534d544b8a07b8e5d039c37067fceb18789e78\"},",
          "1946:     {file = \"pydantic_core-2.18.3-cp39-none-win_amd64.whl\", hash = \"sha256:4afa5f5973e8572b5c0dcb4e2d4fda7890e7cd63329bd5cc3263a25c92ef0026\"},",
          "1947:     {file = \"pydantic_core-2.18.3-pp310-pypy310_pp73-macosx_10_12_x86_64.whl\", hash = \"sha256:77319771a026f7c7d29c6ebc623de889e9563b7087911b46fd06c044a12aa5e9\"},",
          "1948:     {file = \"pydantic_core-2.18.3-pp310-pypy310_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:df11fa992e9f576473038510d66dd305bcd51d7dd508c163a8c8fe148454e059\"},",
          "1949:     {file = \"pydantic_core-2.18.3-pp310-pypy310_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d531076bdfb65af593326ffd567e6ab3da145020dafb9187a1d131064a55f97c\"},",
          "1950:     {file = \"pydantic_core-2.18.3-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d33ce258e4e6e6038f2b9e8b8a631d17d017567db43483314993b3ca345dcbbb\"},",
          "1951:     {file = \"pydantic_core-2.18.3-pp310-pypy310_pp73-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:1f9cd7f5635b719939019be9bda47ecb56e165e51dd26c9a217a433e3d0d59a9\"},",
          "1952:     {file = \"pydantic_core-2.18.3-pp310-pypy310_pp73-musllinux_1_1_aarch64.whl\", hash = \"sha256:cd4a032bb65cc132cae1fe3e52877daecc2097965cd3914e44fbd12b00dae7c5\"},",
          "1953:     {file = \"pydantic_core-2.18.3-pp310-pypy310_pp73-musllinux_1_1_x86_64.whl\", hash = \"sha256:82f2718430098bcdf60402136c845e4126a189959d103900ebabb6774a5d9fdb\"},",
          "1954:     {file = \"pydantic_core-2.18.3-pp310-pypy310_pp73-win_amd64.whl\", hash = \"sha256:c0037a92cf0c580ed14e10953cdd26528e8796307bb8bb312dc65f71547df04d\"},",
          "1955:     {file = \"pydantic_core-2.18.3-pp39-pypy39_pp73-macosx_10_12_x86_64.whl\", hash = \"sha256:b95a0972fac2b1ff3c94629fc9081b16371dad870959f1408cc33b2f78ad347a\"},",
          "1956:     {file = \"pydantic_core-2.18.3-pp39-pypy39_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:a62e437d687cc148381bdd5f51e3e81f5b20a735c55f690c5be94e05da2b0d5c\"},",
          "1957:     {file = \"pydantic_core-2.18.3-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:b367a73a414bbb08507da102dc2cde0fa7afe57d09b3240ce82a16d608a7679c\"},",
          "1958:     {file = \"pydantic_core-2.18.3-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0ecce4b2360aa3f008da3327d652e74a0e743908eac306198b47e1c58b03dd2b\"},",
          "1959:     {file = \"pydantic_core-2.18.3-pp39-pypy39_pp73-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:bd4435b8d83f0c9561a2a9585b1de78f1abb17cb0cef5f39bf6a4b47d19bafe3\"},",
          "1960:     {file = \"pydantic_core-2.18.3-pp39-pypy39_pp73-musllinux_1_1_aarch64.whl\", hash = \"sha256:616221a6d473c5b9aa83fa8982745441f6a4a62a66436be9445c65f241b86c94\"},",
          "1961:     {file = \"pydantic_core-2.18.3-pp39-pypy39_pp73-musllinux_1_1_x86_64.whl\", hash = \"sha256:7e6382ce89a92bc1d0c0c5edd51e931432202b9080dc921d8d003e616402efd1\"},",
          "1962:     {file = \"pydantic_core-2.18.3-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:ff58f379345603d940e461eae474b6bbb6dab66ed9a851ecd3cb3709bf4dcf6a\"},",
          "1963:     {file = \"pydantic_core-2.18.3.tar.gz\", hash = \"sha256:432e999088d85c8f36b9a3f769a8e2b57aabd817bbb729a90d1fe7f18f6f1f39\"},",
          "",
          "[Added Lines]",
          "1881: version = \"2.18.4\"",
          "1886:     {file = \"pydantic_core-2.18.4-cp310-cp310-macosx_10_12_x86_64.whl\", hash = \"sha256:f76d0ad001edd426b92233d45c746fd08f467d56100fd8f30e9ace4b005266e4\"},",
          "1887:     {file = \"pydantic_core-2.18.4-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:59ff3e89f4eaf14050c8022011862df275b552caef8082e37b542b066ce1ff26\"},",
          "1888:     {file = \"pydantic_core-2.18.4-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a55b5b16c839df1070bc113c1f7f94a0af4433fcfa1b41799ce7606e5c79ce0a\"},",
          "1889:     {file = \"pydantic_core-2.18.4-cp310-cp310-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:4d0dcc59664fcb8974b356fe0a18a672d6d7cf9f54746c05f43275fc48636851\"},",
          "1890:     {file = \"pydantic_core-2.18.4-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:8951eee36c57cd128f779e641e21eb40bc5073eb28b2d23f33eb0ef14ffb3f5d\"},",
          "1891:     {file = \"pydantic_core-2.18.4-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:4701b19f7e3a06ea655513f7938de6f108123bf7c86bbebb1196eb9bd35cf724\"},",
          "1892:     {file = \"pydantic_core-2.18.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e00a3f196329e08e43d99b79b286d60ce46bed10f2280d25a1718399457e06be\"},",
          "1893:     {file = \"pydantic_core-2.18.4-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:97736815b9cc893b2b7f663628e63f436018b75f44854c8027040e05230eeddb\"},",
          "1894:     {file = \"pydantic_core-2.18.4-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:6891a2ae0e8692679c07728819b6e2b822fb30ca7445f67bbf6509b25a96332c\"},",
          "1895:     {file = \"pydantic_core-2.18.4-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:bc4ff9805858bd54d1a20efff925ccd89c9d2e7cf4986144b30802bf78091c3e\"},",
          "1896:     {file = \"pydantic_core-2.18.4-cp310-none-win32.whl\", hash = \"sha256:1b4de2e51bbcb61fdebd0ab86ef28062704f62c82bbf4addc4e37fa4b00b7cbc\"},",
          "1897:     {file = \"pydantic_core-2.18.4-cp310-none-win_amd64.whl\", hash = \"sha256:6a750aec7bf431517a9fd78cb93c97b9b0c496090fee84a47a0d23668976b4b0\"},",
          "1898:     {file = \"pydantic_core-2.18.4-cp311-cp311-macosx_10_12_x86_64.whl\", hash = \"sha256:942ba11e7dfb66dc70f9ae66b33452f51ac7bb90676da39a7345e99ffb55402d\"},",
          "1899:     {file = \"pydantic_core-2.18.4-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:b2ebef0e0b4454320274f5e83a41844c63438fdc874ea40a8b5b4ecb7693f1c4\"},",
          "1900:     {file = \"pydantic_core-2.18.4-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a642295cd0c8df1b86fc3dced1d067874c353a188dc8e0f744626d49e9aa51c4\"},",
          "1901:     {file = \"pydantic_core-2.18.4-cp311-cp311-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:5f09baa656c904807e832cf9cce799c6460c450c4ad80803517032da0cd062e2\"},",
          "1902:     {file = \"pydantic_core-2.18.4-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:98906207f29bc2c459ff64fa007afd10a8c8ac080f7e4d5beff4c97086a3dabd\"},",
          "1903:     {file = \"pydantic_core-2.18.4-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:19894b95aacfa98e7cb093cd7881a0c76f55731efad31073db4521e2b6ff5b7d\"},",
          "1904:     {file = \"pydantic_core-2.18.4-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0fbbdc827fe5e42e4d196c746b890b3d72876bdbf160b0eafe9f0334525119c8\"},",
          "1905:     {file = \"pydantic_core-2.18.4-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:f85d05aa0918283cf29a30b547b4df2fbb56b45b135f9e35b6807cb28bc47951\"},",
          "1906:     {file = \"pydantic_core-2.18.4-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:e85637bc8fe81ddb73fda9e56bab24560bdddfa98aa64f87aaa4e4b6730c23d2\"},",
          "1907:     {file = \"pydantic_core-2.18.4-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:2f5966897e5461f818e136b8451d0551a2e77259eb0f73a837027b47dc95dab9\"},",
          "1908:     {file = \"pydantic_core-2.18.4-cp311-none-win32.whl\", hash = \"sha256:44c7486a4228413c317952e9d89598bcdfb06399735e49e0f8df643e1ccd0558\"},",
          "1909:     {file = \"pydantic_core-2.18.4-cp311-none-win_amd64.whl\", hash = \"sha256:8a7164fe2005d03c64fd3b85649891cd4953a8de53107940bf272500ba8a788b\"},",
          "1910:     {file = \"pydantic_core-2.18.4-cp311-none-win_arm64.whl\", hash = \"sha256:4e99bc050fe65c450344421017f98298a97cefc18c53bb2f7b3531eb39bc7805\"},",
          "1911:     {file = \"pydantic_core-2.18.4-cp312-cp312-macosx_10_12_x86_64.whl\", hash = \"sha256:6f5c4d41b2771c730ea1c34e458e781b18cc668d194958e0112455fff4e402b2\"},",
          "1912:     {file = \"pydantic_core-2.18.4-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:2fdf2156aa3d017fddf8aea5adfba9f777db1d6022d392b682d2a8329e087cef\"},",
          "1913:     {file = \"pydantic_core-2.18.4-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:4748321b5078216070b151d5271ef3e7cc905ab170bbfd27d5c83ee3ec436695\"},",
          "1914:     {file = \"pydantic_core-2.18.4-cp312-cp312-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:847a35c4d58721c5dc3dba599878ebbdfd96784f3fb8bb2c356e123bdcd73f34\"},",
          "1915:     {file = \"pydantic_core-2.18.4-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:3c40d4eaad41f78e3bbda31b89edc46a3f3dc6e171bf0ecf097ff7a0ffff7cb1\"},",
          "1916:     {file = \"pydantic_core-2.18.4-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:21a5e440dbe315ab9825fcd459b8814bb92b27c974cbc23c3e8baa2b76890077\"},",
          "1917:     {file = \"pydantic_core-2.18.4-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:01dd777215e2aa86dfd664daed5957704b769e726626393438f9c87690ce78c3\"},",
          "1918:     {file = \"pydantic_core-2.18.4-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:4b06beb3b3f1479d32befd1f3079cc47b34fa2da62457cdf6c963393340b56e9\"},",
          "1919:     {file = \"pydantic_core-2.18.4-cp312-cp312-musllinux_1_1_aarch64.whl\", hash = \"sha256:564d7922e4b13a16b98772441879fcdcbe82ff50daa622d681dd682175ea918c\"},",
          "1920:     {file = \"pydantic_core-2.18.4-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:0eb2a4f660fcd8e2b1c90ad566db2b98d7f3f4717c64fe0a83e0adb39766d5b8\"},",
          "1921:     {file = \"pydantic_core-2.18.4-cp312-none-win32.whl\", hash = \"sha256:8b8bab4c97248095ae0c4455b5a1cd1cdd96e4e4769306ab19dda135ea4cdb07\"},",
          "1922:     {file = \"pydantic_core-2.18.4-cp312-none-win_amd64.whl\", hash = \"sha256:14601cdb733d741b8958224030e2bfe21a4a881fb3dd6fbb21f071cabd48fa0a\"},",
          "1923:     {file = \"pydantic_core-2.18.4-cp312-none-win_arm64.whl\", hash = \"sha256:c1322d7dd74713dcc157a2b7898a564ab091ca6c58302d5c7b4c07296e3fd00f\"},",
          "1924:     {file = \"pydantic_core-2.18.4-cp38-cp38-macosx_10_12_x86_64.whl\", hash = \"sha256:823be1deb01793da05ecb0484d6c9e20baebb39bd42b5d72636ae9cf8350dbd2\"},",
          "1925:     {file = \"pydantic_core-2.18.4-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:ebef0dd9bf9b812bf75bda96743f2a6c5734a02092ae7f721c048d156d5fabae\"},",
          "1926:     {file = \"pydantic_core-2.18.4-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ae1d6df168efb88d7d522664693607b80b4080be6750c913eefb77e34c12c71a\"},",
          "1927:     {file = \"pydantic_core-2.18.4-cp38-cp38-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:f9899c94762343f2cc2fc64c13e7cae4c3cc65cdfc87dd810a31654c9b7358cc\"},",
          "1928:     {file = \"pydantic_core-2.18.4-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:99457f184ad90235cfe8461c4d70ab7dd2680e28821c29eca00252ba90308c78\"},",
          "1929:     {file = \"pydantic_core-2.18.4-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:18f469a3d2a2fdafe99296a87e8a4c37748b5080a26b806a707f25a902c040a8\"},",
          "1930:     {file = \"pydantic_core-2.18.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:b7cdf28938ac6b8b49ae5e92f2735056a7ba99c9b110a474473fd71185c1af5d\"},",
          "1931:     {file = \"pydantic_core-2.18.4-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:938cb21650855054dc54dfd9120a851c974f95450f00683399006aa6e8abb057\"},",
          "1932:     {file = \"pydantic_core-2.18.4-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:44cd83ab6a51da80fb5adbd9560e26018e2ac7826f9626bc06ca3dc074cd198b\"},",
          "1933:     {file = \"pydantic_core-2.18.4-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:972658f4a72d02b8abfa2581d92d59f59897d2e9f7e708fdabe922f9087773af\"},",
          "1934:     {file = \"pydantic_core-2.18.4-cp38-none-win32.whl\", hash = \"sha256:1d886dc848e60cb7666f771e406acae54ab279b9f1e4143babc9c2258213daa2\"},",
          "1935:     {file = \"pydantic_core-2.18.4-cp38-none-win_amd64.whl\", hash = \"sha256:bb4462bd43c2460774914b8525f79b00f8f407c945d50881568f294c1d9b4443\"},",
          "1936:     {file = \"pydantic_core-2.18.4-cp39-cp39-macosx_10_12_x86_64.whl\", hash = \"sha256:44a688331d4a4e2129140a8118479443bd6f1905231138971372fcde37e43528\"},",
          "1937:     {file = \"pydantic_core-2.18.4-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:a2fdd81edd64342c85ac7cf2753ccae0b79bf2dfa063785503cb85a7d3593223\"},",
          "1938:     {file = \"pydantic_core-2.18.4-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:86110d7e1907ab36691f80b33eb2da87d780f4739ae773e5fc83fb272f88825f\"},",
          "1939:     {file = \"pydantic_core-2.18.4-cp39-cp39-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:46387e38bd641b3ee5ce247563b60c5ca098da9c56c75c157a05eaa0933ed154\"},",
          "1940:     {file = \"pydantic_core-2.18.4-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:123c3cec203e3f5ac7b000bd82235f1a3eced8665b63d18be751f115588fea30\"},",
          "1941:     {file = \"pydantic_core-2.18.4-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:dc1803ac5c32ec324c5261c7209e8f8ce88e83254c4e1aebdc8b0a39f9ddb443\"},",
          "1942:     {file = \"pydantic_core-2.18.4-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:53db086f9f6ab2b4061958d9c276d1dbe3690e8dd727d6abf2321d6cce37fa94\"},",
          "1943:     {file = \"pydantic_core-2.18.4-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:abc267fa9837245cc28ea6929f19fa335f3dc330a35d2e45509b6566dc18be23\"},",
          "1944:     {file = \"pydantic_core-2.18.4-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:a0d829524aaefdebccb869eed855e2d04c21d2d7479b6cada7ace5448416597b\"},",
          "1945:     {file = \"pydantic_core-2.18.4-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:509daade3b8649f80d4e5ff21aa5673e4ebe58590b25fe42fac5f0f52c6f034a\"},",
          "1946:     {file = \"pydantic_core-2.18.4-cp39-none-win32.whl\", hash = \"sha256:ca26a1e73c48cfc54c4a76ff78df3727b9d9f4ccc8dbee4ae3f73306a591676d\"},",
          "1947:     {file = \"pydantic_core-2.18.4-cp39-none-win_amd64.whl\", hash = \"sha256:c67598100338d5d985db1b3d21f3619ef392e185e71b8d52bceacc4a7771ea7e\"},",
          "1948:     {file = \"pydantic_core-2.18.4-pp310-pypy310_pp73-macosx_10_12_x86_64.whl\", hash = \"sha256:574d92eac874f7f4db0ca653514d823a0d22e2354359d0759e3f6a406db5d55d\"},",
          "1949:     {file = \"pydantic_core-2.18.4-pp310-pypy310_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:1f4d26ceb5eb9eed4af91bebeae4b06c3fb28966ca3a8fb765208cf6b51102ab\"},",
          "1950:     {file = \"pydantic_core-2.18.4-pp310-pypy310_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:77450e6d20016ec41f43ca4a6c63e9fdde03f0ae3fe90e7c27bdbeaece8b1ed4\"},",
          "1951:     {file = \"pydantic_core-2.18.4-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d323a01da91851a4f17bf592faf46149c9169d68430b3146dcba2bb5e5719abc\"},",
          "1952:     {file = \"pydantic_core-2.18.4-pp310-pypy310_pp73-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:43d447dd2ae072a0065389092a231283f62d960030ecd27565672bd40746c507\"},",
          "1953:     {file = \"pydantic_core-2.18.4-pp310-pypy310_pp73-musllinux_1_1_aarch64.whl\", hash = \"sha256:578e24f761f3b425834f297b9935e1ce2e30f51400964ce4801002435a1b41ef\"},",
          "1954:     {file = \"pydantic_core-2.18.4-pp310-pypy310_pp73-musllinux_1_1_x86_64.whl\", hash = \"sha256:81b5efb2f126454586d0f40c4d834010979cb80785173d1586df845a632e4e6d\"},",
          "1955:     {file = \"pydantic_core-2.18.4-pp310-pypy310_pp73-win_amd64.whl\", hash = \"sha256:ab86ce7c8f9bea87b9d12c7f0af71102acbf5ecbc66c17796cff45dae54ef9a5\"},",
          "1956:     {file = \"pydantic_core-2.18.4-pp39-pypy39_pp73-macosx_10_12_x86_64.whl\", hash = \"sha256:90afc12421df2b1b4dcc975f814e21bc1754640d502a2fbcc6d41e77af5ec312\"},",
          "1957:     {file = \"pydantic_core-2.18.4-pp39-pypy39_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:51991a89639a912c17bef4b45c87bd83593aee0437d8102556af4885811d59f5\"},",
          "1958:     {file = \"pydantic_core-2.18.4-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:293afe532740370aba8c060882f7d26cfd00c94cae32fd2e212a3a6e3b7bc15e\"},",
          "1959:     {file = \"pydantic_core-2.18.4-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:b48ece5bde2e768197a2d0f6e925f9d7e3e826f0ad2271120f8144a9db18d5c8\"},",
          "1960:     {file = \"pydantic_core-2.18.4-pp39-pypy39_pp73-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:eae237477a873ab46e8dd748e515c72c0c804fb380fbe6c85533c7de51f23a8f\"},",
          "1961:     {file = \"pydantic_core-2.18.4-pp39-pypy39_pp73-musllinux_1_1_aarch64.whl\", hash = \"sha256:834b5230b5dfc0c1ec37b2fda433b271cbbc0e507560b5d1588e2cc1148cf1ce\"},",
          "1962:     {file = \"pydantic_core-2.18.4-pp39-pypy39_pp73-musllinux_1_1_x86_64.whl\", hash = \"sha256:e858ac0a25074ba4bce653f9b5d0a85b7456eaddadc0ce82d3878c22489fa4ee\"},",
          "1963:     {file = \"pydantic_core-2.18.4-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:2fd41f6eff4c20778d717af1cc50eca52f5afe7805ee530a4fbd0bae284f16e9\"},",
          "1964:     {file = \"pydantic_core-2.18.4.tar.gz\", hash = \"sha256:ec3beeada09ff865c344ff3bc2f427f5e6c26401cc6113d77e372c3fdac73864\"},",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2184:     {file = \"PyYAML-6.0.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:bf07ee2fef7014951eeb99f56f39c9bb4af143d8aa3c21b1677805985307da34\"},",
          "2185:     {file = \"PyYAML-6.0.1-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:855fb52b0dc35af121542a76b9a84f8d1cd886ea97c84703eaa6d88e37a2ad28\"},",
          "2186:     {file = \"PyYAML-6.0.1-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:40df9b996c2b73138957fe23a16a4f0ba614f4c0efce1e9406a184b6d07fa3a9\"},",
          "2187:     {file = \"PyYAML-6.0.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6c22bec3fbe2524cde73d7ada88f6566758a8f7227bfbf93a408a9d86bcc12a0\"},",
          "2188:     {file = \"PyYAML-6.0.1-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:8d4e9c88387b0f5c7d5f281e55304de64cf7f9c0021a3525bd3b1c542da3b0e4\"},",
          "2189:     {file = \"PyYAML-6.0.1-cp312-cp312-win32.whl\", hash = \"sha256:d483d2cdf104e7c9fa60c544d92981f12ad66a457afae824d146093b8c294c54\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2188:     {file = \"PyYAML-6.0.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a08c6f0fe150303c1c6b71ebcd7213c2858041a7e01975da3a99aed1e7a378ef\"},",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "2399: [[package]]",
          "2400: name = \"responses\"",
          "2402: description = \"A utility library for mocking out the `requests` Python library.\"",
          "2403: optional = false",
          "2404: python-versions = \">=3.8\"",
          "2405: files = [",
          "2408: ]",
          "2410: [package.dependencies]",
          "",
          "[Removed Lines]",
          "2401: version = \"0.25.0\"",
          "2406:     {file = \"responses-0.25.0-py3-none-any.whl\", hash = \"sha256:2f0b9c2b6437db4b528619a77e5d565e4ec2a9532162ac1a131a83529db7be1a\"},",
          "2407:     {file = \"responses-0.25.0.tar.gz\", hash = \"sha256:01ae6a02b4f34e39bffceb0fc6786b67a25eae919c6368d05eabc8d9576c2a66\"},",
          "",
          "[Added Lines]",
          "2403: version = \"0.25.2\"",
          "2408:     {file = \"responses-0.25.2-py3-none-any.whl\", hash = \"sha256:b59707ea25de536d324670791ab073fafd41f3a351cec9c51cb6147089a9a30a\"},",
          "2409:     {file = \"responses-0.25.2.tar.gz\", hash = \"sha256:77a61ad7e6016ed2ac00739b7efa5f35c42351d5b9b5d26bb1be87f197632487\"},",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2740: [[package]]",
          "2741: name = \"tornado\"",
          "2743: description = \"Tornado is a Python web framework and asynchronous networking library, originally developed at FriendFeed.\"",
          "2744: optional = false",
          "2746: files = [",
          "2758: ]",
          "2760: [[package]]",
          "",
          "[Removed Lines]",
          "2742: version = \"6.4\"",
          "2745: python-versions = \">= 3.8\"",
          "2747:     {file = \"tornado-6.4-cp38-abi3-macosx_10_9_universal2.whl\", hash = \"sha256:02ccefc7d8211e5a7f9e8bc3f9e5b0ad6262ba2fbb683a6443ecc804e5224ce0\"},",
          "2748:     {file = \"tornado-6.4-cp38-abi3-macosx_10_9_x86_64.whl\", hash = \"sha256:27787de946a9cffd63ce5814c33f734c627a87072ec7eed71f7fc4417bb16263\"},",
          "2749:     {file = \"tornado-6.4-cp38-abi3-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f7894c581ecdcf91666a0912f18ce5e757213999e183ebfc2c3fdbf4d5bd764e\"},",
          "2750:     {file = \"tornado-6.4-cp38-abi3-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:e43bc2e5370a6a8e413e1e1cd0c91bedc5bd62a74a532371042a18ef19e10579\"},",
          "2751:     {file = \"tornado-6.4-cp38-abi3-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f0251554cdd50b4b44362f73ad5ba7126fc5b2c2895cc62b14a1c2d7ea32f212\"},",
          "2752:     {file = \"tornado-6.4-cp38-abi3-musllinux_1_1_aarch64.whl\", hash = \"sha256:fd03192e287fbd0899dd8f81c6fb9cbbc69194d2074b38f384cb6fa72b80e9c2\"},",
          "2753:     {file = \"tornado-6.4-cp38-abi3-musllinux_1_1_i686.whl\", hash = \"sha256:88b84956273fbd73420e6d4b8d5ccbe913c65d31351b4c004ae362eba06e1f78\"},",
          "2754:     {file = \"tornado-6.4-cp38-abi3-musllinux_1_1_x86_64.whl\", hash = \"sha256:71ddfc23a0e03ef2df1c1397d859868d158c8276a0603b96cf86892bff58149f\"},",
          "2755:     {file = \"tornado-6.4-cp38-abi3-win32.whl\", hash = \"sha256:6f8a6c77900f5ae93d8b4ae1196472d0ccc2775cc1dfdc9e7727889145c45052\"},",
          "2756:     {file = \"tornado-6.4-cp38-abi3-win_amd64.whl\", hash = \"sha256:10aeaa8006333433da48dec9fe417877f8bcc21f48dda8d661ae79da357b2a63\"},",
          "2757:     {file = \"tornado-6.4.tar.gz\", hash = \"sha256:72291fa6e6bc84e626589f1c29d90a5a6d593ef5ae68052ee2ef000dfd273dee\"},",
          "",
          "[Added Lines]",
          "2744: version = \"6.4.1\"",
          "2747: python-versions = \">=3.8\"",
          "2749:     {file = \"tornado-6.4.1-cp38-abi3-macosx_10_9_universal2.whl\", hash = \"sha256:163b0aafc8e23d8cdc3c9dfb24c5368af84a81e3364745ccb4427669bf84aec8\"},",
          "2750:     {file = \"tornado-6.4.1-cp38-abi3-macosx_10_9_x86_64.whl\", hash = \"sha256:6d5ce3437e18a2b66fbadb183c1d3364fb03f2be71299e7d10dbeeb69f4b2a14\"},",
          "2751:     {file = \"tornado-6.4.1-cp38-abi3-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e2e20b9113cd7293f164dc46fffb13535266e713cdb87bd2d15ddb336e96cfc4\"},",
          "2752:     {file = \"tornado-6.4.1-cp38-abi3-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:8ae50a504a740365267b2a8d1a90c9fbc86b780a39170feca9bcc1787ff80842\"},",
          "2753:     {file = \"tornado-6.4.1-cp38-abi3-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:613bf4ddf5c7a95509218b149b555621497a6cc0d46ac341b30bd9ec19eac7f3\"},",
          "2754:     {file = \"tornado-6.4.1-cp38-abi3-musllinux_1_2_aarch64.whl\", hash = \"sha256:25486eb223babe3eed4b8aecbac33b37e3dd6d776bc730ca14e1bf93888b979f\"},",
          "2755:     {file = \"tornado-6.4.1-cp38-abi3-musllinux_1_2_i686.whl\", hash = \"sha256:454db8a7ecfcf2ff6042dde58404164d969b6f5d58b926da15e6b23817950fc4\"},",
          "2756:     {file = \"tornado-6.4.1-cp38-abi3-musllinux_1_2_x86_64.whl\", hash = \"sha256:a02a08cc7a9314b006f653ce40483b9b3c12cda222d6a46d4ac63bb6c9057698\"},",
          "2757:     {file = \"tornado-6.4.1-cp38-abi3-win32.whl\", hash = \"sha256:d9a566c40b89757c9aa8e6f032bcdb8ca8795d7c1a9762910c722b1635c9de4d\"},",
          "2758:     {file = \"tornado-6.4.1-cp38-abi3-win_amd64.whl\", hash = \"sha256:b24b8982ed444378d7f21d563f4180a2de31ced9d8d84443907a0a64da2072e7\"},",
          "2759:     {file = \"tornado-6.4.1.tar.gz\", hash = \"sha256:92d3ab53183d8c50f8204a51e6f91d18a15d5ef261e84d452800d4ff6fc504e9\"},",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "2822: [[package]]",
          "2823: name = \"types-requests\"",
          "2825: description = \"Typing stubs for requests\"",
          "2826: optional = false",
          "2827: python-versions = \">=3.8\"",
          "2828: files = [",
          "2831: ]",
          "2833: [package.dependencies]",
          "",
          "[Removed Lines]",
          "2824: version = \"2.32.0.20240523\"",
          "2829:     {file = \"types-requests-2.32.0.20240523.tar.gz\", hash = \"sha256:26b8a6de32d9f561192b9942b41c0ab2d8010df5677ca8aa146289d11d505f57\"},",
          "2830:     {file = \"types_requests-2.32.0.20240523-py3-none-any.whl\", hash = \"sha256:f19ed0e2daa74302069bbbbf9e82902854ffa780bc790742a810a9aaa52f65ec\"},",
          "",
          "[Added Lines]",
          "2826: version = \"2.32.0.20240602\"",
          "2831:     {file = \"types-requests-2.32.0.20240602.tar.gz\", hash = \"sha256:3f98d7bbd0dd94ebd10ff43a7fbe20c3b8528acace6d8efafef0b6a184793f06\"},",
          "2832:     {file = \"types_requests-2.32.0.20240602-py3-none-any.whl\", hash = \"sha256:ed3946063ea9fbc6b5fc0c44fa279188bae42d582cb63760be6cb4b9d06c3de8\"},",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "2836: [[package]]",
          "2837: name = \"typing-extensions\"",
          "2839: description = \"Backported and Experimental Type Hints for Python 3.8+\"",
          "2840: optional = false",
          "2841: python-versions = \">=3.8\"",
          "2842: files = [",
          "2845: ]",
          "2847: [[package]]",
          "",
          "[Removed Lines]",
          "2838: version = \"4.12.0\"",
          "2843:     {file = \"typing_extensions-4.12.0-py3-none-any.whl\", hash = \"sha256:b349c66bea9016ac22978d800cfff206d5f9816951f12a7d0ec5578b0a819594\"},",
          "2844:     {file = \"typing_extensions-4.12.0.tar.gz\", hash = \"sha256:8cbcdc8606ebcb0d95453ad7dc5065e6237b6aa230a31e81d0f440c30fed5fd8\"},",
          "",
          "[Added Lines]",
          "2840: version = \"4.12.2\"",
          "2845:     {file = \"typing_extensions-4.12.2-py3-none-any.whl\", hash = \"sha256:04e5ca0351e0f3f85c6853954072df659d0d13fac324d0072316b67d7794700d\"},",
          "2846:     {file = \"typing_extensions-4.12.2.tar.gz\", hash = \"sha256:1a7ead55c7e559dd4dee8856e3a88b41225abfe1ce8df57b7c13915fe121ffb8\"},",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "2933: [[package]]",
          "2934: name = \"webcolors\"",
          "2936: description = \"A library for working with the color formats defined by HTML and CSS.\"",
          "2937: optional = false",
          "2939: files = [",
          "2942: ]",
          "2944: [package.extras]",
          "2945: docs = [\"furo\", \"sphinx\", \"sphinx-copybutton\", \"sphinx-inline-tabs\", \"sphinx-notfound-page\", \"sphinxext-opengraph\"]",
          "2948: [[package]]",
          "2949: name = \"webencodings\"",
          "",
          "[Removed Lines]",
          "2935: version = \"1.13\"",
          "2938: python-versions = \">=3.7\"",
          "2940:     {file = \"webcolors-1.13-py3-none-any.whl\", hash = \"sha256:29bc7e8752c0a1bd4a1f03c14d6e6a72e93d82193738fa860cbff59d0fcc11bf\"},",
          "2941:     {file = \"webcolors-1.13.tar.gz\", hash = \"sha256:c225b674c83fa923be93d235330ce0300373d02885cef23238813b0d5668304a\"},",
          "2946: tests = [\"pytest\", \"pytest-cov\"]",
          "",
          "[Added Lines]",
          "2937: version = \"24.6.0\"",
          "2940: python-versions = \">=3.8\"",
          "2942:     {file = \"webcolors-24.6.0-py3-none-any.whl\", hash = \"sha256:8cf5bc7e28defd1d48b9e83d5fc30741328305a8195c29a8e668fa45586568a1\"},",
          "2943:     {file = \"webcolors-24.6.0.tar.gz\", hash = \"sha256:1d160d1de46b3e81e58d0a280d0c78b467dc80f47294b91b1ad8029d2cedb55b\"},",
          "2948: tests = [\"coverage[toml]\"]",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "2986: [[package]]",
          "2987: name = \"zipp\"",
          "2989: description = \"Backport of pathlib-compatible object wrapper for zip files\"",
          "2990: optional = false",
          "2991: python-versions = \">=3.8\"",
          "2992: files = [",
          "2995: ]",
          "2997: [package.extras]",
          "3001: [metadata]",
          "3002: lock-version = \"2.0\"",
          "3003: python-versions = \">=3.8.1,<4.0\"",
          "",
          "[Removed Lines]",
          "2988: version = \"3.19.0\"",
          "2993:     {file = \"zipp-3.19.0-py3-none-any.whl\", hash = \"sha256:96dc6ad62f1441bcaccef23b274ec471518daf4fbbc580341204936a5a3dddec\"},",
          "2994:     {file = \"zipp-3.19.0.tar.gz\", hash = \"sha256:952df858fb3164426c976d9338d3961e8e8b3758e2e059e0f754b8c4262625ee\"},",
          "2998: docs = [\"furo\", \"jaraco.packaging (>=9.3)\", \"jaraco.tidelift (>=1.4)\", \"rst.linker (>=1.9)\", \"sphinx (>=3.5)\", \"sphinx-lint\"]",
          "2999: testing = [\"big-O\", \"jaraco.functools\", \"jaraco.itertools\", \"jaraco.test\", \"more-itertools\", \"pytest (>=6,!=8.1.*)\", \"pytest-checkdocs (>=2.4)\", \"pytest-cov\", \"pytest-enabler (>=2.2)\", \"pytest-ignore-flaky\", \"pytest-mypy\", \"pytest-ruff (>=0.2.1)\"]",
          "3004: content-hash = \"48f28d756cbc5301ff646fbe3aacceedf74e486569f4be7658566c6a098005a7\"",
          "",
          "[Added Lines]",
          "2990: version = \"3.19.2\"",
          "2995:     {file = \"zipp-3.19.2-py3-none-any.whl\", hash = \"sha256:f091755f667055f2d02b32c53771a7a6c8b47e1fdbc4b72a8b9072b3eef8015c\"},",
          "2996:     {file = \"zipp-3.19.2.tar.gz\", hash = \"sha256:bf1dcf6450f873a13e952a29504887c89e6de7506209e5b1bcc3460135d4de19\"},",
          "3000: doc = [\"furo\", \"jaraco.packaging (>=9.3)\", \"jaraco.tidelift (>=1.4)\", \"rst.linker (>=1.9)\", \"sphinx (>=3.5)\", \"sphinx-lint\"]",
          "3001: test = [\"big-O\", \"importlib-resources\", \"jaraco.functools\", \"jaraco.itertools\", \"jaraco.test\", \"more-itertools\", \"pytest (>=6,!=8.1.*)\", \"pytest-checkdocs (>=2.4)\", \"pytest-cov\", \"pytest-enabler (>=2.2)\", \"pytest-ignore-flaky\", \"pytest-mypy\", \"pytest-ruff (>=0.2.1)\"]",
          "3006: content-hash = \"80ea26d7abea8a3ce812adf528ba2aa3250e97b6309575d678bd68d454096ecb\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}