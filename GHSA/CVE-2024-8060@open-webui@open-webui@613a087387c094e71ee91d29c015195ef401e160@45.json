{
  "cve_id": "CVE-2024-8060",
  "cve_desc": "OpenWebUI version 0.3.0 contains a vulnerability in the audio API endpoint `/audio/api/v1/transcriptions` that allows for arbitrary file upload. The application performs insufficient validation on the `file.content_type` and allows user-controlled filenames, leading to a path traversal vulnerability. This can be exploited by an authenticated user to overwrite critical files within the Docker container, potentially leading to remote code execution as the root user.",
  "repo": "open-webui/open-webui",
  "patch_hash": "613a087387c094e71ee91d29c015195ef401e160",
  "patch_info": {
    "commit_hash": "613a087387c094e71ee91d29c015195ef401e160",
    "repo": "open-webui/open-webui",
    "commit_url": "https://github.com/open-webui/open-webui/commit/613a087387c094e71ee91d29c015195ef401e160",
    "files": [
      "backend/open_webui/routers/audio.py"
    ],
    "message": "refac",
    "before_after_code_files": [
      "backend/open_webui/routers/audio.py||backend/open_webui/routers/audio.py"
    ]
  },
  "patch_diff": {
    "backend/open_webui/routers/audio.py||backend/open_webui/routers/audio.py": [
      "File: backend/open_webui/routers/audio.py -> backend/open_webui/routers/audio.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "681:     available_models = []",
      "682:     if request.app.state.config.TTS_ENGINE == \"openai\":",
      "683:         # Use custom endpoint if not using the official OpenAI API URL",
      "685:             try:",
      "687:                 response.raise_for_status()",
      "688:                 data = response.json()",
      "689:                 available_models = data.get(\"models\", [])",
      "690:             except Exception as e:",
      "691:                 log.error(f\"Error fetching models from custom endpoint: {str(e)}\")",
      "693:         else:",
      "694:             available_models = [{\"id\": \"tts-1\"}, {\"id\": \"tts-1-hd\"}]",
      "695:     elif request.app.state.config.TTS_ENGINE == \"elevenlabs\":",
      "",
      "[Removed Lines]",
      "684:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(\"https://api.openai.com\"):",
      "686:                 response = requests.get(f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/models\")",
      "692:                 available_models = []",
      "",
      "[Added Lines]",
      "684:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(",
      "685:             \"https://api.openai.com\"",
      "686:         ):",
      "688:                 response = requests.get(",
      "689:                     f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/models\"",
      "690:                 )",
      "696:                 available_models = [{\"id\": \"tts-1\"}, {\"id\": \"tts-1-hd\"}]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "723:     available_voices = {}",
      "724:     if request.app.state.config.TTS_ENGINE == \"openai\":",
      "725:         # Use custom endpoint if not using the official OpenAI API URL",
      "727:             try:",
      "729:                 response.raise_for_status()",
      "730:                 data = response.json()",
      "731:                 voices_list = data.get(\"voices\", [])",
      "732:                 available_voices = {voice[\"id\"]: voice[\"name\"] for voice in voices_list}",
      "733:             except Exception as e:",
      "734:                 log.error(f\"Error fetching voices from custom endpoint: {str(e)}\")",
      "736:         else:",
      "737:             available_voices = {",
      "738:                 \"alloy\": \"alloy\",",
      "",
      "[Removed Lines]",
      "726:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(\"https://api.openai.com\"):",
      "728:                 response = requests.get(f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/voices\")",
      "735:                 available_voices = {}",
      "",
      "[Added Lines]",
      "730:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(",
      "731:             \"https://api.openai.com\"",
      "732:         ):",
      "734:                 response = requests.get(",
      "735:                     f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/voices\"",
      "736:                 )",
      "743:                 available_voices = {",
      "744:                     \"alloy\": \"alloy\",",
      "745:                     \"echo\": \"echo\",",
      "746:                     \"fable\": \"fable\",",
      "747:                     \"onyx\": \"onyx\",",
      "748:                     \"nova\": \"nova\",",
      "749:                     \"shimmer\": \"shimmer\",",
      "750:                 }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7e73790d6c136844d53efab490a64568786308b6",
      "candidate_info": {
        "commit_hash": "7e73790d6c136844d53efab490a64568786308b6",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/7e73790d6c136844d53efab490a64568786308b6",
        "files": [
          "src/lib/apis/index.ts"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/apis/index.ts||src/lib/apis/index.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/apis/index.ts||src/lib/apis/index.ts": [
          "File: src/lib/apis/index.ts -> src/lib/apis/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:         })()",
          "69:        );",
          "70:       } else {",
          "72:       }",
          "73:      } else {",
          "74:       requests.push(",
          "",
          "[Removed Lines]",
          "71:        requests.push(getOpenAIModelsDirect(url, OPENAI_API_KEYS[idx]));",
          "",
          "[Added Lines]",
          "71:        requests.push(",
          "72:         (async () => {",
          "73:          return await getOpenAIModelsDirect(url, OPENAI_API_KEYS[idx])",
          "74:           .then((res) => {",
          "75:            return res;",
          "76:           })",
          "77:           .catch((err) => {",
          "78:            return {",
          "79:             object: 'list',",
          "80:             data: [],",
          "81:             urlIdx: idx",
          "82:            };",
          "83:           });",
          "84:         })()",
          "85:        );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b5e74f4eaea8421e0d868b6da13216b436599272",
      "candidate_info": {
        "commit_hash": "b5e74f4eaea8421e0d868b6da13216b436599272",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/b5e74f4eaea8421e0d868b6da13216b436599272",
        "files": [
          "src/lib/components/chat/Messages/ResponseMessage.svelte",
          "static/pyodide/pyodide-lock.json"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/chat/Messages/ResponseMessage.svelte||src/lib/components/chat/Messages/ResponseMessage.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/chat/Messages/ResponseMessage.svelte||src/lib/components/chat/Messages/ResponseMessage.svelte": [
          "File: src/lib/components/chat/Messages/ResponseMessage.svelte -> src/lib/components/chat/Messages/ResponseMessage.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "1271:           <Tooltip content={$i18n.t('Delete')} placement=\"bottom\">",
          "1272:            <button",
          "1273:             type=\"button\"",
          "1275:             class=\"{isLastMessage",
          "1276:              ? 'visible'",
          "1277:              : 'invisible group-hover:visible'} p-1.5 hover:bg-black/5 dark:hover:bg-white/5 rounded-lg dark:hover:text-white hover:text-black transition regenerate-response-button\"",
          "",
          "[Removed Lines]",
          "1274:             id=\"continue-response-button\"",
          "",
          "[Added Lines]",
          "1274:             id=\"delete-response-button\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5296ee0f713f84b3fbf44317e2587ae48b6f4fbb",
      "candidate_info": {
        "commit_hash": "5296ee0f713f84b3fbf44317e2587ae48b6f4fbb",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/5296ee0f713f84b3fbf44317e2587ae48b6f4fbb",
        "files": [
          "src/lib/components/chat/Chat.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/chat/Chat.svelte||src/lib/components/chat/Chat.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/chat/Chat.svelte||src/lib/components/chat/Chat.svelte": [
          "File: src/lib/components/chat/Chat.svelte -> src/lib/components/chat/Chat.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "1322:    history.messages[messages.at(-1).id].childrenIds.push(userMessageId);",
          "1323:   }",
          "1330:   const chatInput = document.getElementById('chat-input');",
          "1331:   chatInput?.focus();",
          "",
          "[Removed Lines]",
          "1325:   if (autoScroll) {",
          "1326:    scrollToBottom();",
          "1327:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1341:   parentId: string,",
          "1342:   { modelId = null, modelIdx = null, newChat = false } = {}",
          "1343:  ) => {",
          "1344:   let _chatId = JSON.parse(JSON.stringify($chatId));",
          "1345:   _history = JSON.parse(JSON.stringify(_history));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1340:   if (autoScroll) {",
          "1341:    scrollToBottom();",
          "1342:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3413dd8ae17464f774d113db7ff380fb69743543",
      "candidate_info": {
        "commit_hash": "3413dd8ae17464f774d113db7ff380fb69743543",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/3413dd8ae17464f774d113db7ff380fb69743543",
        "files": [
          "src/lib/components/channel/MessageInput.svelte",
          "src/lib/components/chat/MessageInput.svelte",
          "src/lib/components/chat/Messages/UserMessage.svelte",
          "src/lib/components/chat/Settings/Interface.svelte",
          "src/lib/stores/index.ts"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/channel/MessageInput.svelte||src/lib/components/channel/MessageInput.svelte",
          "src/lib/components/chat/MessageInput.svelte||src/lib/components/chat/MessageInput.svelte",
          "src/lib/components/chat/Messages/UserMessage.svelte||src/lib/components/chat/Messages/UserMessage.svelte",
          "src/lib/components/chat/Settings/Interface.svelte||src/lib/components/chat/Settings/Interface.svelte",
          "src/lib/stores/index.ts||src/lib/stores/index.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/channel/MessageInput.svelte||src/lib/components/channel/MessageInput.svelte": [
          "File: src/lib/components/channel/MessageInput.svelte -> src/lib/components/channel/MessageInput.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "381:     >",
          "382:      <div",
          "383:       class=\"flex-1 flex flex-col relative w-full rounded-3xl px-1 bg-gray-600/5 dark:bg-gray-400/5 dark:text-gray-100\"",
          "385:      >",
          "386:       {#if files.length > 0}",
          "387:        <div class=\"mx-2 mt-2.5 -mb-1 flex flex-wrap gap-2\">",
          "",
          "[Removed Lines]",
          "384:       dir={$settings?.chatDirection ?? 'LTR'}",
          "",
          "[Added Lines]",
          "384:       dir={$settings?.chatDirection ?? 'auto'}",
          "",
          "---------------"
        ],
        "src/lib/components/chat/MessageInput.svelte||src/lib/components/chat/MessageInput.svelte": [
          "File: src/lib/components/chat/MessageInput.svelte -> src/lib/components/chat/MessageInput.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "510:       >",
          "511:        <div",
          "512:         class=\"flex-1 flex flex-col relative w-full shadow-lg rounded-3xl border border-gray-100 dark:border-gray-850 hover:border-gray-200 focus-within:border-gray-200 hover:dark:border-gray-800 focus-within:dark:border-gray-800 transition px-1 bg-white/90 dark:bg-gray-400/5 dark:text-gray-100\"",
          "514:        >",
          "515:         {#if files.length > 0}",
          "516:          <div class=\"mx-2 mt-2.5 -mb-1 flex items-center flex-wrap gap-2\">",
          "",
          "[Removed Lines]",
          "513:         dir={$settings?.chatDirection ?? 'LTR'}",
          "",
          "[Added Lines]",
          "513:         dir={$settings?.chatDirection ?? 'auto'}",
          "",
          "---------------"
        ],
        "src/lib/components/chat/Messages/UserMessage.svelte||src/lib/components/chat/Messages/UserMessage.svelte": [
          "File: src/lib/components/chat/Messages/UserMessage.svelte -> src/lib/components/chat/Messages/UserMessage.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "103: <div class=\" flex w-full user-message\" dir={$settings.chatDirection} id=\"message-{message.id}\">",
          "104:  {#if !($settings?.chatBubble ?? true)}",
          "106:    <ProfileImage",
          "107:     src={message.user",
          "108:      ? ($models.find((m) => m.id === message.user)?.info?.meta?.profile_image_url ??",
          "",
          "[Removed Lines]",
          "105:   <div class={`shrink-0 ${($settings?.chatDirection ?? 'LTR') === 'LTR' ? 'mr-3' : 'ml-3'}`}>",
          "",
          "[Added Lines]",
          "105:   <div class={`shrink-0 ltr:mr-3 rtl:ml-3`}>",
          "",
          "---------------"
        ],
        "src/lib/components/chat/Settings/Interface.svelte||src/lib/components/chat/Settings/Interface.svelte": [
          "File: src/lib/components/chat/Settings/Interface.svelte -> src/lib/components/chat/Settings/Interface.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:  let landingPageMode = '';",
          "41:  let chatBubble = true;",
          "43:  let ctrlEnterToSend = false;",
          "45:  let collapseCodeBlocks = false;",
          "",
          "[Removed Lines]",
          "42:  let chatDirection: 'LTR' | 'RTL' = 'LTR';",
          "",
          "[Added Lines]",
          "42:  let chatDirection: 'LTR' | 'RTL' | 'auto' = 'auto';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "263:   widescreenMode = $settings.widescreenMode ?? false;",
          "264:   splitLargeChunks = $settings.splitLargeChunks ?? false;",
          "265:   scrollOnBranchChange = $settings.scrollOnBranchChange ?? true;",
          "267:   userLocation = $settings.userLocation ?? false;",
          "269:   notificationSound = $settings.notificationSound ?? true;",
          "",
          "[Removed Lines]",
          "266:   chatDirection = $settings.chatDirection ?? 'LTR';",
          "",
          "[Added Lines]",
          "266:   chatDirection = $settings.chatDirection ?? 'auto';",
          "",
          "---------------"
        ],
        "src/lib/stores/index.ts||src/lib/stores/index.ts": [
          "File: src/lib/stores/index.ts -> src/lib/stores/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "141:  notificationEnabled?: boolean;",
          "142:  title?: TitleSettings;",
          "143:  splitLargeDeltas?: boolean;",
          "145:  ctrlEnterToSend?: boolean;",
          "147:  system?: string;",
          "",
          "[Removed Lines]",
          "144:  chatDirection: 'LTR' | 'RTL';",
          "",
          "[Added Lines]",
          "144:  chatDirection: 'LTR' | 'RTL' | 'auto';",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0bec9122c156627db261a29928551cb06d052e6e",
      "candidate_info": {
        "commit_hash": "0bec9122c156627db261a29928551cb06d052e6e",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/0bec9122c156627db261a29928551cb06d052e6e",
        "files": [
          "src/lib/components/admin/Functions.svelte",
          "src/lib/components/admin/Settings/Audio.svelte",
          "src/lib/components/admin/Settings/Connections.svelte",
          "src/lib/components/admin/Settings/Evaluations.svelte",
          "src/lib/components/admin/Settings/Models.svelte",
          "src/lib/components/admin/Settings/Models/Manage/ManageOllama.svelte",
          "src/lib/components/admin/Settings/Pipelines.svelte",
          "src/lib/components/chat/ModelSelector/Selector.svelte",
          "src/lib/components/chat/SettingsModal.svelte",
          "src/lib/components/workspace/Models.svelte",
          "src/routes/(app)/+layout.svelte",
          "src/routes/(app)/admin/functions/create/+page.svelte",
          "src/routes/(app)/admin/functions/edit/+page.svelte",
          "src/routes/(app)/workspace/models/+page.svelte",
          "src/routes/(app)/workspace/models/create/+page.svelte",
          "src/routes/(app)/workspace/models/edit/+page.svelte",
          "src/routes/s/[id]/+page.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/admin/Functions.svelte||src/lib/components/admin/Functions.svelte",
          "src/lib/components/admin/Settings/Audio.svelte||src/lib/components/admin/Settings/Audio.svelte",
          "src/lib/components/admin/Settings/Connections.svelte||src/lib/components/admin/Settings/Connections.svelte",
          "src/lib/components/admin/Settings/Evaluations.svelte||src/lib/components/admin/Settings/Evaluations.svelte",
          "src/lib/components/admin/Settings/Models.svelte||src/lib/components/admin/Settings/Models.svelte",
          "src/lib/components/admin/Settings/Models/Manage/ManageOllama.svelte||src/lib/components/admin/Settings/Models/Manage/ManageOllama.svelte",
          "src/lib/components/admin/Settings/Pipelines.svelte||src/lib/components/admin/Settings/Pipelines.svelte",
          "src/lib/components/chat/ModelSelector/Selector.svelte||src/lib/components/chat/ModelSelector/Selector.svelte",
          "src/lib/components/chat/SettingsModal.svelte||src/lib/components/chat/SettingsModal.svelte",
          "src/lib/components/workspace/Models.svelte||src/lib/components/workspace/Models.svelte",
          "src/routes/(app)/+layout.svelte||src/routes/(app)/+layout.svelte",
          "src/routes/(app)/admin/functions/create/+page.svelte||src/routes/(app)/admin/functions/create/+page.svelte",
          "src/routes/(app)/admin/functions/edit/+page.svelte||src/routes/(app)/admin/functions/edit/+page.svelte",
          "src/routes/(app)/workspace/models/+page.svelte||src/routes/(app)/workspace/models/+page.svelte",
          "src/routes/(app)/workspace/models/create/+page.svelte||src/routes/(app)/workspace/models/create/+page.svelte",
          "src/routes/(app)/workspace/models/edit/+page.svelte||src/routes/(app)/workspace/models/edit/+page.svelte",
          "src/routes/s/[id]/+page.svelte||src/routes/s/[id]/+page.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/admin/Functions.svelte||src/lib/components/admin/Functions.svelte": [
          "File: src/lib/components/admin/Functions.svelte -> src/lib/components/admin/Functions.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "126:    toast.success($i18n.t('Function deleted successfully'));",
          "128:    functions.set(await getFunctions(localStorage.token));",
          "130:   }",
          "131:  };",
          "",
          "[Removed Lines]",
          "129:    models.set(await getModels(localStorage.token, $settings?.directConnections ?? null));",
          "",
          "[Added Lines]",
          "129:    models.set(",
          "130:     await getModels(",
          "131:      localStorage.token,",
          "132:      $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "133:     )",
          "134:    );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "147:    }",
          "149:    functions.set(await getFunctions(localStorage.token));",
          "151:   }",
          "152:  };",
          "",
          "[Removed Lines]",
          "150:    models.set(await getModels(localStorage.token, $settings?.directConnections ?? null));",
          "",
          "[Added Lines]",
          "155:    models.set(",
          "156:     await getModels(",
          "157:      localStorage.token,",
          "158:      $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "159:     )",
          "160:    );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "360:        on:change={async (e) => {",
          "361:         toggleFunctionById(localStorage.token, func.id);",
          "362:         models.set(",
          "364:         );",
          "365:        }}",
          "366:       />",
          "",
          "[Removed Lines]",
          "363:          await getModels(localStorage.token, $settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "373:          await getModels(",
          "374:           localStorage.token,",
          "375:           $config?.features?.enable_direct_connetions &&",
          "376:            ($settings?.directConnections ?? null)",
          "377:          )",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "498:  id={selectedFunction?.id ?? null}",
          "499:  on:save={async () => {",
          "500:   await tick();",
          "502:  }}",
          "503: />",
          "",
          "[Removed Lines]",
          "501:   models.set(await getModels(localStorage.token, $settings?.directConnections ?? null));",
          "",
          "[Added Lines]",
          "515:   models.set(",
          "516:    await getModels(",
          "517:     localStorage.token,",
          "518:     $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "519:    )",
          "520:   );",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "520:    toast.success($i18n.t('Functions imported successfully'));",
          "521:    functions.set(await getFunctions(localStorage.token));",
          "523:   };",
          "525:   reader.readAsText(importFiles[0]);",
          "",
          "[Removed Lines]",
          "522:    models.set(await getModels(localStorage.token, $settings?.directConnections ?? null));",
          "",
          "[Added Lines]",
          "541:    models.set(",
          "542:     await getModels(",
          "543:      localStorage.token,",
          "544:      $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "545:     )",
          "546:    );",
          "",
          "---------------"
        ],
        "src/lib/components/admin/Settings/Audio.svelte||src/lib/components/admin/Settings/Audio.svelte": [
          "File: src/lib/components/admin/Settings/Audio.svelte -> src/lib/components/admin/Settings/Audio.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "51:   if (TTS_ENGINE === '') {",
          "52:    models = [];",
          "53:   } else {",
          "60:    if (res) {",
          "61:     console.log(res);",
          "",
          "[Removed Lines]",
          "54:    const res = await _getModels(localStorage.token, $settings?.directConnections ?? null).catch(",
          "55:     (e) => {",
          "56:      toast.error(`${e}`);",
          "57:     }",
          "58:    );",
          "",
          "[Added Lines]",
          "54:    const res = await _getModels(",
          "55:     localStorage.token,",
          "56:     $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "57:    ).catch((e) => {",
          "58:     toast.error(`${e}`);",
          "59:    });",
          "",
          "---------------"
        ],
        "src/lib/components/admin/Settings/Connections.svelte||src/lib/components/admin/Settings/Connections.svelte": [
          "File: src/lib/components/admin/Settings/Connections.svelte -> src/lib/components/admin/Settings/Connections.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "9:  import { getModels as _getModels } from '$lib/apis';",
          "10:  import { getDirectConnectionsConfig, setDirectConnectionsConfig } from '$lib/apis/configs';",
          "14:  import Switch from '$lib/components/common/Switch.svelte';",
          "15:  import Spinner from '$lib/components/common/Spinner.svelte';",
          "",
          "[Removed Lines]",
          "12:  import { models, settings, user } from '$lib/stores';",
          "",
          "[Added Lines]",
          "12:  import { config, models, settings, user } from '$lib/stores';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "23:  const i18n = getContext('i18n');",
          "25:  const getModels = async () => {",
          "27:   return models;",
          "28:  };",
          "",
          "[Removed Lines]",
          "26:   const models = await _getModels(localStorage.token, $settings?.directConnections ?? null);",
          "",
          "[Added Lines]",
          "26:   const models = await _getModels(",
          "27:    localStorage.token,",
          "28:    $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "29:   );",
          "",
          "---------------"
        ],
        "src/lib/components/admin/Settings/Evaluations.svelte||src/lib/components/admin/Settings/Evaluations.svelte": [
          "File: src/lib/components/admin/Settings/Evaluations.svelte -> src/lib/components/admin/Settings/Evaluations.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:   if (config) {",
          "29:    toast.success('Settings saved successfully');",
          "31:   }",
          "32:  };",
          "",
          "[Removed Lines]",
          "30:    models.set(await getModels(localStorage.token, $settings?.directConnections ?? null));",
          "",
          "[Added Lines]",
          "30:    models.set(",
          "31:     await getModels(",
          "32:      localStorage.token,",
          "33:      $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "34:     )",
          "35:    );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36:   config.EVALUATION_ARENA_MODELS = [...config.EVALUATION_ARENA_MODELS];",
          "38:   await submitHandler();",
          "40:  };",
          "42:  const editModelHandler = async (model, modelIdx) => {",
          "",
          "[Removed Lines]",
          "39:   models.set(await getModels(localStorage.token, $settings?.directConnections ?? null));",
          "",
          "[Added Lines]",
          "44:   models.set(",
          "45:    await getModels(",
          "46:     localStorage.token,",
          "47:     $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "48:    )",
          "49:   );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "44:   config.EVALUATION_ARENA_MODELS = [...config.EVALUATION_ARENA_MODELS];",
          "46:   await submitHandler();",
          "48:  };",
          "50:  const deleteModelHandler = async (modelIdx) => {",
          "",
          "[Removed Lines]",
          "47:   models.set(await getModels(localStorage.token, $settings?.directConnections ?? null));",
          "",
          "[Added Lines]",
          "57:   models.set(",
          "58:    await getModels(",
          "59:     localStorage.token,",
          "60:     $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "61:    )",
          "62:   );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "53:   );",
          "55:   await submitHandler();",
          "57:  };",
          "59:  onMount(async () => {",
          "",
          "[Removed Lines]",
          "56:   models.set(await getModels(localStorage.token, $settings?.directConnections ?? null));",
          "",
          "[Added Lines]",
          "71:   models.set(",
          "72:    await getModels(",
          "73:     localStorage.token,",
          "74:     $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "75:    )",
          "76:   );",
          "",
          "---------------"
        ],
        "src/lib/components/admin/Settings/Models.svelte||src/lib/components/admin/Settings/Models.svelte": [
          "File: src/lib/components/admin/Settings/Models.svelte -> src/lib/components/admin/Settings/Models.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "111:    }",
          "112:   }",
          "115:   await init();",
          "116:  };",
          "",
          "[Removed Lines]",
          "114:   _models.set(await getModels(localStorage.token, $settings?.directConnections ?? null));",
          "",
          "[Added Lines]",
          "114:   _models.set(",
          "115:    await getModels(",
          "116:     localStorage.token,",
          "117:     $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "118:    )",
          "119:   );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "133:   }",
          "137:  };",
          "139:  onMount(async () => {",
          "",
          "[Removed Lines]",
          "136:   _models.set(await getModels(localStorage.token, $settings?.directConnections ?? null));",
          "",
          "[Added Lines]",
          "141:   _models.set(",
          "142:    await getModels(",
          "143:     localStorage.token,",
          "144:     $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "145:    )",
          "146:   );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "331:         }",
          "333:         await _models.set(",
          "335:         );",
          "336:         init();",
          "337:        };",
          "",
          "[Removed Lines]",
          "334:          await getModels(localStorage.token, $settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "344:          await getModels(",
          "345:           localStorage.token,",
          "346:           $config?.features?.enable_direct_connetions &&",
          "347:            ($settings?.directConnections ?? null)",
          "348:          )",
          "",
          "---------------"
        ],
        "src/lib/components/admin/Settings/Models/Manage/ManageOllama.svelte||src/lib/components/admin/Settings/Models/Manage/ManageOllama.svelte": [
          "File: src/lib/components/admin/Settings/Models/Manage/ManageOllama.svelte -> src/lib/components/admin/Settings/Models/Manage/ManageOllama.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "235:      })",
          "236:     );",
          "239:    } else {",
          "240:     toast.error($i18n.t('Download canceled'));",
          "241:    }",
          "",
          "[Removed Lines]",
          "238:     models.set(await getModels(localStorage.token, $settings?.directConnections ?? null));",
          "",
          "[Added Lines]",
          "238:     models.set(",
          "239:      await getModels(",
          "240:       localStorage.token,",
          "241:       $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "242:      )",
          "243:     );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "394:   modelTransferring = false;",
          "395:   uploadProgress = null;",
          "398:  };",
          "400:  const deleteModelHandler = async () => {",
          "",
          "[Removed Lines]",
          "397:   models.set(await getModels(localStorage.token, $settings?.directConnections ?? null));",
          "",
          "[Added Lines]",
          "402:   models.set(",
          "403:    await getModels(",
          "404:     localStorage.token,",
          "405:     $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "406:    )",
          "407:   );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "407:   }",
          "409:   deleteModelTag = '';",
          "411:  };",
          "413:  const cancelModelPullHandler = async (model: string) => {",
          "",
          "[Removed Lines]",
          "410:   models.set(await getModels(localStorage.token, $settings?.directConnections ?? null));",
          "",
          "[Added Lines]",
          "420:   models.set(",
          "421:    await getModels(",
          "422:     localStorage.token,",
          "423:     $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "424:    )",
          "425:   );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "506:    }",
          "507:   }",
          "511:   createModelLoading = false;",
          "",
          "[Removed Lines]",
          "509:   models.set(await getModels(localStorage.token, $settings?.directConnections ?? null));",
          "",
          "[Added Lines]",
          "524:   models.set(",
          "525:    await getModels(",
          "526:     localStorage.token,",
          "527:     $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "528:    )",
          "529:   );",
          "",
          "---------------"
        ],
        "src/lib/components/admin/Settings/Pipelines.svelte||src/lib/components/admin/Settings/Pipelines.svelte": [
          "File: src/lib/components/admin/Settings/Pipelines.svelte -> src/lib/components/admin/Settings/Pipelines.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "2:  import { v4 as uuidv4 } from 'uuid';",
          "4:  import { toast } from 'svelte-sonner';",
          "6:  import { getContext, onMount, tick } from 'svelte';",
          "7:  import type { Writable } from 'svelte/store';",
          "8:  import type { i18n as i18nType } from 'i18next';",
          "",
          "[Removed Lines]",
          "5:  import { models, settings } from '$lib/stores';",
          "",
          "[Added Lines]",
          "5:  import { config, models, settings } from '$lib/stores';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63:    if (res) {",
          "64:     toast.success($i18n.t('Valves updated successfully'));",
          "65:     setPipelines();",
          "67:     saveHandler();",
          "68:    }",
          "69:   } else {",
          "",
          "[Removed Lines]",
          "66:     models.set(await getModels(localStorage.token, $settings?.directConnections ?? null));",
          "",
          "[Added Lines]",
          "66:     models.set(",
          "67:      await getModels(",
          "68:       localStorage.token,",
          "69:       $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "70:      )",
          "71:     );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "125:   if (res) {",
          "126:    toast.success($i18n.t('Pipeline downloaded successfully'));",
          "127:    setPipelines();",
          "129:   }",
          "131:   downloading = false;",
          "",
          "[Removed Lines]",
          "128:    models.set(await getModels(localStorage.token, $settings?.directConnections ?? null));",
          "",
          "[Added Lines]",
          "133:    models.set(",
          "134:     await getModels(",
          "135:      localStorage.token,",
          "136:      $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "137:     )",
          "138:    );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "150:    if (res) {",
          "151:     toast.success($i18n.t('Pipeline downloaded successfully'));",
          "152:     setPipelines();",
          "154:    }",
          "155:   } else {",
          "156:    toast.error($i18n.t('No file selected'));",
          "",
          "[Removed Lines]",
          "153:     models.set(await getModels(localStorage.token, $settings?.directConnections ?? null));",
          "",
          "[Added Lines]",
          "163:     models.set(",
          "164:      await getModels(",
          "165:       localStorage.token,",
          "166:       $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "167:      )",
          "168:     );",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "179:   if (res) {",
          "180:    toast.success($i18n.t('Pipeline deleted successfully'));",
          "181:    setPipelines();",
          "183:   }",
          "184:  };",
          "",
          "[Removed Lines]",
          "182:    models.set(await getModels(localStorage.token, $settings?.directConnections ?? null));",
          "",
          "[Added Lines]",
          "197:    models.set(",
          "198:     await getModels(",
          "199:      localStorage.token,",
          "200:      $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "201:     )",
          "202:    );",
          "",
          "---------------"
        ],
        "src/lib/components/chat/ModelSelector/Selector.svelte||src/lib/components/chat/ModelSelector/Selector.svelte": [
          "File: src/lib/components/chat/ModelSelector/Selector.svelte -> src/lib/components/chat/ModelSelector/Selector.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "18:   models,",
          "19:   mobile,",
          "20:   temporaryChatEnabled,",
          "22:  } from '$lib/stores';",
          "23:  import { toast } from 'svelte-sonner';",
          "24:  import { capitalizeFirstLetter, sanitizeResponseContent, splitStream } from '$lib/utils';",
          "",
          "[Removed Lines]",
          "21:   settings",
          "",
          "[Added Lines]",
          "21:   settings,",
          "22:   config",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "193:      })",
          "194:     );",
          "197:    } else {",
          "198:     toast.error($i18n.t('Download canceled'));",
          "199:    }",
          "",
          "[Removed Lines]",
          "196:     models.set(await getModels(localStorage.token, $settings?.directConnections ?? null));",
          "",
          "[Added Lines]",
          "197:     models.set(",
          "198:      await getModels(",
          "199:       localStorage.token,",
          "200:       $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "201:      )",
          "202:     );",
          "",
          "---------------"
        ],
        "src/lib/components/chat/SettingsModal.svelte||src/lib/components/chat/SettingsModal.svelte": [
          "File: src/lib/components/chat/SettingsModal.svelte -> src/lib/components/chat/SettingsModal.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "322:  };",
          "324:  const getModels = async () => {",
          "326:  };",
          "328:  let selectedTab = 'general';",
          "",
          "[Removed Lines]",
          "325:   return await _getModels(localStorage.token, $settings?.directConnections ?? null);",
          "",
          "[Added Lines]",
          "325:   return await _getModels(",
          "326:    localStorage.token,",
          "327:    $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "328:   );",
          "",
          "---------------"
        ],
        "src/lib/components/workspace/Models.svelte||src/lib/components/workspace/Models.svelte": [
          "File: src/lib/components/workspace/Models.svelte -> src/lib/components/workspace/Models.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:    toast.success($i18n.t(`Deleted {{name}}`, { name: model.id }));",
          "69:   }",
          "72:   models = await getWorkspaceModels(localStorage.token);",
          "73:  };",
          "",
          "[Removed Lines]",
          "71:   await _models.set(await getModels(localStorage.token, $settings?.directConnections ?? null));",
          "",
          "[Added Lines]",
          "71:   await _models.set(",
          "72:    await getModels(",
          "73:     localStorage.token,",
          "74:     $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "75:    )",
          "76:   );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "134:    );",
          "135:   }",
          "138:   models = await getWorkspaceModels(localStorage.token);",
          "139:  };",
          "",
          "[Removed Lines]",
          "137:   await _models.set(await getModels(localStorage.token, $settings?.directConnections ?? null));",
          "",
          "[Added Lines]",
          "142:   await _models.set(",
          "143:    await getModels(",
          "144:     localStorage.token,",
          "145:     $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "146:    )",
          "147:   );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "372:           on:change={async (e) => {",
          "373:            toggleModelById(localStorage.token, model.id);",
          "374:            _models.set(",
          "376:            );",
          "377:           }}",
          "378:          />",
          "",
          "[Removed Lines]",
          "375:             await getModels(localStorage.token, $settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "385:             await getModels(",
          "386:              localStorage.token,",
          "387:              $config?.features?.enable_direct_connetions &&",
          "388:               ($settings?.directConnections ?? null)",
          "389:             )",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "420:        }",
          "422:        await _models.set(",
          "424:        );",
          "425:        models = await getWorkspaceModels(localStorage.token);",
          "426:       };",
          "",
          "[Removed Lines]",
          "423:         await getModels(localStorage.token, $settings?.directConnections ?? null)",
          "",
          "[Added Lines]",
          "437:         await getModels(",
          "438:          localStorage.token,",
          "439:          $config?.features?.enable_direct_connetions &&",
          "440:           ($settings?.directConnections ?? null)",
          "441:         )",
          "",
          "---------------"
        ],
        "src/routes/(app)/+layout.svelte||src/routes/(app)/+layout.svelte": [
          "File: src/routes/(app)/+layout.svelte -> src/routes/(app)/+layout.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "93:     settings.set(localStorageSettings);",
          "94:    }",
          "97:    banners.set(await getBanners(localStorage.token));",
          "98:    tools.set(await getTools(localStorage.token));",
          "",
          "[Removed Lines]",
          "96:    models.set(await getModels(localStorage.token, $settings?.directConnections ?? null));",
          "",
          "[Added Lines]",
          "96:    models.set(",
          "97:     await getModels(",
          "98:      localStorage.token,",
          "99:      $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "100:     )",
          "101:    );",
          "",
          "---------------"
        ],
        "src/routes/(app)/admin/functions/create/+page.svelte||src/routes/(app)/admin/functions/create/+page.svelte": [
          "File: src/routes/(app)/admin/functions/create/+page.svelte -> src/routes/(app)/admin/functions/create/+page.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "3:  import { onMount, getContext } from 'svelte';",
          "4:  import { goto } from '$app/navigation';",
          "7:  import { createNewFunction, getFunctions } from '$lib/apis/functions';",
          "8:  import FunctionEditor from '$lib/components/admin/Functions/FunctionEditor.svelte';",
          "9:  import { getModels } from '$lib/apis';",
          "",
          "[Removed Lines]",
          "6:  import { functions, models, settings } from '$lib/stores';",
          "",
          "[Added Lines]",
          "6:  import { config, functions, models, settings } from '$lib/stores';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47:   if (res) {",
          "48:    toast.success($i18n.t('Function created successfully'));",
          "49:    functions.set(await getFunctions(localStorage.token));",
          "52:    await goto('/admin/functions');",
          "53:   }",
          "",
          "[Removed Lines]",
          "50:    models.set(await getModels(localStorage.token, $settings?.directConnections ?? null));",
          "",
          "[Added Lines]",
          "50:    models.set(",
          "51:     await getModels(",
          "52:      localStorage.token,",
          "53:      $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "54:     )",
          "55:    );",
          "",
          "---------------"
        ],
        "src/routes/(app)/admin/functions/edit/+page.svelte||src/routes/(app)/admin/functions/edit/+page.svelte": [
          "File: src/routes/(app)/admin/functions/edit/+page.svelte -> src/routes/(app)/admin/functions/edit/+page.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "5:  import { goto } from '$app/navigation';",
          "6:  import { page } from '$app/stores';",
          "8:  import { updateFunctionById, getFunctions, getFunctionById } from '$lib/apis/functions';",
          "10:  import FunctionEditor from '$lib/components/admin/Functions/FunctionEditor.svelte';",
          "",
          "[Removed Lines]",
          "7:  import { functions, models, settings } from '$lib/stores';",
          "",
          "[Added Lines]",
          "7:  import { config, functions, models, settings } from '$lib/stores';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "48:   if (res) {",
          "49:    toast.success($i18n.t('Function updated successfully'));",
          "50:    functions.set(await getFunctions(localStorage.token));",
          "52:   }",
          "53:  };",
          "",
          "[Removed Lines]",
          "51:    models.set(await getModels(localStorage.token, $settings?.directConnections ?? null));",
          "",
          "[Added Lines]",
          "51:    models.set(",
          "52:     await getModels(",
          "53:      localStorage.token,",
          "54:      $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "55:     )",
          "56:    );",
          "",
          "---------------"
        ],
        "src/routes/(app)/workspace/models/+page.svelte||src/routes/(app)/workspace/models/+page.svelte": [
          "File: src/routes/(app)/workspace/models/+page.svelte -> src/routes/(app)/workspace/models/+page.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <script>",
          "2:  import { onMount } from 'svelte';",
          "4:  import { getModels } from '$lib/apis';",
          "5:  import Models from '$lib/components/workspace/Models.svelte';",
          "7:  onMount(async () => {",
          "8:   await Promise.all([",
          "9:    (async () => {",
          "11:    })()",
          "12:   ]);",
          "13:  });",
          "",
          "[Removed Lines]",
          "3:  import { models, settings } from '$lib/stores';",
          "10:     models.set(await getModels(localStorage.token, $settings?.directConnections ?? null));",
          "",
          "[Added Lines]",
          "3:  import { config, models, settings } from '$lib/stores';",
          "10:     models.set(",
          "11:      await getModels(",
          "12:       localStorage.token,",
          "13:       $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "14:      )",
          "15:     );",
          "",
          "---------------"
        ],
        "src/routes/(app)/workspace/models/create/+page.svelte||src/routes/(app)/workspace/models/create/+page.svelte": [
          "File: src/routes/(app)/workspace/models/create/+page.svelte -> src/routes/(app)/workspace/models/create/+page.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:    });",
          "44:    if (res) {",
          "46:     toast.success($i18n.t('Model created successfully!'));",
          "47:     await goto('/workspace/models');",
          "48:    }",
          "",
          "[Removed Lines]",
          "45:     await models.set(await getModels(localStorage.token, $settings?.directConnections ?? null));",
          "",
          "[Added Lines]",
          "45:     await models.set(",
          "46:      await getModels(",
          "47:       localStorage.token,",
          "48:       $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "49:      )",
          "50:     );",
          "",
          "---------------"
        ],
        "src/routes/(app)/workspace/models/edit/+page.svelte||src/routes/(app)/workspace/models/edit/+page.svelte": [
          "File: src/routes/(app)/workspace/models/edit/+page.svelte -> src/routes/(app)/workspace/models/edit/+page.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "6:  const i18n = getContext('i18n');",
          "8:  import { page } from '$app/stores';",
          "11:  import { getModelById, updateModelById } from '$lib/apis/models';",
          "",
          "[Removed Lines]",
          "9:  import { models } from '$lib/stores';",
          "",
          "[Added Lines]",
          "9:  import { config, models } from '$lib/stores';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34:   const res = await updateModelById(localStorage.token, modelInfo.id, modelInfo);",
          "36:   if (res) {",
          "38:    toast.success($i18n.t('Model updated successfully'));",
          "39:    await goto('/workspace/models');",
          "40:   }",
          "",
          "[Removed Lines]",
          "37:    await models.set(await getModels(localStorage.token, $settings?.directConnections ?? null));",
          "",
          "[Added Lines]",
          "37:    await models.set(",
          "38:     await getModels(",
          "39:      localStorage.token,",
          "40:      $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "41:     )",
          "42:    );",
          "",
          "---------------"
        ],
        "src/routes/s/[id]/+page.svelte||src/routes/s/[id]/+page.svelte": [
          "File: src/routes/s/[id]/+page.svelte -> src/routes/s/[id]/+page.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "6:  import dayjs from 'dayjs';",
          "9:  import { convertMessagesToHistory, createMessagesList } from '$lib/utils';",
          "11:  import { getChatByShareId, cloneSharedChatById } from '$lib/apis/chats';",
          "",
          "[Removed Lines]",
          "8:  import { settings, chatId, WEBUI_NAME, models } from '$lib/stores';",
          "",
          "[Added Lines]",
          "8:  import { settings, chatId, WEBUI_NAME, models, config } from '$lib/stores';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63:  const loadSharedChat = async () => {",
          "65:   await chatId.set($page.params.id);",
          "66:   chat = await getChatByShareId(localStorage.token, $chatId).catch(async (error) => {",
          "67:    await goto('/');",
          "",
          "[Removed Lines]",
          "64:   await models.set(await getModels(localStorage.token, $settings?.directConnections ?? null));",
          "",
          "[Added Lines]",
          "64:   await models.set(",
          "65:    await getModels(",
          "66:     localStorage.token,",
          "67:     $config?.features?.enable_direct_connetions && ($settings?.directConnections ?? null)",
          "68:    )",
          "69:   );",
          "",
          "---------------"
        ]
      }
    }
  ]
}