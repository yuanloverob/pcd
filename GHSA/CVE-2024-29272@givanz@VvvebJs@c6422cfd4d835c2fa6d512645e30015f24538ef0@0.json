{
  "cve_id": "CVE-2024-29272",
  "cve_desc": "Arbitrary File Upload vulnerability in VvvebJs before version 1.7.5, allows unauthenticated remote attackers to execute arbitrary code and obtain sensitive information via the sanitizeFileName parameter in save.php.",
  "repo": "givanz/VvvebJs",
  "patch_hash": "c6422cfd4d835c2fa6d512645e30015f24538ef0",
  "patch_info": {
    "commit_hash": "c6422cfd4d835c2fa6d512645e30015f24538ef0",
    "repo": "givanz/VvvebJs",
    "commit_url": "https://github.com/givanz/VvvebJs/commit/c6422cfd4d835c2fa6d512645e30015f24538ef0",
    "files": [
      "save.php",
      "scan.php",
      "upload.php"
    ],
    "message": "Fixed vulnerabilities reported by Jo\u00e3o Victor https://github.com/givanz/VvvebJs/issues/339",
    "before_after_code_files": [
      "save.php||save.php",
      "scan.php||scan.php",
      "upload.php||upload.php"
    ]
  },
  "patch_diff": {
    "save.php||save.php": [
      "File: save.php -> save.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "20: define('MAX_FILE_LIMIT', 1024 * 1024 * 2);//2 Megabytes max html file size",
      "22: function sanitizeFileName($file, $allowedExtension = 'html') {",
      "27:  if ($allowedExtension) {",
      "",
      "[Removed Lines]",
      "24:  $file = __DIR__ . '/' . preg_replace('@\\?.*$@' , '', preg_replace('@\\.{2,}@' , '', preg_replace('@[^\\/\\\\a-zA-Z0-9\\-\\._]@', '', $file)));",
      "",
      "[Added Lines]",
      "21: define('ALLOW_PHP', false);//check if saved html contains php tag and don't save if not allowed",
      "22: define('ALLOWED_OEMBED_DOMAINS', [",
      "23:  'https://www.youtube.com/',",
      "24:  'https://www.vimeo.com/',",
      "25:  'https://www.twitter.com/'",
      "26: ]);//load urls only from allowed websites for oembed",
      "29:  $basename = basename($file);",
      "30:  $disallow = ['.htaccess', 'passwd'];",
      "31:  if (in_array($basename, $disallow)) {",
      "32:   showError('Filename not allowed!');",
      "33:   return '';",
      "34:  }",
      "37:  $file = preg_replace('@\\?.*$@' , '', preg_replace('@\\.{2,}@' , '', preg_replace('@[^\\/\\\\a-zA-Z0-9\\-\\._]@', '', $file)));",
      "39:  if ($file) {",
      "40:   $file = __DIR__ . DIRECTORY_SEPARATOR . $file;",
      "41:  } else {",
      "42:   return '';",
      "43:  }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "35:  die($error);",
      "36: }",
      "38: $html   = '';",
      "39: $file   = '';",
      "40: $action = '';",
      "42: if (isset($_POST['startTemplateUrl']) && !empty($_POST['startTemplateUrl'])) {",
      "43:  $startTemplateUrl = sanitizeFileName($_POST['startTemplateUrl']);",
      "45: } else if (isset($_POST['html'])){",
      "46:  $html = substr($_POST['html'], 0, MAX_FILE_LIMIT);",
      "47: }",
      "49: if (isset($_POST['file'])) {",
      "51: }",
      "53: if (isset($_GET['action'])) {",
      "",
      "[Removed Lines]",
      "44:  $html = file_get_contents($startTemplateUrl);",
      "50:  $file = sanitizeFileName($_POST['file'], false);",
      "",
      "[Added Lines]",
      "57: function validOembedUrl($url) {",
      "58:  foreach (ALLOWED_OEMBED_DOMAINS as $domain) {",
      "59:   if (strpos($url, $domain) === 0) {",
      "60:    return true;",
      "61:   }",
      "62:  }",
      "64:  return false;",
      "65: }",
      "73:  $html = '';",
      "74:  if ($startTemplateUrl) {",
      "75:   $html = file_get_contents($startTemplateUrl);",
      "76:  }",
      "79:  if (!ALLOW_PHP) {",
      "81:   if (preg_match('@<\\?php|<\\? |<\\?=|<\\s*script\\s*language\\s*=\\s*\"\\s*php\\s*\"\\s*>@', $html)) {",
      "82:    showError('PHP not allowed!');",
      "83:   }",
      "84:  }",
      "88:  $file = sanitizeFileName($_POST['file']);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "59:  switch ($action) {",
      "60:   case 'rename':",
      "62:    if ($file && $newfile) {",
      "63:     if (rename($file, $newfile)) {",
      "64:      echo \"File '$file' renamed to '$newfile'\";",
      "",
      "[Removed Lines]",
      "61:    $newfile = sanitizeFileName($_POST['newfile'], false);",
      "",
      "[Added Lines]",
      "99:    $newfile = sanitizeFileName($_POST['newfile']);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "85:    if ($type && $name && $html) {",
      "87:     $file = sanitizeFileName(\"$type/$name\");",
      "93:      } else {",
      "100:     } else {",
      "102:     }",
      "103:    } else {",
      "104:     showError(\"Missing reusable element data!\\n\");",
      "105:    }",
      "106:   break;",
      "107:   case 'oembedProxy':",
      "110:   break;",
      "111:   default:",
      "112:    showError(\"Invalid action '$action'!\");",
      "",
      "[Removed Lines]",
      "88:     $dir = dirname($file);",
      "89:     if (!is_dir($dir)) {",
      "90:      echo \"$dir folder does not exist\\n\";",
      "91:      if (mkdir($dir, 0777, true)) {",
      "92:       echo \"$dir folder was created\\n\";",
      "94:       showError(\"Error creating folder '$dir'\\n\");",
      "95:      }",
      "96:     }",
      "98:     if (file_put_contents($file, $html)) {",
      "99:      echo \"File saved '$file'\";",
      "101:      showError(\"Error saving file '$file'\\nPossible causes are missing write permission or incorrect file path!\");",
      "108:    header('Content-Type: application/json');",
      "109:    echo file_get_contents($_GET['url']);",
      "",
      "[Added Lines]",
      "126:     if ($file) {",
      "127:      $dir = dirname($file);",
      "128:      if (!is_dir($dir)) {",
      "129:       echo \"$dir folder does not exist\\n\";",
      "130:       if (mkdir($dir, 0777, true)) {",
      "131:        echo \"$dir folder was created\\n\";",
      "132:       } else {",
      "133:        showError(\"Error creating folder '$dir'\\n\");",
      "134:       }",
      "135:      }",
      "137:      if (file_put_contents($file, $html)) {",
      "138:       echo \"File saved '$file'\";",
      "140:       showError(\"Error saving file '$file'\\nPossible causes are missing write permission or incorrect file path!\");",
      "141:      }",
      "143:      showError('Invalid filename!');",
      "150:    $url = $_GET['url'] ?? '';",
      "151:    if (validOembedUrl($url)) {",
      "152:     header('Content-Type: application/json');",
      "153:     echo file_get_contents($url);",
      "154:    } else {",
      "155:     showError('Invalid url!');",
      "156:    }",
      "",
      "---------------"
    ],
    "scan.php||scan.php": [
      "File: scan.php -> scan.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "24: } else {",
      "25:  define('UPLOAD_PATH', 'media');",
      "26: }",
      "",
      "[Removed Lines]",
      "22: if (isset($_POST['mediaPath'])) {",
      "23:  define('UPLOAD_PATH', $_POST['mediaPath']);",
      "28: $scandir = __DIR__ . '/' . UPLOAD_PATH;",
      "",
      "[Added Lines]",
      "22: function sanitizePath($path) {",
      "24:  $path = preg_replace('@/+@' , DIRECTORY_SEPARATOR, preg_replace('@\\?.*$@' , '', preg_replace('@\\.{2,}@' , '', preg_replace('@[^\\/\\\\a-zA-Z0-9\\-\\._]@', '', $path))));",
      "25:  return $path;",
      "26: }",
      "28: if (isset($_POST['mediaPath']) && ($path = sanitizePath(substr($_POST['mediaPath'], 0, 256)))) {",
      "29:  define('UPLOAD_PATH', $path);",
      "34: $scandir = __DIR__ . DIRECTORY_SEPARATOR. UPLOAD_PATH;",
      "",
      "---------------"
    ],
    "upload.php||upload.php": [
      "File: upload.php -> upload.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "24: $uploadDenyExtensions  = ['php'];",
      "27: function showError($error) {",
      "28:  header($_SERVER['SERVER_PROTOCOL'] . ' 500 Internal Server Error', true, 500);",
      "",
      "[Removed Lines]",
      "25: $uploadAllowExtensions = ['ico','jpg','jpeg','png','gif','webp'];",
      "",
      "[Added Lines]",
      "25: $uploadAllowExtensions = ['ico','jpg','jpeg','png','gif','webp','svg'];",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "32: function sanitizeFileName($file)",
      "33: {",
      "35:  $file = preg_replace('@\\?.*$@' , '', preg_replace('@\\.{2,}@' , '', preg_replace('@[^\\/\\\\a-zA-Z0-9\\-\\._]@', '', $file)));",
      "36:  return $file;",
      "37: }",
      "41: if (isset($_POST['mediaPath'])) {",
      "43: } else {",
      "45: }",
      "48: $extension = strtolower(substr($fileName, strrpos($fileName, '.') + 1));",
      "",
      "[Removed Lines]",
      "40: define('UPLOAD_FOLDER', __DIR__ . '/');",
      "42:  define('UPLOAD_PATH', sanitizeFileName($_POST['mediaPath']) .'/');",
      "44:  define('UPLOAD_PATH', '/');",
      "47: $fileName  = $_FILES['file']['name'];",
      "",
      "[Added Lines]",
      "34:  $disallow = ['.htaccess', 'passwd'];",
      "35:  $file = str_replace($disallow, '', $file);",
      "43: define('UPLOAD_FOLDER', __DIR__ . DIRECTORY_SEPARATOR);",
      "45:  define('UPLOAD_PATH', sanitizeFileName($_POST['mediaPath']) . DIRECTORY_SEPARATOR);",
      "47:  define('UPLOAD_PATH', DIRECTORY_SEPARATOR);",
      "48: }",
      "50: $fileName  = sanitizeFileName($_FILES['file']['name']);",
      "51: if (!$fileName) {",
      "52:  showError('Invalid filename!');",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "52:  showError(\"File type $extension not allowed!\");",
      "53: }",
      "58: if (!in_array($extension, $uploadAllowExtensions)) {",
      "59:  showError(\"File type $extension not allowed!\");",
      "60: }",
      "64: move_uploaded_file($_FILES['file']['tmp_name'], $destination);",
      "66: if (isset($_POST['onlyFilename'])) {",
      "",
      "[Removed Lines]",
      "63: $destination = UPLOAD_FOLDER . UPLOAD_PATH . '/' . $fileName;",
      "",
      "[Added Lines]",
      "68: $destination = UPLOAD_FOLDER . UPLOAD_PATH . DIRECTORY_SEPARATOR . $fileName;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2ac3e7dbc3b17dc69291697290ba45c6859bcdc7",
      "candidate_info": {
        "commit_hash": "2ac3e7dbc3b17dc69291697290ba45c6859bcdc7",
        "repo": "givanz/VvvebJs",
        "commit_url": "https://github.com/givanz/VvvebJs/commit/2ac3e7dbc3b17dc69291697290ba45c6859bcdc7",
        "files": [
          "css/vvvebjs-editor-helpers.css",
          "libs/builder/components-embeds.js",
          "libs/builder/oembed.js",
          "save.php",
          "scss/vvvebjs-editor-helpers.scss"
        ],
        "message": "Oembed load provider javascript to fully render widget, change twitter domain to x, encode url and set user agent to work with certain providers such as reddit.",
        "before_after_code_files": [
          "css/vvvebjs-editor-helpers.css||css/vvvebjs-editor-helpers.css",
          "libs/builder/components-embeds.js||libs/builder/components-embeds.js",
          "libs/builder/oembed.js||libs/builder/oembed.js",
          "save.php||save.php",
          "scss/vvvebjs-editor-helpers.scss||scss/vvvebjs-editor-helpers.scss"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "save.php||save.php"
          ],
          "candidate": [
            "save.php||save.php"
          ]
        }
      },
      "candidate_diff": {
        "css/vvvebjs-editor-helpers.css||css/vvvebjs-editor-helpers.css": [
          "File: css/vvvebjs-editor-helpers.css -> css/vvvebjs-editor-helpers.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "57: Prevents iframe mouse events that prevents clicking on the component",
          "59: [data-component-lottie] > svg,",
          "61: [data-component-video] > iframe,",
          "62: [data-component-maps] > iframe,",
          "63: [data-component-twitter] > iframe,",
          "",
          "[Removed Lines]",
          "60: [data-component-oembed] > iframe,",
          "",
          "[Added Lines]",
          "60: [data-component-oembed] iframe,",
          "61: [data-component-oembed] > div,",
          "",
          "---------------"
        ],
        "libs/builder/components-embeds.js||libs/builder/components-embeds.js": [
          "File: libs/builder/components-embeds.js -> libs/builder/components-embeds.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:   htmlAttr: \"data-url\",",
          "38:         inputtype: TextInput,",
          "39:         onChange: function(node, value) {",
          "43:       <div class=\"spinner-border m-5\" role=\"status\">",
          "44:      <span class=\"visually-hidden\">Loading...</span>",
          "45:       </div>",
          "46:     </div>`;",
          "48:    getOembed(value).then(response => {",
          "50:       let containerW = node.offsetWidth;",
          "57:    }).catch(error => console.log(error));",
          "",
          "[Removed Lines]",
          "40:    let element = node[0];",
          "42:    element.innerHTML = `<div class=\"alert alert-light d-flex justify-content-center\">",
          "49:       element.innerHTML = response.html;",
          "51:       let iframe = element.querySelector(\"iframe\");",
          "52:       let ratio = containerW / iframe.offsetWidth;",
          "54:       iframe.setAttribute(\"width\", (width * ratio));",
          "55:       iframe.setAttribute(\"height\", (height * ratio));",
          "",
          "[Added Lines]",
          "40:    node.innerHTML = `<div class=\"alert alert-light d-flex justify-content-center\">",
          "47:       node.innerHTML = response.html;",
          "49:       let iframe = node.querySelector(\"iframe\");",
          "50:       if (iframe) {",
          "51:        let ratio = containerW / iframe.offsetWidth;",
          "52:        iframe.setAttribute(\"width\", (width * ratio));",
          "53:        iframe.setAttribute(\"height\", (height * ratio));",
          "54:       }",
          "56:       let arr = node.querySelectorAll('script').forEach(script => {",
          "57:       let newScript = Vvveb.Builder.frameDoc.createElement(\"script\");",
          "58:       newScript.src = script.src;",
          "59:       script.replaceWith(newScript);",
          "60:       });",
          "",
          "---------------"
        ],
        "libs/builder/oembed.js||libs/builder/oembed.js": [
          "File: libs/builder/oembed.js -> libs/builder/oembed.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "56:     url: \"https://www.scribd.com/services/oembed\"",
          "57:   },",
          "58:   {",
          "60:     url: \"https://publish.twitter.com/oembed\"",
          "61:   },",
          "62:   {",
          "64:     url: \"https://publish.twitter.com/oembed\"",
          "65:   },",
          "66:   {",
          "68:     url: \"https://publish.twitter.com/oembed\"",
          "69:   },",
          "70:   {",
          "72:     url: \"https://publish.twitter.com/oembed\"",
          "73:   },",
          "74:   {",
          "76:     url: \"https://publish.twitter.com/oembed\"",
          "77:   },",
          "78:   {",
          "80:     url: \"https://publish.twitter.com/oembed\"",
          "81:   },",
          "82:   {",
          "",
          "[Removed Lines]",
          "59:     regex: /https?:\\/\\/(www\\.)?twitter\\.com\\/\\w{1,15}\\/status(es)?\\/.*/,",
          "63:     regex: /https?:\\/\\/(www\\.)?twitter\\.com\\/\\w{1,15}$/,",
          "67:     regex: /https?:\\/\\/(www\\.)?twitter\\.com\\/\\w{1,15}\\/likes$/,",
          "71:     regex: /https?:\\/\\/(www\\.)?twitter\\.com\\/\\w{1,15}\\/lists\\/.*/,",
          "75:     regex: /https?:\\/\\/(www\\.)?twitter\\.com\\/\\w{1,15}\\/timelines\\/.*/,",
          "79:     regex: /https?:\\/\\/(www\\.)?twitter\\.com\\/i\\/moments\\/.*/,",
          "",
          "[Added Lines]",
          "59:     regex: /https?:\\/\\/(www\\.)?x\\.com\\/\\w{1,15}\\/status(es)?\\/.*/,",
          "63:     regex: /https?:\\/\\/(www\\.)?x\\.com\\/\\w{1,15}$/,",
          "67:     regex: /https?:\\/\\/(www\\.)?x\\.com\\/\\w{1,15}\\/likes$/,",
          "71:     regex: /https?:\\/\\/(www\\.)?x\\.com\\/\\w{1,15}\\/lists\\/.*/,",
          "75:     regex: /https?:\\/\\/(www\\.)?x\\.com\\/\\w{1,15}\\/timelines\\/.*/,",
          "79:     regex: /https?:\\/\\/(www\\.)?x\\.com\\/i\\/moments\\/.*/,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "260:   }",
          "261: ];",
          "264:  let oembedUrl;",
          "266:  for (const service of oEmbedProviders) {",
          "267:   if (service.regex.exec(url)) {",
          "269:   }",
          "270:   }",
          "",
          "[Removed Lines]",
          "263: async function getOembed(url, maxwidth = 800, maxheight = 600) {",
          "268:      oembedUrl = service.url + `?url=${url}&maxwidth=${maxwidth}&maxheight=${maxheight}&format=json`;",
          "",
          "[Added Lines]",
          "263: async function getOembed(url, maxwidth = 800, maxheight = 600, silent = false) {",
          "268:      let eurl = encodeURIComponent(url);",
          "269:      oembedUrl = service.url + `?url=${eurl}&maxwidth=${maxwidth}&maxheight=${maxheight}&format=json`;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "289:     return {html: transform};",
          "290:    }",
          "295:    return;",
          "296:   }",
          "",
          "[Removed Lines]",
          "292:    let message = 'Embed error: URL did not match any provider.';",
          "293:    displayToast(\"bg-danger\", \"Error\", message);",
          "",
          "[Added Lines]",
          "293:    if (!silent) {",
          "294:     let message = 'Embed error: URL did not match any provider.';",
          "295:     displayToast(\"bg-danger\", \"Error\", message);",
          "296:    }",
          "",
          "---------------"
        ],
        "save.php||save.php": [
          "File: save.php -> save.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: define('ALLOWED_OEMBED_DOMAINS', [",
          "23:  'https://www.youtube.com/',",
          "24:  'https://www.vimeo.com/',",
          "26: ]);//load urls only from allowed websites for oembed",
          "28: function sanitizeFileName($file, $allowedExtension = 'html') {",
          "",
          "[Removed Lines]",
          "25:  'https://www.twitter.com/'",
          "",
          "[Added Lines]",
          "25:  'https://www.x.com/',",
          "26:  'https://x.com/',",
          "27:  'https://publish.twitter.com/',",
          "28:  'https://www.twitter.com/',",
          "29:  'https://www.reddit.com/',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "149:   case 'oembedProxy':",
          "150:    $url = $_GET['url'] ?? '';",
          "151:    if (validOembedUrl($url)) {",
          "152:     header('Content-Type: application/json');",
          "154:    } else {",
          "155:     showError('Invalid url!');",
          "156:    }",
          "",
          "[Removed Lines]",
          "153:     echo file_get_contents($url);",
          "",
          "[Added Lines]",
          "156:     $options = array(",
          "157:       'http'=>array(",
          "158:      'method'=>\"GET\",",
          "159:      'header'=> 'User-Agent: ' . $_SERVER['HTTP_USER_AGENT'] . \"\\r\\n\"",
          "160:       )",
          "161:     );",
          "162:     $context = stream_context_create($options);",
          "164:     echo file_get_contents($url, false, $context );",
          "",
          "---------------"
        ],
        "scss/vvvebjs-editor-helpers.scss||scss/vvvebjs-editor-helpers.scss": [
          "File: scss/vvvebjs-editor-helpers.scss -> scss/vvvebjs-editor-helpers.scss",
          "--- Hunk 1 ---",
          "[Context before]",
          "64: Prevents iframe mouse events that prevents clicking on the component",
          "66: [data-component-lottie] > svg,",
          "68: [data-component-video] > iframe,",
          "69: [data-component-maps] > iframe,",
          "70: [data-component-twitter] > iframe,",
          "",
          "[Removed Lines]",
          "67: [data-component-oembed] > iframe,",
          "",
          "[Added Lines]",
          "67: [data-component-oembed] iframe,",
          "68: [data-component-oembed] > div,",
          "",
          "---------------"
        ]
      }
    }
  ]
}