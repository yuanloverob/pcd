{
  "cve_id": "CVE-2024-8060",
  "cve_desc": "OpenWebUI version 0.3.0 contains a vulnerability in the audio API endpoint `/audio/api/v1/transcriptions` that allows for arbitrary file upload. The application performs insufficient validation on the `file.content_type` and allows user-controlled filenames, leading to a path traversal vulnerability. This can be exploited by an authenticated user to overwrite critical files within the Docker container, potentially leading to remote code execution as the root user.",
  "repo": "open-webui/open-webui",
  "patch_hash": "613a087387c094e71ee91d29c015195ef401e160",
  "patch_info": {
    "commit_hash": "613a087387c094e71ee91d29c015195ef401e160",
    "repo": "open-webui/open-webui",
    "commit_url": "https://github.com/open-webui/open-webui/commit/613a087387c094e71ee91d29c015195ef401e160",
    "files": [
      "backend/open_webui/routers/audio.py"
    ],
    "message": "refac",
    "before_after_code_files": [
      "backend/open_webui/routers/audio.py||backend/open_webui/routers/audio.py"
    ]
  },
  "patch_diff": {
    "backend/open_webui/routers/audio.py||backend/open_webui/routers/audio.py": [
      "File: backend/open_webui/routers/audio.py -> backend/open_webui/routers/audio.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "681:     available_models = []",
      "682:     if request.app.state.config.TTS_ENGINE == \"openai\":",
      "683:         # Use custom endpoint if not using the official OpenAI API URL",
      "685:             try:",
      "687:                 response.raise_for_status()",
      "688:                 data = response.json()",
      "689:                 available_models = data.get(\"models\", [])",
      "690:             except Exception as e:",
      "691:                 log.error(f\"Error fetching models from custom endpoint: {str(e)}\")",
      "693:         else:",
      "694:             available_models = [{\"id\": \"tts-1\"}, {\"id\": \"tts-1-hd\"}]",
      "695:     elif request.app.state.config.TTS_ENGINE == \"elevenlabs\":",
      "",
      "[Removed Lines]",
      "684:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(\"https://api.openai.com\"):",
      "686:                 response = requests.get(f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/models\")",
      "692:                 available_models = []",
      "",
      "[Added Lines]",
      "684:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(",
      "685:             \"https://api.openai.com\"",
      "686:         ):",
      "688:                 response = requests.get(",
      "689:                     f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/models\"",
      "690:                 )",
      "696:                 available_models = [{\"id\": \"tts-1\"}, {\"id\": \"tts-1-hd\"}]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "723:     available_voices = {}",
      "724:     if request.app.state.config.TTS_ENGINE == \"openai\":",
      "725:         # Use custom endpoint if not using the official OpenAI API URL",
      "727:             try:",
      "729:                 response.raise_for_status()",
      "730:                 data = response.json()",
      "731:                 voices_list = data.get(\"voices\", [])",
      "732:                 available_voices = {voice[\"id\"]: voice[\"name\"] for voice in voices_list}",
      "733:             except Exception as e:",
      "734:                 log.error(f\"Error fetching voices from custom endpoint: {str(e)}\")",
      "736:         else:",
      "737:             available_voices = {",
      "738:                 \"alloy\": \"alloy\",",
      "",
      "[Removed Lines]",
      "726:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(\"https://api.openai.com\"):",
      "728:                 response = requests.get(f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/voices\")",
      "735:                 available_voices = {}",
      "",
      "[Added Lines]",
      "730:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(",
      "731:             \"https://api.openai.com\"",
      "732:         ):",
      "734:                 response = requests.get(",
      "735:                     f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/voices\"",
      "736:                 )",
      "743:                 available_voices = {",
      "744:                     \"alloy\": \"alloy\",",
      "745:                     \"echo\": \"echo\",",
      "746:                     \"fable\": \"fable\",",
      "747:                     \"onyx\": \"onyx\",",
      "748:                     \"nova\": \"nova\",",
      "749:                     \"shimmer\": \"shimmer\",",
      "750:                 }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4fcf0caa4de6eb88ceb0661066e8bdf6eed495ab",
      "candidate_info": {
        "commit_hash": "4fcf0caa4de6eb88ceb0661066e8bdf6eed495ab",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/4fcf0caa4de6eb88ceb0661066e8bdf6eed495ab",
        "files": [
          "src/lib/components/chat/Chat.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/chat/Chat.svelte||src/lib/components/chat/Chat.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/chat/Chat.svelte||src/lib/components/chat/Chat.svelte": [
          "File: src/lib/components/chat/Chat.svelte -> src/lib/components/chat/Chat.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "1829:  }}",
          "1830: />",
          "1839:   {#if $settings?.backgroundImageUrl ?? null}",
          "1840:    <div",
          "1841:     class=\"absolute {$showSidebar",
          "",
          "[Removed Lines]",
          "1832: {#if !chatIdProp || (loaded && chatIdProp)}",
          "1833:  <div",
          "1834:   class=\"h-screen max-h-[100dvh] transition-width duration-200 ease-in-out {$showSidebar",
          "1835:    ? '  md:max-w-[calc(100%-260px)]'",
          "1836:    : ' '} w-full max-w-full flex flex-col\"",
          "1837:   id=\"chat-container\"",
          "1838:  >",
          "",
          "[Added Lines]",
          "1832: <div",
          "1833:  class=\"h-screen max-h-[100dvh] transition-width duration-200 ease-in-out {$showSidebar",
          "1834:   ? '  md:max-w-[calc(100%-260px)]'",
          "1835:   : ' '} w-full max-w-full flex flex-col\"",
          "1836:  id=\"chat-container\"",
          "1837: >",
          "1838:  {#if !chatIdProp || (loaded && chatIdProp)}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2037:     {eventTarget}",
          "2038:    />",
          "2039:   </PaneGroup>",
          "",
          "[Removed Lines]",
          "2040:  </div>",
          "2041: {/if}",
          "",
          "[Added Lines]",
          "2040:  {/if}",
          "2041: </div>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9809ffb09579481ca82572262e76ae19448e7009",
      "candidate_info": {
        "commit_hash": "9809ffb09579481ca82572262e76ae19448e7009",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/9809ffb09579481ca82572262e76ae19448e7009",
        "files": [
          "src/lib/components/chat/MessageInput/Commands/Prompts.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/chat/MessageInput/Commands/Prompts.svelte||src/lib/components/chat/MessageInput/Commands/Prompts.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/chat/MessageInput/Commands/Prompts.svelte||src/lib/components/chat/MessageInput/Commands/Prompts.svelte": [
          "File: src/lib/components/chat/MessageInput/Commands/Prompts.svelte -> src/lib/components/chat/MessageInput/Commands/Prompts.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:    text = text.replaceAll('{{CURRENT_WEEKDAY}}', weekday);",
          "121:   }",
          "134:   const chatInputContainerElement = document.getElementById('chat-input-container');",
          "135:   const chatInputElement = document.getElementById('chat-input');",
          "",
          "[Removed Lines]",
          "123:   const paragraphs = prompt.split('\\n');",
          "125:   let lastParagraph = paragraphs.pop();",
          "126:   const promptWords = lastParagraph.split(' ');",
          "128:   promptWords.pop();",
          "129:   promptWords.push(`${text}`);",
          "131:   lastParagraph = promptWords.join(' ');",
          "132:   prompt = $settings?.richTextInput ? paragraphs.join('<br/>') : paragraphs.join('\\n');",
          "",
          "[Added Lines]",
          "123:   const lines = prompt.split('\\n');",
          "124:   const lastLine = lines.pop();",
          "126:   const lastLineWords = lastLine.split(' ');",
          "127:   const lastWord = lastLineWords.pop();",
          "129:   lastLineWords.push(text);",
          "130:   lines.push(lastLineWords.join(' '));",
          "132:   prompt = lines.join('\\n');",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c2046b9247e34f296b9bf5631de8f39b6ffff1e0",
      "candidate_info": {
        "commit_hash": "c2046b9247e34f296b9bf5631de8f39b6ffff1e0",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/c2046b9247e34f296b9bf5631de8f39b6ffff1e0",
        "files": [
          "src/lib/components/common/ImagePreview.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/common/ImagePreview.svelte||src/lib/components/common/ImagePreview.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/common/ImagePreview.svelte||src/lib/components/common/ImagePreview.svelte": [
          "File: src/lib/components/common/ImagePreview.svelte -> src/lib/components/common/ImagePreview.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "86:    <div>",
          "87:     <button",
          "88:      class=\" p-5\"",
          "90:       show = false;",
          "91:      }}",
          "92:     >",
          "",
          "[Removed Lines]",
          "89:      on:click={() => {",
          "",
          "[Added Lines]",
          "89:      on:pointerdown={(e) => {",
          "90:       e.stopImmediatePropagation();",
          "91:       e.preventDefault();",
          "92:       show = false;",
          "93:      }}",
          "94:      on:click={(e) => {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "106:    <div>",
          "107:     <button",
          "108:      class=\" p-5\"",
          "110:       downloadImage(src, src.substring(src.lastIndexOf('/') + 1), alt);",
          "111:      }}",
          "112:     >",
          "",
          "[Removed Lines]",
          "109:      on:click={() => {",
          "",
          "[Added Lines]",
          "114:      on:pointerdown={(e) => {",
          "115:       e.stopImmediatePropagation();",
          "116:       e.preventDefault();",
          "117:       downloadImage(src, src.substring(src.lastIndexOf('/') + 1), alt);",
          "118:      }}",
          "119:      on:click={(e) => {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5119cc47fc130bb338198007d9c82486a2bab77f",
      "candidate_info": {
        "commit_hash": "5119cc47fc130bb338198007d9c82486a2bab77f",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/5119cc47fc130bb338198007d9c82486a2bab77f",
        "files": [
          "src/lib/utils/index.ts"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/utils/index.ts||src/lib/utils/index.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/utils/index.ts||src/lib/utils/index.ts": [
          "File: src/lib/utils/index.ts -> src/lib/utils/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:   if (Array.isArray(sourceIds)) {",
          "65:    sourceIds.forEach((sourceId, idx) => {",
          "67:     segment = segment.replace(regex, `<source_id data=\"${idx + 1}\" title=\"${sourceId}\" />`);",
          "68:    });",
          "69:   }",
          "",
          "[Removed Lines]",
          "66:     const regex = new RegExp(`\\\\[${idx}\\\\]`, 'g');",
          "",
          "[Added Lines]",
          "66:     const regex = new RegExp(`\\\\[${idx + 1}\\\\]`, 'g');",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c062353a3f0aab94c20a8fab6c7eae381569022f",
      "candidate_info": {
        "commit_hash": "c062353a3f0aab94c20a8fab6c7eae381569022f",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/c062353a3f0aab94c20a8fab6c7eae381569022f",
        "files": [
          "backend/open_webui/functions.py"
        ],
        "message": "refac",
        "before_after_code_files": [
          "backend/open_webui/functions.py||backend/open_webui/functions.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "backend/open_webui/functions.py||backend/open_webui/functions.py": [
          "File: backend/open_webui/functions.py -> backend/open_webui/functions.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "223:     extra_params = {",
          "224:         \"__event_emitter__\": __event_emitter__,",
          "225:         \"__event_call__\": __event_call__,",
          "226:         \"__task__\": __task__,",
          "227:         \"__task_body__\": __task_body__,",
          "228:         \"__files__\": files,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "226:         \"__chat_id__\": metadata.get(\"chat_id\", None),",
          "227:         \"__session_id__\": metadata.get(\"session_id\", None),",
          "228:         \"__message_id__\": metadata.get(\"message_id\", None),",
          "",
          "---------------"
        ]
      }
    }
  ]
}