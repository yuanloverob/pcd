{
  "cve_id": "CVE-2024-28236",
  "cve_desc": "Vela is a Pipeline Automation (CI/CD) framework built on Linux container technology written in Golang. Vela pipelines can use variable substitution combined with insensitive fields like `parameters`, `image` and `entrypoint` to inject secrets into a plugin/image and \u2014 by using common substitution string manipulation \u2014 can bypass log masking and expose secrets without the use of the commands block. This unexpected behavior primarily impacts secrets restricted by the \"no commands\" option. This can lead to unintended use of the secret value, and increased risk of exposing the secret during image execution bypassing log masking. **To exploit this** the pipeline author must be supplying the secrets to a plugin that is designed in such a way that will print those parameters in logs. Plugin parameters are not designed for sensitive values and are often intentionally printed throughout execution for informational/debugging purposes. Parameters should therefore be treated as insensitive. While Vela provides secrets masking, secrets exposure is not entirely solved by the masking process. A docker image (plugin) can easily expose secrets if they are not handled properly, or altered in some way. There is a responsibility on the end-user to understand how values injected into a plugin are used. This is a risk that exists for many CICD systems (like GitHub Actions) that handle sensitive runtime variables. Rather, the greater risk is that users who restrict a secret to the \"no commands\" option and use image restriction can still have their secret value exposed via substitution tinkering, which turns the image and command restrictions into a false sense of security. This issue has been addressed in version 0.23.2. Users are advised to upgrade. Users unable to upgrade should not provide sensitive values to plugins that can potentially expose them, especially in `parameters` that are not intended to be used for sensitive values, ensure plugins (especially those that utilize shared secrets) follow best practices to avoid logging parameters that are expected to be sensitive, minimize secrets with `pull_request` events enabled, as this allows users to change pipeline configurations and pull in secrets to steps not typically part of the CI process, make use of the build approval setting, restricting builds from untrusted users, and limit use of shared secrets, as they are less restrictive to access by nature.",
  "repo": "go-vela/worker",
  "patch_hash": "e1572743b008e4fbce31ebb1dcd23bf6a1a30297",
  "patch_info": {
    "commit_hash": "e1572743b008e4fbce31ebb1dcd23bf6a1a30297",
    "repo": "go-vela/worker",
    "commit_url": "https://github.com/go-vela/worker/commit/e1572743b008e4fbce31ebb1dcd23bf6a1a30297",
    "files": [
      "executor/linux/build.go",
      "executor/linux/linux.go",
      "executor/linux/secret.go",
      "executor/linux/service.go",
      "executor/linux/step.go",
      "go.mod",
      "go.sum"
    ],
    "message": "Merge pull request from GHSA-pwx5-6wxg-px5h\n\n* fix(secrets): split env injection based on allow_substitution value\n\n* upgrade sdk server and types",
    "before_after_code_files": [
      "executor/linux/build.go||executor/linux/build.go",
      "executor/linux/linux.go||executor/linux/linux.go",
      "executor/linux/secret.go||executor/linux/secret.go",
      "executor/linux/service.go||executor/linux/service.go",
      "executor/linux/step.go||executor/linux/step.go",
      "go.mod||go.mod",
      "go.sum||go.sum"
    ]
  },
  "patch_diff": {
    "executor/linux/build.go||executor/linux/build.go": [
      "File: executor/linux/build.go -> executor/linux/build.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "200:   _log.AppendData(append(sRaw, \"\\n\"...))",
      "204:  }",
      "",
      "[Removed Lines]",
      "203:   c.Secrets[secret.Name] = s",
      "",
      "[Added Lines]",
      "203:   if s.GetAllowSubstitution() {",
      "204:    c.Secrets[secret.Name] = s",
      "205:   } else {",
      "206:    c.NoSubSecrets[secret.Name] = s",
      "207:   }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "699:  _log := new(library.Log)",
      "701:  lazySecrets := make(map[string]*library.Secret)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "706:  lazyNoSubSecrets := make(map[string]*library.Secret)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "797:     return err",
      "798:    }",
      "802:   }",
      "803:  }",
      "",
      "[Removed Lines]",
      "801:    lazySecrets[secret.Name] = s",
      "",
      "[Added Lines]",
      "806:    if s.GetAllowSubstitution() {",
      "807:     lazySecrets[secret.Name] = s",
      "808:    } else {",
      "809:     lazyNoSubSecrets[secret.Name] = s",
      "810:    }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "836:    return err",
      "837:   }",
      "839:   c.Logger.Debug(\"merge lazy loaded secrets into container\")",
      "841:   err = _step.MergeEnv(tmpStep.Environment)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "848:   c.Logger.Debug(\"injecting no-sub lazy loaded secrets\")",
      "850:   err = injectSecrets(tmpStep, lazyNoSubSecrets)",
      "851:   if err != nil {",
      "852:    return err",
      "853:   }",
      "",
      "---------------"
    ],
    "executor/linux/linux.go||executor/linux/linux.go": [
      "File: executor/linux/linux.go -> executor/linux/linux.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "20:  client struct {",
      "30:   secret *secretSvc",
      "",
      "[Removed Lines]",
      "22:   Logger   *logrus.Entry",
      "23:   Vela     *vela.Client",
      "24:   Runtime  runtime.Engine",
      "25:   Secrets  map[string]*library.Secret",
      "26:   Hostname string",
      "27:   Version  string",
      "",
      "[Added Lines]",
      "22:   Logger       *logrus.Entry",
      "23:   Vela         *vela.Client",
      "24:   Runtime      runtime.Engine",
      "25:   Secrets      map[string]*library.Secret",
      "26:   NoSubSecrets map[string]*library.Secret",
      "27:   Hostname     string",
      "28:   Version      string",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "67:   reflect.DeepEqual(a.Vela, b.Vela) &&",
      "68:   reflect.DeepEqual(a.Runtime, b.Runtime) &&",
      "69:   reflect.DeepEqual(a.Secrets, b.Secrets) &&",
      "70:   a.Hostname == b.Hostname &&",
      "71:   a.Version == b.Version &&",
      "72:   reflect.DeepEqual(a.init, b.init) &&",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "71:   reflect.DeepEqual(a.NoSubSecrets, b.NoSubSecrets) &&",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "119:  c.Secrets = make(map[string]*library.Secret)",
      "122:  c.secret = &secretSvc{client: c}",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "124:  c.NoSubSecrets = make(map[string]*library.Secret)",
      "",
      "---------------"
    ],
    "executor/linux/secret.go||executor/linux/secret.go": [
      "File: executor/linux/secret.go -> executor/linux/secret.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "67:   return fmt.Errorf(\"unable to substitute container configuration\")",
      "68:  }",
      "70:  return nil",
      "71: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "70:  logger.Debug(\"injecting non-substituted secrets\")",
      "72:  err = injectSecrets(ctn, s.client.NoSubSecrets)",
      "73:  if err != nil {",
      "74:   return err",
      "75:  }",
      "",
      "---------------"
    ],
    "executor/linux/service.go||executor/linux/service.go": [
      "File: executor/linux/service.go -> executor/linux/service.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "55:   return fmt.Errorf(\"unable to substitute container configuration\")",
      "56:  }",
      "58:  return nil",
      "59: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "58:  logger.Debug(\"injecting non-substituted secrets\")",
      "60:  err = injectSecrets(ctn, c.NoSubSecrets)",
      "61:  if err != nil {",
      "62:   return err",
      "63:  }",
      "",
      "---------------"
    ],
    "executor/linux/step.go||executor/linux/step.go": [
      "File: executor/linux/step.go -> executor/linux/step.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "65:   return fmt.Errorf(\"unable to substitute container configuration\")",
      "66:  }",
      "68:  return nil",
      "69: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "68:  logger.Debug(\"injecting non-substituted secrets\")",
      "70:  err = injectSecrets(ctn, c.NoSubSecrets)",
      "71:  if err != nil {",
      "72:   return err",
      "73:  }",
      "",
      "---------------"
    ],
    "go.mod||go.mod": [
      "File: go.mod -> go.mod",
      "--- Hunk 1 ---",
      "[Context before]",
      "8:  github.com/docker/docker v24.0.9+incompatible",
      "9:  github.com/docker/go-units v0.5.0",
      "10:  github.com/gin-gonic/gin v1.9.1",
      "14:  github.com/golang-jwt/jwt/v5 v5.2.0",
      "15:  github.com/google/go-cmp v0.6.0",
      "16:  github.com/joho/godotenv v1.5.1",
      "",
      "[Removed Lines]",
      "11:  github.com/go-vela/sdk-go v0.23.1",
      "12:  github.com/go-vela/server v0.23.1",
      "13:  github.com/go-vela/types v0.23.1",
      "",
      "[Added Lines]",
      "11:  github.com/go-vela/sdk-go v0.23.2-0.20240312184917-e3a34719badf",
      "12:  github.com/go-vela/server v0.23.2-0.20240312184244-a645c822da1d",
      "13:  github.com/go-vela/types v0.23.2-0.20240312183632-2e046fceb8fe",
      "",
      "---------------"
    ],
    "go.sum||go.sum": [
      "File: go.sum -> go.sum",
      "--- Hunk 1 ---",
      "[Context before]",
      "94: github.com/go-playground/validator/v10 v10.14.0/go.mod h1:9iXMNT7sEkjXb0I+enO7QXmzG6QCsPWY4zveKFVRSyU=",
      "95: github.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572 h1:tfuBGBXKqDEevZMzYi5KSi8KkcZtzBcTgAUUtapy0OI=",
      "96: github.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572/go.mod h1:9Pwr4B2jHnOSGXyyzV8ROjYa2ojvAY6HCGYYfMoC3Ls=",
      "103: github.com/goccy/go-json v0.10.2 h1:CrxCmQqYDkv1z7lO7Wbh2HN93uovUHgrECaO5ZrCXAU=",
      "104: github.com/goccy/go-json v0.10.2/go.mod h1:6MelG93GURQebXPDq3khkgXZkazVtN9CRI+MGFi0w8I=",
      "105: github.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=",
      "",
      "[Removed Lines]",
      "97: github.com/go-vela/sdk-go v0.23.1 h1:4KxfAF1vR8DvtRraBoWQDIm8f8zxXP806lJR3MmTlC8=",
      "98: github.com/go-vela/sdk-go v0.23.1/go.mod h1:zDsZIePtBdpCZwmwAWqGWuIch/oGliX1zd51PARTHBk=",
      "99: github.com/go-vela/server v0.23.1 h1:Y+mGfB79RjIgQ3IEkPjGB6IneB2So3ZXE4XKY+Z02xc=",
      "100: github.com/go-vela/server v0.23.1/go.mod h1:B+A5lRPOlAVYyXBMGCAJKhPQOlfJuWl3qaRcvhsUqSA=",
      "101: github.com/go-vela/types v0.23.1 h1:st4BeDcYVyaaFqblU1YroztNvmYLBgmfZpWq0En0Sg0=",
      "102: github.com/go-vela/types v0.23.1/go.mod h1:AAqgxIw1aRBgPkE/5juGuiwh/JZuOtL8fcPaEkjFWwQ=",
      "",
      "[Added Lines]",
      "97: github.com/go-vela/sdk-go v0.23.2-0.20240312184917-e3a34719badf h1:8Oka4tMHOdy/DsInyg7c/XPY5wqWWE7Yvzx/u67WBuw=",
      "98: github.com/go-vela/sdk-go v0.23.2-0.20240312184917-e3a34719badf/go.mod h1:XjrVfIDw2SZDFBtJ5vqVse/GFj89MF542N20P8U5a3I=",
      "99: github.com/go-vela/server v0.23.2-0.20240312184244-a645c822da1d h1:VynpkAIMt3KTh9BaICQdpu6c76/hHU3d4/Ab44bmFew=",
      "100: github.com/go-vela/server v0.23.2-0.20240312184244-a645c822da1d/go.mod h1:EsDVTqQHQ9snXG2DhUl9uo4+Cf/b9nMiESCkxSjmP90=",
      "101: github.com/go-vela/types v0.23.2-0.20240312183632-2e046fceb8fe h1:Fb28yre0nrX1GNeyPN8i8rruTlW8MnPVF3Fo5xTuOkg=",
      "102: github.com/go-vela/types v0.23.2-0.20240312183632-2e046fceb8fe/go.mod h1:AAqgxIw1aRBgPkE/5juGuiwh/JZuOtL8fcPaEkjFWwQ=",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c804ab35a6e66064c1f4541f9badffbfd25be7f4",
      "candidate_info": {
        "commit_hash": "c804ab35a6e66064c1f4541f9badffbfd25be7f4",
        "repo": "go-vela/worker",
        "commit_url": "https://github.com/go-vela/worker/commit/c804ab35a6e66064c1f4541f9badffbfd25be7f4",
        "files": [
          "go.mod",
          "go.sum"
        ],
        "message": "chore(release): upgrade types, server, sdk to v0.22.0 (#540)",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ],
          "candidate": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ]
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:  github.com/docker/docker v24.0.7+incompatible",
          "9:  github.com/docker/go-units v0.5.0",
          "10:  github.com/gin-gonic/gin v1.9.1",
          "14:  github.com/golang-jwt/jwt/v5 v5.1.0",
          "15:  github.com/google/go-cmp v0.6.0",
          "16:  github.com/joho/godotenv v1.5.1",
          "",
          "[Removed Lines]",
          "11:  github.com/go-vela/sdk-go v0.22.0-rc2",
          "12:  github.com/go-vela/server v0.22.0-rc2",
          "13:  github.com/go-vela/types v0.22.0-rc2",
          "",
          "[Added Lines]",
          "11:  github.com/go-vela/sdk-go v0.22.0",
          "12:  github.com/go-vela/server v0.22.0",
          "13:  github.com/go-vela/types v0.22.0",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "71:  github.com/hashicorp/errwrap v1.1.0 // indirect",
          "72:  github.com/hashicorp/go-cleanhttp v0.5.2 // indirect",
          "73:  github.com/hashicorp/go-multierror v1.1.1 // indirect",
          "75:  github.com/huandu/xstrings v1.3.3 // indirect",
          "76:  github.com/imdario/mergo v0.3.13 // indirect",
          "77:  github.com/josharian/intern v1.0.0 // indirect",
          "",
          "[Removed Lines]",
          "74:  github.com/hashicorp/go-retryablehttp v0.7.4 // indirect",
          "",
          "[Added Lines]",
          "74:  github.com/hashicorp/go-retryablehttp v0.7.5 // indirect",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "106:  github.com/yuin/gopher-lua v1.1.0 // indirect",
          "107:  go.starlark.net v0.0.0-20231101134539-556fd59b42f6 // indirect",
          "108:  golang.org/x/arch v0.3.0 // indirect",
          "110:  golang.org/x/mod v0.11.0 // indirect",
          "116:  golang.org/x/time v0.3.0 // indirect",
          "117:  golang.org/x/tools v0.10.0 // indirect",
          "118:  google.golang.org/appengine v1.6.7 // indirect",
          "",
          "[Removed Lines]",
          "109:  golang.org/x/crypto v0.14.0 // indirect",
          "111:  golang.org/x/net v0.17.0 // indirect",
          "112:  golang.org/x/oauth2 v0.13.0 // indirect",
          "113:  golang.org/x/sys v0.13.0 // indirect",
          "114:  golang.org/x/term v0.13.0 // indirect",
          "115:  golang.org/x/text v0.13.0 // indirect",
          "",
          "[Added Lines]",
          "109:  golang.org/x/crypto v0.15.0 // indirect",
          "111:  golang.org/x/net v0.18.0 // indirect",
          "112:  golang.org/x/oauth2 v0.14.0 // indirect",
          "113:  golang.org/x/sys v0.14.0 // indirect",
          "114:  golang.org/x/term v0.14.0 // indirect",
          "115:  golang.org/x/text v0.14.0 // indirect",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "149: github.com/go-playground/validator/v10 v10.14.0/go.mod h1:9iXMNT7sEkjXb0I+enO7QXmzG6QCsPWY4zveKFVRSyU=",
          "150: github.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572 h1:tfuBGBXKqDEevZMzYi5KSi8KkcZtzBcTgAUUtapy0OI=",
          "151: github.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572/go.mod h1:9Pwr4B2jHnOSGXyyzV8ROjYa2ojvAY6HCGYYfMoC3Ls=",
          "158: github.com/goccy/go-json v0.10.2 h1:CrxCmQqYDkv1z7lO7Wbh2HN93uovUHgrECaO5ZrCXAU=",
          "159: github.com/goccy/go-json v0.10.2/go.mod h1:6MelG93GURQebXPDq3khkgXZkazVtN9CRI+MGFi0w8I=",
          "160: github.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=",
          "",
          "[Removed Lines]",
          "152: github.com/go-vela/sdk-go v0.22.0-rc2 h1:vTPL8AgS+G8iILuMEVNZA+DGV2QivWEDTOARmP9pToo=",
          "153: github.com/go-vela/sdk-go v0.22.0-rc2/go.mod h1:4XAH46Agx+/99K2riFGWtjN3riJjJPKJx8XdQo8zEAk=",
          "154: github.com/go-vela/server v0.22.0-rc2 h1:cGseT7Ik6KZgwmMpY1LylMfpjwrciRYfUOjVPhQ+jSQ=",
          "155: github.com/go-vela/server v0.22.0-rc2/go.mod h1:9wynd7qeetC46cETd39wEaseHdvwqMfN5yiohxvFVg0=",
          "156: github.com/go-vela/types v0.22.0-rc2 h1:LbdFnFnOejpCQFolf5oLNKPEJKMFvolmH5aH7jUCAFc=",
          "157: github.com/go-vela/types v0.22.0-rc2/go.mod h1:ljNY36D6YkpObBbNF7Xslv3oxN4mGuQAwWhnnK/V06I=",
          "",
          "[Added Lines]",
          "152: github.com/go-vela/sdk-go v0.22.0 h1:zuFa9BVACP5d5hwbm1o4DVny4amcweGYJgSBDV6En8o=",
          "153: github.com/go-vela/sdk-go v0.22.0/go.mod h1:7N0SW+5L4iboP+B6VQ2PlKvW5Tcj/8zRXJVob9nrSko=",
          "154: github.com/go-vela/server v0.22.0 h1:zzr7g7sm2Z2mn8hAGlD3wqFHzj8rnQCb4KiCIjTyX1I=",
          "155: github.com/go-vela/server v0.22.0/go.mod h1:DidWsP+FCWot5ePim0jjvQqhaheOKjSMoVtAfXeNTyU=",
          "156: github.com/go-vela/types v0.22.0 h1:JmAQ9Hy4HnOgbgNsNz5x1wu3Myv47KoC0rxR9x36OQ4=",
          "157: github.com/go-vela/types v0.22.0/go.mod h1:ljNY36D6YkpObBbNF7Xslv3oxN4mGuQAwWhnnK/V06I=",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "248: github.com/hashicorp/go-hclog v0.9.2/go.mod h1:5CU+agLiy3J7N7QjHK5d05KxGsuXiQLrjA0H7acj2lQ=",
          "249: github.com/hashicorp/go-multierror v1.1.1 h1:H5DkEtf6CXdFp0N0Em5UCwQpXMWke8IA0+lD48awMYo=",
          "250: github.com/hashicorp/go-multierror v1.1.1/go.mod h1:iw975J/qwKPdAO1clOe2L8331t/9/fmwbPZ6JB6eMoM=",
          "253: github.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=",
          "254: github.com/hashicorp/golang-lru v0.5.1/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=",
          "255: github.com/huandu/xstrings v1.3.3 h1:/Gcsuc1x8JVbJ9/rlye4xZnVAbEkGauT8lbebqcQws4=",
          "",
          "[Removed Lines]",
          "251: github.com/hashicorp/go-retryablehttp v0.7.4 h1:ZQgVdpTdAL7WpMIwLzCfbalOcSUdkDZnpUv3/+BxzFA=",
          "252: github.com/hashicorp/go-retryablehttp v0.7.4/go.mod h1:Jy/gPYAdjqffZ/yFGCFV2doI5wjtH1ewM9u8iYVjtX8=",
          "",
          "[Added Lines]",
          "251: github.com/hashicorp/go-retryablehttp v0.7.5 h1:bJj+Pj19UZMIweq/iie+1u5YCdGrnxCT9yvm0e+Nd5M=",
          "252: github.com/hashicorp/go-retryablehttp v0.7.5/go.mod h1:Jy/gPYAdjqffZ/yFGCFV2doI5wjtH1ewM9u8iYVjtX8=",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "398: golang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=",
          "399: golang.org/x/crypto v0.0.0-20220722155217-630584e8d5aa/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=",
          "400: golang.org/x/crypto v0.3.0/go.mod h1:hebNnKkNXi2UzZN1eVRvBB7co0a+JxK6XbPiWVs/3J4=",
          "403: golang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=",
          "404: golang.org/x/exp v0.0.0-20190306152737-a1d7652674e8/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=",
          "405: golang.org/x/exp v0.0.0-20190510132918-efd6b22b2522/go.mod h1:ZjyILWgesfNpC6sMxTJOJm9Kp84zZh5NQWvqDGG3Qr8=",
          "",
          "[Removed Lines]",
          "401: golang.org/x/crypto v0.14.0 h1:wBqGXzWJW6m1XrIKlAH0Hs1JJ7+9KBwnIO8v66Q9cHc=",
          "402: golang.org/x/crypto v0.14.0/go.mod h1:MVFd36DqK4CsrnJYDkBA3VC4m2GkXAM0PvzMCn4JQf4=",
          "",
          "[Added Lines]",
          "401: golang.org/x/crypto v0.15.0 h1:frVn1TEaCEaZcn3Tmd7Y2b5KKPaZ+I32Q2OA3kYp5TA=",
          "402: golang.org/x/crypto v0.15.0/go.mod h1:4ChreQoLWfG3xLDer1WdlH5NdlQ3+mwnQq1YTKY+72g=",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "470: golang.org/x/net v0.0.0-20211112202133-69e39bad7dc2/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=",
          "471: golang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=",
          "472: golang.org/x/net v0.2.0/go.mod h1:KqCZLdyyvdV855qA2rE3GC2aiw5xGR5TEjj8smXukLY=",
          "475: golang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=",
          "476: golang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=",
          "477: golang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=",
          "",
          "[Removed Lines]",
          "473: golang.org/x/net v0.17.0 h1:pVaXccu2ozPjCXewfr1S7xza/zcXTity9cCdXQYSjIM=",
          "474: golang.org/x/net v0.17.0/go.mod h1:NxSsAGuq816PNPmqtQdLE42eU2Fs7NoRIZrHJAlaCOE=",
          "",
          "[Added Lines]",
          "473: golang.org/x/net v0.18.0 h1:mIYleuAkSbHh0tCv7RvjL3F6ZVbLjq4+R7zbOn3Kokg=",
          "474: golang.org/x/net v0.18.0/go.mod h1:/czyP5RqHAH4odGYxBJ1qz0+CE5WZ+2j1YgoEo8F2jQ=",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "481: golang.org/x/oauth2 v0.0.0-20201109201403-9fd604954f58/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=",
          "482: golang.org/x/oauth2 v0.0.0-20201208152858-08078c50e5b5/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=",
          "483: golang.org/x/oauth2 v0.0.0-20210218202405-ba52d332ba99/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=",
          "486: golang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "487: golang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "488: golang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "",
          "[Removed Lines]",
          "484: golang.org/x/oauth2 v0.13.0 h1:jDDenyj+WgFtmV3zYVoi8aE2BwtXFLWOA67ZfNWftiY=",
          "485: golang.org/x/oauth2 v0.13.0/go.mod h1:/JMhi4ZRXAf4HG9LiNmxvk+45+96RUlVThiH8FzNBn0=",
          "",
          "[Added Lines]",
          "484: golang.org/x/oauth2 v0.14.0 h1:P0Vrf/2538nmC0H+pEQ3MNFRRnVR7RlqyVw+bvm26z0=",
          "485: golang.org/x/oauth2 v0.14.0/go.mod h1:lAtNWgaWfL4cm7j2OV8TxGi9Qb7ECORx8DktCY74OwM=",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "539: golang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "540: golang.org/x/sys v0.2.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "541: golang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "544: golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=",
          "545: golang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=",
          "546: golang.org/x/term v0.2.0/go.mod h1:TVmDHMZPmdnySmBfhjOoOdhjzdE1h4u1VwSiw2l1Nuc=",
          "549: golang.org/x/text v0.0.0-20170915032832-14c0d48ead0c/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=",
          "550: golang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=",
          "551: golang.org/x/text v0.3.1-0.20180807135948-17ff2d5776d2/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=",
          "",
          "[Removed Lines]",
          "542: golang.org/x/sys v0.13.0 h1:Af8nKPmuFypiUBjVoU9V20FiaFXOcuZI21p0ycVYYGE=",
          "543: golang.org/x/sys v0.13.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "547: golang.org/x/term v0.13.0 h1:bb+I9cTfFazGW51MZqBVmZy7+JEJMouUHTUSKVQLBek=",
          "548: golang.org/x/term v0.13.0/go.mod h1:LTmsnFJwVN6bCy1rVCoS+qHT1HhALEFxKncY3WNNh4U=",
          "",
          "[Added Lines]",
          "542: golang.org/x/sys v0.14.0 h1:Vz7Qs629MkJkGyHxUlRHizWJRG2j8fbQKjELVSNhy7Q=",
          "543: golang.org/x/sys v0.14.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=",
          "547: golang.org/x/term v0.14.0 h1:LGK9IlZ8T9jvdy6cTdfKUCltatMFOehAQo9SRC46UQ8=",
          "548: golang.org/x/term v0.14.0/go.mod h1:TySc+nGkYR6qt8km8wUhuFRTVSMIX3XPR58y2lC8vww=",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "555: golang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=",
          "556: golang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=",
          "557: golang.org/x/text v0.4.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=",
          "560: golang.org/x/time v0.0.0-20181108054448-85acf8d2951c/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=",
          "561: golang.org/x/time v0.0.0-20190308202827-9d24e82272b4/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=",
          "562: golang.org/x/time v0.0.0-20191024005414-555d28b269f0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=",
          "",
          "[Removed Lines]",
          "558: golang.org/x/text v0.13.0 h1:ablQoSUd0tRdKxZewP80B+BaqeKJuVhuRxj/dkrun3k=",
          "559: golang.org/x/text v0.13.0/go.mod h1:TvPlkZtksWOMsz7fbANvkp4WM8x/WCo/om8BMLbz+aE=",
          "",
          "[Added Lines]",
          "558: golang.org/x/text v0.14.0 h1:ScX5w1eTa3QqT8oi6+ziP7dTV1S2+ALU0bI+0zXKWiQ=",
          "559: golang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6c06b856c77eeb6ca2e6689006d710d6a3b791e6",
      "candidate_info": {
        "commit_hash": "6c06b856c77eeb6ca2e6689006d710d6a3b791e6",
        "repo": "go-vela/worker",
        "commit_url": "https://github.com/go-vela/worker/commit/6c06b856c77eeb6ca2e6689006d710d6a3b791e6",
        "files": [
          "executor/linux/build.go",
          "executor/linux/outputs.go",
          "go.mod",
          "go.sum",
          "runtime/docker/container.go",
          "runtime/docker/test_report.go"
        ],
        "message": "uploads in exec build and pollfilecontent working",
        "before_after_code_files": [
          "executor/linux/build.go||executor/linux/build.go",
          "executor/linux/outputs.go||executor/linux/outputs.go",
          "go.mod||go.mod",
          "go.sum||go.sum",
          "runtime/docker/container.go||runtime/docker/container.go",
          "runtime/docker/test_report.go||runtime/docker/test_report.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "executor/linux/build.go||executor/linux/build.go",
            "go.mod||go.mod",
            "go.sum||go.sum"
          ],
          "candidate": [
            "executor/linux/build.go||executor/linux/build.go",
            "go.mod||go.mod",
            "go.sum||go.sum"
          ]
        }
      },
      "candidate_diff": {
        "executor/linux/build.go||executor/linux/build.go": [
          "File: executor/linux/build.go -> executor/linux/build.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "526:    return fmt.Errorf(\"unable to exec outputs container: %w\", c.err)",
          "527:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "531:   for _, step := range c.pipeline.Steps {",
          "532:    c.Logger.Infof(\"polling files for %s step\", step.Name)",
          "534:    if len(step.TestReport.Results) != 0 {",
          "535:     err := c.outputs.pollFiles(ctx, c.OutputCtn, step.TestReport.Results)",
          "536:     c.Logger.Errorf(\"unable to poll files for results: %v\", err)",
          "537:    }",
          "538:    if len(step.TestReport.Attachments) != 0 {",
          "539:     err := c.outputs.pollFiles(ctx, c.OutputCtn, step.TestReport.Attachments)",
          "540:     c.Logger.Errorf(\"unable to poll files for attachments: %v\", err)",
          "541:    }",
          "543:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "874:   }",
          "875:  }()",
          "881:  for _, _step := range c.pipeline.Steps {",
          "",
          "[Removed Lines]",
          "877:  fileNames, err := c.outputs.pollFiles(ctx, c.OutputCtn)",
          "878:  c.Logger.Infof(\"file names from outputs in before destroy build: %s\", fileNames)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "executor/linux/outputs.go||executor/linux/outputs.go": [
          "File: executor/linux/outputs.go -> executor/linux/outputs.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:  \"encoding/base64\"",
          "9:  \"fmt\"",
          "10:  api \"github.com/go-vela/server/api/types\"",
          "11:  envparse \"github.com/hashicorp/go-envparse\"",
          "12:  \"github.com/sirupsen/logrus\"",
          "15: )",
          "",
          "[Removed Lines]",
          "14:  \"github.com/go-vela/server/compiler/types/pipeline\"",
          "",
          "[Added Lines]",
          "11:  \"github.com/go-vela/server/compiler/types/pipeline\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "150: }",
          "155:  if len(ctn.Image) == 0 {",
          "157:  }",
          "",
          "[Removed Lines]",
          "153: func (o *outputSvc) pollFiles(ctx context.Context, ctn *pipeline.Container) ([]string, error) {",
          "156:   return nil, nil",
          "",
          "[Added Lines]",
          "152: func (o *outputSvc) pollFiles(ctx context.Context, ctn *pipeline.Container, fileList []string) error {",
          "155:   return nil",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "162:  logger := o.client.Logger.WithField(\"test-outputs\", ctn.Name)",
          "164:  logger.Debug(\"tailing container\")",
          "168:  if err != nil {",
          "202:   }",
          "212:  }",
          "",
          "[Removed Lines]",
          "167:  fileNames, err := o.client.Runtime.PollFileNames(ctx, ctn, []string{\"/vela/src/git.target.com/TamHuynh/supvela/cypress/fixtures/*.json\"})",
          "169:   return nil, err",
          "170:  }",
          "171:  for _, fileName := range fileNames {",
          "172:   logger.Infof(\"fileName: %v\", fileName)",
          "173:   reader, size, err := o.client.Runtime.PollFileContent(ctx, ctn, fileName)",
          "174:   if err != nil {",
          "175:    logger.Errorf(\"unable to poll file content: %v\", err)",
          "176:    return nil, err",
          "177:   }",
          "193:   sc := o.client.Storage",
          "194:   err = sc.UploadObject(ctx, &api.Object{",
          "195:    ObjectName: fileName,",
          "196:    Bucket:     api.Bucket{BucketName: \"vela\"},",
          "197:    FilePath:   fileName,",
          "198:   }, reader, size)",
          "199:   if err != nil {",
          "200:    logger.Errorf(\"unable to upload object: %v\", err)",
          "201:    return nil, err",
          "208:  }",
          "209:  logger.Infof(\"fileNames: %v\", fileNames)",
          "210:  if len(fileNames) == 0 {",
          "211:   logger.Debug(\"no files found\")",
          "214:  return fileNames, nil",
          "",
          "[Added Lines]",
          "164:  logger.Debugf(\"fileList: %v\", fileList)",
          "166:  fileNames, err := o.client.Runtime.PollFileNames(ctx, ctn, fileList)",
          "168:   return fmt.Errorf(\"unable to poll file names: %v\", err)",
          "169:  }",
          "170:  if len(fileNames) != 0 {",
          "171:   for _, fileName := range fileNames {",
          "172:    logger.Infof(\"fileName: %v\", fileName)",
          "173:    reader, size, err := o.client.Runtime.PollFileContent(ctx, ctn, fileName)",
          "174:    if err != nil {",
          "175:     logger.Errorf(\"unable to poll file content: %v\", err)",
          "176:     return err",
          "177:    }",
          "178:    err = o.client.Storage.UploadObject(ctx, &api.Object{",
          "179:     ObjectName: fileName,",
          "180:     Bucket:     api.Bucket{BucketName: \"vela\"},",
          "181:     FilePath:   fileName,",
          "182:    }, reader, size)",
          "183:    if err != nil {",
          "184:     logger.Errorf(\"unable to upload object: %v\", err)",
          "185:     return err",
          "186:    }",
          "189:   logger.Infof(\"fileNames: %v\", fileNames)",
          "190:   return nil",
          "192:  logger.Debug(\"no files found\")",
          "193:  return fmt.Errorf(\"no files found: %v\", err)",
          "",
          "---------------"
        ],
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: go 1.23.5",
          "5: replace (",
          "8: )",
          "10: require (",
          "",
          "[Removed Lines]",
          "6:  github.com/go-vela/sdk-go v0.26.0-rc2 => ../sdk-go",
          "7:  github.com/go-vela/server v0.26.0-rc2 => ../server",
          "",
          "[Added Lines]",
          "6:  github.com/go-vela/sdk-go v0.26.0 => ../sdk-go",
          "7:  github.com/go-vela/server v0.26.0 => ../server",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "33: require (",
          "34:  dario.cat/mergo v1.0.1 // indirect",
          "35:  github.com/adhocore/gronx v1.19.5 // indirect",
          "37:  github.com/aymerick/douceur v0.2.0 // indirect",
          "38:  github.com/bahlo/generic-list-go v0.2.0 // indirect",
          "39:  github.com/buger/jsonparser v1.1.1 // indirect",
          "",
          "[Removed Lines]",
          "36:  github.com/andybalholm/brotli v1.0.1 // indirect",
          "",
          "[Added Lines]",
          "36:  github.com/andybalholm/brotli v1.1.1 // indirect",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: github.com/alicebob/gopher-json v0.0.0-20230218143504-906a9b012302/go.mod h1:SGnFV6hVsYE877CKEZ6tDNTjaSXYUk6QqoIK6PrAtcc=",
          "25: github.com/alicebob/miniredis/v2 v2.34.0 h1:mBFWMaJSNL9RwdGRyEDoAAv8OQc5UlEhLDQggTglU/0=",
          "26: github.com/alicebob/miniredis/v2 v2.34.0/go.mod h1:kWShP4b58T1CW0Y5dViCd5ztzrDqRWqM3nksiyXk5s8=",
          "28: github.com/andybalholm/brotli v1.0.1/go.mod h1:loMXtMfwqflxFJPmdbJO0a3KNoPuLBgiu3qAvBg8x/Y=",
          "29: github.com/aymerick/douceur v0.2.0 h1:Mv+mAeH1Q+n9Fr+oyamOlAkUNPWPlA8PPGR0QAaYuPk=",
          "30: github.com/aymerick/douceur v0.2.0/go.mod h1:wlT5vV2O3h55X9m7iVYN0TBM0NH/MmbLnd30/FjWUq4=",
          "31: github.com/bahlo/generic-list-go v0.2.0 h1:5sz/EEAK+ls5wF+NeqDpk5+iNdMDXrh3z3nPnH1Wvgk=",
          "",
          "[Removed Lines]",
          "27: github.com/andybalholm/brotli v1.0.1 h1:KqhlKozYbRtJvsPrrEeXcO+N2l6NYT5A2QAFmSULpEc=",
          "",
          "[Added Lines]",
          "28: github.com/andybalholm/brotli v1.1.1 h1:PR2pgnyFznKEugtsUo0xLdDop5SKXd5Qf5ysW+7XdTA=",
          "29: github.com/andybalholm/brotli v1.1.1/go.mod h1:05ib4cKhjx3OQYUY22hTVd34Bc8upXjOLL2rKwwZBoA=",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "129: github.com/go-playground/validator/v10 v10.24.0/go.mod h1:GGzBIJMuE98Ic/kJsBXbz1x/7cByt++cQ+YOuDM5wus=",
          "130: github.com/go-task/slim-sprig/v3 v3.0.0 h1:sUs3vkvUymDpBKi3qH1YSqBQk9+9D/8M2mN1vB6EwHI=",
          "131: github.com/go-task/slim-sprig/v3 v3.0.0/go.mod h1:W848ghGpv3Qj3dhTPRyJypKRiqCdHZiAzKg9hl15HA8=",
          "136: github.com/goccy/go-json v0.10.4 h1:JSwxQzIqKfmFX1swYPpUThQZp/Ka4wzJdK0LWVytLPM=",
          "137: github.com/goccy/go-json v0.10.4/go.mod h1:oq7eo15ShAhp70Anwd5lgX2pLfOS3QCiwU/PULtXL6M=",
          "138: github.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=",
          "",
          "[Removed Lines]",
          "132: github.com/go-vela/sdk-go v0.26.0 h1:j5Q2LzHFt7BV34Eub4a1b3Nz1VVUVqSxgIAVhHgVtTU=",
          "133: github.com/go-vela/sdk-go v0.26.0/go.mod h1:+KoGEZNkqxsPOjgi7mEGdsBVA4Jj+vp1xr8oDJsaIGk=",
          "134: github.com/go-vela/server v0.26.0 h1:UPmPVZDAQcQGoU1X8XL9T7YgSAojU2+208THF8txwt4=",
          "135: github.com/go-vela/server v0.26.0/go.mod h1:xyOWQhjaGTpQuYlDD/pG63MmO+JTk5UBcCdoFPjHZGs=",
          "",
          "[Added Lines]",
          "133: github.com/go-vela/archiver v3.1.1+incompatible h1:xTTMMwKyHwDgNFn+c1XsKHrHFg6UyWmK4oSceSduH7A=",
          "134: github.com/go-vela/archiver v3.1.1+incompatible/go.mod h1:pYn/vJ47tuVltHdnA8YrDWOZ6yix4k0ZSKUBbWmkAFM=",
          "135: github.com/go-vela/archiver/v3 v3.4.0 h1:c6GQRNTzr4Pn8HaxjzslIEiN89+kgZB4hLkXuBCOczI=",
          "136: github.com/go-vela/archiver/v3 v3.4.0/go.mod h1:1HbXVOHBXsfzwSog3x7T6ZU9BUv+VEWnuaPLZS/v0/8=",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "364: github.com/xi2/xz v0.0.0-20171230120015-48954b6210f8/go.mod h1:HUYIGzjTL3rfEspMxjDjgmT5uz5wzYJKVo23qUhYTos=",
          "365: github.com/xrash/smetrics v0.0.0-20240521201337-686a1a2994c1 h1:gEOO8jv9F4OT7lGCjxCBTO/36wtF6j2nSip77qHd4x4=",
          "366: github.com/xrash/smetrics v0.0.0-20240521201337-686a1a2994c1/go.mod h1:Ohn+xnUBiLI6FVj/9LpzZWtj1/D6lUovWYBkxHVV3aM=",
          "367: github.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=",
          "368: github.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=",
          "369: github.com/yuin/gopher-lua v1.1.1 h1:kYKnWBjvbNP4XLT3+bPEwAXJx262OhaHDWDVOPjL46M=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "368: github.com/xyproto/randomstring v1.0.5 h1:YtlWPoRdgMu3NZtP45drfy1GKoojuR7hmRcnhZqKjWU=",
          "369: github.com/xyproto/randomstring v1.0.5/go.mod h1:rgmS5DeNXLivK7YprL0pY+lTuhNQW3iGxZ18UQApw/E=",
          "",
          "---------------"
        ],
        "runtime/docker/container.go||runtime/docker/container.go": [
          "File: runtime/docker/container.go -> runtime/docker/container.go"
        ],
        "runtime/docker/test_report.go||runtime/docker/test_report.go": [
          "File: runtime/docker/test_report.go -> runtime/docker/test_report.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:   c.Logger.Tracef(\"searching for file %s in %s\", filename, dir)",
          "30:   execConfig := types.ExecConfig{",
          "33:    AttachStderr: true,",
          "34:    AttachStdout: true,",
          "35:   }",
          "",
          "[Removed Lines]",
          "31:    Tty:          true,",
          "32:    Cmd:          []string{\"sh\", \"-c\", fmt.Sprintf(\"find %s -type f -name %s\", dir, filename)},",
          "",
          "[Added Lines]",
          "31:    Tty: true,",
          "33:    Cmd:          []string{\"sh\", \"-c\", fmt.Sprintf(\"find / -type f -path *%s  -print\", path)},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "73:   filePaths := strings.Split(data, \"\\n\")",
          "74:   for _, filePath := range filePaths {",
          "75:    if filePath != \"\" {",
          "77:     c.Logger.Infof(\"full file: %s\", filePath)",
          "78:    }",
          "79:   }",
          "",
          "[Removed Lines]",
          "76:     fullFilePaths = append(fullFilePaths, filePath)",
          "",
          "[Added Lines]",
          "78:     fullFilePaths = append(fullFilePaths, strings.TrimSpace(filePath))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "117:  execConfig := types.ExecConfig{",
          "118:   Cmd:          cmd,",
          "119:   AttachStdout: true,",
          "121:  }",
          "123:  c.Logger.Infof(\"executing command for content: %v\", execConfig.Cmd)",
          "",
          "[Removed Lines]",
          "120:   AttachStderr: true,",
          "",
          "[Added Lines]",
          "122:   AttachStderr: false,",
          "123:   Tty:          true,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "129:  if err != nil {",
          "130:   return nil, 0, fmt.Errorf(\"failed to attach to exec instance: %w\", err)",
          "131:  }",
          "139: }",
          "",
          "[Removed Lines]",
          "138:  return resp.Reader, -1, nil",
          "",
          "[Added Lines]",
          "136:  defer func() {",
          "137:   if resp.Conn != nil {",
          "138:    resp.Close()",
          "139:   }",
          "140:  }()",
          "142:  outputStdout := new(bytes.Buffer)",
          "143:  outputStderr := new(bytes.Buffer)",
          "145:  if resp.Reader != nil {",
          "146:   _, err := stdcopy.StdCopy(outputStdout, outputStderr, resp.Reader)",
          "147:   if err != nil {",
          "148:    c.Logger.Errorf(\"unable to copy logs for container: %v\", err)",
          "149:   }",
          "150:  }",
          "152:  if outputStderr.Len() > 0 {",
          "153:   return nil, -1, fmt.Errorf(\"error: %s\", outputStderr.String())",
          "154:  }",
          "156:  data := outputStdout.Bytes()",
          "160:  reader := bytes.NewReader(data)",
          "162:  size := int64(len(data))",
          "163:  return reader, size, nil",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d872e67fa9988be60c23bf44c98f54f1acf3bfb1",
      "candidate_info": {
        "commit_hash": "d872e67fa9988be60c23bf44c98f54f1acf3bfb1",
        "repo": "go-vela/worker",
        "commit_url": "https://github.com/go-vela/worker/commit/d872e67fa9988be60c23bf44c98f54f1acf3bfb1",
        "files": [
          "cmd/vela-worker/exec.go",
          "cmd/vela-worker/operate.go",
          "cmd/vela-worker/register.go",
          "cmd/vela-worker/run.go",
          "cmd/vela-worker/worker.go",
          "go.mod",
          "go.sum"
        ],
        "message": "refactor: nested api/worker (#567)",
        "before_after_code_files": [
          "cmd/vela-worker/exec.go||cmd/vela-worker/exec.go",
          "cmd/vela-worker/operate.go||cmd/vela-worker/operate.go",
          "cmd/vela-worker/register.go||cmd/vela-worker/register.go",
          "cmd/vela-worker/run.go||cmd/vela-worker/run.go",
          "cmd/vela-worker/worker.go||cmd/vela-worker/worker.go",
          "go.mod||go.mod",
          "go.sum||go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ],
          "candidate": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ]
        }
      },
      "candidate_diff": {
        "cmd/vela-worker/exec.go||cmd/vela-worker/exec.go": [
          "File: cmd/vela-worker/exec.go -> cmd/vela-worker/exec.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "6:  \"context\"",
          "7:  \"encoding/json\"",
          "8:  \"net/http\"",
          "10:  \"sync\"",
          "11:  \"time\"",
          "13:  \"github.com/go-vela/types\"",
          "14:  \"github.com/go-vela/types/constants\"",
          "16:  \"github.com/go-vela/types/pipeline\"",
          "17:  \"github.com/go-vela/worker/executor\"",
          "18:  \"github.com/go-vela/worker/runtime\"",
          "19:  \"github.com/go-vela/worker/version\"",
          "21: )",
          "28:  var err error",
          "",
          "[Removed Lines]",
          "9:  \"strconv\"",
          "15:  \"github.com/go-vela/types/library\"",
          "20:  \"github.com/sirupsen/logrus\"",
          "27: func (w *Worker) exec(index int, config *library.Worker) error {",
          "",
          "[Added Lines]",
          "12:  \"github.com/sirupsen/logrus\"",
          "14:  api \"github.com/go-vela/server/api/types\"",
          "27: func (w *Worker) exec(index int, config *api.Worker) error {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "103:   \"version\":  v.Semantic(),",
          "104:  })",
          "116:  updateStatus := w.getWorkerStatusFromConfig(config)",
          "",
          "[Removed Lines]",
          "107:  w.RunningBuildIDsMutex.Lock()",
          "109:  w.RunningBuildIDs = append(w.RunningBuildIDs, strconv.FormatInt(item.Build.GetID(), 10))",
          "111:  config.SetRunningBuildIDs(w.RunningBuildIDs)",
          "113:  w.RunningBuildIDsMutex.Unlock()",
          "",
          "[Added Lines]",
          "107:  w.RunningBuildsMutex.Lock()",
          "109:  w.RunningBuilds = append(w.RunningBuilds, item.Build)",
          "111:  config.SetRunningBuilds(w.RunningBuilds)",
          "113:  w.RunningBuildsMutex.Unlock()",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "209:   logger.Info(\"completed build\")",
          "217:    }",
          "218:   }",
          "225:   updateStatus := w.getWorkerStatusFromConfig(config)",
          "",
          "[Removed Lines]",
          "212:   w.RunningBuildIDsMutex.Lock()",
          "214:   for i, v := range w.RunningBuildIDs {",
          "215:    if v == strconv.FormatInt(item.Build.GetID(), 10) {",
          "216:     w.RunningBuildIDs = append(w.RunningBuildIDs[:i], w.RunningBuildIDs[i+1:]...)",
          "220:   config.SetRunningBuildIDs(w.RunningBuildIDs)",
          "222:   w.RunningBuildIDsMutex.Unlock()",
          "",
          "[Added Lines]",
          "212:   w.RunningBuildsMutex.Lock()",
          "214:   for i, v := range w.RunningBuilds {",
          "215:    if v.GetID() == item.Build.GetID() {",
          "216:     w.RunningBuilds = append(w.RunningBuilds[:i], w.RunningBuilds[i+1:]...)",
          "220:   config.SetRunningBuilds(w.RunningBuilds)",
          "222:   w.RunningBuildsMutex.Unlock()",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "308:  case rb == 0:",
          "309:   return constants.WorkerStatusIdle",
          "310:  case rb < w.Config.Build.Limit:",
          "",
          "[Removed Lines]",
          "306: func (w *Worker) getWorkerStatusFromConfig(config *library.Worker) string {",
          "307:  switch rb := len(config.GetRunningBuildIDs()); {",
          "",
          "[Added Lines]",
          "306: func (w *Worker) getWorkerStatusFromConfig(config *api.Worker) string {",
          "307:  switch rb := len(config.GetRunningBuilds()); {",
          "",
          "---------------"
        ],
        "cmd/vela-worker/operate.go||cmd/vela-worker/operate.go": [
          "File: cmd/vela-worker/operate.go -> cmd/vela-worker/operate.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "6:  \"context\"",
          "7:  \"time\"",
          "12:  \"github.com/sirupsen/logrus\"",
          "14:  \"golang.org/x/sync/errgroup\"",
          "15: )",
          "",
          "[Removed Lines]",
          "9:  \"github.com/go-vela/server/queue\"",
          "10:  \"github.com/go-vela/types/constants\"",
          "11:  \"github.com/go-vela/types/library\"",
          "",
          "[Added Lines]",
          "12:  api \"github.com/go-vela/server/api/types\"",
          "13:  \"github.com/go-vela/server/queue\"",
          "14:  \"github.com/go-vela/types/constants\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "27:  executors, gctx := errgroup.WithContext(ctx)",
          "31:  registryWorker.SetHostname(w.Config.API.Address.Hostname())",
          "32:  registryWorker.SetAddress(w.Config.API.Address.String())",
          "33:  registryWorker.SetRoutes(w.Config.Queue.Routes)",
          "",
          "[Removed Lines]",
          "30:  registryWorker := new(library.Worker)",
          "",
          "[Added Lines]",
          "30:  registryWorker := new(api.Worker)",
          "",
          "---------------"
        ],
        "cmd/vela-worker/register.go||cmd/vela-worker/register.go": [
          "File: cmd/vela-worker/register.go -> cmd/vela-worker/register.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  \"fmt\"",
          "8:  \"net/http\"",
          "12:  \"github.com/sirupsen/logrus\"",
          "13: )",
          "18:  logrus.Infof(\"retrieving worker %s from the server\", config.GetHostname())",
          "",
          "[Removed Lines]",
          "10:  \"github.com/go-vela/types/constants\"",
          "11:  \"github.com/go-vela/types/library\"",
          "16: func (w *Worker) checkIn(config *library.Worker) (bool, string, error) {",
          "",
          "[Added Lines]",
          "12:  api \"github.com/go-vela/server/api/types\"",
          "13:  \"github.com/go-vela/types/constants\"",
          "17: func (w *Worker) checkIn(config *api.Worker) (bool, string, error) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "48: }",
          "52:  logrus.Infof(\"worker %s not found, registering it with the server\", config.GetHostname())",
          "",
          "[Removed Lines]",
          "51: func (w *Worker) register(config *library.Worker) (bool, string, error) {",
          "",
          "[Added Lines]",
          "52: func (w *Worker) register(config *api.Worker) (bool, string, error) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "68: }",
          "72:  pErr := w.Queue.Ping(ctx)",
          "73:  if pErr != nil {",
          "74:   logrus.Errorf(\"worker %s unable to contact the queue: %v\", registryWorker.GetHostname(), pErr)",
          "",
          "[Removed Lines]",
          "71: func (w *Worker) queueCheckIn(ctx context.Context, registryWorker *library.Worker) (bool, error) {",
          "",
          "[Added Lines]",
          "72: func (w *Worker) queueCheckIn(ctx context.Context, registryWorker *api.Worker) (bool, error) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "90:  config.SetStatus(status)",
          "91:  _, resp, logErr := w.VelaClient.Worker.Update(config.GetHostname(), config)",
          "",
          "[Removed Lines]",
          "89: func (w *Worker) updateWorkerStatus(config *library.Worker, status string) {",
          "",
          "[Added Lines]",
          "90: func (w *Worker) updateWorkerStatus(config *api.Worker, status string) {",
          "",
          "---------------"
        ],
        "cmd/vela-worker/run.go||cmd/vela-worker/run.go": [
          "File: cmd/vela-worker/run.go -> cmd/vela-worker/run.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  \"net/url\"",
          "9:  \"github.com/gin-gonic/gin\"",
          "15:  \"github.com/sirupsen/logrus\"",
          "17:  \"github.com/urfave/cli/v2\"",
          "19:  _ \"github.com/joho/godotenv/autoload\"",
          "20: )",
          "",
          "[Removed Lines]",
          "11:  \"github.com/go-vela/server/queue\"",
          "12:  \"github.com/go-vela/worker/executor\"",
          "13:  \"github.com/go-vela/worker/runtime\"",
          "",
          "[Added Lines]",
          "15:  \"github.com/go-vela/server/queue\"",
          "16:  \"github.com/go-vela/types/library\"",
          "17:  \"github.com/go-vela/worker/executor\"",
          "18:  \"github.com/go-vela/worker/runtime\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "138:   RegisterToken: make(chan string, 1),",
          "141:  }",
          "",
          "[Removed Lines]",
          "140:   RunningBuildIDs: make([]string, 0),",
          "",
          "[Added Lines]",
          "139:   RunningBuilds: make([]*library.Build, 0),",
          "",
          "---------------"
        ],
        "cmd/vela-worker/worker.go||cmd/vela-worker/worker.go": [
          "File: cmd/vela-worker/worker.go -> cmd/vela-worker/worker.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:  \"github.com/go-vela/sdk-go/vela\"",
          "11:  \"github.com/go-vela/server/queue\"",
          "12:  \"github.com/go-vela/worker/executor\"",
          "13:  \"github.com/go-vela/worker/runtime\"",
          "14: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12:  \"github.com/go-vela/types/library\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63:  Worker struct {",
          "74:  }",
          "75: )",
          "",
          "[Removed Lines]",
          "64:   Config               *Config",
          "65:   Executors            map[int]executor.Engine",
          "66:   Queue                queue.Service",
          "67:   Runtime              runtime.Engine",
          "68:   VelaClient           *vela.Client",
          "69:   RegisterToken        chan string",
          "70:   CheckedIn            bool",
          "71:   QueueCheckedIn       bool",
          "72:   RunningBuildIDs      []string",
          "73:   RunningBuildIDsMutex sync.Mutex",
          "",
          "[Added Lines]",
          "65:   Config             *Config",
          "66:   Executors          map[int]executor.Engine",
          "67:   Queue              queue.Service",
          "68:   Runtime            runtime.Engine",
          "69:   VelaClient         *vela.Client",
          "70:   RegisterToken      chan string",
          "71:   CheckedIn          bool",
          "72:   RunningBuilds      []*library.Build",
          "73:   QueueCheckedIn     bool",
          "74:   RunningBuildsMutex sync.Mutex",
          "",
          "---------------"
        ],
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:  github.com/docker/docker v24.0.9+incompatible",
          "9:  github.com/docker/go-units v0.5.0",
          "10:  github.com/gin-gonic/gin v1.9.1",
          "13:  github.com/go-vela/types v0.23.2",
          "14:  github.com/golang-jwt/jwt/v5 v5.2.1",
          "15:  github.com/google/go-cmp v0.6.0",
          "",
          "[Removed Lines]",
          "11:  github.com/go-vela/sdk-go v0.23.2",
          "12:  github.com/go-vela/server v0.23.2",
          "",
          "[Added Lines]",
          "11:  github.com/go-vela/sdk-go v0.23.3-0.20240319181130-4a7c245c93ae",
          "12:  github.com/go-vela/server v0.23.4-0.20240319161125-1809638e7e72",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "33:  github.com/PuerkitoBio/purell v1.1.1 // indirect",
          "34:  github.com/PuerkitoBio/urlesc v0.0.0-20170810143723-de5bf2ad4578 // indirect",
          "35:  github.com/alicebob/gopher-json v0.0.0-20200520072559-a9ecdc9d1d3a // indirect",
          "37:  github.com/beorn7/perks v1.0.1 // indirect",
          "38:  github.com/buildkite/yaml v0.0.0-20230306222819-0e4e032d4835 // indirect",
          "39:  github.com/bytedance/sonic v1.9.1 // indirect",
          "",
          "[Removed Lines]",
          "36:  github.com/alicebob/miniredis/v2 v2.31.1 // indirect",
          "",
          "[Added Lines]",
          "36:  github.com/alicebob/miniredis/v2 v2.32.1 // indirect",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "79:  github.com/klauspost/cpuid/v2 v2.2.4 // indirect",
          "80:  github.com/leodido/go-urn v1.2.4 // indirect",
          "81:  github.com/mailru/easyjson v0.7.7 // indirect",
          "83:  github.com/mitchellh/copystructure v1.0.0 // indirect",
          "84:  github.com/mitchellh/reflectwalk v1.0.1 // indirect",
          "85:  github.com/moby/term v0.0.0-20201216013528-df9cb8a40635 // indirect",
          "",
          "[Removed Lines]",
          "82:  github.com/mattn/go-isatty v0.0.19 // indirect",
          "",
          "[Added Lines]",
          "82:  github.com/mattn/go-isatty v0.0.20 // indirect",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "102:  github.com/twitchyliquid64/golang-asm v0.15.1 // indirect",
          "103:  github.com/ugorji/go/codec v1.2.11 // indirect",
          "104:  github.com/xrash/smetrics v0.0.0-20201216005158-039620a65673 // indirect",
          "107:  golang.org/x/arch v0.3.0 // indirect",
          "108:  golang.org/x/crypto v0.21.0 // indirect",
          "109:  golang.org/x/mod v0.14.0 // indirect",
          "",
          "[Removed Lines]",
          "105:  github.com/yuin/gopher-lua v1.1.0 // indirect",
          "106:  go.starlark.net v0.0.0-20240311180835-efac67204ba7 // indirect",
          "",
          "[Added Lines]",
          "105:  github.com/yuin/gopher-lua v1.1.1 // indirect",
          "106:  go.starlark.net v0.0.0-20240314022150-ee8ed142361c // indirect",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "115:  golang.org/x/time v0.5.0 // indirect",
          "116:  golang.org/x/tools v0.16.1 // indirect",
          "117:  google.golang.org/appengine v1.6.7 // indirect",
          "119:  gopkg.in/inf.v0 v0.9.1 // indirect",
          "120:  gopkg.in/yaml.v2 v2.4.0 // indirect",
          "121:  gopkg.in/yaml.v3 v3.0.1 // indirect",
          "",
          "[Removed Lines]",
          "118:  google.golang.org/protobuf v1.32.0 // indirect",
          "",
          "[Added Lines]",
          "118:  google.golang.org/protobuf v1.33.0 // indirect",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: github.com/Azure/go-ansiterm v0.0.0-20170929234023-d6e3b3328b78/go.mod h1:LmzpDX56iTiv29bbRTIsUNlaFfuhWRQBWjQdVyAevI8=",
          "3: github.com/Bose/minisentinel v0.0.0-20200130220412-917c5a9223bb h1:ZVN4Iat3runWOFLaBCDVU5a9X/XikSRBosye++6gojw=",
          "4: github.com/Bose/minisentinel v0.0.0-20200130220412-917c5a9223bb/go.mod h1:WsAABbY4HQBgd3mGuG4KMNTbHJCPvx9IVBHzysbknss=",
          "6: github.com/Masterminds/goutils v1.1.1 h1:5nUrii3FMTL5diU80unEVvNevw1nH4+ZV4DSLVJLSYI=",
          "7: github.com/Masterminds/goutils v1.1.1/go.mod h1:8cTjp+g8YejhMuvIA5y2vz3BpJxksy863GQaJW2MFNU=",
          "8: github.com/Masterminds/semver/v3 v3.2.0/go.mod h1:qvl/7zhW3nngYb5+80sSMF+FG2BjYrf8m9wsX0PNOMQ=",
          "",
          "[Removed Lines]",
          "5: github.com/DmitriyVTitov/size v1.5.0/go.mod h1:le6rNI4CoLQV1b9gzp1+3d7hMAD/uu2QcJ+aYbNgiU0=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "18: github.com/PuerkitoBio/urlesc v0.0.0-20170810143723-de5bf2ad4578/go.mod h1:uGdkoq3SwY9Y+13GIhn11/XLaGBb4BfwItxLd5jeuXE=",
          "19: github.com/alicebob/gopher-json v0.0.0-20200520072559-a9ecdc9d1d3a h1:HbKu58rmZpUGpz5+4FfNmIU+FmZg2P3Xaj2v2bfNWmk=",
          "20: github.com/alicebob/gopher-json v0.0.0-20200520072559-a9ecdc9d1d3a/go.mod h1:SGnFV6hVsYE877CKEZ6tDNTjaSXYUk6QqoIK6PrAtcc=",
          "23: github.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=",
          "24: github.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=",
          "25: github.com/bsm/ginkgo/v2 v2.12.0 h1:Ny8MWAHyOepLGlLKYmXG4IEkioBysk6GpaRTLC8zwWs=",
          "",
          "[Removed Lines]",
          "21: github.com/alicebob/miniredis/v2 v2.31.1 h1:7XAt0uUg3DtwEKW5ZAGa+K7FZV2DdKQo5K/6TTnfX8Y=",
          "22: github.com/alicebob/miniredis/v2 v2.31.1/go.mod h1:UB/T2Uztp7MlFSDakaX1sTXUv5CASoprx0wulRT6HBg=",
          "",
          "[Added Lines]",
          "20: github.com/alicebob/miniredis/v2 v2.32.1 h1:Bz7CciDnYSaa0mX5xODh6GUITRSx+cVhjNoOR4JssBo=",
          "21: github.com/alicebob/miniredis/v2 v2.32.1/go.mod h1:AqkLNAfUm0K07J28hnAyyQKf/x0YkCY/g5DCtuL01Mw=",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "94: github.com/go-playground/validator/v10 v10.14.0/go.mod h1:9iXMNT7sEkjXb0I+enO7QXmzG6QCsPWY4zveKFVRSyU=",
          "95: github.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572 h1:tfuBGBXKqDEevZMzYi5KSi8KkcZtzBcTgAUUtapy0OI=",
          "96: github.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572/go.mod h1:9Pwr4B2jHnOSGXyyzV8ROjYa2ojvAY6HCGYYfMoC3Ls=",
          "101: github.com/go-vela/types v0.23.2 h1:QDt2lta7FPEfN2RK/Bn++DkqyjGIB4H/Q4XkFAj3hXQ=",
          "102: github.com/go-vela/types v0.23.2/go.mod h1:aTE6dzssqTGOvU6m2/vsI9NoSW/3hH/yLzf3cCSo0Zk=",
          "103: github.com/goccy/go-json v0.10.2 h1:CrxCmQqYDkv1z7lO7Wbh2HN93uovUHgrECaO5ZrCXAU=",
          "",
          "[Removed Lines]",
          "97: github.com/go-vela/sdk-go v0.23.2 h1:DQzhz7ggbLXmi2Kg0x0C4h/ujSujSSyHbxUORMgt/hk=",
          "98: github.com/go-vela/sdk-go v0.23.2/go.mod h1:kppIcwY9Bd6qke7sHVWJ0F+SNvYuTUw2sNvAnrkqayg=",
          "99: github.com/go-vela/server v0.23.2 h1:G/JLZPHgokZxthE4PMfiMIZCKdYadoafYEqh/P91ECk=",
          "100: github.com/go-vela/server v0.23.2/go.mod h1:Iqs8vB35nPcN6GpjmvWwIjBZZ42oKHgOTrGSpz2wvNI=",
          "",
          "[Added Lines]",
          "96: github.com/go-vela/sdk-go v0.23.3-0.20240319181130-4a7c245c93ae h1:E5sgPxZsuiB00hcAgR/TpzRcovy+GVFzTSZfPHMIfPY=",
          "97: github.com/go-vela/sdk-go v0.23.3-0.20240319181130-4a7c245c93ae/go.mod h1:4iOo5uuh4S3V//7ipZ9ZxvXc1wR2EGxDCeTqpom8rfU=",
          "98: github.com/go-vela/server v0.23.4-0.20240319161125-1809638e7e72 h1:vREnnFuJCKvnYDzHpo8tnXnjpdWgwJ4u2+XB1aoDZQg=",
          "99: github.com/go-vela/server v0.23.4-0.20240319161125-1809638e7e72/go.mod h1:uSS5W5UzhNzAsFbKrniwr5OWtq+Q09u/i8H8nr9ls0M=",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "106: github.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=",
          "107: github.com/golang-jwt/jwt/v5 v5.2.1 h1:OuVbFODueb089Lh128TAcimifWaLhJwVflnrgM17wHk=",
          "108: github.com/golang-jwt/jwt/v5 v5.2.1/go.mod h1:pqrtFR0X4osieyHYxtmOUWsAWrfe1Q5UVIyoH402zdk=",
          "110: github.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=",
          "111: github.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=",
          "112: github.com/golang/protobuf v1.5.3 h1:KhyjKVUg7Usr/dYsdSqoFveMYd5ko72D+zANwlG1mmg=",
          "",
          "[Removed Lines]",
          "109: github.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "173: github.com/leodido/go-urn v1.2.4/go.mod h1:7ZrI8mTSeBSHl/UaRyKQW1qZeMgak41ANeCNaVckg+4=",
          "174: github.com/mailru/easyjson v0.7.7 h1:UGYAvKxe3sBsEDzO8ZeWOSlIQfWFlxbzLZe7hwFURr0=",
          "175: github.com/mailru/easyjson v0.7.7/go.mod h1:xzfreul335JAWq5oZzymOObrkdz5UnU4kGfJJLY9Nlc=",
          "178: github.com/mitchellh/copystructure v1.0.0 h1:Laisrj+bAB6b/yJwB5Bt3ITZhGJdqmxquMKeZ+mmkFQ=",
          "179: github.com/mitchellh/copystructure v1.0.0/go.mod h1:SNtv71yrdKgLRyLFxmLdkAbkKEFWgYaq1OVrnRcwhnw=",
          "180: github.com/mitchellh/reflectwalk v1.0.0/go.mod h1:mSTlrgnPZtwu0c4WaC2kGObEpuNDbx0jmZXqmk4esnw=",
          "",
          "[Removed Lines]",
          "176: github.com/mattn/go-isatty v0.0.19 h1:JITubQf0MOLdlGRuRq+jtsDlekdYPia9ZFsB8h/APPA=",
          "177: github.com/mattn/go-isatty v0.0.19/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=",
          "",
          "[Added Lines]",
          "174: github.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=",
          "175: github.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "256: github.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=",
          "257: github.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=",
          "258: github.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=",
          "263: golang.org/x/arch v0.0.0-20210923205945-b76863e36670/go.mod h1:5om86z9Hs0C8fWVUuoMHwpExlXzs5Tkyp9hOrfG7pp8=",
          "264: golang.org/x/arch v0.3.0 h1:02VY4/ZcO/gBOH6PUaoiptASxtXU10jazRCP865E97k=",
          "265: golang.org/x/arch v0.3.0/go.mod h1:5om86z9Hs0C8fWVUuoMHwpExlXzs5Tkyp9hOrfG7pp8=",
          "",
          "[Removed Lines]",
          "259: github.com/yuin/gopher-lua v1.1.0 h1:BojcDhfyDWgU2f2TOzYK/g5p2gxMrku8oupLDqlnSqE=",
          "260: github.com/yuin/gopher-lua v1.1.0/go.mod h1:GBR0iDaNXjAgGg9zfCvksxSRnQx76gclCIb7kdAd1Pw=",
          "261: go.starlark.net v0.0.0-20240311180835-efac67204ba7 h1:xH7OJPtjgdj/xXykge/wGPAAqik97FbEVJR55lEY0tQ=",
          "262: go.starlark.net v0.0.0-20240311180835-efac67204ba7/go.mod h1:MrdO7XaMF3dE3MzuP6mrG0EB3NC7rLWSiEcu9Ii50g8=",
          "",
          "[Added Lines]",
          "257: github.com/yuin/gopher-lua v1.1.1 h1:kYKnWBjvbNP4XLT3+bPEwAXJx262OhaHDWDVOPjL46M=",
          "258: github.com/yuin/gopher-lua v1.1.1/go.mod h1:GBR0iDaNXjAgGg9zfCvksxSRnQx76gclCIb7kdAd1Pw=",
          "259: go.starlark.net v0.0.0-20240314022150-ee8ed142361c h1:roAjH18hZcwI4hHStHbkXjF5b7UUyZ/0SG3hXNN1SjA=",
          "260: go.starlark.net v0.0.0-20240314022150-ee8ed142361c/go.mod h1:YKMCv9b1WrfWmeqdV5MAuEHWsu5iC+fe6kYl2sQjdI8=",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "340: google.golang.org/appengine v1.6.7/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=",
          "341: google.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=",
          "342: google.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=",
          "345: gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=",
          "346: gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=",
          "347: gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=",
          "",
          "[Removed Lines]",
          "343: google.golang.org/protobuf v1.32.0 h1:pPC6BG5ex8PDFnkbrGU3EixyhKcQ2aDuBS36lqK/C7I=",
          "344: google.golang.org/protobuf v1.32.0/go.mod h1:c6P6GXX6sHbq/GpV6MGZEdwhWPcYBgnhAHhKbcUYpos=",
          "",
          "[Added Lines]",
          "341: google.golang.org/protobuf v1.33.0 h1:uNO2rsAINq/JlFpSdYEKIZ0uKD/R9cpdv0T+yoGwGmI=",
          "342: google.golang.org/protobuf v1.33.0/go.mod h1:c6P6GXX6sHbq/GpV6MGZEdwhWPcYBgnhAHhKbcUYpos=",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a26112c6272da4faaeeab3e414356e4c5cc4bc62",
      "candidate_info": {
        "commit_hash": "a26112c6272da4faaeeab3e414356e4c5cc4bc62",
        "repo": "go-vela/worker",
        "commit_url": "https://github.com/go-vela/worker/commit/a26112c6272da4faaeeab3e414356e4c5cc4bc62",
        "files": [
          "executor/linux/build_test.go",
          "executor/linux/outputs_test.go",
          "executor/linux/secret_test.go",
          "executor/linux/stage_test.go",
          "executor/local/build_test.go",
          "executor/local/stage_test.go",
          "go.mod",
          "go.sum"
        ],
        "message": "fix(tests): pass context into Compile (#598)",
        "before_after_code_files": [
          "executor/linux/build_test.go||executor/linux/build_test.go",
          "executor/linux/outputs_test.go||executor/linux/outputs_test.go",
          "executor/linux/secret_test.go||executor/linux/secret_test.go",
          "executor/linux/stage_test.go||executor/linux/stage_test.go",
          "executor/local/build_test.go||executor/local/build_test.go",
          "executor/local/stage_test.go||executor/local/stage_test.go",
          "go.mod||go.mod",
          "go.sum||go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ],
          "candidate": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ]
        }
      },
      "candidate_diff": {
        "executor/linux/build_test.go||executor/linux/build_test.go": [
          "File: executor/linux/build_test.go -> executor/linux/build_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "148:     Duplicate().",
          "149:     WithBuild(_build).",
          "150:     WithRepo(_build.GetRepo()).",
          "152:    if err != nil {",
          "153:     t.Errorf(\"unable to compile %s pipeline %s: %v\", test.name, test.pipeline, err)",
          "154:    }",
          "",
          "[Removed Lines]",
          "151:     Compile(test.pipeline)",
          "",
          "[Added Lines]",
          "151:     Compile(context.Background(), test.pipeline)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "325:     Duplicate().",
          "326:     WithBuild(_build).",
          "327:     WithRepo(_build.GetRepo()).",
          "329:    if err != nil {",
          "330:     t.Errorf(\"unable to compile %s pipeline %s: %v\", test.name, test.pipeline, err)",
          "331:    }",
          "",
          "[Removed Lines]",
          "328:     Compile(test.pipeline)",
          "",
          "[Added Lines]",
          "328:     Compile(context.Background(), test.pipeline)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "608:     Duplicate().",
          "609:     WithBuild(_build).",
          "610:     WithRepo(_build.GetRepo()).",
          "612:    if err != nil {",
          "613:     t.Errorf(\"unable to compile %s pipeline %s: %v\", test.name, test.pipeline, err)",
          "614:    }",
          "",
          "[Removed Lines]",
          "611:     Compile(test.pipeline)",
          "",
          "[Added Lines]",
          "611:     Compile(context.Background(), test.pipeline)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "843:     Duplicate().",
          "844:     WithBuild(_build).",
          "845:     WithRepo(_build.GetRepo()).",
          "847:    if err != nil {",
          "848:     t.Errorf(\"unable to compile %s pipeline %s: %v\", test.name, test.pipeline, err)",
          "849:    }",
          "",
          "[Removed Lines]",
          "846:     Compile(test.pipeline)",
          "",
          "[Added Lines]",
          "846:     Compile(context.Background(), test.pipeline)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1486:     Duplicate().",
          "1487:     WithBuild(_build).",
          "1488:     WithRepo(_build.GetRepo()).",
          "1490:    if err != nil {",
          "1491:     t.Errorf(\"unable to compile %s pipeline %s: %v\", test.name, test.pipeline, err)",
          "1492:    }",
          "",
          "[Removed Lines]",
          "1489:     Compile(test.pipeline)",
          "",
          "[Added Lines]",
          "1489:     Compile(context.Background(), test.pipeline)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1760:     Duplicate().",
          "1761:     WithBuild(_build).",
          "1762:     WithRepo(_build.GetRepo()).",
          "1764:    if err != nil {",
          "1765:     t.Errorf(\"unable to compile %s pipeline %s: %v\", test.name, test.pipeline, err)",
          "1766:    }",
          "",
          "[Removed Lines]",
          "1763:     Compile(test.pipeline)",
          "",
          "[Added Lines]",
          "1763:     Compile(context.Background(), test.pipeline)",
          "",
          "---------------"
        ],
        "executor/linux/outputs_test.go||executor/linux/outputs_test.go": [
          "File: executor/linux/outputs_test.go -> executor/linux/outputs_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "320:     WithBuild(_build).",
          "321:     WithRepo(_build.GetRepo()).",
          "322:     WithUser(_build.GetRepo().GetOwner()).",
          "324:    if err != nil {",
          "325:     t.Errorf(\"unable to compile pipeline %s: %v\", test.pipeline, err)",
          "326:    }",
          "",
          "[Removed Lines]",
          "323:     Compile(file)",
          "",
          "[Added Lines]",
          "323:     Compile(context.Background(), file)",
          "",
          "---------------"
        ],
        "executor/linux/secret_test.go||executor/linux/secret_test.go": [
          "File: executor/linux/secret_test.go -> executor/linux/secret_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "420:     WithBuild(_build).",
          "421:     WithRepo(_build.GetRepo()).",
          "422:     WithUser(_build.GetRepo().GetOwner()).",
          "424:    if err != nil {",
          "425:     t.Errorf(\"unable to compile pipeline %s: %v\", test.pipeline, err)",
          "426:    }",
          "",
          "[Removed Lines]",
          "423:     Compile(file)",
          "",
          "[Added Lines]",
          "423:     Compile(context.Background(), file)",
          "",
          "---------------"
        ],
        "executor/linux/stage_test.go||executor/linux/stage_test.go": [
          "File: executor/linux/stage_test.go -> executor/linux/stage_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "37:   WithBuild(_build).",
          "38:   WithRepo(_build.GetRepo()).",
          "39:   WithUser(_build.GetRepo().GetOwner()).",
          "41:  if err != nil {",
          "42:   t.Errorf(\"unable to compile pipeline %s: %v\", _file, err)",
          "43:  }",
          "",
          "[Removed Lines]",
          "40:   Compile(_file)",
          "",
          "[Added Lines]",
          "40:   Compile(context.Background(), _file)",
          "",
          "---------------"
        ],
        "executor/local/build_test.go||executor/local/build_test.go": [
          "File: executor/local/build_test.go -> executor/local/build_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:     WithRepo(_build.GetRepo()).",
          "65:     WithLocal(true).",
          "66:     WithUser(_build.GetRepo().GetOwner()).",
          "68:    if err != nil {",
          "69:     t.Errorf(\"unable to compile pipeline %s: %v\", test.pipeline, err)",
          "70:    }",
          "",
          "[Removed Lines]",
          "67:     Compile(test.pipeline)",
          "",
          "[Added Lines]",
          "67:     Compile(context.Background(), test.pipeline)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "143:     WithRepo(_build.GetRepo()).",
          "144:     WithLocal(true).",
          "145:     WithUser(_build.GetRepo().GetOwner()).",
          "147:    if err != nil {",
          "148:     t.Errorf(\"unable to compile pipeline %s: %v\", test.pipeline, err)",
          "149:    }",
          "",
          "[Removed Lines]",
          "146:     Compile(test.pipeline)",
          "",
          "[Added Lines]",
          "146:     Compile(context.Background(), test.pipeline)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "261:     WithRepo(_build.GetRepo()).",
          "262:     WithLocal(true).",
          "263:     WithUser(_build.GetRepo().GetOwner()).",
          "265:    if err != nil {",
          "266:     t.Errorf(\"unable to compile pipeline %s: %v\", test.pipeline, err)",
          "267:    }",
          "",
          "[Removed Lines]",
          "264:     Compile(test.pipeline)",
          "",
          "[Added Lines]",
          "264:     Compile(context.Background(), test.pipeline)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "365:     WithRepo(_build.GetRepo()).",
          "366:     WithLocal(true).",
          "367:     WithUser(_build.GetRepo().GetOwner()).",
          "369:    if err != nil {",
          "370:     t.Errorf(\"unable to compile pipeline %s: %v\", test.pipeline, err)",
          "371:    }",
          "",
          "[Removed Lines]",
          "368:     Compile(test.pipeline)",
          "",
          "[Added Lines]",
          "368:     Compile(context.Background(), test.pipeline)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "561:     WithRepo(_build.GetRepo()).",
          "562:     WithLocal(true).",
          "563:     WithUser(_build.GetRepo().GetOwner()).",
          "565:    if err != nil {",
          "566:     t.Errorf(\"unable to compile pipeline %s: %v\", test.pipeline, err)",
          "567:    }",
          "",
          "[Removed Lines]",
          "564:     Compile(test.pipeline)",
          "",
          "[Added Lines]",
          "564:     Compile(context.Background(), test.pipeline)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "682:     WithRepo(_build.GetRepo()).",
          "683:     WithLocal(true).",
          "684:     WithUser(_build.GetRepo().GetOwner()).",
          "686:    if err != nil {",
          "687:     t.Errorf(\"unable to compile pipeline %s: %v\", test.pipeline, err)",
          "688:    }",
          "",
          "[Removed Lines]",
          "685:     Compile(test.pipeline)",
          "",
          "[Added Lines]",
          "685:     Compile(context.Background(), test.pipeline)",
          "",
          "---------------"
        ],
        "executor/local/stage_test.go||executor/local/stage_test.go": [
          "File: executor/local/stage_test.go -> executor/local/stage_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "36:   WithRepo(_build.GetRepo()).",
          "37:   WithLocal(true).",
          "38:   WithUser(_build.GetRepo().GetOwner()).",
          "40:  if err != nil {",
          "41:   t.Errorf(\"unable to compile pipeline %s: %v\", _file, err)",
          "42:  }",
          "",
          "[Removed Lines]",
          "39:   Compile(_file)",
          "",
          "[Added Lines]",
          "39:   Compile(context.Background(), _file)",
          "",
          "---------------"
        ],
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "9:  github.com/docker/go-units v0.5.0",
          "10:  github.com/gin-gonic/gin v1.10.0",
          "11:  github.com/go-vela/sdk-go v0.24.0",
          "14:  github.com/golang-jwt/jwt/v5 v5.2.1",
          "15:  github.com/google/go-cmp v0.6.0",
          "16:  github.com/joho/godotenv v1.5.1",
          "",
          "[Removed Lines]",
          "12:  github.com/go-vela/server v0.24.1",
          "13:  github.com/go-vela/types v0.24.1-0.20240813201820-772b29b91a5e",
          "",
          "[Added Lines]",
          "12:  github.com/go-vela/server v0.24.3-0.20240920134429-f31811890bd4",
          "13:  github.com/go-vela/types v0.24.1-0.20240826141537-76a66e72d5dc",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "21:  golang.org/x/sync v0.7.0",
          "22:  gotest.tools/v3 v3.5.1",
          "23:  k8s.io/api v0.30.2",
          "25:  k8s.io/client-go v0.30.2",
          "26:  sigs.k8s.io/yaml v1.4.0",
          "27: )",
          "29: require (",
          "30:  github.com/Masterminds/goutils v1.1.1 // indirect",
          "31:  github.com/Masterminds/sprig/v3 v3.2.3 // indirect",
          "",
          "[Removed Lines]",
          "24:  k8s.io/apimachinery v0.30.2",
          "",
          "[Added Lines]",
          "24:  k8s.io/apimachinery v0.30.3",
          "29: require github.com/google/go-github/v63 v63.0.0 // indirect",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "36:  github.com/alicebob/miniredis/v2 v2.33.0 // indirect",
          "37:  github.com/beorn7/perks v1.0.1 // indirect",
          "38:  github.com/buildkite/yaml v0.0.0-20230306222819-0e4e032d4835 // indirect",
          "40:  github.com/bytedance/sonic/loader v0.1.1 // indirect",
          "42:  github.com/cloudwego/base64x v0.1.4 // indirect",
          "43:  github.com/cloudwego/iasm v0.2.0 // indirect",
          "44:  github.com/containerd/containerd v1.7.11 // indirect",
          "",
          "[Removed Lines]",
          "39:  github.com/bytedance/sonic v1.11.6 // indirect",
          "41:  github.com/cespare/xxhash/v2 v2.2.0 // indirect",
          "",
          "[Added Lines]",
          "41:  github.com/bytedance/sonic v1.11.9 // indirect",
          "43:  github.com/cespare/xxhash/v2 v2.3.0 // indirect",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "52:  github.com/drone/envsubst v1.0.3 // indirect",
          "53:  github.com/emicklei/go-restful/v3 v3.11.0 // indirect",
          "54:  github.com/evanphx/json-patch v5.6.0+incompatible // indirect",
          "57:  github.com/ghodss/yaml v1.0.0 // indirect",
          "58:  github.com/gin-contrib/sse v0.1.0 // indirect",
          "60:  github.com/go-logr/stdr v1.2.2 // indirect",
          "61:  github.com/go-openapi/jsonpointer v0.19.6 // indirect",
          "62:  github.com/go-openapi/jsonreference v0.20.2 // indirect",
          "63:  github.com/go-openapi/swag v0.22.3 // indirect",
          "64:  github.com/go-playground/locales v0.14.1 // indirect",
          "65:  github.com/go-playground/universal-translator v0.18.1 // indirect",
          "67:  github.com/goccy/go-json v0.10.3 // indirect",
          "68:  github.com/gogo/protobuf v1.3.2 // indirect",
          "69:  github.com/golang/protobuf v1.5.4 // indirect",
          "70:  github.com/google/gnostic-models v0.6.8 // indirect",
          "72:  github.com/google/go-querystring v1.1.0 // indirect",
          "73:  github.com/google/gofuzz v1.2.0 // indirect",
          "74:  github.com/google/uuid v1.6.0 // indirect",
          "",
          "[Removed Lines]",
          "55:  github.com/felixge/httpsnoop v1.0.3 // indirect",
          "56:  github.com/gabriel-vasile/mimetype v1.4.3 // indirect",
          "59:  github.com/go-logr/logr v1.4.1 // indirect",
          "66:  github.com/go-playground/validator/v10 v10.20.0 // indirect",
          "71:  github.com/google/go-github/v62 v62.0.0 // indirect",
          "",
          "[Added Lines]",
          "57:  github.com/felixge/httpsnoop v1.0.4 // indirect",
          "58:  github.com/gabriel-vasile/mimetype v1.4.4 // indirect",
          "61:  github.com/go-logr/logr v1.4.2 // indirect",
          "68:  github.com/go-playground/validator/v10 v10.22.0 // indirect",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "82:  github.com/imdario/mergo v0.3.13 // indirect",
          "83:  github.com/josharian/intern v1.0.0 // indirect",
          "84:  github.com/json-iterator/go v1.1.12 // indirect",
          "86:  github.com/leodido/go-urn v1.4.0 // indirect",
          "87:  github.com/lestrrat-go/blackmagic v1.0.2 // indirect",
          "88:  github.com/lestrrat-go/httpcc v1.0.1 // indirect",
          "",
          "[Removed Lines]",
          "85:  github.com/klauspost/cpuid/v2 v2.2.7 // indirect",
          "",
          "[Added Lines]",
          "86:  github.com/klauspost/cpuid/v2 v2.2.8 // indirect",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "106:  github.com/prometheus/client_model v0.5.0 // indirect",
          "107:  github.com/prometheus/common v0.48.0 // indirect",
          "108:  github.com/prometheus/procfs v0.12.0 // indirect",
          "110:  github.com/russross/blackfriday/v2 v2.1.0 // indirect",
          "111:  github.com/segmentio/asm v1.2.0 // indirect",
          "112:  github.com/shopspring/decimal v1.2.0 // indirect",
          "",
          "[Removed Lines]",
          "109:  github.com/redis/go-redis/v9 v9.5.3 // indirect",
          "",
          "[Added Lines]",
          "110:  github.com/redis/go-redis/v9 v9.6.0 // indirect",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "117:  github.com/ugorji/go/codec v1.2.12 // indirect",
          "118:  github.com/xrash/smetrics v0.0.0-20240312152122-5f08fbb34913 // indirect",
          "119:  github.com/yuin/gopher-lua v1.1.1 // indirect",
          "124:  go.starlark.net v0.0.0-20240314022150-ee8ed142361c // indirect",
          "125:  golang.org/x/arch v0.8.0 // indirect",
          "127:  golang.org/x/mod v0.17.0 // indirect",
          "129:  golang.org/x/oauth2 v0.21.0 // indirect",
          "132:  golang.org/x/text v0.16.0 // indirect",
          "133:  golang.org/x/time v0.5.0 // indirect",
          "134:  golang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d // indirect",
          "136:  gopkg.in/inf.v0 v0.9.1 // indirect",
          "137:  gopkg.in/yaml.v2 v2.4.0 // indirect",
          "138:  gopkg.in/yaml.v3 v3.0.1 // indirect",
          "",
          "[Removed Lines]",
          "120:  go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.45.0 // indirect",
          "121:  go.opentelemetry.io/otel v1.19.0 // indirect",
          "122:  go.opentelemetry.io/otel/metric v1.19.0 // indirect",
          "123:  go.opentelemetry.io/otel/trace v1.19.0 // indirect",
          "126:  golang.org/x/crypto v0.24.0 // indirect",
          "128:  golang.org/x/net v0.25.0 // indirect",
          "130:  golang.org/x/sys v0.21.0 // indirect",
          "131:  golang.org/x/term v0.21.0 // indirect",
          "135:  google.golang.org/protobuf v1.34.1 // indirect",
          "",
          "[Added Lines]",
          "121:  go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.53.0 // indirect",
          "122:  go.opentelemetry.io/otel v1.28.0 // indirect",
          "123:  go.opentelemetry.io/otel/metric v1.28.0 // indirect",
          "124:  go.opentelemetry.io/otel/trace v1.28.0 // indirect",
          "127:  golang.org/x/crypto v0.25.0 // indirect",
          "129:  golang.org/x/net v0.27.0 // indirect",
          "131:  golang.org/x/sys v0.22.0 // indirect",
          "132:  golang.org/x/term v0.22.0 // indirect",
          "136:  google.golang.org/protobuf v1.34.2 // indirect",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: github.com/bsm/gomega v1.27.10/go.mod h1:JyEr/xRbxbtgWNi8tIEVPUYZ5Dzef52k01W3YH0H+O0=",
          "28: github.com/buildkite/yaml v0.0.0-20230306222819-0e4e032d4835 h1:Zfkih+Opdv9y5AOob+8iMsaMYnans+Ozrkb8wiPHbj0=",
          "29: github.com/buildkite/yaml v0.0.0-20230306222819-0e4e032d4835/go.mod h1:AV5wtJnn1/CRaRGlJ8xspkMWfKXV0/pkJVgGleTIrfk=",
          "32: github.com/bytedance/sonic/loader v0.1.1 h1:c+e5Pt1k/cy5wMveRDyk2X4B9hF4g7an8N3zCYjJFNM=",
          "33: github.com/bytedance/sonic/loader v0.1.1/go.mod h1:ncP89zfokxS5LZrJxl5z0UJcsk4M4yY2JpfqGeCtNLU=",
          "38: github.com/cloudwego/base64x v0.1.4 h1:jwCgWpFanWmN8xoIUHa2rtzmkd5J2plF/dnLS6Xd/0Y=",
          "39: github.com/cloudwego/base64x v0.1.4/go.mod h1:0zlkT4Wn5C6NdauXdJRhSKRlJvmclQ1hhJgA0rcu/8w=",
          "40: github.com/cloudwego/iasm v0.2.0 h1:1KNIy1I1H9hNNFEEH3DVnI4UujN+1zjpuk6gwHLTssg=",
          "",
          "[Removed Lines]",
          "30: github.com/bytedance/sonic v1.11.6 h1:oUp34TzMlL+OY1OUWxHqsdkgC/Zfc85zGqw9siXjrc0=",
          "31: github.com/bytedance/sonic v1.11.6/go.mod h1:LysEHSvpvDySVdC2f87zGWf6CIKJcAvqab1ZaiQtds4=",
          "34: github.com/cenkalti/backoff/v4 v4.2.1 h1:y4OZtCnogmCPw98Zjyt5a6+QwPLGkiQsYW5oUqylYbM=",
          "35: github.com/cenkalti/backoff/v4 v4.2.1/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=",
          "36: github.com/cespare/xxhash/v2 v2.2.0 h1:DC2CZ1Ep5Y4k3ZQ899DldepgrayRUGE6BBZ/cd9Cj44=",
          "37: github.com/cespare/xxhash/v2 v2.2.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=",
          "",
          "[Added Lines]",
          "30: github.com/bytedance/sonic v1.11.9 h1:LFHENlIY/SLzDWverzdOvgMztTxcfcF+cqNsz9pK5zg=",
          "31: github.com/bytedance/sonic v1.11.9/go.mod h1:LysEHSvpvDySVdC2f87zGWf6CIKJcAvqab1ZaiQtds4=",
          "34: github.com/cenkalti/backoff/v4 v4.3.0 h1:MyRJ/UdXutAwSAT+s3wNd7MfTIcy71VQueUuFK343L8=",
          "35: github.com/cenkalti/backoff/v4 v4.3.0/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=",
          "36: github.com/cespare/xxhash/v2 v2.3.0 h1:UL815xU9SqsFlibzuggzjXhog7bL6oX9BbNZnL2UFvs=",
          "37: github.com/cespare/xxhash/v2 v2.3.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "72: github.com/evanphx/json-patch v5.6.0+incompatible/go.mod h1:50XU6AFN0ol/bzJsmQLiYLvXMP4fmwYFNcr97nuDLSk=",
          "73: github.com/fatih/color v1.16.0 h1:zmkK9Ngbjj+K0yRhTVONQh1p/HknKYSlNT+vZCzyokM=",
          "74: github.com/fatih/color v1.16.0/go.mod h1:fL2Sau1YI5c0pdGEVCbKQbLXB6edEj1ZgiY4NijnWvE=",
          "79: github.com/ghodss/yaml v1.0.0 h1:wQHKEahhL6wmXdzwWG11gIVCkOv05bNOh+Rxn0yngAk=",
          "80: github.com/ghodss/yaml v1.0.0/go.mod h1:4dBDuWmgqj2HViK6kFavaiC9ZROes6MMH2rRYeMEF04=",
          "81: github.com/gin-contrib/sse v0.1.0 h1:Y/yl/+YNO8GZSjAhjMsSuLt29uWRFHdHYUb5lYOV9qE=",
          "",
          "[Removed Lines]",
          "75: github.com/felixge/httpsnoop v1.0.3 h1:s/nj+GCswXYzN5v2DpNMuMQYe+0DDwt5WVCU6CWBdXk=",
          "76: github.com/felixge/httpsnoop v1.0.3/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=",
          "77: github.com/gabriel-vasile/mimetype v1.4.3 h1:in2uUcidCuFcDKtdcBxlR0rJ1+fsokWf+uqxgUFjbI0=",
          "78: github.com/gabriel-vasile/mimetype v1.4.3/go.mod h1:d8uq/6HKRL6CGdk+aubisF/M5GcPfT7nKyLpA0lbSSk=",
          "",
          "[Added Lines]",
          "75: github.com/felixge/httpsnoop v1.0.4 h1:NFTV2Zj1bL4mc9sqWACXbQFVBBg2W3GPvqp8/ESS2Wg=",
          "76: github.com/felixge/httpsnoop v1.0.4/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=",
          "77: github.com/gabriel-vasile/mimetype v1.4.4 h1:QjV6pZ7/XZ7ryI2KuyeEDE8wnh7fHP9YnQy+R0LnH8I=",
          "78: github.com/gabriel-vasile/mimetype v1.4.4/go.mod h1:JwLei5XPtWdGiMFB5Pjle1oEeoSeEuJfJE+TtfvdB/s=",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "83: github.com/gin-gonic/gin v1.10.0 h1:nTuyha1TYqgedzytsKYqna+DfLos46nTv2ygFy86HFU=",
          "84: github.com/gin-gonic/gin v1.10.0/go.mod h1:4PMNQiOhvDRa013RKVbsiNwoyezlm2rm0uX/T7kzp5Y=",
          "85: github.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=",
          "88: github.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=",
          "89: github.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=",
          "90: github.com/go-openapi/jsonpointer v0.19.6 h1:eCs3fxoIi3Wh6vtgmLTOjdhSpiqphQ+DaPn38N2ZdrE=",
          "",
          "[Removed Lines]",
          "86: github.com/go-logr/logr v1.4.1 h1:pKouT5E8xu9zeFC39JXRDukb6JFQPXM5p5I91188VAQ=",
          "87: github.com/go-logr/logr v1.4.1/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=",
          "",
          "[Added Lines]",
          "86: github.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=",
          "87: github.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "99: github.com/go-playground/locales v0.14.1/go.mod h1:hxrqLVvrK65+Rwrd5Fc6F2O76J/NuW9t0sjnWqG1slY=",
          "100: github.com/go-playground/universal-translator v0.18.1 h1:Bcnm0ZwsGyWbCzImXv+pAJnYK9S473LQFuzCbDbfSFY=",
          "101: github.com/go-playground/universal-translator v0.18.1/go.mod h1:xekY+UJKNuX9WP91TpwSH2VMlDf28Uj24BCp08ZFTUY=",
          "104: github.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572 h1:tfuBGBXKqDEevZMzYi5KSi8KkcZtzBcTgAUUtapy0OI=",
          "105: github.com/go-task/slim-sprig v0.0.0-20230315185526-52ccab3ef572/go.mod h1:9Pwr4B2jHnOSGXyyzV8ROjYa2ojvAY6HCGYYfMoC3Ls=",
          "106: github.com/go-vela/sdk-go v0.24.0 h1:QmwcF8h/Fq1mwbE8mdvqyTmXM2Z3sE0dLQLEMc7HA4w=",
          "107: github.com/go-vela/sdk-go v0.24.0/go.mod h1:TmJI0KOt/KweLy0HE4JGpKYDPsbhW4sdl2AY/tWP0tY=",
          "112: github.com/goccy/go-json v0.10.3 h1:KZ5WoDbxAIgm2HNbYckL0se1fHD6rz5j4ywS6ebzDqA=",
          "113: github.com/goccy/go-json v0.10.3/go.mod h1:oq7eo15ShAhp70Anwd5lgX2pLfOS3QCiwU/PULtXL6M=",
          "114: github.com/gogo/protobuf v1.3.2 h1:Ov1cvc58UF3b5XjBnZv7+opcTcQFZebYjWzi34vdm4Q=",
          "",
          "[Removed Lines]",
          "102: github.com/go-playground/validator/v10 v10.20.0 h1:K9ISHbSaI0lyB2eWMPJo+kOS/FBExVwjEviJTixqxL8=",
          "103: github.com/go-playground/validator/v10 v10.20.0/go.mod h1:dbuPbCMFw/DrkbEynArYaCwl3amGuJotoKCe95atGMM=",
          "108: github.com/go-vela/server v0.24.1 h1:iM5REZBh6oHD0nxEH4O6dkUWNhY3MNrWBLNWGUUwcP8=",
          "109: github.com/go-vela/server v0.24.1/go.mod h1:jCnJPiyaRLcdy1u5fKIf7BqsbYAbVMjjI7dlyxZovME=",
          "110: github.com/go-vela/types v0.24.1-0.20240813201820-772b29b91a5e h1:6OHP0aQ2SKwNyL5Q+qYo+Yts6MD3PwmkqWKGoH3AlTI=",
          "111: github.com/go-vela/types v0.24.1-0.20240813201820-772b29b91a5e/go.mod h1:YWj6BIapl9Kbj4yHq/fp8jltXdGiwD/gTy1ez32Rzag=",
          "",
          "[Added Lines]",
          "102: github.com/go-playground/validator/v10 v10.22.0 h1:k6HsTZ0sTnROkhS//R0O+55JgM8C4Bx7ia+JlgcnOao=",
          "103: github.com/go-playground/validator/v10 v10.22.0/go.mod h1:dbuPbCMFw/DrkbEynArYaCwl3amGuJotoKCe95atGMM=",
          "108: github.com/go-vela/server v0.24.3-0.20240920134429-f31811890bd4 h1:epkeDkij1wdxUQixDvFeQI5va0zTEiAGdLhoHat1Hd8=",
          "109: github.com/go-vela/server v0.24.3-0.20240920134429-f31811890bd4/go.mod h1:zqZVJppH7RDeB+k5yC1n9mC/P95Uoqmv140Tj7F7pX4=",
          "110: github.com/go-vela/types v0.24.1-0.20240826141537-76a66e72d5dc h1:VyT2tBwPVO9fMmn+22TC4rY4dp+d71To/Qo5Vk4cOSo=",
          "111: github.com/go-vela/types v0.24.1-0.20240826141537-76a66e72d5dc/go.mod h1:WcSiFm8cWuErRw4aI08NrfM+SZzidnbUs2fmO5klFKo=",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "126: github.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=",
          "127: github.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=",
          "128: github.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=",
          "131: github.com/google/go-querystring v1.1.0 h1:AnCroh3fv4ZBgVIf1Iwtovgjaw/GiKJo8M8yD/fhyJ8=",
          "132: github.com/google/go-querystring v1.1.0/go.mod h1:Kcdr2DB4koayq7X8pmAG4sNG59So17icRSOU623lUBU=",
          "133: github.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=",
          "",
          "[Removed Lines]",
          "129: github.com/google/go-github/v62 v62.0.0 h1:/6mGCaRywZz9MuHyw9gD1CwsbmBX8GWsbFkwMmHdhl4=",
          "130: github.com/google/go-github/v62 v62.0.0/go.mod h1:EMxeUqGJq2xRu9DYBMwel/mr7kZrzUOfQmmpYrZn2a4=",
          "",
          "[Added Lines]",
          "129: github.com/google/go-github/v63 v63.0.0 h1:13xwK/wk9alSokujB9lJkuzdmQuVn2QCPeck76wR3nE=",
          "130: github.com/google/go-github/v63 v63.0.0/go.mod h1:IqbcrgUmIcEaioWrGYei/09o+ge5vhffGOcxrO0AfmA=",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "140: github.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=",
          "141: github.com/goware/urlx v0.3.2 h1:gdoo4kBHlkqZNaf6XlQ12LGtQOmpKJrR04Rc3RnpJEo=",
          "142: github.com/goware/urlx v0.3.2/go.mod h1:h8uwbJy68o+tQXCGZNa9D73WN8n0r9OBae5bUnLcgjw=",
          "145: github.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=",
          "146: github.com/hashicorp/errwrap v1.1.0 h1:OxrOeh75EUXMY8TBjag2fzXGZ40LB6IKw45YeGUDY2I=",
          "147: github.com/hashicorp/errwrap v1.1.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=",
          "",
          "[Removed Lines]",
          "143: github.com/grpc-ecosystem/grpc-gateway/v2 v2.16.0 h1:YBftPWNWd4WwGqtY2yeZL2ef8rHAxPBD8KFhJpmcqms=",
          "144: github.com/grpc-ecosystem/grpc-gateway/v2 v2.16.0/go.mod h1:YN5jB8ie0yfIUg6VvR9Kz84aCaG7AsGZnLjhHbUqwPg=",
          "",
          "[Added Lines]",
          "143: github.com/grpc-ecosystem/grpc-gateway/v2 v2.21.0 h1:CWyXh/jylQWp2dtiV33mY4iSSp6yf4lmn+c7/tN+ObI=",
          "144: github.com/grpc-ecosystem/grpc-gateway/v2 v2.21.0/go.mod h1:nCLIt0w3Ept2NwF8ThLmrppXsfT07oC8k0XNDxd8sVU=",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "169: github.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=",
          "170: github.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=",
          "171: github.com/klauspost/cpuid/v2 v2.0.9/go.mod h1:FInQzS24/EEf25PyTYn52gqo7WaD8xa0213Md/qVLRg=",
          "174: github.com/knz/go-libedit v1.10.1/go.mod h1:MZTVkCWyz0oBc7JOWP3wNAzd002ZbM/5hgShxwh4x8M=",
          "175: github.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=",
          "176: github.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=",
          "",
          "[Removed Lines]",
          "172: github.com/klauspost/cpuid/v2 v2.2.7 h1:ZWSB3igEs+d0qvnxR/ZBzXVmxkgt8DdzP6m9pfuVLDM=",
          "173: github.com/klauspost/cpuid/v2 v2.2.7/go.mod h1:Lcz8mBdAVJIBVzewtcLocK12l3Y+JytZYpaMropDUws=",
          "",
          "[Added Lines]",
          "172: github.com/klauspost/cpuid/v2 v2.2.8 h1:+StwCXwm9PdpiEkPyzBXIy+M9KUb4ODm0Zarf1kS5BM=",
          "173: github.com/klauspost/cpuid/v2 v2.2.8/go.mod h1:Lcz8mBdAVJIBVzewtcLocK12l3Y+JytZYpaMropDUws=",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "240: github.com/prometheus/common v0.48.0/go.mod h1:0/KsvlIEfPQCQ5I2iNSAWKPZziNCvRs5EC6ILDTlAPc=",
          "241: github.com/prometheus/procfs v0.12.0 h1:jluTpSng7V9hY0O2R9DzzJHYb2xULk9VTR1V1R/k6Bo=",
          "242: github.com/prometheus/procfs v0.12.0/go.mod h1:pcuDEFsWDnvcgNzo4EEweacyhjeA9Zk3cnaOZAZEfOo=",
          "245: github.com/rogpeppe/go-internal v1.11.0 h1:cWPaGQEPrBb5/AsnsZesgZZ9yb1OQ+GOISoDNXVBh4M=",
          "246: github.com/rogpeppe/go-internal v1.11.0/go.mod h1:ddIwULY96R17DhadqLgMfk9H9tvdUzkipdSkR5nkCZA=",
          "247: github.com/russross/blackfriday/v2 v2.1.0 h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=",
          "",
          "[Removed Lines]",
          "243: github.com/redis/go-redis/v9 v9.5.3 h1:fOAp1/uJG+ZtcITgZOfYFmTKPE7n4Vclj1wZFgRciUU=",
          "244: github.com/redis/go-redis/v9 v9.5.3/go.mod h1:hdY0cQFCN4fnSYT6TkisLufl/4W5UIXyv0b/CLO2V2M=",
          "",
          "[Added Lines]",
          "243: github.com/redis/go-redis/v9 v9.6.0 h1:NLck+Rab3AOTHw21CGRpvQpgTrAU4sgdCswqGtlhGRA=",
          "244: github.com/redis/go-redis/v9 v9.6.0/go.mod h1:hdY0cQFCN4fnSYT6TkisLufl/4W5UIXyv0b/CLO2V2M=",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "287: github.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=",
          "288: github.com/yuin/gopher-lua v1.1.1 h1:kYKnWBjvbNP4XLT3+bPEwAXJx262OhaHDWDVOPjL46M=",
          "289: github.com/yuin/gopher-lua v1.1.1/go.mod h1:GBR0iDaNXjAgGg9zfCvksxSRnQx76gclCIb7kdAd1Pw=",
          "306: go.starlark.net v0.0.0-20240314022150-ee8ed142361c h1:roAjH18hZcwI4hHStHbkXjF5b7UUyZ/0SG3hXNN1SjA=",
          "307: go.starlark.net v0.0.0-20240314022150-ee8ed142361c/go.mod h1:YKMCv9b1WrfWmeqdV5MAuEHWsu5iC+fe6kYl2sQjdI8=",
          "308: golang.org/x/arch v0.0.0-20210923205945-b76863e36670/go.mod h1:5om86z9Hs0C8fWVUuoMHwpExlXzs5Tkyp9hOrfG7pp8=",
          "",
          "[Removed Lines]",
          "290: go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.45.0 h1:x8Z78aZx8cOF0+Kkazoc7lwUNMGy0LrzEMxTm4BbTxg=",
          "291: go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.45.0/go.mod h1:62CPTSry9QZtOaSsE3tOzhx6LzDhHnXJ6xHeMNNiM6Q=",
          "292: go.opentelemetry.io/otel v1.19.0 h1:MuS/TNf4/j4IXsZuJegVzI1cwut7Qc00344rgH7p8bs=",
          "293: go.opentelemetry.io/otel v1.19.0/go.mod h1:i0QyjOq3UPoTzff0PJB2N66fb4S0+rSbSB15/oyH9fY=",
          "294: go.opentelemetry.io/otel/exporters/otlp/otlptrace v1.19.0 h1:Mne5On7VWdx7omSrSSZvM4Kw7cS7NQkOOmLcgscI51U=",
          "295: go.opentelemetry.io/otel/exporters/otlp/otlptrace v1.19.0/go.mod h1:IPtUMKL4O3tH5y+iXVyAXqpAwMuzC1IrxVS81rummfE=",
          "296: go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.19.0 h1:IeMeyr1aBvBiPVYihXIaeIZba6b8E1bYp7lbdxK8CQg=",
          "297: go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.19.0/go.mod h1:oVdCUtjq9MK9BlS7TtucsQwUcXcymNiEDjgDD2jMtZU=",
          "298: go.opentelemetry.io/otel/metric v1.19.0 h1:aTzpGtV0ar9wlV4Sna9sdJyII5jTVJEvKETPiOKwvpE=",
          "299: go.opentelemetry.io/otel/metric v1.19.0/go.mod h1:L5rUsV9kM1IxCj1MmSdS+JQAcVm319EUrDVLrt7jqt8=",
          "300: go.opentelemetry.io/otel/sdk v1.19.0 h1:6USY6zH+L8uMH8L3t1enZPR3WFEmSTADlqldyHtJi3o=",
          "301: go.opentelemetry.io/otel/sdk v1.19.0/go.mod h1:NedEbbS4w3C6zElbLdPJKOpJQOrGUJ+GfzpjUvI0v1A=",
          "302: go.opentelemetry.io/otel/trace v1.19.0 h1:DFVQmlVbfVeOuBRrwdtaehRrWiL1JoVs9CPIQ1Dzxpg=",
          "303: go.opentelemetry.io/otel/trace v1.19.0/go.mod h1:mfaSyvGyEJEI0nyV2I4qhNQnbBOUUmYZpYojqMnX2vo=",
          "304: go.opentelemetry.io/proto/otlp v1.0.0 h1:T0TX0tmXU8a3CbNXzEKGeU5mIVOdf0oykP+u2lIVU/I=",
          "305: go.opentelemetry.io/proto/otlp v1.0.0/go.mod h1:Sy6pihPLfYHkr3NkUbEhGHFhINUSI/v80hjKIs5JXpM=",
          "",
          "[Added Lines]",
          "290: go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.53.0 h1:4K4tsIXefpVJtvA/8srF4V4y0akAoPHkIslgAkjixJA=",
          "291: go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.53.0/go.mod h1:jjdQuTGVsXV4vSs+CJ2qYDeDPf9yIJV23qlIzBm73Vg=",
          "292: go.opentelemetry.io/otel v1.28.0 h1:/SqNcYk+idO0CxKEUOtKQClMK/MimZihKYMruSMViUo=",
          "293: go.opentelemetry.io/otel v1.28.0/go.mod h1:q68ijF8Fc8CnMHKyzqL6akLO46ePnjkgfIMIjUIX9z4=",
          "294: go.opentelemetry.io/otel/exporters/otlp/otlptrace v1.28.0 h1:3Q/xZUyC1BBkualc9ROb4G8qkH90LXEIICcs5zv1OYY=",
          "295: go.opentelemetry.io/otel/exporters/otlp/otlptrace v1.28.0/go.mod h1:s75jGIWA9OfCMzF0xr+ZgfrB5FEbbV7UuYo32ahUiFI=",
          "296: go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.28.0 h1:j9+03ymgYhPKmeXGk5Zu+cIZOlVzd9Zv7QIiyItjFBU=",
          "297: go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.28.0/go.mod h1:Y5+XiUG4Emn1hTfciPzGPJaSI+RpDts6BnCIir0SLqk=",
          "298: go.opentelemetry.io/otel/metric v1.28.0 h1:f0HGvSl1KRAU1DLgLGFjrwVyismPlnuU6JD6bOeuA5Q=",
          "299: go.opentelemetry.io/otel/metric v1.28.0/go.mod h1:Fb1eVBFZmLVTMb6PPohq3TO9IIhUisDsbJoL/+uQW4s=",
          "300: go.opentelemetry.io/otel/sdk v1.28.0 h1:b9d7hIry8yZsgtbmM0DKyPWMMUMlK9NEKuIG4aBqWyE=",
          "301: go.opentelemetry.io/otel/sdk v1.28.0/go.mod h1:oYj7ClPUA7Iw3m+r7GeEjz0qckQRJK2B8zjcZEfu7Pg=",
          "302: go.opentelemetry.io/otel/trace v1.28.0 h1:GhQ9cUuQGmNDd5BTCP2dAvv75RdMxEfTmYejp+lkx9g=",
          "303: go.opentelemetry.io/otel/trace v1.28.0/go.mod h1:jPyXzNPg6da9+38HEwElrQiHlVMTnVfM3/yv2OlIHaI=",
          "304: go.opentelemetry.io/proto/otlp v1.3.1 h1:TrMUixzpM0yuc/znrFTP9MMRh8trP93mkCiDVeXrui0=",
          "305: go.opentelemetry.io/proto/otlp v1.3.1/go.mod h1:0X1WI4de4ZsLrrJNLAQbFeLCm3T7yBkR0XqQ7niQU+8=",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "313: golang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=",
          "314: golang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=",
          "315: golang.org/x/crypto v0.3.0/go.mod h1:hebNnKkNXi2UzZN1eVRvBB7co0a+JxK6XbPiWVs/3J4=",
          "318: golang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=",
          "319: golang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=",
          "320: golang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=",
          "",
          "[Removed Lines]",
          "316: golang.org/x/crypto v0.24.0 h1:mnl8DM0o513X8fdIkmyFE/5hTYxbwYOjDS/+rK6qpRI=",
          "317: golang.org/x/crypto v0.24.0/go.mod h1:Z1PMYSOR5nyMcyAVAIQSKCDwalqy85Aqn1x3Ws4L5DM=",
          "",
          "[Added Lines]",
          "316: golang.org/x/crypto v0.25.0 h1:ypSNr+bnYL2YhwoMt2zPxHFmbAN1KZs/njMG3hxUp30=",
          "317: golang.org/x/crypto v0.25.0/go.mod h1:T+wALwcMOSE0kXgUAnPAHqTLW+XHgcELELW8VaDgm/M=",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "329: golang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=",
          "330: golang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=",
          "331: golang.org/x/net v0.2.0/go.mod h1:KqCZLdyyvdV855qA2rE3GC2aiw5xGR5TEjj8smXukLY=",
          "334: golang.org/x/oauth2 v0.21.0 h1:tsimM75w1tF/uws5rbeHzIWxEqElMehnc+iW793zsZs=",
          "335: golang.org/x/oauth2 v0.21.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=",
          "336: golang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "",
          "[Removed Lines]",
          "332: golang.org/x/net v0.25.0 h1:d/OCCoBEUq33pjydKrGQhw7IlUPI2Oylr+8qLx49kac=",
          "333: golang.org/x/net v0.25.0/go.mod h1:JkAGAh7GEvH74S6FOH42FLoXpXbE/aqXSrIQjXgsiwM=",
          "",
          "[Added Lines]",
          "332: golang.org/x/net v0.27.0 h1:5K3Njcw06/l2y9vpGCSdcxWOYHOUk3dVNGDXN+FvAys=",
          "333: golang.org/x/net v0.27.0/go.mod h1:dDi0PyhWNoiUOrAS8uXv/vnScO4wnHQO4mj9fn/RytE=",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "351: golang.org/x/sys v0.2.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "352: golang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "353: golang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "356: golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=",
          "357: golang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=",
          "358: golang.org/x/term v0.2.0/go.mod h1:TVmDHMZPmdnySmBfhjOoOdhjzdE1h4u1VwSiw2l1Nuc=",
          "361: golang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=",
          "362: golang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=",
          "363: golang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=",
          "",
          "[Removed Lines]",
          "354: golang.org/x/sys v0.21.0 h1:rF+pYz3DAGSQAxAu1CbC7catZg4ebC4UIeIhKxBZvws=",
          "355: golang.org/x/sys v0.21.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=",
          "359: golang.org/x/term v0.21.0 h1:WVXCp+/EBEHOj53Rvu+7KiT/iElMrO8ACK16SMZ3jaA=",
          "360: golang.org/x/term v0.21.0/go.mod h1:ooXLefLobQVslOqselCNF4SxFAaoS6KujMbsGzSDmX0=",
          "",
          "[Added Lines]",
          "354: golang.org/x/sys v0.22.0 h1:RI27ohtqKCnwULzJLqkv897zojh5/DwS/ENaMzUOaWI=",
          "355: golang.org/x/sys v0.22.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=",
          "359: golang.org/x/term v0.22.0 h1:BbsgPEJULsl2fV/AT3v15Mjva5yXKQDyKf+TbDz7QJk=",
          "360: golang.org/x/term v0.22.0/go.mod h1:F3qCibpT5AMpCRfhfT53vVJwhLtIVHhB9XDjfFvnMI4=",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "379: golang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=",
          "380: golang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=",
          "381: google.golang.org/genproto v0.0.0-20231106174013-bbf56f31fb17 h1:wpZ8pe2x1Q3f2KyT5f8oP/fa9rHAKgFPr/HZdNuS+PQ=",
          "390: gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=",
          "391: gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=",
          "392: gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=",
          "",
          "[Removed Lines]",
          "382: google.golang.org/genproto/googleapis/api v0.0.0-20231106174013-bbf56f31fb17 h1:JpwMPBpFN3uKhdaekDpiNlImDdkUAyiJ6ez/uxGaUSo=",
          "383: google.golang.org/genproto/googleapis/api v0.0.0-20231106174013-bbf56f31fb17/go.mod h1:0xJLfVdJqpAPl8tDg1ujOCGzx6LFLttXT5NhllGOXY4=",
          "384: google.golang.org/genproto/googleapis/rpc v0.0.0-20231120223509-83a465c0220f h1:ultW7fxlIvee4HYrtnaRPon9HpEgFk5zYpmfMgtKB5I=",
          "385: google.golang.org/genproto/googleapis/rpc v0.0.0-20231120223509-83a465c0220f/go.mod h1:L9KNLi232K1/xB6f7AlSX692koaRnKaWSR0stBki0Yc=",
          "386: google.golang.org/grpc v1.59.0 h1:Z5Iec2pjwb+LEOqzpB2MR12/eKFhDPhuqW91O+4bwUk=",
          "387: google.golang.org/grpc v1.59.0/go.mod h1:aUPDwccQo6OTjy7Hct4AfBPD1GptF4fyUjIkQ9YtF98=",
          "388: google.golang.org/protobuf v1.34.1 h1:9ddQBjfCyZPOHPUiPxpYESBLc+T8P3E+Vo4IbKZgFWg=",
          "389: google.golang.org/protobuf v1.34.1/go.mod h1:c6P6GXX6sHbq/GpV6MGZEdwhWPcYBgnhAHhKbcUYpos=",
          "",
          "[Added Lines]",
          "382: google.golang.org/genproto/googleapis/api v0.0.0-20240730163845-b1a4ccb954bf h1:GillM0Ef0pkZPIB+5iO6SDK+4T9pf6TpaYR6ICD5rVE=",
          "383: google.golang.org/genproto/googleapis/api v0.0.0-20240730163845-b1a4ccb954bf/go.mod h1:OFMYQFHJ4TM3JRlWDZhJbZfra2uqc3WLBZiaaqP4DtU=",
          "384: google.golang.org/genproto/googleapis/rpc v0.0.0-20240730163845-b1a4ccb954bf h1:liao9UHurZLtiEwBgT9LMOnKYsHze6eA6w1KQCMVN2Q=",
          "385: google.golang.org/genproto/googleapis/rpc v0.0.0-20240730163845-b1a4ccb954bf/go.mod h1:Ue6ibwXGpU+dqIcODieyLOcgj7z8+IcskoNIgZxtrFY=",
          "386: google.golang.org/grpc v1.65.0 h1:bs/cUb4lp1G5iImFFd3u5ixQzweKizoZJAwBNLR42lc=",
          "387: google.golang.org/grpc v1.65.0/go.mod h1:WgYC2ypjlB0EiQi6wdKixMqukr6lBc0Vo+oOgjrM5ZQ=",
          "388: google.golang.org/protobuf v1.34.2 h1:6xV6lTsCfpGD21XK49h7MhtcApnLqkfYgPcdHftf6hg=",
          "389: google.golang.org/protobuf v1.34.2/go.mod h1:qYOHts0dSfpeUzUFpOMr/WGzszTmLH+DiWniOlNbLDw=",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "406: gotest.tools/v3 v3.5.1/go.mod h1:isy3WKz7GK6uNw/sbHzfKBLvlvXwUyV06n6brMxxopU=",
          "407: k8s.io/api v0.30.2 h1:+ZhRj+28QT4UOH+BKznu4CBgPWgkXO7XAvMcMl0qKvI=",
          "408: k8s.io/api v0.30.2/go.mod h1:ULg5g9JvOev2dG0u2hig4Z7tQ2hHIuS+m8MNZ+X6EmI=",
          "411: k8s.io/client-go v0.30.2 h1:sBIVJdojUNPDU/jObC+18tXWcTJVcwyqS9diGdWHk50=",
          "412: k8s.io/client-go v0.30.2/go.mod h1:JglKSWULm9xlJLx4KCkfLLQ7XwtlbflV6uFFSHTMgVs=",
          "413: k8s.io/klog/v2 v2.120.1 h1:QXU6cPEOIslTGvZaXvFWiP9VKyeet3sawzTOvdXb4Vw=",
          "",
          "[Removed Lines]",
          "409: k8s.io/apimachinery v0.30.2 h1:fEMcnBj6qkzzPGSVsAZtQThU62SmQ4ZymlXRC5yFSCg=",
          "410: k8s.io/apimachinery v0.30.2/go.mod h1:iexa2somDaxdnj7bha06bhb43Zpa6eWH8N8dbqVjTUc=",
          "",
          "[Added Lines]",
          "409: k8s.io/apimachinery v0.30.3 h1:q1laaWCmrszyQuSQCfNB8cFgCuDAoPszKY4ucAjDwHc=",
          "410: k8s.io/apimachinery v0.30.3/go.mod h1:iexa2somDaxdnj7bha06bhb43Zpa6eWH8N8dbqVjTUc=",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "21eece0d21fb3a1c272d6221683ae1558f638023",
      "candidate_info": {
        "commit_hash": "21eece0d21fb3a1c272d6221683ae1558f638023",
        "repo": "go-vela/worker",
        "commit_url": "https://github.com/go-vela/worker/commit/21eece0d21fb3a1c272d6221683ae1558f638023",
        "files": [
          "api/register.go",
          "cmd/vela-worker/server.go",
          "go.mod",
          "router/middleware/worker.go",
          "router/middleware/worker_test.go"
        ],
        "message": "fix(register): verify hostname (#465)",
        "before_after_code_files": [
          "api/register.go||api/register.go",
          "cmd/vela-worker/server.go||cmd/vela-worker/server.go",
          "go.mod||go.mod",
          "router/middleware/worker.go||router/middleware/worker.go",
          "router/middleware/worker_test.go||router/middleware/worker_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod"
          ],
          "candidate": [
            "go.mod||go.mod"
          ]
        }
      },
      "candidate_diff": {
        "api/register.go||api/register.go": [
          "File: api/register.go -> api/register.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: package api",
          "7: import (",
          "8:  \"net/http\"",
          "10:  \"github.com/gin-gonic/gin\"",
          "11:  \"github.com/go-vela/worker/router/middleware/token\"",
          "12: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8:  \"fmt\"",
          "13:  \"github.com/golang-jwt/jwt/v5\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41: func Register(c *gin.Context) {",
          "43:  v, ok := c.Get(\"register-token\")",
          "44:  if !ok {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "45:  w, ok := c.Get(\"worker-hostname\")",
          "46:  if !ok {",
          "47:   c.JSON(http.StatusInternalServerError, \"no worker hostname in the context\")",
          "48:   return",
          "49:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "68:   return",
          "69:  }",
          "72:  rChan <- token",
          "74:  c.JSON(http.StatusOK, \"successfully passed token to worker\")",
          "75: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "81:  sub, err := getSubjectFromToken(token)",
          "82:  if err != nil {",
          "83:   c.JSON(http.StatusUnauthorized, err)",
          "84:   return",
          "85:  }",
          "88:  hostname, ok := w.(string)",
          "89:  if !ok {",
          "90:   c.JSON(http.StatusInternalServerError, \"worker hostname in the context is the wrong type\")",
          "91:   return",
          "92:  }",
          "95:  if sub != hostname {",
          "96:   c.JSON(http.StatusUnauthorized, \"worker hostname is invalid\")",
          "97:   return",
          "98:  }",
          "108: func getSubjectFromToken(token string) (string, error) {",
          "110:  j := jwt.NewParser()",
          "113:  t, _, err := j.ParseUnverified(token, jwt.MapClaims{})",
          "114:  if err != nil {",
          "115:   return \"\", fmt.Errorf(\"unable to parse token\")",
          "116:  }",
          "118:  sub, err := t.Claims.GetSubject()",
          "119:  if err != nil {",
          "120:   return \"\", fmt.Errorf(\"unable to get subject from token\")",
          "121:  }",
          "124:  if len(sub) == 0 {",
          "125:   return \"\", fmt.Errorf(\"no subject defined in token\")",
          "126:  }",
          "128:  return sub, nil",
          "129: }",
          "",
          "---------------"
        ],
        "cmd/vela-worker/server.go||cmd/vela-worker/server.go": [
          "File: cmd/vela-worker/server.go -> cmd/vela-worker/server.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:  _server := router.Load(",
          "32:   middleware.RequestVersion,",
          "33:   middleware.ServerAddress(w.Config.Server.Address),",
          "34:   middleware.Executors(w.Executors),",
          "35:   middleware.Logger(logrus.StandardLogger(), time.RFC3339, true),",
          "36:   middleware.RegisterToken(w.RegisterToken),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34:   middleware.WorkerHostname(w.Config.API.Address.Hostname()),",
          "",
          "---------------"
        ],
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:  github.com/go-vela/sdk-go v0.19.0-rc1",
          "12:  github.com/go-vela/server v0.19.0-rc1",
          "13:  github.com/go-vela/types v0.19.0-rc1",
          "14:  github.com/google/go-cmp v0.5.9",
          "15:  github.com/joho/godotenv v1.5.1",
          "16:  github.com/opencontainers/image-spec v1.0.2",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14:  github.com/golang-jwt/jwt/v5 v5.0.0",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "59:  github.com/go-playground/validator/v10 v10.11.2 // indirect",
          "60:  github.com/goccy/go-json v0.10.0 // indirect",
          "61:  github.com/gogo/protobuf v1.3.2 // indirect",
          "63:  github.com/golang/protobuf v1.5.3 // indirect",
          "64:  github.com/google/gnostic v0.5.7-v3refs // indirect",
          "65:  github.com/google/go-github/v51 v51.0.0 // indirect",
          "",
          "[Removed Lines]",
          "62:  github.com/golang-jwt/jwt/v5 v5.0.0 // indirect",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "router/middleware/worker.go||router/middleware/worker.go": [
          "File: router/middleware/worker.go -> router/middleware/worker.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5: package middleware",
          "7: import (",
          "8:  \"github.com/gin-gonic/gin\"",
          "9: )",
          "13: func WorkerHostname(name string) gin.HandlerFunc {",
          "14:  return func(c *gin.Context) {",
          "15:   c.Set(\"worker-hostname\", name)",
          "16:   c.Next()",
          "17:  }",
          "18: }",
          "",
          "---------------"
        ],
        "router/middleware/worker_test.go||router/middleware/worker_test.go": [
          "File: router/middleware/worker_test.go -> router/middleware/worker_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5: package middleware",
          "7: import (",
          "8:  \"net/http\"",
          "9:  \"net/http/httptest\"",
          "10:  \"reflect\"",
          "11:  \"testing\"",
          "13:  \"github.com/gin-gonic/gin\"",
          "14: )",
          "16: func TestMiddleware_WorkerHostname(t *testing.T) {",
          "18:  got := \"\"",
          "19:  want := \"foobar\"",
          "22:  gin.SetMode(gin.TestMode)",
          "24:  resp := httptest.NewRecorder()",
          "25:  context, engine := gin.CreateTestContext(resp)",
          "26:  context.Request, _ = http.NewRequest(http.MethodGet, \"/health\", nil)",
          "29:  engine.Use(WorkerHostname(want))",
          "30:  engine.GET(\"/health\", func(c *gin.Context) {",
          "31:   got = c.Value(\"worker-hostname\").(string)",
          "33:   c.Status(http.StatusOK)",
          "34:  })",
          "37:  engine.ServeHTTP(context.Writer, context.Request)",
          "39:  if resp.Code != http.StatusOK {",
          "40:   t.Errorf(\"WorkerHostname returned %v, want %v\", resp.Code, http.StatusOK)",
          "41:  }",
          "43:  if !reflect.DeepEqual(got, want) {",
          "44:   t.Errorf(\"WorkerHostname is %v, want %v\", got, want)",
          "45:  }",
          "46: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}