{
  "cve_id": "CVE-2024-8060",
  "cve_desc": "OpenWebUI version 0.3.0 contains a vulnerability in the audio API endpoint `/audio/api/v1/transcriptions` that allows for arbitrary file upload. The application performs insufficient validation on the `file.content_type` and allows user-controlled filenames, leading to a path traversal vulnerability. This can be exploited by an authenticated user to overwrite critical files within the Docker container, potentially leading to remote code execution as the root user.",
  "repo": "open-webui/open-webui",
  "patch_hash": "613a087387c094e71ee91d29c015195ef401e160",
  "patch_info": {
    "commit_hash": "613a087387c094e71ee91d29c015195ef401e160",
    "repo": "open-webui/open-webui",
    "commit_url": "https://github.com/open-webui/open-webui/commit/613a087387c094e71ee91d29c015195ef401e160",
    "files": [
      "backend/open_webui/routers/audio.py"
    ],
    "message": "refac",
    "before_after_code_files": [
      "backend/open_webui/routers/audio.py||backend/open_webui/routers/audio.py"
    ]
  },
  "patch_diff": {
    "backend/open_webui/routers/audio.py||backend/open_webui/routers/audio.py": [
      "File: backend/open_webui/routers/audio.py -> backend/open_webui/routers/audio.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "681:     available_models = []",
      "682:     if request.app.state.config.TTS_ENGINE == \"openai\":",
      "683:         # Use custom endpoint if not using the official OpenAI API URL",
      "685:             try:",
      "687:                 response.raise_for_status()",
      "688:                 data = response.json()",
      "689:                 available_models = data.get(\"models\", [])",
      "690:             except Exception as e:",
      "691:                 log.error(f\"Error fetching models from custom endpoint: {str(e)}\")",
      "693:         else:",
      "694:             available_models = [{\"id\": \"tts-1\"}, {\"id\": \"tts-1-hd\"}]",
      "695:     elif request.app.state.config.TTS_ENGINE == \"elevenlabs\":",
      "",
      "[Removed Lines]",
      "684:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(\"https://api.openai.com\"):",
      "686:                 response = requests.get(f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/models\")",
      "692:                 available_models = []",
      "",
      "[Added Lines]",
      "684:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(",
      "685:             \"https://api.openai.com\"",
      "686:         ):",
      "688:                 response = requests.get(",
      "689:                     f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/models\"",
      "690:                 )",
      "696:                 available_models = [{\"id\": \"tts-1\"}, {\"id\": \"tts-1-hd\"}]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "723:     available_voices = {}",
      "724:     if request.app.state.config.TTS_ENGINE == \"openai\":",
      "725:         # Use custom endpoint if not using the official OpenAI API URL",
      "727:             try:",
      "729:                 response.raise_for_status()",
      "730:                 data = response.json()",
      "731:                 voices_list = data.get(\"voices\", [])",
      "732:                 available_voices = {voice[\"id\"]: voice[\"name\"] for voice in voices_list}",
      "733:             except Exception as e:",
      "734:                 log.error(f\"Error fetching voices from custom endpoint: {str(e)}\")",
      "736:         else:",
      "737:             available_voices = {",
      "738:                 \"alloy\": \"alloy\",",
      "",
      "[Removed Lines]",
      "726:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(\"https://api.openai.com\"):",
      "728:                 response = requests.get(f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/voices\")",
      "735:                 available_voices = {}",
      "",
      "[Added Lines]",
      "730:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(",
      "731:             \"https://api.openai.com\"",
      "732:         ):",
      "734:                 response = requests.get(",
      "735:                     f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/voices\"",
      "736:                 )",
      "743:                 available_voices = {",
      "744:                     \"alloy\": \"alloy\",",
      "745:                     \"echo\": \"echo\",",
      "746:                     \"fable\": \"fable\",",
      "747:                     \"onyx\": \"onyx\",",
      "748:                     \"nova\": \"nova\",",
      "749:                     \"shimmer\": \"shimmer\",",
      "750:                 }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fc6d432c2f4bd765e782d231ac84b99d18a424f3",
      "candidate_info": {
        "commit_hash": "fc6d432c2f4bd765e782d231ac84b99d18a424f3",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/fc6d432c2f4bd765e782d231ac84b99d18a424f3",
        "files": [
          "src/lib/components/chat/MessageInput.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/chat/MessageInput.svelte||src/lib/components/chat/MessageInput.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/chat/MessageInput.svelte||src/lib/components/chat/MessageInput.svelte": [
          "File: src/lib/components/chat/MessageInput.svelte -> src/lib/components/chat/MessageInput.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "1176:               <button",
          "1177:                on:click|preventDefault={() => (webSearchEnabled = !webSearchEnabled)}",
          "1178:                type=\"button\"",
          "1180:                ($settings?.webSearch ?? false) === 'always'",
          "1181:                 ? 'bg-blue-100 dark:bg-blue-500/20 text-blue-500 dark:text-blue-400'",
          "1182:                 : 'bg-transparent text-gray-600 dark:text-gray-300 border-gray-200 hover:bg-gray-100 dark:hover:bg-gray-800'}\"",
          "1183:               >",
          "1184:                <GlobeAlt className=\"size-5\" strokeWidth=\"1.75\" />",
          "1185:                <span",
          "1187:                 >{$i18n.t('Web Search')}</span",
          "1188:                >",
          "1189:               </button>",
          "",
          "[Removed Lines]",
          "1179:                class=\"px-1.5 @lg:px-2.5 py-1.5 flex gap-1.5 items-center text-sm rounded-full font-medium transition-colors duration-300 focus:outline-hidden max-w-full overflow-hidden {webSearchEnabled ||",
          "1186:                 class=\"hidden @lg:block whitespace-nowrap overflow-hidden text-ellipsis translate-y-[0.5px] mr-0.5\"",
          "",
          "[Added Lines]",
          "1179:                class=\"px-1.5 @xl:px-2.5 py-1.5 flex gap-1.5 items-center text-sm rounded-full font-medium transition-colors duration-300 focus:outline-hidden max-w-full overflow-hidden {webSearchEnabled ||",
          "1186:                 class=\"hidden @xl:block whitespace-nowrap overflow-hidden text-ellipsis translate-y-[0.5px] mr-0.5\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1196:                on:click|preventDefault={() =>",
          "1197:                 (imageGenerationEnabled = !imageGenerationEnabled)}",
          "1198:                type=\"button\"",
          "1200:                 ? 'bg-gray-100 dark:bg-gray-500/20 text-gray-600 dark:text-gray-400'",
          "1201:                 : 'bg-transparent text-gray-600 dark:text-gray-300 border-gray-200 hover:bg-gray-100 dark:hover:bg-gray-800 '}\"",
          "1202:               >",
          "1203:                <Photo className=\"size-5\" strokeWidth=\"1.75\" />",
          "1204:                <span",
          "1206:                 >{$i18n.t('Image')}</span",
          "1207:                >",
          "1208:               </button>",
          "",
          "[Removed Lines]",
          "1199:                class=\"px-1.5 @lg:px-2.5 py-1.5 flex gap-1.5 items-center text-sm rounded-full font-medium transition-colors duration-300 focus:outline-hidden max-w-full overflow-hidden {imageGenerationEnabled",
          "1205:                 class=\"hidden @lg:block whitespace-nowrap overflow-hidden text-ellipsis translate-y-[0.5px] mr-0.5\"",
          "",
          "[Added Lines]",
          "1199:                class=\"px-1.5 @xl:px-2.5 py-1.5 flex gap-1.5 items-center text-sm rounded-full font-medium transition-colors duration-300 focus:outline-hidden max-w-full overflow-hidden {imageGenerationEnabled",
          "1205:                 class=\"hidden @xl:block whitespace-nowrap overflow-hidden text-ellipsis translate-y-[0.5px] mr-0.5\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1215:                on:click|preventDefault={() =>",
          "1216:                 (codeInterpreterEnabled = !codeInterpreterEnabled)}",
          "1217:                type=\"button\"",
          "1219:                 ? 'bg-gray-100 dark:bg-gray-500/20 text-gray-600 dark:text-gray-400'",
          "1220:                 : 'bg-transparent text-gray-600 dark:text-gray-300 border-gray-200 hover:bg-gray-100 dark:hover:bg-gray-800 '}\"",
          "1221:               >",
          "1222:                <CommandLine className=\"size-5\" strokeWidth=\"1.75\" />",
          "1223:                <span",
          "1225:                 >{$i18n.t('Code Interpreter')}</span",
          "1226:                >",
          "1227:               </button>",
          "",
          "[Removed Lines]",
          "1218:                class=\"px-1.5 @lg:px-2.5 py-1.5 flex gap-1.5 items-center text-sm rounded-full font-medium transition-colors duration-300 focus:outline-hidden max-w-full overflow-hidden {codeInterpreterEnabled",
          "1224:                 class=\"hidden @lg:block whitespace-nowrap overflow-hidden text-ellipsis translate-y-[0.5px] mr-0.5\"",
          "",
          "[Added Lines]",
          "1218:                class=\"px-1.5 @xl:px-2.5 py-1.5 flex gap-1.5 items-center text-sm rounded-full font-medium transition-colors duration-300 focus:outline-hidden max-w-full overflow-hidden {codeInterpreterEnabled",
          "1224:                 class=\"hidden @xl:block whitespace-nowrap overflow-hidden text-ellipsis translate-y-[0.5px] mr-0.5\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "737b1723c7edb5b85140a23dfa28c5b5ff7aef48",
      "candidate_info": {
        "commit_hash": "737b1723c7edb5b85140a23dfa28c5b5ff7aef48",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/737b1723c7edb5b85140a23dfa28c5b5ff7aef48",
        "files": [
          "src/lib/components/chat/Messages/ResponseMessage.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/chat/Messages/ResponseMessage.svelte||src/lib/components/chat/Messages/ResponseMessage.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/chat/Messages/ResponseMessage.svelte||src/lib/components/chat/Messages/ResponseMessage.svelte": [
          "File: src/lib/components/chat/Messages/ResponseMessage.svelte -> src/lib/components/chat/Messages/ResponseMessage.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "129:  export let isLastMessage = true;",
          "130:  export let readOnly = false;",
          "132:  let showDeleteConfirm = false;",
          "134:  let model = null;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "132:  let buttonsContainerElement: HTMLDivElement;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "520:   await tick();",
          "521:  });",
          "522: </script>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "522:   if (buttonsContainerElement) {",
          "523:    console.log(buttonsContainerElement);",
          "524:    buttonsContainerElement.addEventListener('wheel', function (event) {",
          "527:     event.preventDefault();",
          "528:     if (event.deltaY !== 0) {",
          "530:      buttonsContainerElement.scrollLeft += event.deltaY;",
          "531:     }",
          "532:    });",
          "533:   }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "802:     </div>",
          "804:     {#if !edit}",
          "809:        {#if siblings.length > 1}",
          "810:         <div class=\"flex self-center min-w-fit\" dir=\"ltr\">",
          "811:          <button",
          "",
          "[Removed Lines]",
          "805:      {#if message.done || siblings.length > 1}",
          "806:       <div",
          "807:        class=\" flex justify-start overflow-x-auto buttons text-gray-600 dark:text-gray-500 mt-0.5\"",
          "808:       >",
          "",
          "[Added Lines]",
          "818:      <div",
          "819:       bind:this={buttonsContainerElement}",
          "820:       class=\"flex justify-start overflow-x-auto buttons text-gray-600 dark:text-gray-500 mt-0.5\"",
          "821:      >",
          "822:       {#if message.done || siblings.length > 1}",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1313:          {/if}",
          "1314:         {/if}",
          "1315:        {/if}",
          "1330:     {/if}",
          "1331:    </div>",
          "1332:   </div>",
          "",
          "[Removed Lines]",
          "1316:       </div>",
          "1317:      {/if}",
          "1319:      {#if message.done && showRateComment}",
          "1320:       <RateComment",
          "1321:        bind:message",
          "1322:        bind:show={showRateComment}",
          "1323:        on:save={async (e) => {",
          "1324:         await feedbackHandler(null, {",
          "1325:          ...e.detail",
          "1326:         });",
          "1327:        }}",
          "1328:       />",
          "1329:      {/if}",
          "",
          "[Added Lines]",
          "1330:       {/if}",
          "1332:       {#if message.done && showRateComment}",
          "1333:        <RateComment",
          "1334:         bind:message",
          "1335:         bind:show={showRateComment}",
          "1336:         on:save={async (e) => {",
          "1337:          await feedbackHandler(null, {",
          "1338:           ...e.detail",
          "1339:          });",
          "1340:         }}",
          "1341:        />",
          "1342:       {/if}",
          "1343:      </div>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "71bbdf25c6d392e467274161b421dc9ca508c8c2",
      "candidate_info": {
        "commit_hash": "71bbdf25c6d392e467274161b421dc9ca508c8c2",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/71bbdf25c6d392e467274161b421dc9ca508c8c2",
        "files": [
          "src/lib/components/admin/Settings/Models.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/admin/Settings/Models.svelte||src/lib/components/admin/Settings/Models.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/admin/Settings/Models.svelte||src/lib/components/admin/Settings/Models.svelte": [
          "File: src/lib/components/admin/Settings/Models.svelte -> src/lib/components/admin/Settings/Models.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "128:    await toggleModelById(localStorage.token, model.id);",
          "129:   }",
          "132:   _models.set(await getModels(localStorage.token));",
          "133:  };",
          "",
          "[Removed Lines]",
          "131:   await init();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "16bae8f33a1994798e17681ffee10860e1b561fd",
      "candidate_info": {
        "commit_hash": "16bae8f33a1994798e17681ffee10860e1b561fd",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/16bae8f33a1994798e17681ffee10860e1b561fd",
        "files": [
          "backend/open_webui/config.py",
          "backend/open_webui/utils/middleware.py"
        ],
        "message": "refac",
        "before_after_code_files": [
          "backend/open_webui/config.py||backend/open_webui/config.py",
          "backend/open_webui/utils/middleware.py||backend/open_webui/utils/middleware.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "backend/open_webui/config.py||backend/open_webui/config.py": [
          "File: backend/open_webui/config.py -> backend/open_webui/config.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1378:    - When coding, **always aim to print meaningful outputs** (e.g., results, tables, summaries, or visuals) to better interpret and verify the findings. Avoid relying on implicit outputs; prioritize explicit and clear print statements so the results are effectively communicated to the user.",
          "1379:    - After obtaining the printed output, **always provide a concise analysis, interpretation, or next steps to help the user understand the findings or refine the outcome further.**",
          "1380:    - If the results are unclear, unexpected, or require validation, refine the code and execute it again as needed. Always aim to deliver meaningful insights from the results, iterating if necessary.",
          "1382:    - All responses should be communicated in the chat's primary language, ensuring seamless understanding. If the chat is multilingual, default to English for clarity.",
          "1385: Ensure that the tools are effectively utilized to achieve the highest-quality analysis for the user.\"\"\"",
          "",
          "[Removed Lines]",
          "1381:    - If a link is provided for an image, audio, or any file, include it in the response exactly as given to ensure the user has access to the original resource.",
          "1383:    - **If a link to an image, audio, or any file is provided in markdown format, ALWAYS regurgitate explicitly display it as part of the response to ensure the user can access it easily, do NOT change the link.**",
          "",
          "[Added Lines]",
          "1381:    - **If a link to an image, audio, or any file is provided in markdown format in the output, ALWAYS regurgitate word for word, explicitly display it as part of the response to ensure the user can access it easily, do NOT change the link.**",
          "",
          "---------------"
        ],
        "backend/open_webui/utils/middleware.py||backend/open_webui/utils/middleware.py": [
          "File: backend/open_webui/utils/middleware.py -> backend/open_webui/utils/middleware.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1645:                         content_blocks[-1][\"type\"] == \"code_interpreter\"",
          "1646:                         and retries < MAX_RETRIES",
          "1647:                     ):",
          "1648:                         retries += 1",
          "1649:                         log.debug(f\"Attempt count: {retries}\")",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1648:                         await event_emitter(",
          "1649:                             {",
          "1650:                                 \"type\": \"chat:completion\",",
          "1651:                                 \"data\": {",
          "1652:                                     \"content\": serialize_content_blocks(content_blocks),",
          "1653:                                 },",
          "1654:                             }",
          "1655:                         )",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5465cabd40ee40e600a7154ab5e1be7068930664",
      "candidate_info": {
        "commit_hash": "5465cabd40ee40e600a7154ab5e1be7068930664",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/5465cabd40ee40e600a7154ab5e1be7068930664",
        "files": [
          "backend/open_webui/retrieval/utils.py"
        ],
        "message": "refac",
        "before_after_code_files": [
          "backend/open_webui/retrieval/utils.py||backend/open_webui/retrieval/utils.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "backend/open_webui/retrieval/utils.py||backend/open_webui/retrieval/utils.py": [
          "File: backend/open_webui/retrieval/utils.py -> backend/open_webui/retrieval/utils.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "404:             if full_context:",
          "405:                 try:",
          "406:                     context = get_all_items_from_collections(collection_names)",
          "409:                 except Exception as e:",
          "410:                     log.exception(e)",
          "",
          "[Removed Lines]",
          "408:                     print(\"context\", context)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}