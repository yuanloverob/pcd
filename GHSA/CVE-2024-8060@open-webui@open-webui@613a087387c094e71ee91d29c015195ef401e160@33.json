{
  "cve_id": "CVE-2024-8060",
  "cve_desc": "OpenWebUI version 0.3.0 contains a vulnerability in the audio API endpoint `/audio/api/v1/transcriptions` that allows for arbitrary file upload. The application performs insufficient validation on the `file.content_type` and allows user-controlled filenames, leading to a path traversal vulnerability. This can be exploited by an authenticated user to overwrite critical files within the Docker container, potentially leading to remote code execution as the root user.",
  "repo": "open-webui/open-webui",
  "patch_hash": "613a087387c094e71ee91d29c015195ef401e160",
  "patch_info": {
    "commit_hash": "613a087387c094e71ee91d29c015195ef401e160",
    "repo": "open-webui/open-webui",
    "commit_url": "https://github.com/open-webui/open-webui/commit/613a087387c094e71ee91d29c015195ef401e160",
    "files": [
      "backend/open_webui/routers/audio.py"
    ],
    "message": "refac",
    "before_after_code_files": [
      "backend/open_webui/routers/audio.py||backend/open_webui/routers/audio.py"
    ]
  },
  "patch_diff": {
    "backend/open_webui/routers/audio.py||backend/open_webui/routers/audio.py": [
      "File: backend/open_webui/routers/audio.py -> backend/open_webui/routers/audio.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "681:     available_models = []",
      "682:     if request.app.state.config.TTS_ENGINE == \"openai\":",
      "683:         # Use custom endpoint if not using the official OpenAI API URL",
      "685:             try:",
      "687:                 response.raise_for_status()",
      "688:                 data = response.json()",
      "689:                 available_models = data.get(\"models\", [])",
      "690:             except Exception as e:",
      "691:                 log.error(f\"Error fetching models from custom endpoint: {str(e)}\")",
      "693:         else:",
      "694:             available_models = [{\"id\": \"tts-1\"}, {\"id\": \"tts-1-hd\"}]",
      "695:     elif request.app.state.config.TTS_ENGINE == \"elevenlabs\":",
      "",
      "[Removed Lines]",
      "684:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(\"https://api.openai.com\"):",
      "686:                 response = requests.get(f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/models\")",
      "692:                 available_models = []",
      "",
      "[Added Lines]",
      "684:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(",
      "685:             \"https://api.openai.com\"",
      "686:         ):",
      "688:                 response = requests.get(",
      "689:                     f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/models\"",
      "690:                 )",
      "696:                 available_models = [{\"id\": \"tts-1\"}, {\"id\": \"tts-1-hd\"}]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "723:     available_voices = {}",
      "724:     if request.app.state.config.TTS_ENGINE == \"openai\":",
      "725:         # Use custom endpoint if not using the official OpenAI API URL",
      "727:             try:",
      "729:                 response.raise_for_status()",
      "730:                 data = response.json()",
      "731:                 voices_list = data.get(\"voices\", [])",
      "732:                 available_voices = {voice[\"id\"]: voice[\"name\"] for voice in voices_list}",
      "733:             except Exception as e:",
      "734:                 log.error(f\"Error fetching voices from custom endpoint: {str(e)}\")",
      "736:         else:",
      "737:             available_voices = {",
      "738:                 \"alloy\": \"alloy\",",
      "",
      "[Removed Lines]",
      "726:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(\"https://api.openai.com\"):",
      "728:                 response = requests.get(f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/voices\")",
      "735:                 available_voices = {}",
      "",
      "[Added Lines]",
      "730:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(",
      "731:             \"https://api.openai.com\"",
      "732:         ):",
      "734:                 response = requests.get(",
      "735:                     f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/voices\"",
      "736:                 )",
      "743:                 available_voices = {",
      "744:                     \"alloy\": \"alloy\",",
      "745:                     \"echo\": \"echo\",",
      "746:                     \"fable\": \"fable\",",
      "747:                     \"onyx\": \"onyx\",",
      "748:                     \"nova\": \"nova\",",
      "749:                     \"shimmer\": \"shimmer\",",
      "750:                 }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7dcdb1b40492aae0e7ff570c15084292a524977e",
      "candidate_info": {
        "commit_hash": "7dcdb1b40492aae0e7ff570c15084292a524977e",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/7dcdb1b40492aae0e7ff570c15084292a524977e",
        "files": [
          "src/lib/stores/index.ts"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/stores/index.ts||src/lib/stores/index.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/stores/index.ts||src/lib/stores/index.ts": [
          "File: src/lib/stores/index.ts -> src/lib/stores/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "47: export const chatTitle = writable('');",
          "49: export const channels = writable([]);",
          "51: export const pinnedChats = writable([]);",
          "52: export const tags = writable([]);",
          "",
          "[Removed Lines]",
          "50: export const chats = writable([]);",
          "",
          "[Added Lines]",
          "50: export const chats = writable(null);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5d2e725f81f5573765c1ec2cf9f79962435667a7",
      "candidate_info": {
        "commit_hash": "5d2e725f81f5573765c1ec2cf9f79962435667a7",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/5d2e725f81f5573765c1ec2cf9f79962435667a7",
        "files": [
          "src/lib/components/chat/MessageInput.svelte",
          "src/lib/components/chat/Messages/Markdown/MarkdownTokens.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/chat/MessageInput.svelte||src/lib/components/chat/MessageInput.svelte",
          "src/lib/components/chat/Messages/Markdown/MarkdownTokens.svelte||src/lib/components/chat/Messages/Markdown/MarkdownTokens.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/chat/MessageInput.svelte||src/lib/components/chat/MessageInput.svelte": [
          "File: src/lib/components/chat/MessageInput.svelte -> src/lib/components/chat/MessageInput.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "821:          {:else}",
          "822:           <textarea",
          "823:            id=\"chat-input\"",
          "824:            bind:this={chatInputElement}",
          "825:            class=\"scrollbar-hidden bg-transparent dark:text-gray-100 outline-hidden w-full pt-3 px-1 resize-none\"",
          "826:            placeholder={placeholder ? placeholder : $i18n.t('Send a Message')}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "824:            dir=\"auto\"",
          "",
          "---------------"
        ],
        "src/lib/components/chat/Messages/Markdown/MarkdownTokens.svelte||src/lib/components/chat/Messages/Markdown/MarkdownTokens.svelte": [
          "File: src/lib/components/chat/Messages/Markdown/MarkdownTokens.svelte -> src/lib/components/chat/Messages/Markdown/MarkdownTokens.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "184:   {/if}",
          "185:  {:else if token.type === 'list'}",
          "186:   {#if token.ordered}",
          "188:     {#each token.items as item, itemIdx}",
          "190:       {#if item?.task}",
          "191:        <input",
          "192:         class=\" translate-y-[1px] -translate-x-1\"",
          "",
          "[Removed Lines]",
          "187:    <ol start={token.start || 1}>",
          "189:      <li dir=\"auto\" class=\"text-start\">",
          "",
          "[Added Lines]",
          "187:    <ol start={token.start || 1} dir=\"auto\">",
          "189:      <li class=\"text-start\">",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "216:     {/each}",
          "217:    </ol>",
          "218:   {:else}",
          "220:     {#each token.items as item, itemIdx}",
          "222:       {#if item?.task}",
          "223:        <input",
          "224:         class=\" translate-y-[1px] -translate-x-1\"",
          "",
          "[Removed Lines]",
          "219:    <ul>",
          "221:      <li dir=\"auto\" class=\"text-start\">",
          "",
          "[Added Lines]",
          "219:    <ul dir=\"auto\">",
          "221:      <li class=\"text-start\">",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "75b18f92b90108bf94a0e25490f927a7e54a8eca",
      "candidate_info": {
        "commit_hash": "75b18f92b90108bf94a0e25490f927a7e54a8eca",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/75b18f92b90108bf94a0e25490f927a7e54a8eca",
        "files": [
          "src/lib/components/AddConnectionModal.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/AddConnectionModal.svelte||src/lib/components/AddConnectionModal.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/AddConnectionModal.svelte||src/lib/components/AddConnectionModal.svelte": [
          "File: src/lib/components/AddConnectionModal.svelte -> src/lib/components/AddConnectionModal.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "79:  const submitHandler = async () => {",
          "80:   loading = true;",
          "83:    loading = false;",
          "85:    return;",
          "86:   }",
          "",
          "[Removed Lines]",
          "82:   if (!ollama && (!url || !key)) {",
          "84:    toast.error('URL and Key are required');",
          "",
          "[Added Lines]",
          "82:   if (!ollama && !url) {",
          "84:    toast.error('URL is required');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "223:           className=\"w-full text-sm bg-transparent placeholder:text-gray-300 dark:placeholder:text-gray-700 outline-hidden\"",
          "224:           bind:value={key}",
          "225:           placeholder={$i18n.t('API Key')}",
          "227:          />",
          "228:         </div>",
          "229:        </div>",
          "",
          "[Removed Lines]",
          "226:           required={!ollama}",
          "",
          "[Added Lines]",
          "226:           required={false}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9ea6cea0baa7b2eab23c3b4db3b03a7afe811da4",
      "candidate_info": {
        "commit_hash": "9ea6cea0baa7b2eab23c3b4db3b03a7afe811da4",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/9ea6cea0baa7b2eab23c3b4db3b03a7afe811da4",
        "files": [
          "backend/open_webui/utils/tools.py"
        ],
        "message": "refac",
        "before_after_code_files": [
          "backend/open_webui/utils/tools.py||backend/open_webui/utils/tools.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "backend/open_webui/utils/tools.py||backend/open_webui/utils/tools.py": [
          "File: backend/open_webui/utils/tools.py -> backend/open_webui/utils/tools.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "337:             tool = {",
          "338:                 \"type\": \"function\",",
          "339:                 \"name\": operation.get(\"operationId\"),",
          "341:                 \"parameters\": {\"type\": \"object\", \"properties\": {}, \"required\": []},",
          "342:             }",
          "",
          "[Removed Lines]",
          "340:                 \"description\": operation.get(\"summary\", \"No description available.\"),",
          "",
          "[Added Lines]",
          "340:                 \"description\": operation.get(",
          "341:                     \"description\", operation.get(\"summary\", \"No description available.\")",
          "342:                 ),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8daa549146a47c6c7a5ca0ca5dffbf815bfb967c",
      "candidate_info": {
        "commit_hash": "8daa549146a47c6c7a5ca0ca5dffbf815bfb967c",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/8daa549146a47c6c7a5ca0ca5dffbf815bfb967c",
        "files": [
          "backend/open_webui/config.py",
          "backend/open_webui/main.py",
          "backend/open_webui/routers/configs.py",
          "src/lib/apis/configs/index.ts",
          "src/lib/components/AddConnectionModal.svelte",
          "src/lib/components/admin/Settings/Connections.svelte",
          "src/lib/components/admin/Settings/Connections/OllamaConnection.svelte",
          "src/lib/components/admin/Settings/Connections/OpenAIConnection.svelte",
          "src/lib/components/chat/Settings/Connections.svelte",
          "src/lib/components/chat/Settings/Connections/Connection.svelte",
          "src/lib/components/chat/SettingsModal.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "backend/open_webui/config.py||backend/open_webui/config.py",
          "backend/open_webui/main.py||backend/open_webui/main.py",
          "backend/open_webui/routers/configs.py||backend/open_webui/routers/configs.py",
          "src/lib/apis/configs/index.ts||src/lib/apis/configs/index.ts",
          "src/lib/components/admin/Settings/Connections.svelte||src/lib/components/admin/Settings/Connections.svelte",
          "src/lib/components/admin/Settings/Connections/OllamaConnection.svelte||src/lib/components/admin/Settings/Connections/OllamaConnection.svelte",
          "src/lib/components/admin/Settings/Connections/OpenAIConnection.svelte||src/lib/components/admin/Settings/Connections/OpenAIConnection.svelte",
          "src/lib/components/chat/Settings/Connections.svelte||src/lib/components/chat/Settings/Connections.svelte",
          "src/lib/components/chat/Settings/Connections/Connection.svelte||src/lib/components/chat/Settings/Connections/Connection.svelte",
          "src/lib/components/chat/SettingsModal.svelte||src/lib/components/chat/SettingsModal.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "backend/open_webui/config.py||backend/open_webui/config.py": [
          "File: backend/open_webui/config.py -> backend/open_webui/config.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "687: ####################################",
          "689: ####################################",
          "693:     \"direct.enable\",",
          "695: )",
          "697: ####################################",
          "",
          "[Removed Lines]",
          "688: # DIRECT API",
          "691: ENABLE_DIRECT_API = PersistentConfig(",
          "692:     \"ENABLE_DIRECT_API\",",
          "694:     os.environ.get(\"ENABLE_DIRECT_API\", \"True\").lower() == \"true\",",
          "",
          "[Added Lines]",
          "688: # DIRECT CONNECTIONS",
          "691: ENABLE_DIRECT_CONNECTIONS = PersistentConfig(",
          "692:     \"ENABLE_DIRECT_CONNECTIONS\",",
          "694:     os.environ.get(\"ENABLE_DIRECT_CONNECTIONS\", \"True\").lower() == \"true\",",
          "",
          "---------------"
        ],
        "backend/open_webui/main.py||backend/open_webui/main.py": [
          "File: backend/open_webui/main.py -> backend/open_webui/main.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "97:     OPENAI_API_BASE_URLS,",
          "98:     OPENAI_API_KEYS,",
          "99:     OPENAI_API_CONFIGS,",
          "102:     # Code Interpreter",
          "103:     ENABLE_CODE_INTERPRETER,",
          "104:     CODE_INTERPRETER_ENGINE,",
          "",
          "[Removed Lines]",
          "100:     # Direct API",
          "101:     ENABLE_DIRECT_API,",
          "",
          "[Added Lines]",
          "100:     # Direct Connections",
          "101:     ENABLE_DIRECT_CONNECTIONS,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "408: ########################################",
          "409: #",
          "411: #",
          "412: ########################################",
          "416: ########################################",
          "417: #",
          "",
          "[Removed Lines]",
          "410: # DIRECT API",
          "414: app.state.config.ENABLE_DIRECT_API = ENABLE_DIRECT_API",
          "",
          "[Added Lines]",
          "410: # DIRECT CONNECTIONS",
          "414: app.state.config.ENABLE_DIRECT_CONNECTIONS = ENABLE_DIRECT_CONNECTIONS",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1056:             \"enable_websocket\": ENABLE_WEBSOCKET_SUPPORT,",
          "1058:                 {",
          "1060:                     \"enable_channels\": app.state.config.ENABLE_CHANNELS,",
          "1061:                     \"enable_web_search\": app.state.config.ENABLE_RAG_WEB_SEARCH,",
          "1062:                     \"enable_code_interpreter\": app.state.config.ENABLE_CODE_INTERPRETER,",
          "",
          "[Removed Lines]",
          "1059:                     \"enable_direct_api\": app.state.config.ENABLE_DIRECT_API,",
          "",
          "[Added Lines]",
          "1059:                     \"enable_direct_connections\": app.state.config.ENABLE_DIRECT_CONNECTIONS,",
          "",
          "---------------"
        ],
        "backend/open_webui/routers/configs.py||backend/open_webui/routers/configs.py": [
          "File: backend/open_webui/routers/configs.py -> backend/open_webui/routers/configs.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "39: ############################",
          "41: ############################",
          "44: class DirectAPIConfigForm(BaseModel):",
          "50:     return {",
          "52:     }",
          "57:     request: Request, form_data: DirectAPIConfigForm, user=Depends(get_admin_user)",
          "58: ):",
          "60:     return {",
          "62:     }",
          "",
          "[Removed Lines]",
          "40: # Direct API Config",
          "45:     ENABLE_DIRECT_API: bool",
          "48: @router.get(\"/direct_api\", response_model=DirectAPIConfigForm)",
          "49: async def get_direct_api_config(request: Request, user=Depends(get_admin_user)):",
          "51:         \"ENABLE_DIRECT_API\": request.app.state.config.ENABLE_DIRECT_API,",
          "55: @router.post(\"/direct_api\", response_model=DirectAPIConfigForm)",
          "56: async def set_direct_api_config(",
          "59:     request.app.state.config.ENABLE_DIRECT_API = form_data.ENABLE_DIRECT_API",
          "61:         \"ENABLE_DIRECT_API\": request.app.state.config.ENABLE_DIRECT_API,",
          "",
          "[Added Lines]",
          "40: # Direct Connections Config",
          "45:     ENABLE_DIRECT_CONNECTIONS: bool",
          "48: @router.get(\"/direct_connections\", response_model=DirectAPIConfigForm)",
          "49: async def get_direct_connections_config(request: Request, user=Depends(get_admin_user)):",
          "51:         \"ENABLE_DIRECT_CONNECTIONS\": request.app.state.config.ENABLE_DIRECT_CONNECTIONS,",
          "55: @router.post(\"/direct_connections\", response_model=DirectAPIConfigForm)",
          "56: async def set_direct_connections_config(",
          "59:     request.app.state.config.ENABLE_DIRECT_CONNECTIONS = (",
          "60:         form_data.ENABLE_DIRECT_CONNECTIONS",
          "61:     )",
          "63:         \"ENABLE_DIRECT_CONNECTIONS\": request.app.state.config.ENABLE_DIRECT_CONNECTIONS,",
          "",
          "---------------"
        ],
        "src/lib/apis/configs/index.ts||src/lib/apis/configs/index.ts": [
          "File: src/lib/apis/configs/index.ts -> src/lib/apis/configs/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "58:  return res;",
          "59: };",
          "62:  let error = null;",
          "65:   method: 'GET',",
          "66:   headers: {",
          "67:    'Content-Type': 'application/json',",
          "",
          "[Removed Lines]",
          "61: export const getDirectApiConfig = async (token: string) => {",
          "64:  const res = await fetch(`${WEBUI_API_BASE_URL}/configs/direct_api`, {",
          "",
          "[Added Lines]",
          "61: export const getDirectConnectionsConfig = async (token: string) => {",
          "64:  const res = await fetch(`${WEBUI_API_BASE_URL}/configs/direct_connections`, {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "85:  return res;",
          "86: };",
          "89:  let error = null;",
          "92:   method: 'POST',",
          "93:   headers: {",
          "94:    'Content-Type': 'application/json',",
          "",
          "[Removed Lines]",
          "88: export const setDirectApiConfig = async (token: string, config: object) => {",
          "91:  const res = await fetch(`${WEBUI_API_BASE_URL}/configs/direct_api`, {",
          "",
          "[Added Lines]",
          "88: export const setDirectConnectionsConfig = async (token: string, config: object) => {",
          "91:  const res = await fetch(`${WEBUI_API_BASE_URL}/configs/direct_connections`, {",
          "",
          "---------------"
        ],
        "src/lib/components/admin/Settings/Connections.svelte||src/lib/components/admin/Settings/Connections.svelte": [
          "File: src/lib/components/admin/Settings/Connections.svelte -> src/lib/components/admin/Settings/Connections.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  import { getOllamaConfig, updateOllamaConfig } from '$lib/apis/ollama';",
          "8:  import { getOpenAIConfig, updateOpenAIConfig, getOpenAIModels } from '$lib/apis/openai';",
          "9:  import { getModels as _getModels } from '$lib/apis';",
          "12:  import { models, user } from '$lib/stores';",
          "",
          "[Removed Lines]",
          "10:  import { getDirectApiConfig, setDirectApiConfig } from '$lib/apis/configs';",
          "",
          "[Added Lines]",
          "10:  import { getDirectConnectionsConfig, setDirectConnectionsConfig } from '$lib/apis/configs';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "17:  import Plus from '$lib/components/icons/Plus.svelte';",
          "19:  import OpenAIConnection from './Connections/OpenAIConnection.svelte';",
          "21:  import OllamaConnection from './Connections/OllamaConnection.svelte';",
          "23:  const i18n = getContext('i18n');",
          "",
          "[Removed Lines]",
          "20:  import AddConnectionModal from './Connections/AddConnectionModal.svelte';",
          "",
          "[Added Lines]",
          "20:  import AddConnectionModal from '$lib/components/AddConnectionModal.svelte';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "38:  let ENABLE_OPENAI_API: null | boolean = null;",
          "39:  let ENABLE_OLLAMA_API: null | boolean = null;",
          "43:  let pipelineUrls = {};",
          "44:  let showAddOpenAIConnectionModal = false;",
          "",
          "[Removed Lines]",
          "41:  let directApiConfig = null;",
          "",
          "[Added Lines]",
          "41:  let directConnectionsConfig = null;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "101:   }",
          "102:  };",
          "109:   if (res) {",
          "111:    await models.set(await getModels());",
          "112:   }",
          "113:  };",
          "",
          "[Removed Lines]",
          "104:  const updateDirectAPIHandler = async () => {",
          "105:   const res = await setDirectApiConfig(localStorage.token, directApiConfig).catch((error) => {",
          "106:    toast.error(`${error}`);",
          "107:   });",
          "110:    toast.success($i18n.t('Direct API settings updated'));",
          "",
          "[Added Lines]",
          "104:  const updateDirectConnectionsHandler = async () => {",
          "105:   const res = await setDirectConnectionsConfig(localStorage.token, directConnectionsConfig).catch(",
          "106:    (error) => {",
          "107:     toast.error(`${error}`);",
          "108:    }",
          "109:   );",
          "112:    toast.success($i18n.t('Direct Connections settings updated'));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "143:      openaiConfig = await getOpenAIConfig(localStorage.token);",
          "144:     })(),",
          "145:     (async () => {",
          "147:     })()",
          "148:    ]);",
          "",
          "[Removed Lines]",
          "146:      directApiConfig = await getDirectApiConfig(localStorage.token);",
          "",
          "[Added Lines]",
          "148:      directConnectionsConfig = await getDirectConnectionsConfig(localStorage.token);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "191:  const submitHandler = async () => {",
          "192:   updateOpenAIHandler();",
          "193:   updateOllamaHandler();",
          "196:   dispatch('save');",
          "197:  };",
          "",
          "[Removed Lines]",
          "194:   updateDirectAPIHandler();",
          "",
          "[Added Lines]",
          "196:   updateDirectConnectionsHandler();",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "211: <form class=\"flex flex-col h-full justify-between text-sm\" on:submit|preventDefault={submitHandler}>",
          "212:  <div class=\" overflow-y-scroll scrollbar-hidden h-full\">",
          "214:    <div class=\"my-2\">",
          "215:     <div class=\"mt-2 space-y-2 pr-1.5\">",
          "216:      <div class=\"flex justify-between items-center text-sm\">",
          "",
          "[Removed Lines]",
          "213:   {#if ENABLE_OPENAI_API !== null && ENABLE_OLLAMA_API !== null && directApiConfig !== null}",
          "",
          "[Added Lines]",
          "215:   {#if ENABLE_OPENAI_API !== null && ENABLE_OLLAMA_API !== null && directConnectionsConfig !== null}",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "357:    <div class=\"pr-1.5 my-2\">",
          "358:     <div class=\"flex justify-between items-center text-sm\">",
          "361:      <div class=\"flex items-center\">",
          "362:       <div class=\"\">",
          "363:        <Switch",
          "365:         on:change={async () => {",
          "367:         }}",
          "368:        />",
          "369:       </div>",
          "",
          "[Removed Lines]",
          "359:      <div class=\"  font-medium\">{$i18n.t('Direct API')}</div>",
          "364:         bind:state={directApiConfig.ENABLE_DIRECT_API}",
          "366:          updateDirectAPIHandler();",
          "",
          "[Added Lines]",
          "361:      <div class=\"  font-medium\">{$i18n.t('Direct Connections')}</div>",
          "366:         bind:state={directConnectionsConfig.ENABLE_DIRECT_CONNECTIONS}",
          "368:          updateDirectConnectionsHandler();",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "373:     <div class=\"mt-1.5\">",
          "374:      <div class=\"text-xs text-gray-500\">",
          "376:      </div>",
          "377:     </div>",
          "378:    </div>",
          "",
          "[Removed Lines]",
          "375:       {$i18n.t('Direct API allows users to use the models directly from their browser.')}",
          "",
          "[Added Lines]",
          "377:       {$i18n.t(",
          "378:        'Direct Connections allow users to connect to their own OpenAI compatible API endpoints.'",
          "379:       )}",
          "",
          "---------------"
        ],
        "src/lib/components/admin/Settings/Connections/OllamaConnection.svelte||src/lib/components/admin/Settings/Connections/OllamaConnection.svelte": [
          "File: src/lib/components/admin/Settings/Connections/OllamaConnection.svelte -> src/lib/components/admin/Settings/Connections/OllamaConnection.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "5:  import Tooltip from '$lib/components/common/Tooltip.svelte';",
          "6:  import SensitiveInput from '$lib/components/common/SensitiveInput.svelte';",
          "9:  import Cog6 from '$lib/components/icons/Cog6.svelte';",
          "10:  import Wrench from '$lib/components/icons/Wrench.svelte';",
          "",
          "[Removed Lines]",
          "7:  import AddConnectionModal from './AddConnectionModal.svelte';",
          "",
          "[Added Lines]",
          "7:  import AddConnectionModal from '$lib/components/AddConnectionModal.svelte';",
          "",
          "---------------"
        ],
        "src/lib/components/admin/Settings/Connections/OpenAIConnection.svelte||src/lib/components/admin/Settings/Connections/OpenAIConnection.svelte": [
          "File: src/lib/components/admin/Settings/Connections/OpenAIConnection.svelte -> src/lib/components/admin/Settings/Connections/OpenAIConnection.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "5:  import Tooltip from '$lib/components/common/Tooltip.svelte';",
          "6:  import SensitiveInput from '$lib/components/common/SensitiveInput.svelte';",
          "7:  import Cog6 from '$lib/components/icons/Cog6.svelte';",
          "9:  import { connect } from 'socket.io-client';",
          "11:  export let onDelete = () => {};",
          "",
          "[Removed Lines]",
          "8:  import AddConnectionModal from './AddConnectionModal.svelte';",
          "",
          "[Added Lines]",
          "8:  import AddConnectionModal from '$lib/components/AddConnectionModal.svelte';",
          "",
          "---------------"
        ],
        "src/lib/components/chat/Settings/Connections.svelte||src/lib/components/chat/Settings/Connections.svelte": [
          "File: src/lib/components/chat/Settings/Connections.svelte -> src/lib/components/chat/Settings/Connections.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <script lang=\"ts\">",
          "2:  import { toast } from 'svelte-sonner';",
          "3:  import { createEventDispatcher, onMount, getContext, tick } from 'svelte';",
          "4:  import { getModels as _getModels } from '$lib/apis';",
          "6:  const dispatch = createEventDispatcher();",
          "7:  const i18n = getContext('i18n');",
          "9:  import { models, user } from '$lib/stores';",
          "11:  import Switch from '$lib/components/common/Switch.svelte';",
          "12:  import Spinner from '$lib/components/common/Spinner.svelte';",
          "13:  import Tooltip from '$lib/components/common/Tooltip.svelte';",
          "14:  import Plus from '$lib/components/icons/Plus.svelte';",
          "15:  import Connection from './Connections/Connection.svelte';",
          "17:  const getModels = async () => {",
          "18:   const models = await _getModels(localStorage.token);",
          "19:   return models;",
          "20:  };",
          "22:  let config = null;",
          "24:  let showConnectionModal = false;",
          "26:  onMount(async () => {});",
          "28:  const submitHandler = async () => {};",
          "29:  const updateHandler = async () => {};",
          "30: </script>",
          "32: <!-- <AddConnectionModal",
          "33:  bind:show={showConnectionModal}",
          "34:  onSubmit={addConnectionHandler}",
          "35: /> -->",
          "37: <form class=\"flex flex-col h-full justify-between text-sm\" on:submit|preventDefault={submitHandler}>",
          "38:  <div class=\" overflow-y-scroll scrollbar-hidden h-full\">",
          "39:   <div class=\"my-2\">",
          "40:    <div class=\"space-y-2 pr-1.5\">",
          "41:     <div class=\"flex justify-between items-center text-sm\">",
          "42:      <div class=\"  font-medium\">{$i18n.t('Direct Connections')}</div>",
          "43:     </div>",
          "45:     <div class=\"mt-1.5\">",
          "46:      <div class=\"text-xs text-gray-500\">",
          "47:       {$i18n.t('Connect to your own OpenAI compatible API endpoints.')}",
          "48:      </div>",
          "49:     </div>",
          "51:     {#if false}",
          "52:      <hr class=\" border-gray-50 dark:border-gray-850\" />",
          "54:      <div class=\"\">",
          "55:       <div class=\"flex justify-between items-center\">",
          "56:        <div class=\"font-medium\">{$i18n.t('Manage Connections')}</div>",
          "58:        <Tooltip content={$i18n.t(`Add Connection`)}>",
          "59:         <button",
          "60:          class=\"px-1\"",
          "61:          on:click={() => {",
          "62:           showConnectionModal = true;",
          "63:          }}",
          "64:          type=\"button\"",
          "65:         >",
          "66:          <Plus />",
          "67:         </button>",
          "68:        </Tooltip>",
          "69:       </div>",
          "71:       <div class=\"flex flex-col gap-1.5 mt-1.5\">",
          "72:        {#each config?.OPENAI_API_BASE_URLS ?? [] as url, idx}",
          "73:         <Connection",
          "74:          bind:url",
          "75:          bind:key={config.OPENAI_API_KEYS[idx]}",
          "76:          bind:config={config.OPENAI_API_CONFIGS[idx]}",
          "77:          onSubmit={() => {",
          "78:           updateHandler();",
          "79:          }}",
          "80:          onDelete={() => {",
          "81:           config.OPENAI_API_BASE_URLS = config.OPENAI_API_BASE_URLS.filter(",
          "82:            (url, urlIdx) => idx !== urlIdx",
          "83:           );",
          "84:           config.OPENAI_API_KEYS = config.OPENAI_API_KEYS.filter(",
          "85:            (key, keyIdx) => idx !== keyIdx",
          "86:           );",
          "88:           let newConfig = {};",
          "89:           config.OPENAI_API_BASE_URLS.forEach((url, newIdx) => {",
          "90:            newConfig[newIdx] =",
          "91:             config.OPENAI_API_CONFIGS[newIdx < idx ? newIdx : newIdx + 1];",
          "92:           });",
          "93:           config.OPENAI_API_CONFIGS = newConfig;",
          "94:          }}",
          "95:         />",
          "96:        {/each}",
          "97:       </div>",
          "98:      </div>",
          "99:     {/if}",
          "100:    </div>",
          "101:   </div>",
          "103:   <hr class=\" border-gray-50 dark:border-gray-850\" />",
          "104:  </div>",
          "106:  <div class=\"flex justify-end pt-3 text-sm font-medium\">",
          "107:   <button",
          "108:    class=\"px-3.5 py-1.5 text-sm font-medium bg-black hover:bg-gray-900 text-white dark:bg-white dark:text-black dark:hover:bg-gray-100 transition rounded-full\"",
          "109:    type=\"submit\"",
          "110:   >",
          "111:    {$i18n.t('Save')}",
          "112:   </button>",
          "113:  </div>",
          "114: </form>",
          "",
          "---------------"
        ],
        "src/lib/components/chat/Settings/Connections/Connection.svelte||src/lib/components/chat/Settings/Connections/Connection.svelte": [
          "File: src/lib/components/chat/Settings/Connections/Connection.svelte -> src/lib/components/chat/Settings/Connections/Connection.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <script lang=\"ts\">",
          "2:  import { getContext, tick } from 'svelte';",
          "3:  const i18n = getContext('i18n');",
          "5:  import Tooltip from '$lib/components/common/Tooltip.svelte';",
          "6:  import SensitiveInput from '$lib/components/common/SensitiveInput.svelte';",
          "7:  import Cog6 from '$lib/components/icons/Cog6.svelte';",
          "8:  import AddConnectionModal from '$lib/components/AddConnectionModal.svelte';",
          "10:  export let onDelete = () => {};",
          "11:  export let onSubmit = () => {};",
          "13:  export let pipeline = false;",
          "15:  export let url = '';",
          "16:  export let key = '';",
          "17:  export let config = {};",
          "19:  let showConfigModal = false;",
          "20: </script>",
          "22: <AddConnectionModal",
          "23:  edit",
          "24:  bind:show={showConfigModal}",
          "25:  connection={{",
          "26:   url,",
          "27:   key,",
          "28:   config",
          "29:  }}",
          "30:  {onDelete}",
          "31:  onSubmit={(connection) => {",
          "32:   url = connection.url;",
          "33:   key = connection.key;",
          "34:   config = connection.config;",
          "35:   onSubmit(connection);",
          "36:  }}",
          "37: />",
          "39: <div class=\"flex w-full gap-2 items-center\">",
          "40:  <Tooltip",
          "41:   className=\"w-full relative\"",
          "42:   content={$i18n.t(`WebUI will make requests to \"{{url}}/chat/completions\"`, {",
          "43:    url",
          "44:   })}",
          "45:   placement=\"top-start\"",
          "46:  >",
          "47:   {#if !(config?.enable ?? true)}",
          "48:    <div",
          "49:     class=\"absolute top-0 bottom-0 left-0 right-0 opacity-60 bg-white dark:bg-gray-900 z-10\"",
          "50:    ></div>",
          "51:   {/if}",
          "52:   <div class=\"flex w-full\">",
          "53:    <div class=\"flex-1 relative\">",
          "54:     <input",
          "55:      class=\" outline-none w-full bg-transparent {pipeline ? 'pr-8' : ''}\"",
          "56:      placeholder={$i18n.t('API Base URL')}",
          "57:      bind:value={url}",
          "58:      autocomplete=\"off\"",
          "59:     />",
          "61:     {#if pipeline}",
          "62:      <div class=\" absolute top-0.5 right-2.5\">",
          "63:       <Tooltip content=\"Pipelines\">",
          "64:        <svg",
          "65:         xmlns=\"http://www.w3.org/2000/svg\"",
          "66:         viewBox=\"0 0 24 24\"",
          "67:         fill=\"currentColor\"",
          "68:         class=\"size-4\"",
          "69:        >",
          "70:         <path",
          "71:          d=\"M11.644 1.59a.75.75 0 0 1 .712 0l9.75 5.25a.75.75 0 0 1 0 1.32l-9.75 5.25a.75.75 0 0 1-.712 0l-9.75-5.25a.75.75 0 0 1 0-1.32l9.75-5.25Z\"",
          "72:         />",
          "73:         <path",
          "74:          d=\"m3.265 10.602 7.668 4.129a2.25 2.25 0 0 0 2.134 0l7.668-4.13 1.37.739a.75.75 0 0 1 0 1.32l-9.75 5.25a.75.75 0 0 1-.71 0l-9.75-5.25a.75.75 0 0 1 0-1.32l1.37-.738Z\"",
          "75:         />",
          "76:         <path",
          "77:          d=\"m10.933 19.231-7.668-4.13-1.37.739a.75.75 0 0 0 0 1.32l9.75 5.25c.221.12.489.12.71 0l9.75-5.25a.75.75 0 0 0 0-1.32l-1.37-.738-7.668 4.13a2.25 2.25 0 0 1-2.134-.001Z\"",
          "78:         />",
          "79:        </svg>",
          "80:       </Tooltip>",
          "81:      </div>",
          "82:     {/if}",
          "83:    </div>",
          "85:    <SensitiveInput",
          "86:     inputClassName=\" outline-none bg-transparent w-full\"",
          "87:     placeholder={$i18n.t('API Key')}",
          "88:     bind:value={key}",
          "89:    />",
          "90:   </div>",
          "91:  </Tooltip>",
          "93:  <div class=\"flex gap-1\">",
          "94:   <Tooltip content={$i18n.t('Configure')} className=\"self-start\">",
          "95:    <button",
          "96:     class=\"self-center p-1 bg-transparent hover:bg-gray-100 dark:bg-gray-900 dark:hover:bg-gray-850 rounded-lg transition\"",
          "97:     on:click={() => {",
          "98:      showConfigModal = true;",
          "99:     }}",
          "100:     type=\"button\"",
          "101:    >",
          "102:     <Cog6 />",
          "103:    </button>",
          "104:   </Tooltip>",
          "105:  </div>",
          "106: </div>",
          "",
          "---------------"
        ],
        "src/lib/components/chat/SettingsModal.svelte||src/lib/components/chat/SettingsModal.svelte": [
          "File: src/lib/components/chat/SettingsModal.svelte -> src/lib/components/chat/SettingsModal.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <script lang=\"ts\">",
          "2:  import { getContext, tick } from 'svelte';",
          "3:  import { toast } from 'svelte-sonner';",
          "5:  import { updateUserSettings } from '$lib/apis/users';",
          "6:  import { getModels as _getModels } from '$lib/apis';",
          "7:  import { goto } from '$app/navigation';",
          "",
          "[Removed Lines]",
          "4:  import { models, settings, user } from '$lib/stores';",
          "",
          "[Added Lines]",
          "4:  import { config, models, settings, user } from '$lib/stores';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "17:  import Personalization from './Settings/Personalization.svelte';",
          "18:  import SearchInput from '../layout/Sidebar/SearchInput.svelte';",
          "19:  import Search from '../icons/Search.svelte';",
          "21:  const i18n = getContext('i18n');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20:  import Connections from './Settings/Connections.svelte';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "122:     'alwaysonwebsearch'",
          "123:    ]",
          "124:   },",
          "125:   {",
          "126:    id: 'personalization',",
          "127:    title: 'Personalization',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "126:   {",
          "127:    id: 'connections',",
          "128:    title: 'Connections',",
          "129:    keywords: []",
          "130:   },",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "447:         </div>",
          "448:         <div class=\" self-center\">{$i18n.t('Interface')}</div>",
          "449:        </button>",
          "450:       {:else if tabId === 'personalization'}",
          "451:        <button",
          "452:         class=\"px-0.5 py-1 min-w-fit rounded-lg flex-1 md:flex-none flex text-left transition {selectedTab ===",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "456:       {:else if tabId === 'connections'}",
          "457:        {#if $user.role === 'admin' || ($user.role === 'user' && $config?.features?.enable_direct_connections)}",
          "458:         <button",
          "459:          class=\"px-0.5 py-1 min-w-fit rounded-lg flex-1 md:flex-none flex text-right transition {selectedTab ===",
          "460:          'connections'",
          "461:           ? ''",
          "462:           : ' text-gray-300 dark:text-gray-600 hover:text-gray-700 dark:hover:text-white'}\"",
          "463:          on:click={() => {",
          "464:           selectedTab = 'connections';",
          "465:          }}",
          "466:         >",
          "467:          <div class=\" self-center mr-2\">",
          "468:           <svg",
          "469:            xmlns=\"http://www.w3.org/2000/svg\"",
          "470:            viewBox=\"0 0 16 16\"",
          "471:            fill=\"currentColor\"",
          "472:            class=\"w-4 h-4\"",
          "473:           >",
          "474:            <path",
          "475:             d=\"M1 9.5A3.5 3.5 0 0 0 4.5 13H12a3 3 0 0 0 .917-5.857 2.503 2.503 0 0 0-3.198-3.019 3.5 3.5 0 0 0-6.628 2.171A3.5 3.5 0 0 0 1 9.5Z\"",
          "476:            />",
          "477:           </svg>",
          "478:          </div>",
          "479:          <div class=\" self-center\">{$i18n.t('Connections')}</div>",
          "480:         </button>",
          "481:        {/if}",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "620:        toast.success($i18n.t('Settings saved successfully!'));",
          "621:       }}",
          "622:      />",
          "623:     {:else if selectedTab === 'personalization'}",
          "624:      <Personalization",
          "625:       {saveSettings}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "655:     {:else if selectedTab === 'connections'}",
          "656:      <Connections",
          "657:       {saveSettings}",
          "658:       on:save={() => {",
          "659:        toast.success($i18n.t('Settings saved successfully!'));",
          "660:       }}",
          "661:      />",
          "",
          "---------------"
        ]
      }
    }
  ]
}