{
  "cve_id": "CVE-2024-36404",
  "cve_desc": "GeoTools is an open source Java library that provides tools for geospatial data. Prior to versions 31.2, 30.4, and 29.6, Remote Code Execution (RCE) is possible if an application uses certain GeoTools functionality to evaluate XPath expressions supplied by user input. Versions 31.2, 30.4, and 29.6 contain a fix for this issue. As a workaround, GeoTools can operate with reduced functionality by removing the `gt-complex` jar from one's application. As an example of the impact, application schema `datastore` would not function without the ability to use XPath expressions to query complex content. Alternatively, one may utilize a drop-in replacement GeoTools jar from SourceForge for versions 31.1, 30.3, 30.2, 29.2, 28.2, 27.5, 27.4, 26.7, 26.4, 25.2, and 24.0. These jars are for download only and are not available from maven central, intended to quickly provide a fix to affected applications.",
  "repo": "geotools/geotools",
  "patch_hash": "f0c9961dc4d40c5acfce2169fab92805738de5ea",
  "patch_info": {
    "commit_hash": "f0c9961dc4d40c5acfce2169fab92805738de5ea",
    "repo": "geotools/geotools",
    "commit_url": "https://github.com/geotools/geotools/commit/f0c9961dc4d40c5acfce2169fab92805738de5ea",
    "files": [
      "modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java",
      "modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java",
      "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java",
      "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java",
      "modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java",
      "modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java",
      "modules/extension/xsd/xsd-core/pom.xml",
      "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java",
      "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java",
      "modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java"
    ],
    "message": "[GEOT-7587] Improve handling of XPath expressions",
    "before_after_code_files": [
      "modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java||modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java",
      "modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java||modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java",
      "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java",
      "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java",
      "modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java",
      "modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java",
      "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java",
      "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java",
      "modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java||modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java"
    ]
  },
  "patch_diff": {
    "modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java||modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java": [
      "File: modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java -> modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "18: package org.geotools.appschema.util;",
      "20: import java.util.ArrayList;",
      "22: import java.util.List;",
      "23: import java.util.Scanner;",
      "24: import org.apache.commons.jxpath.JXPathContext;",
      "25: import org.jdom2.Document;",
      "26: import org.xml.sax.helpers.NamespaceSupport;",
      "",
      "[Removed Lines]",
      "21: import java.util.Enumeration;",
      "",
      "[Added Lines]",
      "24: import org.geotools.xsd.impl.jxpath.JXPathUtils;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "42:     public static List<String> getXPathValues(",
      "43:             NamespaceSupport ns, String xpathString, Document doc) {",
      "45:         return getXPathValues(xpathString, context);",
      "46:     }",
      "",
      "[Removed Lines]",
      "44:         JXPathContext context = initialiseContext(ns, doc);",
      "",
      "[Added Lines]",
      "44:         JXPathContext context = JXPathUtils.newSafeContext(doc, true, ns, false);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "69:     public static String getSingleXPathValue(",
      "70:             NamespaceSupport ns, String xpathString, Document doc) {",
      "71:         String id = null;",
      "73:         try {",
      "75:             id = (String) ob;",
      "76:         } catch (RuntimeException e) {",
      "77:             throw new RuntimeException(\"Error reading xpath \" + xpathString, e);",
      "",
      "[Removed Lines]",
      "72:         JXPathContext context = initialiseContext(ns, doc);",
      "74:             Object ob = context.getValue(xpathString);",
      "",
      "[Added Lines]",
      "73:             Object ob = JXPathUtils.newSafeContext(doc, true, ns, false).getValue(xpathString);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "79:         return id;",
      "80:     }",
      "",
      "[Removed Lines]",
      "82:     private static JXPathContext initialiseContext(NamespaceSupport ns, Document doc) {",
      "83:         JXPathContext context = JXPathContext.newContext(doc);",
      "84:         addNamespaces(ns, context);",
      "85:         context.setLenient(true);",
      "86:         return context;",
      "87:     }",
      "89:     private static void addNamespaces(NamespaceSupport ns, JXPathContext context) {",
      "90:         @SuppressWarnings(\"unchecked\")",
      "91:         Enumeration<String> prefixes = ns.getPrefixes();",
      "92:         while (prefixes.hasMoreElements()) {",
      "93:             String prefix = prefixes.nextElement();",
      "94:             String uri = ns.getURI(prefix);",
      "95:             context.registerNamespace(prefix, uri);",
      "96:         }",
      "97:     }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java||modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java": [
      "File: modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java -> modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "17: package org.geotools.appschema.util;",
      "19: import static org.junit.Assert.assertEquals;",
      "20: import static org.junit.Assert.assertThrows;",
      "22: import org.junit.Test;",
      "24: public class XmlXpathUtilitesTest {",
      "26:     @Test",
      "27:     public void testGetXPathValuesWithJavaMethod() {",
      "28:         RuntimeException exception =",
      "29:                 assertThrows(",
      "30:                         RuntimeException.class,",
      "31:                         () ->",
      "32:                                 XmlXpathUtilites.getXPathValues(",
      "33:                                         null, \"java.lang.Thread.sleep(30000)\", null));",
      "34:         assertEquals(\"Error reading xpath java.lang.Thread.sleep(30000)\", exception.getMessage());",
      "35:     }",
      "37:     @Test",
      "38:     public void testCountXPathNodesWithJavaMethod() {",
      "39:         RuntimeException exception =",
      "40:                 assertThrows(",
      "41:                         RuntimeException.class,",
      "42:                         () ->",
      "43:                                 XmlXpathUtilites.countXPathNodes(",
      "44:                                         null, \"java.lang.Thread.sleep(30000)\", null));",
      "45:         assertEquals(\"Error reading xpath java.lang.Thread.sleep(30000)\", exception.getMessage());",
      "46:     }",
      "48:     @Test",
      "49:     public void testGetSingleXPathValueWithJavaMethod() {",
      "50:         RuntimeException exception =",
      "51:                 assertThrows(",
      "52:                         RuntimeException.class,",
      "53:                         () ->",
      "54:                                 XmlXpathUtilites.getSingleXPathValue(",
      "55:                                         null, \"java.lang.Thread.sleep(30000)\", null));",
      "56:         assertEquals(\"Error reading xpath java.lang.Thread.sleep(30000)\", exception.getMessage());",
      "57:     }",
      "58: }",
      "",
      "---------------"
    ],
    "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java": [
      "File: modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java -> modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "20: import static org.geotools.filter.expression.SimpleFeaturePropertyAccessorFactory.DEFAULT_GEOMETRY_NAME;",
      "22: import java.util.ArrayList;",
      "24: import java.util.Iterator;",
      "25: import java.util.List;",
      "26: import java.util.regex.Pattern;",
      "",
      "[Removed Lines]",
      "23: import java.util.Enumeration;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "33: import org.geotools.api.feature.GeometryAttribute;",
      "34: import org.geotools.api.feature.IllegalAttributeException;",
      "35: import org.geotools.api.feature.simple.SimpleFeature;",
      "36: import org.geotools.api.feature.type.AttributeDescriptor;",
      "37: import org.geotools.api.feature.type.AttributeType;",
      "38: import org.geotools.api.feature.type.ComplexType;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "35: import org.geotools.api.feature.simple.SimpleFeatureType;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "44: import org.geotools.filter.expression.PropertyAccessor;",
      "45: import org.geotools.filter.expression.PropertyAccessorFactory;",
      "46: import org.geotools.util.factory.Hints;",
      "47: import org.locationtech.jts.geom.Geometry;",
      "48: import org.xml.sax.helpers.NamespaceSupport;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "47: import org.geotools.xsd.impl.jxpath.JXPathUtils;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "83:     public PropertyAccessor createPropertyAccessor(",
      "84:             Class type, String xpath, Class target, Hints hints) {",
      "",
      "[Removed Lines]",
      "86:         if (SimpleFeature.class.isAssignableFrom(type)) {",
      "",
      "[Added Lines]",
      "87:         if (SimpleFeature.class.isAssignableFrom(type)",
      "88:                 || SimpleFeatureType.class.isAssignableFrom(type)) {",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "260:         public <T> T get(Object object, String xpath, Class<T> target)",
      "261:                 throws IllegalArgumentException {",
      "271:             Iterator it = context.iteratePointers(xpath);",
      "272:             List results = new ArrayList<>();",
      "273:             while (it.hasNext()) {",
      "",
      "[Removed Lines]",
      "263:             JXPathContext context = JXPathContext.newContext(object);",
      "264:             Enumeration declaredPrefixes = namespaces.getDeclaredPrefixes();",
      "265:             while (declaredPrefixes.hasMoreElements()) {",
      "266:                 String prefix = (String) declaredPrefixes.nextElement();",
      "267:                 String uri = namespaces.getURI(prefix);",
      "268:                 context.registerNamespace(prefix, uri);",
      "269:             }",
      "",
      "[Added Lines]",
      "265:             JXPathContext context =",
      "266:                     JXPathUtils.newSafeContext(object, false, this.namespaces, true);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "296:                 throw new IllegalAttributeException(null, \"feature type is immutable\");",
      "297:             }",
      "306:             context.setValue(xpath, value);",
      "308:             assert value == context.getValue(xpath);",
      "",
      "[Removed Lines]",
      "299:             JXPathContext context = JXPathContext.newContext(object);",
      "300:             Enumeration declaredPrefixes = namespaces.getDeclaredPrefixes();",
      "301:             while (declaredPrefixes.hasMoreElements()) {",
      "302:                 String prefix = (String) declaredPrefixes.nextElement();",
      "303:                 String uri = namespaces.getURI(prefix);",
      "304:                 context.registerNamespace(prefix, uri);",
      "305:             }",
      "",
      "[Added Lines]",
      "295:             JXPathContext context =",
      "296:                     JXPathUtils.newSafeContext(object, false, this.namespaces, true);",
      "",
      "---------------"
    ],
    "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java": [
      "File: modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java -> modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "18: package org.geotools.data.complex.expression;",
      "20: import java.util.Map;",
      "22: import org.geotools.api.feature.IllegalAttributeException;",
      "23: import org.geotools.filter.expression.PropertyAccessor;",
      "24: import org.geotools.filter.expression.PropertyAccessorFactory;",
      "25: import org.geotools.util.factory.Hints;",
      "",
      "[Removed Lines]",
      "21: import org.apache.commons.jxpath.JXPathContext;",
      "",
      "[Added Lines]",
      "25: import org.geotools.xsd.impl.jxpath.JXPathUtils;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "63:                 @SuppressWarnings(\"unchecked\")",
      "64:                 public <T> T get(Object object, String xpath, Class<T> target)",
      "65:                         throws IllegalArgumentException {",
      "69:                 }",
      "71:                 @Override",
      "",
      "[Removed Lines]",
      "66:                     JXPathContext context = JXPathContext.newContext(object);",
      "67:                     context.setLenient(true);",
      "68:                     return (T) context.getValue(xpath);",
      "",
      "[Added Lines]",
      "66:                     return (T) JXPathUtils.newSafeContext(object, true).getValue(xpath);",
      "",
      "---------------"
    ],
    "modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java": [
      "File: modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java -> modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "290:                         \"eg:complexAttribute/eg:rootAttribute/eg:multiLeafAttribute\",",
      "291:                         new Hints(FeaturePropertyAccessorFactory.NAMESPACE_CONTEXT, NAMESPACES));",
      "292:         assertEquals(multiLeafDesc, ex.evaluate(fType));",
      "293:     }",
      "295:     public static FeatureType createFeatureType() {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "295:         ex =",
      "296:                 new AttributeExpressionImpl(",
      "297:                         \"java.lang.Thread.sleep(30000)\",",
      "298:                         new Hints(FeaturePropertyAccessorFactory.NAMESPACE_CONTEXT, NAMESPACES));",
      "299:         long start = System.currentTimeMillis();",
      "300:         assertNull(ex.evaluate(feature));",
      "301:         long runtime = System.currentTimeMillis() - start;",
      "302:         assertTrue(\"java.lang.Thread.sleep(30000) was executed\", runtime < 30000);",
      "303:         start = System.currentTimeMillis();",
      "304:         assertNull(ex.evaluate(fType));",
      "305:         runtime = System.currentTimeMillis() - start;",
      "306:         assertTrue(\"java.lang.Thread.sleep(30000) was executed\", runtime < 30000);",
      "",
      "---------------"
    ],
    "modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java": [
      "File: modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java -> modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "17: package org.geotools.filter.expression;",
      "19: import static org.junit.Assert.assertTrue;",
      "21: import java.util.Collections;",
      "22: import org.geotools.api.filter.expression.PropertyName;",
      "23: import org.geotools.factory.CommonFactoryFinder;",
      "24: import org.junit.Test;",
      "26: public class MapPropertyAccessorTest {",
      "28:     @Test",
      "29:     public void testAccessWithJavaMethod() {",
      "30:         PropertyName property =",
      "31:                 CommonFactoryFinder.getFilterFactory().property(\"java.lang.Thread.sleep(30000)\");",
      "32:         long start = System.currentTimeMillis();",
      "33:         property.evaluate(Collections.emptyMap());",
      "34:         long runtime = System.currentTimeMillis() - start;",
      "35:         assertTrue(\"java.lang.Thread.sleep(30000) was executed\", runtime < 30000);",
      "36:     }",
      "37: }",
      "",
      "---------------"
    ],
    "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java": [
      "File: modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java -> modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "17: package org.geotools.xsd.impl.jxpath;",
      "19: import java.util.Iterator;",
      "22: import org.apache.commons.jxpath.JXPathIntrospector;",
      "23: import org.geotools.xsd.Configuration;",
      "24: import org.geotools.xsd.Node;",
      "",
      "[Removed Lines]",
      "20: import org.apache.commons.jxpath.JXPathContext;",
      "21: import org.apache.commons.jxpath.JXPathContextFactory;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "49:         Node root = handlers.firstElement().getParseNode();",
      "56:         while (itr.hasNext()) {",
      "57:             Object obj = itr.next();",
      "",
      "[Removed Lines]",
      "50:         JXPathContext jxpContext = JXPathContextFactory.newInstance().newContext(null, root);",
      "52:         jxpContext.setLenient(true);",
      "54:         Iterator itr = jxpContext.iterate(xpath);",
      "",
      "[Added Lines]",
      "48:         Iterator itr = JXPathUtils.newSafeContext(root, true).iterate(xpath);",
      "",
      "---------------"
    ],
    "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java": [
      "File: modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java -> modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "17: package org.geotools.xsd.impl.jxpath;",
      "19: import java.util.Enumeration;",
      "20: import org.apache.commons.jxpath.FunctionLibrary;",
      "21: import org.apache.commons.jxpath.JXPathContext;",
      "22: import org.xml.sax.helpers.NamespaceSupport;",
      "25: public class JXPathUtils {",
      "34:     public static JXPathContext newSafeContext(Object contextBean, boolean lenient) {",
      "35:         return newSafeContext(contextBean, lenient, null, true);",
      "36:     }",
      "47:     @SuppressWarnings(\"unchecked\")",
      "48:     public static JXPathContext newSafeContext(",
      "49:             Object contextBean, boolean lenient, NamespaceSupport ns, boolean declared) {",
      "50:         JXPathContext context = JXPathContext.newContext(contextBean);",
      "51:         context.setLenient(lenient);",
      "52:         if (ns != null) {",
      "53:             Enumeration<String> prefixes = declared ? ns.getDeclaredPrefixes() : ns.getPrefixes();",
      "54:             while (prefixes.hasMoreElements()) {",
      "55:                 String prefix = prefixes.nextElement();",
      "56:                 String uri = ns.getURI(prefix);",
      "57:                 context.registerNamespace(prefix, uri);",
      "58:             }",
      "59:         }",
      "61:         context.setFunctions(new FunctionLibrary());",
      "62:         return context;",
      "63:     }",
      "64: }",
      "",
      "---------------"
    ],
    "modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java||modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java": [
      "File: modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java -> modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "17: package org.geotools.xsd;",
      "19: import static org.junit.Assert.assertNull;",
      "21: import java.io.ByteArrayInputStream;",
      "22: import javax.xml.namespace.QName;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "20: import static org.junit.Assert.assertTrue;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "40:         assertNull(parser.parse());",
      "41:     }",
      "42: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "44:     @Test",
      "45:     public void testParseWithJavaMethod() throws Exception {",
      "46:         ByteArrayInputStream in = new ByteArrayInputStream(\"<mails></mails>\".getBytes());",
      "47:         StreamingParser parser =",
      "48:                 new StreamingParser(new MLConfiguration(), in, \"java.lang.Thread.sleep(30000)\");",
      "50:         long start = System.currentTimeMillis();",
      "51:         assertNull(parser.parse());",
      "52:         long runtime = System.currentTimeMillis() - start;",
      "53:         assertTrue(\"java.lang.Thread.sleep(30000) was executed\", runtime < 30000);",
      "54:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "bff0bdc6ed2286d442b1212ca7c2f2b94ce2f2e8",
      "candidate_info": {
        "commit_hash": "bff0bdc6ed2286d442b1212ca7c2f2b94ce2f2e8",
        "repo": "geotools/geotools",
        "commit_url": "https://github.com/geotools/geotools/commit/bff0bdc6ed2286d442b1212ca7c2f2b94ce2f2e8",
        "files": [
          "modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java",
          "modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java",
          "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java",
          "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java",
          "modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java",
          "modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java",
          "modules/extension/xsd/xsd-core/pom.xml",
          "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java",
          "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java",
          "modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java"
        ],
        "message": "[GEOT-7587] Improve handling of XPath expressions",
        "before_after_code_files": [
          "modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java||modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java",
          "modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java||modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java",
          "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java",
          "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java",
          "modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java",
          "modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java",
          "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java",
          "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java",
          "modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java||modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java||modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java",
            "modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java||modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java",
            "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java",
            "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java",
            "modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java",
            "modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java",
            "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java",
            "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java",
            "modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java||modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java"
          ],
          "candidate": [
            "modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java||modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java",
            "modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java||modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java",
            "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java",
            "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java",
            "modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java",
            "modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java",
            "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java",
            "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java",
            "modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java||modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java"
          ]
        }
      },
      "candidate_diff": {
        "modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java||modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java": [
          "File: modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java -> modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: package org.geotools.appschema.util;",
          "20: import java.util.ArrayList;",
          "22: import java.util.List;",
          "23: import java.util.Scanner;",
          "24: import org.apache.commons.jxpath.JXPathContext;",
          "25: import org.jdom2.Document;",
          "26: import org.xml.sax.helpers.NamespaceSupport;",
          "",
          "[Removed Lines]",
          "21: import java.util.Enumeration;",
          "",
          "[Added Lines]",
          "24: import org.geotools.xsd.impl.jxpath.JXPathUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "42:     public static List<String> getXPathValues(",
          "43:             NamespaceSupport ns, String xpathString, Document doc) {",
          "45:         return getXPathValues(xpathString, context);",
          "46:     }",
          "",
          "[Removed Lines]",
          "44:         JXPathContext context = initialiseContext(ns, doc);",
          "",
          "[Added Lines]",
          "44:         JXPathContext context = JXPathUtils.newSafeContext(doc, true, ns, false);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "69:     public static String getSingleXPathValue(",
          "70:             NamespaceSupport ns, String xpathString, Document doc) {",
          "71:         String id = null;",
          "73:         try {",
          "75:             id = (String) ob;",
          "76:         } catch (RuntimeException e) {",
          "77:             throw new RuntimeException(\"Error reading xpath \" + xpathString, e);",
          "",
          "[Removed Lines]",
          "72:         JXPathContext context = initialiseContext(ns, doc);",
          "74:             Object ob = context.getValue(xpathString);",
          "",
          "[Added Lines]",
          "73:             Object ob = JXPathUtils.newSafeContext(doc, true, ns, false).getValue(xpathString);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "79:         return id;",
          "80:     }",
          "",
          "[Removed Lines]",
          "82:     private static JXPathContext initialiseContext(NamespaceSupport ns, Document doc) {",
          "83:         JXPathContext context = JXPathContext.newContext(doc);",
          "84:         addNamespaces(ns, context);",
          "85:         context.setLenient(true);",
          "86:         return context;",
          "87:     }",
          "89:     private static void addNamespaces(NamespaceSupport ns, JXPathContext context) {",
          "90:         @SuppressWarnings(\"unchecked\")",
          "91:         Enumeration<String> prefixes = ns.getPrefixes();",
          "92:         while (prefixes.hasMoreElements()) {",
          "93:             String prefix = prefixes.nextElement();",
          "94:             String uri = ns.getURI(prefix);",
          "95:             context.registerNamespace(prefix, uri);",
          "96:         }",
          "97:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java||modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java": [
          "File: modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java -> modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: package org.geotools.appschema.util;",
          "19: import static org.junit.Assert.assertEquals;",
          "20: import static org.junit.Assert.assertThrows;",
          "22: import org.junit.Test;",
          "24: public class XmlXpathUtilitesTest {",
          "26:     @Test",
          "27:     public void testGetXPathValuesWithJavaMethod() {",
          "28:         RuntimeException exception =",
          "29:                 assertThrows(",
          "30:                         RuntimeException.class,",
          "31:                         () ->",
          "32:                                 XmlXpathUtilites.getXPathValues(",
          "33:                                         null, \"java.lang.Thread.sleep(30000)\", null));",
          "34:         assertEquals(\"Error reading xpath java.lang.Thread.sleep(30000)\", exception.getMessage());",
          "35:     }",
          "37:     @Test",
          "38:     public void testCountXPathNodesWithJavaMethod() {",
          "39:         RuntimeException exception =",
          "40:                 assertThrows(",
          "41:                         RuntimeException.class,",
          "42:                         () ->",
          "43:                                 XmlXpathUtilites.countXPathNodes(",
          "44:                                         null, \"java.lang.Thread.sleep(30000)\", null));",
          "45:         assertEquals(\"Error reading xpath java.lang.Thread.sleep(30000)\", exception.getMessage());",
          "46:     }",
          "48:     @Test",
          "49:     public void testGetSingleXPathValueWithJavaMethod() {",
          "50:         RuntimeException exception =",
          "51:                 assertThrows(",
          "52:                         RuntimeException.class,",
          "53:                         () ->",
          "54:                                 XmlXpathUtilites.getSingleXPathValue(",
          "55:                                         null, \"java.lang.Thread.sleep(30000)\", null));",
          "56:         assertEquals(\"Error reading xpath java.lang.Thread.sleep(30000)\", exception.getMessage());",
          "57:     }",
          "58: }",
          "",
          "---------------"
        ],
        "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java": [
          "File: modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java -> modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: import static org.geotools.filter.expression.SimpleFeaturePropertyAccessorFactory.DEFAULT_GEOMETRY_NAME;",
          "22: import java.util.ArrayList;",
          "24: import java.util.Iterator;",
          "25: import java.util.List;",
          "26: import java.util.regex.Pattern;",
          "",
          "[Removed Lines]",
          "23: import java.util.Enumeration;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "33: import org.geotools.api.feature.GeometryAttribute;",
          "34: import org.geotools.api.feature.IllegalAttributeException;",
          "35: import org.geotools.api.feature.simple.SimpleFeature;",
          "36: import org.geotools.api.feature.type.AttributeDescriptor;",
          "37: import org.geotools.api.feature.type.AttributeType;",
          "38: import org.geotools.api.feature.type.ComplexType;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "35: import org.geotools.api.feature.simple.SimpleFeatureType;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "44: import org.geotools.filter.expression.PropertyAccessor;",
          "45: import org.geotools.filter.expression.PropertyAccessorFactory;",
          "46: import org.geotools.util.factory.Hints;",
          "47: import org.locationtech.jts.geom.Geometry;",
          "48: import org.xml.sax.helpers.NamespaceSupport;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47: import org.geotools.xsd.impl.jxpath.JXPathUtils;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "83:     public PropertyAccessor createPropertyAccessor(",
          "84:             Class type, String xpath, Class target, Hints hints) {",
          "",
          "[Removed Lines]",
          "86:         if (SimpleFeature.class.isAssignableFrom(type)) {",
          "",
          "[Added Lines]",
          "87:         if (SimpleFeature.class.isAssignableFrom(type)",
          "88:                 || SimpleFeatureType.class.isAssignableFrom(type)) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "260:         public <T> T get(Object object, String xpath, Class<T> target)",
          "261:                 throws IllegalArgumentException {",
          "271:             Iterator it = context.iteratePointers(xpath);",
          "272:             List results = new ArrayList<>();",
          "273:             while (it.hasNext()) {",
          "",
          "[Removed Lines]",
          "263:             JXPathContext context = JXPathContext.newContext(object);",
          "264:             Enumeration declaredPrefixes = namespaces.getDeclaredPrefixes();",
          "265:             while (declaredPrefixes.hasMoreElements()) {",
          "266:                 String prefix = (String) declaredPrefixes.nextElement();",
          "267:                 String uri = namespaces.getURI(prefix);",
          "268:                 context.registerNamespace(prefix, uri);",
          "269:             }",
          "",
          "[Added Lines]",
          "265:             JXPathContext context =",
          "266:                     JXPathUtils.newSafeContext(object, false, this.namespaces, true);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "296:                 throw new IllegalAttributeException(null, \"feature type is immutable\");",
          "297:             }",
          "306:             context.setValue(xpath, value);",
          "308:             assert value == context.getValue(xpath);",
          "",
          "[Removed Lines]",
          "299:             JXPathContext context = JXPathContext.newContext(object);",
          "300:             Enumeration declaredPrefixes = namespaces.getDeclaredPrefixes();",
          "301:             while (declaredPrefixes.hasMoreElements()) {",
          "302:                 String prefix = (String) declaredPrefixes.nextElement();",
          "303:                 String uri = namespaces.getURI(prefix);",
          "304:                 context.registerNamespace(prefix, uri);",
          "305:             }",
          "",
          "[Added Lines]",
          "295:             JXPathContext context =",
          "296:                     JXPathUtils.newSafeContext(object, false, this.namespaces, true);",
          "",
          "---------------"
        ],
        "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java": [
          "File: modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java -> modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: package org.geotools.data.complex.expression;",
          "20: import java.util.Map;",
          "22: import org.geotools.api.feature.IllegalAttributeException;",
          "23: import org.geotools.filter.expression.PropertyAccessor;",
          "24: import org.geotools.filter.expression.PropertyAccessorFactory;",
          "25: import org.geotools.util.factory.Hints;",
          "",
          "[Removed Lines]",
          "21: import org.apache.commons.jxpath.JXPathContext;",
          "",
          "[Added Lines]",
          "25: import org.geotools.xsd.impl.jxpath.JXPathUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63:                 @SuppressWarnings(\"unchecked\")",
          "64:                 public <T> T get(Object object, String xpath, Class<T> target)",
          "65:                         throws IllegalArgumentException {",
          "69:                 }",
          "71:                 @Override",
          "",
          "[Removed Lines]",
          "66:                     JXPathContext context = JXPathContext.newContext(object);",
          "67:                     context.setLenient(true);",
          "68:                     return (T) context.getValue(xpath);",
          "",
          "[Added Lines]",
          "66:                     return (T) JXPathUtils.newSafeContext(object, true).getValue(xpath);",
          "",
          "---------------"
        ],
        "modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java": [
          "File: modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java -> modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "290:                         \"eg:complexAttribute/eg:rootAttribute/eg:multiLeafAttribute\",",
          "291:                         new Hints(FeaturePropertyAccessorFactory.NAMESPACE_CONTEXT, NAMESPACES));",
          "292:         assertEquals(multiLeafDesc, ex.evaluate(fType));",
          "293:     }",
          "295:     public static FeatureType createFeatureType() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "295:         ex =",
          "296:                 new AttributeExpressionImpl(",
          "297:                         \"java.lang.Thread.sleep(30000)\",",
          "298:                         new Hints(FeaturePropertyAccessorFactory.NAMESPACE_CONTEXT, NAMESPACES));",
          "299:         long start = System.currentTimeMillis();",
          "300:         assertNull(ex.evaluate(feature));",
          "301:         long runtime = System.currentTimeMillis() - start;",
          "302:         assertTrue(\"java.lang.Thread.sleep(30000) was executed\", runtime < 30000);",
          "303:         start = System.currentTimeMillis();",
          "304:         assertNull(ex.evaluate(fType));",
          "305:         runtime = System.currentTimeMillis() - start;",
          "306:         assertTrue(\"java.lang.Thread.sleep(30000) was executed\", runtime < 30000);",
          "",
          "---------------"
        ],
        "modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java": [
          "File: modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java -> modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: package org.geotools.filter.expression;",
          "19: import static org.junit.Assert.assertTrue;",
          "21: import java.util.Collections;",
          "22: import org.geotools.api.filter.expression.PropertyName;",
          "23: import org.geotools.factory.CommonFactoryFinder;",
          "24: import org.junit.Test;",
          "26: public class MapPropertyAccessorTest {",
          "28:     @Test",
          "29:     public void testAccessWithJavaMethod() {",
          "30:         PropertyName property =",
          "31:                 CommonFactoryFinder.getFilterFactory().property(\"java.lang.Thread.sleep(30000)\");",
          "32:         long start = System.currentTimeMillis();",
          "33:         property.evaluate(Collections.emptyMap());",
          "34:         long runtime = System.currentTimeMillis() - start;",
          "35:         assertTrue(\"java.lang.Thread.sleep(30000) was executed\", runtime < 30000);",
          "36:     }",
          "37: }",
          "",
          "---------------"
        ],
        "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java": [
          "File: modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java -> modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: package org.geotools.xsd.impl.jxpath;",
          "19: import java.util.Iterator;",
          "22: import org.apache.commons.jxpath.JXPathIntrospector;",
          "23: import org.geotools.xsd.Configuration;",
          "24: import org.geotools.xsd.Node;",
          "",
          "[Removed Lines]",
          "20: import org.apache.commons.jxpath.JXPathContext;",
          "21: import org.apache.commons.jxpath.JXPathContextFactory;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49:         Node root = handlers.firstElement().getParseNode();",
          "56:         while (itr.hasNext()) {",
          "57:             Object obj = itr.next();",
          "",
          "[Removed Lines]",
          "50:         JXPathContext jxpContext = JXPathContextFactory.newInstance().newContext(null, root);",
          "52:         jxpContext.setLenient(true);",
          "54:         Iterator itr = jxpContext.iterate(xpath);",
          "",
          "[Added Lines]",
          "48:         Iterator itr = JXPathUtils.newSafeContext(root, true).iterate(xpath);",
          "",
          "---------------"
        ],
        "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java": [
          "File: modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java -> modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: package org.geotools.xsd.impl.jxpath;",
          "19: import java.util.Enumeration;",
          "20: import org.apache.commons.jxpath.FunctionLibrary;",
          "21: import org.apache.commons.jxpath.JXPathContext;",
          "22: import org.xml.sax.helpers.NamespaceSupport;",
          "25: public class JXPathUtils {",
          "34:     public static JXPathContext newSafeContext(Object contextBean, boolean lenient) {",
          "35:         return newSafeContext(contextBean, lenient, null, true);",
          "36:     }",
          "47:     @SuppressWarnings(\"unchecked\")",
          "48:     public static JXPathContext newSafeContext(",
          "49:             Object contextBean, boolean lenient, NamespaceSupport ns, boolean declared) {",
          "50:         JXPathContext context = JXPathContext.newContext(contextBean);",
          "51:         context.setLenient(lenient);",
          "52:         if (ns != null) {",
          "53:             Enumeration<String> prefixes = declared ? ns.getDeclaredPrefixes() : ns.getPrefixes();",
          "54:             while (prefixes.hasMoreElements()) {",
          "55:                 String prefix = prefixes.nextElement();",
          "56:                 String uri = ns.getURI(prefix);",
          "57:                 context.registerNamespace(prefix, uri);",
          "58:             }",
          "59:         }",
          "61:         context.setFunctions(new FunctionLibrary());",
          "62:         return context;",
          "63:     }",
          "64: }",
          "",
          "---------------"
        ],
        "modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java||modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java": [
          "File: modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java -> modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: package org.geotools.xsd;",
          "19: import static org.junit.Assert.assertNull;",
          "21: import java.io.ByteArrayInputStream;",
          "22: import javax.xml.namespace.QName;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: import static org.junit.Assert.assertTrue;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:         assertNull(parser.parse());",
          "41:     }",
          "42: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44:     @Test",
          "45:     public void testParseWithJavaMethod() throws Exception {",
          "46:         ByteArrayInputStream in = new ByteArrayInputStream(\"<mails></mails>\".getBytes());",
          "47:         StreamingParser parser =",
          "48:                 new StreamingParser(new MLConfiguration(), in, \"java.lang.Thread.sleep(30000)\");",
          "50:         long start = System.currentTimeMillis();",
          "51:         assertNull(parser.parse());",
          "52:         long runtime = System.currentTimeMillis() - start;",
          "53:         assertTrue(\"java.lang.Thread.sleep(30000) was executed\", runtime < 30000);",
          "54:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8c9aa1a809ba3327eedfd1b3b0f7abe5450acb4c",
      "candidate_info": {
        "commit_hash": "8c9aa1a809ba3327eedfd1b3b0f7abe5450acb4c",
        "repo": "geotools/geotools",
        "commit_url": "https://github.com/geotools/geotools/commit/8c9aa1a809ba3327eedfd1b3b0f7abe5450acb4c",
        "files": [
          "modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java",
          "modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java",
          "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java",
          "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java",
          "modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java",
          "modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java",
          "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java",
          "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java",
          "modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java"
        ],
        "message": "[GEOT-7587] Improve handling of XPath expressions",
        "before_after_code_files": [
          "modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java||modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java",
          "modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java||modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java",
          "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java",
          "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java",
          "modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java",
          "modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java",
          "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java",
          "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java",
          "modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java||modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java||modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java",
            "modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java||modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java",
            "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java",
            "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java",
            "modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java",
            "modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java",
            "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java",
            "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java",
            "modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java||modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java"
          ],
          "candidate": [
            "modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java||modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java",
            "modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java||modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java",
            "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java",
            "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java",
            "modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java",
            "modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java",
            "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java",
            "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java",
            "modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java||modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java"
          ]
        }
      },
      "candidate_diff": {
        "modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java||modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java": [
          "File: modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java -> modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: package org.geotools.appschema.util;",
          "20: import java.util.ArrayList;",
          "22: import java.util.List;",
          "23: import java.util.Scanner;",
          "24: import org.apache.commons.jxpath.JXPathContext;",
          "25: import org.jdom2.Document;",
          "26: import org.xml.sax.helpers.NamespaceSupport;",
          "",
          "[Removed Lines]",
          "21: import java.util.Enumeration;",
          "",
          "[Added Lines]",
          "24: import org.geotools.xsd.impl.jxpath.JXPathUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "42:     public static List<String> getXPathValues(",
          "43:             NamespaceSupport ns, String xpathString, Document doc) {",
          "45:         return getXPathValues(xpathString, context);",
          "46:     }",
          "",
          "[Removed Lines]",
          "44:         JXPathContext context = initialiseContext(ns, doc);",
          "",
          "[Added Lines]",
          "44:         JXPathContext context = JXPathUtils.newSafeContext(doc, true, ns, false);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "69:     public static String getSingleXPathValue(",
          "70:             NamespaceSupport ns, String xpathString, Document doc) {",
          "71:         String id = null;",
          "73:         try {",
          "75:             id = (String) ob;",
          "76:         } catch (RuntimeException e) {",
          "77:             throw new RuntimeException(\"Error reading xpath \" + xpathString, e);",
          "",
          "[Removed Lines]",
          "72:         JXPathContext context = initialiseContext(ns, doc);",
          "74:             Object ob = context.getValue(xpathString);",
          "",
          "[Added Lines]",
          "73:             Object ob = JXPathUtils.newSafeContext(doc, true, ns, false).getValue(xpathString);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "79:         return id;",
          "80:     }",
          "",
          "[Removed Lines]",
          "82:     private static JXPathContext initialiseContext(NamespaceSupport ns, Document doc) {",
          "83:         JXPathContext context = JXPathContext.newContext(doc);",
          "84:         addNamespaces(ns, context);",
          "85:         context.setLenient(true);",
          "86:         return context;",
          "87:     }",
          "89:     private static void addNamespaces(NamespaceSupport ns, JXPathContext context) {",
          "90:         @SuppressWarnings(\"unchecked\")",
          "91:         Enumeration<String> prefixes = ns.getPrefixes();",
          "92:         while (prefixes.hasMoreElements()) {",
          "93:             String prefix = prefixes.nextElement();",
          "94:             String uri = ns.getURI(prefix);",
          "95:             context.registerNamespace(prefix, uri);",
          "96:         }",
          "97:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java||modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java": [
          "File: modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java -> modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: package org.geotools.appschema.util;",
          "19: import static org.junit.Assert.assertEquals;",
          "20: import static org.junit.Assert.assertThrows;",
          "22: import org.junit.Test;",
          "24: public class XmlXpathUtilitesTest {",
          "26:     @Test",
          "27:     public void testGetXPathValuesWithJavaMethod() {",
          "28:         RuntimeException exception =",
          "29:                 assertThrows(",
          "30:                         RuntimeException.class,",
          "31:                         () ->",
          "32:                                 XmlXpathUtilites.getXPathValues(",
          "33:                                         null, \"java.lang.Thread.sleep(30000)\", null));",
          "34:         assertEquals(\"Error reading xpath java.lang.Thread.sleep(30000)\", exception.getMessage());",
          "35:     }",
          "37:     @Test",
          "38:     public void testCountXPathNodesWithJavaMethod() {",
          "39:         RuntimeException exception =",
          "40:                 assertThrows(",
          "41:                         RuntimeException.class,",
          "42:                         () ->",
          "43:                                 XmlXpathUtilites.countXPathNodes(",
          "44:                                         null, \"java.lang.Thread.sleep(30000)\", null));",
          "45:         assertEquals(\"Error reading xpath java.lang.Thread.sleep(30000)\", exception.getMessage());",
          "46:     }",
          "48:     @Test",
          "49:     public void testGetSingleXPathValueWithJavaMethod() {",
          "50:         RuntimeException exception =",
          "51:                 assertThrows(",
          "52:                         RuntimeException.class,",
          "53:                         () ->",
          "54:                                 XmlXpathUtilites.getSingleXPathValue(",
          "55:                                         null, \"java.lang.Thread.sleep(30000)\", null));",
          "56:         assertEquals(\"Error reading xpath java.lang.Thread.sleep(30000)\", exception.getMessage());",
          "57:     }",
          "58: }",
          "",
          "---------------"
        ],
        "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java": [
          "File: modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java -> modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: package org.geotools.data.complex.expression;",
          "20: import java.util.ArrayList;",
          "22: import java.util.Iterator;",
          "23: import java.util.List;",
          "24: import java.util.regex.Pattern;",
          "",
          "[Removed Lines]",
          "21: import java.util.Enumeration;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30: import org.geotools.filter.expression.PropertyAccessor;",
          "31: import org.geotools.filter.expression.PropertyAccessorFactory;",
          "32: import org.geotools.util.factory.Hints;",
          "33: import org.locationtech.jts.geom.Geometry;",
          "34: import org.opengis.feature.Attribute;",
          "35: import org.opengis.feature.ComplexAttribute;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32: import org.geotools.xsd.impl.jxpath.JXPathUtils;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "37: import org.opengis.feature.GeometryAttribute;",
          "38: import org.opengis.feature.IllegalAttributeException;",
          "39: import org.opengis.feature.simple.SimpleFeature;",
          "40: import org.opengis.feature.type.AttributeDescriptor;",
          "41: import org.opengis.feature.type.AttributeType;",
          "42: import org.opengis.feature.type.ComplexType;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40: import org.opengis.feature.simple.SimpleFeatureType;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "81:     public PropertyAccessor createPropertyAccessor(",
          "82:             Class type, String xpath, Class target, Hints hints) {",
          "",
          "[Removed Lines]",
          "84:         if (SimpleFeature.class.isAssignableFrom(type)) {",
          "",
          "[Added Lines]",
          "85:         if (SimpleFeature.class.isAssignableFrom(type)",
          "86:                 || SimpleFeatureType.class.isAssignableFrom(type)) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "260:         public <T> T get(Object object, String xpath, Class<T> target)",
          "261:                 throws IllegalArgumentException {",
          "271:             Iterator it = context.iteratePointers(xpath);",
          "272:             List results = new ArrayList<>();",
          "273:             while (it.hasNext()) {",
          "",
          "[Removed Lines]",
          "263:             JXPathContext context = JXPathContext.newContext(object);",
          "264:             Enumeration declaredPrefixes = namespaces.getDeclaredPrefixes();",
          "265:             while (declaredPrefixes.hasMoreElements()) {",
          "266:                 String prefix = (String) declaredPrefixes.nextElement();",
          "267:                 String uri = namespaces.getURI(prefix);",
          "268:                 context.registerNamespace(prefix, uri);",
          "269:             }",
          "",
          "[Added Lines]",
          "265:             JXPathContext context =",
          "266:                     JXPathUtils.newSafeContext(object, false, this.namespaces, true);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "296:                 throw new IllegalAttributeException(null, \"feature type is immutable\");",
          "297:             }",
          "306:             context.setValue(xpath, value);",
          "308:             assert value == context.getValue(xpath);",
          "",
          "[Removed Lines]",
          "299:             JXPathContext context = JXPathContext.newContext(object);",
          "300:             Enumeration declaredPrefixes = namespaces.getDeclaredPrefixes();",
          "301:             while (declaredPrefixes.hasMoreElements()) {",
          "302:                 String prefix = (String) declaredPrefixes.nextElement();",
          "303:                 String uri = namespaces.getURI(prefix);",
          "304:                 context.registerNamespace(prefix, uri);",
          "305:             }",
          "",
          "[Added Lines]",
          "295:             JXPathContext context =",
          "296:                     JXPathUtils.newSafeContext(object, false, this.namespaces, true);",
          "",
          "---------------"
        ],
        "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java": [
          "File: modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java -> modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: package org.geotools.data.complex.expression;",
          "20: import java.util.Map;",
          "22: import org.geotools.filter.expression.PropertyAccessor;",
          "23: import org.geotools.filter.expression.PropertyAccessorFactory;",
          "24: import org.geotools.util.factory.Hints;",
          "25: import org.opengis.feature.IllegalAttributeException;",
          "",
          "[Removed Lines]",
          "21: import org.apache.commons.jxpath.JXPathContext;",
          "",
          "[Added Lines]",
          "24: import org.geotools.xsd.impl.jxpath.JXPathUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63:                 @SuppressWarnings(\"unchecked\")",
          "64:                 public <T> T get(Object object, String xpath, Class<T> target)",
          "65:                         throws IllegalArgumentException {",
          "69:                 }",
          "71:                 @Override",
          "",
          "[Removed Lines]",
          "66:                     JXPathContext context = JXPathContext.newContext(object);",
          "67:                     context.setLenient(true);",
          "68:                     return (T) context.getValue(xpath);",
          "",
          "[Added Lines]",
          "66:                     return (T) JXPathUtils.newSafeContext(object, true).getValue(xpath);",
          "",
          "---------------"
        ],
        "modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java": [
          "File: modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java -> modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "290:                         \"eg:complexAttribute/eg:rootAttribute/eg:multiLeafAttribute\",",
          "291:                         new Hints(FeaturePropertyAccessorFactory.NAMESPACE_CONTEXT, NAMESPACES));",
          "292:         assertEquals(multiLeafDesc, ex.evaluate(fType));",
          "293:     }",
          "295:     public static FeatureType createFeatureType() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "295:         ex =",
          "296:                 new AttributeExpressionImpl(",
          "297:                         \"java.lang.Thread.sleep(30000)\",",
          "298:                         new Hints(FeaturePropertyAccessorFactory.NAMESPACE_CONTEXT, NAMESPACES));",
          "299:         long start = System.currentTimeMillis();",
          "300:         assertNull(ex.evaluate(feature));",
          "301:         long runtime = System.currentTimeMillis() - start;",
          "302:         assertTrue(\"java.lang.Thread.sleep(30000) was executed\", runtime < 30000);",
          "303:         start = System.currentTimeMillis();",
          "304:         assertNull(ex.evaluate(fType));",
          "305:         runtime = System.currentTimeMillis() - start;",
          "306:         assertTrue(\"java.lang.Thread.sleep(30000) was executed\", runtime < 30000);",
          "",
          "---------------"
        ],
        "modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java": [
          "File: modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java -> modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: package org.geotools.filter.expression;",
          "19: import static org.junit.Assert.assertTrue;",
          "21: import java.util.Collections;",
          "22: import org.geotools.factory.CommonFactoryFinder;",
          "23: import org.junit.Test;",
          "24: import org.opengis.filter.expression.PropertyName;",
          "26: public class MapPropertyAccessorTest {",
          "28:     @Test",
          "29:     public void testAccessWithJavaMethod() {",
          "30:         PropertyName property =",
          "31:                 CommonFactoryFinder.getFilterFactory().property(\"java.lang.Thread.sleep(30000)\");",
          "32:         long start = System.currentTimeMillis();",
          "33:         property.evaluate(Collections.emptyMap());",
          "34:         long runtime = System.currentTimeMillis() - start;",
          "35:         assertTrue(\"java.lang.Thread.sleep(30000) was executed\", runtime < 30000);",
          "36:     }",
          "37: }",
          "",
          "---------------"
        ],
        "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java": [
          "File: modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java -> modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: package org.geotools.xsd.impl.jxpath;",
          "19: import java.util.Iterator;",
          "22: import org.apache.commons.jxpath.JXPathIntrospector;",
          "23: import org.geotools.xsd.Configuration;",
          "24: import org.geotools.xsd.Node;",
          "",
          "[Removed Lines]",
          "20: import org.apache.commons.jxpath.JXPathContext;",
          "21: import org.apache.commons.jxpath.JXPathContextFactory;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49:         Node root = handlers.firstElement().getParseNode();",
          "56:         while (itr.hasNext()) {",
          "57:             Object obj = itr.next();",
          "",
          "[Removed Lines]",
          "50:         JXPathContext jxpContext = JXPathContextFactory.newInstance().newContext(null, root);",
          "52:         jxpContext.setLenient(true);",
          "54:         Iterator itr = jxpContext.iterate(xpath);",
          "",
          "[Added Lines]",
          "48:         Iterator itr = JXPathUtils.newSafeContext(root, true).iterate(xpath);",
          "",
          "---------------"
        ],
        "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java": [
          "File: modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java -> modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: package org.geotools.xsd.impl.jxpath;",
          "19: import java.util.Enumeration;",
          "20: import org.apache.commons.jxpath.FunctionLibrary;",
          "21: import org.apache.commons.jxpath.JXPathContext;",
          "22: import org.xml.sax.helpers.NamespaceSupport;",
          "25: public class JXPathUtils {",
          "34:     public static JXPathContext newSafeContext(Object contextBean, boolean lenient) {",
          "35:         return newSafeContext(contextBean, lenient, null, true);",
          "36:     }",
          "47:     @SuppressWarnings(\"unchecked\")",
          "48:     public static JXPathContext newSafeContext(",
          "49:             Object contextBean, boolean lenient, NamespaceSupport ns, boolean declared) {",
          "50:         JXPathContext context = JXPathContext.newContext(contextBean);",
          "51:         context.setLenient(lenient);",
          "52:         if (ns != null) {",
          "53:             Enumeration<String> prefixes = declared ? ns.getDeclaredPrefixes() : ns.getPrefixes();",
          "54:             while (prefixes.hasMoreElements()) {",
          "55:                 String prefix = prefixes.nextElement();",
          "56:                 String uri = ns.getURI(prefix);",
          "57:                 context.registerNamespace(prefix, uri);",
          "58:             }",
          "59:         }",
          "61:         context.setFunctions(new FunctionLibrary());",
          "62:         return context;",
          "63:     }",
          "64: }",
          "",
          "---------------"
        ],
        "modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java||modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java": [
          "File: modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java -> modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: package org.geotools.xsd;",
          "19: import static org.junit.Assert.assertNull;",
          "21: import java.io.ByteArrayInputStream;",
          "22: import javax.xml.namespace.QName;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: import static org.junit.Assert.assertTrue;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:         assertNull(parser.parse());",
          "41:     }",
          "42: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44:     @Test",
          "45:     public void testParseWithJavaMethod() throws Exception {",
          "46:         ByteArrayInputStream in = new ByteArrayInputStream(\"<mails></mails>\".getBytes());",
          "47:         StreamingParser parser =",
          "48:                 new StreamingParser(new MLConfiguration(), in, \"java.lang.Thread.sleep(30000)\");",
          "50:         long start = System.currentTimeMillis();",
          "51:         assertNull(parser.parse());",
          "52:         long runtime = System.currentTimeMillis() - start;",
          "53:         assertTrue(\"java.lang.Thread.sleep(30000) was executed\", runtime < 30000);",
          "54:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fa187593abd5784d4338e7b5fff97eb47ce60b78",
      "candidate_info": {
        "commit_hash": "fa187593abd5784d4338e7b5fff97eb47ce60b78",
        "repo": "geotools/geotools",
        "commit_url": "https://github.com/geotools/geotools/commit/fa187593abd5784d4338e7b5fff97eb47ce60b78",
        "files": [
          "modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java",
          "modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java",
          "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java",
          "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java",
          "modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java",
          "modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java",
          "modules/extension/xsd/xsd-core/pom.xml",
          "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java",
          "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java",
          "modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java"
        ],
        "message": "[GEOT-7587] Improve handling of XPath expressions",
        "before_after_code_files": [
          "modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java||modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java",
          "modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java||modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java",
          "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java",
          "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java",
          "modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java",
          "modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java",
          "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java",
          "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java",
          "modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java||modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java||modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java",
            "modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java||modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java",
            "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java",
            "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java",
            "modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java",
            "modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java",
            "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java",
            "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java",
            "modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java||modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java"
          ],
          "candidate": [
            "modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java||modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java",
            "modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java||modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java",
            "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java",
            "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java",
            "modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java",
            "modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java",
            "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java",
            "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java",
            "modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java||modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java"
          ]
        }
      },
      "candidate_diff": {
        "modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java||modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java": [
          "File: modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java -> modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: package org.geotools.appschema.util;",
          "20: import java.util.ArrayList;",
          "22: import java.util.List;",
          "23: import java.util.Scanner;",
          "24: import org.apache.commons.jxpath.JXPathContext;",
          "25: import org.jdom2.Document;",
          "26: import org.xml.sax.helpers.NamespaceSupport;",
          "",
          "[Removed Lines]",
          "21: import java.util.Enumeration;",
          "",
          "[Added Lines]",
          "24: import org.geotools.xsd.impl.jxpath.JXPathUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "42:     public static List<String> getXPathValues(",
          "43:             NamespaceSupport ns, String xpathString, Document doc) {",
          "45:         return getXPathValues(xpathString, context);",
          "46:     }",
          "",
          "[Removed Lines]",
          "44:         JXPathContext context = initialiseContext(ns, doc);",
          "",
          "[Added Lines]",
          "44:         JXPathContext context = JXPathUtils.newSafeContext(doc, true, ns, false);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "69:     public static String getSingleXPathValue(",
          "70:             NamespaceSupport ns, String xpathString, Document doc) {",
          "71:         String id = null;",
          "73:         try {",
          "75:             id = (String) ob;",
          "76:         } catch (RuntimeException e) {",
          "77:             throw new RuntimeException(\"Error reading xpath \" + xpathString, e);",
          "",
          "[Removed Lines]",
          "72:         JXPathContext context = initialiseContext(ns, doc);",
          "74:             Object ob = context.getValue(xpathString);",
          "",
          "[Added Lines]",
          "73:             Object ob = JXPathUtils.newSafeContext(doc, true, ns, false).getValue(xpathString);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "79:         return id;",
          "80:     }",
          "",
          "[Removed Lines]",
          "82:     private static JXPathContext initialiseContext(NamespaceSupport ns, Document doc) {",
          "83:         JXPathContext context = JXPathContext.newContext(doc);",
          "84:         addNamespaces(ns, context);",
          "85:         context.setLenient(true);",
          "86:         return context;",
          "87:     }",
          "89:     private static void addNamespaces(NamespaceSupport ns, JXPathContext context) {",
          "90:         @SuppressWarnings(\"unchecked\")",
          "91:         Enumeration<String> prefixes = ns.getPrefixes();",
          "92:         while (prefixes.hasMoreElements()) {",
          "93:             String prefix = prefixes.nextElement();",
          "94:             String uri = ns.getURI(prefix);",
          "95:             context.registerNamespace(prefix, uri);",
          "96:         }",
          "97:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java||modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java": [
          "File: modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java -> modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: package org.geotools.appschema.util;",
          "19: import static org.junit.Assert.assertEquals;",
          "20: import static org.junit.Assert.assertThrows;",
          "22: import org.junit.Test;",
          "24: public class XmlXpathUtilitesTest {",
          "26:     @Test",
          "27:     public void testGetXPathValuesWithJavaMethod() {",
          "28:         RuntimeException exception =",
          "29:                 assertThrows(",
          "30:                         RuntimeException.class,",
          "31:                         () ->",
          "32:                                 XmlXpathUtilites.getXPathValues(",
          "33:                                         null, \"java.lang.Thread.sleep(30000)\", null));",
          "34:         assertEquals(\"Error reading xpath java.lang.Thread.sleep(30000)\", exception.getMessage());",
          "35:     }",
          "37:     @Test",
          "38:     public void testCountXPathNodesWithJavaMethod() {",
          "39:         RuntimeException exception =",
          "40:                 assertThrows(",
          "41:                         RuntimeException.class,",
          "42:                         () ->",
          "43:                                 XmlXpathUtilites.countXPathNodes(",
          "44:                                         null, \"java.lang.Thread.sleep(30000)\", null));",
          "45:         assertEquals(\"Error reading xpath java.lang.Thread.sleep(30000)\", exception.getMessage());",
          "46:     }",
          "48:     @Test",
          "49:     public void testGetSingleXPathValueWithJavaMethod() {",
          "50:         RuntimeException exception =",
          "51:                 assertThrows(",
          "52:                         RuntimeException.class,",
          "53:                         () ->",
          "54:                                 XmlXpathUtilites.getSingleXPathValue(",
          "55:                                         null, \"java.lang.Thread.sleep(30000)\", null));",
          "56:         assertEquals(\"Error reading xpath java.lang.Thread.sleep(30000)\", exception.getMessage());",
          "57:     }",
          "58: }",
          "",
          "---------------"
        ],
        "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java": [
          "File: modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java -> modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: import static org.geotools.filter.expression.SimpleFeaturePropertyAccessorFactory.DEFAULT_GEOMETRY_NAME;",
          "22: import java.util.ArrayList;",
          "24: import java.util.Iterator;",
          "25: import java.util.List;",
          "26: import java.util.regex.Pattern;",
          "",
          "[Removed Lines]",
          "23: import java.util.Enumeration;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "33: import org.geotools.api.feature.GeometryAttribute;",
          "34: import org.geotools.api.feature.IllegalAttributeException;",
          "35: import org.geotools.api.feature.simple.SimpleFeature;",
          "36: import org.geotools.api.feature.type.AttributeDescriptor;",
          "37: import org.geotools.api.feature.type.AttributeType;",
          "38: import org.geotools.api.feature.type.ComplexType;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "35: import org.geotools.api.feature.simple.SimpleFeatureType;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "44: import org.geotools.filter.expression.PropertyAccessor;",
          "45: import org.geotools.filter.expression.PropertyAccessorFactory;",
          "46: import org.geotools.util.factory.Hints;",
          "47: import org.locationtech.jts.geom.Geometry;",
          "48: import org.xml.sax.helpers.NamespaceSupport;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47: import org.geotools.xsd.impl.jxpath.JXPathUtils;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "83:     public PropertyAccessor createPropertyAccessor(",
          "84:             Class type, String xpath, Class target, Hints hints) {",
          "",
          "[Removed Lines]",
          "86:         if (SimpleFeature.class.isAssignableFrom(type)) {",
          "",
          "[Added Lines]",
          "87:         if (SimpleFeature.class.isAssignableFrom(type)",
          "88:                 || SimpleFeatureType.class.isAssignableFrom(type)) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "260:         public <T> T get(Object object, String xpath, Class<T> target)",
          "261:                 throws IllegalArgumentException {",
          "271:             Iterator it = context.iteratePointers(xpath);",
          "272:             List results = new ArrayList<>();",
          "273:             while (it.hasNext()) {",
          "",
          "[Removed Lines]",
          "263:             JXPathContext context = JXPathContext.newContext(object);",
          "264:             Enumeration declaredPrefixes = namespaces.getDeclaredPrefixes();",
          "265:             while (declaredPrefixes.hasMoreElements()) {",
          "266:                 String prefix = (String) declaredPrefixes.nextElement();",
          "267:                 String uri = namespaces.getURI(prefix);",
          "268:                 context.registerNamespace(prefix, uri);",
          "269:             }",
          "",
          "[Added Lines]",
          "265:             JXPathContext context =",
          "266:                     JXPathUtils.newSafeContext(object, false, this.namespaces, true);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "296:                 throw new IllegalAttributeException(null, \"feature type is immutable\");",
          "297:             }",
          "306:             context.setValue(xpath, value);",
          "308:             assert value == context.getValue(xpath);",
          "",
          "[Removed Lines]",
          "299:             JXPathContext context = JXPathContext.newContext(object);",
          "300:             Enumeration declaredPrefixes = namespaces.getDeclaredPrefixes();",
          "301:             while (declaredPrefixes.hasMoreElements()) {",
          "302:                 String prefix = (String) declaredPrefixes.nextElement();",
          "303:                 String uri = namespaces.getURI(prefix);",
          "304:                 context.registerNamespace(prefix, uri);",
          "305:             }",
          "",
          "[Added Lines]",
          "295:             JXPathContext context =",
          "296:                     JXPathUtils.newSafeContext(object, false, this.namespaces, true);",
          "",
          "---------------"
        ],
        "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java": [
          "File: modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java -> modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: package org.geotools.data.complex.expression;",
          "20: import java.util.Map;",
          "22: import org.geotools.api.feature.IllegalAttributeException;",
          "23: import org.geotools.filter.expression.PropertyAccessor;",
          "24: import org.geotools.filter.expression.PropertyAccessorFactory;",
          "25: import org.geotools.util.factory.Hints;",
          "",
          "[Removed Lines]",
          "21: import org.apache.commons.jxpath.JXPathContext;",
          "",
          "[Added Lines]",
          "25: import org.geotools.xsd.impl.jxpath.JXPathUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63:                 @SuppressWarnings(\"unchecked\")",
          "64:                 public <T> T get(Object object, String xpath, Class<T> target)",
          "65:                         throws IllegalArgumentException {",
          "69:                 }",
          "71:                 @Override",
          "",
          "[Removed Lines]",
          "66:                     JXPathContext context = JXPathContext.newContext(object);",
          "67:                     context.setLenient(true);",
          "68:                     return (T) context.getValue(xpath);",
          "",
          "[Added Lines]",
          "66:                     return (T) JXPathUtils.newSafeContext(object, true).getValue(xpath);",
          "",
          "---------------"
        ],
        "modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java": [
          "File: modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java -> modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "290:                         \"eg:complexAttribute/eg:rootAttribute/eg:multiLeafAttribute\",",
          "291:                         new Hints(FeaturePropertyAccessorFactory.NAMESPACE_CONTEXT, NAMESPACES));",
          "292:         assertEquals(multiLeafDesc, ex.evaluate(fType));",
          "293:     }",
          "295:     public static FeatureType createFeatureType() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "295:         ex =",
          "296:                 new AttributeExpressionImpl(",
          "297:                         \"java.lang.Thread.sleep(30000)\",",
          "298:                         new Hints(FeaturePropertyAccessorFactory.NAMESPACE_CONTEXT, NAMESPACES));",
          "299:         long start = System.currentTimeMillis();",
          "300:         assertNull(ex.evaluate(feature));",
          "301:         long runtime = System.currentTimeMillis() - start;",
          "302:         assertTrue(\"java.lang.Thread.sleep(30000) was executed\", runtime < 30000);",
          "303:         start = System.currentTimeMillis();",
          "304:         assertNull(ex.evaluate(fType));",
          "305:         runtime = System.currentTimeMillis() - start;",
          "306:         assertTrue(\"java.lang.Thread.sleep(30000) was executed\", runtime < 30000);",
          "",
          "---------------"
        ],
        "modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java": [
          "File: modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java -> modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: package org.geotools.filter.expression;",
          "19: import static org.junit.Assert.assertTrue;",
          "21: import java.util.Collections;",
          "22: import org.geotools.api.filter.expression.PropertyName;",
          "23: import org.geotools.factory.CommonFactoryFinder;",
          "24: import org.junit.Test;",
          "26: public class MapPropertyAccessorTest {",
          "28:     @Test",
          "29:     public void testAccessWithJavaMethod() {",
          "30:         PropertyName property =",
          "31:                 CommonFactoryFinder.getFilterFactory().property(\"java.lang.Thread.sleep(30000)\");",
          "32:         long start = System.currentTimeMillis();",
          "33:         property.evaluate(Collections.emptyMap());",
          "34:         long runtime = System.currentTimeMillis() - start;",
          "35:         assertTrue(\"java.lang.Thread.sleep(30000) was executed\", runtime < 30000);",
          "36:     }",
          "37: }",
          "",
          "---------------"
        ],
        "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java": [
          "File: modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java -> modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: package org.geotools.xsd.impl.jxpath;",
          "19: import java.util.Iterator;",
          "22: import org.apache.commons.jxpath.JXPathIntrospector;",
          "23: import org.geotools.xsd.Configuration;",
          "24: import org.geotools.xsd.Node;",
          "",
          "[Removed Lines]",
          "20: import org.apache.commons.jxpath.JXPathContext;",
          "21: import org.apache.commons.jxpath.JXPathContextFactory;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49:         Node root = handlers.firstElement().getParseNode();",
          "56:         while (itr.hasNext()) {",
          "57:             Object obj = itr.next();",
          "",
          "[Removed Lines]",
          "50:         JXPathContext jxpContext = JXPathContextFactory.newInstance().newContext(null, root);",
          "52:         jxpContext.setLenient(true);",
          "54:         Iterator itr = jxpContext.iterate(xpath);",
          "",
          "[Added Lines]",
          "48:         Iterator itr = JXPathUtils.newSafeContext(root, true).iterate(xpath);",
          "",
          "---------------"
        ],
        "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java": [
          "File: modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java -> modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: package org.geotools.xsd.impl.jxpath;",
          "19: import java.util.Enumeration;",
          "20: import org.apache.commons.jxpath.FunctionLibrary;",
          "21: import org.apache.commons.jxpath.JXPathContext;",
          "22: import org.xml.sax.helpers.NamespaceSupport;",
          "25: public class JXPathUtils {",
          "34:     public static JXPathContext newSafeContext(Object contextBean, boolean lenient) {",
          "35:         return newSafeContext(contextBean, lenient, null, true);",
          "36:     }",
          "47:     @SuppressWarnings(\"unchecked\")",
          "48:     public static JXPathContext newSafeContext(",
          "49:             Object contextBean, boolean lenient, NamespaceSupport ns, boolean declared) {",
          "50:         JXPathContext context = JXPathContext.newContext(contextBean);",
          "51:         context.setLenient(lenient);",
          "52:         if (ns != null) {",
          "53:             Enumeration<String> prefixes = declared ? ns.getDeclaredPrefixes() : ns.getPrefixes();",
          "54:             while (prefixes.hasMoreElements()) {",
          "55:                 String prefix = prefixes.nextElement();",
          "56:                 String uri = ns.getURI(prefix);",
          "57:                 context.registerNamespace(prefix, uri);",
          "58:             }",
          "59:         }",
          "61:         context.setFunctions(new FunctionLibrary());",
          "62:         return context;",
          "63:     }",
          "64: }",
          "",
          "---------------"
        ],
        "modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java||modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java": [
          "File: modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java -> modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: package org.geotools.xsd;",
          "19: import static org.junit.Assert.assertNull;",
          "21: import java.io.ByteArrayInputStream;",
          "22: import javax.xml.namespace.QName;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: import static org.junit.Assert.assertTrue;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:         assertNull(parser.parse());",
          "41:     }",
          "42: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44:     @Test",
          "45:     public void testParseWithJavaMethod() throws Exception {",
          "46:         ByteArrayInputStream in = new ByteArrayInputStream(\"<mails></mails>\".getBytes());",
          "47:         StreamingParser parser =",
          "48:                 new StreamingParser(new MLConfiguration(), in, \"java.lang.Thread.sleep(30000)\");",
          "50:         long start = System.currentTimeMillis();",
          "51:         assertNull(parser.parse());",
          "52:         long runtime = System.currentTimeMillis() - start;",
          "53:         assertTrue(\"java.lang.Thread.sleep(30000) was executed\", runtime < 30000);",
          "54:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "33410e0b749d4083d974faeb81c9b1c0977c1291",
      "candidate_info": {
        "commit_hash": "33410e0b749d4083d974faeb81c9b1c0977c1291",
        "repo": "geotools/geotools",
        "commit_url": "https://github.com/geotools/geotools/commit/33410e0b749d4083d974faeb81c9b1c0977c1291",
        "files": [
          "modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java",
          "modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java",
          "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java",
          "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java",
          "modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java",
          "modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java",
          "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java",
          "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java",
          "modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java"
        ],
        "message": "[GEOT-7587] Improve handling of XPath expressions",
        "before_after_code_files": [
          "modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java||modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java",
          "modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java||modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java",
          "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java",
          "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java",
          "modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java",
          "modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java",
          "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java",
          "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java",
          "modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java||modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java||modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java",
            "modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java||modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java",
            "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java",
            "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java",
            "modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java",
            "modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java",
            "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java",
            "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java",
            "modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java||modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java"
          ],
          "candidate": [
            "modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java||modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java",
            "modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java||modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java",
            "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java",
            "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java",
            "modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java",
            "modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java",
            "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java",
            "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java",
            "modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java||modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java"
          ]
        }
      },
      "candidate_diff": {
        "modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java||modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java": [
          "File: modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java -> modules/extension/app-schema/app-schema/src/main/java/org/geotools/appschema/util/XmlXpathUtilites.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: package org.geotools.appschema.util;",
          "20: import java.util.ArrayList;",
          "22: import java.util.List;",
          "23: import java.util.Scanner;",
          "24: import org.apache.commons.jxpath.JXPathContext;",
          "25: import org.jdom2.Document;",
          "26: import org.xml.sax.helpers.NamespaceSupport;",
          "",
          "[Removed Lines]",
          "21: import java.util.Enumeration;",
          "",
          "[Added Lines]",
          "24: import org.geotools.xsd.impl.jxpath.JXPathUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "42:     public static List<String> getXPathValues(",
          "43:             NamespaceSupport ns, String xpathString, Document doc) {",
          "45:         return getXPathValues(xpathString, context);",
          "46:     }",
          "",
          "[Removed Lines]",
          "44:         JXPathContext context = initialiseContext(ns, doc);",
          "",
          "[Added Lines]",
          "44:         JXPathContext context = JXPathUtils.newSafeContext(doc, true, ns, false);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "69:     public static String getSingleXPathValue(",
          "70:             NamespaceSupport ns, String xpathString, Document doc) {",
          "71:         String id = null;",
          "73:         try {",
          "75:             id = (String) ob;",
          "76:         } catch (RuntimeException e) {",
          "77:             throw new RuntimeException(\"Error reading xpath \" + xpathString, e);",
          "",
          "[Removed Lines]",
          "72:         JXPathContext context = initialiseContext(ns, doc);",
          "74:             Object ob = context.getValue(xpathString);",
          "",
          "[Added Lines]",
          "73:             Object ob = JXPathUtils.newSafeContext(doc, true, ns, false).getValue(xpathString);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "79:         return id;",
          "80:     }",
          "",
          "[Removed Lines]",
          "82:     private static JXPathContext initialiseContext(NamespaceSupport ns, Document doc) {",
          "83:         JXPathContext context = JXPathContext.newContext(doc);",
          "84:         addNamespaces(ns, context);",
          "85:         context.setLenient(true);",
          "86:         return context;",
          "87:     }",
          "89:     private static void addNamespaces(NamespaceSupport ns, JXPathContext context) {",
          "90:         @SuppressWarnings(\"unchecked\")",
          "91:         Enumeration<String> prefixes = ns.getPrefixes();",
          "92:         while (prefixes.hasMoreElements()) {",
          "93:             String prefix = prefixes.nextElement();",
          "94:             String uri = ns.getURI(prefix);",
          "95:             context.registerNamespace(prefix, uri);",
          "96:         }",
          "97:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java||modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java": [
          "File: modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java -> modules/extension/app-schema/app-schema/src/test/java/org/geotools/appschema/util/XmlXpathUtilitesTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: package org.geotools.appschema.util;",
          "19: import static org.junit.Assert.assertEquals;",
          "20: import static org.junit.Assert.assertThrows;",
          "22: import org.junit.Test;",
          "24: public class XmlXpathUtilitesTest {",
          "26:     @Test",
          "27:     public void testGetXPathValuesWithJavaMethod() {",
          "28:         RuntimeException exception =",
          "29:                 assertThrows(",
          "30:                         RuntimeException.class,",
          "31:                         () ->",
          "32:                                 XmlXpathUtilites.getXPathValues(",
          "33:                                         null, \"java.lang.Thread.sleep(30000)\", null));",
          "34:         assertEquals(\"Error reading xpath java.lang.Thread.sleep(30000)\", exception.getMessage());",
          "35:     }",
          "37:     @Test",
          "38:     public void testCountXPathNodesWithJavaMethod() {",
          "39:         RuntimeException exception =",
          "40:                 assertThrows(",
          "41:                         RuntimeException.class,",
          "42:                         () ->",
          "43:                                 XmlXpathUtilites.countXPathNodes(",
          "44:                                         null, \"java.lang.Thread.sleep(30000)\", null));",
          "45:         assertEquals(\"Error reading xpath java.lang.Thread.sleep(30000)\", exception.getMessage());",
          "46:     }",
          "48:     @Test",
          "49:     public void testGetSingleXPathValueWithJavaMethod() {",
          "50:         RuntimeException exception =",
          "51:                 assertThrows(",
          "52:                         RuntimeException.class,",
          "53:                         () ->",
          "54:                                 XmlXpathUtilites.getSingleXPathValue(",
          "55:                                         null, \"java.lang.Thread.sleep(30000)\", null));",
          "56:         assertEquals(\"Error reading xpath java.lang.Thread.sleep(30000)\", exception.getMessage());",
          "57:     }",
          "58: }",
          "",
          "---------------"
        ],
        "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java": [
          "File: modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java -> modules/extension/complex/src/main/java/org/geotools/data/complex/expression/FeaturePropertyAccessorFactory.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: package org.geotools.data.complex.expression;",
          "20: import java.util.ArrayList;",
          "22: import java.util.Iterator;",
          "23: import java.util.List;",
          "24: import java.util.regex.Pattern;",
          "",
          "[Removed Lines]",
          "21: import java.util.Enumeration;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30: import org.geotools.filter.expression.PropertyAccessor;",
          "31: import org.geotools.filter.expression.PropertyAccessorFactory;",
          "32: import org.geotools.util.factory.Hints;",
          "33: import org.locationtech.jts.geom.Geometry;",
          "34: import org.opengis.feature.Attribute;",
          "35: import org.opengis.feature.ComplexAttribute;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32: import org.geotools.xsd.impl.jxpath.JXPathUtils;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "37: import org.opengis.feature.GeometryAttribute;",
          "38: import org.opengis.feature.IllegalAttributeException;",
          "39: import org.opengis.feature.simple.SimpleFeature;",
          "40: import org.opengis.feature.type.AttributeDescriptor;",
          "41: import org.opengis.feature.type.AttributeType;",
          "42: import org.opengis.feature.type.ComplexType;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40: import org.opengis.feature.simple.SimpleFeatureType;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "81:     public PropertyAccessor createPropertyAccessor(",
          "82:             Class type, String xpath, Class target, Hints hints) {",
          "",
          "[Removed Lines]",
          "84:         if (SimpleFeature.class.isAssignableFrom(type)) {",
          "",
          "[Added Lines]",
          "85:         if (SimpleFeature.class.isAssignableFrom(type)",
          "86:                 || SimpleFeatureType.class.isAssignableFrom(type)) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "260:         public <T> T get(Object object, String xpath, Class<T> target)",
          "261:                 throws IllegalArgumentException {",
          "271:             Iterator it = context.iteratePointers(xpath);",
          "272:             List results = new ArrayList<>();",
          "273:             while (it.hasNext()) {",
          "",
          "[Removed Lines]",
          "263:             JXPathContext context = JXPathContext.newContext(object);",
          "264:             Enumeration declaredPrefixes = namespaces.getDeclaredPrefixes();",
          "265:             while (declaredPrefixes.hasMoreElements()) {",
          "266:                 String prefix = (String) declaredPrefixes.nextElement();",
          "267:                 String uri = namespaces.getURI(prefix);",
          "268:                 context.registerNamespace(prefix, uri);",
          "269:             }",
          "",
          "[Added Lines]",
          "265:             JXPathContext context =",
          "266:                     JXPathUtils.newSafeContext(object, false, this.namespaces, true);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "296:                 throw new IllegalAttributeException(null, \"feature type is immutable\");",
          "297:             }",
          "306:             context.setValue(xpath, value);",
          "308:             assert value == context.getValue(xpath);",
          "",
          "[Removed Lines]",
          "299:             JXPathContext context = JXPathContext.newContext(object);",
          "300:             Enumeration declaredPrefixes = namespaces.getDeclaredPrefixes();",
          "301:             while (declaredPrefixes.hasMoreElements()) {",
          "302:                 String prefix = (String) declaredPrefixes.nextElement();",
          "303:                 String uri = namespaces.getURI(prefix);",
          "304:                 context.registerNamespace(prefix, uri);",
          "305:             }",
          "",
          "[Added Lines]",
          "295:             JXPathContext context =",
          "296:                     JXPathUtils.newSafeContext(object, false, this.namespaces, true);",
          "",
          "---------------"
        ],
        "modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java||modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java": [
          "File: modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java -> modules/extension/complex/src/main/java/org/geotools/data/complex/expression/MapPropertyAccessorFactory.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: package org.geotools.data.complex.expression;",
          "20: import java.util.Map;",
          "22: import org.geotools.filter.expression.PropertyAccessor;",
          "23: import org.geotools.filter.expression.PropertyAccessorFactory;",
          "24: import org.geotools.util.factory.Hints;",
          "25: import org.opengis.feature.IllegalAttributeException;",
          "",
          "[Removed Lines]",
          "21: import org.apache.commons.jxpath.JXPathContext;",
          "",
          "[Added Lines]",
          "24: import org.geotools.xsd.impl.jxpath.JXPathUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63:                 @SuppressWarnings(\"unchecked\")",
          "64:                 public <T> T get(Object object, String xpath, Class<T> target)",
          "65:                         throws IllegalArgumentException {",
          "69:                 }",
          "71:                 @Override",
          "",
          "[Removed Lines]",
          "66:                     JXPathContext context = JXPathContext.newContext(object);",
          "67:                     context.setLenient(true);",
          "68:                     return (T) context.getValue(xpath);",
          "",
          "[Added Lines]",
          "66:                     return (T) JXPathUtils.newSafeContext(object, true).getValue(xpath);",
          "",
          "---------------"
        ],
        "modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java": [
          "File: modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java -> modules/extension/complex/src/test/java/org/geotools/filter/expression/FeaturePropertyAccessorTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "290:                         \"eg:complexAttribute/eg:rootAttribute/eg:multiLeafAttribute\",",
          "291:                         new Hints(FeaturePropertyAccessorFactory.NAMESPACE_CONTEXT, NAMESPACES));",
          "292:         assertEquals(multiLeafDesc, ex.evaluate(fType));",
          "293:     }",
          "295:     public static FeatureType createFeatureType() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "295:         ex =",
          "296:                 new AttributeExpressionImpl(",
          "297:                         \"java.lang.Thread.sleep(30000)\",",
          "298:                         new Hints(FeaturePropertyAccessorFactory.NAMESPACE_CONTEXT, NAMESPACES));",
          "299:         long start = System.currentTimeMillis();",
          "300:         assertNull(ex.evaluate(feature));",
          "301:         long runtime = System.currentTimeMillis() - start;",
          "302:         assertTrue(\"java.lang.Thread.sleep(30000) was executed\", runtime < 30000);",
          "303:         start = System.currentTimeMillis();",
          "304:         assertNull(ex.evaluate(fType));",
          "305:         runtime = System.currentTimeMillis() - start;",
          "306:         assertTrue(\"java.lang.Thread.sleep(30000) was executed\", runtime < 30000);",
          "",
          "---------------"
        ],
        "modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java||modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java": [
          "File: modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java -> modules/extension/complex/src/test/java/org/geotools/filter/expression/MapPropertyAccessorTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: package org.geotools.filter.expression;",
          "19: import static org.junit.Assert.assertTrue;",
          "21: import java.util.Collections;",
          "22: import org.geotools.factory.CommonFactoryFinder;",
          "23: import org.junit.Test;",
          "24: import org.opengis.filter.expression.PropertyName;",
          "26: public class MapPropertyAccessorTest {",
          "28:     @Test",
          "29:     public void testAccessWithJavaMethod() {",
          "30:         PropertyName property =",
          "31:                 CommonFactoryFinder.getFilterFactory().property(\"java.lang.Thread.sleep(30000)\");",
          "32:         long start = System.currentTimeMillis();",
          "33:         property.evaluate(Collections.emptyMap());",
          "34:         long runtime = System.currentTimeMillis() - start;",
          "35:         assertTrue(\"java.lang.Thread.sleep(30000) was executed\", runtime < 30000);",
          "36:     }",
          "37: }",
          "",
          "---------------"
        ],
        "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java": [
          "File: modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java -> modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathStreamingParserHandler.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: package org.geotools.xsd.impl.jxpath;",
          "19: import java.util.Iterator;",
          "22: import org.apache.commons.jxpath.JXPathIntrospector;",
          "23: import org.geotools.xsd.Configuration;",
          "24: import org.geotools.xsd.Node;",
          "",
          "[Removed Lines]",
          "20: import org.apache.commons.jxpath.JXPathContext;",
          "21: import org.apache.commons.jxpath.JXPathContextFactory;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49:         Node root = handlers.firstElement().getParseNode();",
          "56:         while (itr.hasNext()) {",
          "57:             Object obj = itr.next();",
          "",
          "[Removed Lines]",
          "50:         JXPathContext jxpContext = JXPathContextFactory.newInstance().newContext(null, root);",
          "52:         jxpContext.setLenient(true);",
          "54:         Iterator itr = jxpContext.iterate(xpath);",
          "",
          "[Added Lines]",
          "48:         Iterator itr = JXPathUtils.newSafeContext(root, true).iterate(xpath);",
          "",
          "---------------"
        ],
        "modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java||modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java": [
          "File: modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java -> modules/extension/xsd/xsd-core/src/main/java/org/geotools/xsd/impl/jxpath/JXPathUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: package org.geotools.xsd.impl.jxpath;",
          "19: import java.util.Enumeration;",
          "20: import org.apache.commons.jxpath.FunctionLibrary;",
          "21: import org.apache.commons.jxpath.JXPathContext;",
          "22: import org.xml.sax.helpers.NamespaceSupport;",
          "25: public class JXPathUtils {",
          "34:     public static JXPathContext newSafeContext(Object contextBean, boolean lenient) {",
          "35:         return newSafeContext(contextBean, lenient, null, true);",
          "36:     }",
          "47:     @SuppressWarnings(\"unchecked\")",
          "48:     public static JXPathContext newSafeContext(",
          "49:             Object contextBean, boolean lenient, NamespaceSupport ns, boolean declared) {",
          "50:         JXPathContext context = JXPathContext.newContext(contextBean);",
          "51:         context.setLenient(lenient);",
          "52:         if (ns != null) {",
          "53:             Enumeration<String> prefixes = declared ? ns.getDeclaredPrefixes() : ns.getPrefixes();",
          "54:             while (prefixes.hasMoreElements()) {",
          "55:                 String prefix = prefixes.nextElement();",
          "56:                 String uri = ns.getURI(prefix);",
          "57:                 context.registerNamespace(prefix, uri);",
          "58:             }",
          "59:         }",
          "61:         context.setFunctions(new FunctionLibrary());",
          "62:         return context;",
          "63:     }",
          "64: }",
          "",
          "---------------"
        ],
        "modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java||modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java": [
          "File: modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java -> modules/extension/xsd/xsd-core/src/test/java/org/geotools/xsd/StreamingParserTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: package org.geotools.xsd;",
          "19: import static org.junit.Assert.assertNull;",
          "21: import java.io.ByteArrayInputStream;",
          "22: import javax.xml.namespace.QName;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: import static org.junit.Assert.assertTrue;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:         assertNull(parser.parse());",
          "41:     }",
          "42: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44:     @Test",
          "45:     public void testParseWithJavaMethod() throws Exception {",
          "46:         ByteArrayInputStream in = new ByteArrayInputStream(\"<mails></mails>\".getBytes());",
          "47:         StreamingParser parser =",
          "48:                 new StreamingParser(new MLConfiguration(), in, \"java.lang.Thread.sleep(30000)\");",
          "50:         long start = System.currentTimeMillis();",
          "51:         assertNull(parser.parse());",
          "52:         long runtime = System.currentTimeMillis() - start;",
          "53:         assertTrue(\"java.lang.Thread.sleep(30000) was executed\", runtime < 30000);",
          "54:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}