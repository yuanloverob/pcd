{
  "cve_id": "CVE-2024-8060",
  "cve_desc": "OpenWebUI version 0.3.0 contains a vulnerability in the audio API endpoint `/audio/api/v1/transcriptions` that allows for arbitrary file upload. The application performs insufficient validation on the `file.content_type` and allows user-controlled filenames, leading to a path traversal vulnerability. This can be exploited by an authenticated user to overwrite critical files within the Docker container, potentially leading to remote code execution as the root user.",
  "repo": "open-webui/open-webui",
  "patch_hash": "613a087387c094e71ee91d29c015195ef401e160",
  "patch_info": {
    "commit_hash": "613a087387c094e71ee91d29c015195ef401e160",
    "repo": "open-webui/open-webui",
    "commit_url": "https://github.com/open-webui/open-webui/commit/613a087387c094e71ee91d29c015195ef401e160",
    "files": [
      "backend/open_webui/routers/audio.py"
    ],
    "message": "refac",
    "before_after_code_files": [
      "backend/open_webui/routers/audio.py||backend/open_webui/routers/audio.py"
    ]
  },
  "patch_diff": {
    "backend/open_webui/routers/audio.py||backend/open_webui/routers/audio.py": [
      "File: backend/open_webui/routers/audio.py -> backend/open_webui/routers/audio.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "681:     available_models = []",
      "682:     if request.app.state.config.TTS_ENGINE == \"openai\":",
      "683:         # Use custom endpoint if not using the official OpenAI API URL",
      "685:             try:",
      "687:                 response.raise_for_status()",
      "688:                 data = response.json()",
      "689:                 available_models = data.get(\"models\", [])",
      "690:             except Exception as e:",
      "691:                 log.error(f\"Error fetching models from custom endpoint: {str(e)}\")",
      "693:         else:",
      "694:             available_models = [{\"id\": \"tts-1\"}, {\"id\": \"tts-1-hd\"}]",
      "695:     elif request.app.state.config.TTS_ENGINE == \"elevenlabs\":",
      "",
      "[Removed Lines]",
      "684:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(\"https://api.openai.com\"):",
      "686:                 response = requests.get(f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/models\")",
      "692:                 available_models = []",
      "",
      "[Added Lines]",
      "684:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(",
      "685:             \"https://api.openai.com\"",
      "686:         ):",
      "688:                 response = requests.get(",
      "689:                     f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/models\"",
      "690:                 )",
      "696:                 available_models = [{\"id\": \"tts-1\"}, {\"id\": \"tts-1-hd\"}]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "723:     available_voices = {}",
      "724:     if request.app.state.config.TTS_ENGINE == \"openai\":",
      "725:         # Use custom endpoint if not using the official OpenAI API URL",
      "727:             try:",
      "729:                 response.raise_for_status()",
      "730:                 data = response.json()",
      "731:                 voices_list = data.get(\"voices\", [])",
      "732:                 available_voices = {voice[\"id\"]: voice[\"name\"] for voice in voices_list}",
      "733:             except Exception as e:",
      "734:                 log.error(f\"Error fetching voices from custom endpoint: {str(e)}\")",
      "736:         else:",
      "737:             available_voices = {",
      "738:                 \"alloy\": \"alloy\",",
      "",
      "[Removed Lines]",
      "726:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(\"https://api.openai.com\"):",
      "728:                 response = requests.get(f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/voices\")",
      "735:                 available_voices = {}",
      "",
      "[Added Lines]",
      "730:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(",
      "731:             \"https://api.openai.com\"",
      "732:         ):",
      "734:                 response = requests.get(",
      "735:                     f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/voices\"",
      "736:                 )",
      "743:                 available_voices = {",
      "744:                     \"alloy\": \"alloy\",",
      "745:                     \"echo\": \"echo\",",
      "746:                     \"fable\": \"fable\",",
      "747:                     \"onyx\": \"onyx\",",
      "748:                     \"nova\": \"nova\",",
      "749:                     \"shimmer\": \"shimmer\",",
      "750:                 }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e06111a362b87d571fcf9b7158864aec7b57b9d9",
      "candidate_info": {
        "commit_hash": "e06111a362b87d571fcf9b7158864aec7b57b9d9",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/e06111a362b87d571fcf9b7158864aec7b57b9d9",
        "files": [
          "src/lib/components/admin/Functions/FunctionEditor.svelte",
          "src/lib/components/workspace/Tools/ToolkitEditor.svelte",
          "src/routes/(app)/admin/functions/create/+page.svelte",
          "src/routes/(app)/admin/functions/edit/+page.svelte",
          "src/routes/(app)/workspace/tools/create/+page.svelte",
          "src/routes/(app)/workspace/tools/edit/+page.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/admin/Functions/FunctionEditor.svelte||src/lib/components/admin/Functions/FunctionEditor.svelte",
          "src/lib/components/workspace/Tools/ToolkitEditor.svelte||src/lib/components/workspace/Tools/ToolkitEditor.svelte",
          "src/routes/(app)/admin/functions/create/+page.svelte||src/routes/(app)/admin/functions/create/+page.svelte",
          "src/routes/(app)/admin/functions/edit/+page.svelte||src/routes/(app)/admin/functions/edit/+page.svelte",
          "src/routes/(app)/workspace/tools/create/+page.svelte||src/routes/(app)/workspace/tools/create/+page.svelte",
          "src/routes/(app)/workspace/tools/edit/+page.svelte||src/routes/(app)/workspace/tools/edit/+page.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/admin/Functions/FunctionEditor.svelte||src/lib/components/admin/Functions/FunctionEditor.svelte": [
          "File: src/lib/components/admin/Functions/FunctionEditor.svelte -> src/lib/components/admin/Functions/FunctionEditor.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <script>",
          "3:  import { goto } from '$app/navigation';",
          "6:  const i18n = getContext('i18n');",
          "8:  import CodeEditor from '$lib/components/common/CodeEditor.svelte';",
          "",
          "[Removed Lines]",
          "2:  import { getContext, createEventDispatcher, onMount, tick } from 'svelte';",
          "5:  const dispatch = createEventDispatcher();",
          "",
          "[Added Lines]",
          "2:  import { getContext, onMount, tick } from 'svelte';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15:  let loading = false;",
          "16:  let showConfirm = false;",
          "18:  export let edit = false;",
          "19:  export let clone = false;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17:  export let onSave = () => {};",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "257:  const saveHandler = async () => {",
          "258:   loading = true;",
          "260:    id,",
          "261:    name,",
          "262:    meta,",
          "",
          "[Removed Lines]",
          "259:   dispatch('save', {",
          "",
          "[Added Lines]",
          "260:   onSave({",
          "",
          "---------------"
        ],
        "src/lib/components/workspace/Tools/ToolkitEditor.svelte||src/lib/components/workspace/Tools/ToolkitEditor.svelte": [
          "File: src/lib/components/workspace/Tools/ToolkitEditor.svelte -> src/lib/components/workspace/Tools/ToolkitEditor.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: <script>",
          "4:  const i18n = getContext('i18n');",
          "",
          "[Removed Lines]",
          "2:  import { getContext, createEventDispatcher, onMount, tick } from 'svelte';",
          "",
          "[Added Lines]",
          "2:  import { getContext, onMount, tick } from 'svelte';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "12:  import LockClosed from '$lib/components/icons/LockClosed.svelte';",
          "13:  import AccessControlModal from '../common/AccessControlModal.svelte';",
          "17:  let formElement = null;",
          "18:  let loading = false;",
          "",
          "[Removed Lines]",
          "15:  const dispatch = createEventDispatcher();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "23:  export let edit = false;",
          "24:  export let clone = false;",
          "26:  export let id = '';",
          "27:  export let name = '';",
          "28:  export let meta = {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24:  export let onSave = () => {};",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "151:  const saveHandler = async () => {",
          "152:   loading = true;",
          "154:    id,",
          "155:    name,",
          "156:    meta,",
          "",
          "[Removed Lines]",
          "153:   dispatch('save', {",
          "",
          "[Added Lines]",
          "153:   onSave({",
          "",
          "---------------"
        ],
        "src/routes/(app)/admin/functions/create/+page.svelte||src/routes/(app)/admin/functions/create/+page.svelte": [
          "File: src/routes/(app)/admin/functions/create/+page.svelte -> src/routes/(app)/admin/functions/create/+page.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "95:    meta={func?.meta ?? { description: '' }}",
          "96:    content={func?.content ?? ''}",
          "97:    {clone}",
          "100:    }}",
          "101:   />",
          "102:  {/key}",
          "",
          "[Removed Lines]",
          "98:    on:save={(e) => {",
          "99:     saveHandler(e.detail);",
          "",
          "[Added Lines]",
          "98:    onSave={(value) => {",
          "99:     saveHandler(value);",
          "",
          "---------------"
        ],
        "src/routes/(app)/admin/functions/edit/+page.svelte||src/routes/(app)/admin/functions/edit/+page.svelte": [
          "File: src/routes/(app)/admin/functions/edit/+page.svelte -> src/routes/(app)/admin/functions/edit/+page.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:   name={func.name}",
          "81:   meta={func.meta}",
          "82:   content={func.content}",
          "85:   }}",
          "86:  />",
          "87: {:else}",
          "",
          "[Removed Lines]",
          "83:   on:save={(e) => {",
          "84:    saveHandler(e.detail);",
          "",
          "[Added Lines]",
          "83:   onSave={(value) => {",
          "84:    saveHandler(value);",
          "",
          "---------------"
        ],
        "src/routes/(app)/workspace/tools/create/+page.svelte||src/routes/(app)/workspace/tools/create/+page.svelte": [
          "File: src/routes/(app)/workspace/tools/create/+page.svelte -> src/routes/(app)/workspace/tools/create/+page.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "89:    content={tool?.content ?? ''}",
          "90:    access_control={null}",
          "91:    {clone}",
          "94:    }}",
          "95:   />",
          "96:  {/key}",
          "",
          "[Removed Lines]",
          "92:    on:save={(e) => {",
          "93:     saveHandler(e.detail);",
          "",
          "[Added Lines]",
          "92:    onSave={(value) => {",
          "93:     saveHandler(value);",
          "",
          "---------------"
        ],
        "src/routes/(app)/workspace/tools/edit/+page.svelte||src/routes/(app)/workspace/tools/edit/+page.svelte": [
          "File: src/routes/(app)/workspace/tools/edit/+page.svelte -> src/routes/(app)/workspace/tools/edit/+page.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "75:   meta={tool.meta}",
          "76:   content={tool.content}",
          "77:   accessControl={tool.access_control}",
          "80:   }}",
          "81:  />",
          "82: {:else}",
          "",
          "[Removed Lines]",
          "78:   on:save={(e) => {",
          "79:    saveHandler(e.detail);",
          "",
          "[Added Lines]",
          "78:   onSave={(value) => {",
          "79:    saveHandler(value);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dc3abc2bcb8477392f69807774e126811b105b12",
      "candidate_info": {
        "commit_hash": "dc3abc2bcb8477392f69807774e126811b105b12",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/dc3abc2bcb8477392f69807774e126811b105b12",
        "files": [
          "src/routes/(app)/+layout.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/routes/(app)/+layout.svelte||src/routes/(app)/+layout.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/routes/(app)/+layout.svelte||src/routes/(app)/+layout.svelte": [
          "File: src/routes/(app)/+layout.svelte -> src/routes/(app)/+layout.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "171:     }",
          "175:      event.preventDefault();",
          "176:      console.log('temporaryChat');",
          "177:      temporaryChatEnabled.set(!$temporaryChatEnabled);",
          "",
          "[Removed Lines]",
          "174:     if (isCtrlPressed && isShiftPressed && event.key.toLowerCase() === `'`) {",
          "",
          "[Added Lines]",
          "174:     if (",
          "175:      isCtrlPressed &&",
          "176:      isShiftPressed &&",
          "177:      (event.key.toLowerCase() === `'` || event.key.toLowerCase() === `\"`)",
          "178:     ) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fbf4f5eb30c352e8ece11f2c988a4769dc926c2b",
      "candidate_info": {
        "commit_hash": "fbf4f5eb30c352e8ece11f2c988a4769dc926c2b",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/fbf4f5eb30c352e8ece11f2c988a4769dc926c2b",
        "files": [
          "src/lib/components/chat/Settings/About.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/chat/Settings/About.svelte||src/lib/components/chat/Settings/About.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/chat/Settings/About.svelte||src/lib/components/chat/Settings/About.svelte": [
          "File: src/lib/components/chat/Settings/About.svelte -> src/lib/components/chat/Settings/About.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "107:   <hr class=\" border-gray-100 dark:border-gray-850\" />",
          "109:   <div class=\"mt-2 text-xs text-gray-400 dark:text-gray-500\">",
          "110:    Emoji graphics provided by",
          "111:    <a href=\"https://github.com/jdecked/twemoji\" target=\"_blank\">Twemoji</a>, licensed under",
          "112:    <a href=\"https://creativecommons.org/licenses/by/4.0/\" target=\"_blank\">CC-BY 4.0</a>.",
          "113:   </div>",
          "138:   <div>",
          "150:    <pre",
          "151:     class=\"text-xs text-gray-400 dark:text-gray-500\">Copyright (c) {new Date().getFullYear()} <a",
          "152:      href=\"https://openwebui.com\"",
          "",
          "[Removed Lines]",
          "115:   <div class=\"flex space-x-1\">",
          "116:    <a href=\"https://discord.gg/5rJgQTnV4s\" target=\"_blank\">",
          "117:     <img",
          "118:      alt=\"Discord\"",
          "119:      src=\"https://img.shields.io/badge/Discord-Open_WebUI-blue?logo=discord&logoColor=white\"",
          "120:     />",
          "121:    </a>",
          "123:    <a href=\"https://twitter.com/OpenWebUI\" target=\"_blank\">",
          "124:     <img",
          "125:      alt=\"X (formerly Twitter) Follow\"",
          "126:      src=\"https://img.shields.io/twitter/follow/OpenWebUI\"",
          "127:     />",
          "128:    </a>",
          "130:    <a href=\"https://github.com/open-webui/open-webui\" target=\"_blank\">",
          "131:     <img",
          "132:      alt=\"Github Repo\"",
          "133:      src=\"https://img.shields.io/github/stars/open-webui/open-webui?style=social&label=Star us on Github\"",
          "134:     />",
          "135:    </a>",
          "136:   </div>",
          "139:    {#if $config?.license_metadata}",
          "140:     <div class=\"mb-2 text-xs\">",
          "141:      {#if !$WEBUI_NAME.includes('Open WebUI')}",
          "142:       <span class=\" text-gray-500 dark:text-gray-300 font-medium\">{$WEBUI_NAME}</span> -",
          "143:      {/if}",
          "145:      <span class=\" capitalize\">{$config?.license_metadata?.type}</span> license purchased by",
          "146:      <span class=\" capitalize\">{$config?.license_metadata?.organization_name}</span>",
          "147:     </div>",
          "148:    {/if}",
          "",
          "[Added Lines]",
          "109:   {#if $config?.license_metadata}",
          "110:    <div class=\"mb-2 text-xs\">",
          "111:     {#if !$WEBUI_NAME.includes('Open WebUI')}",
          "112:      <span class=\" text-gray-500 dark:text-gray-300 font-medium\">{$WEBUI_NAME}</span> -",
          "113:     {/if}",
          "115:     <span class=\" capitalize\">{$config?.license_metadata?.type}</span> license purchased by",
          "116:     <span class=\" capitalize\">{$config?.license_metadata?.organization_name}</span>",
          "117:    </div>",
          "118:   {:else}",
          "119:    <div class=\"flex space-x-1\">",
          "120:     <a href=\"https://discord.gg/5rJgQTnV4s\" target=\"_blank\">",
          "121:      <img",
          "122:       alt=\"Discord\"",
          "123:       src=\"https://img.shields.io/badge/Discord-Open_WebUI-blue?logo=discord&logoColor=white\"",
          "124:      />",
          "125:     </a>",
          "127:     <a href=\"https://twitter.com/OpenWebUI\" target=\"_blank\">",
          "128:      <img",
          "129:       alt=\"X (formerly Twitter) Follow\"",
          "130:       src=\"https://img.shields.io/twitter/follow/OpenWebUI\"",
          "131:      />",
          "132:     </a>",
          "134:     <a href=\"https://github.com/open-webui/open-webui\" target=\"_blank\">",
          "135:      <img",
          "136:       alt=\"Github Repo\"",
          "137:       src=\"https://img.shields.io/github/stars/open-webui/open-webui?style=social&label=Star us on Github\"",
          "138:      />",
          "139:     </a>",
          "140:    </div>",
          "141:   {/if}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "da757069def25dab5cd92b38f62c3408462e1783",
      "candidate_info": {
        "commit_hash": "da757069def25dab5cd92b38f62c3408462e1783",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/da757069def25dab5cd92b38f62c3408462e1783",
        "files": [
          "backend/open_webui/utils/chat.py"
        ],
        "message": "refac",
        "before_after_code_files": [
          "backend/open_webui/utils/chat.py||backend/open_webui/utils/chat.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "backend/open_webui/utils/chat.py||backend/open_webui/utils/chat.py": [
          "File: backend/open_webui/utils/chat.py -> backend/open_webui/utils/chat.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "166:         bypass_filter = True",
          "168:     if hasattr(request.state, \"metadata\"):",
          "171:     if getattr(request.state, \"direct\", False) and hasattr(request.state, \"model\"):",
          "172:         models = {",
          "",
          "[Removed Lines]",
          "169:         form_data[\"metadata\"] = request.state.metadata",
          "",
          "[Added Lines]",
          "169:         if \"metadata\" not in form_data:",
          "170:             form_data[\"metadata\"] = request.state.metadata",
          "171:         else:",
          "172:             form_data[\"metadata\"] = {",
          "175:             }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f0feb7bd351ce6c583e0c92a9646bcee1e966fac",
      "candidate_info": {
        "commit_hash": "f0feb7bd351ce6c583e0c92a9646bcee1e966fac",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/f0feb7bd351ce6c583e0c92a9646bcee1e966fac",
        "files": [
          "src/lib/apis/chats/index.ts",
          "src/lib/components/chat/Messages/ResponseMessage.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/apis/chats/index.ts||src/lib/apis/chats/index.ts",
          "src/lib/components/chat/Messages/ResponseMessage.svelte||src/lib/components/chat/Messages/ResponseMessage.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/apis/chats/index.ts||src/lib/apis/chats/index.ts": [
          "File: src/lib/apis/chats/index.ts -> src/lib/apis/chats/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "459:    return json;",
          "460:   })",
          "461:   .catch((err) => {",
          "464:    console.log(err);",
          "465:    return null;",
          "",
          "[Removed Lines]",
          "462:    error = err;",
          "",
          "[Added Lines]",
          "462:    error = err.detail;",
          "",
          "---------------"
        ],
        "src/lib/components/chat/Messages/ResponseMessage.svelte||src/lib/components/chat/Messages/ResponseMessage.svelte": [
          "File: src/lib/components/chat/Messages/ResponseMessage.svelte -> src/lib/components/chat/Messages/ResponseMessage.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "15:  import { getChatById } from '$lib/apis/chats';",
          "16:  import { generateTags } from '$lib/apis';",
          "19:  import { synthesizeOpenAISpeech } from '$lib/apis/audio';",
          "20:  import { imageGenerations } from '$lib/apis/images';",
          "21:  import {",
          "",
          "[Removed Lines]",
          "18:  import { config, models, settings, TTSWorker, user } from '$lib/stores';",
          "",
          "[Added Lines]",
          "18:  import { config, models, settings, temporaryChatEnabled, TTSWorker, user } from '$lib/stores';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1089:         {/if}",
          "1091:         {#if !readOnly}",
          "1093:           <Tooltip content={$i18n.t('Good Response')} placement=\"bottom\">",
          "1094:            <button",
          "1095:             class=\"{isLastMessage",
          "",
          "[Removed Lines]",
          "1092:          {#if $config?.features.enable_message_rating ?? true}",
          "",
          "[Added Lines]",
          "1092:          {#if !$temporaryChatEnabled && ($config?.features.enable_message_rating ?? true)}",
          "",
          "---------------"
        ]
      }
    }
  ]
}