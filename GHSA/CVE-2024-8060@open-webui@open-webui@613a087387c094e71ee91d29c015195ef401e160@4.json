{
  "cve_id": "CVE-2024-8060",
  "cve_desc": "OpenWebUI version 0.3.0 contains a vulnerability in the audio API endpoint `/audio/api/v1/transcriptions` that allows for arbitrary file upload. The application performs insufficient validation on the `file.content_type` and allows user-controlled filenames, leading to a path traversal vulnerability. This can be exploited by an authenticated user to overwrite critical files within the Docker container, potentially leading to remote code execution as the root user.",
  "repo": "open-webui/open-webui",
  "patch_hash": "613a087387c094e71ee91d29c015195ef401e160",
  "patch_info": {
    "commit_hash": "613a087387c094e71ee91d29c015195ef401e160",
    "repo": "open-webui/open-webui",
    "commit_url": "https://github.com/open-webui/open-webui/commit/613a087387c094e71ee91d29c015195ef401e160",
    "files": [
      "backend/open_webui/routers/audio.py"
    ],
    "message": "refac",
    "before_after_code_files": [
      "backend/open_webui/routers/audio.py||backend/open_webui/routers/audio.py"
    ]
  },
  "patch_diff": {
    "backend/open_webui/routers/audio.py||backend/open_webui/routers/audio.py": [
      "File: backend/open_webui/routers/audio.py -> backend/open_webui/routers/audio.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "681:     available_models = []",
      "682:     if request.app.state.config.TTS_ENGINE == \"openai\":",
      "683:         # Use custom endpoint if not using the official OpenAI API URL",
      "685:             try:",
      "687:                 response.raise_for_status()",
      "688:                 data = response.json()",
      "689:                 available_models = data.get(\"models\", [])",
      "690:             except Exception as e:",
      "691:                 log.error(f\"Error fetching models from custom endpoint: {str(e)}\")",
      "693:         else:",
      "694:             available_models = [{\"id\": \"tts-1\"}, {\"id\": \"tts-1-hd\"}]",
      "695:     elif request.app.state.config.TTS_ENGINE == \"elevenlabs\":",
      "",
      "[Removed Lines]",
      "684:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(\"https://api.openai.com\"):",
      "686:                 response = requests.get(f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/models\")",
      "692:                 available_models = []",
      "",
      "[Added Lines]",
      "684:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(",
      "685:             \"https://api.openai.com\"",
      "686:         ):",
      "688:                 response = requests.get(",
      "689:                     f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/models\"",
      "690:                 )",
      "696:                 available_models = [{\"id\": \"tts-1\"}, {\"id\": \"tts-1-hd\"}]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "723:     available_voices = {}",
      "724:     if request.app.state.config.TTS_ENGINE == \"openai\":",
      "725:         # Use custom endpoint if not using the official OpenAI API URL",
      "727:             try:",
      "729:                 response.raise_for_status()",
      "730:                 data = response.json()",
      "731:                 voices_list = data.get(\"voices\", [])",
      "732:                 available_voices = {voice[\"id\"]: voice[\"name\"] for voice in voices_list}",
      "733:             except Exception as e:",
      "734:                 log.error(f\"Error fetching voices from custom endpoint: {str(e)}\")",
      "736:         else:",
      "737:             available_voices = {",
      "738:                 \"alloy\": \"alloy\",",
      "",
      "[Removed Lines]",
      "726:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(\"https://api.openai.com\"):",
      "728:                 response = requests.get(f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/voices\")",
      "735:                 available_voices = {}",
      "",
      "[Added Lines]",
      "730:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(",
      "731:             \"https://api.openai.com\"",
      "732:         ):",
      "734:                 response = requests.get(",
      "735:                     f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/voices\"",
      "736:                 )",
      "743:                 available_voices = {",
      "744:                     \"alloy\": \"alloy\",",
      "745:                     \"echo\": \"echo\",",
      "746:                     \"fable\": \"fable\",",
      "747:                     \"onyx\": \"onyx\",",
      "748:                     \"nova\": \"nova\",",
      "749:                     \"shimmer\": \"shimmer\",",
      "750:                 }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "08ff1d8d8883fdb43142b6c86b1b01ca675bd9be",
      "candidate_info": {
        "commit_hash": "08ff1d8d8883fdb43142b6c86b1b01ca675bd9be",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/08ff1d8d8883fdb43142b6c86b1b01ca675bd9be",
        "files": [
          "src/lib/components/common/Collapsible.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/common/Collapsible.svelte||src/lib/components/common/Collapsible.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/common/Collapsible.svelte||src/lib/components/common/Collapsible.svelte": [
          "File: src/lib/components/common/Collapsible.svelte -> src/lib/components/common/Collapsible.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "56:  function formatJSONString(obj) {",
          "57:   try {",
          "60:    if (typeof parsed === 'object') {",
          "61:     return JSON.stringify(parsed, null, 2);",
          "",
          "[Removed Lines]",
          "58:    const parsed = JSON.parse(obj);",
          "",
          "[Added Lines]",
          "58:    const parsed = JSON.parse(JSON.parse(obj));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "192:   {#if open && !hide}",
          "193:    <div transition:slide={{ duration: 300, easing: quintOut, axis: 'y' }}>",
          "194:     {#if attributes?.type === 'tool_calls'}",
          "198:      {#if attributes?.done === 'true'}",
          "199:       <Markdown",
          "",
          "[Removed Lines]",
          "195:      {@const args = JSON.parse(decode(attributes?.arguments))}",
          "196:      {@const result = JSON.parse(decode(attributes?.result ?? ''))}",
          "",
          "[Added Lines]",
          "195:      {@const args = decode(attributes?.arguments)}",
          "196:      {@const result = decode(attributes?.result ?? '')}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c2ff73c3e18c4e6412753ac7964422ac4d69ba65",
      "candidate_info": {
        "commit_hash": "c2ff73c3e18c4e6412753ac7964422ac4d69ba65",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/c2ff73c3e18c4e6412753ac7964422ac4d69ba65",
        "files": [
          "src/lib/components/chat/Messages/ContentRenderer.svelte",
          "src/lib/components/common/Collapsible.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/chat/Messages/ContentRenderer.svelte||src/lib/components/chat/Messages/ContentRenderer.svelte",
          "src/lib/components/common/Collapsible.svelte||src/lib/components/common/Collapsible.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/chat/Messages/ContentRenderer.svelte||src/lib/components/chat/Messages/ContentRenderer.svelte": [
          "File: src/lib/components/chat/Messages/ContentRenderer.svelte -> src/lib/components/chat/Messages/ContentRenderer.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "84:   }",
          "86:   if (floatingButtonsElement) {",
          "88:   }",
          "89:  };",
          "",
          "[Removed Lines]",
          "87:    floatingButtonsElement.closeHandler();",
          "",
          "[Added Lines]",
          "89:    if (typeof floatingButtonsElement?.closeHandler === 'function') {",
          "91:     floatingButtonsElement?.closeHandler();",
          "92:    }",
          "",
          "---------------"
        ],
        "src/lib/components/common/Collapsible.svelte||src/lib/components/common/Collapsible.svelte": [
          "File: src/lib/components/common/Collapsible.svelte -> src/lib/components/common/Collapsible.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:  export let disabled = false;",
          "54:  export let hide = false;",
          "55: </script>",
          "57: <div {id} class={className}>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56:  function formatJSONString(obj) {",
          "57:   try {",
          "58:    const parsed = JSON.parse(obj);",
          "60:    if (typeof parsed === 'object') {",
          "61:     return JSON.stringify(parsed, null, 2);",
          "62:    } else {",
          "64:     return String(parsed);",
          "65:    }",
          "66:   } catch (e) {",
          "68:    return obj;",
          "69:   }",
          "70:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "176:   {#if open && !hide}",
          "177:    <div transition:slide={{ duration: 300, easing: quintOut, axis: 'y' }}>",
          "178:     {#if attributes?.type === 'tool_calls'}",
          "179:      {#if attributes?.done === 'true'}",
          "180:       <Markdown",
          "181:        id={`tool-calls-${attributes?.id}-result`}",
          "182:        content={`> \\`\\`\\`json",
          "185: > \\`\\`\\``}",
          "186:       />",
          "187:      {:else}",
          "188:       <Markdown",
          "189:        id={`tool-calls-${attributes?.id}-result`}",
          "190:        content={`> \\`\\`\\`json",
          "192: > \\`\\`\\``}",
          "193:       />",
          "194:      {/if}",
          "",
          "[Removed Lines]",
          "183: > ${JSON.stringify(JSON.parse(JSON.parse(decode(attributes?.arguments))), null, 2)}",
          "184: > ${JSON.stringify(JSON.parse(JSON.parse(decode(attributes?.result))), null, 2)}",
          "191: > ${JSON.stringify(JSON.parse(JSON.parse(decode(attributes?.arguments))), null, 2)}",
          "",
          "[Added Lines]",
          "195:      {@const args = JSON.parse(decode(attributes?.arguments))}",
          "196:      {@const result = JSON.parse(decode(attributes?.result ?? ''))}",
          "202: > ${formatJSONString(args)}",
          "203: > ${formatJSONString(result)}",
          "210: > ${formatJSONString(args)}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "50dec1207299c04717b83e7df8826155b01f2a6f",
      "candidate_info": {
        "commit_hash": "50dec1207299c04717b83e7df8826155b01f2a6f",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/50dec1207299c04717b83e7df8826155b01f2a6f",
        "files": [
          "backend/open_webui/routers/auths.py",
          "backend/open_webui/utils/oauth.py"
        ],
        "message": "refac",
        "before_after_code_files": [
          "backend/open_webui/routers/auths.py||backend/open_webui/routers/auths.py",
          "backend/open_webui/utils/oauth.py||backend/open_webui/utils/oauth.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "backend/open_webui/routers/auths.py||backend/open_webui/routers/auths.py": [
          "File: backend/open_webui/routers/auths.py -> backend/open_webui/routers/auths.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "252:             if not user:",
          "253:                 try:",
          "254:                     user_count = Users.get_num_users()",
          "264:                     role = (",
          "265:                         \"admin\"",
          "",
          "[Removed Lines]",
          "255:                     if (",
          "256:                         request.app.state.USER_COUNT",
          "257:                         and user_count >= request.app.state.USER_COUNT",
          "258:                     ):",
          "259:                         raise HTTPException(",
          "260:                             status.HTTP_403_FORBIDDEN,",
          "261:                             detail=ERROR_MESSAGES.ACCESS_PROHIBITED,",
          "262:                         )",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "439:             )",
          "441:     user_count = Users.get_num_users()",
          "447:     if not validate_email_format(form_data.email.lower()):",
          "448:         raise HTTPException(",
          "449:             status.HTTP_400_BAD_REQUEST, detail=ERROR_MESSAGES.INVALID_EMAIL_FORMAT",
          "",
          "[Removed Lines]",
          "442:     if request.app.state.USER_COUNT and user_count >= request.app.state.USER_COUNT:",
          "443:         raise HTTPException(",
          "444:             status.HTTP_403_FORBIDDEN, detail=ERROR_MESSAGES.ACCESS_PROHIBITED",
          "445:         )",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "backend/open_webui/utils/oauth.py||backend/open_webui/utils/oauth.py": [
          "File: backend/open_webui/utils/oauth.py -> backend/open_webui/utils/oauth.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "315:         if not user:",
          "316:             user_count = Users.get_num_users()",
          "327:             # If the user does not exist, check if signups are enabled",
          "328:             if auth_manager_config.ENABLE_OAUTH_SIGNUP:",
          "329:                 # Check if an existing user with the same email already exists",
          "",
          "[Removed Lines]",
          "318:             if (",
          "319:                 request.app.state.USER_COUNT",
          "320:                 and user_count >= request.app.state.USER_COUNT",
          "321:             ):",
          "322:                 raise HTTPException(",
          "323:                     403,",
          "324:                     detail=ERROR_MESSAGES.ACCESS_PROHIBITED,",
          "325:                 )",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9a794b1f8f98edcf76e4e64c1d95c3f71fd0f198",
      "candidate_info": {
        "commit_hash": "9a794b1f8f98edcf76e4e64c1d95c3f71fd0f198",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/9a794b1f8f98edcf76e4e64c1d95c3f71fd0f198",
        "files": [
          "src/lib/components/chat/Settings/General.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/chat/Settings/General.svelte||src/lib/components/chat/Settings/General.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/chat/Settings/General.svelte||src/lib/components/chat/Settings/General.svelte": [
          "File: src/lib/components/chat/Settings/General.svelte -> src/lib/components/chat/Settings/General.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "232:    </div>",
          "233:   </div>",
          "246:   {#if $user.role === 'admin' || $user?.permissions.chat?.controls}",
          "247:    <div class=\"mt-2 space-y-3 pr-1.5\">",
          "248:     <div class=\"flex justify-between items-center text-sm\">",
          "249:      <div class=\"  font-medium\">{$i18n.t('Advanced Parameters')}</div>",
          "",
          "[Removed Lines]",
          "235:   <hr class=\" dark:border-gray-850 my-3\" />",
          "237:   <div>",
          "238:    <div class=\" my-2.5 text-sm font-medium\">{$i18n.t('System Prompt')}</div>",
          "239:    <textarea",
          "240:     bind:value={system}",
          "241:     class=\"w-full rounded-lg p-4 text-sm dark:text-gray-300 dark:bg-gray-850 outline-none resize-none\"",
          "242:     rows=\"4\"",
          "243:    />",
          "244:   </div>",
          "",
          "[Added Lines]",
          "236:    <hr class=\" dark:border-gray-850 my-3\" />",
          "238:    <div>",
          "239:     <div class=\" my-2.5 text-sm font-medium\">{$i18n.t('System Prompt')}</div>",
          "240:     <textarea",
          "241:      bind:value={system}",
          "242:      class=\"w-full rounded-lg p-4 text-sm dark:text-gray-300 dark:bg-gray-850 outline-none resize-none\"",
          "243:      rows=\"4\"",
          "244:     />",
          "245:    </div>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b8fe9497fb4be5526ee3c6f8a9e42e7d3b2ab56f",
      "candidate_info": {
        "commit_hash": "b8fe9497fb4be5526ee3c6f8a9e42e7d3b2ab56f",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/b8fe9497fb4be5526ee3c6f8a9e42e7d3b2ab56f",
        "files": [
          "backend/open_webui/config.py"
        ],
        "message": "refac",
        "before_after_code_files": [
          "backend/open_webui/config.py||backend/open_webui/config.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "backend/open_webui/config.py||backend/open_webui/config.py": [
          "File: backend/open_webui/config.py -> backend/open_webui/config.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1337:    - If the results are unclear, unexpected, or require validation, refine the code and execute it again as needed. Always aim to deliver meaningful insights from the results, iterating if necessary.",
          "1338:    - If a link is provided for an image, audio, or any file, include it in the response exactly as given to ensure the user has access to the original resource.",
          "1339:    - All responses should be communicated in the chat's primary language, ensuring seamless understanding. If the chat is multilingual, default to English for clarity.",
          "1342: Ensure that the tools are effectively utilized to achieve the highest-quality analysis for the user.\"\"\"",
          "",
          "[Removed Lines]",
          "1340:    - **If a link to an image, audio, or any file is provided in markdown format, explicitly display it as part of the response to ensure the user can access it easily, do NOT change the link.**",
          "",
          "[Added Lines]",
          "1340:    - **If a link to an image, audio, or any file is provided in markdown format, ALWAYS regurgitate explicitly display it as part of the response to ensure the user can access it easily, do NOT change the link.**",
          "",
          "---------------"
        ]
      }
    }
  ]
}