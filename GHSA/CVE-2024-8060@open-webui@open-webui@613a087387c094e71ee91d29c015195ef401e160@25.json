{
  "cve_id": "CVE-2024-8060",
  "cve_desc": "OpenWebUI version 0.3.0 contains a vulnerability in the audio API endpoint `/audio/api/v1/transcriptions` that allows for arbitrary file upload. The application performs insufficient validation on the `file.content_type` and allows user-controlled filenames, leading to a path traversal vulnerability. This can be exploited by an authenticated user to overwrite critical files within the Docker container, potentially leading to remote code execution as the root user.",
  "repo": "open-webui/open-webui",
  "patch_hash": "613a087387c094e71ee91d29c015195ef401e160",
  "patch_info": {
    "commit_hash": "613a087387c094e71ee91d29c015195ef401e160",
    "repo": "open-webui/open-webui",
    "commit_url": "https://github.com/open-webui/open-webui/commit/613a087387c094e71ee91d29c015195ef401e160",
    "files": [
      "backend/open_webui/routers/audio.py"
    ],
    "message": "refac",
    "before_after_code_files": [
      "backend/open_webui/routers/audio.py||backend/open_webui/routers/audio.py"
    ]
  },
  "patch_diff": {
    "backend/open_webui/routers/audio.py||backend/open_webui/routers/audio.py": [
      "File: backend/open_webui/routers/audio.py -> backend/open_webui/routers/audio.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "681:     available_models = []",
      "682:     if request.app.state.config.TTS_ENGINE == \"openai\":",
      "683:         # Use custom endpoint if not using the official OpenAI API URL",
      "685:             try:",
      "687:                 response.raise_for_status()",
      "688:                 data = response.json()",
      "689:                 available_models = data.get(\"models\", [])",
      "690:             except Exception as e:",
      "691:                 log.error(f\"Error fetching models from custom endpoint: {str(e)}\")",
      "693:         else:",
      "694:             available_models = [{\"id\": \"tts-1\"}, {\"id\": \"tts-1-hd\"}]",
      "695:     elif request.app.state.config.TTS_ENGINE == \"elevenlabs\":",
      "",
      "[Removed Lines]",
      "684:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(\"https://api.openai.com\"):",
      "686:                 response = requests.get(f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/models\")",
      "692:                 available_models = []",
      "",
      "[Added Lines]",
      "684:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(",
      "685:             \"https://api.openai.com\"",
      "686:         ):",
      "688:                 response = requests.get(",
      "689:                     f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/models\"",
      "690:                 )",
      "696:                 available_models = [{\"id\": \"tts-1\"}, {\"id\": \"tts-1-hd\"}]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "723:     available_voices = {}",
      "724:     if request.app.state.config.TTS_ENGINE == \"openai\":",
      "725:         # Use custom endpoint if not using the official OpenAI API URL",
      "727:             try:",
      "729:                 response.raise_for_status()",
      "730:                 data = response.json()",
      "731:                 voices_list = data.get(\"voices\", [])",
      "732:                 available_voices = {voice[\"id\"]: voice[\"name\"] for voice in voices_list}",
      "733:             except Exception as e:",
      "734:                 log.error(f\"Error fetching voices from custom endpoint: {str(e)}\")",
      "736:         else:",
      "737:             available_voices = {",
      "738:                 \"alloy\": \"alloy\",",
      "",
      "[Removed Lines]",
      "726:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(\"https://api.openai.com\"):",
      "728:                 response = requests.get(f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/voices\")",
      "735:                 available_voices = {}",
      "",
      "[Added Lines]",
      "730:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(",
      "731:             \"https://api.openai.com\"",
      "732:         ):",
      "734:                 response = requests.get(",
      "735:                     f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/voices\"",
      "736:                 )",
      "743:                 available_voices = {",
      "744:                     \"alloy\": \"alloy\",",
      "745:                     \"echo\": \"echo\",",
      "746:                     \"fable\": \"fable\",",
      "747:                     \"onyx\": \"onyx\",",
      "748:                     \"nova\": \"nova\",",
      "749:                     \"shimmer\": \"shimmer\",",
      "750:                 }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "17641703071f91bda406d32bec0d4aa2827ccfb7",
      "candidate_info": {
        "commit_hash": "17641703071f91bda406d32bec0d4aa2827ccfb7",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/17641703071f91bda406d32bec0d4aa2827ccfb7",
        "files": [
          "backend/open_webui/config.py",
          "backend/open_webui/utils/auth.py"
        ],
        "message": "refac",
        "before_after_code_files": [
          "backend/open_webui/config.py||backend/open_webui/config.py",
          "backend/open_webui/utils/auth.py||backend/open_webui/utils/auth.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "backend/open_webui/config.py||backend/open_webui/config.py": [
          "File: backend/open_webui/config.py -> backend/open_webui/config.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "589: STATIC_DIR = Path(os.getenv(\"STATIC_DIR\", OPEN_WEBUI_DIR / \"static\")).resolve()",
          "605: frontend_favicon = FRONTEND_BUILD_DIR / \"static\" / \"favicon.png\"",
          "607: if frontend_favicon.exists():",
          "",
          "[Removed Lines]",
          "592: def override_static(path: str, content: str):",
          "593:     # Ensure path is safe",
          "594:     if \"/\" in path or \"..\" in path:",
          "595:         log.error(f\"Invalid path: {path}\")",
          "596:         return",
          "598:     file_path = os.path.join(STATIC_DIR, path)",
          "599:     os.makedirs(os.path.dirname(file_path), exist_ok=True)",
          "601:     with open(file_path, \"wb\") as f:",
          "602:         f.write(base64.b64decode(content))  # Convert Base64 back to raw binary",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "backend/open_webui/utils/auth.py||backend/open_webui/utils/auth.py": [
          "File: backend/open_webui/utils/auth.py -> backend/open_webui/utils/auth.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: import hmac",
          "6: import hashlib",
          "7: import requests",
          "10: from datetime import UTC, datetime, timedelta",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8: import os",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "13: from open_webui.models.users import Users",
          "15: from open_webui.constants import ERROR_MESSAGES",
          "19: from fastapi import Depends, HTTPException, Request, Response, status",
          "20: from fastapi.security import HTTPAuthorizationCredentials, HTTPBearer",
          "",
          "[Removed Lines]",
          "16: from open_webui.config import override_static",
          "17: from open_webui.env import WEBUI_SECRET_KEY, TRUSTED_SIGNATURE_KEY",
          "",
          "[Added Lines]",
          "17: from open_webui.env import WEBUI_SECRET_KEY, TRUSTED_SIGNATURE_KEY, STATIC_DIR",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "47:         return False",
          "50: def get_license_data(app, key):",
          "51:     if key:",
          "52:         try:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50: def override_static(path: str, content: str):",
          "51:     # Ensure path is safe",
          "52:     if \"/\" in path or \"..\" in path:",
          "53:         print(f\"Invalid path: {path}\")",
          "54:         return",
          "56:     file_path = os.path.join(STATIC_DIR, path)",
          "57:     os.makedirs(os.path.dirname(file_path), exist_ok=True)",
          "59:     with open(file_path, \"wb\") as f:",
          "60:         f.write(base64.b64decode(content))  # Convert Base64 back to raw binary",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d8eade736f3d0fbe7e3caa9e932f3917851cb270",
      "candidate_info": {
        "commit_hash": "d8eade736f3d0fbe7e3caa9e932f3917851cb270",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/d8eade736f3d0fbe7e3caa9e932f3917851cb270",
        "files": [
          "src/lib/components/layout/Navbar/Menu.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/layout/Navbar/Menu.svelte||src/lib/components/layout/Navbar/Menu.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/layout/Navbar/Menu.svelte||src/lib/components/layout/Navbar/Menu.svelte": [
          "File: src/lib/components/layout/Navbar/Menu.svelte -> src/lib/components/layout/Navbar/Menu.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:   if (containerElement) {",
          "68:    try {",
          "76:     const clonedElement = containerElement.cloneNode(true);",
          "77:     clonedElement.style.width = `${virtualWidth}px`; // Apply fixed width",
          "",
          "[Removed Lines]",
          "69:     const isDarkMode = $theme.includes('dark'); // Check theme mode",
          "72:     const virtualWidth = 1024; // Fixed width (adjust as needed)",
          "73:     const virtualHeight = 1400; // Fixed height (adjust as needed)",
          "",
          "[Added Lines]",
          "69:     const isDarkMode = document.documentElement.classList.contains('dark');",
          "71:     console.log('isDarkMode', isDarkMode);",
          "74:     const virtualWidth = 800; // Fixed width (adjust as needed)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "85:      useCORS: true,",
          "86:      scale: 2, // Keep at 1x to avoid unexpected enlargements",
          "87:      width: virtualWidth, // Set fixed virtual screen width",
          "90:     });",
          "92:     document.body.removeChild(clonedElement); // Clean up temp element",
          "",
          "[Removed Lines]",
          "88:      windowWidth: virtualWidth, // Ensure consistent rendering",
          "89:      windowHeight: virtualHeight",
          "",
          "[Added Lines]",
          "88:      windowWidth: virtualWidth // Ensure consistent rendering",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "21abe43f3b1cbbed15e079e8c71981e107966bbf",
      "candidate_info": {
        "commit_hash": "21abe43f3b1cbbed15e079e8c71981e107966bbf",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/21abe43f3b1cbbed15e079e8c71981e107966bbf",
        "files": [
          "backend/open_webui/utils/middleware.py"
        ],
        "message": "refac",
        "before_after_code_files": [
          "backend/open_webui/utils/middleware.py||backend/open_webui/utils/middleware.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "backend/open_webui/utils/middleware.py||backend/open_webui/utils/middleware.py": [
          "File: backend/open_webui/utils/middleware.py -> backend/open_webui/utils/middleware.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "770:                         )",
          "772:                         if res and isinstance(res, dict):",
          "782:                             if not title:",
          "783:                                 title = messages[0].get(\"content\", \"New Chat\")",
          "",
          "[Removed Lines]",
          "773:                             title = (",
          "774:                                 res.get(\"choices\", [])[0]",
          "775:                                 .get(\"message\", {})",
          "776:                                 .get(",
          "777:                                     \"content\",",
          "778:                                     message.get(\"content\", \"New Chat\"),",
          "779:                                 )",
          "780:                             ).strip()",
          "",
          "[Added Lines]",
          "773:                             if len(res.get(\"choices\", [])) == 1:",
          "774:                                 title = (",
          "775:                                     res.get(\"choices\", [])[0]",
          "776:                                     .get(\"message\", {})",
          "777:                                     .get(",
          "778:                                         \"content\",",
          "779:                                         message.get(\"content\", \"New Chat\"),",
          "780:                                     )",
          "781:                                 ).strip()",
          "782:                             else:",
          "783:                                 title = None",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "814:                     )",
          "816:                     if res and isinstance(res, dict):",
          "823:                         tags_string = tags_string[",
          "824:                             tags_string.find(\"{\") : tags_string.rfind(\"}\") + 1",
          "",
          "[Removed Lines]",
          "817:                         tags_string = (",
          "818:                             res.get(\"choices\", [])[0]",
          "819:                             .get(\"message\", {})",
          "820:                             .get(\"content\", \"\")",
          "821:                         )",
          "",
          "[Added Lines]",
          "820:                         if len(res.get(\"choices\", [])) == 1:",
          "821:                             tags_string = (",
          "822:                                 res.get(\"choices\", [])[0]",
          "823:                                 .get(\"message\", {})",
          "824:                                 .get(\"content\", \"\")",
          "825:                             )",
          "826:                         else:",
          "827:                             tags_string = \"\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "837:                                 }",
          "838:                             )",
          "839:                         except Exception as e:",
          "842:     event_emitter = None",
          "843:     if (",
          "",
          "[Removed Lines]",
          "840:                             print(f\"Error: {e}\")",
          "",
          "[Added Lines]",
          "846:                             pass",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "60e322962ec4e53872b7f110e9bf22b65f9a78f6",
      "candidate_info": {
        "commit_hash": "60e322962ec4e53872b7f110e9bf22b65f9a78f6",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/60e322962ec4e53872b7f110e9bf22b65f9a78f6",
        "files": [
          "src/lib/components/ChangelogModal.svelte",
          "src/lib/components/admin/Settings/General.svelte",
          "src/lib/components/admin/Settings/Pipelines.svelte",
          "src/lib/components/admin/Users/UserList/EditUserModal.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/ChangelogModal.svelte||src/lib/components/ChangelogModal.svelte",
          "src/lib/components/admin/Settings/General.svelte||src/lib/components/admin/Settings/General.svelte",
          "src/lib/components/admin/Settings/Pipelines.svelte||src/lib/components/admin/Settings/Pipelines.svelte",
          "src/lib/components/admin/Users/UserList/EditUserModal.svelte||src/lib/components/admin/Users/UserList/EditUserModal.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/ChangelogModal.svelte||src/lib/components/ChangelogModal.svelte": [
          "File: src/lib/components/ChangelogModal.svelte -> src/lib/components/ChangelogModal.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:         v{version} - {changelog[version].date}",
          "69:        </div>",
          "73:        {#each Object.keys(changelog[version]).filter((section) => section !== 'date') as section}",
          "74:         <div class=\"\">",
          "",
          "[Removed Lines]",
          "71:        <hr class=\" dark:border-gray-800 my-2\" />",
          "",
          "[Added Lines]",
          "71:        <hr class=\"border-gray-100 dark:border-gray-850 my-2\" />",
          "",
          "---------------"
        ],
        "src/lib/components/admin/Settings/General.svelte||src/lib/components/admin/Settings/General.svelte": [
          "File: src/lib/components/admin/Settings/General.svelte -> src/lib/components/admin/Settings/General.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "159:        <button",
          "160:         class=\" text-xs px-3 py-1.5 bg-gray-100 hover:bg-gray-200 dark:bg-gray-850 dark:hover:bg-gray-800 transition rounded-lg font-medium\"",
          "161:         on:click={() => {",
          "162:          checkForVersionUpdates();",
          "163:         }}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "161:         type=\"button\"",
          "",
          "---------------"
        ],
        "src/lib/components/admin/Settings/Pipelines.svelte||src/lib/components/admin/Settings/Pipelines.svelte": [
          "File: src/lib/components/admin/Settings/Pipelines.svelte -> src/lib/components/admin/Settings/Pipelines.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "418:      </div>",
          "419:     </div>",
          "423:     {#if pipelines !== null}",
          "424:      {#if pipelines.length > 0}",
          "",
          "[Removed Lines]",
          "421:     <hr class=\" dark:border-gray-800 my-3 w-full\" />",
          "",
          "[Added Lines]",
          "421:     <hr class=\"border-gray-100 dark:border-gray-850 my-3 w-full\" />",
          "",
          "---------------"
        ],
        "src/lib/components/admin/Users/UserList/EditUserModal.svelte||src/lib/components/admin/Users/UserList/EditUserModal.svelte": [
          "File: src/lib/components/admin/Users/UserList/EditUserModal.svelte -> src/lib/components/admin/Users/UserList/EditUserModal.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "94:       </div>",
          "95:      </div>",
          "99:      <div class=\" flex flex-col space-y-1.5\">",
          "100:       <div class=\"flex flex-col w-full\">",
          "",
          "[Removed Lines]",
          "97:      <hr class=\" dark:border-gray-800 my-3 w-full\" />",
          "",
          "[Added Lines]",
          "97:      <hr class=\"border-gray-100 dark:border-gray-850 my-3 w-full\" />",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "56dc7c5640d5c7cbb48a047a50df7ab8d8c2e762",
      "candidate_info": {
        "commit_hash": "56dc7c5640d5c7cbb48a047a50df7ab8d8c2e762",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/56dc7c5640d5c7cbb48a047a50df7ab8d8c2e762",
        "files": [
          "backend/open_webui/utils/middleware.py",
          "backend/open_webui/utils/tools.py"
        ],
        "message": "refac",
        "before_after_code_files": [
          "backend/open_webui/utils/middleware.py||backend/open_webui/utils/middleware.py",
          "backend/open_webui/utils/tools.py||backend/open_webui/utils/tools.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "backend/open_webui/utils/middleware.py||backend/open_webui/utils/middleware.py": [
          "File: backend/open_webui/utils/middleware.py -> backend/open_webui/utils/middleware.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1912:                         tool_result_files = []",
          "1913:                         if isinstance(tool_result, list):",
          "1914:                             for item in tool_result:",
          "1916:                                     tool_result_files.append(item)",
          "1917:                                     tool_result.remove(item)",
          "",
          "[Removed Lines]",
          "1915:                                 if item.startswith(\"data:\"):",
          "",
          "[Added Lines]",
          "1915:                                 # check if string",
          "1916:                                 if isinstance(item, str) and item.startswith(\"data:\"):",
          "",
          "---------------"
        ],
        "backend/open_webui/utils/tools.py||backend/open_webui/utils/tools.py": [
          "File: backend/open_webui/utils/tools.py -> backend/open_webui/utils/tools.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:                     elif auth_type == \"session\":",
          "70:                         token = request.state.token.credentials",
          "72:                     callable = get_async_tool_function_and_apply_extra_params(",
          "80:                     )",
          "82:                     tool_dict = {",
          "",
          "[Removed Lines]",
          "73:                         execute_tool_server,",
          "74:                         {",
          "75:                             \"token\": token,",
          "76:                             \"url\": tool_server_data[\"url\"],",
          "77:                             \"name\": function_name,",
          "78:                             \"server_data\": tool_server_data,",
          "79:                         },",
          "",
          "[Added Lines]",
          "72:                     async def tool_function(**args):",
          "73:                         return await execute_tool_server(",
          "74:                             token=token,",
          "75:                             url=tool_server_data[\"url\"],",
          "76:                             name=function_name,",
          "77:                             params=args,",
          "78:                             server_data=tool_server_data,",
          "79:                         )",
          "82:                         tool_function,",
          "83:                         {},",
          "",
          "---------------"
        ]
      }
    }
  ]
}