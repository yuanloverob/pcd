{
  "cve_id": "CVE-2024-57068",
  "cve_desc": "A prototype pollution in the lib.mutateMergeDeep function of @tanstack/form-core v0.35.0 allows attackers to cause a Denial of Service (DoS) via supplying a crafted payload.",
  "repo": "TanStack/form",
  "patch_hash": "455522c8f3272787668f3d1afd6adbc6dc1b9e8a",
  "patch_info": {
    "commit_hash": "455522c8f3272787668f3d1afd6adbc6dc1b9e8a",
    "repo": "TanStack/form",
    "commit_url": "https://github.com/TanStack/form/commit/455522c8f3272787668f3d1afd6adbc6dc1b9e8a",
    "files": [
      "docs/reference/functions/mergeform.md",
      "examples/react/remix/package.json",
      "packages/form-core/src/mergeForm.ts",
      "packages/form-core/tests/mergeForm.spec.ts",
      "packages/form-core/tests/mutateMergeDeep.spec.ts",
      "packages/react-form/package.json",
      "pnpm-lock.yaml"
    ],
    "message": "fix(form-core): prevent prototype pollution and update Remix dependency - CVE-2024-57068 (#1151)",
    "before_after_code_files": [
      "packages/form-core/src/mergeForm.ts||packages/form-core/src/mergeForm.ts",
      "packages/form-core/tests/mergeForm.spec.ts||packages/form-core/tests/mergeForm.spec.ts",
      "packages/form-core/tests/mutateMergeDeep.spec.ts||packages/form-core/tests/mutateMergeDeep.spec.ts"
    ]
  },
  "patch_diff": {
    "packages/form-core/src/mergeForm.ts||packages/form-core/src/mergeForm.ts": [
      "File: packages/form-core/src/mergeForm.ts -> packages/form-core/src/mergeForm.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "2: import type { Validator } from './types'",
      "3: import type { NoInfer } from './util-types'",
      "9:   const targetKeys = Object.keys(target)",
      "10:   const sourceKeys = Object.keys(source)",
      "11:   const keySet = new Set([...targetKeys, ...sourceKeys])",
      "12:   for (const key of keySet) {",
      "31:     }",
      "32:   }",
      "33:   return target",
      "34: }",
      "",
      "[Removed Lines]",
      "8: export function mutateMergeDeep(target: object, source: object): object {",
      "13:     const targetKey = key as never as keyof typeof target",
      "14:     const sourceKey = key as never as keyof typeof source",
      "16:     if (Array.isArray(target[targetKey]) && Array.isArray(source[sourceKey])) {",
      "18:       target[targetKey] = source[sourceKey] as [] as never",
      "19:     } else if (",
      "20:       typeof target[targetKey] === 'object' &&",
      "21:       typeof source[sourceKey] === 'object'",
      "22:     ) {",
      "23:       mutateMergeDeep(target[targetKey] as {}, source[sourceKey] as {})",
      "24:     } else {",
      "27:       if (!(sourceKey in source) && source[sourceKey] === undefined) {",
      "28:         continue",
      "29:       }",
      "30:       target[targetKey] = source[sourceKey] as never",
      "",
      "[Added Lines]",
      "5: function isValidKey(key: string | number | symbol): boolean {",
      "6:   const dangerousProps = ['__proto__', 'constructor', 'prototype']",
      "7:   return !dangerousProps.includes(String(key))",
      "8: }",
      "13: export function mutateMergeDeep(",
      "14:   target: object | null | undefined,",
      "15:   source: object | null | undefined,",
      "16: ): object {",
      "18:   if (target === null || target === undefined || typeof target !== 'object')",
      "19:     return {} as object",
      "20:   if (source === null || source === undefined || typeof source !== 'object')",
      "21:     return target",
      "28:     if (!isValidKey(key)) continue",
      "30:     const targetKey = key as keyof typeof target",
      "31:     const sourceKey = key as keyof typeof source",
      "33:     if (!Object.hasOwn(source, sourceKey)) continue",
      "35:     const sourceValue = source[sourceKey] as unknown",
      "36:     const targetValue = target[targetKey] as unknown",
      "39:     if (Array.isArray(targetValue) && Array.isArray(sourceValue)) {",
      "40:       Object.defineProperty(target, key, {",
      "41:         value: [...sourceValue],",
      "42:         enumerable: true,",
      "43:         writable: true,",
      "44:         configurable: true,",
      "45:       })",
      "46:       continue",
      "47:     }",
      "50:     const isTargetObj = typeof targetValue === 'object' && targetValue !== null",
      "51:     const isSourceObj = typeof sourceValue === 'object' && sourceValue !== null",
      "52:     const areObjects =",
      "53:       isTargetObj &&",
      "54:       isSourceObj &&",
      "55:       !Array.isArray(targetValue) &&",
      "56:       !Array.isArray(sourceValue)",
      "58:     if (areObjects) {",
      "59:       mutateMergeDeep(targetValue as object, sourceValue as object)",
      "60:       continue",
      "64:     Object.defineProperty(target, key, {",
      "65:       value: sourceValue,",
      "66:       enumerable: true,",
      "67:       writable: true,",
      "68:       configurable: true,",
      "69:     })",
      "",
      "---------------"
    ],
    "packages/form-core/tests/mergeForm.spec.ts||packages/form-core/tests/mergeForm.spec.ts": [
      "File: packages/form-core/tests/mergeForm.spec.ts -> packages/form-core/tests/mergeForm.spec.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: import { describe, expect, it } from 'vitest'",
      "2: import { mutateMergeDeep } from '../src/mergeForm'",
      "4: type TestObject = Record<string, any>",
      "6: describe('mutateMergeDeep', () => {",
      "7:   it('should prevent prototype pollution through __proto__', () => {",
      "8:     const target: TestObject = {}",
      "9:     const malicious = {",
      "10:       __proto__: {",
      "11:         polluted: true,",
      "12:       },",
      "13:     }",
      "15:     mutateMergeDeep(target, malicious)",
      "16:     expect(({} as TestObject).polluted).toBeUndefined()",
      "17:     expect((Object.prototype as TestObject).polluted).toBeUndefined()",
      "18:   })",
      "20:   it('should prevent prototype pollution through constructor', () => {",
      "21:     const target: TestObject = {}",
      "22:     const malicious = {",
      "23:       constructor: {",
      "24:         prototype: {",
      "25:           polluted: true,",
      "26:         },",
      "27:       },",
      "28:     }",
      "30:     mutateMergeDeep(target, malicious)",
      "31:     expect(({} as TestObject).polluted).toBeUndefined()",
      "32:   })",
      "34:   it('should handle null values correctly', () => {",
      "35:     const target = { details: null }",
      "36:     const source = { details: { age: 25 } }",
      "38:     mutateMergeDeep(target, source)",
      "39:     expect(target).toStrictEqual({ details: { age: 25 } })",
      "40:   })",
      "42:   it('should preserve object references when updating nested objects', () => {",
      "43:     const target: { user: { details: TestObject } } = { user: { details: {} } }",
      "44:     const source = { user: { details: { name: 'test' } } }",
      "46:     const originalDetails = target.user.details",
      "47:     mutateMergeDeep(target, source)",
      "48:     expect(target.user.details).toBe(originalDetails)",
      "49:     expect(target.user.details.name).toBe('test')",
      "50:   })",
      "52:   it('Should merge two objects by mutating', () => {",
      "53:     const a = { a: 1 }",
      "54:     const b = { b: 2 }",
      "55:     mutateMergeDeep(a, b)",
      "56:     expect(a).toStrictEqual({ a: 1, b: 2 })",
      "57:   })",
      "59:   it('Should merge two objects including overwriting with undefined', () => {",
      "60:     const a = { a: 1 }",
      "61:     const b = { a: undefined }",
      "62:     mutateMergeDeep(a, b)",
      "63:     expect(a).toStrictEqual({ a: undefined })",
      "64:   })",
      "66:   it('Should merge two object by overriding arrays', () => {",
      "67:     const target = { a: [1] }",
      "68:     const source = { a: [2] }",
      "69:     mutateMergeDeep(target, source)",
      "70:     expect(target).toStrictEqual({ a: [2] })",
      "71:   })",
      "73:   it('Should merge add array element when it does not exist in target', () => {",
      "74:     const target = { a: [] }",
      "75:     const source = { a: [2] }",
      "76:     mutateMergeDeep(target, source)",
      "77:     expect(target).toStrictEqual({ a: [2] })",
      "78:   })",
      "80:   it('Should override the target array if source is undefined', () => {",
      "81:     const target = { a: [2] }",
      "82:     const source = { a: undefined }",
      "83:     mutateMergeDeep(target, source)",
      "84:     expect(target).toStrictEqual({ a: undefined })",
      "85:   })",
      "87:   it('Should merge update array element when it does not exist in source', () => {",
      "88:     const target = { a: [2] }",
      "89:     const source = { a: [] }",
      "90:     mutateMergeDeep(target, source)",
      "91:     expect(target).toStrictEqual({ a: [] })",
      "92:   })",
      "94:   it('Should merge two deeply nested objects', () => {",
      "95:     const a = { a: { a: 1 } }",
      "96:     const b = { a: { b: 2 } }",
      "97:     mutateMergeDeep(a, b)",
      "98:     expect(a).toStrictEqual({ a: { a: 1, b: 2 } })",
      "99:   })",
      "100: })",
      "",
      "---------------"
    ],
    "packages/form-core/tests/mutateMergeDeep.spec.ts||packages/form-core/tests/mutateMergeDeep.spec.ts": [
      "File: packages/form-core/tests/mutateMergeDeep.spec.ts -> packages/form-core/tests/mutateMergeDeep.spec.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f53062fb0149f7737fc5b524883f1df767feab57",
      "candidate_info": {
        "commit_hash": "f53062fb0149f7737fc5b524883f1df767feab57",
        "repo": "TanStack/form",
        "commit_url": "https://github.com/TanStack/form/commit/f53062fb0149f7737fc5b524883f1df767feab57",
        "files": [
          "eslint.config.js",
          "package.json",
          "packages/form-core/src/FieldApi.ts",
          "packages/form-core/src/FormApi.ts",
          "packages/form-core/src/mergeForm.ts",
          "packages/react-form/src/useForm.tsx",
          "packages/react-form/src/useIsomorphicLayoutEffect.ts",
          "packages/react-form/tests/useField.test.tsx",
          "pnpm-lock.yaml"
        ],
        "message": "chore: Update ESLint config (#790)\n\n* chore: Update eslint config\n\n* Bump version",
        "before_after_code_files": [
          "eslint.config.js||eslint.config.js",
          "packages/form-core/src/FieldApi.ts||packages/form-core/src/FieldApi.ts",
          "packages/form-core/src/FormApi.ts||packages/form-core/src/FormApi.ts",
          "packages/form-core/src/mergeForm.ts||packages/form-core/src/mergeForm.ts",
          "packages/react-form/src/useForm.tsx||packages/react-form/src/useForm.tsx",
          "packages/react-form/src/useIsomorphicLayoutEffect.ts||packages/react-form/src/useIsomorphicLayoutEffect.ts",
          "packages/react-form/tests/useField.test.tsx||packages/react-form/tests/useField.test.tsx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "packages/form-core/src/mergeForm.ts||packages/form-core/src/mergeForm.ts"
          ],
          "candidate": [
            "packages/form-core/src/mergeForm.ts||packages/form-core/src/mergeForm.ts"
          ]
        }
      },
      "candidate_diff": {
        "eslint.config.js||eslint.config.js": [
          "File: eslint.config.js -> eslint.config.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: export default [",
          "8:   {",
          "10:     rules: {",
          "19:     },",
          "20:   },",
          "21: ]",
          "",
          "[Removed Lines]",
          "4: import { rootConfig } from '@tanstack/config/eslint'",
          "7:   ...rootConfig,",
          "9:     name: 'tanstack/temp',",
          "11:       '@typescript-eslint/array-type': 'off',",
          "12:       '@typescript-eslint/method-signature-style': 'off',",
          "13:       '@typescript-eslint/naming-convention': 'off',",
          "14:       '@typescript-eslint/no-empty-object-type': 'off',",
          "15:       '@typescript-eslint/no-unnecessary-type-assertion': 'off',",
          "16:       '@typescript-eslint/no-unsafe-function-type': 'off',",
          "17:       '@typescript-eslint/no-unused-expressions': 'off',",
          "18:       '@typescript-eslint/prefer-for-of': 'off',",
          "",
          "[Added Lines]",
          "4: import { tanstackConfig } from '@tanstack/config/eslint'",
          "7:   ...tanstackConfig,",
          "9:     name: 'tanstack/local',",
          "11:       'ts/array-type': 'off',",
          "12:       'ts/ban-types': 'off',",
          "13:       'ts/method-signature-style': 'off',",
          "14:       'ts/naming-convention': 'off',",
          "15:       'ts/no-unnecessary-type-assertion': 'off',",
          "16:       'ts/prefer-for-of': 'off',",
          "17:       'ts/require-await': 'off',",
          "18:       'no-async-promise-executor': 'off',",
          "19:       'no-empty': 'off',",
          "",
          "---------------"
        ],
        "packages/form-core/src/FieldApi.ts||packages/form-core/src/FieldApi.ts": [
          "File: packages/form-core/src/FieldApi.ts -> packages/form-core/src/FieldApi.ts"
        ],
        "packages/form-core/src/FormApi.ts||packages/form-core/src/FormApi.ts": [
          "File: packages/form-core/src/FormApi.ts -> packages/form-core/src/FormApi.ts"
        ],
        "packages/form-core/src/mergeForm.ts||packages/form-core/src/mergeForm.ts": [
          "File: packages/form-core/src/mergeForm.ts -> packages/form-core/src/mergeForm.ts"
        ],
        "packages/react-form/src/useForm.tsx||packages/react-form/src/useForm.tsx": [
          "File: packages/react-form/src/useForm.tsx -> packages/react-form/src/useForm.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:     }",
          "68:     api.useField = (props) => useField({ ...props, form: api })",
          "74:       return useStore(api.store as any, selector as any) as any",
          "75:     }",
          "80:       return functionalUpdate(",
          "81:         props.children,",
          "",
          "[Removed Lines]",
          "69:     api.useStore = (",
          "71:       selector,",
          "72:     ) => {",
          "76:     api.Subscribe = (",
          "78:       props,",
          "79:     ) => {",
          "",
          "[Added Lines]",
          "69:     api.useStore = (selector) => {",
          "73:     api.Subscribe = (props) => {",
          "",
          "---------------"
        ],
        "packages/react-form/src/useIsomorphicLayoutEffect.ts||packages/react-form/src/useIsomorphicLayoutEffect.ts": [
          "File: packages/react-form/src/useIsomorphicLayoutEffect.ts -> packages/react-form/src/useIsomorphicLayoutEffect.ts"
        ],
        "packages/react-form/tests/useField.test.tsx||packages/react-form/tests/useField.test.tsx": [
          "File: packages/react-form/tests/useField.test.tsx -> packages/react-form/tests/useField.test.tsx"
        ]
      }
    },
    {
      "candidate_hash": "2ecdc61af25c039690fcca5312da799e3cf789a0",
      "candidate_info": {
        "commit_hash": "2ecdc61af25c039690fcca5312da799e3cf789a0",
        "repo": "TanStack/form",
        "commit_url": "https://github.com/TanStack/form/commit/2ecdc61af25c039690fcca5312da799e3cf789a0",
        "files": [
          "docs/config.json",
          "docs/framework/angular/reference/classes/tanstackfield.md",
          "docs/framework/angular/reference/functions/injectform.md",
          "docs/framework/angular/reference/functions/injectstore.md",
          "docs/framework/angular/reference/index.md",
          "docs/framework/lit/reference/classes/tanstackformcontroller.md",
          "docs/framework/lit/reference/index.md",
          "docs/framework/react/reference/functions/field.md",
          "docs/framework/react/reference/functions/usefield.md",
          "docs/framework/react/reference/functions/useform.md",
          "docs/framework/react/reference/functions/usetransform.md",
          "docs/framework/react/reference/index.md",
          "docs/framework/react/reference/type-aliases/fieldcomponent.md",
          "docs/framework/react/reference/type-aliases/usefield.md",
          "docs/framework/solid/reference/functions/createfield.md",
          "docs/framework/solid/reference/functions/createform.md",
          "docs/framework/solid/reference/functions/field.md",
          "docs/framework/solid/reference/index.md",
          "docs/framework/solid/reference/type-aliases/createfield.md",
          "docs/framework/solid/reference/type-aliases/fieldcomponent.md",
          "docs/framework/vue/reference/functions/field.md",
          "docs/framework/vue/reference/functions/usefield.md",
          "docs/framework/vue/reference/functions/useform.md",
          "docs/framework/vue/reference/index.md",
          "docs/framework/vue/reference/type-aliases/fieldcomponent.md",
          "docs/framework/vue/reference/type-aliases/usefield.md",
          "docs/reference/classes/fieldapi.md",
          "docs/reference/classes/formapi.md",
          "docs/reference/functions/formoptions.md",
          "docs/reference/functions/mergeform.md",
          "docs/reference/index.md",
          "docs/reference/interfaces/fieldapioptions.md",
          "docs/reference/interfaces/fieldoptions.md",
          "docs/reference/interfaces/fieldvalidators.md",
          "docs/reference/interfaces/formoptions.md",
          "docs/reference/interfaces/formvalidators.md",
          "docs/reference/type-aliases/deepkeys.md",
          "docs/reference/type-aliases/deepvalue.md",
          "docs/reference/type-aliases/fieldinfo.md",
          "docs/reference/type-aliases/fieldmeta.md",
          "docs/reference/type-aliases/fieldstate.md",
          "docs/reference/type-aliases/formstate.md",
          "docs/reference/type-aliases/updater.md",
          "docs/reference/type-aliases/updaterfn.md",
          "docs/reference/type-aliases/validationerror.md",
          "docs/reference/type-aliases/validationmeta.md",
          "eslint.config.js",
          "package.json",
          "packages/form-core/src/FieldApi.ts",
          "packages/form-core/src/FormApi.ts",
          "packages/form-core/src/mergeForm.ts",
          "packages/react-form/tests/useField.test.tsx",
          "pnpm-lock.yaml"
        ],
        "message": "chore: update @tanstack/config (#877)",
        "before_after_code_files": [
          "eslint.config.js||eslint.config.js",
          "packages/form-core/src/FieldApi.ts||packages/form-core/src/FieldApi.ts",
          "packages/form-core/src/FormApi.ts||packages/form-core/src/FormApi.ts",
          "packages/form-core/src/mergeForm.ts||packages/form-core/src/mergeForm.ts",
          "packages/react-form/tests/useField.test.tsx||packages/react-form/tests/useField.test.tsx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "packages/form-core/src/mergeForm.ts||packages/form-core/src/mergeForm.ts"
          ],
          "candidate": [
            "packages/form-core/src/mergeForm.ts||packages/form-core/src/mergeForm.ts"
          ]
        }
      },
      "candidate_diff": {
        "eslint.config.js||eslint.config.js": [
          "File: eslint.config.js -> eslint.config.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:   {",
          "9:     name: 'tanstack/temp',",
          "10:     rules: {",
          "16:       'no-async-promise-executor': 'off',",
          "18:       'no-empty': 'off',",
          "19:     },",
          "20:   },",
          "",
          "[Removed Lines]",
          "11:       'ts/array-type': 'off',",
          "12:       'ts/ban-types': 'off',",
          "13:       'ts/method-signature-style': 'off',",
          "14:       'ts/naming-convention': 'off',",
          "15:       'ts/no-unnecessary-type-assertion': 'off',",
          "17:       'ts/require-await': 'off',",
          "",
          "[Added Lines]",
          "11:       '@typescript-eslint/array-type': 'off',",
          "12:       '@typescript-eslint/ban-types': 'off',",
          "13:       '@typescript-eslint/method-signature-style': 'off',",
          "14:       '@typescript-eslint/naming-convention': 'off',",
          "15:       '@typescript-eslint/no-unnecessary-type-assertion': 'off',",
          "16:       '@typescript-eslint/require-await': 'off',",
          "",
          "---------------"
        ],
        "packages/form-core/src/FieldApi.ts||packages/form-core/src/FieldApi.ts": [
          "File: packages/form-core/src/FieldApi.ts -> packages/form-core/src/FieldApi.ts"
        ],
        "packages/form-core/src/FormApi.ts||packages/form-core/src/FormApi.ts": [
          "File: packages/form-core/src/FormApi.ts -> packages/form-core/src/FormApi.ts"
        ],
        "packages/form-core/src/mergeForm.ts||packages/form-core/src/mergeForm.ts": [
          "File: packages/form-core/src/mergeForm.ts -> packages/form-core/src/mergeForm.ts"
        ],
        "packages/react-form/tests/useField.test.tsx||packages/react-form/tests/useField.test.tsx": [
          "File: packages/react-form/tests/useField.test.tsx -> packages/react-form/tests/useField.test.tsx"
        ]
      }
    },
    {
      "candidate_hash": "5273091754093181a0accad83853f18e06cc7030",
      "candidate_info": {
        "commit_hash": "5273091754093181a0accad83853f18e06cc7030",
        "repo": "TanStack/form",
        "commit_url": "https://github.com/TanStack/form/commit/5273091754093181a0accad83853f18e06cc7030",
        "files": [
          "docs/reference/functions/mergeform.md",
          "packages/form-core/src/mergeForm.ts",
          "packages/form-core/tests/mutateMergeDeep.spec.ts"
        ],
        "message": "fix: dont merge arrays in `mergeForm` (#995)\n\n* fix: dont merge arrays in `mergeForm`\n\n- this causes form submissions to be duplicated when having\n  an array field in your form\n\n* ci: apply automated fixes and generate docs\n\n* test: add more tests\n\n* ci: apply automated fixes and generate docs\n\n---------\n\nCo-authored-by: autofix-ci[bot] <114827586+autofix-ci[bot]@users.noreply.github.com>",
        "before_after_code_files": [
          "packages/form-core/src/mergeForm.ts||packages/form-core/src/mergeForm.ts",
          "packages/form-core/tests/mutateMergeDeep.spec.ts||packages/form-core/tests/mutateMergeDeep.spec.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "packages/form-core/src/mergeForm.ts||packages/form-core/src/mergeForm.ts",
            "packages/form-core/tests/mutateMergeDeep.spec.ts||packages/form-core/tests/mutateMergeDeep.spec.ts"
          ],
          "candidate": [
            "packages/form-core/src/mergeForm.ts||packages/form-core/src/mergeForm.ts",
            "packages/form-core/tests/mutateMergeDeep.spec.ts||packages/form-core/tests/mutateMergeDeep.spec.ts"
          ]
        }
      },
      "candidate_diff": {
        "packages/form-core/src/mergeForm.ts||packages/form-core/src/mergeForm.ts": [
          "File: packages/form-core/src/mergeForm.ts -> packages/form-core/src/mergeForm.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "12:   for (const key of keySet) {",
          "13:     const targetKey = key as never as keyof typeof target",
          "14:     const sourceKey = key as never as keyof typeof source",
          "15:     if (Array.isArray(target[targetKey]) && Array.isArray(source[sourceKey])) {",
          "20:     } else if (",
          "21:       typeof target[targetKey] === 'object' &&",
          "22:       typeof source[sourceKey] === 'object'",
          "",
          "[Removed Lines]",
          "16:       target[targetKey] = [",
          "17:         ...(target[targetKey] as []),",
          "18:         ...(source[sourceKey] as []),",
          "19:       ] as never",
          "",
          "[Added Lines]",
          "18:       target[targetKey] = source[sourceKey] as [] as never",
          "",
          "---------------"
        ],
        "packages/form-core/tests/mutateMergeDeep.spec.ts||packages/form-core/tests/mutateMergeDeep.spec.ts": [
          "File: packages/form-core/tests/mutateMergeDeep.spec.ts -> packages/form-core/tests/mutateMergeDeep.spec.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "16:     expect(a).toStrictEqual({ a: undefined })",
          "17:   })",
          "24:   })",
          "26:   test('Should merge two deeply nested objects', () => {",
          "",
          "[Removed Lines]",
          "19:   test('Should merge two object by merging arrays', () => {",
          "20:     const a = { a: [1] }",
          "21:     const b = { a: [2] }",
          "22:     mutateMergeDeep(a, b)",
          "23:     expect(a).toStrictEqual({ a: [1, 2] })",
          "",
          "[Added Lines]",
          "19:   test('Should merge two object by overriding arrays', () => {",
          "20:     const target = { a: [1] }",
          "21:     const source = { a: [2] }",
          "22:     mutateMergeDeep(target, source)",
          "23:     expect(target).toStrictEqual({ a: [2] })",
          "24:   })",
          "26:   test('Should merge add array element when it does not exist in target', () => {",
          "27:     const target = { a: [] }",
          "28:     const source = { a: [2] }",
          "29:     mutateMergeDeep(target, source)",
          "30:     expect(target).toStrictEqual({ a: [2] })",
          "31:   })",
          "33:   test('Should override the target array if source is undefined', () => {",
          "34:     const target = { a: [2] }",
          "35:     const source = { a: undefined }",
          "36:     mutateMergeDeep(target, source)",
          "37:     expect(target).toStrictEqual({ a: undefined })",
          "38:   })",
          "40:   test('Should merge update array element when it does not exist in source', () => {",
          "41:     const target = { a: [2] }",
          "42:     const source = { a: [] }",
          "43:     mutateMergeDeep(target, source)",
          "44:     expect(target).toStrictEqual({ a: [] })",
          "",
          "---------------"
        ]
      }
    }
  ]
}