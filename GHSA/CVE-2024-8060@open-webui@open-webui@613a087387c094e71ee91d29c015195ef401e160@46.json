{
  "cve_id": "CVE-2024-8060",
  "cve_desc": "OpenWebUI version 0.3.0 contains a vulnerability in the audio API endpoint `/audio/api/v1/transcriptions` that allows for arbitrary file upload. The application performs insufficient validation on the `file.content_type` and allows user-controlled filenames, leading to a path traversal vulnerability. This can be exploited by an authenticated user to overwrite critical files within the Docker container, potentially leading to remote code execution as the root user.",
  "repo": "open-webui/open-webui",
  "patch_hash": "613a087387c094e71ee91d29c015195ef401e160",
  "patch_info": {
    "commit_hash": "613a087387c094e71ee91d29c015195ef401e160",
    "repo": "open-webui/open-webui",
    "commit_url": "https://github.com/open-webui/open-webui/commit/613a087387c094e71ee91d29c015195ef401e160",
    "files": [
      "backend/open_webui/routers/audio.py"
    ],
    "message": "refac",
    "before_after_code_files": [
      "backend/open_webui/routers/audio.py||backend/open_webui/routers/audio.py"
    ]
  },
  "patch_diff": {
    "backend/open_webui/routers/audio.py||backend/open_webui/routers/audio.py": [
      "File: backend/open_webui/routers/audio.py -> backend/open_webui/routers/audio.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "681:     available_models = []",
      "682:     if request.app.state.config.TTS_ENGINE == \"openai\":",
      "683:         # Use custom endpoint if not using the official OpenAI API URL",
      "685:             try:",
      "687:                 response.raise_for_status()",
      "688:                 data = response.json()",
      "689:                 available_models = data.get(\"models\", [])",
      "690:             except Exception as e:",
      "691:                 log.error(f\"Error fetching models from custom endpoint: {str(e)}\")",
      "693:         else:",
      "694:             available_models = [{\"id\": \"tts-1\"}, {\"id\": \"tts-1-hd\"}]",
      "695:     elif request.app.state.config.TTS_ENGINE == \"elevenlabs\":",
      "",
      "[Removed Lines]",
      "684:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(\"https://api.openai.com\"):",
      "686:                 response = requests.get(f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/models\")",
      "692:                 available_models = []",
      "",
      "[Added Lines]",
      "684:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(",
      "685:             \"https://api.openai.com\"",
      "686:         ):",
      "688:                 response = requests.get(",
      "689:                     f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/models\"",
      "690:                 )",
      "696:                 available_models = [{\"id\": \"tts-1\"}, {\"id\": \"tts-1-hd\"}]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "723:     available_voices = {}",
      "724:     if request.app.state.config.TTS_ENGINE == \"openai\":",
      "725:         # Use custom endpoint if not using the official OpenAI API URL",
      "727:             try:",
      "729:                 response.raise_for_status()",
      "730:                 data = response.json()",
      "731:                 voices_list = data.get(\"voices\", [])",
      "732:                 available_voices = {voice[\"id\"]: voice[\"name\"] for voice in voices_list}",
      "733:             except Exception as e:",
      "734:                 log.error(f\"Error fetching voices from custom endpoint: {str(e)}\")",
      "736:         else:",
      "737:             available_voices = {",
      "738:                 \"alloy\": \"alloy\",",
      "",
      "[Removed Lines]",
      "726:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(\"https://api.openai.com\"):",
      "728:                 response = requests.get(f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/voices\")",
      "735:                 available_voices = {}",
      "",
      "[Added Lines]",
      "730:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(",
      "731:             \"https://api.openai.com\"",
      "732:         ):",
      "734:                 response = requests.get(",
      "735:                     f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/voices\"",
      "736:                 )",
      "743:                 available_voices = {",
      "744:                     \"alloy\": \"alloy\",",
      "745:                     \"echo\": \"echo\",",
      "746:                     \"fable\": \"fable\",",
      "747:                     \"onyx\": \"onyx\",",
      "748:                     \"nova\": \"nova\",",
      "749:                     \"shimmer\": \"shimmer\",",
      "750:                 }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c58f0844a3c7d24ce58a69d6beeaea1c5fbedd09",
      "candidate_info": {
        "commit_hash": "c58f0844a3c7d24ce58a69d6beeaea1c5fbedd09",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/c58f0844a3c7d24ce58a69d6beeaea1c5fbedd09",
        "files": [
          "src/lib/components/chat/Navbar.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/chat/Navbar.svelte||src/lib/components/chat/Navbar.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/chat/Navbar.svelte||src/lib/components/chat/Navbar.svelte": [
          "File: src/lib/components/chat/Navbar.svelte -> src/lib/components/chat/Navbar.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:        </div>",
          "115:       </button>",
          "116:      </Menu>",
          "131:     {/if}",
          "133:     <Tooltip content={$i18n.t('Controls')}>",
          "",
          "[Removed Lines]",
          "117:     {:else if $mobile && ($user.role === 'admin' || $user?.permissions?.chat?.controls)}",
          "118:      <Tooltip content={$i18n.t('Controls')}>",
          "119:       <button",
          "120:        class=\" flex cursor-pointer px-2 py-2 rounded-xl hover:bg-gray-50 dark:hover:bg-gray-850 transition\"",
          "121:        on:click={async () => {",
          "122:         await showControls.set(!$showControls);",
          "123:        }}",
          "124:        aria-label=\"Controls\"",
          "125:       >",
          "126:        <div class=\" m-auto self-center\">",
          "127:         <AdjustmentsHorizontal className=\" size-5\" strokeWidth=\"0.5\" />",
          "128:        </div>",
          "129:       </button>",
          "130:      </Tooltip>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "77b25ae36a4dcd6458c4aa6072d7060c93d13e0f",
      "candidate_info": {
        "commit_hash": "77b25ae36a4dcd6458c4aa6072d7060c93d13e0f",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/77b25ae36a4dcd6458c4aa6072d7060c93d13e0f",
        "files": [
          "backend/open_webui/config.py"
        ],
        "message": "refac",
        "before_after_code_files": [
          "backend/open_webui/config.py||backend/open_webui/config.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "backend/open_webui/config.py||backend/open_webui/config.py": [
          "File: backend/open_webui/config.py -> backend/open_webui/config.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "2209: PLAYWRIGHT_WS_URL = PersistentConfig(",
          "2210:     \"PLAYWRIGHT_WS_URL\",",
          "2212:     os.environ.get(\"PLAYWRIGHT_WS_URL\", \"\"),",
          "2213: )",
          "",
          "[Removed Lines]",
          "2211:     \"rag.web.loader.PLAYWRIGHT_WS_URL\",",
          "",
          "[Added Lines]",
          "2211:     \"rag.web.loader.playwright_ws_url\",",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "af2c5f3a188976d09ae1d9f154ca23743d637441",
      "candidate_info": {
        "commit_hash": "af2c5f3a188976d09ae1d9f154ca23743d637441",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/af2c5f3a188976d09ae1d9f154ca23743d637441",
        "files": [
          "backend/open_webui/utils/middleware.py",
          "src/lib/components/common/Collapsible.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "backend/open_webui/utils/middleware.py||backend/open_webui/utils/middleware.py",
          "src/lib/components/common/Collapsible.svelte||src/lib/components/common/Collapsible.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "backend/open_webui/utils/middleware.py||backend/open_webui/utils/middleware.py": [
          "File: backend/open_webui/utils/middleware.py -> backend/open_webui/utils/middleware.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1206:                                         break",
          "1208:                                 if tool_result:",
          "1210:                                 else:",
          "1213:                             if not raw:",
          "1215:                         else:",
          "1216:                             tool_calls_display_content = \"\"",
          "1218:                             for tool_call in tool_calls:",
          "1219:                                 tool_name = tool_call.get(\"function\", {}).get(",
          "1220:                                     \"name\", \"\"",
          "1221:                                 )",
          "",
          "[Removed Lines]",
          "1209:                                     tool_calls_display_content = f'{tool_calls_display_content}\\n<details type=\"tool_calls\" done=\"true\" name=\"{tool_name}\" arguments=\"{html.escape(json.dumps(tool_arguments))}\" result=\"{html.escape(json.dumps(tool_result))}\">\\n<summary>Tool Executed</summary>\\n</details>'",
          "1211:                                     tool_calls_display_content = f'{tool_calls_display_content}\\n<details type=\"tool_calls\" done=\"false\" name=\"{tool_name}\" arguments=\"{html.escape(json.dumps(tool_arguments))}\">\\n<summary>Executing...</summary>\\n</details>'",
          "1214:                                 content = f\"{content}\\n{tool_calls_display_content}\\n\"",
          "",
          "[Added Lines]",
          "1209:                                     tool_calls_display_content = f'{tool_calls_display_content}\\n<details type=\"tool_calls\" done=\"true\" id=\"{tool_call_id}\" name=\"{tool_name}\" arguments=\"{html.escape(json.dumps(tool_arguments))}\" result=\"{html.escape(json.dumps(tool_result))}\">\\n<summary>Tool Executed</summary>\\n</details>'",
          "1211:                                     tool_calls_display_content = f'{tool_calls_display_content}\\n<details type=\"tool_calls\" done=\"false\" id=\"{tool_call_id}\" name=\"{tool_name}\" arguments=\"{html.escape(json.dumps(tool_arguments))}\">\\n<summary>Executing...</summary>\\n</details>'",
          "1214:                                 content = f\"{content}\\n{tool_calls_display_content}\\n\\n\"",
          "1219:                                 tool_call_id = tool_call.get(\"id\", \"\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1223:                                     \"arguments\", \"\"",
          "1224:                                 )",
          "1228:                             if not raw:",
          "1231:                     elif block[\"type\"] == \"reasoning\":",
          "1232:                         reasoning_display_content = \"\\n\".join(",
          "",
          "[Removed Lines]",
          "1226:                                 tool_calls_display_content = f'{tool_calls_display_content}\\n<details type=\"tool_calls\" done=\"false\" name=\"{tool_name}\" arguments=\"{html.escape(json.dumps(tool_arguments))}\">\\n<summary>Executing...</summary>\\n</details>'",
          "1229:                                 content = f\"{content}\\n{tool_calls_display_content}\\n\"",
          "",
          "[Added Lines]",
          "1227:                                 tool_calls_display_content = f'{tool_calls_display_content}\\n<details type=\"tool_calls\" done=\"false\" id=\"{tool_call_id}\" name=\"{tool_name}\" arguments=\"{html.escape(json.dumps(tool_arguments))}\">\\n<summary>Executing...</summary>\\n</details>'",
          "1230:                                 content = f\"{content}\\n{tool_calls_display_content}\\n\\n\"",
          "",
          "---------------"
        ],
        "src/lib/components/common/Collapsible.svelte||src/lib/components/common/Collapsible.svelte": [
          "File: src/lib/components/common/Collapsible.svelte -> src/lib/components/common/Collapsible.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "102:      {:else if attributes?.type === 'tool_calls'}",
          "103:       {#if attributes?.done === 'true'}",
          "104:        <Markdown",
          "105:         content={$i18n.t('View Result from `{{NAME}}`', {",
          "106:          NAME: attributes.name",
          "107:         })}",
          "108:        />",
          "109:       {:else}",
          "110:        <Markdown",
          "111:         content={$i18n.t('Executing `{{NAME}}`...', {",
          "112:          NAME: attributes.name",
          "113:         })}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "105:         id={`tool-calls-${attributes?.id}`}",
          "112:         id={`tool-calls-${attributes?.id}`}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "163:     {#if attributes?.type === 'tool_calls'}",
          "164:      {#if attributes?.done === 'true'}",
          "165:       <Markdown",
          "166:        content={`> \\`\\`\\`json",
          "167: > ${JSON.parse(decode(attributes?.arguments))}",
          "168: > ${JSON.parse(decode(attributes?.result))}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "168:        id={`tool-calls-${attributes?.id}-result`}",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "170:       />",
          "171:      {:else}",
          "172:       <Markdown",
          "173:        content={`> \\`\\`\\`json",
          "174: > ${JSON.parse(decode(attributes?.arguments))}",
          "175: > \\`\\`\\``}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "176:        id={`tool-calls-${attributes?.id}-result`}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "737f41dd2e631132228f8c8c8c80ac9c98ddfe34",
      "candidate_info": {
        "commit_hash": "737f41dd2e631132228f8c8c8c80ac9c98ddfe34",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/737f41dd2e631132228f8c8c8c80ac9c98ddfe34",
        "files": [
          "src/lib/components/admin/Settings/Documents.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/admin/Settings/Documents.svelte||src/lib/components/admin/Settings/Documents.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/admin/Settings/Documents.svelte||src/lib/components/admin/Settings/Documents.svelte": [
          "File: src/lib/components/admin/Settings/Documents.svelte -> src/lib/components/admin/Settings/Documents.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "643:        </div>",
          "644:       </div>",
          "645:      {/if}",
          "647:      <div class=\"  mb-2.5 flex w-full justify-between\">",
          "648:       <div class=\" self-center text-xs font-medium\">{$i18n.t('Full Context Mode')}</div>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "646:     </div>",
          "648:     <div class=\"mb-3\">",
          "649:      <div class=\" mb-2.5 text-base font-medium\">{$i18n.t('Retrieval')}</div>",
          "651:      <hr class=\" border-gray-100 dark:border-gray-850 my-2\" />",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "746:         </div>",
          "747:        </div>",
          "748:       {/if}",
          "758:       <div class=\"  mb-2.5 flex w-full justify-between\">",
          "759:        <div class=\" self-center text-xs font-medium\">{$i18n.t('Top K')}</div>",
          "",
          "[Removed Lines]",
          "749:      {/if}",
          "750:     </div>",
          "752:     {#if !RAG_FULL_CONTEXT}",
          "753:      <div class=\"mb-3\">",
          "754:       <div class=\" mb-2.5 text-base font-medium\">{$i18n.t('Retrieval')}</div>",
          "756:       <hr class=\" border-gray-100 dark:border-gray-850 my-2\" />",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "811:         </div>",
          "812:        </div>",
          "813:       {/if}",
          "820:           'Leave empty to use the default prompt, or enter a custom prompt'",
          "821:          )}",
          "833:       </div>",
          "834:      </div>",
          "836:    {/if}",
          "838:    <div class=\"mb-3\">",
          "",
          "[Removed Lines]",
          "815:       <div class=\"  mb-2.5 flex flex-col w-full justify-between\">",
          "816:        <div class=\" mb-1 text-xs font-medium\">{$i18n.t('RAG Template')}</div>",
          "817:        <div class=\"flex w-full items-center relative\">",
          "818:         <Tooltip",
          "819:          content={$i18n.t(",
          "822:          placement=\"top-start\"",
          "823:          className=\"w-full\"",
          "824:         >",
          "825:          <Textarea",
          "826:           bind:value={querySettings.template}",
          "827:           placeholder={$i18n.t(",
          "828:            'Leave empty to use the default prompt, or enter a custom prompt'",
          "829:           )}",
          "830:          />",
          "831:         </Tooltip>",
          "832:        </div>",
          "835:     {/if}",
          "",
          "[Added Lines]",
          "812:      {/if}",
          "814:      <div class=\"  mb-2.5 flex flex-col w-full justify-between\">",
          "815:       <div class=\" mb-1 text-xs font-medium\">{$i18n.t('RAG Template')}</div>",
          "816:       <div class=\"flex w-full items-center relative\">",
          "817:        <Tooltip",
          "818:         content={$i18n.t('Leave empty to use the default prompt, or enter a custom prompt')}",
          "819:         placement=\"top-start\"",
          "820:         className=\"w-full\"",
          "821:        >",
          "822:         <Textarea",
          "823:          bind:value={querySettings.template}",
          "824:          placeholder={$i18n.t(",
          "827:         />",
          "828:        </Tooltip>",
          "831:     </div>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "38291e9af2e9327df3a5cf4ac03ae96e32a89763",
      "candidate_info": {
        "commit_hash": "38291e9af2e9327df3a5cf4ac03ae96e32a89763",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/38291e9af2e9327df3a5cf4ac03ae96e32a89763",
        "files": [
          "backend/open_webui/routers/ollama.py"
        ],
        "message": "refac",
        "before_after_code_files": [
          "backend/open_webui/routers/ollama.py||backend/open_webui/routers/ollama.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "backend/open_webui/routers/ollama.py||backend/open_webui/routers/ollama.py": [
          "File: backend/open_webui/routers/ollama.py -> backend/open_webui/routers/ollama.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "944: class GenerateChatCompletionForm(BaseModel):",
          "945:     model: str",
          "946:     messages: list[ChatMessage]",
          "948:     options: Optional[dict] = None",
          "949:     template: Optional[str] = None",
          "950:     stream: Optional[bool] = True",
          "",
          "[Removed Lines]",
          "947:     format: Optional[dict] = None",
          "",
          "[Added Lines]",
          "947:     format: Optional[Union[dict, str]] = None",
          "",
          "---------------"
        ]
      }
    }
  ]
}