{
  "cve_id": "CVE-2024-8060",
  "cve_desc": "OpenWebUI version 0.3.0 contains a vulnerability in the audio API endpoint `/audio/api/v1/transcriptions` that allows for arbitrary file upload. The application performs insufficient validation on the `file.content_type` and allows user-controlled filenames, leading to a path traversal vulnerability. This can be exploited by an authenticated user to overwrite critical files within the Docker container, potentially leading to remote code execution as the root user.",
  "repo": "open-webui/open-webui",
  "patch_hash": "613a087387c094e71ee91d29c015195ef401e160",
  "patch_info": {
    "commit_hash": "613a087387c094e71ee91d29c015195ef401e160",
    "repo": "open-webui/open-webui",
    "commit_url": "https://github.com/open-webui/open-webui/commit/613a087387c094e71ee91d29c015195ef401e160",
    "files": [
      "backend/open_webui/routers/audio.py"
    ],
    "message": "refac",
    "before_after_code_files": [
      "backend/open_webui/routers/audio.py||backend/open_webui/routers/audio.py"
    ]
  },
  "patch_diff": {
    "backend/open_webui/routers/audio.py||backend/open_webui/routers/audio.py": [
      "File: backend/open_webui/routers/audio.py -> backend/open_webui/routers/audio.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "681:     available_models = []",
      "682:     if request.app.state.config.TTS_ENGINE == \"openai\":",
      "683:         # Use custom endpoint if not using the official OpenAI API URL",
      "685:             try:",
      "687:                 response.raise_for_status()",
      "688:                 data = response.json()",
      "689:                 available_models = data.get(\"models\", [])",
      "690:             except Exception as e:",
      "691:                 log.error(f\"Error fetching models from custom endpoint: {str(e)}\")",
      "693:         else:",
      "694:             available_models = [{\"id\": \"tts-1\"}, {\"id\": \"tts-1-hd\"}]",
      "695:     elif request.app.state.config.TTS_ENGINE == \"elevenlabs\":",
      "",
      "[Removed Lines]",
      "684:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(\"https://api.openai.com\"):",
      "686:                 response = requests.get(f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/models\")",
      "692:                 available_models = []",
      "",
      "[Added Lines]",
      "684:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(",
      "685:             \"https://api.openai.com\"",
      "686:         ):",
      "688:                 response = requests.get(",
      "689:                     f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/models\"",
      "690:                 )",
      "696:                 available_models = [{\"id\": \"tts-1\"}, {\"id\": \"tts-1-hd\"}]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "723:     available_voices = {}",
      "724:     if request.app.state.config.TTS_ENGINE == \"openai\":",
      "725:         # Use custom endpoint if not using the official OpenAI API URL",
      "727:             try:",
      "729:                 response.raise_for_status()",
      "730:                 data = response.json()",
      "731:                 voices_list = data.get(\"voices\", [])",
      "732:                 available_voices = {voice[\"id\"]: voice[\"name\"] for voice in voices_list}",
      "733:             except Exception as e:",
      "734:                 log.error(f\"Error fetching voices from custom endpoint: {str(e)}\")",
      "736:         else:",
      "737:             available_voices = {",
      "738:                 \"alloy\": \"alloy\",",
      "",
      "[Removed Lines]",
      "726:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(\"https://api.openai.com\"):",
      "728:                 response = requests.get(f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/voices\")",
      "735:                 available_voices = {}",
      "",
      "[Added Lines]",
      "730:         if not request.app.state.config.TTS_OPENAI_API_BASE_URL.startswith(",
      "731:             \"https://api.openai.com\"",
      "732:         ):",
      "734:                 response = requests.get(",
      "735:                     f\"{request.app.state.config.TTS_OPENAI_API_BASE_URL}/audio/voices\"",
      "736:                 )",
      "743:                 available_voices = {",
      "744:                     \"alloy\": \"alloy\",",
      "745:                     \"echo\": \"echo\",",
      "746:                     \"fable\": \"fable\",",
      "747:                     \"onyx\": \"onyx\",",
      "748:                     \"nova\": \"nova\",",
      "749:                     \"shimmer\": \"shimmer\",",
      "750:                 }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d047eb46cce49838824d0af32e1bba7516ef42e5",
      "candidate_info": {
        "commit_hash": "d047eb46cce49838824d0af32e1bba7516ef42e5",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/d047eb46cce49838824d0af32e1bba7516ef42e5",
        "files": [
          "src/lib/components/chat/Messages/CitationsModal.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/chat/Messages/CitationsModal.svelte||src/lib/components/chat/Messages/CitationsModal.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/chat/Messages/CitationsModal.svelte||src/lib/components/chat/Messages/CitationsModal.svelte": [
          "File: src/lib/components/chat/Messages/CitationsModal.svelte -> src/lib/components/chat/Messages/CitationsModal.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "128:              {percentage.toFixed(2)}%",
          "129:             </span>",
          "130:             <span class=\"text-gray-500 dark:text-gray-500\">",
          "132:             </span>",
          "133:            {:else}",
          "134:             <span class=\"text-gray-500 dark:text-gray-500\">",
          "136:             </span>",
          "137:            {/if}",
          "138:           </div>",
          "",
          "[Removed Lines]",
          "131:              ({document.distance.toFixed(4)})",
          "135:              {document.distance.toFixed(4)}",
          "",
          "[Added Lines]",
          "131:              ({(document?.distance ?? 0).toFixed(4)})",
          "135:              {(document?.distance ?? 0).toFixed(4)}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "451465151ec4a7fe21a1d415c9092978e17905fd",
      "candidate_info": {
        "commit_hash": "451465151ec4a7fe21a1d415c9092978e17905fd",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/451465151ec4a7fe21a1d415c9092978e17905fd",
        "files": [
          "src/lib/components/chat/ChatPlaceholder.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/chat/ChatPlaceholder.svelte||src/lib/components/chat/ChatPlaceholder.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/chat/ChatPlaceholder.svelte||src/lib/components/chat/ChatPlaceholder.svelte": [
          "File: src/lib/components/chat/ChatPlaceholder.svelte -> src/lib/components/chat/ChatPlaceholder.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "56:          ($i18n.language === 'dg-DG'",
          "57:           ? `/doge.png`",
          "58:           : `${WEBUI_BASE_URL}/static/favicon.png`)}",
          "60:         alt=\"logo\"",
          "61:         draggable=\"false\"",
          "62:        />",
          "",
          "[Removed Lines]",
          "59:         class=\" size-[2.7rem] rounded-full border-[1px] border-gray-200 dark:border-none\"",
          "",
          "[Added Lines]",
          "59:         class=\" size-[2.7rem] rounded-full border-[1px] border-gray-100 dark:border-none\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7ebb07c04c79d274ce8f7b08f036e6e4090bee2d",
      "candidate_info": {
        "commit_hash": "7ebb07c04c79d274ce8f7b08f036e6e4090bee2d",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/7ebb07c04c79d274ce8f7b08f036e6e4090bee2d",
        "files": [
          "src/lib/components/admin/Settings/WebSearch.svelte"
        ],
        "message": "refac",
        "before_after_code_files": [
          "src/lib/components/admin/Settings/WebSearch.svelte||src/lib/components/admin/Settings/WebSearch.svelte"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/lib/components/admin/Settings/WebSearch.svelte||src/lib/components/admin/Settings/WebSearch.svelte": [
          "File: src/lib/components/admin/Settings/WebSearch.svelte -> src/lib/components/admin/Settings/WebSearch.svelte",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:     proxy_url: youtubeProxyUrl",
          "53:    }",
          "54:   });",
          "55:  };",
          "57:  onMount(async () => {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56:   webConfig.search.domain_filter_list = webConfig.search.domain_filter_list.join(', ');",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "70667d5cc8dd755f7e439bd6eb1f822fc76e38f0",
      "candidate_info": {
        "commit_hash": "70667d5cc8dd755f7e439bd6eb1f822fc76e38f0",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/70667d5cc8dd755f7e439bd6eb1f822fc76e38f0",
        "files": [
          "backend/open_webui/config.py"
        ],
        "message": "refac",
        "before_after_code_files": [
          "backend/open_webui/config.py||backend/open_webui/config.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "backend/open_webui/config.py||backend/open_webui/config.py": [
          "File: backend/open_webui/config.py -> backend/open_webui/config.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "2416: LDAP_SEARCH_FILTERS = PersistentConfig(",
          "2417:     \"LDAP_SEARCH_FILTER\",",
          "2418:     \"ldap.server.search_filter\",",
          "2420: )",
          "2422: LDAP_USE_TLS = PersistentConfig(",
          "",
          "[Removed Lines]",
          "2419:     os.environ.get(\"LDAP_SEARCH_FILTER\", \"\"),",
          "",
          "[Added Lines]",
          "2419:     os.environ.get(\"LDAP_SEARCH_FILTER\", os.environ.get(\"LDAP_SEARCH_FILTERS\", \"\")),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "943a57474fdeab1c43490fb50591ab400ee90967",
      "candidate_info": {
        "commit_hash": "943a57474fdeab1c43490fb50591ab400ee90967",
        "repo": "open-webui/open-webui",
        "commit_url": "https://github.com/open-webui/open-webui/commit/943a57474fdeab1c43490fb50591ab400ee90967",
        "files": [
          "backend/open_webui/constants.py"
        ],
        "message": "refac",
        "before_after_code_files": [
          "backend/open_webui/constants.py||backend/open_webui/constants.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "backend/open_webui/constants.py||backend/open_webui/constants.py": [
          "File: backend/open_webui/constants.py -> backend/open_webui/constants.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:     )",
          "59:     FILE_NOT_SENT = \"FILE_NOT_SENT\"",
          "62:     NOT_FOUND = \"We could not find what you're looking for :/\"",
          "63:     USER_NOT_FOUND = \"We could not find what you're looking for :/\"",
          "",
          "[Removed Lines]",
          "60:     FILE_NOT_SUPPORTED = \"Oops! It seems like the file format you're trying to upload is not supported. Please upload a file with a supported format (e.g., JPG, PNG, PDF, TXT) and try again.\"",
          "",
          "[Added Lines]",
          "60:     FILE_NOT_SUPPORTED = \"Oops! It seems like the file format you're trying to upload is not supported. Please upload a file with a supported format and try again.\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}