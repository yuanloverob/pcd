{
  "cve_id": "CVE-2024-24767",
  "cve_desc": "CasaOS-UserService provides user management functionalities to CasaOS. Starting in version 0.4.4.3 and prior to version 0.4.7, CasaOS doesn't defend against password brute force attacks, which leads to having full access to the server. The web application lacks control over the login attempts. This vulnerability allows attackers to get super user-level access over the server. Version 0.4.7 contains a patch for this issue.",
  "repo": "IceWhaleTech/CasaOS-UserService",
  "patch_hash": "62006f61b55951048dbace4ebd9e483274838699",
  "patch_info": {
    "commit_hash": "62006f61b55951048dbace4ebd9e483274838699",
    "repo": "IceWhaleTech/CasaOS-UserService",
    "commit_url": "https://github.com/IceWhaleTech/CasaOS-UserService/commit/62006f61b55951048dbace4ebd9e483274838699",
    "files": [
      "go.mod",
      "route/v1/user.go"
    ],
    "message": "Merge pull request from GHSA-c69x-5xmw-v44x\n\n* feat: limit too many login request\n\n* fix: fix error rate limt\n\n---------\n\nSigned-off-by: CorrectRoadH <a778917369@gmail.com>",
    "before_after_code_files": [
      "go.mod||go.mod",
      "route/v1/user.go||route/v1/user.go"
    ]
  },
  "patch_diff": {
    "go.mod||go.mod": [
      "File: go.mod -> go.mod",
      "--- Hunk 1 ---",
      "[Context before]",
      "15:  github.com/tidwall/gjson v1.14.4",
      "16:  go.uber.org/zap v1.24.0",
      "17:  golang.org/x/net v0.17.0",
      "18:  gopkg.in/ini.v1 v1.67.0",
      "19:  gorm.io/gorm v1.25.0",
      "20: )",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "18:  golang.org/x/time v0.3.0",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "75:  golang.org/x/exp v0.0.0-20230713183714-613f0c0eb8a1 // indirect",
      "76:  golang.org/x/sys v0.14.0 // indirect",
      "77:  golang.org/x/text v0.13.0 // indirect",
      "79:  google.golang.org/protobuf v1.30.0 // indirect",
      "80:  gopkg.in/natefinch/lumberjack.v2 v2.2.1 // indirect",
      "81:  gopkg.in/yaml.v3 v3.0.1 // indirect",
      "",
      "[Removed Lines]",
      "78:  golang.org/x/time v0.3.0 // indirect",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "route/v1/user.go||route/v1/user.go": [
      "File: route/v1/user.go -> route/v1/user.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "32:  uuid \"github.com/satori/go.uuid\"",
      "33:  \"github.com/tidwall/gjson\"",
      "34:  \"go.uber.org/zap\"",
      "36:  \"github.com/IceWhaleTech/CasaOS-UserService/service\"",
      "37:  \"github.com/gin-gonic/gin\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "35:  \"golang.org/x/time/rate\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "84:  c.JSON(common_err.SUCCESS, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS)})",
      "85: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "88: var limiter = rate.NewLimiter(rate.Every(time.Minute), 5)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "95: func PostUserLogin(c *gin.Context) {",
      "96:  json := make(map[string]string)",
      "97:  c.ShouldBind(&json)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "100:  if !limiter.Allow() {",
      "101:   c.JSON(common_err.TOO_MANY_REQUEST,",
      "102:    model.Result{",
      "103:     Success: common_err.TOO_MANY_LOGIN_REQUESTS,",
      "104:     Message: common_err.GetMsg(common_err.TOO_MANY_LOGIN_REQUESTS),",
      "105:    })",
      "106:   return",
      "107:  }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "28b9015f29ad03e00c1e78be3e2a8a4bda8178bf",
      "candidate_info": {
        "commit_hash": "28b9015f29ad03e00c1e78be3e2a8a4bda8178bf",
        "repo": "IceWhaleTech/CasaOS-UserService",
        "commit_url": "https://github.com/IceWhaleTech/CasaOS-UserService/commit/28b9015f29ad03e00c1e78be3e2a8a4bda8178bf",
        "files": [
          "go.mod",
          "go.sum",
          "main.go",
          "route/v1.go",
          "route/v1/user.go",
          "route/v2.go",
          "service/user.go"
        ],
        "message": "use formal JWT validation (#35)",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum",
          "main.go||main.go",
          "route/v1.go||route/v1.go",
          "route/v1/user.go||route/v1/user.go",
          "route/v2.go||route/v2.go",
          "service/user.go||service/user.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod",
            "route/v1/user.go||route/v1/user.go"
          ],
          "candidate": [
            "go.mod||go.mod",
            "route/v1/user.go||route/v1/user.go"
          ]
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: go 1.20",
          "5: require (",
          "7:  github.com/coreos/go-systemd v0.0.0-20191104093116-d3cd4ed1dbcf",
          "8:  github.com/deepmap/oapi-codegen v1.12.4",
          "10:  github.com/gin-contrib/gzip v0.0.6",
          "11:  github.com/gin-gonic/gin v1.9.0",
          "13:  github.com/labstack/echo/v4 v4.10.2",
          "14:  github.com/satori/go.uuid v1.2.0",
          "15:  github.com/tidwall/gjson v1.14.4",
          "16:  go.uber.org/zap v1.24.0",
          "18:  gopkg.in/ini.v1 v1.67.0",
          "20: )",
          "22: require (",
          "23:  github.com/apapsch/go-jsonmerge/v2 v2.0.0 // indirect",
          "26:  github.com/chenzhuoyu/base64x v0.0.0-20221115062448-fe3a3abad311 // indirect",
          "27:  github.com/coreos/go-systemd/v22 v22.5.0 // indirect",
          "28:  github.com/dustin/go-humanize v1.0.1 // indirect",
          "29:  github.com/gin-contrib/sse v0.1.0 // indirect",
          "31:  github.com/go-openapi/jsonpointer v0.19.6 // indirect",
          "32:  github.com/go-openapi/swag v0.22.3 // indirect",
          "33:  github.com/go-playground/locales v0.14.1 // indirect",
          "",
          "[Removed Lines]",
          "6:  github.com/IceWhaleTech/CasaOS-Common v0.4.3",
          "9:  github.com/getkin/kin-openapi v0.115.0",
          "12:  github.com/glebarez/sqlite v1.7.0",
          "17:  golang.org/x/net v0.8.0",
          "19:  gorm.io/gorm v1.24.6",
          "24:  github.com/benbjohnson/clock v1.3.0 // indirect",
          "25:  github.com/bytedance/sonic v1.8.6 // indirect",
          "30:  github.com/glebarez/go-sqlite v1.21.0 // indirect",
          "",
          "[Added Lines]",
          "6:  github.com/IceWhaleTech/CasaOS-Common v0.4.4-alpha2",
          "9:  github.com/getkin/kin-openapi v0.116.0",
          "12:  github.com/glebarez/sqlite v1.8.0",
          "17:  golang.org/x/net v0.9.0",
          "19:  gorm.io/gorm v1.25.0",
          "24:  github.com/benbjohnson/clock v1.3.1 // indirect",
          "25:  github.com/bytedance/sonic v1.8.7 // indirect",
          "30:  github.com/glebarez/go-sqlite v1.21.1 // indirect",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46:  github.com/json-iterator/go v1.1.12 // indirect",
          "47:  github.com/klauspost/cpuid/v2 v2.2.4 // indirect",
          "48:  github.com/labstack/gommon v0.4.0 // indirect",
          "50:  github.com/mailru/easyjson v0.7.7 // indirect",
          "51:  github.com/mattn/go-colorable v0.1.13 // indirect",
          "52:  github.com/mattn/go-isatty v0.0.18 // indirect",
          "",
          "[Removed Lines]",
          "49:  github.com/leodido/go-urn v1.2.2 // indirect",
          "",
          "[Added Lines]",
          "49:  github.com/leodido/go-urn v1.2.3 // indirect",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "63:  github.com/valyala/bytebufferpool v1.0.0 // indirect",
          "64:  github.com/valyala/fasttemplate v1.2.2 // indirect",
          "65:  go.uber.org/atomic v1.10.0 // indirect",
          "67:  golang.org/x/arch v0.3.0 // indirect",
          "71:  golang.org/x/time v0.3.0 // indirect",
          "72:  google.golang.org/protobuf v1.30.0 // indirect",
          "73:  gopkg.in/natefinch/lumberjack.v2 v2.2.1 // indirect",
          "74:  gopkg.in/yaml.v3 v3.0.1 // indirect",
          "76:  modernc.org/mathutil v1.5.0 // indirect",
          "77:  modernc.org/memory v1.5.0 // indirect",
          "79: )",
          "",
          "[Removed Lines]",
          "66:  go.uber.org/multierr v1.10.0 // indirect",
          "68:  golang.org/x/crypto v0.7.0 // indirect",
          "69:  golang.org/x/sys v0.6.0 // indirect",
          "70:  golang.org/x/text v0.8.0 // indirect",
          "75:  modernc.org/libc v1.22.3 // indirect",
          "78:  modernc.org/sqlite v1.21.0 // indirect",
          "",
          "[Added Lines]",
          "66:  go.uber.org/multierr v1.11.0 // indirect",
          "68:  golang.org/x/crypto v0.8.0 // indirect",
          "69:  golang.org/x/sys v0.7.0 // indirect",
          "70:  golang.org/x/text v0.9.0 // indirect",
          "75:  modernc.org/libc v1.22.4 // indirect",
          "78:  modernc.org/sqlite v1.21.2 // indirect",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: github.com/RaveNoX/go-jsoncommentstrip v1.0.0/go.mod h1:78ihd09MekBnJnxpICcwzCMzGrKSKYe4AqU6PDYYpjk=",
          "4: github.com/apapsch/go-jsonmerge/v2 v2.0.0 h1:axGnT1gRIfimI7gJifB699GoE/oq+F2MU7Dml6nw9rQ=",
          "5: github.com/apapsch/go-jsonmerge/v2 v2.0.0/go.mod h1:lvDnEdqiQrp0O42VQGgmlKpxL1AP2+08jFMw88y4klk=",
          "8: github.com/bmatcuk/doublestar v1.1.1/go.mod h1:UD6OnuiIn0yFxxA2le/rnRU1G4RaI4UvFv1sNto9p6w=",
          "9: github.com/bytedance/sonic v1.5.0/go.mod h1:ED5hyg4y6t3/9Ku1R6dU/4KyJ48DZ4jPhfY1O2AihPM=",
          "12: github.com/chenzhuoyu/base64x v0.0.0-20211019084208-fb5309c8db06/go.mod h1:DH46F32mSOjUmXrMHnKwZdA8wcEefY7UVqBKYGjpdQY=",
          "13: github.com/chenzhuoyu/base64x v0.0.0-20221115062448-fe3a3abad311 h1:qSGYFH7+jGhDF8vLC+iwCD4WpbV1EBDSzWkJODFLams=",
          "14: github.com/chenzhuoyu/base64x v0.0.0-20221115062448-fe3a3abad311/go.mod h1:b583jCggY9gE99b6G5LEC39OIiVsWj+R97kbl5odCEk=",
          "",
          "[Removed Lines]",
          "1: github.com/IceWhaleTech/CasaOS-Common v0.4.3 h1:sYsWYhP5EyksH6D0BDv8secIRGAKUZZDTIKqACdFZQ4=",
          "2: github.com/IceWhaleTech/CasaOS-Common v0.4.3/go.mod h1:zLzM1RhoBRDdW7DFlEoPq18OhbJYsvc8yFodW0bm/QI=",
          "6: github.com/benbjohnson/clock v1.3.0 h1:ip6w0uFQkncKQ979AypyG0ER7mqUSBdKLOgAle/AT8A=",
          "7: github.com/benbjohnson/clock v1.3.0/go.mod h1:J11/hYXuz8f4ySSvYwY0FKfm+ezbsZBKZxNJlLklBHA=",
          "10: github.com/bytedance/sonic v1.8.6 h1:aUgO9S8gvdN6SyW2EhIpAw5E4ChworywIEndZCkCVXk=",
          "11: github.com/bytedance/sonic v1.8.6/go.mod h1:i736AoUSYt75HyZLoJW9ERYxcy6eaN6h4BZXU064P/U=",
          "",
          "[Added Lines]",
          "1: github.com/IceWhaleTech/CasaOS-Common v0.4.4-alpha2 h1:EIuQbVpuU2QZVui+ApYCEt27qGCUaQhgHCdOeHmgAwc=",
          "2: github.com/IceWhaleTech/CasaOS-Common v0.4.4-alpha2/go.mod h1:iv6fJJs7IKv1tSrsbyA3Fq9xfeKNoaxhqA6IQUBeg9Q=",
          "6: github.com/benbjohnson/clock v1.3.1 h1:Heo0FGXzOxUHquZbraxt+tT7UXVDhesUQH5ISbsOkCQ=",
          "7: github.com/benbjohnson/clock v1.3.1/go.mod h1:J11/hYXuz8f4ySSvYwY0FKfm+ezbsZBKZxNJlLklBHA=",
          "10: github.com/bytedance/sonic v1.8.7 h1:d3sry5vGgVq/OpgozRUNP6xBsSo0mtNdwliApw+SAMQ=",
          "11: github.com/bytedance/sonic v1.8.7/go.mod h1:i736AoUSYt75HyZLoJW9ERYxcy6eaN6h4BZXU064P/U=",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "24: github.com/deepmap/oapi-codegen v1.12.4/go.mod h1:3lgHGMu6myQ2vqbbTXH2H1o4eXFTGnFiDaOaKKl5yas=",
          "25: github.com/dustin/go-humanize v1.0.1 h1:GzkhY7T5VNhEkwH0PVJgjz+fX1rhBrR7pRT3mDkpeCY=",
          "26: github.com/dustin/go-humanize v1.0.1/go.mod h1:Mu1zIs6XwVuF/gI1OepvI0qD18qycQx+mFykh5fBlto=",
          "29: github.com/gin-contrib/gzip v0.0.6 h1:NjcunTcGAj5CO1gn4N8jHOSIeRFHIbn51z6K+xaN4d4=",
          "30: github.com/gin-contrib/gzip v0.0.6/go.mod h1:QOJlmV2xmayAjkNS2Y8NQsMneuRShOU/kjovCXNuzzk=",
          "31: github.com/gin-contrib/sse v0.1.0 h1:Y/yl/+YNO8GZSjAhjMsSuLt29uWRFHdHYUb5lYOV9qE=",
          "",
          "[Removed Lines]",
          "27: github.com/getkin/kin-openapi v0.115.0 h1:c8WHRLVY3G8m9jQTy0/DnIuljgRwTCB5twZytQS4JyU=",
          "28: github.com/getkin/kin-openapi v0.115.0/go.mod h1:l5e9PaFUo9fyLJCPGQeXI2ML8c3P8BHOEV2VaAVf/pc=",
          "",
          "[Added Lines]",
          "27: github.com/getkin/kin-openapi v0.116.0 h1:o986hwgMzR972JzOG5j6+WTwWqllZLs1EJKMKCivs2E=",
          "28: github.com/getkin/kin-openapi v0.116.0/go.mod h1:l5e9PaFUo9fyLJCPGQeXI2ML8c3P8BHOEV2VaAVf/pc=",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "33: github.com/gin-gonic/gin v1.8.1/go.mod h1:ji8BvRH1azfM+SYow9zQ6SZMvR8qOMZHmsCuWR9tTTk=",
          "34: github.com/gin-gonic/gin v1.9.0 h1:OjyFBKICoexlu99ctXNR2gg+c5pKrKMuyjgARg9qeY8=",
          "35: github.com/gin-gonic/gin v1.9.0/go.mod h1:W1Me9+hsUSyj3CePGrd1/QrKJMSJ1Tu/0hFEH89961k=",
          "40: github.com/go-openapi/jsonpointer v0.19.5/go.mod h1:Pl9vOtqEWErmShwVjC8pYs9cog34VGT37dQOVbmoatg=",
          "41: github.com/go-openapi/jsonpointer v0.19.6 h1:eCs3fxoIi3Wh6vtgmLTOjdhSpiqphQ+DaPn38N2ZdrE=",
          "42: github.com/go-openapi/jsonpointer v0.19.6/go.mod h1:osyAmYz/mB/C3I+WsTTSgw1ONzaLJoLCyoi6/zppojs=",
          "",
          "[Removed Lines]",
          "36: github.com/glebarez/go-sqlite v1.21.0 h1:b8MHPtBagkSD2gntImZPsG3o3QEXgMDxguW/GLUonHQ=",
          "37: github.com/glebarez/go-sqlite v1.21.0/go.mod h1:GodsA6yGSa3eKbvpr7dS+JaqazzVfMcjIXvx6KHhW/c=",
          "38: github.com/glebarez/sqlite v1.7.0 h1:A7Xj/KN2Lvie4Z4rrgQHY8MsbebX3NyWsL3n2i82MVI=",
          "39: github.com/glebarez/sqlite v1.7.0/go.mod h1:PkeevrRlF/1BhQBCnzcMWzgrIk7IOop+qS2jUYLfHhk=",
          "",
          "[Added Lines]",
          "36: github.com/glebarez/go-sqlite v1.21.1 h1:7MZyUPh2XTrHS7xNEHQbrhfMZuPSzhkm2A1qgg0y5NY=",
          "37: github.com/glebarez/go-sqlite v1.21.1/go.mod h1:ISs8MF6yk5cL4n/43rSOmVMGJJjHYr7L2MbZZ5Q4E2E=",
          "38: github.com/glebarez/sqlite v1.8.0 h1:02X12E2I/4C1n+v90yTqrjRa8yuo7c3KeHI3FRznCvc=",
          "39: github.com/glebarez/sqlite v1.8.0/go.mod h1:bpET16h1za2KOOMb8+jCp6UBP/iahDpfPQqSaYLTLx8=",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "103: github.com/labstack/gommon v0.4.0 h1:y7cvthEAEbU0yHOf4axH8ZG2NH8knB9iNSoTO8dyIk8=",
          "104: github.com/labstack/gommon v0.4.0/go.mod h1:uW6kP17uPlLJsD3ijUYn3/M5bAxtlZhMI6m3MFxTMTM=",
          "105: github.com/leodido/go-urn v1.2.1/go.mod h1:zt4jvISO2HfUBqxjfIshjdMTYS56ZS/qv49ictyFfxY=",
          "108: github.com/mailru/easyjson v0.0.0-20190614124828-94de47d64c63/go.mod h1:C1wdFJiN94OJF2b5HbByQZoLdCWB1Yqtg26g4irojpc=",
          "109: github.com/mailru/easyjson v0.0.0-20190626092158-b2ccc519800e/go.mod h1:C1wdFJiN94OJF2b5HbByQZoLdCWB1Yqtg26g4irojpc=",
          "110: github.com/mailru/easyjson v0.7.7 h1:UGYAvKxe3sBsEDzO8ZeWOSlIQfWFlxbzLZe7hwFURr0=",
          "",
          "[Removed Lines]",
          "106: github.com/leodido/go-urn v1.2.2 h1:7z68G0FCGvDk646jz1AelTYNYWrTNm0bEcFAo147wt4=",
          "107: github.com/leodido/go-urn v1.2.2/go.mod h1:kUaIbLZWttglzwNuG0pgsh5vuV6u2YcGBYz1hIPjtOQ=",
          "",
          "[Added Lines]",
          "106: github.com/leodido/go-urn v1.2.3 h1:6BE2vPT0lqoz3fmOesHZiaiFh7889ssCo2GMvLCfiuA=",
          "107: github.com/leodido/go-urn v1.2.3/go.mod h1:7ZrI8mTSeBSHl/UaRyKQW1qZeMgak41ANeCNaVckg+4=",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "138: github.com/rogpeppe/go-internal v1.6.1/go.mod h1:xXDCJY+GAPziupqXw64V24skbSoqbTEfhy4qGm1nDQc=",
          "139: github.com/rogpeppe/go-internal v1.8.0 h1:FCbCCtXNOY3UtUuHUYaghJg4y7Fd14rXifAYUAtL9R8=",
          "140: github.com/rogpeppe/go-internal v1.8.0/go.mod h1:WmiCO8CzOY8rg0OYDC4/i/2WRWAB6poM+XZ2dLUbcbE=",
          "142: github.com/satori/go.uuid v1.2.0 h1:0uYX9dsZ2yD7q2RtLRtPSdGDWzjeM3TbMJP9utgA0ww=",
          "143: github.com/satori/go.uuid v1.2.0/go.mod h1:dA0hQrYB0VpLJoorglMZABFdXlWrHn1NEOzdhQKdks0=",
          "144: github.com/spkg/bom v0.0.0-20160624110644-59b7046e48ad/go.mod h1:qLr4V1qq6nMqFKkMo8ZTx3f+BZEkzsRUY10Xsm2mwU0=",
          "",
          "[Removed Lines]",
          "141: github.com/rwtodd/Go.Sed v0.0.0-20210816025313-55464686f9ef/go.mod h1:8AEUvGVi2uQ5b24BIhcr0GCcpd/RNAFWaN2CJFrWIIQ=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "173: github.com/valyala/fasttemplate v1.2.2/go.mod h1:KHLXt3tVN2HBp8eijSv/kGJopbvo7S+qRAEEKiv+SiQ=",
          "174: go.uber.org/atomic v1.10.0 h1:9qC72Qh0+3MqyJbAn8YU5xVq1frD8bn3JtD2oXtafVQ=",
          "175: go.uber.org/atomic v1.10.0/go.mod h1:LUxbIzbOniOlMKjJjyPfpl4v+PKK2cNJn91OQbhoJI0=",
          "179: go.uber.org/zap v1.24.0 h1:FiJd5l1UOLj0wCgbSE0rwwXHzEdAZS6hiiSnxJN/D60=",
          "180: go.uber.org/zap v1.24.0/go.mod h1:2kMP+WWQ8aoFoedH3T2sq6iJ2yDWpHbP0f6MQbS9Gkg=",
          "181: golang.org/x/arch v0.0.0-20210923205945-b76863e36670/go.mod h1:5om86z9Hs0C8fWVUuoMHwpExlXzs5Tkyp9hOrfG7pp8=",
          "182: golang.org/x/arch v0.3.0 h1:02VY4/ZcO/gBOH6PUaoiptASxtXU10jazRCP865E97k=",
          "183: golang.org/x/arch v0.3.0/go.mod h1:5om86z9Hs0C8fWVUuoMHwpExlXzs5Tkyp9hOrfG7pp8=",
          "184: golang.org/x/crypto v0.0.0-20210711020723-a769d52b0f97/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=",
          "187: golang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=",
          "190: golang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "191: golang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "192: golang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "",
          "[Removed Lines]",
          "176: go.uber.org/goleak v1.1.11 h1:wy28qYRKZgnJTxGxvye5/wgWr1EKjmUDGYox5mGlRlI=",
          "177: go.uber.org/multierr v1.10.0 h1:S0h4aNzvfcFsC3dRF1jLoaov7oRaKqRGC/pUEJ2yvPQ=",
          "178: go.uber.org/multierr v1.10.0/go.mod h1:20+QtiLqy0Nd6FdQB9TLXag12DsQkrbs3htMFfDN80Y=",
          "185: golang.org/x/crypto v0.7.0 h1:AvwMYaRytfdeVt3u6mLaxYtErKYjxA2OXjJ1HHq6t3A=",
          "186: golang.org/x/crypto v0.7.0/go.mod h1:pYwdfH91IfpZVANVyUOhSIPZaFoJGxTFbZhFTx+dXZU=",
          "188: golang.org/x/net v0.8.0 h1:Zrh2ngAOFYneWTAIAPethzeaQLuHwhuBkuV6ZiRnUaQ=",
          "189: golang.org/x/net v0.8.0/go.mod h1:QVkue5JL9kW//ek3r6jTKnTFis1tRmNAW2P1shuFdJc=",
          "",
          "[Added Lines]",
          "175: go.uber.org/goleak v1.2.1 h1:NBol2c7O1ZokfZ0LEU9K6Whx/KnwvepVetCUhtKja4A=",
          "176: go.uber.org/multierr v1.11.0 h1:blXXJkSxSSfBVBlC76pxqeO+LN3aDfLQo+309xJstO0=",
          "177: go.uber.org/multierr v1.11.0/go.mod h1:20+QtiLqy0Nd6FdQB9TLXag12DsQkrbs3htMFfDN80Y=",
          "184: golang.org/x/crypto v0.8.0 h1:pd9TJtTueMTVQXzk8E2XESSMQDj/U7OUu0PqJqPXQjQ=",
          "185: golang.org/x/crypto v0.8.0/go.mod h1:mRqEX+O9/h5TFCrQhkgjo2yKi0yYA+9ecGkdQoHrywE=",
          "187: golang.org/x/net v0.9.0 h1:aWJ/m6xSmxWBx+V0XRHTlrYrPG56jKsLdTFmsSsCzOM=",
          "188: golang.org/x/net v0.9.0/go.mod h1:d48xBJpPfHeWQsugry2m+kC02ZBRGRgulfHnEXEuWns=",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "195: golang.org/x/sys v0.0.0-20211103235746-7861aae1554b/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "196: golang.org/x/sys v0.0.0-20220704084225-05e143d24a9e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "197: golang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "199: golang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "200: golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=",
          "201: golang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=",
          "202: golang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=",
          "205: golang.org/x/time v0.3.0 h1:rg5rLMjNzMS1RkNLzCG38eapWhnYLFYXDXj2gOlr8j4=",
          "206: golang.org/x/time v0.3.0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=",
          "207: golang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=",
          "",
          "[Removed Lines]",
          "198: golang.org/x/sys v0.6.0 h1:MVltZSvRTcU2ljQOhs94SXPftV6DCNnZViHeQps87pQ=",
          "203: golang.org/x/text v0.8.0 h1:57P1ETyNKtuIjB4SRd15iJxuhj8Gc416Y78H3qgMh68=",
          "204: golang.org/x/text v0.8.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=",
          "",
          "[Added Lines]",
          "198: golang.org/x/sys v0.7.0 h1:3jlCCIQZPdOYu1h8BkNvLz8Kgwtae2cagcG/VamtZRU=",
          "199: golang.org/x/sys v0.7.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "203: golang.org/x/text v0.9.0 h1:2sjJmO8cDvYveuX97RDLsxlyUxLl+GHoLxBiRdHllBE=",
          "204: golang.org/x/text v0.9.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "226: gopkg.in/yaml.v3 v3.0.0/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=",
          "227: gopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=",
          "228: gopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=",
          "233: modernc.org/mathutil v1.5.0 h1:rV0Ko/6SfM+8G+yKiyI830l3Wuz1zRutdslNoQ0kfiQ=",
          "234: modernc.org/mathutil v1.5.0/go.mod h1:mZW8CKdRPY1v87qxC/wUdX5O1qDzXMP5TH3wjfpga6E=",
          "235: modernc.org/memory v1.5.0 h1:N+/8c5rE6EqugZwHii4IFsaJ7MUhoWX07J5tC/iI5Ds=",
          "236: modernc.org/memory v1.5.0/go.mod h1:PkUhL0Mugw21sHPeskwZW4D6VscE/GQJOnIpCnW6pSU=",
          "239: rsc.io/pdf v0.1.1/go.mod h1:n8OzWcQ6Sp37PL01nO98y4iUCRdTGarVfzxY20ICaU4=",
          "",
          "[Removed Lines]",
          "229: gorm.io/gorm v1.24.6 h1:wy98aq9oFEetsc4CAbKD2SoBCdMzsbSIvSUUFJuHi5s=",
          "230: gorm.io/gorm v1.24.6/go.mod h1:L4uxeKpfBml98NYqVqwAdmV1a2nBtAec/cf3fpucW/k=",
          "231: modernc.org/libc v1.22.3 h1:D/g6O5ftAfavceqlLOFwaZuA5KYafKwmr30A6iSqoyY=",
          "232: modernc.org/libc v1.22.3/go.mod h1:MQrloYP209xa2zHome2a8HLiLm6k0UT8CoHpV74tOFw=",
          "237: modernc.org/sqlite v1.21.0 h1:4aP4MdUf15i3R3M2mx6Q90WHKz3nZLoz96zlB6tNdow=",
          "238: modernc.org/sqlite v1.21.0/go.mod h1:XwQ0wZPIh1iKb5mkvCJ3szzbhk+tykC8ZWqTRTgYRwI=",
          "",
          "[Added Lines]",
          "229: gorm.io/gorm v1.25.0 h1:+KtYtb2roDz14EQe4bla8CbQlmb9dN3VejSai3lprfU=",
          "230: gorm.io/gorm v1.25.0/go.mod h1:L4uxeKpfBml98NYqVqwAdmV1a2nBtAec/cf3fpucW/k=",
          "231: modernc.org/libc v1.22.4 h1:wymSbZb0AlrjdAVX3cjreCHTPCpPARbQXNz6BHPzdwQ=",
          "232: modernc.org/libc v1.22.4/go.mod h1:jj+Z7dTNX8fBScMVNRAYZ/jF91K8fdT2hYMThc3YjBY=",
          "237: modernc.org/sqlite v1.21.2 h1:ixuUG0QS413Vfzyx6FWx6PYTmHaOegTY+hjzhn7L+a0=",
          "238: modernc.org/sqlite v1.21.2/go.mod h1:cxbLkB5WS32DnQqeH4h4o1B0eMr8W/y8/RGuxQ3JsC0=",
          "",
          "---------------"
        ],
        "main.go||main.go": [
          "File: main.go -> main.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "9:  \"net\"",
          "10:  \"net/http\"",
          "11:  \"os\"",
          "12:  \"time\"",
          "14:  \"github.com/IceWhaleTech/CasaOS-Common/model\"",
          "15:  util_http \"github.com/IceWhaleTech/CasaOS-Common/utils/http\"",
          "16:  \"github.com/IceWhaleTech/CasaOS-Common/utils/logger\"",
          "17:  \"github.com/IceWhaleTech/CasaOS-UserService/common\"",
          "18:  \"github.com/IceWhaleTech/CasaOS-UserService/pkg/config\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12:  \"path/filepath\"",
          "13:  \"strings\"",
          "16:  \"github.com/IceWhaleTech/CasaOS-Common/external\"",
          "19:  \"github.com/IceWhaleTech/CasaOS-Common/utils/jwt\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "93:  v2Router := route.InitV2Router()",
          "94:  v2DocRouter := route.InitV2DocRouter(_docHTML, _docYAML)",
          "96:  mux := &util_http.HandlerMultiplexer{",
          "97:   HandlerMap: map[string]http.Handler{",
          "101:   },",
          "102:  }",
          "",
          "[Removed Lines]",
          "98:    \"v1\":  v1Router,",
          "99:    \"v2\":  v2Router,",
          "100:    \"doc\": v2DocRouter,",
          "",
          "[Added Lines]",
          "100:  _, publicKey := service.MyService.User().GetKeyPair()",
          "102:  jswkJSON, err := jwt.GenerateJwksJSON(publicKey)",
          "103:  if err != nil {",
          "104:   panic(err)",
          "105:  }",
          "109:    \"v1\":                                    v1Router,",
          "110:    \"v2\":                                    v2Router,",
          "111:    \"doc\":                                   v2DocRouter,",
          "112:    strings.SplitN(jwt.JWKSPath, \"/\", 2)[0]: jwt.JWKSHandler(jswkJSON),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "110:   \"/v1/users\",",
          "111:   route.V2APIPath,",
          "112:   route.V2DocPath,",
          "113:  }",
          "114:  for _, v := range apiPaths {",
          "115:   err = service.MyService.Gateway().CreateRoute(&model.Route{",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "125:   \"/\" + jwt.JWKSPath,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "122:   }",
          "123:  }",
          "125:  if supported, err := daemon.SdNotify(false, daemon.SdNotifyReady); err != nil {",
          "126:   logger.Error(\"Failed to notify systemd that user service is ready\", zap.Any(\"error\", err))",
          "127:  } else if supported {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "139:  addressFilePath, err := writeAddressFile(config.CommonInfo.RuntimePath, external.UserServiceAddressFilename, \"http://\"+listener.Addr().String())",
          "140:  if err != nil {",
          "141:   panic(err)",
          "142:  }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "130:   logger.Info(\"This process is not running as a systemd service.\")",
          "131:  }",
          "132:  go route.EventListen()",
          "135:  s := &http.Server{",
          "136:   Handler:           mux,",
          "",
          "[Removed Lines]",
          "133:  logger.Info(\"User service is listening...\", zap.Any(\"address\", listener.Addr().String()))",
          "",
          "[Added Lines]",
          "152:  logger.Info(\"User service is listening...\", zap.Any(\"address\", listener.Addr().String()), zap.String(\"filepath\", addressFilePath))",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "142:   panic(err)",
          "143:  }",
          "144: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "165: func writeAddressFile(runtimePath string, filename string, address string) (string, error) {",
          "166:  err := os.MkdirAll(runtimePath, 0o755)",
          "167:  if err != nil {",
          "168:   return \"\", err",
          "169:  }",
          "171:  filepath := filepath.Join(runtimePath, filename)",
          "172:  return filepath, os.WriteFile(filepath, []byte(address), 0o600)",
          "173: }",
          "",
          "---------------"
        ],
        "route/v1.go||route/v1.go": [
          "File: route/v1.go -> route/v1.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package route",
          "3: import (",
          "4:  \"os\"",
          "6:  \"github.com/IceWhaleTech/CasaOS-Common/middleware\"",
          "7:  \"github.com/IceWhaleTech/CasaOS-Common/utils/jwt\"",
          "8:  v1 \"github.com/IceWhaleTech/CasaOS-UserService/route/v1\"",
          "9:  \"github.com/gin-contrib/gzip\"",
          "10:  \"github.com/gin-gonic/gin\"",
          "11: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4:  \"crypto/ecdsa\"",
          "10:  \"github.com/IceWhaleTech/CasaOS-UserService/service\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "35:  v1Group := r.Group(\"/v1\")",
          "38:  {",
          "39:   v1UsersGroup := v1Group.Group(\"/users\")",
          "40:   v1UsersGroup.Use()",
          "",
          "[Removed Lines]",
          "37:  v1Group.Use(jwt.JWT())",
          "",
          "[Added Lines]",
          "39:  v1Group.Use(jwt.JWT(",
          "40:   func() (*ecdsa.PublicKey, error) {",
          "41:    _, publicKey := service.MyService.User().GetKeyPair()",
          "42:    return publicKey, nil",
          "43:   },",
          "44:  ))",
          "",
          "---------------"
        ],
        "route/v1/user.go||route/v1/user.go": [
          "File: route/v1/user.go -> route/v1/user.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package v1",
          "3: import (",
          "4:  json2 \"encoding/json\"",
          "5:  \"io\"",
          "6:  \"net/http\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4:  \"crypto/ecdsa\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "109:    model.Result{Success: common_err.PWD_INVALID, Message: common_err.GetMsg(common_err.PWD_INVALID)})",
          "110:   return",
          "111:  }",
          "112:  token := system_model.VerifyInformation{}",
          "115:  token.ExpiresAt = time.Now().Add(3 * time.Hour * time.Duration(1)).Unix()",
          "116:  data := make(map[string]interface{}, 2)",
          "117:  user.Password = \"\"",
          "",
          "[Removed Lines]",
          "113:  token.AccessToken = jwt.GetAccessToken(user.Username, user.Password, user.Id)",
          "114:  token.RefreshToken = jwt.GetRefreshToken(user.Username, user.Password, user.Id)",
          "",
          "[Added Lines]",
          "114:  privateKey, _ := service.MyService.User().GetKeyPair()",
          "118:  accessToken, err := jwt.GetAccessToken(user.Username, privateKey, user.Id)",
          "119:  if err != nil {",
          "120:   c.JSON(http.StatusInternalServerError, model.Result{Success: common_err.SERVICE_ERROR, Message: err.Error()})",
          "121:  }",
          "122:  token.AccessToken = accessToken",
          "124:  refreshToken, err := jwt.GetRefreshToken(user.Username, privateKey, user.Id)",
          "125:  if err != nil {",
          "126:   c.JSON(http.StatusInternalServerError, model.Result{Success: common_err.SERVICE_ERROR, Message: err.Error()})",
          "127:  }",
          "128:  token.RefreshToken = refreshToken",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "639:  js := make(map[string]string)",
          "640:  c.ShouldBind(&js)",
          "641:  refresh := js[\"refresh_token\"]",
          "643:  if err != nil {",
          "645:   return",
          "646:  }",
          "647:  if !claims.VerifyExpiresAt(time.Now(), true) || !claims.VerifyIssuer(\"refresh\", true) {",
          "649:   return",
          "650:  }",
          "657:  c.JSON(common_err.SUCCESS, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS), Data: verifyInfo})",
          "658: }",
          "",
          "[Removed Lines]",
          "642:  claims, err := jwt.ParseToken(refresh, true)",
          "644:   c.JSON(common_err.CLIENT_ERROR, model.Result{Success: common_err.VERIFICATION_FAILURE, Message: common_err.GetMsg(common_err.VERIFICATION_FAILURE), Data: err.Error()})",
          "648:   c.JSON(common_err.CLIENT_ERROR, model.Result{Success: common_err.VERIFICATION_FAILURE, Message: common_err.GetMsg(common_err.VERIFICATION_FAILURE)})",
          "651:  newToken := jwt.GetAccessToken(claims.Username, claims.Password, claims.ID)",
          "652:  verifyInfo := system_model.VerifyInformation{}",
          "653:  verifyInfo.AccessToken = newToken",
          "654:  verifyInfo.RefreshToken = jwt.GetRefreshToken(claims.Username, claims.Password, claims.ID)",
          "655:  verifyInfo.ExpiresAt = time.Now().Add(3 * time.Hour * time.Duration(1)).Unix()",
          "",
          "[Added Lines]",
          "658:  privateKey, _ := service.MyService.User().GetKeyPair()",
          "660:  claims, err := jwt.ParseToken(",
          "661:   refresh,",
          "662:   func() (*ecdsa.PublicKey, error) {",
          "663:    _, publicKey := service.MyService.User().GetKeyPair()",
          "664:    return publicKey, nil",
          "665:   })",
          "667:   c.JSON(http.StatusUnauthorized, model.Result{Success: common_err.VERIFICATION_FAILURE, Message: common_err.GetMsg(common_err.VERIFICATION_FAILURE), Data: err.Error()})",
          "671:   c.JSON(http.StatusUnauthorized, model.Result{Success: common_err.VERIFICATION_FAILURE, Message: common_err.GetMsg(common_err.VERIFICATION_FAILURE)})",
          "672:   return",
          "673:  }",
          "675:  newAccessToken, err := jwt.GetAccessToken(claims.Username, privateKey, claims.ID)",
          "676:  if err != nil {",
          "677:   c.JSON(http.StatusInternalServerError, model.Result{Success: common_err.SERVICE_ERROR, Message: err.Error()})",
          "681:  newRefreshToken, err := jwt.GetRefreshToken(claims.Username, privateKey, claims.ID)",
          "682:  if err != nil {",
          "683:   c.JSON(http.StatusInternalServerError, model.Result{Success: common_err.SERVICE_ERROR, Message: err.Error()})",
          "684:   return",
          "685:  }",
          "687:  verifyInfo := system_model.VerifyInformation{",
          "688:   AccessToken:  newAccessToken,",
          "689:   RefreshToken: newRefreshToken,",
          "690:   ExpiresAt:    time.Now().Add(3 * time.Hour).Unix(),",
          "691:  }",
          "",
          "---------------"
        ],
        "route/v2.go||route/v2.go": [
          "File: route/v2.go -> route/v2.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package route",
          "3: import (",
          "4:  \"net/http\"",
          "5:  \"net/url\"",
          "6:  \"strconv\"",
          "7:  \"strings\"",
          "10:  \"github.com/IceWhaleTech/CasaOS-Common/utils/jwt\"",
          "11:  codegen \"github.com/IceWhaleTech/CasaOS-UserService/codegen/user_service\"",
          "12:  v2 \"github.com/IceWhaleTech/CasaOS-UserService/route/v2\"",
          "13:  \"github.com/deepmap/oapi-codegen/pkg/middleware\"",
          "14:  \"github.com/getkin/kin-openapi/openapi3\"",
          "15:  \"github.com/getkin/kin-openapi/openapi3filter\"",
          "",
          "[Removed Lines]",
          "9:  \"github.com/IceWhaleTech/CasaOS-Common/utils/common_err\"",
          "",
          "[Added Lines]",
          "4:  \"crypto/ecdsa\"",
          "13:  \"github.com/IceWhaleTech/CasaOS-UserService/service\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "64:    return c.RealIP() == \"::1\" || c.RealIP() == \"127.0.0.1\"",
          "65:   },",
          "66:   ParseTokenFunc: func(token string, c echo.Context) (interface{}, error) {",
          "69:     return nil, echo.ErrUnauthorized",
          "70:    }",
          "",
          "[Removed Lines]",
          "67:    claims, code := jwt.Validate(token)",
          "68:    if code != common_err.SUCCESS {",
          "",
          "[Added Lines]",
          "68:    valid, claims, err := jwt.Validate(",
          "69:     token,",
          "70:     func() (*ecdsa.PublicKey, error) {",
          "71:      _, publicKey := service.MyService.User().GetKeyPair()",
          "72:      return publicKey, nil",
          "73:     })",
          "74:    if err != nil || !valid {",
          "",
          "---------------"
        ],
        "service/user.go||service/user.go": [
          "File: service/user.go -> service/user.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: package service",
          "12: import (",
          "13:  \"io\"",
          "14:  \"mime/multipart\"",
          "15:  \"os\"",
          "17:  \"github.com/IceWhaleTech/CasaOS-UserService/service/model\"",
          "18:  \"gorm.io/gorm\"",
          "19: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13:  \"crypto/ecdsa\"",
          "18:  \"github.com/IceWhaleTech/CasaOS-Common/utils/jwt\"",
          "19:  \"github.com/IceWhaleTech/CasaOS-Common/utils/logger\"",
          "21:  \"go.uber.org/zap\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "31:  DeleteAllUser()",
          "32:  GetUserInfoByUserName(userName string) (m model.UserDBModel)",
          "33:  GetAllUserName() (list []model.UserDBModel)",
          "34: }",
          "36: var UserRegisterHash = make(map[string]string)",
          "38: type userService struct {",
          "39:  db *gorm.DB",
          "40: }",
          "42: func (u *userService) DeleteAllUser() {",
          "43:  u.db.Where(\"1=1\").Delete(&model.UserDBModel{})",
          "44: }",
          "45: func (u *userService) DeleteUserById(id string) {",
          "46:  u.db.Where(\"id= ?\", id).Delete(&model.UserDBModel{})",
          "47: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39:  GetKeyPair() (*ecdsa.PrivateKey, *ecdsa.PublicKey)",
          "45:  privateKey *ecdsa.PrivateKey // keep this private - NEVER expose it!!!",
          "46:  publicKey  *ecdsa.PublicKey",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "84:  return",
          "85: }",
          "88: func (c *userService) UpLoadFile(file multipart.File, url string) error {",
          "90:  defer out.Close()",
          "91:  io.Copy(out, file)",
          "92:  return nil",
          "93: }",
          "96: func NewUserService(db *gorm.DB) UserService {",
          "98: }",
          "",
          "[Removed Lines]",
          "89:  out, _ := os.OpenFile(url, os.O_WRONLY|os.O_TRUNC|os.O_CREATE, 0644)",
          "97:  return &userService{db: db}",
          "",
          "[Added Lines]",
          "104:  out, _ := os.OpenFile(url, os.O_WRONLY|os.O_TRUNC|os.O_CREATE, 0o644)",
          "110: func (u *userService) GetKeyPair() (*ecdsa.PrivateKey, *ecdsa.PublicKey) {",
          "111:  return u.privateKey, u.publicKey",
          "112: }",
          "117:  privateKey, publicKey, err := jwt.GenerateKeyPair()",
          "118:  if err != nil {",
          "119:   logger.Error(\"failed to generate key pair for JWT\", zap.Error(err))",
          "120:   return nil",
          "121:  }",
          "123:  return &userService{",
          "124:   privateKey: privateKey,",
          "125:   publicKey:  publicKey,",
          "126:   db:         db,",
          "127:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "869aa367f9c9d96b6e644a7a4cb7347d52e9b752",
      "candidate_info": {
        "commit_hash": "869aa367f9c9d96b6e644a7a4cb7347d52e9b752",
        "repo": "IceWhaleTech/CasaOS-UserService",
        "commit_url": "https://github.com/IceWhaleTech/CasaOS-UserService/commit/869aa367f9c9d96b6e644a7a4cb7347d52e9b752",
        "files": [
          ".goreleaser.yaml",
          "go.mod",
          "go.sum"
        ],
        "message": "update goreleaser",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod"
          ],
          "candidate": [
            "go.mod||go.mod"
          ]
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: go 1.20",
          "5: require (",
          "7:  github.com/coreos/go-systemd v0.0.0-20191104093116-d3cd4ed1dbcf",
          "8:  github.com/deepmap/oapi-codegen v1.12.4",
          "10:  github.com/gin-contrib/gzip v0.0.6",
          "12:  github.com/glebarez/sqlite v1.8.0",
          "13:  github.com/labstack/echo/v4 v4.10.2",
          "14:  github.com/satori/go.uuid v1.2.0",
          "15:  github.com/tidwall/gjson v1.14.4",
          "16:  go.uber.org/zap v1.24.0",
          "18:  gopkg.in/ini.v1 v1.67.0",
          "19:  gorm.io/gorm v1.25.0",
          "20: )",
          "",
          "[Removed Lines]",
          "6:  github.com/IceWhaleTech/CasaOS-Common v0.4.4-alpha3",
          "9:  github.com/getkin/kin-openapi v0.116.0",
          "11:  github.com/gin-gonic/gin v1.9.0",
          "17:  golang.org/x/net v0.9.0",
          "",
          "[Added Lines]",
          "6:  github.com/IceWhaleTech/CasaOS-Common v0.4.8-alpha2",
          "9:  github.com/getkin/kin-openapi v0.117.0",
          "11:  github.com/gin-gonic/gin v1.9.1",
          "17:  golang.org/x/net v0.17.0",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "22: require (",
          "23:  github.com/apapsch/go-jsonmerge/v2 v2.0.0 // indirect",
          "24:  github.com/benbjohnson/clock v1.3.1 // indirect",
          "26:  github.com/chenzhuoyu/base64x v0.0.0-20221115062448-fe3a3abad311 // indirect",
          "27:  github.com/coreos/go-systemd/v22 v22.5.0 // indirect",
          "28:  github.com/dustin/go-humanize v1.0.1 // indirect",
          "29:  github.com/gin-contrib/sse v0.1.0 // indirect",
          "30:  github.com/glebarez/go-sqlite v1.21.1 // indirect",
          "31:  github.com/go-openapi/jsonpointer v0.19.6 // indirect",
          "32:  github.com/go-openapi/swag v0.22.3 // indirect",
          "33:  github.com/go-playground/locales v0.14.1 // indirect",
          "34:  github.com/go-playground/universal-translator v0.18.1 // indirect",
          "36:  github.com/goccy/go-json v0.10.2 // indirect",
          "37:  github.com/godbus/dbus/v5 v5.1.0 // indirect",
          "38:  github.com/golang-jwt/jwt v3.2.2+incompatible // indirect",
          "39:  github.com/golang-jwt/jwt/v4 v4.5.0 // indirect",
          "40:  github.com/google/uuid v1.3.0 // indirect",
          "41:  github.com/gorilla/mux v1.8.0 // indirect",
          "42:  github.com/invopop/yaml v0.2.0 // indirect",
          "",
          "[Removed Lines]",
          "25:  github.com/bytedance/sonic v1.8.7 // indirect",
          "35:  github.com/go-playground/validator/v10 v10.12.0 // indirect",
          "",
          "[Added Lines]",
          "25:  github.com/bytedance/sonic v1.9.1 // indirect",
          "29:  github.com/gabriel-vasile/mimetype v1.4.2 // indirect",
          "36:  github.com/go-playground/validator/v10 v10.14.0 // indirect",
          "41:  github.com/google/go-cmp v0.6.0 // indirect",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "45:  github.com/josharian/intern v1.0.0 // indirect",
          "46:  github.com/json-iterator/go v1.1.12 // indirect",
          "47:  github.com/klauspost/cpuid/v2 v2.2.4 // indirect",
          "48:  github.com/labstack/gommon v0.4.0 // indirect",
          "50:  github.com/mailru/easyjson v0.7.7 // indirect",
          "51:  github.com/mattn/go-colorable v0.1.13 // indirect",
          "53:  github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect",
          "54:  github.com/modern-go/reflect2 v1.0.2 // indirect",
          "55:  github.com/mohae/deepcopy v0.0.0-20170929034955-c48cc78d4826 // indirect",
          "57:  github.com/perimeterx/marshmallow v1.1.4 // indirect",
          "58:  github.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec // indirect",
          "59:  github.com/tidwall/match v1.1.1 // indirect",
          "60:  github.com/tidwall/pretty v1.2.1 // indirect",
          "61:  github.com/twitchyliquid64/golang-asm v0.15.1 // indirect",
          "",
          "[Removed Lines]",
          "49:  github.com/leodido/go-urn v1.2.3 // indirect",
          "52:  github.com/mattn/go-isatty v0.0.18 // indirect",
          "56:  github.com/pelletier/go-toml/v2 v2.0.7 // indirect",
          "",
          "[Added Lines]",
          "50:  github.com/kr/pretty v0.3.1 // indirect",
          "52:  github.com/leodido/go-urn v1.2.4 // indirect",
          "55:  github.com/mattn/go-isatty v0.0.19 // indirect",
          "59:  github.com/pelletier/go-toml/v2 v2.0.8 // indirect",
          "62:  github.com/rogpeppe/go-internal v1.10.0 // indirect",
          "63:  github.com/samber/lo v1.38.1 // indirect",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "65:  go.uber.org/atomic v1.10.0 // indirect",
          "66:  go.uber.org/multierr v1.11.0 // indirect",
          "67:  golang.org/x/arch v0.3.0 // indirect",
          "71:  golang.org/x/time v0.3.0 // indirect",
          "72:  google.golang.org/protobuf v1.30.0 // indirect",
          "73:  gopkg.in/natefinch/lumberjack.v2 v2.2.1 // indirect",
          "",
          "[Removed Lines]",
          "68:  golang.org/x/crypto v0.8.0 // indirect",
          "69:  golang.org/x/sys v0.7.0 // indirect",
          "70:  golang.org/x/text v0.9.0 // indirect",
          "",
          "[Added Lines]",
          "73:  golang.org/x/crypto v0.14.0 // indirect",
          "74:  golang.org/x/exp v0.0.0-20221126150942-6ab00d035af9 // indirect",
          "75:  golang.org/x/sys v0.13.0 // indirect",
          "76:  golang.org/x/text v0.13.0 // indirect",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: github.com/RaveNoX/go-jsoncommentstrip v1.0.0/go.mod h1:78ihd09MekBnJnxpICcwzCMzGrKSKYe4AqU6PDYYpjk=",
          "4: github.com/apapsch/go-jsonmerge/v2 v2.0.0 h1:axGnT1gRIfimI7gJifB699GoE/oq+F2MU7Dml6nw9rQ=",
          "5: github.com/apapsch/go-jsonmerge/v2 v2.0.0/go.mod h1:lvDnEdqiQrp0O42VQGgmlKpxL1AP2+08jFMw88y4klk=",
          "",
          "[Removed Lines]",
          "1: github.com/IceWhaleTech/CasaOS-Common v0.4.4-alpha3 h1:OzOihzq8qESNu8aEJfgqoxAECeipoXCjT70gtUKEfY0=",
          "2: github.com/IceWhaleTech/CasaOS-Common v0.4.4-alpha3/go.mod h1:iv6fJJs7IKv1tSrsbyA3Fq9xfeKNoaxhqA6IQUBeg9Q=",
          "",
          "[Added Lines]",
          "1: github.com/IceWhaleTech/CasaOS-Common v0.4.8-alpha2 h1:8PuukQvQIlkw9mkK4THKTbSDMio9I6kbXulDTBxG2d0=",
          "2: github.com/IceWhaleTech/CasaOS-Common v0.4.8-alpha2/go.mod h1:2IuYyy5qW1BE6jqC6M+tOU+WtUec1K565rLATBJ9p/0=",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7: github.com/benbjohnson/clock v1.3.1/go.mod h1:J11/hYXuz8f4ySSvYwY0FKfm+ezbsZBKZxNJlLklBHA=",
          "8: github.com/bmatcuk/doublestar v1.1.1/go.mod h1:UD6OnuiIn0yFxxA2le/rnRU1G4RaI4UvFv1sNto9p6w=",
          "9: github.com/bytedance/sonic v1.5.0/go.mod h1:ED5hyg4y6t3/9Ku1R6dU/4KyJ48DZ4jPhfY1O2AihPM=",
          "12: github.com/chenzhuoyu/base64x v0.0.0-20211019084208-fb5309c8db06/go.mod h1:DH46F32mSOjUmXrMHnKwZdA8wcEefY7UVqBKYGjpdQY=",
          "13: github.com/chenzhuoyu/base64x v0.0.0-20221115062448-fe3a3abad311 h1:qSGYFH7+jGhDF8vLC+iwCD4WpbV1EBDSzWkJODFLams=",
          "14: github.com/chenzhuoyu/base64x v0.0.0-20221115062448-fe3a3abad311/go.mod h1:b583jCggY9gE99b6G5LEC39OIiVsWj+R97kbl5odCEk=",
          "",
          "[Removed Lines]",
          "10: github.com/bytedance/sonic v1.8.7 h1:d3sry5vGgVq/OpgozRUNP6xBsSo0mtNdwliApw+SAMQ=",
          "11: github.com/bytedance/sonic v1.8.7/go.mod h1:i736AoUSYt75HyZLoJW9ERYxcy6eaN6h4BZXU064P/U=",
          "",
          "[Added Lines]",
          "10: github.com/bytedance/sonic v1.9.1 h1:6iJ6NqdoxCDr6mbY8h18oSO+cShGSMRGCEo7F2h0x8s=",
          "11: github.com/bytedance/sonic v1.9.1/go.mod h1:i736AoUSYt75HyZLoJW9ERYxcy6eaN6h4BZXU064P/U=",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "24: github.com/deepmap/oapi-codegen v1.12.4/go.mod h1:3lgHGMu6myQ2vqbbTXH2H1o4eXFTGnFiDaOaKKl5yas=",
          "25: github.com/dustin/go-humanize v1.0.1 h1:GzkhY7T5VNhEkwH0PVJgjz+fX1rhBrR7pRT3mDkpeCY=",
          "26: github.com/dustin/go-humanize v1.0.1/go.mod h1:Mu1zIs6XwVuF/gI1OepvI0qD18qycQx+mFykh5fBlto=",
          "29: github.com/gin-contrib/gzip v0.0.6 h1:NjcunTcGAj5CO1gn4N8jHOSIeRFHIbn51z6K+xaN4d4=",
          "30: github.com/gin-contrib/gzip v0.0.6/go.mod h1:QOJlmV2xmayAjkNS2Y8NQsMneuRShOU/kjovCXNuzzk=",
          "31: github.com/gin-contrib/sse v0.1.0 h1:Y/yl/+YNO8GZSjAhjMsSuLt29uWRFHdHYUb5lYOV9qE=",
          "32: github.com/gin-contrib/sse v0.1.0/go.mod h1:RHrZQHXnP2xjPF+u1gW/2HnVO7nvIa9PG3Gm+fLHvGI=",
          "33: github.com/gin-gonic/gin v1.8.1/go.mod h1:ji8BvRH1azfM+SYow9zQ6SZMvR8qOMZHmsCuWR9tTTk=",
          "36: github.com/glebarez/go-sqlite v1.21.1 h1:7MZyUPh2XTrHS7xNEHQbrhfMZuPSzhkm2A1qgg0y5NY=",
          "37: github.com/glebarez/go-sqlite v1.21.1/go.mod h1:ISs8MF6yk5cL4n/43rSOmVMGJJjHYr7L2MbZZ5Q4E2E=",
          "38: github.com/glebarez/sqlite v1.8.0 h1:02X12E2I/4C1n+v90yTqrjRa8yuo7c3KeHI3FRznCvc=",
          "",
          "[Removed Lines]",
          "27: github.com/getkin/kin-openapi v0.116.0 h1:o986hwgMzR972JzOG5j6+WTwWqllZLs1EJKMKCivs2E=",
          "28: github.com/getkin/kin-openapi v0.116.0/go.mod h1:l5e9PaFUo9fyLJCPGQeXI2ML8c3P8BHOEV2VaAVf/pc=",
          "34: github.com/gin-gonic/gin v1.9.0 h1:OjyFBKICoexlu99ctXNR2gg+c5pKrKMuyjgARg9qeY8=",
          "35: github.com/gin-gonic/gin v1.9.0/go.mod h1:W1Me9+hsUSyj3CePGrd1/QrKJMSJ1Tu/0hFEH89961k=",
          "",
          "[Added Lines]",
          "27: github.com/gabriel-vasile/mimetype v1.4.2 h1:w5qFW6JKBz9Y393Y4q372O9A7cUSequkh1Q7OhCmWKU=",
          "28: github.com/gabriel-vasile/mimetype v1.4.2/go.mod h1:zApsH/mKG4w07erKIaJPFiX0Tsq9BFQgN3qGY5GnNgA=",
          "29: github.com/getkin/kin-openapi v0.117.0 h1:QT2DyGujAL09F4NrKDHJGsUoIprlIcFVHWDVDcUFE8A=",
          "30: github.com/getkin/kin-openapi v0.117.0/go.mod h1:l5e9PaFUo9fyLJCPGQeXI2ML8c3P8BHOEV2VaAVf/pc=",
          "36: github.com/gin-gonic/gin v1.9.1 h1:4idEAncQnU5cB7BeOkPtxjfCSye0AAm1R0RVIqJ+Jmg=",
          "37: github.com/gin-gonic/gin v1.9.1/go.mod h1:hPrL7YrpYKXt5YId3A/Tnip5kqbEAP+KLuI3SUcPTeU=",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "52: github.com/go-playground/universal-translator v0.18.1 h1:Bcnm0ZwsGyWbCzImXv+pAJnYK9S473LQFuzCbDbfSFY=",
          "53: github.com/go-playground/universal-translator v0.18.1/go.mod h1:xekY+UJKNuX9WP91TpwSH2VMlDf28Uj24BCp08ZFTUY=",
          "54: github.com/go-playground/validator/v10 v10.10.0/go.mod h1:74x4gJWsvQexRdW8Pn3dXSGrTK4nAUsbPlLADvpJkos=",
          "57: github.com/go-test/deep v1.0.8 h1:TDsG77qcSprGbC6vTN8OuXp5g+J+b5Pcguhf7Zt61VM=",
          "58: github.com/go-test/deep v1.0.8/go.mod h1:5C2ZWiW0ErCdrYzpqxLbTX7MG14M9iiw8DgHncVwcsE=",
          "59: github.com/goccy/go-json v0.9.7/go.mod h1:6MelG93GURQebXPDq3khkgXZkazVtN9CRI+MGFi0w8I=",
          "",
          "[Removed Lines]",
          "55: github.com/go-playground/validator/v10 v10.12.0 h1:E4gtWgxWxp8YSxExrQFv5BpCahla0PVF2oTTEYaWQGI=",
          "56: github.com/go-playground/validator/v10 v10.12.0/go.mod h1:hCAPuzYvKdP33pxWa+2+6AIKXEKqjIUyqsNCtbsSJrA=",
          "",
          "[Added Lines]",
          "57: github.com/go-playground/validator/v10 v10.14.0 h1:vgvQWe3XCz3gIeFDm/HnTIbj6UGmg/+t63MyGU2n5js=",
          "58: github.com/go-playground/validator/v10 v10.14.0/go.mod h1:9iXMNT7sEkjXb0I+enO7QXmzG6QCsPWY4zveKFVRSyU=",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "68: github.com/golang-jwt/jwt/v4 v4.5.0/go.mod h1:m21LjoU+eqJr34lmDMbreY2eSTRJ1cv77w39/MY0Ch0=",
          "69: github.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=",
          "70: github.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=",
          "72: github.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=",
          "73: github.com/google/pprof v0.0.0-20221118152302-e6195bd50e26 h1:Xim43kblpZXfIBQsbuBVKCudVG457BR2GZFIz3uw3hQ=",
          "74: github.com/google/uuid v1.3.0 h1:t6JiXgmwXMjEs8VusXIJk2BXHsn+wx8BZdTaoZ5fu7I=",
          "",
          "[Removed Lines]",
          "71: github.com/google/go-cmp v0.5.9 h1:O2Tfq5qg4qc4AmwVlvv0oLiVAGB7enBSJ2x2DqQFi38=",
          "",
          "[Added Lines]",
          "73: github.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=",
          "74: github.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "92: github.com/klauspost/cpuid/v2 v2.2.4/go.mod h1:RVVoqg1df56z8g3pUjL/3lE5UfnlrJX8tyFgg4nqhuY=",
          "93: github.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=",
          "94: github.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=",
          "96: github.com/kr/pretty v0.3.0/go.mod h1:640gp4NfQd8pI5XOwp5fnNeVWj67G7CFk/SaSQn7NBk=",
          "97: github.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=",
          "98: github.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=",
          "99: github.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=",
          "",
          "[Removed Lines]",
          "95: github.com/kr/pretty v0.3.0 h1:WgNl7dwNpEZ6jJ9k1snq4pZsg7DOEN8hP9Xw0Tsjwk0=",
          "",
          "[Added Lines]",
          "99: github.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=",
          "100: github.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "103: github.com/labstack/gommon v0.4.0 h1:y7cvthEAEbU0yHOf4axH8ZG2NH8knB9iNSoTO8dyIk8=",
          "104: github.com/labstack/gommon v0.4.0/go.mod h1:uW6kP17uPlLJsD3ijUYn3/M5bAxtlZhMI6m3MFxTMTM=",
          "105: github.com/leodido/go-urn v1.2.1/go.mod h1:zt4jvISO2HfUBqxjfIshjdMTYS56ZS/qv49ictyFfxY=",
          "108: github.com/mailru/easyjson v0.0.0-20190614124828-94de47d64c63/go.mod h1:C1wdFJiN94OJF2b5HbByQZoLdCWB1Yqtg26g4irojpc=",
          "109: github.com/mailru/easyjson v0.0.0-20190626092158-b2ccc519800e/go.mod h1:C1wdFJiN94OJF2b5HbByQZoLdCWB1Yqtg26g4irojpc=",
          "110: github.com/mailru/easyjson v0.7.7 h1:UGYAvKxe3sBsEDzO8ZeWOSlIQfWFlxbzLZe7hwFURr0=",
          "",
          "[Removed Lines]",
          "106: github.com/leodido/go-urn v1.2.3 h1:6BE2vPT0lqoz3fmOesHZiaiFh7889ssCo2GMvLCfiuA=",
          "107: github.com/leodido/go-urn v1.2.3/go.mod h1:7ZrI8mTSeBSHl/UaRyKQW1qZeMgak41ANeCNaVckg+4=",
          "",
          "[Added Lines]",
          "110: github.com/leodido/go-urn v1.2.4 h1:XlAE/cm/ms7TE/VMVoduSpNBoyc2dOxHs5MZSwAN63Q=",
          "111: github.com/leodido/go-urn v1.2.4/go.mod h1:7ZrI8mTSeBSHl/UaRyKQW1qZeMgak41ANeCNaVckg+4=",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "114: github.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=",
          "115: github.com/mattn/go-isatty v0.0.14/go.mod h1:7GGIvUiUoEMVVmxf/4nioHXj79iQHKdU27kJ6hsGG94=",
          "116: github.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=",
          "119: github.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=",
          "120: github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd h1:TRLaZ9cD/w8PVh93nsPXa1VrQ6jlwL5oN8l14QlcNfg=",
          "121: github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=",
          "",
          "[Removed Lines]",
          "117: github.com/mattn/go-isatty v0.0.18 h1:DOKFKCQ7FNG2L1rbrmstDN4QVRdS89Nkh85u68Uwp98=",
          "118: github.com/mattn/go-isatty v0.0.18/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=",
          "",
          "[Added Lines]",
          "121: github.com/mattn/go-isatty v0.0.19 h1:JITubQf0MOLdlGRuRq+jtsDlekdYPia9ZFsB8h/APPA=",
          "122: github.com/mattn/go-isatty v0.0.19/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "124: github.com/mohae/deepcopy v0.0.0-20170929034955-c48cc78d4826 h1:RWengNIwukTxcDr9M+97sNutRR1RKhG96O6jWumTTnw=",
          "125: github.com/mohae/deepcopy v0.0.0-20170929034955-c48cc78d4826/go.mod h1:TaXosZuwdSHYgviHp1DAtfrULt5eUgsSMsZf+YrPgl8=",
          "126: github.com/pelletier/go-toml/v2 v2.0.1/go.mod h1:r9LEWfGN8R5k0VXJ+0BkIe7MYkRdwZOjgMj2KwnJFUo=",
          "129: github.com/perimeterx/marshmallow v1.1.4 h1:pZLDH9RjlLGGorbXhcaQLhfuV0pFMNfPO55FuFkxqLw=",
          "130: github.com/perimeterx/marshmallow v1.1.4/go.mod h1:dsXbUu8CRzfYP5a87xpp0xq9S3u0Vchtcl8we9tYaXw=",
          "131: github.com/pkg/diff v0.0.0-20210226163009-20ebb0f2a09e/go.mod h1:pJLUxLENpZxwdsKMEsNbx1VGcRFpLqf3715MtcvvzbA=",
          "",
          "[Removed Lines]",
          "127: github.com/pelletier/go-toml/v2 v2.0.7 h1:muncTPStnKRos5dpVKULv2FVd4bMOhNePj9CjgDb8Us=",
          "128: github.com/pelletier/go-toml/v2 v2.0.7/go.mod h1:eumQOmlWiOPt5WriQQqoM5y18pDHwha2N+QD+EUNTek=",
          "",
          "[Added Lines]",
          "131: github.com/pelletier/go-toml/v2 v2.0.8 h1:0ctb6s9mE31h0/lhu+J6OPmVeDxJn+kYnJc2jZR9tGQ=",
          "132: github.com/pelletier/go-toml/v2 v2.0.8/go.mod h1:vuYfssBdrU2XDZ9bYydBu6t+6a6PYNcZljzZR9VXg+4=",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "136: github.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec h1:W09IVJc94icq4NjY3clb7Lk8O1qJ8BdBEF8z0ibU0rE=",
          "137: github.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec/go.mod h1:qqbHyh8v60DhA7CoWK5oRCqLrMHRGoxYCSS9EjAz6Eo=",
          "138: github.com/rogpeppe/go-internal v1.6.1/go.mod h1:xXDCJY+GAPziupqXw64V24skbSoqbTEfhy4qGm1nDQc=",
          "140: github.com/rogpeppe/go-internal v1.8.0/go.mod h1:WmiCO8CzOY8rg0OYDC4/i/2WRWAB6poM+XZ2dLUbcbE=",
          "141: github.com/satori/go.uuid v1.2.0 h1:0uYX9dsZ2yD7q2RtLRtPSdGDWzjeM3TbMJP9utgA0ww=",
          "142: github.com/satori/go.uuid v1.2.0/go.mod h1:dA0hQrYB0VpLJoorglMZABFdXlWrHn1NEOzdhQKdks0=",
          "143: github.com/spkg/bom v0.0.0-20160624110644-59b7046e48ad/go.mod h1:qLr4V1qq6nMqFKkMo8ZTx3f+BZEkzsRUY10Xsm2mwU0=",
          "",
          "[Removed Lines]",
          "139: github.com/rogpeppe/go-internal v1.8.0 h1:FCbCCtXNOY3UtUuHUYaghJg4y7Fd14rXifAYUAtL9R8=",
          "",
          "[Added Lines]",
          "144: github.com/rogpeppe/go-internal v1.9.0/go.mod h1:WtVeX8xhTBvf0smdhujwtBcq4Qrzq/fJaraNFVN+nFs=",
          "145: github.com/rogpeppe/go-internal v1.10.0 h1:TMyTOH3F/DB16zRVcYyreMH6GnZZrwQVAoYjRBZyWFQ=",
          "146: github.com/rogpeppe/go-internal v1.10.0/go.mod h1:UQnix2H7Ngw/k4C5ijL5+65zddjncjaFoBhdsK/akog=",
          "147: github.com/samber/lo v1.38.1 h1:j2XEAqXKb09Am4ebOg31SpvzUTTs6EN3VfgeLUhPdXM=",
          "148: github.com/samber/lo v1.38.1/go.mod h1:+m/ZKRl6ClXCE2Lgf3MsQlWfh4bn1bz6CXEOxnEXnEA=",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "150: github.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=",
          "151: github.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=",
          "152: github.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=",
          "154: github.com/stretchr/testify v1.8.2/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=",
          "155: github.com/tidwall/gjson v1.14.4 h1:uo0p8EbA09J7RQaflQ1aBRffTR7xedD2bcIVSYxLnkM=",
          "156: github.com/tidwall/gjson v1.14.4/go.mod h1:/wbyibRr2FHMks5tjHJ5F8dMZh3AcwJEMf5vlfC0lxk=",
          "157: github.com/tidwall/match v1.1.1 h1:+Ho715JplO36QYgwN9PGYNhgZvoUSc9X2c80KVTi+GA=",
          "",
          "[Removed Lines]",
          "153: github.com/stretchr/testify v1.8.2 h1:+h33VjcLVPDHtOdpUCuF+7gSuG3yGIftsP1YvFihtJ8=",
          "",
          "[Added Lines]",
          "162: github.com/stretchr/testify v1.8.3 h1:RP3t2pwF7cMEbC1dqtB6poj3niw/9gnV4Cjg5oW5gtY=",
          "163: github.com/stretchr/testify v1.8.3/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "181: golang.org/x/arch v0.3.0 h1:02VY4/ZcO/gBOH6PUaoiptASxtXU10jazRCP865E97k=",
          "182: golang.org/x/arch v0.3.0/go.mod h1:5om86z9Hs0C8fWVUuoMHwpExlXzs5Tkyp9hOrfG7pp8=",
          "183: golang.org/x/crypto v0.0.0-20210711020723-a769d52b0f97/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=",
          "186: golang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=",
          "189: golang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "190: golang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "191: golang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "",
          "[Removed Lines]",
          "184: golang.org/x/crypto v0.8.0 h1:pd9TJtTueMTVQXzk8E2XESSMQDj/U7OUu0PqJqPXQjQ=",
          "185: golang.org/x/crypto v0.8.0/go.mod h1:mRqEX+O9/h5TFCrQhkgjo2yKi0yYA+9ecGkdQoHrywE=",
          "187: golang.org/x/net v0.9.0 h1:aWJ/m6xSmxWBx+V0XRHTlrYrPG56jKsLdTFmsSsCzOM=",
          "188: golang.org/x/net v0.9.0/go.mod h1:d48xBJpPfHeWQsugry2m+kC02ZBRGRgulfHnEXEuWns=",
          "",
          "[Added Lines]",
          "193: golang.org/x/crypto v0.14.0 h1:wBqGXzWJW6m1XrIKlAH0Hs1JJ7+9KBwnIO8v66Q9cHc=",
          "194: golang.org/x/crypto v0.14.0/go.mod h1:MVFd36DqK4CsrnJYDkBA3VC4m2GkXAM0PvzMCn4JQf4=",
          "195: golang.org/x/exp v0.0.0-20221126150942-6ab00d035af9 h1:yZNXmy+j/JpX19vZkVktWqAo7Gny4PBWYYK3zskGpx4=",
          "196: golang.org/x/exp v0.0.0-20221126150942-6ab00d035af9/go.mod h1:CxIveKay+FTh1D0yPZemJVgC/95VzuuOLq5Qi4xnoYc=",
          "198: golang.org/x/net v0.17.0 h1:pVaXccu2ozPjCXewfr1S7xza/zcXTity9cCdXQYSjIM=",
          "199: golang.org/x/net v0.17.0/go.mod h1:NxSsAGuq816PNPmqtQdLE42eU2Fs7NoRIZrHJAlaCOE=",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "195: golang.org/x/sys v0.0.0-20220704084225-05e143d24a9e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "196: golang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "197: golang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "200: golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=",
          "201: golang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=",
          "202: golang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=",
          "205: golang.org/x/time v0.3.0 h1:rg5rLMjNzMS1RkNLzCG38eapWhnYLFYXDXj2gOlr8j4=",
          "206: golang.org/x/time v0.3.0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=",
          "207: golang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=",
          "",
          "[Removed Lines]",
          "198: golang.org/x/sys v0.7.0 h1:3jlCCIQZPdOYu1h8BkNvLz8Kgwtae2cagcG/VamtZRU=",
          "199: golang.org/x/sys v0.7.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "203: golang.org/x/text v0.9.0 h1:2sjJmO8cDvYveuX97RDLsxlyUxLl+GHoLxBiRdHllBE=",
          "204: golang.org/x/text v0.9.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=",
          "",
          "[Added Lines]",
          "209: golang.org/x/sys v0.13.0 h1:Af8nKPmuFypiUBjVoU9V20FiaFXOcuZI21p0ycVYYGE=",
          "210: golang.org/x/sys v0.13.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "214: golang.org/x/text v0.13.0 h1:ablQoSUd0tRdKxZewP80B+BaqeKJuVhuRxj/dkrun3k=",
          "215: golang.org/x/text v0.13.0/go.mod h1:TvPlkZtksWOMsz7fbANvkp4WM8x/WCo/om8BMLbz+aE=",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "faeb91c26625e31db3398b0c40854aa3433bf993",
      "candidate_info": {
        "commit_hash": "faeb91c26625e31db3398b0c40854aa3433bf993",
        "repo": "IceWhaleTech/CasaOS-UserService",
        "commit_url": "https://github.com/IceWhaleTech/CasaOS-UserService/commit/faeb91c26625e31db3398b0c40854aa3433bf993",
        "files": [
          "go.mod",
          "go.sum",
          "pkg/utils/file/file.go",
          "route/v1.go",
          "route/v1/user.go"
        ],
        "message": "feat: migrate gin to echo (#44)",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum",
          "pkg/utils/file/file.go||pkg/utils/file/file.go",
          "route/v1.go||route/v1.go",
          "route/v1/user.go||route/v1/user.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod",
            "route/v1/user.go||route/v1/user.go"
          ],
          "candidate": [
            "go.mod||go.mod",
            "route/v1/user.go||route/v1/user.go"
          ]
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  github.com/coreos/go-systemd v0.0.0-20191104093116-d3cd4ed1dbcf",
          "8:  github.com/deepmap/oapi-codegen v1.12.4",
          "9:  github.com/getkin/kin-openapi v0.117.0",
          "12:  github.com/glebarez/sqlite v1.8.0",
          "13:  github.com/labstack/echo/v4 v4.10.2",
          "14:  github.com/satori/go.uuid v1.2.0",
          "",
          "[Removed Lines]",
          "10:  github.com/gin-contrib/gzip v0.0.6",
          "11:  github.com/gin-gonic/gin v1.9.1",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "29:  github.com/dustin/go-humanize v1.0.1 // indirect",
          "30:  github.com/gabriel-vasile/mimetype v1.4.2 // indirect",
          "31:  github.com/gin-contrib/sse v0.1.0 // indirect",
          "32:  github.com/glebarez/go-sqlite v1.21.1 // indirect",
          "33:  github.com/go-openapi/jsonpointer v0.19.6 // indirect",
          "34:  github.com/go-openapi/swag v0.22.3 // indirect",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30:  github.com/gin-gonic/gin v1.9.1 // indirect",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: github.com/gabriel-vasile/mimetype v1.4.2/go.mod h1:zApsH/mKG4w07erKIaJPFiX0Tsq9BFQgN3qGY5GnNgA=",
          "29: github.com/getkin/kin-openapi v0.117.0 h1:QT2DyGujAL09F4NrKDHJGsUoIprlIcFVHWDVDcUFE8A=",
          "30: github.com/getkin/kin-openapi v0.117.0/go.mod h1:l5e9PaFUo9fyLJCPGQeXI2ML8c3P8BHOEV2VaAVf/pc=",
          "33: github.com/gin-contrib/sse v0.1.0 h1:Y/yl/+YNO8GZSjAhjMsSuLt29uWRFHdHYUb5lYOV9qE=",
          "34: github.com/gin-contrib/sse v0.1.0/go.mod h1:RHrZQHXnP2xjPF+u1gW/2HnVO7nvIa9PG3Gm+fLHvGI=",
          "36: github.com/gin-gonic/gin v1.9.1 h1:4idEAncQnU5cB7BeOkPtxjfCSye0AAm1R0RVIqJ+Jmg=",
          "37: github.com/gin-gonic/gin v1.9.1/go.mod h1:hPrL7YrpYKXt5YId3A/Tnip5kqbEAP+KLuI3SUcPTeU=",
          "38: github.com/glebarez/go-sqlite v1.21.1 h1:7MZyUPh2XTrHS7xNEHQbrhfMZuPSzhkm2A1qgg0y5NY=",
          "",
          "[Removed Lines]",
          "31: github.com/gin-contrib/gzip v0.0.6 h1:NjcunTcGAj5CO1gn4N8jHOSIeRFHIbn51z6K+xaN4d4=",
          "32: github.com/gin-contrib/gzip v0.0.6/go.mod h1:QOJlmV2xmayAjkNS2Y8NQsMneuRShOU/kjovCXNuzzk=",
          "35: github.com/gin-gonic/gin v1.8.1/go.mod h1:ji8BvRH1azfM+SYow9zQ6SZMvR8qOMZHmsCuWR9tTTk=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45: github.com/go-openapi/swag v0.19.5/go.mod h1:POnQmlKehdgb5mhVOsnJFsivZCEZ/vjK9gh66Z9tfKk=",
          "46: github.com/go-openapi/swag v0.22.3 h1:yMBqmnQ0gyZvEb/+KzuWZOXgllrXT4SADYbvDaXHv/g=",
          "47: github.com/go-openapi/swag v0.22.3/go.mod h1:UzaqsxGiab7freDnrUUra0MwWfN/q7tE4j+VcZ0yl14=",
          "49: github.com/go-playground/assert/v2 v2.2.0 h1:JvknZsQTYeFEAhQwI4qEt9cyV5ONwRHC+lYKSsYSR8s=",
          "51: github.com/go-playground/locales v0.14.1 h1:EWaQ/wswjilfKLTECiXz7Rh+3BjFhfDFKv/oXslEjJA=",
          "52: github.com/go-playground/locales v0.14.1/go.mod h1:hxrqLVvrK65+Rwrd5Fc6F2O76J/NuW9t0sjnWqG1slY=",
          "54: github.com/go-playground/universal-translator v0.18.1 h1:Bcnm0ZwsGyWbCzImXv+pAJnYK9S473LQFuzCbDbfSFY=",
          "55: github.com/go-playground/universal-translator v0.18.1/go.mod h1:xekY+UJKNuX9WP91TpwSH2VMlDf28Uj24BCp08ZFTUY=",
          "57: github.com/go-playground/validator/v10 v10.14.0 h1:vgvQWe3XCz3gIeFDm/HnTIbj6UGmg/+t63MyGU2n5js=",
          "58: github.com/go-playground/validator/v10 v10.14.0/go.mod h1:9iXMNT7sEkjXb0I+enO7QXmzG6QCsPWY4zveKFVRSyU=",
          "59: github.com/go-test/deep v1.0.8 h1:TDsG77qcSprGbC6vTN8OuXp5g+J+b5Pcguhf7Zt61VM=",
          "60: github.com/go-test/deep v1.0.8/go.mod h1:5C2ZWiW0ErCdrYzpqxLbTX7MG14M9iiw8DgHncVwcsE=",
          "62: github.com/goccy/go-json v0.10.2 h1:CrxCmQqYDkv1z7lO7Wbh2HN93uovUHgrECaO5ZrCXAU=",
          "63: github.com/goccy/go-json v0.10.2/go.mod h1:6MelG93GURQebXPDq3khkgXZkazVtN9CRI+MGFi0w8I=",
          "64: github.com/godbus/dbus/v5 v5.0.4/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=",
          "",
          "[Removed Lines]",
          "48: github.com/go-playground/assert/v2 v2.0.1/go.mod h1:VDjEfimB/XKnb+ZQfWdccd7VUvScMdVu0Titje2rxJ4=",
          "50: github.com/go-playground/locales v0.14.0/go.mod h1:sawfccIbzZTqEDETgFXqTho0QybSa7l++s0DH+LDiLs=",
          "53: github.com/go-playground/universal-translator v0.18.0/go.mod h1:UvRDBj+xPUEGrFYl+lu/H90nyDXpg0fqeB/AQUGNTVA=",
          "56: github.com/go-playground/validator/v10 v10.10.0/go.mod h1:74x4gJWsvQexRdW8Pn3dXSGrTK4nAUsbPlLADvpJkos=",
          "61: github.com/goccy/go-json v0.9.7/go.mod h1:6MelG93GURQebXPDq3khkgXZkazVtN9CRI+MGFi0w8I=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "95: github.com/klauspost/cpuid/v2 v2.2.4/go.mod h1:RVVoqg1df56z8g3pUjL/3lE5UfnlrJX8tyFgg4nqhuY=",
          "96: github.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=",
          "97: github.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=",
          "99: github.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=",
          "100: github.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=",
          "101: github.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=",
          "",
          "[Removed Lines]",
          "98: github.com/kr/pretty v0.3.0/go.mod h1:640gp4NfQd8pI5XOwp5fnNeVWj67G7CFk/SaSQn7NBk=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "106: github.com/labstack/echo/v4 v4.10.2/go.mod h1:OEyqf2//K1DFdE57vw2DRgWY0M7s65IVQO2FzvI4J5k=",
          "107: github.com/labstack/gommon v0.4.0 h1:y7cvthEAEbU0yHOf4axH8ZG2NH8knB9iNSoTO8dyIk8=",
          "108: github.com/labstack/gommon v0.4.0/go.mod h1:uW6kP17uPlLJsD3ijUYn3/M5bAxtlZhMI6m3MFxTMTM=",
          "110: github.com/leodido/go-urn v1.2.4 h1:XlAE/cm/ms7TE/VMVoduSpNBoyc2dOxHs5MZSwAN63Q=",
          "111: github.com/leodido/go-urn v1.2.4/go.mod h1:7ZrI8mTSeBSHl/UaRyKQW1qZeMgak41ANeCNaVckg+4=",
          "112: github.com/mailru/easyjson v0.0.0-20190614124828-94de47d64c63/go.mod h1:C1wdFJiN94OJF2b5HbByQZoLdCWB1Yqtg26g4irojpc=",
          "",
          "[Removed Lines]",
          "109: github.com/leodido/go-urn v1.2.1/go.mod h1:zt4jvISO2HfUBqxjfIshjdMTYS56ZS/qv49ictyFfxY=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "127: github.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=",
          "128: github.com/mohae/deepcopy v0.0.0-20170929034955-c48cc78d4826 h1:RWengNIwukTxcDr9M+97sNutRR1RKhG96O6jWumTTnw=",
          "129: github.com/mohae/deepcopy v0.0.0-20170929034955-c48cc78d4826/go.mod h1:TaXosZuwdSHYgviHp1DAtfrULt5eUgsSMsZf+YrPgl8=",
          "131: github.com/pelletier/go-toml/v2 v2.0.8 h1:0ctb6s9mE31h0/lhu+J6OPmVeDxJn+kYnJc2jZR9tGQ=",
          "132: github.com/pelletier/go-toml/v2 v2.0.8/go.mod h1:vuYfssBdrU2XDZ9bYydBu6t+6a6PYNcZljzZR9VXg+4=",
          "133: github.com/perimeterx/marshmallow v1.1.4 h1:pZLDH9RjlLGGorbXhcaQLhfuV0pFMNfPO55FuFkxqLw=",
          "",
          "[Removed Lines]",
          "130: github.com/pelletier/go-toml/v2 v2.0.1/go.mod h1:r9LEWfGN8R5k0VXJ+0BkIe7MYkRdwZOjgMj2KwnJFUo=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "139: github.com/remyoudompheng/bigfft v0.0.0-20200410134404-eec4a21b6bb0/go.mod h1:qqbHyh8v60DhA7CoWK5oRCqLrMHRGoxYCSS9EjAz6Eo=",
          "140: github.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec h1:W09IVJc94icq4NjY3clb7Lk8O1qJ8BdBEF8z0ibU0rE=",
          "141: github.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec/go.mod h1:qqbHyh8v60DhA7CoWK5oRCqLrMHRGoxYCSS9EjAz6Eo=",
          "144: github.com/rogpeppe/go-internal v1.9.0/go.mod h1:WtVeX8xhTBvf0smdhujwtBcq4Qrzq/fJaraNFVN+nFs=",
          "145: github.com/rogpeppe/go-internal v1.10.0 h1:TMyTOH3F/DB16zRVcYyreMH6GnZZrwQVAoYjRBZyWFQ=",
          "146: github.com/rogpeppe/go-internal v1.10.0/go.mod h1:UQnix2H7Ngw/k4C5ijL5+65zddjncjaFoBhdsK/akog=",
          "",
          "[Removed Lines]",
          "142: github.com/rogpeppe/go-internal v1.6.1/go.mod h1:xXDCJY+GAPziupqXw64V24skbSoqbTEfhy4qGm1nDQc=",
          "143: github.com/rogpeppe/go-internal v1.8.0/go.mod h1:WmiCO8CzOY8rg0OYDC4/i/2WRWAB6poM+XZ2dLUbcbE=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "153: github.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=",
          "154: github.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=",
          "155: github.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=",
          "157: github.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=",
          "158: github.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=",
          "159: github.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=",
          "",
          "[Removed Lines]",
          "156: github.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "190: golang.org/x/arch v0.0.0-20210923205945-b76863e36670/go.mod h1:5om86z9Hs0C8fWVUuoMHwpExlXzs5Tkyp9hOrfG7pp8=",
          "191: golang.org/x/arch v0.3.0 h1:02VY4/ZcO/gBOH6PUaoiptASxtXU10jazRCP865E97k=",
          "192: golang.org/x/arch v0.3.0/go.mod h1:5om86z9Hs0C8fWVUuoMHwpExlXzs5Tkyp9hOrfG7pp8=",
          "194: golang.org/x/crypto v0.14.0 h1:wBqGXzWJW6m1XrIKlAH0Hs1JJ7+9KBwnIO8v66Q9cHc=",
          "195: golang.org/x/crypto v0.14.0/go.mod h1:MVFd36DqK4CsrnJYDkBA3VC4m2GkXAM0PvzMCn4JQf4=",
          "196: golang.org/x/exp v0.0.0-20230713183714-613f0c0eb8a1 h1:MGwJjxBy0HJshjDNfLsYO8xppfqWlA5ZT9OhtUUhTNw=",
          "197: golang.org/x/exp v0.0.0-20230713183714-613f0c0eb8a1/go.mod h1:FXUEEKJgO7OQYeo8N01OfiKP8RXMtf6e8aTskBGqWdc=",
          "199: golang.org/x/net v0.17.0 h1:pVaXccu2ozPjCXewfr1S7xza/zcXTity9cCdXQYSjIM=",
          "200: golang.org/x/net v0.17.0/go.mod h1:NxSsAGuq816PNPmqtQdLE42eU2Fs7NoRIZrHJAlaCOE=",
          "203: golang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "205: golang.org/x/sys v0.0.0-20210927094055-39ccf1dd6fa6/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "206: golang.org/x/sys v0.0.0-20211103235746-7861aae1554b/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "207: golang.org/x/sys v0.0.0-20220704084225-05e143d24a9e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "",
          "[Removed Lines]",
          "193: golang.org/x/crypto v0.0.0-20210711020723-a769d52b0f97/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=",
          "198: golang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=",
          "201: golang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "202: golang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "204: golang.org/x/sys v0.0.0-20210806184541-e5e7981a1069/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "209: golang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "210: golang.org/x/sys v0.14.0 h1:Vz7Qs629MkJkGyHxUlRHizWJRG2j8fbQKjELVSNhy7Q=",
          "211: golang.org/x/sys v0.14.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=",
          "215: golang.org/x/text v0.13.0 h1:ablQoSUd0tRdKxZewP80B+BaqeKJuVhuRxj/dkrun3k=",
          "216: golang.org/x/text v0.13.0/go.mod h1:TvPlkZtksWOMsz7fbANvkp4WM8x/WCo/om8BMLbz+aE=",
          "217: golang.org/x/time v0.3.0 h1:rg5rLMjNzMS1RkNLzCG38eapWhnYLFYXDXj2gOlr8j4=",
          "218: golang.org/x/time v0.3.0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=",
          "220: golang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=",
          "221: google.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=",
          "223: google.golang.org/protobuf v1.30.0 h1:kPPoIgf3TsEvrm0PFe15JQ+570QVxYzEvvHqChK+cng=",
          "224: google.golang.org/protobuf v1.30.0/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=",
          "225: gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=",
          "226: gopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=",
          "227: gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=",
          "228: gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=",
          "230: gopkg.in/ini.v1 v1.67.0 h1:Dgnx+6+nfE+IfzjUEISNeydPJh9AXNNsWbGP9KzCsOA=",
          "231: gopkg.in/ini.v1 v1.67.0/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=",
          "232: gopkg.in/natefinch/lumberjack.v2 v2.2.1 h1:bBRl1b0OH9s/DuPhuXpNl+VtCaJXFZ5/uEFST95x9zc=",
          "",
          "[Removed Lines]",
          "212: golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=",
          "213: golang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=",
          "214: golang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=",
          "219: golang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=",
          "222: google.golang.org/protobuf v1.28.0/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=",
          "229: gopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "pkg/utils/file/file.go||pkg/utils/file/file.go": [
          "File: pkg/utils/file/file.go -> pkg/utils/file/file.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"io\"",
          "5:  \"os\"",
          "6:  \"path\"",
          "7:  \"strings\"",
          "8: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5:  \"mime/multipart\"",
          "8:  \"path/filepath\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "144:  return err",
          "145: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "149: func SaveUploadedFile(file *multipart.FileHeader, dst string) error {",
          "150:  src, err := file.Open()",
          "151:  if err != nil {",
          "152:   return err",
          "153:  }",
          "154:  defer src.Close()",
          "156:  if err = os.MkdirAll(filepath.Dir(dst), 0o750); err != nil {",
          "157:   return err",
          "158:  }",
          "160:  out, err := os.Create(dst)",
          "161:  if err != nil {",
          "162:   return err",
          "163:  }",
          "164:  defer out.Close()",
          "166:  _, err = io.Copy(out, src)",
          "167:  return err",
          "168: }",
          "",
          "---------------"
        ],
        "route/v1.go||route/v1.go": [
          "File: route/v1.go -> route/v1.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import (",
          "4:  \"crypto/ecdsa\"",
          "8:  \"github.com/IceWhaleTech/CasaOS-Common/utils/jwt\"",
          "9:  v1 \"github.com/IceWhaleTech/CasaOS-UserService/route/v1\"",
          "10:  \"github.com/IceWhaleTech/CasaOS-UserService/service\"",
          "13: )",
          "43:   },",
          "45:  {",
          "47:   v1UsersGroup.Use()",
          "69:  }",
          "72: }",
          "",
          "[Removed Lines]",
          "5:  \"os\"",
          "7:  \"github.com/IceWhaleTech/CasaOS-Common/middleware\"",
          "11:  \"github.com/gin-contrib/gzip\"",
          "12:  \"github.com/gin-gonic/gin\"",
          "15: func InitRouter() *gin.Engine {",
          "16:  r := gin.Default()",
          "17:  r.Use(middleware.Cors())",
          "19:  r.Use(gzip.Gzip(gzip.DefaultCompression))",
          "22:  if ginMode, success := os.LookupEnv(\"GIN_MODE\"); success {",
          "23:   gin.SetMode(ginMode)",
          "24:  } else {",
          "25:   gin.SetMode(gin.ReleaseMode)",
          "26:  }",
          "28:  r.POST(\"/v1/users/register\", v1.PostUserRegister)",
          "29:  r.POST(\"/v1/users/login\", v1.PostUserLogin)",
          "30:  r.GET(\"/v1/users/name\", v1.GetUserAllUsername) // all/name",
          "31:  r.POST(\"/v1/users/refresh\", v1.PostUserRefreshToken)",
          "33:  r.GET(\"/v1/users/image\", v1.GetUserImage)",
          "35:  r.GET(\"/v1/users/status\", v1.GetUserStatus) // init/check",
          "37:  v1Group := r.Group(\"/v1\")",
          "39:  v1Group.Use(jwt.JWT(",
          "40:   func() (*ecdsa.PublicKey, error) {",
          "41:    _, publicKey := service.MyService.User().GetKeyPair()",
          "42:    return publicKey, nil",
          "44:  ))",
          "46:   v1UsersGroup := v1Group.Group(\"/users\")",
          "48:   {",
          "49:    v1UsersGroup.GET(\"/current\", v1.GetUserInfo)",
          "50:    v1UsersGroup.PUT(\"/current\", v1.PutUserInfo)",
          "51:    v1UsersGroup.PUT(\"/current/password\", v1.PutUserPassword)",
          "53:    v1UsersGroup.GET(\"/current/custom/:key\", v1.GetUserCustomConf)",
          "54:    v1UsersGroup.POST(\"/current/custom/:key\", v1.PostUserCustomConf)",
          "55:    v1UsersGroup.DELETE(\"/current/custom/:key\", v1.DeleteUserCustomConf)",
          "57:    v1UsersGroup.POST(\"/current/image/:key\", v1.PostUserUploadImage)",
          "58:    v1UsersGroup.PUT(\"/current/image/:key\", v1.PutUserImage)",
          "60:    v1UsersGroup.DELETE(\"/current/image\", v1.DeleteUserImage)",
          "62:    v1UsersGroup.PUT(\"/avatar\", v1.PutUserAvatar)",
          "63:    v1UsersGroup.GET(\"/avatar\", v1.GetUserAvatar)",
          "65:    v1UsersGroup.DELETE(\"/:id\", v1.DeleteUser)",
          "66:    v1UsersGroup.GET(\"/:username\", v1.GetUserInfoByUsername)",
          "67:    v1UsersGroup.DELETE(\"\", v1.DeleteUserAll)",
          "68:   }",
          "71:  return r",
          "",
          "[Added Lines]",
          "5:  \"net/http\"",
          "6:  \"strconv\"",
          "11:  \"github.com/labstack/echo/v4\"",
          "12:  echo_middleware \"github.com/labstack/echo/v4/middleware\"",
          "15: func InitRouter() http.Handler {",
          "16:  e := echo.New()",
          "18:  e.Use((echo_middleware.CORSWithConfig(echo_middleware.CORSConfig{",
          "19:   AllowOrigins:     []string{\"*\"},",
          "20:   AllowMethods:     []string{echo.POST, echo.GET, echo.OPTIONS, echo.PUT, echo.DELETE},",
          "21:   AllowHeaders:     []string{echo.HeaderAuthorization, echo.HeaderContentLength, echo.HeaderXCSRFToken, echo.HeaderContentType, echo.HeaderAccessControlAllowOrigin, echo.HeaderAccessControlAllowHeaders, echo.HeaderAccessControlAllowMethods, echo.HeaderConnection, echo.HeaderOrigin, echo.HeaderXRequestedWith},",
          "22:   ExposeHeaders:    []string{echo.HeaderContentLength, echo.HeaderAccessControlAllowOrigin, echo.HeaderAccessControlAllowHeaders},",
          "23:   MaxAge:           172800,",
          "24:   AllowCredentials: true,",
          "25:  })))",
          "27:  e.Use(echo_middleware.Gzip())",
          "29:  e.Use(echo_middleware.Logger())",
          "31:  e.POST(\"/v1/users/register\", v1.PostUserRegister)",
          "32:  e.POST(\"/v1/users/login\", v1.PostUserLogin)",
          "33:  e.GET(\"/v1/users/name\", v1.GetUserAllUsername) // all/name",
          "34:  e.POST(\"/v1/users/refresh\", v1.PostUserRefreshToken)",
          "36:  e.GET(\"/v1/users/image\", v1.GetUserImage)",
          "38:  e.GET(\"/v1/users/status\", v1.GetUserStatus) // init/check",
          "40:  v1Group := e.Group(\"/v1\")",
          "42:  v1UsersGroup := v1Group.Group(\"/users\")",
          "43:  v1UsersGroup.Use(echo_middleware.JWTWithConfig(echo_middleware.JWTConfig{",
          "44:   Skipper: func(c echo.Context) bool {",
          "45:    return c.RealIP() == \"::1\" || c.RealIP() == \"127.0.0.1\"",
          "46:   },",
          "47:   ParseTokenFunc: func(token string, c echo.Context) (interface{}, error) {",
          "48:    valid, claims, err := jwt.Validate(",
          "49:     token,",
          "50:     func() (*ecdsa.PublicKey, error) {",
          "51:      _, publicKey := service.MyService.User().GetKeyPair()",
          "52:      return publicKey, nil",
          "53:     })",
          "54:    if err != nil || !valid {",
          "55:     return nil, echo.ErrUnauthorized",
          "56:    }",
          "58:    c.Request().Header.Set(\"user_id\", strconv.Itoa(claims.ID))",
          "60:    return claims, nil",
          "61:   },",
          "62:   TokenLookupFuncs: []echo_middleware.ValuesExtractor{",
          "63:    func(c echo.Context) ([]string, error) {",
          "64:     if len(c.Request().Header.Get(echo.HeaderAuthorization)) > 0 {",
          "65:      return []string{c.Request().Header.Get(echo.HeaderAuthorization)}, nil",
          "66:     }",
          "67:     return []string{c.QueryParam(\"token\")}, nil",
          "68:    },",
          "70:  }))",
          "73:   v1UsersGroup.GET(\"/current\", v1.GetUserInfo)",
          "74:   v1UsersGroup.PUT(\"/current\", v1.PutUserInfo)",
          "75:   v1UsersGroup.PUT(\"/current/password\", v1.PutUserPassword)",
          "77:   v1UsersGroup.GET(\"/current/custom/:key\", v1.GetUserCustomConf)",
          "78:   v1UsersGroup.POST(\"/current/custom/:key\", v1.PostUserCustomConf)",
          "79:   v1UsersGroup.DELETE(\"/current/custom/:key\", v1.DeleteUserCustomConf)",
          "81:   v1UsersGroup.POST(\"/current/image/:key\", v1.PostUserUploadImage)",
          "82:   v1UsersGroup.PUT(\"/current/image/:key\", v1.PutUserImage)",
          "84:   v1UsersGroup.DELETE(\"/current/image\", v1.DeleteUserImage)",
          "86:   v1UsersGroup.PUT(\"/avatar\", v1.PutUserAvatar)",
          "87:   v1UsersGroup.GET(\"/avatar\", v1.GetUserAvatar)",
          "89:   v1UsersGroup.DELETE(\"/:id\", v1.DeleteUser)",
          "90:   v1UsersGroup.GET(\"/:username\", v1.GetUserInfoByUsername)",
          "91:   v1UsersGroup.DELETE(\"\", v1.DeleteUserAll)",
          "94:  return e",
          "",
          "---------------"
        ],
        "route/v1/user.go||route/v1/user.go": [
          "File: route/v1/user.go -> route/v1/user.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:  \"github.com/IceWhaleTech/CasaOS-UserService/pkg/utils/encryption\"",
          "31:  \"github.com/IceWhaleTech/CasaOS-UserService/pkg/utils/file\"",
          "32:  model2 \"github.com/IceWhaleTech/CasaOS-UserService/service/model\"",
          "33:  uuid \"github.com/satori/go.uuid\"",
          "34:  \"github.com/tidwall/gjson\"",
          "35:  \"go.uber.org/zap\"",
          "36:  \"golang.org/x/time/rate\"",
          "38:  \"github.com/IceWhaleTech/CasaOS-UserService/service\"",
          "40: )",
          "45:  json := make(map[string]string)",
          "48:  username := json[\"username\"]",
          "49:  pwd := json[\"password\"]",
          "50:  key := json[\"key\"]",
          "51:  if _, ok := service.UserRegisterHash[key]; !ok {",
          "53:    model.Result{Success: common_err.KEY_NOT_EXIST, Message: common_err.GetMsg(common_err.KEY_NOT_EXIST)})",
          "55:  }",
          "57:  if len(username) == 0 || len(pwd) == 0 {",
          "59:    model.Result{Success: common_err.INVALID_PARAMS, Message: common_err.GetMsg(common_err.INVALID_PARAMS)})",
          "61:  }",
          "62:  if len(pwd) < 6 {",
          "64:    model.Result{Success: common_err.PWD_IS_TOO_SIMPLE, Message: common_err.GetMsg(common_err.PWD_IS_TOO_SIMPLE)})",
          "66:  }",
          "67:  oldUser := service.MyService.User().GetUserInfoByUserName(username)",
          "68:  if oldUser.Id > 0 {",
          "70:    model.Result{Success: common_err.USER_EXIST, Message: common_err.GetMsg(common_err.USER_EXIST)})",
          "72:  }",
          "74:  user := model2.UserDBModel{}",
          "",
          "[Removed Lines]",
          "39:  \"github.com/gin-gonic/gin\"",
          "44: func PostUserRegister(c *gin.Context) {",
          "46:  c.ShouldBind(&json)",
          "52:   c.JSON(common_err.CLIENT_ERROR,",
          "54:   return",
          "58:   c.JSON(common_err.CLIENT_ERROR,",
          "60:   return",
          "63:   c.JSON(common_err.CLIENT_ERROR,",
          "65:   return",
          "69:   c.JSON(common_err.CLIENT_ERROR,",
          "71:   return",
          "",
          "[Added Lines]",
          "33:  \"github.com/labstack/echo/v4\"",
          "44: func PostUserRegister(ctx echo.Context) error {",
          "46:  ctx.Bind(&json)",
          "52:   return ctx.JSON(common_err.CLIENT_ERROR,",
          "57:   return ctx.JSON(common_err.CLIENT_ERROR,",
          "61:   return ctx.JSON(common_err.CLIENT_ERROR,",
          "66:   return ctx.JSON(common_err.CLIENT_ERROR,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "79:  user = service.MyService.User().CreateUser(user)",
          "80:  if user.Id == 0 {",
          "83:  }",
          "84:  file.MkDir(config.AppInfo.UserDataPath + \"/\" + strconv.Itoa(user.Id))",
          "85:  delete(service.UserRegisterHash, key)",
          "87: }",
          "89: var limiter = rate.NewLimiter(rate.Every(time.Minute), 5)",
          "",
          "[Removed Lines]",
          "81:   c.JSON(common_err.SERVICE_ERROR, model.Result{Success: common_err.SERVICE_ERROR, Message: common_err.GetMsg(common_err.SERVICE_ERROR)})",
          "82:   return",
          "86:  c.JSON(common_err.SUCCESS, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS)})",
          "",
          "[Added Lines]",
          "77:   return ctx.JSON(common_err.SERVICE_ERROR, model.Result{Success: common_err.SERVICE_ERROR, Message: common_err.GetMsg(common_err.SERVICE_ERROR)})",
          "81:  return ctx.JSON(common_err.SUCCESS, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS)})",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "101:  if !limiter.Allow() {",
          "103:    model.Result{",
          "104:     Success: common_err.TOO_MANY_LOGIN_REQUESTS,",
          "105:     Message: common_err.GetMsg(common_err.TOO_MANY_LOGIN_REQUESTS),",
          "106:    })",
          "108:  }",
          "110:  json := make(map[string]string)",
          "113:  username := json[\"username\"]",
          "115:  password := json[\"password\"]",
          "117:  if len(username) == 0 || len(password) == 0 {",
          "119:    model.Result{",
          "120:     Success: common_err.CLIENT_ERROR,",
          "121:     Message: common_err.GetMsg(common_err.INVALID_PARAMS),",
          "122:    })",
          "124:  }",
          "125:  user := service.MyService.User().GetUserAllInfoByName(username)",
          "126:  if user.Id == 0 {",
          "130:  }",
          "131:  if user.Password != encryption.GetMD5ByStr(password) {",
          "133:    model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
          "135:  }",
          "140:  privateKey, _ := service.MyService.User().GetKeyPair()",
          "142:  token := system_model.VerifyInformation{}",
          "144:  accessToken, err := jwt.GetAccessToken(user.Username, privateKey, user.Id)",
          "145:  if err != nil {",
          "147:  }",
          "148:  token.AccessToken = accessToken",
          "150:  refreshToken, err := jwt.GetRefreshToken(user.Username, privateKey, user.Id)",
          "151:  if err != nil {",
          "153:  }",
          "154:  token.RefreshToken = refreshToken",
          "",
          "[Removed Lines]",
          "99: func PostUserLogin(c *gin.Context) {",
          "102:   c.JSON(common_err.TOO_MANY_REQUEST,",
          "107:   return",
          "111:  c.ShouldBind(&json)",
          "118:   c.JSON(common_err.CLIENT_ERROR,",
          "123:   return",
          "127:   c.JSON(common_err.CLIENT_ERROR,",
          "128:    model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
          "129:   return",
          "132:   c.JSON(common_err.CLIENT_ERROR,",
          "134:   return",
          "138:  limiter = rate.NewLimiter(rate.Every(time.Minute), 5)",
          "146:   c.JSON(http.StatusInternalServerError, model.Result{Success: common_err.SERVICE_ERROR, Message: err.Error()})",
          "152:   c.JSON(http.StatusInternalServerError, model.Result{Success: common_err.SERVICE_ERROR, Message: err.Error()})",
          "",
          "[Added Lines]",
          "94: func PostUserLogin(ctx echo.Context) error {",
          "96:   return ctx.JSON(common_err.TOO_MANY_REQUEST,",
          "104:  ctx.Bind(&json)",
          "111:   return ctx.JSON(common_err.CLIENT_ERROR,",
          "119:   return ctx.JSON(common_err.CLIENT_ERROR,",
          "120:    model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "123:   return ctx.JSON(common_err.CLIENT_ERROR,",
          "133:   return ctx.JSON(http.StatusInternalServerError, model.Result{Success: common_err.SERVICE_ERROR, Message: err.Error()})",
          "139:   return ctx.JSON(http.StatusInternalServerError, model.Result{Success: common_err.SERVICE_ERROR, Message: err.Error()})",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "162:  data[\"user\"] = user",
          "165:   model.Result{",
          "166:    Success: common_err.SUCCESS,",
          "167:    Message: common_err.GetMsg(common_err.SUCCESS),",
          "",
          "[Removed Lines]",
          "164:  c.JSON(common_err.SUCCESS,",
          "",
          "[Added Lines]",
          "151:  return ctx.JSON(common_err.SUCCESS,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "182:  user := service.MyService.User().GetUserInfoById(id)",
          "183:  if user.Id == 0 {",
          "185:    model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "187:  }",
          "188:  json := make(map[string]string)",
          "191:  data := json[\"file\"]",
          "192:  imgBase64 := strings.Replace(data, \"data:image/png;base64,\", \"\", 1)",
          "193:  decodeData, err := base64.StdEncoding.DecodeString(string(imgBase64))",
          "194:  if err != nil {",
          "197:  }",
          "",
          "[Removed Lines]",
          "180: func PutUserAvatar(c *gin.Context) {",
          "181:  id := c.GetHeader(\"user_id\")",
          "184:   c.JSON(common_err.SERVICE_ERROR,",
          "186:   return",
          "189:  c.ShouldBind(&json)",
          "195:   c.JSON(http.StatusInternalServerError, model.Result{Success: common_err.SERVICE_ERROR, Message: err.Error()})",
          "196:   return",
          "",
          "[Added Lines]",
          "167: func PutUserAvatar(ctx echo.Context) error {",
          "168:  id := ctx.Request().Header.Get(\"user_id\")",
          "171:   return ctx.JSON(common_err.SERVICE_ERROR,",
          "175:  ctx.Bind(&json)",
          "181:   return ctx.JSON(http.StatusInternalServerError, model.Result{Success: common_err.SERVICE_ERROR, Message: err.Error()})",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "217:  }",
          "218:  user.Avatar = avatarPath",
          "219:  service.MyService.User().UpdateUser(user)",
          "221:   model.Result{",
          "222:    Success: common_err.SUCCESS,",
          "223:    Message: common_err.GetMsg(common_err.SUCCESS),",
          "",
          "[Removed Lines]",
          "220:  c.JSON(http.StatusOK,",
          "",
          "[Added Lines]",
          "205:  return ctx.JSON(http.StatusOK,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "237:  user := service.MyService.User().GetUserInfoById(id)",
          "238:  if user.Id == 0 {",
          "240:    model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "242:  }",
          "244:  if file.Exists(user.Avatar) {",
          "249:  }",
          "250:  user.Avatar = \"/usr/share/casaos/www/avatar.svg\"",
          "251:  if file.Exists(user.Avatar) {",
          "256:  }",
          "257:  user.Avatar = \"/var/lib/casaos/www/avatar.svg\"",
          "261: }",
          "",
          "[Removed Lines]",
          "235: func GetUserAvatar(c *gin.Context) {",
          "236:  id := c.GetHeader(\"user_id\")",
          "239:   c.JSON(common_err.SERVICE_ERROR,",
          "241:   return",
          "245:   c.Header(\"Content-Disposition\", \"attachment; filename*=utf-8''\"+url2.PathEscape(path.Base(user.Avatar)))",
          "246:   c.Header(\"Cache-Control\", \"no-cache, no-store, max-age=0, must-revalidate, value\")",
          "247:   c.File(user.Avatar)",
          "248:   return",
          "252:   c.Header(\"Content-Disposition\", \"attachment; filename*=utf-8''\"+url2.PathEscape(path.Base(user.Avatar)))",
          "253:   c.Header(\"Cache-Control\", \"no-cache, no-store, max-age=0, must-revalidate, value\")",
          "254:   c.File(user.Avatar)",
          "255:   return",
          "258:  c.Header(\"Content-Disposition\", \"attachment; filename*=utf-8''\"+url2.PathEscape(path.Base(user.Avatar)))",
          "259:  c.Header(\"Cache-Control\", \"no-cache, no-store, max-age=0, must-revalidate, value\")",
          "260:  c.File(user.Avatar)",
          "",
          "[Added Lines]",
          "220: func GetUserAvatar(ctx echo.Context) error {",
          "221:  id := ctx.Request().Header.Get(\"user_id\")",
          "224:   return ctx.JSON(common_err.SERVICE_ERROR,",
          "229:   ctx.Response().Header().Set(\"Content-Disposition\", \"attachment; filename*=utf-8''\"+url2.PathEscape(path.Base(user.Avatar)))",
          "230:   ctx.Response().Header().Set(\"Cache-Control\", \"no-cache, no-store, max-age=0, must-revalidate, value\")",
          "231:   return ctx.File(user.Avatar)",
          "236:   ctx.Response().Header().Set(\"Content-Disposition\", \"attachment; filename*=utf-8''\"+url2.PathEscape(path.Base(user.Avatar)))",
          "237:   ctx.Response().Header().Set(\"Cache-Control\", \"no-cache, no-store, max-age=0, must-revalidate, value\")",
          "238:   return ctx.File(user.Avatar)",
          "242:  ctx.Response().Header().Set(\"Content-Disposition\", \"attachment; filename*=utf-8''\"+url2.PathEscape(path.Base(user.Avatar)))",
          "243:  ctx.Response().Header().Set(\"Cache-Control\", \"no-cache, no-store, max-age=0, must-revalidate, value\")",
          "244:  return ctx.File(user.Avatar)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "273:  json := model2.UserDBModel{}",
          "275:  user := service.MyService.User().GetUserInfoById(id)",
          "276:  if user.Id == 0 {",
          "278:    model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
          "280:  }",
          "281:  if len(json.Username) > 0 {",
          "282:   u := service.MyService.User().GetUserInfoByUserName(json.Username)",
          "283:   if u.Id > 0 {",
          "285:     model.Result{Success: common_err.USER_EXIST, Message: common_err.GetMsg(common_err.USER_EXIST)})",
          "287:   }",
          "288:  }",
          "",
          "[Removed Lines]",
          "271: func PutUserInfo(c *gin.Context) {",
          "272:  id := c.GetHeader(\"user_id\")",
          "274:  c.ShouldBind(&json)",
          "277:   c.JSON(common_err.SERVICE_ERROR,",
          "279:   return",
          "284:    c.JSON(common_err.CLIENT_ERROR,",
          "286:    return",
          "",
          "[Added Lines]",
          "255: func PutUserInfo(ctx echo.Context) error {",
          "256:  id := ctx.Request().Header.Get(\"user_id\")",
          "258:  ctx.Bind(&json)",
          "261:   return ctx.JSON(common_err.SERVICE_ERROR,",
          "267:    return ctx.JSON(common_err.CLIENT_ERROR,",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "303:   json.Nickname = user.Nickname",
          "304:  }",
          "305:  service.MyService.User().UpdateUser(json)",
          "307: }",
          "",
          "[Removed Lines]",
          "306:  c.JSON(common_err.SUCCESS, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS), Data: json})",
          "",
          "[Added Lines]",
          "288:  return ctx.JSON(common_err.SUCCESS, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS), Data: json})",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "318:  json := make(map[string]string)",
          "320:  oldPwd := json[\"old_password\"]",
          "321:  pwd := json[\"password\"]",
          "322:  if len(oldPwd) == 0 || len(pwd) == 0 {",
          "325:  }",
          "326:  user := service.MyService.User().GetUserAllInfoById(id)",
          "327:  if user.Id == 0 {",
          "329:    model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "331:  }",
          "332:  if user.Password != encryption.GetMD5ByStr(oldPwd) {",
          "335:  }",
          "336:  user.Password = encryption.GetMD5ByStr(pwd)",
          "337:  service.MyService.User().UpdateUserPassword(user)",
          "338:  user.Password = \"\"",
          "340: }",
          "",
          "[Removed Lines]",
          "316: func PutUserPassword(c *gin.Context) {",
          "317:  id := c.GetHeader(\"user_id\")",
          "319:  c.ShouldBind(&json)",
          "323:   c.JSON(common_err.CLIENT_ERROR, model.Result{Success: common_err.INVALID_PARAMS, Message: common_err.GetMsg(common_err.INVALID_PARAMS)})",
          "324:   return",
          "328:   c.JSON(common_err.SERVICE_ERROR,",
          "330:   return",
          "333:   c.JSON(common_err.CLIENT_ERROR, model.Result{Success: common_err.PWD_INVALID_OLD, Message: common_err.GetMsg(common_err.PWD_INVALID_OLD)})",
          "334:   return",
          "339:  c.JSON(common_err.SUCCESS, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS), Data: user})",
          "",
          "[Added Lines]",
          "298: func PutUserPassword(ctx echo.Context) error {",
          "299:  id := ctx.Request().Header.Get(\"user_id\")",
          "301:  ctx.Bind(&json)",
          "305:   return ctx.JSON(common_err.CLIENT_ERROR, model.Result{Success: common_err.INVALID_PARAMS, Message: common_err.GetMsg(common_err.INVALID_PARAMS)})",
          "309:   return ctx.JSON(common_err.SERVICE_ERROR,",
          "313:   return ctx.JSON(common_err.CLIENT_ERROR, model.Result{Success: common_err.PWD_INVALID_OLD, Message: common_err.GetMsg(common_err.PWD_INVALID_OLD)})",
          "318:  return ctx.JSON(common_err.SUCCESS, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS), Data: user})",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "352:  json := make(map[string]string)",
          "354:  Nickname := json[\"nick_name\"]",
          "355:  if len(Nickname) == 0 {",
          "358:  }",
          "359:  user := service.MyService.User().GetUserInfoById(id)",
          "360:  if user.Id == 0 {",
          "362:    model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "364:  }",
          "365:  user.Nickname = Nickname",
          "366:  service.MyService.User().UpdateUser(user)",
          "368: }",
          "",
          "[Removed Lines]",
          "350: func PutUserNick(c *gin.Context) {",
          "351:  id := c.GetHeader(\"user_id\")",
          "353:  c.ShouldBind(&json)",
          "356:   c.JSON(http.StatusOK, model.Result{Success: common_err.INVALID_PARAMS, Message: common_err.GetMsg(common_err.INVALID_PARAMS)})",
          "357:   return",
          "361:   c.JSON(http.StatusOK,",
          "363:   return",
          "367:  c.JSON(http.StatusOK, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS), Data: user})",
          "",
          "[Added Lines]",
          "329: func PutUserNick(ctx echo.Context) error {",
          "330:  id := ctx.Request().Header.Get(\"user_id\")",
          "332:  ctx.Bind(&json)",
          "335:   return ctx.JSON(http.StatusOK, model.Result{Success: common_err.INVALID_PARAMS, Message: common_err.GetMsg(common_err.INVALID_PARAMS)})",
          "339:   return ctx.JSON(http.StatusOK,",
          "344:  return ctx.JSON(http.StatusOK, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS), Data: user})",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "380:  json := make(map[string]string)",
          "382:  desc := json[\"description\"]",
          "383:  if len(desc) == 0 {",
          "386:  }",
          "387:  user := service.MyService.User().GetUserInfoById(id)",
          "388:  if user.Id == 0 {",
          "390:    model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "392:  }",
          "393:  user.Description = desc",
          "395:  service.MyService.User().UpdateUser(user)",
          "398: }",
          "",
          "[Removed Lines]",
          "378: func PutUserDesc(c *gin.Context) {",
          "379:  id := c.GetHeader(\"user_id\")",
          "381:  c.ShouldBind(&json)",
          "384:   c.JSON(http.StatusOK, model.Result{Success: common_err.INVALID_PARAMS, Message: common_err.GetMsg(common_err.INVALID_PARAMS)})",
          "385:   return",
          "389:   c.JSON(http.StatusOK,",
          "391:   return",
          "397:  c.JSON(http.StatusOK, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS), Data: user})",
          "",
          "[Added Lines]",
          "355: func PutUserDesc(ctx echo.Context) error {",
          "356:  id := ctx.Request().Header.Get(\"user_id\")",
          "358:  ctx.Bind(&json)",
          "361:   return ctx.JSON(http.StatusOK, model.Result{Success: common_err.INVALID_PARAMS, Message: common_err.GetMsg(common_err.INVALID_PARAMS)})",
          "365:   return ctx.JSON(http.StatusOK,",
          "372:  return ctx.JSON(http.StatusOK, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS), Data: user})",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "408:  user := service.MyService.User().GetUserInfoById(id)",
          "411:   model.Result{",
          "412:    Success: common_err.SUCCESS,",
          "413:    Message: common_err.GetMsg(common_err.SUCCESS),",
          "",
          "[Removed Lines]",
          "406: func GetUserInfo(c *gin.Context) {",
          "407:  id := c.GetHeader(\"user_id\")",
          "410:  c.JSON(common_err.SUCCESS,",
          "",
          "[Added Lines]",
          "381: func GetUserInfo(ctx echo.Context) error {",
          "382:  id := ctx.Request().Header.Get(\"user_id\")",
          "385:  return ctx.JSON(common_err.SUCCESS,",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "428:  if len(username) == 0 {",
          "431:  }",
          "432:  user := service.MyService.User().GetUserInfoByUserName(username)",
          "433:  if user.Id == 0 {",
          "436:  }",
          "439:   model.Result{",
          "440:    Success: common_err.SUCCESS,",
          "441:    Message: common_err.GetMsg(common_err.SUCCESS),",
          "",
          "[Removed Lines]",
          "426: func GetUserInfoByUsername(c *gin.Context) {",
          "427:  username := c.Param(\"username\")",
          "429:   c.JSON(common_err.CLIENT_ERROR, model.Result{Success: common_err.INVALID_PARAMS, Message: common_err.GetMsg(common_err.INVALID_PARAMS)})",
          "430:   return",
          "434:   c.JSON(common_err.SERVICE_ERROR, model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "435:   return",
          "438:  c.JSON(common_err.SUCCESS,",
          "",
          "[Added Lines]",
          "401: func GetUserInfoByUsername(ctx echo.Context) error {",
          "402:  username := ctx.Param(\"username\")",
          "404:   return ctx.JSON(common_err.CLIENT_ERROR, model.Result{Success: common_err.INVALID_PARAMS, Message: common_err.GetMsg(common_err.INVALID_PARAMS)})",
          "408:   return ctx.JSON(common_err.SERVICE_ERROR, model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "411:  return ctx.JSON(common_err.SUCCESS,",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "452:  users := service.MyService.User().GetAllUserName()",
          "453:  names := []string{}",
          "454:  for _, v := range users {",
          "455:   names = append(names, v.Username)",
          "456:  }",
          "458:   model.Result{",
          "459:    Success: common_err.SUCCESS,",
          "460:    Message: common_err.GetMsg(common_err.SUCCESS),",
          "",
          "[Removed Lines]",
          "451: func GetUserAllUsername(c *gin.Context) {",
          "457:  c.JSON(common_err.SUCCESS,",
          "",
          "[Added Lines]",
          "424: func GetUserAllUsername(ctx echo.Context) error {",
          "430:  return ctx.JSON(common_err.SUCCESS,",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "473:  if len(name) == 0 {",
          "476:  }",
          "479:  user := service.MyService.User().GetUserInfoById(id)",
          "481:  if user.Id == 0 {",
          "483:    model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "485:  }",
          "486:  filePath := config.AppInfo.UserDataPath + \"/\" + id + \"/\" + name + \".json\"",
          "488:  data := file.ReadFullFile(filePath)",
          "489:  if !gjson.ValidBytes(data) {",
          "492:  }",
          "494: }",
          "",
          "[Removed Lines]",
          "471: func GetUserCustomConf(c *gin.Context) {",
          "472:  name := c.Param(\"key\")",
          "474:   c.JSON(common_err.CLIENT_ERROR, model.Result{Success: common_err.INVALID_PARAMS, Message: common_err.GetMsg(common_err.INVALID_PARAMS)})",
          "475:   return",
          "477:  id := c.GetHeader(\"user_id\")",
          "482:   c.JSON(common_err.SERVICE_ERROR,",
          "484:   return",
          "490:   c.JSON(common_err.SUCCESS, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS), Data: string(data)})",
          "491:   return",
          "493:  c.JSON(common_err.SUCCESS, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS), Data: json2.RawMessage(string(data))})",
          "",
          "[Added Lines]",
          "444: func GetUserCustomConf(ctx echo.Context) error {",
          "445:  name := ctx.Param(\"key\")",
          "447:   return ctx.JSON(common_err.CLIENT_ERROR, model.Result{Success: common_err.INVALID_PARAMS, Message: common_err.GetMsg(common_err.INVALID_PARAMS)})",
          "449:  id := ctx.Request().Header.Get(\"user_id\")",
          "454:   return ctx.JSON(common_err.SERVICE_ERROR,",
          "461:   return ctx.JSON(common_err.SUCCESS, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS), Data: string(data)})",
          "463:  return ctx.JSON(common_err.SUCCESS, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS), Data: json2.RawMessage(string(data))})",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "504:  if len(name) == 0 {",
          "507:  }",
          "509:  user := service.MyService.User().GetUserInfoById(id)",
          "510:  if user.Id == 0 {",
          "512:    model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "514:  }",
          "516:  filePath := config.AppInfo.UserDataPath + \"/\" + strconv.Itoa(user.Id)",
          "518:  if err := file.IsNotExistMkDir(filePath); err != nil {",
          "520:    model.Result{Success: common_err.SERVICE_ERROR, Message: common_err.GetMsg(common_err.SERVICE_ERROR)})",
          "522:  }",
          "524:  if err := file.WriteToPath(data, filePath, name+\".json\"); err != nil {",
          "526:    model.Result{Success: common_err.SERVICE_ERROR, Message: common_err.GetMsg(common_err.SERVICE_ERROR)})",
          "528:  }",
          "530:  if name == \"system\" {",
          "",
          "[Removed Lines]",
          "502: func PostUserCustomConf(c *gin.Context) {",
          "503:  name := c.Param(\"key\")",
          "505:   c.JSON(common_err.CLIENT_ERROR, model.Result{Success: common_err.INVALID_PARAMS, Message: common_err.GetMsg(common_err.INVALID_PARAMS)})",
          "506:   return",
          "508:  id := c.GetHeader(\"user_id\")",
          "511:   c.JSON(common_err.SERVICE_ERROR,",
          "513:   return",
          "515:  data, _ := io.ReadAll(c.Request.Body)",
          "519:   c.JSON(common_err.SERVICE_ERROR,",
          "521:   return",
          "525:   c.JSON(common_err.SERVICE_ERROR,",
          "527:   return",
          "",
          "[Added Lines]",
          "472: func PostUserCustomConf(ctx echo.Context) error {",
          "473:  name := ctx.Param(\"key\")",
          "475:   return ctx.JSON(common_err.CLIENT_ERROR, model.Result{Success: common_err.INVALID_PARAMS, Message: common_err.GetMsg(common_err.INVALID_PARAMS)})",
          "477:  id := ctx.Request().Header.Get(\"user_id\")",
          "480:   return ctx.JSON(common_err.SERVICE_ERROR,",
          "483:  data, _ := io.ReadAll(ctx.Request().Body)",
          "487:   return ctx.JSON(common_err.SERVICE_ERROR,",
          "492:   return ctx.JSON(common_err.SERVICE_ERROR,",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "533:   response, err := service.MyService.MessageBus().PublishEventWithResponse(context.Background(), common.SERVICENAME, \"zimaos:user:save_config\", dataMap)",
          "534:   if err != nil {",
          "535:    logger.Error(\"failed to publish event to message bus\", zap.Error(err), zap.Any(\"event\", string(data)))",
          "537:   }",
          "538:   if response.StatusCode() != http.StatusOK {",
          "539:    logger.Error(\"failed to publish event to message bus\", zap.String(\"status\", response.Status()), zap.Any(\"response\", response))",
          "",
          "[Removed Lines]",
          "536:    return",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "542:  }",
          "545: }",
          "",
          "[Removed Lines]",
          "544:  c.JSON(common_err.SUCCESS, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS), Data: json2.RawMessage(string(data))})",
          "",
          "[Added Lines]",
          "509:  return ctx.JSON(common_err.SUCCESS, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS), Data: json2.RawMessage(string(data))})",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "555:  if len(name) == 0 {",
          "558:  }",
          "560:  user := service.MyService.User().GetUserInfoById(id)",
          "561:  if user.Id == 0 {",
          "563:    model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "565:  }",
          "566:  filePath := config.AppInfo.UserDataPath + \"/\" + strconv.Itoa(user.Id) + \"/\" + name + \".json\"",
          "567:  err := os.Remove(filePath)",
          "568:  if err != nil {",
          "571:  }",
          "573: }",
          "",
          "[Removed Lines]",
          "553: func DeleteUserCustomConf(c *gin.Context) {",
          "554:  name := c.Param(\"key\")",
          "556:   c.JSON(common_err.CLIENT_ERROR, model.Result{Success: common_err.INVALID_PARAMS, Message: common_err.GetMsg(common_err.INVALID_PARAMS)})",
          "557:   return",
          "559:  id := c.GetHeader(\"user_id\")",
          "562:   c.JSON(common_err.SERVICE_ERROR,",
          "564:   return",
          "569:   c.JSON(common_err.SERVICE_ERROR, model.Result{Success: common_err.SERVICE_ERROR, Message: common_err.GetMsg(common_err.SERVICE_ERROR)})",
          "570:   return",
          "572:  c.JSON(common_err.SUCCESS, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS)})",
          "",
          "[Added Lines]",
          "518: func DeleteUserCustomConf(ctx echo.Context) error {",
          "519:  name := ctx.Param(\"key\")",
          "521:   return ctx.JSON(common_err.CLIENT_ERROR, model.Result{Success: common_err.INVALID_PARAMS, Message: common_err.GetMsg(common_err.INVALID_PARAMS)})",
          "523:  id := ctx.Request().Header.Get(\"user_id\")",
          "526:   return ctx.JSON(common_err.SERVICE_ERROR,",
          "532:   return ctx.JSON(common_err.SERVICE_ERROR, model.Result{Success: common_err.SERVICE_ERROR, Message: common_err.GetMsg(common_err.SERVICE_ERROR)})",
          "534:  return ctx.JSON(common_err.SUCCESS, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS)})",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "583:  service.MyService.User().DeleteUserById(id)",
          "585: }",
          "",
          "[Removed Lines]",
          "581: func DeleteUser(c *gin.Context) {",
          "582:  id := c.Param(\"id\")",
          "584:  c.JSON(common_err.SUCCESS, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS), Data: id})",
          "",
          "[Added Lines]",
          "543: func DeleteUser(ctx echo.Context) error {",
          "544:  id := ctx.Param(\"id\")",
          "546:  return ctx.JSON(common_err.SUCCESS, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS), Data: id})",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "594:  json := make(map[string]string)",
          "597:  path := json[\"path\"]",
          "599:  if len(path) == 0 || len(key) == 0 {",
          "602:  }",
          "603:  if !file.Exists(path) {",
          "606:  }",
          "608:  _, err := file.GetImageExt(path)",
          "609:  if err != nil {",
          "612:  }",
          "614:  user := service.MyService.User().GetUserInfoById(id)",
          "615:  if user.Id == 0 {",
          "618:  }",
          "619:  fstat, _ := os.Stat(path)",
          "620:  if fstat.Size() > 10<<20 {",
          "623:  }",
          "624:  ext := file.GetExt(path)",
          "625:  filePath := config.AppInfo.UserDataPath + \"/\" + strconv.Itoa(user.Id) + \"/\" + key + ext",
          "",
          "[Removed Lines]",
          "592: func PutUserImage(c *gin.Context) {",
          "593:  id := c.GetHeader(\"user_id\")",
          "595:  c.ShouldBind(&json)",
          "598:  key := c.Param(\"key\")",
          "600:   c.JSON(http.StatusOK, model.Result{Success: common_err.INVALID_PARAMS, Message: common_err.GetMsg(common_err.INVALID_PARAMS)})",
          "601:   return",
          "604:   c.JSON(http.StatusOK, model.Result{Success: common_err.FILE_DOES_NOT_EXIST, Message: common_err.GetMsg(common_err.FILE_DOES_NOT_EXIST)})",
          "605:   return",
          "610:   c.JSON(http.StatusOK, model.Result{Success: common_err.NOT_IMAGE, Message: common_err.GetMsg(common_err.NOT_IMAGE)})",
          "611:   return",
          "616:   c.JSON(http.StatusOK, model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "617:   return",
          "621:   c.JSON(http.StatusOK, model.Result{Success: common_err.IMAGE_TOO_LARGE, Message: common_err.GetMsg(common_err.IMAGE_TOO_LARGE)})",
          "622:   return",
          "",
          "[Added Lines]",
          "554: func PutUserImage(ctx echo.Context) error {",
          "555:  id := ctx.Request().Header.Get(\"user_id\")",
          "557:  ctx.Bind(&json)",
          "560:  key := ctx.Param(\"key\")",
          "562:   return ctx.JSON(http.StatusOK, model.Result{Success: common_err.INVALID_PARAMS, Message: common_err.GetMsg(common_err.INVALID_PARAMS)})",
          "565:   return ctx.JSON(http.StatusOK, model.Result{Success: common_err.FILE_DOES_NOT_EXIST, Message: common_err.GetMsg(common_err.FILE_DOES_NOT_EXIST)})",
          "570:   return ctx.JSON(http.StatusOK, model.Result{Success: common_err.NOT_IMAGE, Message: common_err.GetMsg(common_err.NOT_IMAGE)})",
          "575:   return ctx.JSON(http.StatusOK, model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "579:   return ctx.JSON(http.StatusOK, model.Result{Success: common_err.IMAGE_TOO_LARGE, Message: common_err.GetMsg(common_err.IMAGE_TOO_LARGE)})",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "629:  data[\"path\"] = filePath",
          "630:  data[\"file_name\"] = key + ext",
          "631:  data[\"online_path\"] = \"/v1/users/image?path=\" + filePath",
          "633: }",
          "",
          "[Removed Lines]",
          "632:  c.JSON(http.StatusOK, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS), Data: data})",
          "",
          "[Added Lines]",
          "589:  return ctx.JSON(http.StatusOK, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS), Data: data})",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "650:  if len(key) == 0 {",
          "653:  }",
          "654:  if err != nil {",
          "657:  }",
          "659:  _, err = file.GetImageExtByName(f.Filename)",
          "660:  if err != nil {",
          "663:  }",
          "664:  ext := filepath.Ext(f.Filename)",
          "665:  user := service.MyService.User().GetUserInfoById(id)",
          "667:  if user.Id == 0 {",
          "670:  }",
          "671:  if t == \"avatar\" {",
          "672:   key = \"avatar\"",
          "673:  }",
          "674:  path := config.AppInfo.UserDataPath + \"/\" + strconv.Itoa(user.Id) + \"/\" + key + ext",
          "677:  data := make(map[string]string, 3)",
          "678:  data[\"path\"] = path",
          "679:  data[\"file_name\"] = key + ext",
          "680:  data[\"online_path\"] = \"/v1/users/image?path=\" + path",
          "682: }",
          "",
          "[Removed Lines]",
          "645: func PostUserUploadImage(c *gin.Context) {",
          "646:  id := c.GetHeader(\"user_id\")",
          "647:  f, err := c.FormFile(\"file\")",
          "648:  key := c.Param(\"key\")",
          "649:  t := c.PostForm(\"type\")",
          "651:   c.JSON(common_err.CLIENT_ERROR, model.Result{Success: common_err.INVALID_PARAMS, Message: common_err.GetMsg(common_err.INVALID_PARAMS)})",
          "652:   return",
          "655:   c.JSON(common_err.CLIENT_ERROR, model.Result{Success: common_err.CLIENT_ERROR, Message: common_err.GetMsg(common_err.CLIENT_ERROR), Data: err.Error()})",
          "656:   return",
          "661:   c.JSON(common_err.SERVICE_ERROR, model.Result{Success: common_err.NOT_IMAGE, Message: common_err.GetMsg(common_err.NOT_IMAGE)})",
          "662:   return",
          "668:   c.JSON(common_err.SERVICE_ERROR, model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "669:   return",
          "676:  c.SaveUploadedFile(f, path)",
          "681:  c.JSON(common_err.SUCCESS, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS), Data: data})",
          "",
          "[Added Lines]",
          "602: func PostUserUploadImage(ctx echo.Context) error {",
          "603:  id := ctx.Request().Header.Get(\"user_id\")",
          "604:  f, err := ctx.FormFile(\"file\")",
          "605:  key := ctx.Param(\"key\")",
          "606:  t := ctx.FormValue(\"type\")",
          "608:   return ctx.JSON(common_err.CLIENT_ERROR, model.Result{Success: common_err.INVALID_PARAMS, Message: common_err.GetMsg(common_err.INVALID_PARAMS)})",
          "611:   return ctx.JSON(common_err.CLIENT_ERROR, model.Result{Success: common_err.CLIENT_ERROR, Message: common_err.GetMsg(common_err.CLIENT_ERROR), Data: err.Error()})",
          "616:   return ctx.JSON(common_err.SERVICE_ERROR, model.Result{Success: common_err.NOT_IMAGE, Message: common_err.GetMsg(common_err.NOT_IMAGE)})",
          "622:   return ctx.JSON(common_err.SERVICE_ERROR, model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "629:  file.SaveUploadedFile(f, path)",
          "635:  return ctx.JSON(common_err.SUCCESS, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS), Data: data})",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "691:  if len(filePath) == 0 {",
          "694:  }",
          "695:  absFilePath, err := filepath.Abs(filepath.Clean(filePath))",
          "696:  if err != nil {",
          "699:  }",
          "700:  if !file.Exists(absFilePath) {",
          "703:  }",
          "704:  if !strings.Contains(absFilePath, config.AppInfo.UserDataPath) {",
          "707:  }",
          "709:  matched, err := regexp.MatchString(`^/var/lib/casaos/\\d`, absFilePath)",
          "710:  if err != nil {",
          "713:  }",
          "714:  if !matched {",
          "717:  }",
          "719:  fileName := path.Base(absFilePath)",
          "724: }",
          "729:  if len(path) == 0 {",
          "732:  }",
          "733:  user := service.MyService.User().GetUserInfoById(id)",
          "734:  if user.Id == 0 {",
          "737:  }",
          "738:  if !file.Exists(path) {",
          "741:  }",
          "742:  if !strings.Contains(path, config.AppInfo.UserDataPath+\"/\"+strconv.Itoa(user.Id)) {",
          "745:  }",
          "746:  os.Remove(path)",
          "748: }",
          "",
          "[Removed Lines]",
          "689: func GetUserImage(c *gin.Context) {",
          "690:  filePath := c.Query(\"path\")",
          "692:   c.JSON(http.StatusNotFound, model.Result{Success: common_err.INVALID_PARAMS, Message: common_err.GetMsg(common_err.INVALID_PARAMS)})",
          "693:   return",
          "697:   c.JSON(http.StatusNotFound, model.Result{Success: common_err.INVALID_PARAMS, Message: common_err.GetMsg(common_err.INVALID_PARAMS)})",
          "698:   return",
          "701:   c.JSON(http.StatusNotFound, model.Result{Success: common_err.FILE_DOES_NOT_EXIST, Message: common_err.GetMsg(common_err.FILE_DOES_NOT_EXIST)})",
          "702:   return",
          "705:   c.JSON(http.StatusNotFound, model.Result{Success: common_err.INSUFFICIENT_PERMISSIONS, Message: common_err.GetMsg(common_err.INSUFFICIENT_PERMISSIONS)})",
          "706:   return",
          "711:   c.JSON(http.StatusNotFound, model.Result{Success: common_err.INSUFFICIENT_PERMISSIONS, Message: common_err.GetMsg(common_err.INSUFFICIENT_PERMISSIONS)})",
          "712:   return",
          "715:   c.JSON(http.StatusNotFound, model.Result{Success: common_err.INSUFFICIENT_PERMISSIONS, Message: common_err.GetMsg(common_err.INSUFFICIENT_PERMISSIONS)})",
          "716:   return",
          "722:  c.Header(\"Content-Disposition\", \"attachment; filename*=utf-8''\"+url2.PathEscape(fileName))",
          "723:  c.File(absFilePath)",
          "726: func DeleteUserImage(c *gin.Context) {",
          "727:  id := c.GetHeader(\"user_id\")",
          "728:  path := c.Query(\"path\")",
          "730:   c.JSON(common_err.CLIENT_ERROR, model.Result{Success: common_err.INVALID_PARAMS, Message: common_err.GetMsg(common_err.INVALID_PARAMS)})",
          "731:   return",
          "735:   c.JSON(common_err.SERVICE_ERROR, model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "736:   return",
          "739:   c.JSON(common_err.SERVICE_ERROR, model.Result{Success: common_err.FILE_DOES_NOT_EXIST, Message: common_err.GetMsg(common_err.FILE_DOES_NOT_EXIST)})",
          "740:   return",
          "743:   c.JSON(common_err.SERVICE_ERROR, model.Result{Success: common_err.INSUFFICIENT_PERMISSIONS, Message: common_err.GetMsg(common_err.INSUFFICIENT_PERMISSIONS)})",
          "744:   return",
          "747:  c.JSON(common_err.SUCCESS, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS)})",
          "",
          "[Added Lines]",
          "643: func GetUserImage(ctx echo.Context) error {",
          "644:  filePath := ctx.QueryParam(\"path\")",
          "646:   return ctx.JSON(http.StatusNotFound, model.Result{Success: common_err.INVALID_PARAMS, Message: common_err.GetMsg(common_err.INVALID_PARAMS)})",
          "650:   return ctx.JSON(http.StatusNotFound, model.Result{Success: common_err.INVALID_PARAMS, Message: common_err.GetMsg(common_err.INVALID_PARAMS)})",
          "653:   return ctx.JSON(http.StatusNotFound, model.Result{Success: common_err.FILE_DOES_NOT_EXIST, Message: common_err.GetMsg(common_err.FILE_DOES_NOT_EXIST)})",
          "656:   return ctx.JSON(http.StatusNotFound, model.Result{Success: common_err.INSUFFICIENT_PERMISSIONS, Message: common_err.GetMsg(common_err.INSUFFICIENT_PERMISSIONS)})",
          "661:   return ctx.JSON(http.StatusNotFound, model.Result{Success: common_err.INSUFFICIENT_PERMISSIONS, Message: common_err.GetMsg(common_err.INSUFFICIENT_PERMISSIONS)})",
          "664:   return ctx.JSON(http.StatusNotFound, model.Result{Success: common_err.INSUFFICIENT_PERMISSIONS, Message: common_err.GetMsg(common_err.INSUFFICIENT_PERMISSIONS)})",
          "670:  ctx.Response().Header().Set(\"Content-Disposition\", \"attachment; filename*=utf-8''\"+url2.PathEscape(fileName))",
          "671:  return ctx.File(absFilePath)",
          "674: func DeleteUserImage(ctx echo.Context) error {",
          "675:  id := ctx.Request().Header.Get(\"user_id\")",
          "676:  path := ctx.QueryParam(\"path\")",
          "678:   return ctx.JSON(common_err.CLIENT_ERROR, model.Result{Success: common_err.INVALID_PARAMS, Message: common_err.GetMsg(common_err.INVALID_PARAMS)})",
          "682:   return ctx.JSON(common_err.SERVICE_ERROR, model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "685:   return ctx.JSON(common_err.SERVICE_ERROR, model.Result{Success: common_err.FILE_DOES_NOT_EXIST, Message: common_err.GetMsg(common_err.FILE_DOES_NOT_EXIST)})",
          "688:   return ctx.JSON(common_err.SERVICE_ERROR, model.Result{Success: common_err.INSUFFICIENT_PERMISSIONS, Message: common_err.GetMsg(common_err.INSUFFICIENT_PERMISSIONS)})",
          "691:  return ctx.JSON(common_err.SUCCESS, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS)})",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "759:  js := make(map[string]string)",
          "761:  refresh := js[\"refresh_token\"]",
          "763:  privateKey, _ := service.MyService.User().GetKeyPair()",
          "",
          "[Removed Lines]",
          "758: func PostUserRefreshToken(c *gin.Context) {",
          "760:  c.ShouldBind(&js)",
          "",
          "[Added Lines]",
          "702: func PostUserRefreshToken(ctx echo.Context) error {",
          "704:  ctx.Bind(&js)",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "769:    return publicKey, nil",
          "770:   })",
          "771:  if err != nil {",
          "774:  }",
          "775:  if !claims.VerifyExpiresAt(time.Now(), true) || !claims.VerifyIssuer(\"refresh\", true) {",
          "778:  }",
          "780:  newAccessToken, err := jwt.GetAccessToken(claims.Username, privateKey, claims.ID)",
          "781:  if err != nil {",
          "784:  }",
          "786:  newRefreshToken, err := jwt.GetRefreshToken(claims.Username, privateKey, claims.ID)",
          "787:  if err != nil {",
          "790:  }",
          "792:  verifyInfo := system_model.VerifyInformation{",
          "",
          "[Removed Lines]",
          "772:   c.JSON(http.StatusUnauthorized, model.Result{Success: common_err.VERIFICATION_FAILURE, Message: common_err.GetMsg(common_err.VERIFICATION_FAILURE), Data: err.Error()})",
          "773:   return",
          "776:   c.JSON(http.StatusUnauthorized, model.Result{Success: common_err.VERIFICATION_FAILURE, Message: common_err.GetMsg(common_err.VERIFICATION_FAILURE)})",
          "777:   return",
          "782:   c.JSON(http.StatusInternalServerError, model.Result{Success: common_err.SERVICE_ERROR, Message: err.Error()})",
          "783:   return",
          "788:   c.JSON(http.StatusInternalServerError, model.Result{Success: common_err.SERVICE_ERROR, Message: err.Error()})",
          "789:   return",
          "",
          "[Added Lines]",
          "716:   return ctx.JSON(http.StatusUnauthorized, model.Result{Success: common_err.VERIFICATION_FAILURE, Message: common_err.GetMsg(common_err.VERIFICATION_FAILURE), Data: err.Error()})",
          "719:   return ctx.JSON(http.StatusUnauthorized, model.Result{Success: common_err.VERIFICATION_FAILURE, Message: common_err.GetMsg(common_err.VERIFICATION_FAILURE)})",
          "724:   return ctx.JSON(http.StatusInternalServerError, model.Result{Success: common_err.SERVICE_ERROR, Message: err.Error()})",
          "729:   return ctx.JSON(http.StatusInternalServerError, model.Result{Success: common_err.SERVICE_ERROR, Message: err.Error()})",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "795:   ExpiresAt:    time.Now().Add(3 * time.Hour).Unix(),",
          "796:  }",
          "799: }",
          "802:  service.MyService.User().DeleteAllUser()",
          "804: }",
          "",
          "[Removed Lines]",
          "798:  c.JSON(common_err.SUCCESS, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS), Data: verifyInfo})",
          "801: func DeleteUserAll(c *gin.Context) {",
          "803:  c.JSON(common_err.SUCCESS, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS)})",
          "",
          "[Added Lines]",
          "738:  return ctx.JSON(common_err.SUCCESS, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS), Data: verifyInfo})",
          "741: func DeleteUserAll(ctx echo.Context) error {",
          "743:  return ctx.JSON(common_err.SUCCESS, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS)})",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "814:  data := make(map[string]interface{}, 2)",
          "816:  if service.MyService.User().GetUserCount() > 0 {",
          "",
          "[Removed Lines]",
          "813: func GetUserStatus(c *gin.Context) {",
          "",
          "[Added Lines]",
          "753: func GetUserStatus(ctx echo.Context) error {",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "827:   logger.Error(\"NvidiaGPUInfoList error\", zap.Error(err))",
          "828:  }",
          "829:  data[\"gpus\"] = len(gpus)",
          "831:   model.Result{",
          "832:    Success: common_err.SUCCESS,",
          "833:    Message: common_err.GetMsg(common_err.SUCCESS),",
          "",
          "[Removed Lines]",
          "830:  c.JSON(common_err.SUCCESS,",
          "",
          "[Added Lines]",
          "770:  return ctx.JSON(common_err.SUCCESS,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7ef878cb1a6238aa427b910b42b8d6229f4b1071",
      "candidate_info": {
        "commit_hash": "7ef878cb1a6238aa427b910b42b8d6229f4b1071",
        "repo": "IceWhaleTech/CasaOS-UserService",
        "commit_url": "https://github.com/IceWhaleTech/CasaOS-UserService/commit/7ef878cb1a6238aa427b910b42b8d6229f4b1071",
        "files": [
          ".github/workflows/codecov.yml",
          ".github/workflows/release.yml",
          "common/version.go",
          "go.mod",
          "go.sum"
        ],
        "message": "upgrade dependencies (#34)\n\nSigned-off-by: Tiger Wang <tigerwang@outlook.com>",
        "before_after_code_files": [
          "common/version.go||common/version.go",
          "go.mod||go.mod",
          "go.sum||go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod"
          ],
          "candidate": [
            "go.mod||go.mod"
          ]
        }
      },
      "candidate_diff": {
        "common/version.go||common/version.go": [
          "File: common/version.go -> common/version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package common",
          "",
          "[Removed Lines]",
          "3: const Version = \"0.4.2\"",
          "",
          "[Added Lines]",
          "3: const Version = \"0.4.3\"",
          "",
          "---------------"
        ],
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: module github.com/IceWhaleTech/CasaOS-UserService",
          "5: require (",
          "7:  github.com/coreos/go-systemd v0.0.0-20191104093116-d3cd4ed1dbcf",
          "8:  github.com/deepmap/oapi-codegen v1.12.4",
          "10:  github.com/gin-contrib/gzip v0.0.6",
          "14:  github.com/satori/go.uuid v1.2.0",
          "15:  github.com/tidwall/gjson v1.14.4",
          "16:  go.uber.org/zap v1.24.0",
          "18:  gopkg.in/ini.v1 v1.67.0",
          "20: )",
          "22: require (",
          "23:  github.com/apapsch/go-jsonmerge/v2 v2.0.0 // indirect",
          "24:  github.com/benbjohnson/clock v1.3.0 // indirect",
          "25:  github.com/coreos/go-systemd/v22 v22.5.0 // indirect",
          "27:  github.com/gin-contrib/sse v0.1.0 // indirect",
          "30:  github.com/go-openapi/swag v0.22.3 // indirect",
          "35:  github.com/godbus/dbus/v5 v5.1.0 // indirect",
          "36:  github.com/golang-jwt/jwt v3.2.2+incompatible // indirect",
          "38:  github.com/google/uuid v1.3.0 // indirect",
          "39:  github.com/gorilla/mux v1.8.0 // indirect",
          "40:  github.com/invopop/yaml v0.2.0 // indirect",
          "",
          "[Removed Lines]",
          "3: go 1.19",
          "6:  github.com/IceWhaleTech/CasaOS-Common v0.4.0",
          "9:  github.com/getkin/kin-openapi v0.112.0",
          "11:  github.com/gin-gonic/gin v1.8.2",
          "12:  github.com/glebarez/sqlite v1.6.0",
          "13:  github.com/labstack/echo/v4 v4.10.0",
          "17:  golang.org/x/net v0.4.0",
          "19:  gorm.io/gorm v1.24.2",
          "26:  github.com/dustin/go-humanize v1.0.0 // indirect",
          "28:  github.com/glebarez/go-sqlite v1.20.0 // indirect",
          "29:  github.com/go-openapi/jsonpointer v0.19.5 // indirect",
          "31:  github.com/go-playground/locales v0.14.0 // indirect",
          "32:  github.com/go-playground/universal-translator v0.18.0 // indirect",
          "33:  github.com/go-playground/validator/v10 v10.11.1 // indirect",
          "34:  github.com/goccy/go-json v0.10.0 // indirect",
          "37:  github.com/golang-jwt/jwt/v4 v4.4.3 // indirect",
          "",
          "[Added Lines]",
          "3: go 1.20",
          "6:  github.com/IceWhaleTech/CasaOS-Common v0.4.3",
          "9:  github.com/getkin/kin-openapi v0.115.0",
          "11:  github.com/gin-gonic/gin v1.9.0",
          "12:  github.com/glebarez/sqlite v1.7.0",
          "13:  github.com/labstack/echo/v4 v4.10.2",
          "17:  golang.org/x/net v0.8.0",
          "19:  gorm.io/gorm v1.24.6",
          "25:  github.com/bytedance/sonic v1.8.6 // indirect",
          "26:  github.com/chenzhuoyu/base64x v0.0.0-20221115062448-fe3a3abad311 // indirect",
          "28:  github.com/dustin/go-humanize v1.0.1 // indirect",
          "30:  github.com/glebarez/go-sqlite v1.21.0 // indirect",
          "31:  github.com/go-openapi/jsonpointer v0.19.6 // indirect",
          "33:  github.com/go-playground/locales v0.14.1 // indirect",
          "34:  github.com/go-playground/universal-translator v0.18.1 // indirect",
          "35:  github.com/go-playground/validator/v10 v10.12.0 // indirect",
          "36:  github.com/goccy/go-json v0.10.2 // indirect",
          "39:  github.com/golang-jwt/jwt/v4 v4.5.0 // indirect",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "42:  github.com/jinzhu/now v1.1.5 // indirect",
          "43:  github.com/josharian/intern v1.0.0 // indirect",
          "44:  github.com/json-iterator/go v1.1.12 // indirect",
          "45:  github.com/labstack/gommon v0.4.0 // indirect",
          "47:  github.com/mailru/easyjson v0.7.7 // indirect",
          "48:  github.com/mattn/go-colorable v0.1.13 // indirect",
          "50:  github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect",
          "51:  github.com/modern-go/reflect2 v1.0.2 // indirect",
          "52:  github.com/mohae/deepcopy v0.0.0-20170929034955-c48cc78d4826 // indirect",
          "55:  github.com/tidwall/match v1.1.1 // indirect",
          "56:  github.com/tidwall/pretty v1.2.1 // indirect",
          "58:  github.com/valyala/bytebufferpool v1.0.0 // indirect",
          "59:  github.com/valyala/fasttemplate v1.2.2 // indirect",
          "60:  go.uber.org/atomic v1.10.0 // indirect",
          "65:  golang.org/x/time v0.3.0 // indirect",
          "69:  gopkg.in/yaml.v3 v3.0.1 // indirect",
          "71:  modernc.org/mathutil v1.5.0 // indirect",
          "72:  modernc.org/memory v1.5.0 // indirect",
          "74: )",
          "",
          "[Removed Lines]",
          "46:  github.com/leodido/go-urn v1.2.1 // indirect",
          "49:  github.com/mattn/go-isatty v0.0.17 // indirect",
          "53:  github.com/pelletier/go-toml/v2 v2.0.6 // indirect",
          "54:  github.com/remyoudompheng/bigfft v0.0.0-20220927061507-ef77025ab5aa // indirect",
          "57:  github.com/ugorji/go/codec v1.2.8 // indirect",
          "61:  go.uber.org/multierr v1.9.0 // indirect",
          "62:  golang.org/x/crypto v0.4.0 // indirect",
          "63:  golang.org/x/sys v0.3.0 // indirect",
          "64:  golang.org/x/text v0.5.0 // indirect",
          "66:  google.golang.org/protobuf v1.28.1 // indirect",
          "67:  gopkg.in/natefinch/lumberjack.v2 v2.0.0 // indirect",
          "68:  gopkg.in/yaml.v2 v2.4.0 // indirect",
          "70:  modernc.org/libc v1.22.2 // indirect",
          "73:  modernc.org/sqlite v1.20.1 // indirect",
          "",
          "[Added Lines]",
          "47:  github.com/klauspost/cpuid/v2 v2.2.4 // indirect",
          "49:  github.com/leodido/go-urn v1.2.2 // indirect",
          "52:  github.com/mattn/go-isatty v0.0.18 // indirect",
          "56:  github.com/pelletier/go-toml/v2 v2.0.7 // indirect",
          "57:  github.com/perimeterx/marshmallow v1.1.4 // indirect",
          "58:  github.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec // indirect",
          "61:  github.com/twitchyliquid64/golang-asm v0.15.1 // indirect",
          "62:  github.com/ugorji/go/codec v1.2.11 // indirect",
          "66:  go.uber.org/multierr v1.10.0 // indirect",
          "67:  golang.org/x/arch v0.3.0 // indirect",
          "68:  golang.org/x/crypto v0.7.0 // indirect",
          "69:  golang.org/x/sys v0.6.0 // indirect",
          "70:  golang.org/x/text v0.8.0 // indirect",
          "72:  google.golang.org/protobuf v1.30.0 // indirect",
          "73:  gopkg.in/natefinch/lumberjack.v2 v2.2.1 // indirect",
          "75:  modernc.org/libc v1.22.3 // indirect",
          "78:  modernc.org/sqlite v1.21.0 // indirect",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: github.com/RaveNoX/go-jsoncommentstrip v1.0.0/go.mod h1:78ihd09MekBnJnxpICcwzCMzGrKSKYe4AqU6PDYYpjk=",
          "5: github.com/apapsch/go-jsonmerge/v2 v2.0.0 h1:axGnT1gRIfimI7gJifB699GoE/oq+F2MU7Dml6nw9rQ=",
          "6: github.com/apapsch/go-jsonmerge/v2 v2.0.0/go.mod h1:lvDnEdqiQrp0O42VQGgmlKpxL1AP2+08jFMw88y4klk=",
          "7: github.com/benbjohnson/clock v1.3.0 h1:ip6w0uFQkncKQ979AypyG0ER7mqUSBdKLOgAle/AT8A=",
          "8: github.com/benbjohnson/clock v1.3.0/go.mod h1:J11/hYXuz8f4ySSvYwY0FKfm+ezbsZBKZxNJlLklBHA=",
          "9: github.com/bmatcuk/doublestar v1.1.1/go.mod h1:UD6OnuiIn0yFxxA2le/rnRU1G4RaI4UvFv1sNto9p6w=",
          "13: github.com/coreos/go-systemd v0.0.0-20191104093116-d3cd4ed1dbcf h1:iW4rZ826su+pqaw19uhpSCzhj44qo35pNgKFGqzDKkU=",
          "14: github.com/coreos/go-systemd v0.0.0-20191104093116-d3cd4ed1dbcf/go.mod h1:F5haX7vjVVG0kc13fIWeqUViNPyEJxv/OmvnBo0Yme4=",
          "15: github.com/coreos/go-systemd/v22 v22.5.0 h1:RrqgGjYQKalulkV8NGVIfkXQf6YYmOyiJKk8iXXhfZs=",
          "",
          "[Removed Lines]",
          "1: github.com/BurntSushi/toml v1.2.0 h1:Rt8g24XnyGTyglgET/PRUNlrUeu9F5L+7FilkXfZgs0=",
          "2: github.com/IceWhaleTech/CasaOS-Common v0.4.0 h1:PaNmbQRbqKYdAU/3XFbrk2c6/AWER22eoFyDYa4fQPU=",
          "3: github.com/IceWhaleTech/CasaOS-Common v0.4.0/go.mod h1:xcemiRsXcs1zrmQxYMyExDjZ7UHYwkJqYE71IDIV0xA=",
          "10: github.com/chzyer/logex v1.2.0/go.mod h1:9+9sk7u7pGNWYMkh0hdiL++6OeibzJccyQU4p4MedaY=",
          "11: github.com/chzyer/readline v1.5.0/go.mod h1:x22KAscuvRqlLoK9CsoYsmxoXZMMFVyOl86cAH8qUic=",
          "12: github.com/chzyer/test v0.0.0-20210722231415-061457976a23/go.mod h1:Q3SI9o4m/ZMnBNeIyt5eFwwo7qiLfzFZmjNmxjkiQlU=",
          "",
          "[Added Lines]",
          "1: github.com/IceWhaleTech/CasaOS-Common v0.4.3 h1:sYsWYhP5EyksH6D0BDv8secIRGAKUZZDTIKqACdFZQ4=",
          "2: github.com/IceWhaleTech/CasaOS-Common v0.4.3/go.mod h1:zLzM1RhoBRDdW7DFlEoPq18OhbJYsvc8yFodW0bm/QI=",
          "9: github.com/bytedance/sonic v1.5.0/go.mod h1:ED5hyg4y6t3/9Ku1R6dU/4KyJ48DZ4jPhfY1O2AihPM=",
          "10: github.com/bytedance/sonic v1.8.6 h1:aUgO9S8gvdN6SyW2EhIpAw5E4ChworywIEndZCkCVXk=",
          "11: github.com/bytedance/sonic v1.8.6/go.mod h1:i736AoUSYt75HyZLoJW9ERYxcy6eaN6h4BZXU064P/U=",
          "12: github.com/chenzhuoyu/base64x v0.0.0-20211019084208-fb5309c8db06/go.mod h1:DH46F32mSOjUmXrMHnKwZdA8wcEefY7UVqBKYGjpdQY=",
          "13: github.com/chenzhuoyu/base64x v0.0.0-20221115062448-fe3a3abad311 h1:qSGYFH7+jGhDF8vLC+iwCD4WpbV1EBDSzWkJODFLams=",
          "14: github.com/chenzhuoyu/base64x v0.0.0-20221115062448-fe3a3abad311/go.mod h1:b583jCggY9gE99b6G5LEC39OIiVsWj+R97kbl5odCEk=",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "20: github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=",
          "21: github.com/deepmap/oapi-codegen v1.12.4 h1:pPmn6qI9MuOtCz82WY2Xaw46EQjgvxednXXrP7g5Q2s=",
          "22: github.com/deepmap/oapi-codegen v1.12.4/go.mod h1:3lgHGMu6myQ2vqbbTXH2H1o4eXFTGnFiDaOaKKl5yas=",
          "27: github.com/gin-contrib/gzip v0.0.6 h1:NjcunTcGAj5CO1gn4N8jHOSIeRFHIbn51z6K+xaN4d4=",
          "28: github.com/gin-contrib/gzip v0.0.6/go.mod h1:QOJlmV2xmayAjkNS2Y8NQsMneuRShOU/kjovCXNuzzk=",
          "29: github.com/gin-contrib/sse v0.1.0 h1:Y/yl/+YNO8GZSjAhjMsSuLt29uWRFHdHYUb5lYOV9qE=",
          "30: github.com/gin-contrib/sse v0.1.0/go.mod h1:RHrZQHXnP2xjPF+u1gW/2HnVO7nvIa9PG3Gm+fLHvGI=",
          "31: github.com/gin-gonic/gin v1.8.1/go.mod h1:ji8BvRH1azfM+SYow9zQ6SZMvR8qOMZHmsCuWR9tTTk=",
          "39: github.com/go-openapi/jsonpointer v0.19.5/go.mod h1:Pl9vOtqEWErmShwVjC8pYs9cog34VGT37dQOVbmoatg=",
          "40: github.com/go-openapi/swag v0.19.5/go.mod h1:POnQmlKehdgb5mhVOsnJFsivZCEZ/vjK9gh66Z9tfKk=",
          "41: github.com/go-openapi/swag v0.22.3 h1:yMBqmnQ0gyZvEb/+KzuWZOXgllrXT4SADYbvDaXHv/g=",
          "42: github.com/go-openapi/swag v0.22.3/go.mod h1:UzaqsxGiab7freDnrUUra0MwWfN/q7tE4j+VcZ0yl14=",
          "44: github.com/go-playground/assert/v2 v2.0.1/go.mod h1:VDjEfimB/XKnb+ZQfWdccd7VUvScMdVu0Titje2rxJ4=",
          "46: github.com/go-playground/locales v0.14.0/go.mod h1:sawfccIbzZTqEDETgFXqTho0QybSa7l++s0DH+LDiLs=",
          "48: github.com/go-playground/universal-translator v0.18.0/go.mod h1:UvRDBj+xPUEGrFYl+lu/H90nyDXpg0fqeB/AQUGNTVA=",
          "49: github.com/go-playground/validator/v10 v10.10.0/go.mod h1:74x4gJWsvQexRdW8Pn3dXSGrTK4nAUsbPlLADvpJkos=",
          "52: github.com/goccy/go-json v0.9.7/go.mod h1:6MelG93GURQebXPDq3khkgXZkazVtN9CRI+MGFi0w8I=",
          "55: github.com/godbus/dbus/v5 v5.0.4/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=",
          "56: github.com/godbus/dbus/v5 v5.1.0 h1:4KLkAxT3aOY8Li4FRJe/KvhoNFFxo0m6fNuFUO8QJUk=",
          "57: github.com/godbus/dbus/v5 v5.1.0/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=",
          "58: github.com/golang-jwt/jwt v3.2.2+incompatible h1:IfV12K8xAKAnZqdXVzCZ+TOjboZ2keLg81eXfW3O+oY=",
          "59: github.com/golang-jwt/jwt v3.2.2+incompatible/go.mod h1:8pz2t5EyA70fFQQSrl6XZXzqecmYZeUEB8OUGHkxJ+I=",
          "62: github.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=",
          "64: github.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=",
          "65: github.com/google/go-cmp v0.5.9 h1:O2Tfq5qg4qc4AmwVlvv0oLiVAGB7enBSJ2x2DqQFi38=",
          "67: github.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=",
          "69: github.com/google/uuid v1.3.0 h1:t6JiXgmwXMjEs8VusXIJk2BXHsn+wx8BZdTaoZ5fu7I=",
          "70: github.com/google/uuid v1.3.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=",
          "71: github.com/gorilla/mux v1.8.0 h1:i40aqfkR1h2SlN9hojwV5ZA91wcXFOvkdNIeFDP5koI=",
          "72: github.com/gorilla/mux v1.8.0/go.mod h1:DVbg23sWSpFRCP0SfiEN6jmj59UnW/n46BH5rLB71So=",
          "74: github.com/invopop/yaml v0.1.0/go.mod h1:2XuRLgs/ouIrW3XNzuNj7J3Nvu/Dig5MXvbCEdiBN3Q=",
          "75: github.com/invopop/yaml v0.2.0 h1:7zky/qH+O0DwAyoobXUqvVBwgBFRxKoQ/3FjcVpjTMY=",
          "76: github.com/invopop/yaml v0.2.0/go.mod h1:2XuRLgs/ouIrW3XNzuNj7J3Nvu/Dig5MXvbCEdiBN3Q=",
          "77: github.com/jinzhu/inflection v1.0.0 h1:K317FqzuhWc8YvSVlFMCCUb36O/S9MCKRDI7QkRKD/E=",
          "78: github.com/jinzhu/inflection v1.0.0/go.mod h1:h+uFLlag+Qp1Va5pdKtLDYj+kHp5pxUVkryuEj+Srlc=",
          "80: github.com/jinzhu/now v1.1.5 h1:/o9tlHleP7gOFmsnYNz3RGnqzefHA47wQpKrrdTIwXQ=",
          "81: github.com/jinzhu/now v1.1.5/go.mod h1:d3SSVoowX0Lcu0IBviAWJpolVfI5UJVZZ7cO71lE/z8=",
          "82: github.com/josharian/intern v1.0.0 h1:vlS4z54oSdjm0bgjRigI+G1HpF+tI+9rE5LLzOg8HmY=",
          "",
          "[Removed Lines]",
          "23: github.com/dustin/go-humanize v1.0.0 h1:VSnTsYCnlFHaM2/igO1h6X3HA71jcobQuxemgkq4zYo=",
          "24: github.com/dustin/go-humanize v1.0.0/go.mod h1:HtrtbFcZ19U5GC7JDqmcUSB87Iq5E25KnS6fMYU6eOk=",
          "25: github.com/getkin/kin-openapi v0.112.0 h1:lnLXx3bAG53EJVI4E/w0N8i1Y/vUZUEsnrXkgnfn7/Y=",
          "26: github.com/getkin/kin-openapi v0.112.0/go.mod h1:QtwUNt0PAAgIIBEvFWYfB7dfngxtAaqCX1zYHMZDeK8=",
          "32: github.com/gin-gonic/gin v1.8.2 h1:UzKToD9/PoFj/V4rvlKqTRKnQYyz8Sc1MJlv4JHPtvY=",
          "33: github.com/gin-gonic/gin v1.8.2/go.mod h1:qw5AYuDrzRTnhvusDsrov+fDIxp9Dleuu12h8nfB398=",
          "34: github.com/glebarez/go-sqlite v1.20.0 h1:6D9uRXq3Kd+W7At+hOU2eIAeahv6qcYfO8jzmvb4Dr8=",
          "35: github.com/glebarez/go-sqlite v1.20.0/go.mod h1:uTnJoqtwMQjlULmljLT73Cg7HB+2X6evsBHODyyq1ak=",
          "36: github.com/glebarez/sqlite v1.6.0 h1:ZpvDLv4zBi2cuuQPitRiVz/5Uh6sXa5d8eBu0xNTpAo=",
          "37: github.com/glebarez/sqlite v1.6.0/go.mod h1:6D6zPU/HTrFlYmVDKqBJlmQvma90P6r7sRRdkUUZOYk=",
          "38: github.com/go-openapi/jsonpointer v0.19.5 h1:gZr+CIYByUqjcgeLXnQu2gHYQC9o73G2XUeOFYEICuY=",
          "43: github.com/go-playground/assert/v2 v2.0.1 h1:MsBgLAaY856+nPRTKrp3/OZK38U/wa0CcBYNjji3q3A=",
          "45: github.com/go-playground/locales v0.14.0 h1:u50s323jtVGugKlcYeyzC0etD1HifMjqmJqb8WugfUU=",
          "47: github.com/go-playground/universal-translator v0.18.0 h1:82dyy6p4OuJq4/CByFNOn/jYrnRPArHwAcmLoJZxyho=",
          "50: github.com/go-playground/validator/v10 v10.11.1 h1:prmOlTVv+YjZjmRmNSF3VmspqJIxJWXmqUsHwfTRRkQ=",
          "51: github.com/go-playground/validator/v10 v10.11.1/go.mod h1:i+3WkQ1FvaUjjxh1kSvIA4dMGDBiPU55YFDl0WbKdWU=",
          "53: github.com/goccy/go-json v0.10.0 h1:mXKd9Qw4NuzShiRlOXKews24ufknHO7gx30lsDyokKA=",
          "54: github.com/goccy/go-json v0.10.0/go.mod h1:6MelG93GURQebXPDq3khkgXZkazVtN9CRI+MGFi0w8I=",
          "60: github.com/golang-jwt/jwt/v4 v4.4.3 h1:Hxl6lhQFj4AnOX6MLrsCb/+7tCj7DxP7VA+2rDIq5AU=",
          "61: github.com/golang-jwt/jwt/v4 v4.4.3/go.mod h1:m21LjoU+eqJr34lmDMbreY2eSTRJ1cv77w39/MY0Ch0=",
          "63: github.com/google/go-cmp v0.5.3/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=",
          "66: github.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=",
          "68: github.com/google/pprof v0.0.0-20221118152302-e6195bd50e26/go.mod h1:dDKJzRmX4S37WGHujM7tX//fmj1uioxKzKxz3lo4HJo=",
          "73: github.com/ianlancetaylor/demangle v0.0.0-20220319035150-800ac71e25c2/go.mod h1:aYm2/VgdVmcIU8iMfdMvDMsRAQjcfZSKFby6HOFvi/w=",
          "79: github.com/jinzhu/now v1.1.4/go.mod h1:d3SSVoowX0Lcu0IBviAWJpolVfI5UJVZZ7cO71lE/z8=",
          "",
          "[Added Lines]",
          "25: github.com/dustin/go-humanize v1.0.1 h1:GzkhY7T5VNhEkwH0PVJgjz+fX1rhBrR7pRT3mDkpeCY=",
          "26: github.com/dustin/go-humanize v1.0.1/go.mod h1:Mu1zIs6XwVuF/gI1OepvI0qD18qycQx+mFykh5fBlto=",
          "27: github.com/getkin/kin-openapi v0.115.0 h1:c8WHRLVY3G8m9jQTy0/DnIuljgRwTCB5twZytQS4JyU=",
          "28: github.com/getkin/kin-openapi v0.115.0/go.mod h1:l5e9PaFUo9fyLJCPGQeXI2ML8c3P8BHOEV2VaAVf/pc=",
          "34: github.com/gin-gonic/gin v1.9.0 h1:OjyFBKICoexlu99ctXNR2gg+c5pKrKMuyjgARg9qeY8=",
          "35: github.com/gin-gonic/gin v1.9.0/go.mod h1:W1Me9+hsUSyj3CePGrd1/QrKJMSJ1Tu/0hFEH89961k=",
          "36: github.com/glebarez/go-sqlite v1.21.0 h1:b8MHPtBagkSD2gntImZPsG3o3QEXgMDxguW/GLUonHQ=",
          "37: github.com/glebarez/go-sqlite v1.21.0/go.mod h1:GodsA6yGSa3eKbvpr7dS+JaqazzVfMcjIXvx6KHhW/c=",
          "38: github.com/glebarez/sqlite v1.7.0 h1:A7Xj/KN2Lvie4Z4rrgQHY8MsbebX3NyWsL3n2i82MVI=",
          "39: github.com/glebarez/sqlite v1.7.0/go.mod h1:PkeevrRlF/1BhQBCnzcMWzgrIk7IOop+qS2jUYLfHhk=",
          "41: github.com/go-openapi/jsonpointer v0.19.6 h1:eCs3fxoIi3Wh6vtgmLTOjdhSpiqphQ+DaPn38N2ZdrE=",
          "42: github.com/go-openapi/jsonpointer v0.19.6/go.mod h1:osyAmYz/mB/C3I+WsTTSgw1ONzaLJoLCyoi6/zppojs=",
          "47: github.com/go-playground/assert/v2 v2.2.0 h1:JvknZsQTYeFEAhQwI4qEt9cyV5ONwRHC+lYKSsYSR8s=",
          "49: github.com/go-playground/locales v0.14.1 h1:EWaQ/wswjilfKLTECiXz7Rh+3BjFhfDFKv/oXslEjJA=",
          "50: github.com/go-playground/locales v0.14.1/go.mod h1:hxrqLVvrK65+Rwrd5Fc6F2O76J/NuW9t0sjnWqG1slY=",
          "52: github.com/go-playground/universal-translator v0.18.1 h1:Bcnm0ZwsGyWbCzImXv+pAJnYK9S473LQFuzCbDbfSFY=",
          "53: github.com/go-playground/universal-translator v0.18.1/go.mod h1:xekY+UJKNuX9WP91TpwSH2VMlDf28Uj24BCp08ZFTUY=",
          "55: github.com/go-playground/validator/v10 v10.12.0 h1:E4gtWgxWxp8YSxExrQFv5BpCahla0PVF2oTTEYaWQGI=",
          "56: github.com/go-playground/validator/v10 v10.12.0/go.mod h1:hCAPuzYvKdP33pxWa+2+6AIKXEKqjIUyqsNCtbsSJrA=",
          "57: github.com/go-test/deep v1.0.8 h1:TDsG77qcSprGbC6vTN8OuXp5g+J+b5Pcguhf7Zt61VM=",
          "58: github.com/go-test/deep v1.0.8/go.mod h1:5C2ZWiW0ErCdrYzpqxLbTX7MG14M9iiw8DgHncVwcsE=",
          "60: github.com/goccy/go-json v0.10.2 h1:CrxCmQqYDkv1z7lO7Wbh2HN93uovUHgrECaO5ZrCXAU=",
          "61: github.com/goccy/go-json v0.10.2/go.mod h1:6MelG93GURQebXPDq3khkgXZkazVtN9CRI+MGFi0w8I=",
          "67: github.com/golang-jwt/jwt/v4 v4.5.0 h1:7cYmW1XlMY7h7ii7UhUyChSgS5wUJEnm9uZVTGqOWzg=",
          "68: github.com/golang-jwt/jwt/v4 v4.5.0/go.mod h1:m21LjoU+eqJr34lmDMbreY2eSTRJ1cv77w39/MY0Ch0=",
          "73: github.com/google/pprof v0.0.0-20221118152302-e6195bd50e26 h1:Xim43kblpZXfIBQsbuBVKCudVG457BR2GZFIz3uw3hQ=",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "84: github.com/json-iterator/go v1.1.12 h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=",
          "85: github.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=",
          "86: github.com/juju/gnuflag v0.0.0-20171113085948-2ce1bb71843d/go.mod h1:2PavIy+JPciBPrBUjwbNvtwB6RQlve+hkpll6QSNmOE=",
          "88: github.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=",
          "89: github.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=",
          "90: github.com/kr/pretty v0.3.0 h1:WgNl7dwNpEZ6jJ9k1snq4pZsg7DOEN8hP9Xw0Tsjwk0=",
          "",
          "[Removed Lines]",
          "87: github.com/kballard/go-shellquote v0.0.0-20180428030007-95032a82bc51/go.mod h1:CzGEWj7cYgsdH8dAjBGEr58BoE7ScuLd+fwFZ44+/x8=",
          "",
          "[Added Lines]",
          "90: github.com/klauspost/cpuid/v2 v2.0.9/go.mod h1:FInQzS24/EEf25PyTYn52gqo7WaD8xa0213Md/qVLRg=",
          "91: github.com/klauspost/cpuid/v2 v2.2.4 h1:acbojRNwl3o09bUq+yDCtZFc1aiwaAAxtcn8YkZXnvk=",
          "92: github.com/klauspost/cpuid/v2 v2.2.4/go.mod h1:RVVoqg1df56z8g3pUjL/3lE5UfnlrJX8tyFgg4nqhuY=",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "93: github.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=",
          "94: github.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=",
          "95: github.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=",
          "98: github.com/labstack/gommon v0.4.0 h1:y7cvthEAEbU0yHOf4axH8ZG2NH8knB9iNSoTO8dyIk8=",
          "99: github.com/labstack/gommon v0.4.0/go.mod h1:uW6kP17uPlLJsD3ijUYn3/M5bAxtlZhMI6m3MFxTMTM=",
          "101: github.com/leodido/go-urn v1.2.1/go.mod h1:zt4jvISO2HfUBqxjfIshjdMTYS56ZS/qv49ictyFfxY=",
          "102: github.com/mailru/easyjson v0.0.0-20190614124828-94de47d64c63/go.mod h1:C1wdFJiN94OJF2b5HbByQZoLdCWB1Yqtg26g4irojpc=",
          "103: github.com/mailru/easyjson v0.0.0-20190626092158-b2ccc519800e/go.mod h1:C1wdFJiN94OJF2b5HbByQZoLdCWB1Yqtg26g4irojpc=",
          "104: github.com/mailru/easyjson v0.7.7 h1:UGYAvKxe3sBsEDzO8ZeWOSlIQfWFlxbzLZe7hwFURr0=",
          "",
          "[Removed Lines]",
          "96: github.com/labstack/echo/v4 v4.10.0 h1:5CiyngihEO4HXsz3vVsJn7f8xAlWwRr3aY6Ih280ZKA=",
          "97: github.com/labstack/echo/v4 v4.10.0/go.mod h1:S/T/5fy/GigaXnHTkh0ZGe4LpkkQysvRjFMSUTkDRNQ=",
          "100: github.com/leodido/go-urn v1.2.1 h1:BqpAaACuzVSgi/VLzGZIobT2z4v53pjosyNd9Yv6n/w=",
          "",
          "[Added Lines]",
          "101: github.com/labstack/echo/v4 v4.10.2 h1:n1jAhnq/elIFTHr1EYpiYtyKgx4RW9ccVgkqByZaN2M=",
          "102: github.com/labstack/echo/v4 v4.10.2/go.mod h1:OEyqf2//K1DFdE57vw2DRgWY0M7s65IVQO2FzvI4J5k=",
          "106: github.com/leodido/go-urn v1.2.2 h1:7z68G0FCGvDk646jz1AelTYNYWrTNm0bEcFAo147wt4=",
          "107: github.com/leodido/go-urn v1.2.2/go.mod h1:kUaIbLZWttglzwNuG0pgsh5vuV6u2YcGBYz1hIPjtOQ=",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "108: github.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=",
          "109: github.com/mattn/go-isatty v0.0.14/go.mod h1:7GGIvUiUoEMVVmxf/4nioHXj79iQHKdU27kJ6hsGG94=",
          "110: github.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=",
          "114: github.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=",
          "115: github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd h1:TRLaZ9cD/w8PVh93nsPXa1VrQ6jlwL5oN8l14QlcNfg=",
          "116: github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=",
          "",
          "[Removed Lines]",
          "111: github.com/mattn/go-isatty v0.0.17 h1:BTarxUcIeDqL27Mc+vyvdWYSL28zpIhv3RoTdsLMPng=",
          "112: github.com/mattn/go-isatty v0.0.17/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=",
          "113: github.com/mattn/go-sqlite3 v1.14.15/go.mod h1:2eHXhiwb8IkHr+BDWZGa96P6+rkvnG63S2DGjv9HUNg=",
          "",
          "[Added Lines]",
          "117: github.com/mattn/go-isatty v0.0.18 h1:DOKFKCQ7FNG2L1rbrmstDN4QVRdS89Nkh85u68Uwp98=",
          "118: github.com/mattn/go-isatty v0.0.18/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "119: github.com/mohae/deepcopy v0.0.0-20170929034955-c48cc78d4826 h1:RWengNIwukTxcDr9M+97sNutRR1RKhG96O6jWumTTnw=",
          "120: github.com/mohae/deepcopy v0.0.0-20170929034955-c48cc78d4826/go.mod h1:TaXosZuwdSHYgviHp1DAtfrULt5eUgsSMsZf+YrPgl8=",
          "121: github.com/pelletier/go-toml/v2 v2.0.1/go.mod h1:r9LEWfGN8R5k0VXJ+0BkIe7MYkRdwZOjgMj2KwnJFUo=",
          "124: github.com/pkg/diff v0.0.0-20210226163009-20ebb0f2a09e/go.mod h1:pJLUxLENpZxwdsKMEsNbx1VGcRFpLqf3715MtcvvzbA=",
          "125: github.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=",
          "126: github.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=",
          "127: github.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=",
          "128: github.com/remyoudompheng/bigfft v0.0.0-20200410134404-eec4a21b6bb0/go.mod h1:qqbHyh8v60DhA7CoWK5oRCqLrMHRGoxYCSS9EjAz6Eo=",
          "131: github.com/rogpeppe/go-internal v1.6.1/go.mod h1:xXDCJY+GAPziupqXw64V24skbSoqbTEfhy4qGm1nDQc=",
          "132: github.com/rogpeppe/go-internal v1.8.0 h1:FCbCCtXNOY3UtUuHUYaghJg4y7Fd14rXifAYUAtL9R8=",
          "133: github.com/rogpeppe/go-internal v1.8.0/go.mod h1:WmiCO8CzOY8rg0OYDC4/i/2WRWAB6poM+XZ2dLUbcbE=",
          "134: github.com/satori/go.uuid v1.2.0 h1:0uYX9dsZ2yD7q2RtLRtPSdGDWzjeM3TbMJP9utgA0ww=",
          "135: github.com/satori/go.uuid v1.2.0/go.mod h1:dA0hQrYB0VpLJoorglMZABFdXlWrHn1NEOzdhQKdks0=",
          "136: github.com/spkg/bom v0.0.0-20160624110644-59b7046e48ad/go.mod h1:qLr4V1qq6nMqFKkMo8ZTx3f+BZEkzsRUY10Xsm2mwU0=",
          "",
          "[Removed Lines]",
          "122: github.com/pelletier/go-toml/v2 v2.0.6 h1:nrzqCb7j9cDFj2coyLNLaZuJTLjWjlaz6nvTvIwycIU=",
          "123: github.com/pelletier/go-toml/v2 v2.0.6/go.mod h1:eumQOmlWiOPt5WriQQqoM5y18pDHwha2N+QD+EUNTek=",
          "129: github.com/remyoudompheng/bigfft v0.0.0-20220927061507-ef77025ab5aa h1:tEkEyxYeZ43TR55QU/hsIt9aRGBxbgGuz9CGykjvogY=",
          "130: github.com/remyoudompheng/bigfft v0.0.0-20220927061507-ef77025ab5aa/go.mod h1:qqbHyh8v60DhA7CoWK5oRCqLrMHRGoxYCSS9EjAz6Eo=",
          "",
          "[Added Lines]",
          "127: github.com/pelletier/go-toml/v2 v2.0.7 h1:muncTPStnKRos5dpVKULv2FVd4bMOhNePj9CjgDb8Us=",
          "128: github.com/pelletier/go-toml/v2 v2.0.7/go.mod h1:eumQOmlWiOPt5WriQQqoM5y18pDHwha2N+QD+EUNTek=",
          "129: github.com/perimeterx/marshmallow v1.1.4 h1:pZLDH9RjlLGGorbXhcaQLhfuV0pFMNfPO55FuFkxqLw=",
          "130: github.com/perimeterx/marshmallow v1.1.4/go.mod h1:dsXbUu8CRzfYP5a87xpp0xq9S3u0Vchtcl8we9tYaXw=",
          "136: github.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec h1:W09IVJc94icq4NjY3clb7Lk8O1qJ8BdBEF8z0ibU0rE=",
          "137: github.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec/go.mod h1:qqbHyh8v60DhA7CoWK5oRCqLrMHRGoxYCSS9EjAz6Eo=",
          "141: github.com/rwtodd/Go.Sed v0.0.0-20210816025313-55464686f9ef/go.mod h1:8AEUvGVi2uQ5b24BIhcr0GCcpd/RNAFWaN2CJFrWIIQ=",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "142: github.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=",
          "143: github.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=",
          "144: github.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=",
          "146: github.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=",
          "147: github.com/tidwall/gjson v1.14.4 h1:uo0p8EbA09J7RQaflQ1aBRffTR7xedD2bcIVSYxLnkM=",
          "148: github.com/tidwall/gjson v1.14.4/go.mod h1:/wbyibRr2FHMks5tjHJ5F8dMZh3AcwJEMf5vlfC0lxk=",
          "149: github.com/tidwall/match v1.1.1 h1:+Ho715JplO36QYgwN9PGYNhgZvoUSc9X2c80KVTi+GA=",
          "",
          "[Removed Lines]",
          "145: github.com/stretchr/testify v1.8.1 h1:w7B6lhMri9wdJUVmEZPGGhZzrYTPvgJArz7wNPgYKsk=",
          "",
          "[Added Lines]",
          "154: github.com/stretchr/testify v1.8.2 h1:+h33VjcLVPDHtOdpUCuF+7gSuG3yGIftsP1YvFihtJ8=",
          "155: github.com/stretchr/testify v1.8.2/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "151: github.com/tidwall/pretty v1.2.0/go.mod h1:ITEVvHYasfjBbM0u2Pg8T2nJnzm8xPwvNhhsoaGGjNU=",
          "152: github.com/tidwall/pretty v1.2.1 h1:qjsOFOWWQl+N3RsoF5/ssm1pHmJJwhjlSbZ51I6wMl4=",
          "153: github.com/tidwall/pretty v1.2.1/go.mod h1:ITEVvHYasfjBbM0u2Pg8T2nJnzm8xPwvNhhsoaGGjNU=",
          "154: github.com/ugorji/go v1.2.7/go.mod h1:nF9osbDWLy6bDVv/Rtoh6QgnvNDpmCalQV5urGCCS6M=",
          "155: github.com/ugorji/go/codec v1.2.7/go.mod h1:WGN1fab3R1fzQlVQTkfxVtIBhWDRqOviHU95kRgeqEY=",
          "158: github.com/valyala/bytebufferpool v1.0.0 h1:GqA5TC/0021Y/b9FG4Oi9Mr3q7XYx6KllzawFIhcdPw=",
          "159: github.com/valyala/bytebufferpool v1.0.0/go.mod h1:6bBcMArwyJ5K/AmCkWv1jt77kVWyCJ6HpOuEn7z0Csc=",
          "160: github.com/valyala/fasttemplate v1.2.1/go.mod h1:KHLXt3tVN2HBp8eijSv/kGJopbvo7S+qRAEEKiv+SiQ=",
          "161: github.com/valyala/fasttemplate v1.2.2 h1:lxLXG0uE3Qnshl9QyaK6XJxMXlQZELvChBOCmQD0Loo=",
          "162: github.com/valyala/fasttemplate v1.2.2/go.mod h1:KHLXt3tVN2HBp8eijSv/kGJopbvo7S+qRAEEKiv+SiQ=",
          "164: go.uber.org/atomic v1.10.0 h1:9qC72Qh0+3MqyJbAn8YU5xVq1frD8bn3JtD2oXtafVQ=",
          "165: go.uber.org/atomic v1.10.0/go.mod h1:LUxbIzbOniOlMKjJjyPfpl4v+PKK2cNJn91OQbhoJI0=",
          "166: go.uber.org/goleak v1.1.11 h1:wy28qYRKZgnJTxGxvye5/wgWr1EKjmUDGYox5mGlRlI=",
          "169: go.uber.org/zap v1.24.0 h1:FiJd5l1UOLj0wCgbSE0rwwXHzEdAZS6hiiSnxJN/D60=",
          "170: go.uber.org/zap v1.24.0/go.mod h1:2kMP+WWQ8aoFoedH3T2sq6iJ2yDWpHbP0f6MQbS9Gkg=",
          "174: golang.org/x/crypto v0.0.0-20210711020723-a769d52b0f97/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=",
          "182: golang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=",
          "191: golang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "193: golang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "194: golang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "195: golang.org/x/sys v0.0.0-20210806184541-e5e7981a1069/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "196: golang.org/x/sys v0.0.0-20210927094055-39ccf1dd6fa6/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "197: golang.org/x/sys v0.0.0-20211103235746-7861aae1554b/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "199: golang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "202: golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=",
          "204: golang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=",
          "205: golang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=",
          "209: golang.org/x/time v0.3.0 h1:rg5rLMjNzMS1RkNLzCG38eapWhnYLFYXDXj2gOlr8j4=",
          "210: golang.org/x/time v0.3.0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=",
          "211: golang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=",
          "216: golang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=",
          "218: google.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=",
          "219: google.golang.org/protobuf v1.28.0/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=",
          "222: gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=",
          "223: gopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=",
          "224: gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=",
          "",
          "[Removed Lines]",
          "156: github.com/ugorji/go/codec v1.2.8 h1:sgBJS6COt0b/P40VouWKdseidkDgHxYGm0SAglUHfP0=",
          "157: github.com/ugorji/go/codec v1.2.8/go.mod h1:UNopzCgEMSXjBc6AOMqYvWC1ktqTAfzJZUZgYf6w6lg=",
          "163: github.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=",
          "167: go.uber.org/multierr v1.9.0 h1:7fIwc/ZtS0q++VgcfqFDxSBZVv/Xo49/SYnDFupUwlI=",
          "168: go.uber.org/multierr v1.9.0/go.mod h1:X2jQV1h+kxSjClGpnseKVIxpmcjrj7MNnI0bnlfKTVQ=",
          "171: golang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=",
          "172: golang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=",
          "173: golang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=",
          "175: golang.org/x/crypto v0.0.0-20211215153901-e495a2d5b3d3/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=",
          "176: golang.org/x/crypto v0.4.0 h1:UVQgzMY87xqpKNgb+kDsll2Igd33HszWHFLmpaRMq/8=",
          "177: golang.org/x/crypto v0.4.0/go.mod h1:3quD/ATkf6oY+rnes5c3ExXTbLc8mueNue5/DoinL80=",
          "178: golang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=",
          "179: golang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=",
          "180: golang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=",
          "181: golang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=",
          "183: golang.org/x/net v0.0.0-20211112202133-69e39bad7dc2/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=",
          "184: golang.org/x/net v0.4.0 h1:Q5QPcMlvfxFTAPV0+07Xz/MpK9NTXu2VDUuy0FeMfaU=",
          "185: golang.org/x/net v0.4.0/go.mod h1:MBQ8lrhLObU/6UmLb4fmbmk5OcyYmqtbGd/9yIeKjEE=",
          "186: golang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "187: golang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=",
          "188: golang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=",
          "189: golang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "190: golang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "192: golang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "198: golang.org/x/sys v0.0.0-20220310020820-b874c991c1a5/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "200: golang.org/x/sys v0.3.0 h1:w8ZOecv6NaNa/zC8944JTU3vz4u6Lagfk4RPQxv92NQ=",
          "201: golang.org/x/sys v0.3.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "203: golang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=",
          "206: golang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=",
          "207: golang.org/x/text v0.5.0 h1:OLmvp0KP+FVG99Ct/qFiL/Fhk4zp4QQnZ7b2U+5piUM=",
          "208: golang.org/x/text v0.5.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=",
          "212: golang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=",
          "213: golang.org/x/tools v0.0.0-20201124115921-2c860bdd6e78/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=",
          "214: golang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=",
          "215: golang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=",
          "217: golang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=",
          "220: google.golang.org/protobuf v1.28.1 h1:d0NfwRgPtno5B1Wa6L2DAG+KivqkdutMf1UhdNx175w=",
          "221: google.golang.org/protobuf v1.28.1/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=",
          "",
          "[Added Lines]",
          "163: github.com/twitchyliquid64/golang-asm v0.15.1 h1:SU5vSMR7hnwNxj24w34ZyCi/FmDZTkS4MhqMhdFk5YI=",
          "164: github.com/twitchyliquid64/golang-asm v0.15.1/go.mod h1:a1lVb/DtPvCB8fslRZhAngC2+aY1QWCk3Cedj/Gdt08=",
          "167: github.com/ugorji/go/codec v1.2.11 h1:BMaWp1Bb6fHwEtbplGBGJ498wD+LKlNSl25MjdZY4dU=",
          "168: github.com/ugorji/go/codec v1.2.11/go.mod h1:UNopzCgEMSXjBc6AOMqYvWC1ktqTAfzJZUZgYf6w6lg=",
          "177: go.uber.org/multierr v1.10.0 h1:S0h4aNzvfcFsC3dRF1jLoaov7oRaKqRGC/pUEJ2yvPQ=",
          "178: go.uber.org/multierr v1.10.0/go.mod h1:20+QtiLqy0Nd6FdQB9TLXag12DsQkrbs3htMFfDN80Y=",
          "181: golang.org/x/arch v0.0.0-20210923205945-b76863e36670/go.mod h1:5om86z9Hs0C8fWVUuoMHwpExlXzs5Tkyp9hOrfG7pp8=",
          "182: golang.org/x/arch v0.3.0 h1:02VY4/ZcO/gBOH6PUaoiptASxtXU10jazRCP865E97k=",
          "183: golang.org/x/arch v0.3.0/go.mod h1:5om86z9Hs0C8fWVUuoMHwpExlXzs5Tkyp9hOrfG7pp8=",
          "185: golang.org/x/crypto v0.7.0 h1:AvwMYaRytfdeVt3u6mLaxYtErKYjxA2OXjJ1HHq6t3A=",
          "186: golang.org/x/crypto v0.7.0/go.mod h1:pYwdfH91IfpZVANVyUOhSIPZaFoJGxTFbZhFTx+dXZU=",
          "188: golang.org/x/net v0.8.0 h1:Zrh2ngAOFYneWTAIAPethzeaQLuHwhuBkuV6ZiRnUaQ=",
          "189: golang.org/x/net v0.8.0/go.mod h1:QVkue5JL9kW//ek3r6jTKnTFis1tRmNAW2P1shuFdJc=",
          "196: golang.org/x/sys v0.0.0-20220704084225-05e143d24a9e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "198: golang.org/x/sys v0.6.0 h1:MVltZSvRTcU2ljQOhs94SXPftV6DCNnZViHeQps87pQ=",
          "199: golang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "203: golang.org/x/text v0.8.0 h1:57P1ETyNKtuIjB4SRd15iJxuhj8Gc416Y78H3qgMh68=",
          "204: golang.org/x/text v0.8.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=",
          "211: google.golang.org/protobuf v1.30.0 h1:kPPoIgf3TsEvrm0PFe15JQ+570QVxYzEvvHqChK+cng=",
          "212: google.golang.org/protobuf v1.30.0/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "226: gopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=",
          "227: gopkg.in/ini.v1 v1.67.0 h1:Dgnx+6+nfE+IfzjUEISNeydPJh9AXNNsWbGP9KzCsOA=",
          "228: gopkg.in/ini.v1 v1.67.0/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=",
          "231: gopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=",
          "233: gopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=",
          "234: gopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=",
          "235: gopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=",
          "236: gopkg.in/yaml.v3 v3.0.0/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=",
          "237: gopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=",
          "238: gopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=",
          "260: modernc.org/mathutil v1.5.0 h1:rV0Ko/6SfM+8G+yKiyI830l3Wuz1zRutdslNoQ0kfiQ=",
          "261: modernc.org/mathutil v1.5.0/go.mod h1:mZW8CKdRPY1v87qxC/wUdX5O1qDzXMP5TH3wjfpga6E=",
          "264: modernc.org/memory v1.5.0 h1:N+/8c5rE6EqugZwHii4IFsaJ7MUhoWX07J5tC/iI5Ds=",
          "265: modernc.org/memory v1.5.0/go.mod h1:PkUhL0Mugw21sHPeskwZW4D6VscE/GQJOnIpCnW6pSU=",
          "",
          "[Removed Lines]",
          "229: gopkg.in/natefinch/lumberjack.v2 v2.0.0 h1:1Lc07Kr7qY4U2YPouBjpCLxpiyxIVoxqXgkXLknAOE8=",
          "230: gopkg.in/natefinch/lumberjack.v2 v2.0.0/go.mod h1:l0ndWWf7gzL7RNwBG7wST/UCcT4T24xpD6X8LsfU/+k=",
          "232: gopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=",
          "239: gorm.io/gorm v1.24.2 h1:9wR6CFD+G8nOusLdvkZelOEhpJVwwHzpQOUM+REd6U0=",
          "240: gorm.io/gorm v1.24.2/go.mod h1:DVrVomtaYTbqs7gB/x2uVvqnXzv0nqjB396B8cG4dBA=",
          "241: lukechampine.com/uint128 v1.1.1/go.mod h1:c4eWIwlEGaxC/+H1VguhU4PHXNWDCDMUlWdIWl2j1gk=",
          "242: lukechampine.com/uint128 v1.2.0/go.mod h1:c4eWIwlEGaxC/+H1VguhU4PHXNWDCDMUlWdIWl2j1gk=",
          "243: modernc.org/cc/v3 v3.37.0/go.mod h1:vtL+3mdHx/wcj3iEGz84rQa8vEqR6XM84v5Lcvfph20=",
          "244: modernc.org/cc/v3 v3.38.1/go.mod h1:vtL+3mdHx/wcj3iEGz84rQa8vEqR6XM84v5Lcvfph20=",
          "245: modernc.org/cc/v3 v3.40.0/go.mod h1:/bTg4dnWkSXowUO6ssQKnOV0yMVxDYNIsIrzqTFDGH0=",
          "246: modernc.org/ccgo/v3 v3.0.0-20220904174949-82d86e1b6d56/go.mod h1:YSXjPL62P2AMSxBphRHPn7IkzhVHqkvOnRKAKh+W6ZI=",
          "247: modernc.org/ccgo/v3 v3.0.0-20220910160915-348f15de615a/go.mod h1:8p47QxPkdugex9J4n9P2tLZ9bK01yngIVp00g4nomW0=",
          "248: modernc.org/ccgo/v3 v3.16.13-0.20221017192402-261537637ce8/go.mod h1:fUB3Vn0nVPReA+7IG7yZDfjv1TMWjhQP8gCxrFAtL5g=",
          "249: modernc.org/ccgo/v3 v3.16.13/go.mod h1:2Quk+5YgpImhPjv2Qsob1DnZ/4som1lJTodubIcoUkY=",
          "250: modernc.org/ccorpus v1.11.6/go.mod h1:2gEUTrWqdpH2pXsmTM1ZkjeSrUWDpjMu2T6m29L/ErQ=",
          "251: modernc.org/httpfs v1.0.6/go.mod h1:7dosgurJGp0sPaRanU53W4xZYKh14wfzX420oZADeHM=",
          "252: modernc.org/libc v1.17.4/go.mod h1:WNg2ZH56rDEwdropAJeZPQkXmDwh+JCA1s/htl6r2fA=",
          "253: modernc.org/libc v1.18.0/go.mod h1:vj6zehR5bfc98ipowQOM2nIDUZnVew/wNC/2tOGS+q0=",
          "254: modernc.org/libc v1.19.0/go.mod h1:ZRfIaEkgrYgZDl6pa4W39HgN5G/yDW+NRmNKZBDFrk0=",
          "255: modernc.org/libc v1.20.3/go.mod h1:ZRfIaEkgrYgZDl6pa4W39HgN5G/yDW+NRmNKZBDFrk0=",
          "256: modernc.org/libc v1.21.4/go.mod h1:przBsL5RDOZajTVslkugzLBj1evTue36jEomFQOoYuI=",
          "257: modernc.org/libc v1.21.5/go.mod h1:przBsL5RDOZajTVslkugzLBj1evTue36jEomFQOoYuI=",
          "258: modernc.org/libc v1.22.2 h1:4U7v51GyhlWqQmwCHj28Rdq2Yzwk55ovjFrdPjs8Hb0=",
          "259: modernc.org/libc v1.22.2/go.mod h1:uvQavJ1pZ0hIoC/jfqNoMLURIMhKzINIWypNM17puug=",
          "262: modernc.org/memory v1.3.0/go.mod h1:PkUhL0Mugw21sHPeskwZW4D6VscE/GQJOnIpCnW6pSU=",
          "263: modernc.org/memory v1.4.0/go.mod h1:PkUhL0Mugw21sHPeskwZW4D6VscE/GQJOnIpCnW6pSU=",
          "266: modernc.org/opt v0.1.1/go.mod h1:WdSiB5evDcignE70guQKxYUl14mgWtbClRi5wmkkTX0=",
          "267: modernc.org/opt v0.1.3/go.mod h1:WdSiB5evDcignE70guQKxYUl14mgWtbClRi5wmkkTX0=",
          "268: modernc.org/sqlite v1.20.0/go.mod h1:EsYz8rfOvLCiYTy5ZFsOYzoCcRMu98YYkwAcCw5YIYw=",
          "269: modernc.org/sqlite v1.20.1 h1:z6qRLw72B0VfRrJjs3l6hWkzYDx1bo0WGVrBGP4ohhM=",
          "270: modernc.org/sqlite v1.20.1/go.mod h1:fODt+bFmc/j8LcoCbMSkAuKuGmhxjG45KGc25N2705M=",
          "271: modernc.org/strutil v1.1.3/go.mod h1:MEHNA7PdEnEwLvspRMtWTNnp2nnyvMfkimT1NKNAGbw=",
          "272: modernc.org/tcl v1.15.0/go.mod h1:xRoGotBZ6dU+Zo2tca+2EqVEeMmOUBzHnhIwq4YrVnE=",
          "273: modernc.org/token v1.0.1/go.mod h1:UGzOrNV1mAFSEB63lOFHIpNRUVMvYTc6yu1SMY/XTDM=",
          "274: modernc.org/z v1.7.0/go.mod h1:hVdgNMh8ggTuRG1rGU8x+xGRFfiQUIAw0ZqlPy8+HyQ=",
          "",
          "[Added Lines]",
          "220: gopkg.in/natefinch/lumberjack.v2 v2.2.1 h1:bBRl1b0OH9s/DuPhuXpNl+VtCaJXFZ5/uEFST95x9zc=",
          "221: gopkg.in/natefinch/lumberjack.v2 v2.2.1/go.mod h1:YD8tP3GAjkrDg1eZH7EGmyESg/lsYskCTPBJVb9jqSc=",
          "229: gorm.io/gorm v1.24.6 h1:wy98aq9oFEetsc4CAbKD2SoBCdMzsbSIvSUUFJuHi5s=",
          "230: gorm.io/gorm v1.24.6/go.mod h1:L4uxeKpfBml98NYqVqwAdmV1a2nBtAec/cf3fpucW/k=",
          "231: modernc.org/libc v1.22.3 h1:D/g6O5ftAfavceqlLOFwaZuA5KYafKwmr30A6iSqoyY=",
          "232: modernc.org/libc v1.22.3/go.mod h1:MQrloYP209xa2zHome2a8HLiLm6k0UT8CoHpV74tOFw=",
          "237: modernc.org/sqlite v1.21.0 h1:4aP4MdUf15i3R3M2mx6Q90WHKz3nZLoz96zlB6tNdow=",
          "238: modernc.org/sqlite v1.21.0/go.mod h1:XwQ0wZPIh1iKb5mkvCJ3szzbhk+tykC8ZWqTRTgYRwI=",
          "239: rsc.io/pdf v0.1.1/go.mod h1:n8OzWcQ6Sp37PL01nO98y4iUCRdTGarVfzxY20ICaU4=",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "517666ba931bfaf53e46d6ebd62aa446d4224cde",
      "candidate_info": {
        "commit_hash": "517666ba931bfaf53e46d6ebd62aa446d4224cde",
        "repo": "IceWhaleTech/CasaOS-UserService",
        "commit_url": "https://github.com/IceWhaleTech/CasaOS-UserService/commit/517666ba931bfaf53e46d6ebd62aa446d4224cde",
        "files": [
          "go.mod",
          "go.sum",
          "route/v1/user.go"
        ],
        "message": "fix: fix security issues",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum",
          "route/v1/user.go||route/v1/user.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod",
            "route/v1/user.go||route/v1/user.go"
          ],
          "candidate": [
            "go.mod||go.mod",
            "route/v1/user.go||route/v1/user.go"
          ]
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: go 1.20",
          "5: require (",
          "7:  github.com/coreos/go-systemd v0.0.0-20191104093116-d3cd4ed1dbcf",
          "8:  github.com/deepmap/oapi-codegen v1.12.4",
          "9:  github.com/getkin/kin-openapi v0.117.0",
          "",
          "[Removed Lines]",
          "6:  github.com/IceWhaleTech/CasaOS-Common v0.4.8-alpha3",
          "",
          "[Added Lines]",
          "6:  github.com/IceWhaleTech/CasaOS-Common v0.4.8-alpha10",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "14:  github.com/satori/go.uuid v1.2.0",
          "15:  github.com/tidwall/gjson v1.14.4",
          "16:  go.uber.org/zap v1.24.0",
          "18:  gopkg.in/ini.v1 v1.67.0",
          "19:  gorm.io/gorm v1.25.0",
          "20: )",
          "",
          "[Removed Lines]",
          "17:  golang.org/x/net v0.17.0",
          "",
          "[Added Lines]",
          "17:  golang.org/x/net v0.20.0",
          "18:  golang.org/x/time v0.3.0",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "22: require (",
          "23:  github.com/apapsch/go-jsonmerge/v2 v2.0.0 // indirect",
          "24:  github.com/benbjohnson/clock v1.3.1 // indirect",
          "27:  github.com/coreos/go-systemd/v22 v22.5.0 // indirect",
          "28:  github.com/dustin/go-humanize v1.0.1 // indirect",
          "30:  github.com/gin-contrib/sse v0.1.0 // indirect",
          "31:  github.com/glebarez/go-sqlite v1.21.1 // indirect",
          "32:  github.com/go-openapi/jsonpointer v0.19.6 // indirect",
          "33:  github.com/go-openapi/swag v0.22.3 // indirect",
          "34:  github.com/go-playground/locales v0.14.1 // indirect",
          "35:  github.com/go-playground/universal-translator v0.18.1 // indirect",
          "37:  github.com/goccy/go-json v0.10.2 // indirect",
          "38:  github.com/godbus/dbus/v5 v5.1.0 // indirect",
          "39:  github.com/golang-jwt/jwt v3.2.2+incompatible // indirect",
          "",
          "[Removed Lines]",
          "25:  github.com/bytedance/sonic v1.9.1 // indirect",
          "26:  github.com/chenzhuoyu/base64x v0.0.0-20221115062448-fe3a3abad311 // indirect",
          "29:  github.com/gabriel-vasile/mimetype v1.4.2 // indirect",
          "36:  github.com/go-playground/validator/v10 v10.14.0 // indirect",
          "",
          "[Added Lines]",
          "26:  github.com/bytedance/sonic v1.10.2 // indirect",
          "27:  github.com/chenzhuoyu/base64x v0.0.0-20230717121745-296ad89f973d // indirect",
          "28:  github.com/chenzhuoyu/iasm v0.9.1 // indirect",
          "31:  github.com/gabriel-vasile/mimetype v1.4.3 // indirect",
          "38:  github.com/go-playground/validator/v10 v10.17.0 // indirect",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "46:  github.com/jinzhu/now v1.1.5 // indirect",
          "47:  github.com/josharian/intern v1.0.0 // indirect",
          "48:  github.com/json-iterator/go v1.1.12 // indirect",
          "50:  github.com/kr/pretty v0.3.1 // indirect",
          "51:  github.com/labstack/gommon v0.4.0 // indirect",
          "53:  github.com/mailru/easyjson v0.7.7 // indirect",
          "54:  github.com/mattn/go-colorable v0.1.13 // indirect",
          "55:  github.com/mattn/go-isatty v0.0.20 // indirect",
          "56:  github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd // indirect",
          "57:  github.com/modern-go/reflect2 v1.0.2 // indirect",
          "58:  github.com/mohae/deepcopy v0.0.0-20170929034955-c48cc78d4826 // indirect",
          "60:  github.com/perimeterx/marshmallow v1.1.4 // indirect",
          "61:  github.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec // indirect",
          "62:  github.com/rogpeppe/go-internal v1.10.0 // indirect",
          "65:  github.com/tidwall/match v1.1.1 // indirect",
          "66:  github.com/tidwall/pretty v1.2.1 // indirect",
          "67:  github.com/twitchyliquid64/golang-asm v0.15.1 // indirect",
          "69:  github.com/valyala/bytebufferpool v1.0.0 // indirect",
          "70:  github.com/valyala/fasttemplate v1.2.2 // indirect",
          "71:  go.uber.org/atomic v1.10.0 // indirect",
          "72:  go.uber.org/multierr v1.11.0 // indirect",
          "80:  gopkg.in/natefinch/lumberjack.v2 v2.2.1 // indirect",
          "81:  gopkg.in/yaml.v3 v3.0.1 // indirect",
          "82:  modernc.org/libc v1.22.4 // indirect",
          "",
          "[Removed Lines]",
          "49:  github.com/klauspost/cpuid/v2 v2.2.4 // indirect",
          "52:  github.com/leodido/go-urn v1.2.4 // indirect",
          "59:  github.com/pelletier/go-toml/v2 v2.0.8 // indirect",
          "63:  github.com/samber/lo v1.38.1 // indirect",
          "64:  github.com/stretchr/testify v1.8.4 // indirect",
          "68:  github.com/ugorji/go/codec v1.2.11 // indirect",
          "73:  golang.org/x/arch v0.3.0 // indirect",
          "74:  golang.org/x/crypto v0.14.0 // indirect",
          "75:  golang.org/x/exp v0.0.0-20230713183714-613f0c0eb8a1 // indirect",
          "76:  golang.org/x/sys v0.14.0 // indirect",
          "77:  golang.org/x/text v0.13.0 // indirect",
          "78:  golang.org/x/time v0.3.0 // indirect",
          "79:  google.golang.org/protobuf v1.30.0 // indirect",
          "",
          "[Added Lines]",
          "51:  github.com/klauspost/cpuid/v2 v2.2.6 // indirect",
          "54:  github.com/leodido/go-urn v1.3.0 // indirect",
          "61:  github.com/pelletier/go-toml/v2 v2.1.1 // indirect",
          "65:  github.com/samber/lo v1.39.0 // indirect",
          "69:  github.com/ugorji/go/codec v1.2.12 // indirect",
          "74:  golang.org/x/arch v0.7.0 // indirect",
          "75:  golang.org/x/crypto v0.18.0 // indirect",
          "76:  golang.org/x/exp v0.0.0-20240119083558-1b970713d09a // indirect",
          "77:  golang.org/x/sys v0.16.0 // indirect",
          "78:  golang.org/x/text v0.14.0 // indirect",
          "79:  google.golang.org/protobuf v1.32.0 // indirect",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: github.com/RaveNoX/go-jsoncommentstrip v1.0.0/go.mod h1:78ihd09MekBnJnxpICcwzCMzGrKSKYe4AqU6PDYYpjk=",
          "4: github.com/apapsch/go-jsonmerge/v2 v2.0.0 h1:axGnT1gRIfimI7gJifB699GoE/oq+F2MU7Dml6nw9rQ=",
          "5: github.com/apapsch/go-jsonmerge/v2 v2.0.0/go.mod h1:lvDnEdqiQrp0O42VQGgmlKpxL1AP2+08jFMw88y4klk=",
          "",
          "[Removed Lines]",
          "1: github.com/IceWhaleTech/CasaOS-Common v0.4.8-alpha3 h1:5E5LAqi2uXpOZqcPOgQ4m6d9MagYyfhKIFXnzd8s3W4=",
          "2: github.com/IceWhaleTech/CasaOS-Common v0.4.8-alpha3/go.mod h1:2IuYyy5qW1BE6jqC6M+tOU+WtUec1K565rLATBJ9p/0=",
          "",
          "[Added Lines]",
          "1: github.com/IceWhaleTech/CasaOS-Common v0.4.8-alpha10 h1:EdQbH+n4zEXcflk3iKCacjptAjtyo/ZtPHmZWD5LbOY=",
          "2: github.com/IceWhaleTech/CasaOS-Common v0.4.8-alpha10/go.mod h1:2IuYyy5qW1BE6jqC6M+tOU+WtUec1K565rLATBJ9p/0=",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7: github.com/benbjohnson/clock v1.3.1/go.mod h1:J11/hYXuz8f4ySSvYwY0FKfm+ezbsZBKZxNJlLklBHA=",
          "8: github.com/bmatcuk/doublestar v1.1.1/go.mod h1:UD6OnuiIn0yFxxA2le/rnRU1G4RaI4UvFv1sNto9p6w=",
          "9: github.com/bytedance/sonic v1.5.0/go.mod h1:ED5hyg4y6t3/9Ku1R6dU/4KyJ48DZ4jPhfY1O2AihPM=",
          "12: github.com/chenzhuoyu/base64x v0.0.0-20211019084208-fb5309c8db06/go.mod h1:DH46F32mSOjUmXrMHnKwZdA8wcEefY7UVqBKYGjpdQY=",
          "14: github.com/chenzhuoyu/base64x v0.0.0-20221115062448-fe3a3abad311/go.mod h1:b583jCggY9gE99b6G5LEC39OIiVsWj+R97kbl5odCEk=",
          "15: github.com/coreos/go-systemd v0.0.0-20191104093116-d3cd4ed1dbcf h1:iW4rZ826su+pqaw19uhpSCzhj44qo35pNgKFGqzDKkU=",
          "16: github.com/coreos/go-systemd v0.0.0-20191104093116-d3cd4ed1dbcf/go.mod h1:F5haX7vjVVG0kc13fIWeqUViNPyEJxv/OmvnBo0Yme4=",
          "17: github.com/coreos/go-systemd/v22 v22.5.0 h1:RrqgGjYQKalulkV8NGVIfkXQf6YYmOyiJKk8iXXhfZs=",
          "",
          "[Removed Lines]",
          "10: github.com/bytedance/sonic v1.9.1 h1:6iJ6NqdoxCDr6mbY8h18oSO+cShGSMRGCEo7F2h0x8s=",
          "11: github.com/bytedance/sonic v1.9.1/go.mod h1:i736AoUSYt75HyZLoJW9ERYxcy6eaN6h4BZXU064P/U=",
          "13: github.com/chenzhuoyu/base64x v0.0.0-20221115062448-fe3a3abad311 h1:qSGYFH7+jGhDF8vLC+iwCD4WpbV1EBDSzWkJODFLams=",
          "",
          "[Added Lines]",
          "10: github.com/bytedance/sonic v1.10.0-rc/go.mod h1:ElCzW+ufi8qKqNW0FY314xriJhyJhuoJ3gFZdAHF7NM=",
          "11: github.com/bytedance/sonic v1.10.2 h1:GQebETVBxYB7JGWJtLBi07OVzWwt+8dWA00gEVW2ZFE=",
          "12: github.com/bytedance/sonic v1.10.2/go.mod h1:iZcSUejdk5aukTND/Eu/ivjQuEL0Cu9/rf50Hi0u/g4=",
          "15: github.com/chenzhuoyu/base64x v0.0.0-20230717121745-296ad89f973d h1:77cEq6EriyTZ0g/qfRdp61a3Uu/AWrgIq2s0ClJV1g0=",
          "16: github.com/chenzhuoyu/base64x v0.0.0-20230717121745-296ad89f973d/go.mod h1:8EPpVsBuRksnlj1mLy4AWzRNQYxauNi62uWcE3to6eA=",
          "17: github.com/chenzhuoyu/iasm v0.9.0/go.mod h1:Xjy2NpN3h7aUqeqM+woSuuvxmIe6+DDsiNLIrkAmYog=",
          "18: github.com/chenzhuoyu/iasm v0.9.1 h1:tUHQJXo3NhBqw6s33wkGn9SP3bvrWLdlVIJ3hQBL7P0=",
          "19: github.com/chenzhuoyu/iasm v0.9.1/go.mod h1:Xjy2NpN3h7aUqeqM+woSuuvxmIe6+DDsiNLIrkAmYog=",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "24: github.com/deepmap/oapi-codegen v1.12.4/go.mod h1:3lgHGMu6myQ2vqbbTXH2H1o4eXFTGnFiDaOaKKl5yas=",
          "25: github.com/dustin/go-humanize v1.0.1 h1:GzkhY7T5VNhEkwH0PVJgjz+fX1rhBrR7pRT3mDkpeCY=",
          "26: github.com/dustin/go-humanize v1.0.1/go.mod h1:Mu1zIs6XwVuF/gI1OepvI0qD18qycQx+mFykh5fBlto=",
          "29: github.com/getkin/kin-openapi v0.117.0 h1:QT2DyGujAL09F4NrKDHJGsUoIprlIcFVHWDVDcUFE8A=",
          "30: github.com/getkin/kin-openapi v0.117.0/go.mod h1:l5e9PaFUo9fyLJCPGQeXI2ML8c3P8BHOEV2VaAVf/pc=",
          "31: github.com/gin-contrib/gzip v0.0.6 h1:NjcunTcGAj5CO1gn4N8jHOSIeRFHIbn51z6K+xaN4d4=",
          "",
          "[Removed Lines]",
          "27: github.com/gabriel-vasile/mimetype v1.4.2 h1:w5qFW6JKBz9Y393Y4q372O9A7cUSequkh1Q7OhCmWKU=",
          "28: github.com/gabriel-vasile/mimetype v1.4.2/go.mod h1:zApsH/mKG4w07erKIaJPFiX0Tsq9BFQgN3qGY5GnNgA=",
          "",
          "[Added Lines]",
          "32: github.com/gabriel-vasile/mimetype v1.4.3 h1:in2uUcidCuFcDKtdcBxlR0rJ1+fsokWf+uqxgUFjbI0=",
          "33: github.com/gabriel-vasile/mimetype v1.4.3/go.mod h1:d8uq/6HKRL6CGdk+aubisF/M5GcPfT7nKyLpA0lbSSk=",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "54: github.com/go-playground/universal-translator v0.18.1 h1:Bcnm0ZwsGyWbCzImXv+pAJnYK9S473LQFuzCbDbfSFY=",
          "55: github.com/go-playground/universal-translator v0.18.1/go.mod h1:xekY+UJKNuX9WP91TpwSH2VMlDf28Uj24BCp08ZFTUY=",
          "56: github.com/go-playground/validator/v10 v10.10.0/go.mod h1:74x4gJWsvQexRdW8Pn3dXSGrTK4nAUsbPlLADvpJkos=",
          "59: github.com/go-test/deep v1.0.8 h1:TDsG77qcSprGbC6vTN8OuXp5g+J+b5Pcguhf7Zt61VM=",
          "60: github.com/go-test/deep v1.0.8/go.mod h1:5C2ZWiW0ErCdrYzpqxLbTX7MG14M9iiw8DgHncVwcsE=",
          "61: github.com/goccy/go-json v0.9.7/go.mod h1:6MelG93GURQebXPDq3khkgXZkazVtN9CRI+MGFi0w8I=",
          "",
          "[Removed Lines]",
          "57: github.com/go-playground/validator/v10 v10.14.0 h1:vgvQWe3XCz3gIeFDm/HnTIbj6UGmg/+t63MyGU2n5js=",
          "58: github.com/go-playground/validator/v10 v10.14.0/go.mod h1:9iXMNT7sEkjXb0I+enO7QXmzG6QCsPWY4zveKFVRSyU=",
          "",
          "[Added Lines]",
          "62: github.com/go-playground/validator/v10 v10.17.0 h1:SmVVlfAOtlZncTxRuinDPomC2DkXJ4E5T9gDA0AIH74=",
          "63: github.com/go-playground/validator/v10 v10.17.0/go.mod h1:9iXMNT7sEkjXb0I+enO7QXmzG6QCsPWY4zveKFVRSyU=",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "91: github.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=",
          "92: github.com/juju/gnuflag v0.0.0-20171113085948-2ce1bb71843d/go.mod h1:2PavIy+JPciBPrBUjwbNvtwB6RQlve+hkpll6QSNmOE=",
          "93: github.com/klauspost/cpuid/v2 v2.0.9/go.mod h1:FInQzS24/EEf25PyTYn52gqo7WaD8xa0213Md/qVLRg=",
          "96: github.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=",
          "97: github.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=",
          "98: github.com/kr/pretty v0.3.0/go.mod h1:640gp4NfQd8pI5XOwp5fnNeVWj67G7CFk/SaSQn7NBk=",
          "",
          "[Removed Lines]",
          "94: github.com/klauspost/cpuid/v2 v2.2.4 h1:acbojRNwl3o09bUq+yDCtZFc1aiwaAAxtcn8YkZXnvk=",
          "95: github.com/klauspost/cpuid/v2 v2.2.4/go.mod h1:RVVoqg1df56z8g3pUjL/3lE5UfnlrJX8tyFgg4nqhuY=",
          "",
          "[Added Lines]",
          "99: github.com/klauspost/cpuid/v2 v2.2.6 h1:ndNyv040zDGIDh8thGkXYjnFtiN02M1PVVF+JE/48xc=",
          "100: github.com/klauspost/cpuid/v2 v2.2.6/go.mod h1:Lcz8mBdAVJIBVzewtcLocK12l3Y+JytZYpaMropDUws=",
          "101: github.com/knz/go-libedit v1.10.1/go.mod h1:MZTVkCWyz0oBc7JOWP3wNAzd002ZbM/5hgShxwh4x8M=",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "107: github.com/labstack/gommon v0.4.0 h1:y7cvthEAEbU0yHOf4axH8ZG2NH8knB9iNSoTO8dyIk8=",
          "108: github.com/labstack/gommon v0.4.0/go.mod h1:uW6kP17uPlLJsD3ijUYn3/M5bAxtlZhMI6m3MFxTMTM=",
          "109: github.com/leodido/go-urn v1.2.1/go.mod h1:zt4jvISO2HfUBqxjfIshjdMTYS56ZS/qv49ictyFfxY=",
          "112: github.com/mailru/easyjson v0.0.0-20190614124828-94de47d64c63/go.mod h1:C1wdFJiN94OJF2b5HbByQZoLdCWB1Yqtg26g4irojpc=",
          "113: github.com/mailru/easyjson v0.0.0-20190626092158-b2ccc519800e/go.mod h1:C1wdFJiN94OJF2b5HbByQZoLdCWB1Yqtg26g4irojpc=",
          "114: github.com/mailru/easyjson v0.7.7 h1:UGYAvKxe3sBsEDzO8ZeWOSlIQfWFlxbzLZe7hwFURr0=",
          "",
          "[Removed Lines]",
          "110: github.com/leodido/go-urn v1.2.4 h1:XlAE/cm/ms7TE/VMVoduSpNBoyc2dOxHs5MZSwAN63Q=",
          "111: github.com/leodido/go-urn v1.2.4/go.mod h1:7ZrI8mTSeBSHl/UaRyKQW1qZeMgak41ANeCNaVckg+4=",
          "",
          "[Added Lines]",
          "116: github.com/leodido/go-urn v1.3.0 h1:jX8FDLfW4ThVXctBNZ+3cIWnCSnrACDV73r76dy0aQQ=",
          "117: github.com/leodido/go-urn v1.3.0/go.mod h1:bvxc+MVxLKB4z00jd1z+Dvzr47oO32F/QSNjSBOlFxI=",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "128: github.com/mohae/deepcopy v0.0.0-20170929034955-c48cc78d4826 h1:RWengNIwukTxcDr9M+97sNutRR1RKhG96O6jWumTTnw=",
          "129: github.com/mohae/deepcopy v0.0.0-20170929034955-c48cc78d4826/go.mod h1:TaXosZuwdSHYgviHp1DAtfrULt5eUgsSMsZf+YrPgl8=",
          "130: github.com/pelletier/go-toml/v2 v2.0.1/go.mod h1:r9LEWfGN8R5k0VXJ+0BkIe7MYkRdwZOjgMj2KwnJFUo=",
          "133: github.com/perimeterx/marshmallow v1.1.4 h1:pZLDH9RjlLGGorbXhcaQLhfuV0pFMNfPO55FuFkxqLw=",
          "134: github.com/perimeterx/marshmallow v1.1.4/go.mod h1:dsXbUu8CRzfYP5a87xpp0xq9S3u0Vchtcl8we9tYaXw=",
          "135: github.com/pkg/diff v0.0.0-20210226163009-20ebb0f2a09e/go.mod h1:pJLUxLENpZxwdsKMEsNbx1VGcRFpLqf3715MtcvvzbA=",
          "",
          "[Removed Lines]",
          "131: github.com/pelletier/go-toml/v2 v2.0.8 h1:0ctb6s9mE31h0/lhu+J6OPmVeDxJn+kYnJc2jZR9tGQ=",
          "132: github.com/pelletier/go-toml/v2 v2.0.8/go.mod h1:vuYfssBdrU2XDZ9bYydBu6t+6a6PYNcZljzZR9VXg+4=",
          "",
          "[Added Lines]",
          "137: github.com/pelletier/go-toml/v2 v2.1.1 h1:LWAJwfNvjQZCFIDKWYQaM62NcYeYViCmWIwmOStowAI=",
          "138: github.com/pelletier/go-toml/v2 v2.1.1/go.mod h1:tJU2Z3ZkXwnxa4DPO899bsyIoywizdUvyaeZurnPPDc=",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "144: github.com/rogpeppe/go-internal v1.9.0/go.mod h1:WtVeX8xhTBvf0smdhujwtBcq4Qrzq/fJaraNFVN+nFs=",
          "145: github.com/rogpeppe/go-internal v1.10.0 h1:TMyTOH3F/DB16zRVcYyreMH6GnZZrwQVAoYjRBZyWFQ=",
          "146: github.com/rogpeppe/go-internal v1.10.0/go.mod h1:UQnix2H7Ngw/k4C5ijL5+65zddjncjaFoBhdsK/akog=",
          "149: github.com/satori/go.uuid v1.2.0 h1:0uYX9dsZ2yD7q2RtLRtPSdGDWzjeM3TbMJP9utgA0ww=",
          "150: github.com/satori/go.uuid v1.2.0/go.mod h1:dA0hQrYB0VpLJoorglMZABFdXlWrHn1NEOzdhQKdks0=",
          "151: github.com/spkg/bom v0.0.0-20160624110644-59b7046e48ad/go.mod h1:qLr4V1qq6nMqFKkMo8ZTx3f+BZEkzsRUY10Xsm2mwU0=",
          "",
          "[Removed Lines]",
          "147: github.com/samber/lo v1.38.1 h1:j2XEAqXKb09Am4ebOg31SpvzUTTs6EN3VfgeLUhPdXM=",
          "148: github.com/samber/lo v1.38.1/go.mod h1:+m/ZKRl6ClXCE2Lgf3MsQlWfh4bn1bz6CXEOxnEXnEA=",
          "",
          "[Added Lines]",
          "153: github.com/samber/lo v1.39.0 h1:4gTz1wUhNYLhFSKl6O+8peW0v2F4BCY034GRpU9WnuA=",
          "154: github.com/samber/lo v1.39.0/go.mod h1:+m/ZKRl6ClXCE2Lgf3MsQlWfh4bn1bz6CXEOxnEXnEA=",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "158: github.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=",
          "159: github.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=",
          "160: github.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=",
          "163: github.com/stretchr/testify v1.8.4 h1:CcVxjf3Q8PM0mHUKJCdn+eZZtm5yQwehR5yeSVQQcUk=",
          "164: github.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=",
          "165: github.com/tidwall/gjson v1.14.4 h1:uo0p8EbA09J7RQaflQ1aBRffTR7xedD2bcIVSYxLnkM=",
          "",
          "[Removed Lines]",
          "161: github.com/stretchr/testify v1.8.2/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=",
          "162: github.com/stretchr/testify v1.8.3/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "173: github.com/twitchyliquid64/golang-asm v0.15.1/go.mod h1:a1lVb/DtPvCB8fslRZhAngC2+aY1QWCk3Cedj/Gdt08=",
          "174: github.com/ugorji/go v1.2.7/go.mod h1:nF9osbDWLy6bDVv/Rtoh6QgnvNDpmCalQV5urGCCS6M=",
          "175: github.com/ugorji/go/codec v1.2.7/go.mod h1:WGN1fab3R1fzQlVQTkfxVtIBhWDRqOviHU95kRgeqEY=",
          "178: github.com/valyala/bytebufferpool v1.0.0 h1:GqA5TC/0021Y/b9FG4Oi9Mr3q7XYx6KllzawFIhcdPw=",
          "179: github.com/valyala/bytebufferpool v1.0.0/go.mod h1:6bBcMArwyJ5K/AmCkWv1jt77kVWyCJ6HpOuEn7z0Csc=",
          "180: github.com/valyala/fasttemplate v1.2.1/go.mod h1:KHLXt3tVN2HBp8eijSv/kGJopbvo7S+qRAEEKiv+SiQ=",
          "",
          "[Removed Lines]",
          "176: github.com/ugorji/go/codec v1.2.11 h1:BMaWp1Bb6fHwEtbplGBGJ498wD+LKlNSl25MjdZY4dU=",
          "177: github.com/ugorji/go/codec v1.2.11/go.mod h1:UNopzCgEMSXjBc6AOMqYvWC1ktqTAfzJZUZgYf6w6lg=",
          "",
          "[Added Lines]",
          "180: github.com/ugorji/go/codec v1.2.12 h1:9LC83zGrHhuUA9l16C9AHXAqEV/2wBQ4nkvumAE65EE=",
          "181: github.com/ugorji/go/codec v1.2.12/go.mod h1:UNopzCgEMSXjBc6AOMqYvWC1ktqTAfzJZUZgYf6w6lg=",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "188: go.uber.org/zap v1.24.0 h1:FiJd5l1UOLj0wCgbSE0rwwXHzEdAZS6hiiSnxJN/D60=",
          "189: go.uber.org/zap v1.24.0/go.mod h1:2kMP+WWQ8aoFoedH3T2sq6iJ2yDWpHbP0f6MQbS9Gkg=",
          "190: golang.org/x/arch v0.0.0-20210923205945-b76863e36670/go.mod h1:5om86z9Hs0C8fWVUuoMHwpExlXzs5Tkyp9hOrfG7pp8=",
          "193: golang.org/x/crypto v0.0.0-20210711020723-a769d52b0f97/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=",
          "198: golang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=",
          "201: golang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=",
          "202: golang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "203: golang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "204: golang.org/x/sys v0.0.0-20210806184541-e5e7981a1069/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "205: golang.org/x/sys v0.0.0-20210927094055-39ccf1dd6fa6/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "206: golang.org/x/sys v0.0.0-20211103235746-7861aae1554b/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "208: golang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "209: golang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "212: golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=",
          "213: golang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=",
          "214: golang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=",
          "217: golang.org/x/time v0.3.0 h1:rg5rLMjNzMS1RkNLzCG38eapWhnYLFYXDXj2gOlr8j4=",
          "218: golang.org/x/time v0.3.0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=",
          "219: golang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=",
          "220: golang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=",
          "221: google.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=",
          "222: google.golang.org/protobuf v1.28.0/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=",
          "225: gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=",
          "226: gopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=",
          "227: gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=",
          "",
          "[Removed Lines]",
          "191: golang.org/x/arch v0.3.0 h1:02VY4/ZcO/gBOH6PUaoiptASxtXU10jazRCP865E97k=",
          "192: golang.org/x/arch v0.3.0/go.mod h1:5om86z9Hs0C8fWVUuoMHwpExlXzs5Tkyp9hOrfG7pp8=",
          "194: golang.org/x/crypto v0.14.0 h1:wBqGXzWJW6m1XrIKlAH0Hs1JJ7+9KBwnIO8v66Q9cHc=",
          "195: golang.org/x/crypto v0.14.0/go.mod h1:MVFd36DqK4CsrnJYDkBA3VC4m2GkXAM0PvzMCn4JQf4=",
          "196: golang.org/x/exp v0.0.0-20230713183714-613f0c0eb8a1 h1:MGwJjxBy0HJshjDNfLsYO8xppfqWlA5ZT9OhtUUhTNw=",
          "197: golang.org/x/exp v0.0.0-20230713183714-613f0c0eb8a1/go.mod h1:FXUEEKJgO7OQYeo8N01OfiKP8RXMtf6e8aTskBGqWdc=",
          "199: golang.org/x/net v0.17.0 h1:pVaXccu2ozPjCXewfr1S7xza/zcXTity9cCdXQYSjIM=",
          "200: golang.org/x/net v0.17.0/go.mod h1:NxSsAGuq816PNPmqtQdLE42eU2Fs7NoRIZrHJAlaCOE=",
          "207: golang.org/x/sys v0.0.0-20220704084225-05e143d24a9e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "210: golang.org/x/sys v0.14.0 h1:Vz7Qs629MkJkGyHxUlRHizWJRG2j8fbQKjELVSNhy7Q=",
          "211: golang.org/x/sys v0.14.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=",
          "215: golang.org/x/text v0.13.0 h1:ablQoSUd0tRdKxZewP80B+BaqeKJuVhuRxj/dkrun3k=",
          "216: golang.org/x/text v0.13.0/go.mod h1:TvPlkZtksWOMsz7fbANvkp4WM8x/WCo/om8BMLbz+aE=",
          "223: google.golang.org/protobuf v1.30.0 h1:kPPoIgf3TsEvrm0PFe15JQ+570QVxYzEvvHqChK+cng=",
          "224: google.golang.org/protobuf v1.30.0/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=",
          "",
          "[Added Lines]",
          "195: golang.org/x/arch v0.7.0 h1:pskyeJh/3AmoQ8CPE95vxHLqp1G1GfGNXTmcl9NEKTc=",
          "196: golang.org/x/arch v0.7.0/go.mod h1:FEVrYAQjsQXMVJ1nsMoVVXPZg6p2JE2mx8psSWTDQys=",
          "198: golang.org/x/crypto v0.18.0 h1:PGVlW0xEltQnzFZ55hkuX5+KLyrMYhHld1YHO4AKcdc=",
          "199: golang.org/x/crypto v0.18.0/go.mod h1:R0j02AL6hcrfOiy9T4ZYp/rcWeMxM3L6QYxlOuEG1mg=",
          "200: golang.org/x/exp v0.0.0-20240119083558-1b970713d09a h1:Q8/wZp0KX97QFTc2ywcOE0YRjZPVIx+MXInMzdvQqcA=",
          "201: golang.org/x/exp v0.0.0-20240119083558-1b970713d09a/go.mod h1:idGWGoKP1toJGkd5/ig9ZLuPcZBC3ewk7SzmH0uou08=",
          "203: golang.org/x/net v0.20.0 h1:aCL9BSgETF1k+blQaYUBx9hJ9LOGP3gAVemcZlf1Kpo=",
          "204: golang.org/x/net v0.20.0/go.mod h1:z8BVo6PvndSri0LbOE3hAn0apkU+1YvI6E70E9jsnvY=",
          "212: golang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=",
          "214: golang.org/x/sys v0.16.0 h1:xWw16ngr6ZMtmxDyKyIgsE93KNKz5HKmMa3b8ALHidU=",
          "215: golang.org/x/sys v0.16.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=",
          "219: golang.org/x/text v0.14.0 h1:ScX5w1eTa3QqT8oi6+ziP7dTV1S2+ALU0bI+0zXKWiQ=",
          "220: golang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=",
          "227: google.golang.org/protobuf v1.32.0 h1:pPC6BG5ex8PDFnkbrGU3EixyhKcQ2aDuBS36lqK/C7I=",
          "228: google.golang.org/protobuf v1.32.0/go.mod h1:c6P6GXX6sHbq/GpV6MGZEdwhWPcYBgnhAHhKbcUYpos=",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "240: gopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=",
          "241: gorm.io/gorm v1.25.0 h1:+KtYtb2roDz14EQe4bla8CbQlmb9dN3VejSai3lprfU=",
          "242: gorm.io/gorm v1.25.0/go.mod h1:L4uxeKpfBml98NYqVqwAdmV1a2nBtAec/cf3fpucW/k=",
          "243: modernc.org/libc v1.22.4 h1:wymSbZb0AlrjdAVX3cjreCHTPCpPARbQXNz6BHPzdwQ=",
          "244: modernc.org/libc v1.22.4/go.mod h1:jj+Z7dTNX8fBScMVNRAYZ/jF91K8fdT2hYMThc3YjBY=",
          "245: modernc.org/mathutil v1.5.0 h1:rV0Ko/6SfM+8G+yKiyI830l3Wuz1zRutdslNoQ0kfiQ=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "247: gotest.tools/v3 v3.4.0 h1:ZazjZUfuVeZGLAmlKKuyv3IKP5orXcwtOwDQH6YVr6o=",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "248: modernc.org/memory v1.5.0/go.mod h1:PkUhL0Mugw21sHPeskwZW4D6VscE/GQJOnIpCnW6pSU=",
          "249: modernc.org/sqlite v1.21.2 h1:ixuUG0QS413Vfzyx6FWx6PYTmHaOegTY+hjzhn7L+a0=",
          "250: modernc.org/sqlite v1.21.2/go.mod h1:cxbLkB5WS32DnQqeH4h4o1B0eMr8W/y8/RGuxQ3JsC0=",
          "251: rsc.io/pdf v0.1.1/go.mod h1:n8OzWcQ6Sp37PL01nO98y4iUCRdTGarVfzxY20ICaU4=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "256: nullprogram.com/x/optparse v1.0.0/go.mod h1:KdyPE+Igbe0jQUrVfMqDMeJQIJZEuyV7pjYmp6pbG50=",
          "",
          "---------------"
        ],
        "route/v1/user.go||route/v1/user.go": [
          "File: route/v1/user.go -> route/v1/user.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:  \"github.com/IceWhaleTech/CasaOS-UserService/service\"",
          "34:  \"github.com/gin-gonic/gin\"",
          "35: )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "35:  \"golang.org/x/time/rate\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "81:  c.JSON(common_err.SUCCESS, model.Result{Success: common_err.SUCCESS, Message: common_err.GetMsg(common_err.SUCCESS)})",
          "82: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "85: var limiter = rate.NewLimiter(rate.Every(time.Minute/5), 5)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "92: func PostUserLogin(c *gin.Context) {",
          "93:  json := make(map[string]string)",
          "94:  c.ShouldBind(&json)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "96:  if !limiter.Allow() {",
          "97:   c.JSON(common_err.TOO_MANY_REQUEST,",
          "98:    model.Result{",
          "99:     Success: common_err.TOO_MANY_LOGIN_REQUESTS,",
          "100:     Message: common_err.GetMsg(common_err.TOO_MANY_LOGIN_REQUESTS),",
          "101:    })",
          "102:   return",
          "103:  }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "108:  user := service.MyService.User().GetUserAllInfoByName(username)",
          "109:  if user.Id == 0 {",
          "110:   c.JSON(common_err.CLIENT_ERROR,",
          "112:   return",
          "113:  }",
          "114:  if user.Password != encryption.GetMD5ByStr(password) {",
          "115:   c.JSON(common_err.CLIENT_ERROR,",
          "117:   return",
          "118:  }",
          "",
          "[Removed Lines]",
          "111:    model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "116:    model.Result{Success: common_err.PWD_INVALID, Message: common_err.GetMsg(common_err.PWD_INVALID)})",
          "",
          "[Added Lines]",
          "123:    model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
          "128:    model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "162:  user := service.MyService.User().GetUserInfoById(id)",
          "163:  if user.Id == 0 {",
          "164:   c.JSON(common_err.SERVICE_ERROR,",
          "166:   return",
          "167:  }",
          "168:  json := make(map[string]string)",
          "",
          "[Removed Lines]",
          "165:    model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "",
          "[Added Lines]",
          "177:    model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "217:  user := service.MyService.User().GetUserInfoById(id)",
          "218:  if user.Id == 0 {",
          "219:   c.JSON(common_err.SERVICE_ERROR,",
          "221:   return",
          "222:  }",
          "",
          "[Removed Lines]",
          "220:    model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "",
          "[Added Lines]",
          "232:    model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "255:  user := service.MyService.User().GetUserInfoById(id)",
          "256:  if user.Id == 0 {",
          "257:   c.JSON(common_err.SERVICE_ERROR,",
          "259:   return",
          "260:  }",
          "261:  if len(json.Username) > 0 {",
          "",
          "[Removed Lines]",
          "258:    model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "",
          "[Added Lines]",
          "270:    model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "306:  user := service.MyService.User().GetUserAllInfoById(id)",
          "307:  if user.Id == 0 {",
          "308:   c.JSON(common_err.SERVICE_ERROR,",
          "310:   return",
          "311:  }",
          "312:  if user.Password != encryption.GetMD5ByStr(oldPwd) {",
          "",
          "[Removed Lines]",
          "309:    model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "",
          "[Added Lines]",
          "321:    model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "339:  user := service.MyService.User().GetUserInfoById(id)",
          "340:  if user.Id == 0 {",
          "341:   c.JSON(http.StatusOK,",
          "343:   return",
          "344:  }",
          "345:  user.Nickname = Nickname",
          "",
          "[Removed Lines]",
          "342:    model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "",
          "[Added Lines]",
          "354:    model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "367:  user := service.MyService.User().GetUserInfoById(id)",
          "368:  if user.Id == 0 {",
          "369:   c.JSON(http.StatusOK,",
          "371:   return",
          "372:  }",
          "373:  user.Description = desc",
          "",
          "[Removed Lines]",
          "370:    model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "",
          "[Added Lines]",
          "382:    model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "411:  }",
          "412:  user := service.MyService.User().GetUserInfoByUserName(username)",
          "413:  if user.Id == 0 {",
          "415:   return",
          "416:  }",
          "",
          "[Removed Lines]",
          "414:   c.JSON(common_err.SERVICE_ERROR, model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "",
          "[Added Lines]",
          "426:   c.JSON(common_err.SERVICE_ERROR, model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "461:  if user.Id == 0 {",
          "462:   c.JSON(common_err.SERVICE_ERROR,",
          "464:   return",
          "465:  }",
          "466:  filePath := config.AppInfo.UserDataPath + \"/\" + id + \"/\" + name + \".json\"",
          "",
          "[Removed Lines]",
          "463:    model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "",
          "[Added Lines]",
          "475:    model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "489:  user := service.MyService.User().GetUserInfoById(id)",
          "490:  if user.Id == 0 {",
          "491:   c.JSON(common_err.SERVICE_ERROR,",
          "493:   return",
          "494:  }",
          "495:  data, _ := io.ReadAll(c.Request.Body)",
          "",
          "[Removed Lines]",
          "492:    model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "",
          "[Added Lines]",
          "504:    model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "526:  user := service.MyService.User().GetUserInfoById(id)",
          "527:  if user.Id == 0 {",
          "528:   c.JSON(common_err.SERVICE_ERROR,",
          "530:   return",
          "531:  }",
          "532:  filePath := config.AppInfo.UserDataPath + \"/\" + strconv.Itoa(user.Id) + \"/\" + name + \".json\"",
          "",
          "[Removed Lines]",
          "529:    model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "",
          "[Added Lines]",
          "541:    model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "580:  user := service.MyService.User().GetUserInfoById(id)",
          "581:  if user.Id == 0 {",
          "583:   return",
          "584:  }",
          "585:  fstat, _ := os.Stat(path)",
          "",
          "[Removed Lines]",
          "582:   c.JSON(http.StatusOK, model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "",
          "[Added Lines]",
          "594:   c.JSON(http.StatusOK, model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "631:  user := service.MyService.User().GetUserInfoById(id)",
          "633:  if user.Id == 0 {",
          "635:   return",
          "636:  }",
          "637:  if t == \"avatar\" {",
          "",
          "[Removed Lines]",
          "634:   c.JSON(common_err.SERVICE_ERROR, model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "",
          "[Added Lines]",
          "646:   c.JSON(common_err.SERVICE_ERROR, model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "686:  }",
          "687:  user := service.MyService.User().GetUserInfoById(id)",
          "688:  if user.Id == 0 {",
          "690:   return",
          "691:  }",
          "692:  if !file.Exists(path) {",
          "",
          "[Removed Lines]",
          "689:   c.JSON(common_err.SERVICE_ERROR, model.Result{Success: common_err.USER_NOT_EXIST, Message: common_err.GetMsg(common_err.USER_NOT_EXIST)})",
          "",
          "[Added Lines]",
          "701:   c.JSON(common_err.SERVICE_ERROR, model.Result{Success: common_err.USER_NOT_EXIST_OR_PWD_INVALID, Message: common_err.GetMsg(common_err.USER_NOT_EXIST_OR_PWD_INVALID)})",
          "",
          "---------------"
        ]
      }
    }
  ]
}