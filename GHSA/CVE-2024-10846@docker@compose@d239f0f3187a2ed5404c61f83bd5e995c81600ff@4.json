{
  "cve_id": "CVE-2024-10846",
  "cve_desc": "The compose-go library component in versions v2.10-v2.4.0 allows an authorized user who sends malicious YAML payloads to cause the compose-go to consume excessive amount of Memory and CPU cycles while parsing YAML, such as used by Docker Compose from versions  v2.27.0 to v2.29.7 included",
  "repo": "docker/compose",
  "patch_hash": "d239f0f3187a2ed5404c61f83bd5e995c81600ff",
  "patch_info": {
    "commit_hash": "d239f0f3187a2ed5404c61f83bd5e995c81600ff",
    "repo": "docker/compose",
    "commit_url": "https://github.com/docker/compose/commit/d239f0f3187a2ed5404c61f83bd5e995c81600ff#diff-33ef32bf6c23acb95f5902d7097b7a1d5128ca061167ec0716715b0b9eeaa5f6R10",
    "files": [
      "cmd/compose/config.go",
      "go.mod",
      "go.sum",
      "pkg/compose/create.go",
      "pkg/e2e/container_name_test.go",
      "pkg/e2e/fixtures/container_name/compose.yaml"
    ],
    "message": "check container_name is not in use by another service we will create\n\nSigned-off-by: Nicolas De Loof <nicolas.deloof@gmail.com>",
    "before_after_code_files": [
      "cmd/compose/config.go||cmd/compose/config.go",
      "go.mod||go.mod",
      "go.sum||go.sum",
      "pkg/compose/create.go||pkg/compose/create.go",
      "pkg/e2e/container_name_test.go||pkg/e2e/container_name_test.go"
    ]
  },
  "patch_diff": {
    "cmd/compose/config.go||cmd/compose/config.go": [
      "File: cmd/compose/config.go -> cmd/compose/config.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "169:    return err",
      "170:   }",
      "172:   switch opts.Format {",
      "173:   case \"json\":",
      "174:    content, err = project.MarshalJSON()",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "172:   if !opts.noConsistency {",
      "173:    err := project.CheckContainerNameUnicity()",
      "174:    if err != nil {",
      "175:     return err",
      "176:    }",
      "177:   }",
      "",
      "---------------"
    ],
    "go.mod||go.mod": [
      "File: go.mod -> go.mod",
      "--- Hunk 1 ---",
      "[Context before]",
      "7:  github.com/Microsoft/go-winio v0.6.1",
      "8:  github.com/acarl005/stripansi v0.0.0-20180116102854-5a71ef0e047d",
      "9:  github.com/buger/goterm v1.0.4",
      "11:  github.com/containerd/console v1.0.4",
      "12:  github.com/containerd/containerd v1.7.13",
      "13:  github.com/davecgh/go-spew v1.1.1",
      "",
      "[Removed Lines]",
      "10:  github.com/compose-spec/compose-go/v2 v2.0.3-0.20240407191136-f388192b8a39",
      "",
      "[Added Lines]",
      "10:  github.com/compose-spec/compose-go/v2 v2.0.3-0.20240416141209-60aa6409b2c4",
      "",
      "---------------"
    ],
    "go.sum||go.sum": [
      "File: go.sum -> go.sum",
      "--- Hunk 1 ---",
      "[Context before]",
      "90: github.com/cncf/xds/go v0.0.0-20230607035331-e9ce68804cb4/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=",
      "91: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb h1:EDmT6Q9Zs+SbUoc7Ik9EfrFqcylYqgPZ9ANSbTAntnE=",
      "92: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb/go.mod h1:ZjrT6AXHbDs86ZSdt/osfBi5qfexBrKUdONk989Wnk4=",
      "95: github.com/containerd/cgroups v1.1.0 h1:v8rEWFl6EoqHB+swVNjVoCJE8o3jX7e8nqBGPLaDFBM=",
      "96: github.com/containerd/cgroups v1.1.0/go.mod h1:6ppBcbh/NOOUU+dMKrykgaBnK9lCIBxHqJDGwsa1mIw=",
      "97: github.com/containerd/console v1.0.4 h1:F2g4+oChYvBTsASRTz8NP6iIAi97J3TtSAsLbIFn4ro=",
      "",
      "[Removed Lines]",
      "93: github.com/compose-spec/compose-go/v2 v2.0.3-0.20240407191136-f388192b8a39 h1:ZUpnv0xA75X9gy9Y7hjJm51nflGbr+2URaLXBtEic7A=",
      "94: github.com/compose-spec/compose-go/v2 v2.0.3-0.20240407191136-f388192b8a39/go.mod h1:bEPizBkIojlQ20pi2vNluBa58tevvj0Y18oUSHPyfdc=",
      "",
      "[Added Lines]",
      "93: github.com/compose-spec/compose-go/v2 v2.0.3-0.20240416141209-60aa6409b2c4 h1:WYiZ9D0WBykHUJLlpt+w7NXX0hy+cQKKdVe7vmsNZvg=",
      "94: github.com/compose-spec/compose-go/v2 v2.0.3-0.20240416141209-60aa6409b2c4/go.mod h1:bEPizBkIojlQ20pi2vNluBa58tevvj0Y18oUSHPyfdc=",
      "",
      "---------------"
    ],
    "pkg/compose/create.go||pkg/compose/create.go": [
      "File: pkg/compose/create.go -> pkg/compose/create.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "77:   options.Services = project.ServiceNames()",
      "78:  }",
      "80:  var observedState Containers",
      "82:  if err != nil {",
      "83:   return err",
      "84:  }",
      "",
      "[Removed Lines]",
      "81:  observedState, err := s.getContainers(ctx, project.Name, oneOffInclude, true)",
      "",
      "[Added Lines]",
      "80:  err := project.CheckContainerNameUnicity()",
      "81:  if err != nil {",
      "82:   return err",
      "83:  }",
      "86:  observedState, err = s.getContainers(ctx, project.Name, oneOffInclude, true)",
      "",
      "---------------"
    ],
    "pkg/e2e/container_name_test.go||pkg/e2e/container_name_test.go": [
      "File: pkg/e2e/container_name_test.go -> pkg/e2e/container_name_test.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5:    Copyright 2022 Docker Compose CLI authors",
      "7:    Licensed under the Apache License, Version 2.0 (the \"License\");",
      "8:    you may not use this file except in compliance with the License.",
      "9:    You may obtain a copy of the License at",
      "11:        http://www.apache.org/licenses/LICENSE-2.0",
      "13:    Unless required by applicable law or agreed to in writing, software",
      "14:    distributed under the License is distributed on an \"AS IS\" BASIS,",
      "15:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
      "16:    See the License for the specific language governing permissions and",
      "17:    limitations under the License.",
      "20: package e2e",
      "22: import (",
      "23:  \"testing\"",
      "25:  \"gotest.tools/v3/icmd\"",
      "26: )",
      "28: func TestUpContainerNameConflict(t *testing.T) {",
      "29:  c := NewParallelCLI(t)",
      "30:  const projectName = \"e2e-container_name_conflict\"",
      "32:  t.Cleanup(func() {",
      "33:   c.RunDockerComposeCmd(t, \"--project-name\", projectName, \"down\")",
      "34:  })",
      "36:  res := c.RunDockerComposeCmdNoCheck(t, \"-f\", \"fixtures/container_name/compose.yaml\", \"--project-name\", projectName, \"up\")",
      "37:  res.Assert(t, icmd.Expected{ExitCode: 1, Err: `container name \"test\" is already in use`})",
      "39:  c.RunDockerComposeCmd(t, \"--project-name\", projectName, \"down\")",
      "40:  c.RunDockerComposeCmd(t, \"-f\", \"fixtures/container_name/compose.yaml\", \"--project-name\", projectName, \"up\", \"test\")",
      "42:  c.RunDockerComposeCmd(t, \"--project-name\", projectName, \"down\")",
      "43:  c.RunDockerComposeCmd(t, \"-f\", \"fixtures/container_name/compose.yaml\", \"--project-name\", projectName, \"up\", \"another_test\")",
      "44: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5e2abb6c260b77ccb500b0edb18e148cd943b3bf",
      "candidate_info": {
        "commit_hash": "5e2abb6c260b77ccb500b0edb18e148cd943b3bf",
        "repo": "docker/compose",
        "commit_url": "https://github.com/docker/compose/commit/5e2abb6c260b77ccb500b0edb18e148cd943b3bf",
        "files": [
          "cmd/compose/build.go",
          "go.mod",
          "go.sum",
          "pkg/api/api.go",
          "pkg/compose/build.go",
          "pkg/compose/build_bake.go",
          "pkg/e2e/build_test.go",
          "pkg/e2e/fixtures/build-dependencies/classic.yaml",
          "pkg/e2e/fixtures/build-dependencies/compose.yaml"
        ],
        "message": "support additional_context reference to another service\n\nSigned-off-by: Nicolas De Loof <nicolas.deloof@gmail.com>",
        "before_after_code_files": [
          "cmd/compose/build.go||cmd/compose/build.go",
          "go.mod||go.mod",
          "go.sum||go.sum",
          "pkg/api/api.go||pkg/api/api.go",
          "pkg/compose/build.go||pkg/compose/build.go",
          "pkg/compose/build_bake.go||pkg/compose/build_bake.go",
          "pkg/e2e/build_test.go||pkg/e2e/build_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ],
          "candidate": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ]
        }
      },
      "candidate_diff": {
        "cmd/compose/build.go||cmd/compose/build.go": [
          "File: cmd/compose/build.go -> cmd/compose/build.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:   uiMode = \"rawjson\"",
          "69:  }",
          "70:  return api.BuildOptions{",
          "82:  }, nil",
          "83: }",
          "",
          "[Removed Lines]",
          "71:   Pull:          opts.pull,",
          "72:   Push:          opts.push,",
          "73:   Progress:      uiMode,",
          "74:   Args:          types.NewMappingWithEquals(opts.args),",
          "75:   NoCache:       opts.noCache,",
          "76:   Quiet:         opts.quiet,",
          "77:   Services:      services,",
          "78:   Deps:          opts.deps,",
          "79:   SSHs:          SSHKeys,",
          "80:   Builder:       builderName,",
          "81:   Compatibility: opts.Compatibility,",
          "",
          "[Added Lines]",
          "71:   Pull:     opts.pull,",
          "72:   Push:     opts.push,",
          "73:   Progress: uiMode,",
          "74:   Args:     types.NewMappingWithEquals(opts.args),",
          "75:   NoCache:  opts.noCache,",
          "76:   Quiet:    opts.quiet,",
          "77:   Services: services,",
          "78:   Deps:     opts.deps,",
          "79:   SSHs:     SSHKeys,",
          "80:   Builder:  builderName,",
          "",
          "---------------"
        ],
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "9:  github.com/Microsoft/go-winio v0.6.2",
          "10:  github.com/acarl005/stripansi v0.0.0-20180116102854-5a71ef0e047d",
          "11:  github.com/buger/goterm v1.0.4",
          "13:  github.com/containerd/containerd/v2 v2.0.2",
          "14:  github.com/containerd/platforms v1.0.0-rc.1",
          "15:  github.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc",
          "",
          "[Removed Lines]",
          "12:  github.com/compose-spec/compose-go/v2 v2.4.7",
          "",
          "[Added Lines]",
          "12:  github.com/compose-spec/compose-go/v2 v2.4.8-0.20250130174723-77ab539e4f3f",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "81: github.com/cloudflare/cfssl v0.0.0-20180223231731-4e2dcbde5004/go.mod h1:yMWuSON2oQp+43nFtAV/uvKQIFpSPerB57DCt9t8sSA=",
          "82: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb h1:EDmT6Q9Zs+SbUoc7Ik9EfrFqcylYqgPZ9ANSbTAntnE=",
          "83: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb/go.mod h1:ZjrT6AXHbDs86ZSdt/osfBi5qfexBrKUdONk989Wnk4=",
          "86: github.com/containerd/cgroups/v3 v3.0.3 h1:S5ByHZ/h9PMe5IOQoN7E+nMc2UcLEM/V48DGDJ9kip0=",
          "87: github.com/containerd/cgroups/v3 v3.0.3/go.mod h1:8HBe7V3aWGLFPd/k03swSIsGjZhHI2WzJmticMgVuz0=",
          "88: github.com/containerd/console v1.0.4 h1:F2g4+oChYvBTsASRTz8NP6iIAi97J3TtSAsLbIFn4ro=",
          "",
          "[Removed Lines]",
          "84: github.com/compose-spec/compose-go/v2 v2.4.7 h1:WNpz5bIbKG+G+w9pfu72B1ZXr+Og9jez8TMEo8ecXPk=",
          "85: github.com/compose-spec/compose-go/v2 v2.4.7/go.mod h1:lFN0DrMxIncJGYAXTfWuajfwj5haBJqrBkarHcnjJKc=",
          "",
          "[Added Lines]",
          "84: github.com/compose-spec/compose-go/v2 v2.4.8-0.20250130174723-77ab539e4f3f h1:turCjSVHj+0P+G6kuRsJfhhYzp1ULfTv7GVzv1dgIHQ=",
          "85: github.com/compose-spec/compose-go/v2 v2.4.8-0.20250130174723-77ab539e4f3f/go.mod h1:lFN0DrMxIncJGYAXTfWuajfwj5haBJqrBkarHcnjJKc=",
          "",
          "---------------"
        ],
        "pkg/api/api.go||pkg/api/api.go": [
          "File: pkg/api/api.go -> pkg/api/api.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "155:  Memory int64",
          "157:  Builder string",
          "160: }",
          "",
          "[Removed Lines]",
          "159:  Compatibility bool",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "pkg/compose/build.go||pkg/compose/build.go": [
          "File: pkg/compose/build.go -> pkg/compose/build.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:  \"errors\"",
          "22:  \"fmt\"",
          "23:  \"os\"",
          "25:  \"github.com/compose-spec/compose-go/v2/types\"",
          "26:  \"github.com/containerd/platforms\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24:  \"strings\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "71:  if options.Deps {",
          "72:   policy = types.IncludeDependencies",
          "73:  }",
          "75:   if service.Build == nil {",
          "76:    return nil",
          "77:   }",
          "",
          "[Removed Lines]",
          "74:  err := project.ForEachService(options.Services, func(serviceName string, service *types.ServiceConfig) error {",
          "",
          "[Added Lines]",
          "76:  serviceDeps := false",
          "77:  project, err := project.WithServicesTransform(func(serviceName string, service types.ServiceConfig) (types.ServiceConfig, error) {",
          "78:   if service.Build != nil {",
          "79:    for _, c := range service.Build.AdditionalContexts {",
          "80:     if t, found := strings.CutPrefix(c, types.ServicePrefix); found {",
          "81:      serviceDeps = true",
          "82:      if service.DependsOn == nil {",
          "83:       service.DependsOn = map[string]types.ServiceDependency{}",
          "84:      }",
          "85:      service.DependsOn[t] = types.ServiceDependency{",
          "86:       Condition: \"build\", // non-canonical, but will force dependency graph ordering",
          "87:      }",
          "88:     }",
          "89:    }",
          "90:   }",
          "91:   return service, nil",
          "92:  })",
          "93:  if err != nil {",
          "94:   return imageIDs, err",
          "95:  }",
          "97:  if serviceDeps {",
          "98:   logrus.Infof(`additional_context with \"service:\"\" is better supported when delegating build go bake. Set COMPOSE_BAKE=true`)",
          "99:  }",
          "101:  err = project.ForEachService(options.Services, func(serviceName string, service *types.ServiceConfig) error {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "536: func toBuildContexts(additionalContexts types.Mapping) map[string]build.NamedContext {",
          "537:  namedContexts := map[string]build.NamedContext{}",
          "538:  for name, contextPath := range additionalContexts {",
          "539:   namedContexts[name] = build.NamedContext{Path: contextPath}",
          "540:  }",
          "541:  return namedContexts",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "566:   if _, found := strings.CutPrefix(contextPath, types.ServicePrefix); found {",
          "569:    continue",
          "570:   }",
          "",
          "---------------"
        ],
        "pkg/compose/build_bake.go||pkg/compose/build_bake.go": [
          "File: pkg/compose/build_bake.go -> pkg/compose/build_bake.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "105:  Tags             []string          `json:\"tags,omitempty\"`",
          "106:  CacheFrom        []string          `json:\"cache-from,omitempty\"`",
          "107:  CacheTo          []string          `json:\"cache-to,omitempty\"`",
          "108:  Secrets          []string          `json:\"secret,omitempty\"`",
          "109:  SSH              []string          `json:\"ssh,omitempty\"`",
          "110:  Platforms        []string          `json:\"platforms,omitempty\"`",
          "112:  Pull             bool              `json:\"pull,omitempty\"`",
          "113:  NoCache          bool              `json:\"no-cache,omitempty\"`",
          "114:  ShmSize          types.UnitBytes   `json:\"shm-size,omitempty\"`",
          "115:  Ulimits          []string          `json:\"ulimits,omitempty\"`",
          "116:  Entitlements     []string          `json:\"entitlements,omitempty\"`",
          "117:  Outputs          []string          `json:\"output,omitempty\"`",
          "118: }",
          "",
          "[Removed Lines]",
          "111:  Target           string            `json:\"target,omitempty\"`",
          "",
          "[Added Lines]",
          "108:  Target           string            `json:\"target,omitempty\"`",
          "114:  NetworkMode      string            `json:\"network,omitempty\"`",
          "115:  NoCacheFilter    []string          `json:\"no-cache-filter,omitempty\"`",
          "118:  Call             string            `json:\"call,omitempty\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "124: }",
          "126: func (s *composeService) doBuildBake(ctx context.Context, project *types.Project, serviceToBeBuild types.Services, options api.BuildOptions) (map[string]string, error) { //nolint:gocyclo",
          "132:  eg := errgroup.Group{}",
          "133:  ch := make(chan *client.SolveStatus)",
          "134:  display, err := progressui.NewDisplay(os.Stdout, progressui.DisplayMode(options.Progress))",
          "",
          "[Removed Lines]",
          "127:  cw := progress.ContextWriter(ctx)",
          "128:  for name := range serviceToBeBuild {",
          "129:   cw.Event(progress.BuildingEvent(name))",
          "130:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "192:   cfg.Targets[serviceName] = bakeTarget{",
          "193:    Context:          build.Context,",
          "195:    Dockerfile:       dockerFilePath(build.Context, build.Dockerfile),",
          "196:    DockerfileInline: build.DockerfileInline,",
          "197:    Args:             args,",
          "",
          "[Removed Lines]",
          "194:    Contexts:         additionalContexts(build.AdditionalContexts, service.DependsOn, options.Compatibility),",
          "",
          "[Added Lines]",
          "192:    Contexts:         additionalContexts(build.AdditionalContexts),",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "221:   return nil, err",
          "222:  }",
          "226:  metadata, err := os.CreateTemp(os.TempDir(), \"compose\")",
          "227:  if err != nil {",
          "",
          "[Removed Lines]",
          "224:  logrus.Debugf(\"bake config:\\n%s\", string(b))",
          "",
          "[Added Lines]",
          "222:  logrus.Debugf(\"bake build config:\\n%s\", string(b))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "320:   return nil, err",
          "321:  }",
          "323:  results := map[string]string{}",
          "324:  for name, m := range md {",
          "325:   results[name] = m.Digest",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "321:  cw := progress.ContextWriter(ctx)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "328:  return results, nil",
          "329: }",
          "332:  ac := map[string]string{}",
          "338:  for k, v := range contexts {",
          "339:   ac[k] = v",
          "340:  }",
          "341:  return ac",
          "",
          "[Removed Lines]",
          "331: func additionalContexts(contexts types.Mapping, dependencies types.DependsOnConfig, compatibility bool) map[string]string {",
          "333:  if compatibility {",
          "334:   for name := range dependencies {",
          "335:    ac[name] = \"target:\" + name",
          "336:   }",
          "337:  }",
          "",
          "[Added Lines]",
          "330: func additionalContexts(contexts types.Mapping) map[string]string {",
          "333:   if target, found := strings.CutPrefix(v, types.ServicePrefix); found {",
          "334:    v = \"target:\" + target",
          "335:   }",
          "",
          "---------------"
        ],
        "pkg/e2e/build_test.go||pkg/e2e/build_test.go": [
          "File: pkg/e2e/build_test.go -> pkg/e2e/build_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "271:  t.Run(\"ClassicBuilder\", func(t *testing.T) {",
          "272:   cli := NewCLI(t, WithEnv(",
          "273:    \"DOCKER_BUILDKIT=0\",",
          "275:   ))",
          "276:   doTest(t, cli)",
          "277:  })",
          "280:   cli := NewCLI(t, WithEnv(",
          "281:    \"DOCKER_BUILDKIT=1\",",
          "282:    \"COMPOSE_FILE=./fixtures/build-dependencies/compose.yaml\",",
          "283:   ))",
          "284:   doTest(t, cli)",
          "285:  })",
          "286: }",
          "288: func TestBuildPlatformsWithCorrectBuildxConfig(t *testing.T) {",
          "",
          "[Removed Lines]",
          "274:    \"COMPOSE_FILE=./fixtures/build-dependencies/compose.yaml\",",
          "279:  t.Run(\"BuildKit\", func(t *testing.T) {",
          "",
          "[Added Lines]",
          "274:    \"COMPOSE_FILE=./fixtures/build-dependencies/classic.yaml\",",
          "275:   ))",
          "276:   doTest(t, cli)",
          "277:  })",
          "279:  t.Run(\"BuildKit by dependency order\", func(t *testing.T) {",
          "280:   cli := NewCLI(t, WithEnv(",
          "281:    \"DOCKER_BUILDKIT=1\",",
          "282:    \"COMPOSE_FILE=./fixtures/build-dependencies/classic.yaml\",",
          "287:  t.Run(\"BuildKit by additional contexts\", func(t *testing.T) {",
          "291:   ))",
          "292:   doTest(t, cli)",
          "293:  })",
          "295:  t.Run(\"Bake by additional contexts\", func(t *testing.T) {",
          "296:   cli := NewCLI(t, WithEnv(",
          "297:    \"DOCKER_BUILDKIT=1\", \"COMPOSE_BAKE=1\",",
          "298:    \"COMPOSE_FILE=./fixtures/build-dependencies/compose.yaml\",",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "361c0893a9e16d54f535cdb2e764362363d40702",
      "candidate_info": {
        "commit_hash": "361c0893a9e16d54f535cdb2e764362363d40702",
        "repo": "docker/compose",
        "commit_url": "https://github.com/docker/compose/commit/361c0893a9e16d54f535cdb2e764362363d40702",
        "files": [
          "go.mod",
          "go.sum"
        ],
        "message": "build(deps): bump github.com/compose-spec/compose-go/v2\n\nBumps [github.com/compose-spec/compose-go/v2](https://github.com/compose-spec/compose-go) from 2.4.2 to 2.4.3.\n- [Release notes](https://github.com/compose-spec/compose-go/releases)\n- [Commits](https://github.com/compose-spec/compose-go/compare/v2.4.2...v2.4.3)\n\n---\nupdated-dependencies:\n- dependency-name: github.com/compose-spec/compose-go/v2\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ],
          "candidate": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ]
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  github.com/Microsoft/go-winio v0.6.2",
          "8:  github.com/acarl005/stripansi v0.0.0-20180116102854-5a71ef0e047d",
          "9:  github.com/buger/goterm v1.0.4",
          "11:  github.com/containerd/containerd v1.7.23",
          "12:  github.com/containerd/platforms v0.2.1",
          "13:  github.com/davecgh/go-spew v1.1.1",
          "",
          "[Removed Lines]",
          "10:  github.com/compose-spec/compose-go/v2 v2.4.2",
          "",
          "[Added Lines]",
          "10:  github.com/compose-spec/compose-go/v2 v2.4.3",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "85: github.com/cncf/xds/go v0.0.0-20240723142845-024c85f92f20/go.mod h1:W+zGtBO5Y1IgJhy4+A9GOqVhqLpfZi+vwmdNXUehLA8=",
          "86: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb h1:EDmT6Q9Zs+SbUoc7Ik9EfrFqcylYqgPZ9ANSbTAntnE=",
          "87: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb/go.mod h1:ZjrT6AXHbDs86ZSdt/osfBi5qfexBrKUdONk989Wnk4=",
          "90: github.com/containerd/cgroups v1.1.0 h1:v8rEWFl6EoqHB+swVNjVoCJE8o3jX7e8nqBGPLaDFBM=",
          "91: github.com/containerd/cgroups v1.1.0/go.mod h1:6ppBcbh/NOOUU+dMKrykgaBnK9lCIBxHqJDGwsa1mIw=",
          "92: github.com/containerd/console v1.0.4 h1:F2g4+oChYvBTsASRTz8NP6iIAi97J3TtSAsLbIFn4ro=",
          "",
          "[Removed Lines]",
          "88: github.com/compose-spec/compose-go/v2 v2.4.2 h1:RaZv+ZKZVNmxi4Cww1EKiJRLSZLiqVxIqhLUdH92dz4=",
          "89: github.com/compose-spec/compose-go/v2 v2.4.2/go.mod h1:lFN0DrMxIncJGYAXTfWuajfwj5haBJqrBkarHcnjJKc=",
          "",
          "[Added Lines]",
          "88: github.com/compose-spec/compose-go/v2 v2.4.3 h1:4+Nd9IqIGobbPles9ZuRS5uJfFfRgBo4Wdcv+8VNex8=",
          "89: github.com/compose-spec/compose-go/v2 v2.4.3/go.mod h1:lFN0DrMxIncJGYAXTfWuajfwj5haBJqrBkarHcnjJKc=",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9eeb2d3154d7df7c53959ec5b004bab3e71d3bc5",
      "candidate_info": {
        "commit_hash": "9eeb2d3154d7df7c53959ec5b004bab3e71d3bc5",
        "repo": "docker/compose",
        "commit_url": "https://github.com/docker/compose/commit/9eeb2d3154d7df7c53959ec5b004bab3e71d3bc5",
        "files": [
          "go.mod",
          "go.sum",
          "pkg/compose/create.go"
        ],
        "message": "convert gpus to DeviceRequests with implicit \"gpu\" capability\n\nSigned-off-by: Nicolas De Loof <nicolas.deloof@gmail.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum",
          "pkg/compose/create.go||pkg/compose/create.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod",
            "go.sum||go.sum",
            "pkg/compose/create.go||pkg/compose/create.go"
          ],
          "candidate": [
            "go.mod||go.mod",
            "go.sum||go.sum",
            "pkg/compose/create.go||pkg/compose/create.go"
          ]
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  github.com/Microsoft/go-winio v0.6.2",
          "8:  github.com/acarl005/stripansi v0.0.0-20180116102854-5a71ef0e047d",
          "9:  github.com/buger/goterm v1.0.4",
          "11:  github.com/containerd/containerd v1.7.22",
          "12:  github.com/containerd/platforms v0.2.1",
          "13:  github.com/davecgh/go-spew v1.1.1",
          "",
          "[Removed Lines]",
          "10:  github.com/compose-spec/compose-go/v2 v2.2.1-0.20241007090213-a59035ad2bf4",
          "",
          "[Added Lines]",
          "10:  github.com/compose-spec/compose-go/v2 v2.2.1-0.20241009124803-7218685580f7",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "85: github.com/cncf/xds/go v0.0.0-20231128003011-0fa0005c9caa/go.mod h1:x/1Gn8zydmfq8dk6e9PdstVsDgu9RuyIIJqAaF//0IM=",
          "86: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb h1:EDmT6Q9Zs+SbUoc7Ik9EfrFqcylYqgPZ9ANSbTAntnE=",
          "87: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb/go.mod h1:ZjrT6AXHbDs86ZSdt/osfBi5qfexBrKUdONk989Wnk4=",
          "90: github.com/containerd/cgroups v1.1.0 h1:v8rEWFl6EoqHB+swVNjVoCJE8o3jX7e8nqBGPLaDFBM=",
          "91: github.com/containerd/cgroups v1.1.0/go.mod h1:6ppBcbh/NOOUU+dMKrykgaBnK9lCIBxHqJDGwsa1mIw=",
          "92: github.com/containerd/console v1.0.4 h1:F2g4+oChYvBTsASRTz8NP6iIAi97J3TtSAsLbIFn4ro=",
          "",
          "[Removed Lines]",
          "88: github.com/compose-spec/compose-go/v2 v2.2.1-0.20241007090213-a59035ad2bf4 h1:2FWtPQWe/tkeGuwxk5x03luRw5pzPhPCRfzfeVw56vo=",
          "89: github.com/compose-spec/compose-go/v2 v2.2.1-0.20241007090213-a59035ad2bf4/go.mod h1:lFN0DrMxIncJGYAXTfWuajfwj5haBJqrBkarHcnjJKc=",
          "",
          "[Added Lines]",
          "88: github.com/compose-spec/compose-go/v2 v2.2.1-0.20241009124803-7218685580f7 h1:AEhMR3gIC1HXWoM2KN9LK0P+Gm1NGWBVgflWD1BSnv4=",
          "89: github.com/compose-spec/compose-go/v2 v2.2.1-0.20241009124803-7218685580f7/go.mod h1:lFN0DrMxIncJGYAXTfWuajfwj5haBJqrBkarHcnjJKc=",
          "",
          "---------------"
        ],
        "pkg/compose/create.go||pkg/compose/create.go": [
          "File: pkg/compose/create.go -> pkg/compose/create.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "668:   })",
          "669:  }",
          "671:  ulimits := toUlimits(s.Ulimits)",
          "672:  resources.Ulimits = ulimits",
          "673:  return resources",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "671:  for _, gpus := range s.Gpus {",
          "672:   resources.DeviceRequests = append(resources.DeviceRequests, container.DeviceRequest{",
          "673:    Driver:       gpus.Driver,",
          "674:    Count:        int(gpus.Count),",
          "675:    DeviceIDs:    gpus.IDs,",
          "676:    Capabilities: [][]string{append(gpus.Capabilities, \"gpu\")},",
          "677:    Options:      gpus.Options,",
          "678:   })",
          "679:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "af5b748500fd240d3b7058fbaa5f956766ba9c05",
      "candidate_info": {
        "commit_hash": "af5b748500fd240d3b7058fbaa5f956766ba9c05",
        "repo": "docker/compose",
        "commit_url": "https://github.com/docker/compose/commit/af5b748500fd240d3b7058fbaa5f956766ba9c05",
        "files": [
          "go.mod",
          "go.sum",
          "pkg/compose/watch.go",
          "pkg/compose/watch_test.go"
        ],
        "message": "revisit TestDebounceBatching\n\nSigned-off-by: Nicolas De Loof <nicolas.deloof@gmail.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum",
          "pkg/compose/watch.go||pkg/compose/watch.go",
          "pkg/compose/watch_test.go||pkg/compose/watch_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ],
          "candidate": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ]
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "9:  github.com/Microsoft/go-winio v0.6.2",
          "10:  github.com/acarl005/stripansi v0.0.0-20180116102854-5a71ef0e047d",
          "11:  github.com/buger/goterm v1.0.4",
          "13:  github.com/containerd/containerd v1.7.24",
          "14:  github.com/containerd/platforms v0.2.1",
          "15:  github.com/davecgh/go-spew v1.1.1",
          "",
          "[Removed Lines]",
          "12:  github.com/compose-spec/compose-go/v2 v2.4.5",
          "",
          "[Added Lines]",
          "12:  github.com/compose-spec/compose-go/v2 v2.4.6-0.20241203131247-9a9cc5d9c345",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "195:  sigs.k8s.io/structured-merge-diff/v4 v4.4.1 // indirect",
          "196:  sigs.k8s.io/yaml v1.3.0 // indirect",
          "197: )",
          "",
          "[Removed Lines]",
          "199: replace github.com/compose-spec/compose-go/v2 => github.com/ndeloof/compose-go/v2 v2.0.1-0.20241127110655-b1321070b3ab",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "85: github.com/cncf/xds/go v0.0.0-20240905190251-b4127c9b8d78/go.mod h1:W+zGtBO5Y1IgJhy4+A9GOqVhqLpfZi+vwmdNXUehLA8=",
          "86: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb h1:EDmT6Q9Zs+SbUoc7Ik9EfrFqcylYqgPZ9ANSbTAntnE=",
          "87: github.com/codahale/rfc6979 v0.0.0-20141003034818-6a90f24967eb/go.mod h1:ZjrT6AXHbDs86ZSdt/osfBi5qfexBrKUdONk989Wnk4=",
          "88: github.com/containerd/cgroups v1.1.0 h1:v8rEWFl6EoqHB+swVNjVoCJE8o3jX7e8nqBGPLaDFBM=",
          "89: github.com/containerd/cgroups/v3 v3.0.3 h1:S5ByHZ/h9PMe5IOQoN7E+nMc2UcLEM/V48DGDJ9kip0=",
          "90: github.com/containerd/cgroups/v3 v3.0.3/go.mod h1:8HBe7V3aWGLFPd/k03swSIsGjZhHI2WzJmticMgVuz0=",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "88: github.com/compose-spec/compose-go/v2 v2.4.6-0.20241203131247-9a9cc5d9c345 h1:oLm7hga9jjaDedg+dqsWiI1GeRrcGLBPxu8W0VfpiKA=",
          "89: github.com/compose-spec/compose-go/v2 v2.4.6-0.20241203131247-9a9cc5d9c345/go.mod h1:lFN0DrMxIncJGYAXTfWuajfwj5haBJqrBkarHcnjJKc=",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "355: github.com/mwitkow/go-conntrack v0.0.0-20161129095857-cc309e4a2223/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=",
          "356: github.com/mxk/go-flowrate v0.0.0-20140419014527-cca7078d478f h1:y5//uYreIhSUg3J1GEMiLbxo1LJaP8RfCpH6pymGZus=",
          "357: github.com/mxk/go-flowrate v0.0.0-20140419014527-cca7078d478f/go.mod h1:ZdcZmHo+o7JKHSa8/e818NopupXU1YMK5fe1lsApnBw=",
          "360: github.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e/go.mod h1:zD1mROLANZcx1PVRCS0qkT7pwLkGfwJo4zjcN/Tysno=",
          "361: github.com/onsi/ginkgo v1.6.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=",
          "362: github.com/onsi/ginkgo v1.12.0 h1:Iw5WCbBcaAAd0fpRb1c9r5YCylv4XDoCSigm1zLevwU=",
          "",
          "[Removed Lines]",
          "358: github.com/ndeloof/compose-go/v2 v2.0.1-0.20241127110655-b1321070b3ab h1:3Q4/1sAnPv4nMpak/lIzWsQJjX8X5zKZRkDd6mlf2mc=",
          "359: github.com/ndeloof/compose-go/v2 v2.0.1-0.20241127110655-b1321070b3ab/go.mod h1:lFN0DrMxIncJGYAXTfWuajfwj5haBJqrBkarHcnjJKc=",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "pkg/compose/watch.go||pkg/compose/watch.go": [
          "File: pkg/compose/watch.go -> pkg/compose/watch.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "344:  out := make(chan []fileEvent)",
          "345:  go func() {",
          "346:   defer close(out)",
          "348:   flushEvents := func() {",
          "349:    if len(seen) == 0 {",
          "350:     return",
          "",
          "[Removed Lines]",
          "347:   seen := make(map[sync.PathMapping]fileEvent)",
          "",
          "[Added Lines]",
          "347:   seen := make(map[string]fileEvent)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "354:     events = append(events, e)",
          "355:    }",
          "356:    out <- events",
          "358:   }",
          "360:   t := clock.NewTicker(delay)",
          "",
          "[Removed Lines]",
          "357:    seen = make(map[sync.PathMapping]fileEvent)",
          "",
          "[Added Lines]",
          "357:    seen = make(map[string]fileEvent)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "371:      flushEvents()",
          "372:      return",
          "373:     }",
          "375:     t.Reset(delay)",
          "376:    }",
          "377:   }",
          "",
          "[Removed Lines]",
          "374:     seen[e.PathMapping] = e",
          "",
          "[Added Lines]",
          "374:     seen[e.HostPath] = e",
          "",
          "---------------"
        ],
        "pkg/compose/watch_test.go||pkg/compose/watch_test.go": [
          "File: pkg/compose/watch_test.go -> pkg/compose/watch_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "18:  \"context\"",
          "19:  \"fmt\"",
          "20:  \"os\"",
          "21:  \"testing\"",
          "22:  \"time\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21:  \"slices\"",
          "22:  \"strings\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "42:  ctx, stop := context.WithCancel(context.Background())",
          "43:  t.Cleanup(stop)",
          "45:  eventBatchCh := batchDebounceEvents(ctx, clock, quietPeriod, ch)",
          "46:  for i := 0; i < 100; i++ {",
          "48:   if i%2 == 0 {",
          "50:   }",
          "52:  }",
          "54:  clock.BlockUntil(101)",
          "55:  clock.Advance(quietPeriod)",
          "56:  select {",
          "57:  case batch := <-eventBatchCh:",
          "61:   })",
          "62:  case <-time.After(50 * time.Millisecond):",
          "63:   t.Fatal(\"timed out waiting for events\")",
          "64:  }",
          "",
          "[Removed Lines]",
          "47:   var action types.WatchAction = \"a\"",
          "49:    action = \"b\"",
          "51:   ch <- fileEvent{Trigger: types.Trigger{Action: action}}",
          "58:   require.ElementsMatch(t, batch, []fileEvent{",
          "59:    {Trigger: types.Trigger{Action: \"a\"}},",
          "60:    {Trigger: types.Trigger{Action: \"b\"}},",
          "",
          "[Added Lines]",
          "47:  trigger := types.Trigger{",
          "48:   Path: \"/\",",
          "49:  }",
          "50:  matcher := watch.EmptyMatcher{}",
          "53:   var path = \"/a\"",
          "55:    path = \"/b\"",
          "58:   event := maybeFileEvent(trigger, path, matcher)",
          "59:   require.NotNil(t, event)",
          "60:   ch <- *event",
          "67:   slices.SortFunc(batch, func(a, b fileEvent) int {",
          "68:    return strings.Compare(a.HostPath, b.HostPath)",
          "70:   assert.Equal(t, len(batch), 2)",
          "71:   assert.Equal(t, batch[0].HostPath, \"/a\")",
          "72:   assert.Equal(t, batch[1].HostPath, \"/b\")",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a8469db83f514a5abe4681c7fee773061f1941c6",
      "candidate_info": {
        "commit_hash": "a8469db83f514a5abe4681c7fee773061f1941c6",
        "repo": "docker/compose",
        "commit_url": "https://github.com/docker/compose/commit/a8469db83f514a5abe4681c7fee773061f1941c6",
        "files": [
          "go.mod",
          "go.sum"
        ],
        "message": "bump containerd to v1.7,24\n\nSigned-off-by: Guillaume Lours <705411+glours@users.noreply.github.com>",
        "before_after_code_files": [
          "go.mod||go.mod",
          "go.sum||go.sum"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ],
          "candidate": [
            "go.mod||go.mod",
            "go.sum||go.sum"
          ]
        }
      },
      "candidate_diff": {
        "go.mod||go.mod": [
          "File: go.mod -> go.mod",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:  github.com/acarl005/stripansi v0.0.0-20180116102854-5a71ef0e047d",
          "11:  github.com/buger/goterm v1.0.4",
          "12:  github.com/compose-spec/compose-go/v2 v2.4.5",
          "14:  github.com/containerd/platforms v0.2.1",
          "15:  github.com/davecgh/go-spew v1.1.1",
          "16:  github.com/distribution/reference v0.6.0",
          "",
          "[Removed Lines]",
          "13:  github.com/containerd/containerd v1.7.23",
          "",
          "[Added Lines]",
          "13:  github.com/containerd/containerd v1.7.24",
          "",
          "---------------"
        ],
        "go.sum||go.sum": [
          "File: go.sum -> go.sum",
          "--- Hunk 1 ---",
          "[Context before]",
          "92: github.com/containerd/cgroups/v3 v3.0.2/go.mod h1:JUgITrzdFqp42uI2ryGA+ge0ap/nxzYgkGmIcetmErE=",
          "93: github.com/containerd/console v1.0.4 h1:F2g4+oChYvBTsASRTz8NP6iIAi97J3TtSAsLbIFn4ro=",
          "94: github.com/containerd/console v1.0.4/go.mod h1:YynlIjWYF8myEu6sdkwKIvGQq+cOckRm6So2avqoYAk=",
          "97: github.com/containerd/containerd/api v1.7.19 h1:VWbJL+8Ap4Ju2mx9c9qS1uFSB1OVYr5JJrW2yT5vFoA=",
          "98: github.com/containerd/containerd/api v1.7.19/go.mod h1:fwGavl3LNwAV5ilJ0sbrABL44AQxmNjDRcwheXDb6Ig=",
          "99: github.com/containerd/continuity v0.4.4 h1:/fNVfTJ7wIl/YPMHjf+5H32uFhl63JucB34PlCpMKII=",
          "",
          "[Removed Lines]",
          "95: github.com/containerd/containerd v1.7.23 h1:H2CClyUkmpKAGlhQp95g2WXHfLYc7whAuvZGBNYOOwQ=",
          "96: github.com/containerd/containerd v1.7.23/go.mod h1:7QUzfURqZWCZV7RLNEn1XjUCQLEf0bkaK4GjUaZehxw=",
          "",
          "[Added Lines]",
          "95: github.com/containerd/containerd v1.7.24 h1:zxszGrGjrra1yYJW/6rhm9cJ1ZQ8rkKBR48brqsa7nA=",
          "96: github.com/containerd/containerd v1.7.24/go.mod h1:7QUzfURqZWCZV7RLNEn1XjUCQLEf0bkaK4GjUaZehxw=",
          "",
          "---------------"
        ]
      }
    }
  ]
}