{
  "cve_id": "CVE-2024-29194",
  "cve_desc": "OneUptime is a solution for monitoring and managing online services. The vulnerability lies in the improper validation of client-side stored data within the web application. Specifically, the is_master_admin key, stored in the local storage of the browser, can be manipulated by an attacker. By changing this key from false to true, the application grants administrative privileges to the user, without proper server-side validation.  This has been patched in 7.0.1815.",
  "repo": "OneUptime/oneuptime",
  "patch_hash": "14016d23d834038dd65d3a96cf71af04b556a32c",
  "patch_info": {
    "commit_hash": "14016d23d834038dd65d3a96cf71af04b556a32c",
    "repo": "OneUptime/oneuptime",
    "commit_url": "https://github.com/OneUptime/oneuptime/commit/14016d23d834038dd65d3a96cf71af04b556a32c",
    "files": [
      "CommonServer/Types/Database/ModelPermission.ts",
      "Model/Models/BillingInvoice.ts",
      "Model/Models/OnCallDutyPolicyEscalationRule.ts",
      "Model/Models/OnCallDutyPolicyEscalationRuleSchedule.ts",
      "Model/Models/OnCallDutyPolicyEscalationRuleTeam.ts",
      "Model/Models/OnCallDutyPolicyEscalationRuleUser.ts",
      "Model/Models/OnCallDutyPolicyExecutionLog.ts",
      "Model/Models/OnCallDutyPolicyExecutionLogTimeline.ts",
      "Model/Models/OnCallDutyPolicySchedule.ts",
      "Model/Models/OnCallDutyPolicyScheduleLayer.ts",
      "Model/Models/OnCallDutyPolicyScheduleLayerUser.ts",
      "Model/Models/User.ts"
    ],
    "message": "Add deletedByUserId property to several models",
    "before_after_code_files": [
      "CommonServer/Types/Database/ModelPermission.ts||CommonServer/Types/Database/ModelPermission.ts",
      "Model/Models/BillingInvoice.ts||Model/Models/BillingInvoice.ts",
      "Model/Models/OnCallDutyPolicyEscalationRule.ts||Model/Models/OnCallDutyPolicyEscalationRule.ts",
      "Model/Models/OnCallDutyPolicyEscalationRuleSchedule.ts||Model/Models/OnCallDutyPolicyEscalationRuleSchedule.ts",
      "Model/Models/OnCallDutyPolicyEscalationRuleTeam.ts||Model/Models/OnCallDutyPolicyEscalationRuleTeam.ts",
      "Model/Models/OnCallDutyPolicyEscalationRuleUser.ts||Model/Models/OnCallDutyPolicyEscalationRuleUser.ts",
      "Model/Models/OnCallDutyPolicyExecutionLog.ts||Model/Models/OnCallDutyPolicyExecutionLog.ts",
      "Model/Models/OnCallDutyPolicyExecutionLogTimeline.ts||Model/Models/OnCallDutyPolicyExecutionLogTimeline.ts",
      "Model/Models/OnCallDutyPolicySchedule.ts||Model/Models/OnCallDutyPolicySchedule.ts",
      "Model/Models/OnCallDutyPolicyScheduleLayer.ts||Model/Models/OnCallDutyPolicyScheduleLayer.ts",
      "Model/Models/OnCallDutyPolicyScheduleLayerUser.ts||Model/Models/OnCallDutyPolicyScheduleLayerUser.ts",
      "Model/Models/User.ts||Model/Models/User.ts"
    ]
  },
  "patch_diff": {
    "CommonServer/Types/Database/ModelPermission.ts||CommonServer/Types/Database/ModelPermission.ts": [
      "File: CommonServer/Types/Database/ModelPermission.ts -> CommonServer/Types/Database/ModelPermission.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "39: import ColumnBillingAccessControl from 'Common/Types/BaseDatabase/ColumnBillingAccessControl';",
      "40: import DatabaseCommonInteractionPropsUtil from 'Common/Types/BaseDatabase/DatabaseCommonInteractionPropsUtil';",
      "41: import Includes from 'Common/Types/BaseDatabase/Includes';",
      "43: export interface CheckReadPermissionType<TBaseModel extends BaseModel> {",
      "44:     query: Query<TBaseModel>;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "42: import UserModel from 'Common/Models/UserModel';",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "295:                 props",
      "296:             );",
      "298:             if (!props.isMultiTenantRequest) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "301:             query = await this.addUserScopeToQuery(modelType, query, props);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "854:         return query;",
      "855:     }",
      "857:     private static async addTenantScopeToQuery<TBaseModel extends BaseModel>(",
      "858:         modelType: { new (): TBaseModel },",
      "859:         query: Query<TBaseModel>,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "862:     private static async addUserScopeToQuery<TBaseModel extends BaseModel>(",
      "863:         modelType: { new (): TBaseModel },",
      "864:         query: Query<TBaseModel>,",
      "865:         props: DatabaseCommonInteractionProps",
      "866:     ): Promise<Query<TBaseModel>> {",
      "867:         const model: BaseModel = new modelType();",
      "869:         if (model instanceof UserModel) {",
      "870:             if (props.userId) {",
      "871:                 (query as any)['_id'] = props.userId;",
      "872:             } else if (!props.isRoot && !props.isMasterAdmin) {",
      "873:                 throw new NotAuthorizedException(",
      "874:                     `You do not have permissions to query on - ${model.singularName}.`",
      "875:                 );",
      "876:             }",
      "877:         }",
      "879:         return query;",
      "880:     }",
      "",
      "---------------"
    ],
    "Model/Models/BillingInvoice.ts||Model/Models/BillingInvoice.ts": [
      "File: Model/Models/BillingInvoice.ts -> Model/Models/BillingInvoice.ts"
    ],
    "Model/Models/OnCallDutyPolicyEscalationRule.ts||Model/Models/OnCallDutyPolicyEscalationRule.ts": [
      "File: Model/Models/OnCallDutyPolicyEscalationRule.ts -> Model/Models/OnCallDutyPolicyEscalationRule.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "355:     @JoinColumn({ name: 'deletedByUserId' })",
      "356:     public deletedByUser?: User = undefined;",
      "358:     @ColumnAccessControl({",
      "359:         create: [",
      "360:             Permission.ProjectOwner,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "358:     @ColumnAccessControl({",
      "359:         create: [],",
      "360:         read: [],",
      "361:         update: [],",
      "362:     })",
      "363:     @TableColumn({",
      "364:         type: TableColumnType.ObjectID,",
      "365:         title: 'Deleted by User ID',",
      "366:         description:",
      "367:             'User ID who deleted this object (if this object was deleted by a User)',",
      "368:     })",
      "369:     @Column({",
      "370:         type: ColumnType.ObjectID,",
      "371:         nullable: true,",
      "372:         transformer: ObjectID.getDatabaseTransformer(),",
      "373:     })",
      "374:     public deletedByUserId?: ObjectID = undefined;",
      "",
      "---------------"
    ],
    "Model/Models/OnCallDutyPolicyEscalationRuleSchedule.ts||Model/Models/OnCallDutyPolicyEscalationRuleSchedule.ts": [
      "File: Model/Models/OnCallDutyPolicyEscalationRuleSchedule.ts -> Model/Models/OnCallDutyPolicyEscalationRuleSchedule.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "420:     )",
      "421:     @JoinColumn({ name: 'deletedByUserId' })",
      "422:     public deletedByUser?: User = undefined;",
      "423: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "425:     @ColumnAccessControl({",
      "426:         create: [],",
      "427:         read: [],",
      "428:         update: [],",
      "429:     })",
      "430:     @TableColumn({",
      "431:         type: TableColumnType.ObjectID,",
      "432:         title: 'Deleted by User ID',",
      "433:         description:",
      "434:             'User ID who deleted this object (if this object was deleted by a User)',",
      "435:     })",
      "436:     @Column({",
      "437:         type: ColumnType.ObjectID,",
      "438:         nullable: true,",
      "439:         transformer: ObjectID.getDatabaseTransformer(),",
      "440:     })",
      "441:     public deletedByUserId?: ObjectID = undefined;",
      "",
      "---------------"
    ],
    "Model/Models/OnCallDutyPolicyEscalationRuleTeam.ts||Model/Models/OnCallDutyPolicyEscalationRuleTeam.ts": [
      "File: Model/Models/OnCallDutyPolicyEscalationRuleTeam.ts -> Model/Models/OnCallDutyPolicyEscalationRuleTeam.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "418:     )",
      "419:     @JoinColumn({ name: 'deletedByUserId' })",
      "420:     public deletedByUser?: User = undefined;",
      "421: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "422:     @ColumnAccessControl({",
      "423:         create: [],",
      "424:         read: [],",
      "425:         update: [],",
      "426:     })",
      "427:     @TableColumn({",
      "428:         type: TableColumnType.ObjectID,",
      "429:         title: 'Deleted by User ID',",
      "430:         description:",
      "431:             'User ID who deleted this object (if this object was deleted by a User)',",
      "432:     })",
      "433:     @Column({",
      "434:         type: ColumnType.ObjectID,",
      "435:         nullable: true,",
      "436:         transformer: ObjectID.getDatabaseTransformer(),",
      "437:     })",
      "438:     public deletedByUserId?: ObjectID = undefined;",
      "",
      "---------------"
    ],
    "Model/Models/OnCallDutyPolicyEscalationRuleUser.ts||Model/Models/OnCallDutyPolicyEscalationRuleUser.ts": [
      "File: Model/Models/OnCallDutyPolicyEscalationRuleUser.ts -> Model/Models/OnCallDutyPolicyEscalationRuleUser.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "417:     )",
      "418:     @JoinColumn({ name: 'deletedByUserId' })",
      "419:     public deletedByUser?: User = undefined;",
      "420: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "421:     @ColumnAccessControl({",
      "422:         create: [],",
      "423:         read: [],",
      "424:         update: [],",
      "425:     })",
      "426:     @TableColumn({",
      "427:         type: TableColumnType.ObjectID,",
      "428:         title: 'Deleted by User ID',",
      "429:         description:",
      "430:             'User ID who deleted this object (if this object was deleted by a User)',",
      "431:     })",
      "432:     @Column({",
      "433:         type: ColumnType.ObjectID,",
      "434:         nullable: true,",
      "435:         transformer: ObjectID.getDatabaseTransformer(),",
      "436:     })",
      "437:     public deletedByUserId?: ObjectID = undefined;",
      "",
      "---------------"
    ],
    "Model/Models/OnCallDutyPolicyExecutionLog.ts||Model/Models/OnCallDutyPolicyExecutionLog.ts": [
      "File: Model/Models/OnCallDutyPolicyExecutionLog.ts -> Model/Models/OnCallDutyPolicyExecutionLog.ts"
    ],
    "Model/Models/OnCallDutyPolicyExecutionLogTimeline.ts||Model/Models/OnCallDutyPolicyExecutionLogTimeline.ts": [
      "File: Model/Models/OnCallDutyPolicyExecutionLogTimeline.ts -> Model/Models/OnCallDutyPolicyExecutionLogTimeline.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "708:         unique: false,",
      "709:     })",
      "710:     public acknowledgedAt?: Date = undefined;",
      "711: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "712:     @ColumnAccessControl({",
      "713:         create: [],",
      "714:         read: [],",
      "715:         update: [],",
      "716:     })",
      "717:     @TableColumn({",
      "718:         type: TableColumnType.ObjectID,",
      "719:         title: 'Deleted by User ID',",
      "720:         description:",
      "721:             'User ID who deleted this object (if this object was deleted by a User)',",
      "722:     })",
      "723:     @Column({",
      "724:         type: ColumnType.ObjectID,",
      "725:         nullable: true,",
      "726:         transformer: ObjectID.getDatabaseTransformer(),",
      "727:     })",
      "728:     public deletedByUserId?: ObjectID = undefined;",
      "",
      "---------------"
    ],
    "Model/Models/OnCallDutyPolicySchedule.ts||Model/Models/OnCallDutyPolicySchedule.ts": [
      "File: Model/Models/OnCallDutyPolicySchedule.ts -> Model/Models/OnCallDutyPolicySchedule.ts"
    ],
    "Model/Models/OnCallDutyPolicyScheduleLayer.ts||Model/Models/OnCallDutyPolicyScheduleLayer.ts": [
      "File: Model/Models/OnCallDutyPolicyScheduleLayer.ts -> Model/Models/OnCallDutyPolicyScheduleLayer.ts"
    ],
    "Model/Models/OnCallDutyPolicyScheduleLayerUser.ts||Model/Models/OnCallDutyPolicyScheduleLayerUser.ts": [
      "File: Model/Models/OnCallDutyPolicyScheduleLayerUser.ts -> Model/Models/OnCallDutyPolicyScheduleLayerUser.ts"
    ],
    "Model/Models/User.ts||Model/Models/User.ts": [
      "File: Model/Models/User.ts -> Model/Models/User.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "32: @AllowAccessIfSubscriptionIsUnpaid()",
      "33: @TableAccessControl({",
      "34:     create: [Permission.Public],",
      "40:     delete: [Permission.CurrentUser],",
      "41:     update: [Permission.CurrentUser],",
      "42: })",
      "",
      "[Removed Lines]",
      "35:     read: [",
      "36:         Permission.CurrentUser,",
      "37:         Permission.ProjectAdmin,",
      "38:         Permission.ProjectOwner,",
      "39:     ],",
      "",
      "[Added Lines]",
      "35:     read: [Permission.CurrentUser],",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "56: class User extends UserModel {",
      "57:     @ColumnAccessControl({",
      "58:         create: [Permission.Public],",
      "64:         update: [Permission.CurrentUser],",
      "65:     })",
      "66:     @TableColumn({ type: TableColumnType.Name, canReadOnRelationQuery: true })",
      "",
      "[Removed Lines]",
      "59:         read: [",
      "60:             Permission.CurrentUser,",
      "61:             Permission.ProjectAdmin,",
      "62:             Permission.ProjectOwner,",
      "63:         ],",
      "",
      "[Added Lines]",
      "55:         read: [Permission.CurrentUser],",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "76:     @ColumnAccessControl({",
      "77:         create: [Permission.Public],",
      "84:         update: [Permission.CurrentUser],",
      "85:     })",
      "",
      "[Removed Lines]",
      "78:         read: [",
      "79:             Permission.CurrentUser,",
      "80:             Permission.ProjectAdmin,",
      "81:             Permission.ProjectOwner,",
      "82:         ],",
      "",
      "[Added Lines]",
      "70:         read: [Permission.CurrentUser],",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "248:     @ColumnAccessControl({",
      "249:         create: [],",
      "256:         update: [Permission.CurrentUser],",
      "257:     })",
      "",
      "[Removed Lines]",
      "250:         read: [",
      "251:             Permission.CurrentUser,",
      "252:             Permission.ProjectAdmin,",
      "253:             Permission.ProjectOwner,",
      "254:         ],",
      "",
      "[Added Lines]",
      "238:         read: [Permission.CurrentUser],",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "277:     @ColumnAccessControl({",
      "278:         create: [],",
      "285:         update: [Permission.CurrentUser],",
      "286:     })",
      "",
      "[Removed Lines]",
      "279:         read: [",
      "280:             Permission.CurrentUser,",
      "281:             Permission.ProjectAdmin,",
      "282:             Permission.ProjectOwner,",
      "283:         ],",
      "",
      "[Added Lines]",
      "263:         read: [Permission.CurrentUser],",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "298:     @ColumnAccessControl({",
      "299:         create: [],",
      "306:         update: [Permission.CurrentUser],",
      "307:     })",
      "",
      "[Removed Lines]",
      "300:         read: [",
      "301:             Permission.CurrentUser,",
      "302:             Permission.ProjectAdmin,",
      "303:             Permission.ProjectOwner,",
      "304:         ],",
      "",
      "[Added Lines]",
      "280:         read: [Permission.CurrentUser],",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "309:         isDefaultValueColumn: true,",
      "310:         required: true,",
      "311:         type: TableColumnType.Boolean,",
      "312:     })",
      "313:     @Column({",
      "314:         type: ColumnType.Boolean,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "288:         canReadOnRelationQuery: true,",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "425:     @ColumnAccessControl({",
      "426:         create: [],",
      "433:         update: [Permission.CurrentUser],",
      "434:     })",
      "",
      "[Removed Lines]",
      "427:         read: [",
      "428:             Permission.CurrentUser,",
      "429:             Permission.ProjectAdmin,",
      "430:             Permission.ProjectOwner,",
      "431:         ],",
      "",
      "[Added Lines]",
      "404:         read: [Permission.CurrentUser],",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "544:     @ColumnAccessControl({",
      "545:         create: [],",
      "552:         update: [Permission.CurrentUser],",
      "553:     })",
      "",
      "[Removed Lines]",
      "546:         read: [",
      "547:             Permission.CurrentUser,",
      "548:             Permission.ProjectAdmin,",
      "549:             Permission.ProjectOwner,",
      "550:         ],",
      "",
      "[Added Lines]",
      "519:         read: [Permission.CurrentUser],",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6b01d73903b5bca389e5c0dba7f046d867995f7d",
      "candidate_info": {
        "commit_hash": "6b01d73903b5bca389e5c0dba7f046d867995f7d",
        "repo": "OneUptime/oneuptime",
        "commit_url": "https://github.com/OneUptime/oneuptime/commit/6b01d73903b5bca389e5c0dba7f046d867995f7d",
        "files": [
          "CommonServer/Services/Index.ts",
          "CommonServer/Services/MonitorMetricsByMinuteService.ts",
          "Model/AnalyticsModels/Index.ts",
          "Model/AnalyticsModels/MonitorMetricsByMinute.ts"
        ],
        "message": "Add MonitorMetricsByMinuteService and MonitorMetricsByMinute model",
        "before_after_code_files": [
          "CommonServer/Services/Index.ts||CommonServer/Services/Index.ts",
          "CommonServer/Services/MonitorMetricsByMinuteService.ts||CommonServer/Services/MonitorMetricsByMinuteService.ts",
          "Model/AnalyticsModels/Index.ts||Model/AnalyticsModels/Index.ts",
          "Model/AnalyticsModels/MonitorMetricsByMinute.ts||Model/AnalyticsModels/MonitorMetricsByMinute.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OneUptime/oneuptime/pull/1268"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "CommonServer/Services/Index.ts||CommonServer/Services/Index.ts": [
          "File: CommonServer/Services/Index.ts -> CommonServer/Services/Index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "139: import UsageBillingService from './UsageBillingService';",
          "140: import ProjectCallSMSConfigService from './ProjectCallSMSConfigService';",
          "142: const services: Array<BaseService> = [",
          "143:     PromoCodeService,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "141: import MonitorMetricsByMinuteService from './MonitorMetricsByMinuteService';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "275:     MetricSumService,",
          "276:     MetricHistogramService,",
          "277:     MetricGaugeService,",
          "278: ];",
          "280: export default services;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "279:     MonitorMetricsByMinuteService",
          "",
          "---------------"
        ],
        "CommonServer/Services/MonitorMetricsByMinuteService.ts||CommonServer/Services/MonitorMetricsByMinuteService.ts": [
          "File: CommonServer/Services/MonitorMetricsByMinuteService.ts -> CommonServer/Services/MonitorMetricsByMinuteService.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import MonitorMetricsByMinute from 'Model/AnalyticsModels/MonitorMetricsByMinute';",
          "2: import AnalyticsDatabaseService from './AnalyticsDatabaseService';",
          "3: import ClickhouseDatabase from '../Infrastructure/ClickhouseDatabase';",
          "5: export class MonitorMetricsByMinuteService extends AnalyticsDatabaseService<MonitorMetricsByMinute> {",
          "6:     public constructor(clickhouseDatabase?: ClickhouseDatabase | undefined) {",
          "7:         super({ modelType: MonitorMetricsByMinute, database: clickhouseDatabase });",
          "8:     }",
          "9: }",
          "11: export default new MonitorMetricsByMinuteService();",
          "",
          "---------------"
        ],
        "Model/AnalyticsModels/Index.ts||Model/AnalyticsModels/Index.ts": [
          "File: Model/AnalyticsModels/Index.ts -> Model/AnalyticsModels/Index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: import MetricHistogram from './MetricHistogram';",
          "5: import MetricSum from './MetricSum';",
          "6: import MetricGauge from './MetricGauge';",
          "8: const AnalyticsModels: Array<typeof AnalyticsBaseModel> = [",
          "9:     Log,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: import MonitorMetricsByMinute from './MonitorMetricsByMinute';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11:     MetricHistogram,",
          "12:     MetricSum,",
          "13:     MetricGauge,",
          "14: ];",
          "16: export default AnalyticsModels;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15:     MonitorMetricsByMinute",
          "",
          "---------------"
        ],
        "Model/AnalyticsModels/MonitorMetricsByMinute.ts||Model/AnalyticsModels/MonitorMetricsByMinute.ts": [
          "File: Model/AnalyticsModels/MonitorMetricsByMinute.ts -> Model/AnalyticsModels/MonitorMetricsByMinute.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import AnalyticsBaseModel from 'Common/AnalyticsModels/BaseModel';",
          "2: import AnalyticsTableColumn from 'Common/Types/AnalyticsDatabase/TableColumn';",
          "3: import TableColumnType from 'Common/Types/AnalyticsDatabase/TableColumnType';",
          "4: import AnalyticsTableEngine from 'Common/Types/AnalyticsDatabase/AnalyticsTableEngine';",
          "5: import ObjectID from 'Common/Types/ObjectID';",
          "6: import Route from 'Common/Types/API/Route';",
          "7: import Permission from 'Common/Types/Permission';",
          "8: import { JSONObject } from 'Common/Types/JSON';",
          "10: export default class MonitorMetricsByMinute extends AnalyticsBaseModel {",
          "11:     public constructor() {",
          "12:         super({",
          "13:             tableName: 'MonitorMetricsByMinute',",
          "14:             tableEngine: AnalyticsTableEngine.MergeTree,",
          "15:             singularName: 'Monitor Metrics By Minute',",
          "16:             accessControl: {",
          "17:                 read: [",
          "18:                     Permission.ProjectOwner,",
          "19:                     Permission.ProjectAdmin,",
          "20:                     Permission.ProjectMember,",
          "21:                     Permission.CanReadProjectMonitor,",
          "22:                 ],",
          "23:                 create: [",
          "25:                 ],",
          "26:                 update: [",
          "28:                 ],",
          "29:                 delete: [",
          "31:                 ],",
          "32:             },",
          "33:             pluralName: 'Monitor Metrics By Minutes',",
          "34:             crudApiPath: new Route('/monitor-metrics-by-minute'),",
          "35:             tableColumns: [",
          "36:                 new AnalyticsTableColumn({",
          "37:                     key: 'projectId',",
          "38:                     title: 'Project ID',",
          "39:                     description: 'ID of project',",
          "40:                     required: true,",
          "41:                     type: TableColumnType.ObjectID,",
          "42:                     isTenantId: true,",
          "43:                     accessControl: {",
          "44:                         read: [",
          "45:                             Permission.ProjectOwner,",
          "46:                             Permission.ProjectAdmin,",
          "47:                             Permission.ProjectMember,",
          "48:                             Permission.CanReadProjectMonitor,",
          "49:                         ],",
          "50:                         create: [",
          "52:                         ],",
          "53:                         update: [],",
          "54:                     },",
          "55:                 }),",
          "57:                 new AnalyticsTableColumn({",
          "58:                     key: 'monitorId',",
          "59:                     title: 'Monitor ID',",
          "60:                     description: 'ID of the Monitor which this metric belongs to',",
          "61:                     required: true,",
          "62:                     type: TableColumnType.ObjectID,",
          "63:                     accessControl: {",
          "64:                         read: [",
          "65:                             Permission.ProjectOwner,",
          "66:                             Permission.ProjectAdmin,",
          "67:                             Permission.ProjectMember,",
          "68:                             Permission.CanReadProjectMonitor,",
          "69:                         ],",
          "70:                         create: [",
          "72:                         ],",
          "73:                         update: [],",
          "74:                     },",
          "75:                 }),",
          "77:                 new AnalyticsTableColumn({",
          "78:                     key: 'metricType',",
          "79:                     title: 'Metric Type',",
          "80:                     description: 'Type of metric',",
          "81:                     required: true,",
          "82:                     type: TableColumnType.Text,",
          "83:                     accessControl: {",
          "84:                         read: [",
          "85:                             Permission.ProjectOwner,",
          "86:                             Permission.ProjectAdmin,",
          "87:                             Permission.ProjectMember,",
          "88:                             Permission.CanReadProjectMonitor,",
          "89:                         ],",
          "90:                         create: [",
          "92:                         ],",
          "93:                         update: [],",
          "94:                     },",
          "95:                 }),",
          "98:                 new AnalyticsTableColumn({",
          "99:                     key: 'metricValue',",
          "100:                     title: 'Metric Value',",
          "101:                     description: 'Value of the metric',",
          "102:                     required: true,",
          "103:                     type: TableColumnType.Number,",
          "104:                     accessControl: {",
          "105:                         read: [",
          "106:                             Permission.ProjectOwner,",
          "107:                             Permission.ProjectAdmin,",
          "108:                             Permission.ProjectMember,",
          "109:                             Permission.CanReadProjectMonitor,",
          "110:                         ],",
          "111:                         create: [",
          "113:                         ],",
          "114:                         update: [],",
          "115:                     },",
          "116:                 }),",
          "119:                 new AnalyticsTableColumn({",
          "120:                     key: 'miscData',",
          "121:                     title: 'Misc Data',",
          "122:                     description: 'Misc data for the metric (if any)',",
          "123:                     required: false,",
          "124:                     type: TableColumnType.JSON,",
          "125:                     accessControl: {",
          "126:                         read: [",
          "127:                             Permission.ProjectOwner,",
          "128:                             Permission.ProjectAdmin,",
          "129:                             Permission.ProjectMember,",
          "130:                             Permission.CanReadProjectMonitor,",
          "131:                         ],",
          "132:                         create: [",
          "134:                         ],",
          "135:                         update: [],",
          "136:                     },",
          "137:                 }),",
          "140:             ],",
          "141:             primaryKeys: ['projectId', 'monitorId', 'createdAt'],",
          "142:         });",
          "143:     }",
          "145:     public get projectId(): ObjectID | undefined {",
          "146:         return this.getColumnValue('projectId') as ObjectID | undefined;",
          "147:     }",
          "149:     public set projectId(v: ObjectID | undefined) {",
          "150:         this.setColumnValue('projectId', v);",
          "151:     }",
          "153:     public get monitorId(): ObjectID | undefined {",
          "154:         return this.getColumnValue('monitorId') as ObjectID | undefined;",
          "155:     }",
          "157:     public set monitorId(v: ObjectID | undefined) {",
          "158:         this.setColumnValue('monitorId', v);",
          "159:     }",
          "161:     public get metricType(): string | undefined {",
          "162:         return this.getColumnValue('metricType') as string | undefined;",
          "163:     }",
          "165:     public set metricType(v: string | undefined) {",
          "166:         this.setColumnValue('metricType', v);",
          "167:     }",
          "169:     public get metricValue(): number | undefined {",
          "170:         return this.getColumnValue('metricValue') as number | undefined;",
          "171:     }",
          "173:     public set metricValue(v: number | undefined) {",
          "174:         this.setColumnValue('metricValue', v);",
          "175:     }",
          "177:     public get miscData(): JSONObject | undefined {",
          "178:         return this.getColumnValue('miscData') as JSONObject | undefined;",
          "179:     }",
          "181:     public set miscData(v: JSONObject | undefined) {",
          "182:         this.setColumnValue('miscData', v);",
          "183:     }",
          "184: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0839cbe29763ee93919c544a9701f295261834bd",
      "candidate_info": {
        "commit_hash": "0839cbe29763ee93919c544a9701f295261834bd",
        "repo": "OneUptime/oneuptime",
        "commit_url": "https://github.com/OneUptime/oneuptime/commit/0839cbe29763ee93919c544a9701f295261834bd",
        "files": [
          "Ingestor/Utils/Criteria/APIRequestCriteria.ts"
        ],
        "message": "Refactor code to improve performance and readability",
        "before_after_code_files": [
          "Ingestor/Utils/Criteria/APIRequestCriteria.ts||Ingestor/Utils/Criteria/APIRequestCriteria.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OneUptime/oneuptime/pull/1268"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Ingestor/Utils/Criteria/APIRequestCriteria.ts||Ingestor/Utils/Criteria/APIRequestCriteria.ts": [
          "File: Ingestor/Utils/Criteria/APIRequestCriteria.ts -> Ingestor/Utils/Criteria/APIRequestCriteria.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:     CriteriaFilter,",
          "5:     FilterType,",
          "6: } from 'Common/Types/Monitor/CriteriaFilter';",
          "8: import Typeof from 'Common/Types/Typeof';",
          "9: import { JSONObject } from 'Common/Types/JSON';",
          "10: import ProbeMonitorResponse from 'Common/Types/Probe/ProbeMonitorResponse';",
          "12: export default class APIRequestCriteria {",
          "13:     public static async isMonitorInstanceCriteriaFilterMet(input: {",
          "",
          "[Removed Lines]",
          "7: import logger from 'CommonServer/Utils/Logger';",
          "",
          "[Added Lines]",
          "10: import CompareCriteria from './CompareCriteria';",
          "11: import EvaluateOverTime from './EvaluateOverTime';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "16:     }): Promise<string | null> {",
          "67:                 return null;",
          "68:             }",
          "82:                 return null;",
          "83:             }",
          "134:         }",
          "137:         if (input.criteriaFilter.checkOn === CheckOn.ResponseStatusCode) {",
          "249:         }",
          "251:         if (input.criteriaFilter.checkOn === CheckOn.ResponseBody) {",
          "",
          "[Removed Lines]",
          "19:         let value: number | string | undefined = input.criteriaFilter.value;",
          "22:         if (input.criteriaFilter.checkOn === CheckOn.ResponseTime) {",
          "23:             if (!value) {",
          "24:                 return null;",
          "25:             }",
          "27:             if (typeof value === Typeof.String) {",
          "28:                 try {",
          "29:                     value = parseInt(value as string);",
          "30:                 } catch (err) {",
          "31:                     logger.error(err);",
          "32:                     return null;",
          "33:                 }",
          "34:             }",
          "36:             if (typeof value !== Typeof.Number) {",
          "37:                 return null;",
          "38:             }",
          "40:             if (input.criteriaFilter.filterType === FilterType.GreaterThan) {",
          "41:                 if (",
          "42:                     (input.dataToProcess as ProbeMonitorResponse)",
          "43:                         .responseTimeInMs &&",
          "44:                     (input.dataToProcess as ProbeMonitorResponse)",
          "45:                         .responseTimeInMs! > (value as number)",
          "46:                 ) {",
          "47:                     return `Response time is ${",
          "48:                         (input.dataToProcess as ProbeMonitorResponse)",
          "49:                             .responseTimeInMs",
          "50:                     } ms which is greater than the criteria value of ${value} ms.`;",
          "51:                 }",
          "52:                 return null;",
          "53:             }",
          "55:             if (input.criteriaFilter.filterType === FilterType.LessThan) {",
          "56:                 if (",
          "57:                     (input.dataToProcess as ProbeMonitorResponse)",
          "58:                         .responseTimeInMs &&",
          "59:                     (input.dataToProcess as ProbeMonitorResponse)",
          "60:                         .responseTimeInMs! < (value as number)",
          "61:                 ) {",
          "62:                     return `Response time is ${",
          "63:                         (input.dataToProcess as ProbeMonitorResponse)",
          "64:                             .responseTimeInMs",
          "65:                     } ms which is less than the criteria value of ${value} ms.`;",
          "66:                 }",
          "70:             if (input.criteriaFilter.filterType === FilterType.EqualTo) {",
          "71:                 if (",
          "72:                     (input.dataToProcess as ProbeMonitorResponse)",
          "73:                         .responseTimeInMs &&",
          "74:                     (input.dataToProcess as ProbeMonitorResponse)",
          "75:                         .responseTimeInMs === (value as number)",
          "76:                 ) {",
          "77:                     return `Response time is ${",
          "78:                         (input.dataToProcess as ProbeMonitorResponse)",
          "79:                             .responseTimeInMs",
          "80:                     } ms.`;",
          "81:                 }",
          "85:             if (input.criteriaFilter.filterType === FilterType.NotEqualTo) {",
          "86:                 if (",
          "87:                     (input.dataToProcess as ProbeMonitorResponse)",
          "88:                         .responseTimeInMs &&",
          "89:                     (input.dataToProcess as ProbeMonitorResponse)",
          "90:                         .responseTimeInMs !== (value as number)",
          "91:                 ) {",
          "92:                     return `Response time is ${",
          "93:                         (input.dataToProcess as ProbeMonitorResponse)",
          "94:                             .responseTimeInMs",
          "95:                     } ms which is not equal to the criteria value of ${value} ms.`;",
          "96:                 }",
          "97:                 return null;",
          "98:             }",
          "100:             if (",
          "101:                 input.criteriaFilter.filterType ===",
          "102:                 FilterType.GreaterThanOrEqualTo",
          "103:             ) {",
          "104:                 if (",
          "105:                     (input.dataToProcess as ProbeMonitorResponse)",
          "106:                         .responseTimeInMs &&",
          "107:                     (input.dataToProcess as ProbeMonitorResponse)",
          "108:                         .responseTimeInMs! >= (value as number)",
          "109:                 ) {",
          "110:                     return `Response time is ${",
          "111:                         (input.dataToProcess as ProbeMonitorResponse)",
          "112:                             .responseTimeInMs",
          "113:                     } ms which is greater than or equal to the criteria value of ${value} ms.`;",
          "114:                 }",
          "115:                 return null;",
          "116:             }",
          "118:             if (",
          "119:                 input.criteriaFilter.filterType === FilterType.LessThanOrEqualTo",
          "120:             ) {",
          "121:                 if (",
          "122:                     (input.dataToProcess as ProbeMonitorResponse)",
          "123:                         .responseTimeInMs &&",
          "124:                     (input.dataToProcess as ProbeMonitorResponse)",
          "125:                         .responseTimeInMs! <= (value as number)",
          "126:                 ) {",
          "127:                     return `Response time is ${",
          "128:                         (input.dataToProcess as ProbeMonitorResponse)",
          "129:                             .responseTimeInMs",
          "130:                     } ms which is less than or equal to the criteria value of ${value} ms.`;",
          "131:                 }",
          "132:                 return null;",
          "133:             }",
          "138:             if (!value) {",
          "139:                 return null;",
          "140:             }",
          "142:             if (typeof value === Typeof.String) {",
          "143:                 try {",
          "144:                     value = parseInt(value as string);",
          "145:                 } catch (err) {",
          "146:                     logger.error(err);",
          "147:                     return null;",
          "148:                 }",
          "149:             }",
          "151:             if (typeof value !== Typeof.Number) {",
          "152:                 return null;",
          "153:             }",
          "155:             if (input.criteriaFilter.filterType === FilterType.GreaterThan) {",
          "156:                 if (",
          "157:                     (input.dataToProcess as ProbeMonitorResponse)",
          "158:                         .responseCode &&",
          "159:                     (input.dataToProcess as ProbeMonitorResponse)",
          "160:                         .responseCode! > (value as number)",
          "161:                 ) {",
          "162:                     return `Response status code is ${",
          "163:                         (input.dataToProcess as ProbeMonitorResponse)",
          "164:                             .responseCode",
          "165:                     } which is greater than the criteria value of ${value}.`;",
          "166:                 }",
          "167:                 return null;",
          "168:             }",
          "170:             if (input.criteriaFilter.filterType === FilterType.LessThan) {",
          "171:                 if (",
          "172:                     (input.dataToProcess as ProbeMonitorResponse)",
          "173:                         .responseCode &&",
          "174:                     (input.dataToProcess as ProbeMonitorResponse)",
          "175:                         .responseCode! < (value as number)",
          "176:                 ) {",
          "177:                     return `Response status code is ${",
          "178:                         (input.dataToProcess as ProbeMonitorResponse)",
          "179:                             .responseCode",
          "180:                     } which is less than the criteria value of ${value}.`;",
          "181:                 }",
          "182:                 return null;",
          "183:             }",
          "185:             if (input.criteriaFilter.filterType === FilterType.EqualTo) {",
          "186:                 if (",
          "187:                     (input.dataToProcess as ProbeMonitorResponse)",
          "188:                         .responseCode &&",
          "189:                     (input.dataToProcess as ProbeMonitorResponse)",
          "190:                         .responseCode === (value as number)",
          "191:                 ) {",
          "192:                     return `Response status code is ${",
          "193:                         (input.dataToProcess as ProbeMonitorResponse)",
          "194:                             .responseCode",
          "195:                     }.`;",
          "196:                 }",
          "197:                 return null;",
          "198:             }",
          "200:             if (input.criteriaFilter.filterType === FilterType.NotEqualTo) {",
          "201:                 if (",
          "202:                     (input.dataToProcess as ProbeMonitorResponse)",
          "203:                         .responseCode &&",
          "204:                     (input.dataToProcess as ProbeMonitorResponse)",
          "205:                         .responseCode !== (value as number)",
          "206:                 ) {",
          "207:                     return `Response status code is ${",
          "208:                         (input.dataToProcess as ProbeMonitorResponse)",
          "209:                             .responseCode",
          "210:                     } which is not equal to the criteria value of ${value}.`;",
          "211:                 }",
          "212:                 return null;",
          "213:             }",
          "215:             if (",
          "216:                 input.criteriaFilter.filterType ===",
          "217:                 FilterType.GreaterThanOrEqualTo",
          "218:             ) {",
          "219:                 if (",
          "220:                     (input.dataToProcess as ProbeMonitorResponse)",
          "221:                         .responseCode &&",
          "222:                     (input.dataToProcess as ProbeMonitorResponse)",
          "223:                         .responseCode! >= (value as number)",
          "224:                 ) {",
          "225:                     return `Response status code is ${",
          "226:                         (input.dataToProcess as ProbeMonitorResponse)",
          "227:                             .responseCode",
          "228:                     } which is greater than or equal to the criteria value of ${value}.`;",
          "229:                 }",
          "230:                 return null;",
          "231:             }",
          "233:             if (",
          "234:                 input.criteriaFilter.filterType === FilterType.LessThanOrEqualTo",
          "235:             ) {",
          "236:                 if (",
          "237:                     (input.dataToProcess as ProbeMonitorResponse)",
          "238:                         .responseCode &&",
          "239:                     (input.dataToProcess as ProbeMonitorResponse)",
          "240:                         .responseCode! <= (value as number)",
          "241:                 ) {",
          "242:                     return `Response status code is ${",
          "243:                         (input.dataToProcess as ProbeMonitorResponse)",
          "244:                             .responseCode",
          "245:                     } which is less than or equal to the criteria value of ${value}.`;",
          "246:                 }",
          "247:                 return null;",
          "248:             }",
          "",
          "[Added Lines]",
          "20:         let threshold: number | string | undefined | null = input.criteriaFilter.value;",
          "23:         let overTimeValue: Array<number> | number | undefined = undefined;",
          "26:         if (input.criteriaFilter.eveluateOverTime && input.criteriaFilter.evaluateOverTimeOptions) {",
          "27:             overTimeValue = await EvaluateOverTime.getValueOverTime({",
          "28:                 monitorId: input.dataToProcess.monitorId!,",
          "29:                 evaluateOverTimeOptions: input.criteriaFilter.evaluateOverTimeOptions,",
          "30:                 metricType: input.criteriaFilter.checkOn,",
          "31:                 miscData: input.criteriaFilter.serverMonitorOptions as JSONObject",
          "32:             });",
          "34:             if (Array.isArray(overTimeValue) && overTimeValue.length === 0) {",
          "38:             if (overTimeValue === undefined) {",
          "41:         }",
          "44:         if (input.criteriaFilter.checkOn === CheckOn.ResponseTime) {",
          "45:             threshold = CompareCriteria.convertThresholdToNumber(threshold);",
          "47:             let value: Array<number> | number = overTimeValue || (input.dataToProcess as ProbeMonitorResponse)",
          "48:                 .responseTimeInMs!;",
          "50:             return CompareCriteria.compareCriteriaNumbers({",
          "51:                 value: value,",
          "52:                 threshold: threshold as number,",
          "53:                 criteriaFilter: input.criteriaFilter,",
          "54:             });",
          "59:             threshold = CompareCriteria.convertThresholdToNumber(threshold);",
          "61:             let value: Array<number> | number = overTimeValue || (input.dataToProcess as ProbeMonitorResponse)",
          "62:                 .responseCode!;",
          "64:             return CompareCriteria.compareCriteriaNumbers({",
          "65:                 value: value,",
          "66:                 threshold: threshold as number,",
          "67:                 criteriaFilter: input.criteriaFilter,",
          "68:             });",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "265:             if (input.criteriaFilter.filterType === FilterType.Contains) {",
          "266:                 if (",
          "268:                     responseBody &&",
          "270:                 ) {",
          "272:                 }",
          "273:                 return null;",
          "274:             }",
          "276:             if (input.criteriaFilter.filterType === FilterType.NotContains) {",
          "277:                 if (",
          "279:                     responseBody &&",
          "281:                 ) {",
          "283:                 }",
          "284:                 return null;",
          "285:             }",
          "",
          "[Removed Lines]",
          "267:                     value &&",
          "269:                     (responseBody as string).includes(value as string)",
          "271:                     return `Response body contains ${value}.`;",
          "278:                     value &&",
          "280:                     !(responseBody as string).includes(value as string)",
          "282:                     return `Response body does not contain ${value}.`;",
          "",
          "[Added Lines]",
          "87:                     threshold &&",
          "89:                     (responseBody as string).includes(threshold as string)",
          "91:                     return `Response body contains ${threshold}.`;",
          "98:                     threshold &&",
          "100:                     !(responseBody as string).includes(threshold as string)",
          "102:                     return `Response body does not contain ${threshold}.`;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "288:         if (input.criteriaFilter.checkOn === CheckOn.ResponseHeader) {",
          "289:             const headerKeys: Array<string> = Object.keys(",
          "290:                 (input.dataToProcess as ProbeMonitorResponse).responseHeaders ||",
          "292:             ).map((key: string) => {",
          "293:                 return key.toLowerCase();",
          "294:             });",
          "",
          "[Removed Lines]",
          "291:                     {}",
          "",
          "[Added Lines]",
          "111:                 {}",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "297:             if (input.criteriaFilter.filterType === FilterType.Contains) {",
          "298:                 if (",
          "300:                     headerKeys &&",
          "302:                 ) {",
          "304:                 }",
          "305:                 return null;",
          "306:             }",
          "308:             if (input.criteriaFilter.filterType === FilterType.NotContains) {",
          "309:                 if (",
          "311:                     headerKeys &&",
          "313:                 ) {",
          "315:                 }",
          "316:                 return null;",
          "317:             }",
          "",
          "[Removed Lines]",
          "299:                     value &&",
          "301:                     headerKeys.includes(value as string)",
          "303:                     return `Response header contains ${value}.`;",
          "310:                     value &&",
          "312:                     !headerKeys.includes(value as string)",
          "314:                     return `Response header does not contain ${value}.`;",
          "",
          "[Added Lines]",
          "119:                     threshold &&",
          "121:                     headerKeys.includes(threshold as string)",
          "123:                     return `Response header contains ${threshold}.`;",
          "130:                     threshold &&",
          "132:                     !headerKeys.includes(threshold as string)",
          "134:                     return `Response header does not contain ${threshold}.`;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "320:         if (input.criteriaFilter.checkOn === CheckOn.ResponseHeaderValue) {",
          "321:             const headerValues: Array<string> = Object.values(",
          "322:                 (input.dataToProcess as ProbeMonitorResponse).responseHeaders ||",
          "324:             ).map((key: string) => {",
          "325:                 return key.toLowerCase();",
          "326:             });",
          "",
          "[Removed Lines]",
          "323:                     {}",
          "",
          "[Added Lines]",
          "143:                 {}",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "329:             if (input.criteriaFilter.filterType === FilterType.Contains) {",
          "330:                 if (",
          "332:                     headerValues &&",
          "334:                 ) {",
          "336:                 }",
          "337:                 return null;",
          "338:             }",
          "340:             if (input.criteriaFilter.filterType === FilterType.NotContains) {",
          "341:                 if (",
          "343:                     headerValues &&",
          "345:                 ) {",
          "347:                 }",
          "348:                 return null;",
          "349:             }",
          "",
          "[Removed Lines]",
          "331:                     value &&",
          "333:                     headerValues.includes(value as string)",
          "335:                     return `Response header value contains ${value}.`;",
          "342:                     value &&",
          "344:                     !headerValues.includes(value as string)",
          "346:                     return `Response header value does not contain ${value}.`;",
          "",
          "[Added Lines]",
          "151:                     threshold &&",
          "153:                     headerValues.includes(threshold as string)",
          "155:                     return `Response header threshold contains ${threshold}.`;",
          "162:                     threshold &&",
          "164:                     !headerValues.includes(threshold as string)",
          "166:                     return `Response header threshold does not contain ${threshold}.`;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b85ec355f529fe80ba1bffeaa8b2d7b8781ba267",
      "candidate_info": {
        "commit_hash": "b85ec355f529fe80ba1bffeaa8b2d7b8781ba267",
        "repo": "OneUptime/oneuptime",
        "commit_url": "https://github.com/OneUptime/oneuptime/commit/b85ec355f529fe80ba1bffeaa8b2d7b8781ba267",
        "files": [
          "Ingestor/Utils/ProbeMonitorResponse.ts"
        ],
        "message": "Fix server monitor result type in ProbeMonitorResponse.ts",
        "before_after_code_files": [
          "Ingestor/Utils/ProbeMonitorResponse.ts||Ingestor/Utils/ProbeMonitorResponse.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OneUptime/oneuptime/pull/1268"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Ingestor/Utils/ProbeMonitorResponse.ts||Ingestor/Utils/ProbeMonitorResponse.ts": [
          "File: Ingestor/Utils/ProbeMonitorResponse.ts -> Ingestor/Utils/ProbeMonitorResponse.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1057:         if (input.monitor.monitorType === MonitorType.Server) {",
          "1060:                 await ServerMonitorCriteria.isMonitorInstanceCriteriaFilterMet({",
          "1061:                     dataToProcess: input.dataToProcess,",
          "1062:                     criteriaFilter: input.criteriaFilter,",
          "",
          "[Removed Lines]",
          "1059:             const serverMonitorResult =",
          "",
          "[Added Lines]",
          "1059:             const serverMonitorResult: string | null =",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b29a19c6e99a10d14f8a854604614fe15cd25825",
      "candidate_info": {
        "commit_hash": "b29a19c6e99a10d14f8a854604614fe15cd25825",
        "repo": "OneUptime/oneuptime",
        "commit_url": "https://github.com/OneUptime/oneuptime/commit/b29a19c6e99a10d14f8a854604614fe15cd25825",
        "files": [
          "Dashboard/src/Utils/Form/Monitor/CriteriaFilter.ts"
        ],
        "message": "Refactor CriteriaFilterUtil to filter out invalid options",
        "before_after_code_files": [
          "Dashboard/src/Utils/Form/Monitor/CriteriaFilter.ts||Dashboard/src/Utils/Form/Monitor/CriteriaFilter.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OneUptime/oneuptime/pull/1268"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Dashboard/src/Utils/Form/Monitor/CriteriaFilter.ts||Dashboard/src/Utils/Form/Monitor/CriteriaFilter.ts": [
          "File: Dashboard/src/Utils/Form/Monitor/CriteriaFilter.ts -> Dashboard/src/Utils/Form/Monitor/CriteriaFilter.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: export default class CriteriaFilterUtil {",
          "11:     public static getEvaluateOverTimeMinutesOptions(): Array<DropdownOption> {",
          "12:         const keys: Array<string> = Object.keys(EvaluateOverTimeMinutes);",
          "14:             return {",
          "15:                 label: `${EvaluateOverTimeMinutes[key as any]} Minutes`,",
          "16:                 value: EvaluateOverTimeMinutes[key as any]!,",
          "",
          "[Removed Lines]",
          "13:         return keys.map((key: string) => {",
          "",
          "[Added Lines]",
          "13:         return keys.filter((key: string)=>{",
          "14:             return EvaluateOverTimeMinutes[key as any];",
          "15:         }).map((key: string) => {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "750fe2867cb61a1e0657b83da0fec57a3a0a8f95",
      "candidate_info": {
        "commit_hash": "750fe2867cb61a1e0657b83da0fec57a3a0a8f95",
        "repo": "OneUptime/oneuptime",
        "commit_url": "https://github.com/OneUptime/oneuptime/commit/750fe2867cb61a1e0657b83da0fec57a3a0a8f95",
        "files": [
          "CommonServer/Utils/Probe/Criteria/APIRequestCriteria.ts",
          "CommonServer/Utils/Probe/Criteria/CompareCriteria.ts",
          "CommonServer/Utils/Probe/Criteria/EvaluateOverTime.ts",
          "CommonServer/Utils/Probe/Criteria/IncomingRequestCriteria.ts",
          "CommonServer/Utils/Probe/Criteria/ServerMonitorCriteria.ts",
          "CommonServer/Utils/Probe/DataToProcess.ts",
          "CommonServer/Utils/Probe/ProbeMonitorResponse.ts",
          "Dashboard/src/Components/Form/Monitor/CriteriaFilter.tsx",
          "Dashboard/src/Utils/Form/Monitor/CriteriaFilter.ts"
        ],
        "message": "Fix import statements in APIRequestCriteria, CompareCriteria, EvaluateOverTime, IncomingRequestCriteria, and ServerMonitorCriteria",
        "before_after_code_files": [
          "CommonServer/Utils/Probe/Criteria/APIRequestCriteria.ts||CommonServer/Utils/Probe/Criteria/APIRequestCriteria.ts",
          "CommonServer/Utils/Probe/Criteria/CompareCriteria.ts||CommonServer/Utils/Probe/Criteria/CompareCriteria.ts",
          "CommonServer/Utils/Probe/Criteria/EvaluateOverTime.ts||CommonServer/Utils/Probe/Criteria/EvaluateOverTime.ts",
          "CommonServer/Utils/Probe/Criteria/IncomingRequestCriteria.ts||CommonServer/Utils/Probe/Criteria/IncomingRequestCriteria.ts",
          "CommonServer/Utils/Probe/Criteria/ServerMonitorCriteria.ts||CommonServer/Utils/Probe/Criteria/ServerMonitorCriteria.ts",
          "CommonServer/Utils/Probe/ProbeMonitorResponse.ts||CommonServer/Utils/Probe/ProbeMonitorResponse.ts",
          "Dashboard/src/Components/Form/Monitor/CriteriaFilter.tsx||Dashboard/src/Components/Form/Monitor/CriteriaFilter.tsx",
          "Dashboard/src/Utils/Form/Monitor/CriteriaFilter.ts||Dashboard/src/Utils/Form/Monitor/CriteriaFilter.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OneUptime/oneuptime/pull/1268"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "CommonServer/Utils/Probe/Criteria/APIRequestCriteria.ts||CommonServer/Utils/Probe/Criteria/APIRequestCriteria.ts": [
          "File: CommonServer/Utils/Probe/Criteria/APIRequestCriteria.ts -> CommonServer/Utils/Probe/Criteria/APIRequestCriteria.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: import {",
          "3:     CheckOn,",
          "4:     CriteriaFilter,",
          "",
          "[Removed Lines]",
          "1: import DataToProcess from '../../../../Ingestor/Types/DataToProcess';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "9: import ProbeMonitorResponse from 'Common/Types/Probe/ProbeMonitorResponse';",
          "10: import CompareCriteria from './CompareCriteria';",
          "11: import EvaluateOverTime from './EvaluateOverTime';",
          "13: export default class APIRequestCriteria {",
          "14:     public static async isMonitorInstanceCriteriaFilterMet(input: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12: import DataToProcess from '../DataToProcess';",
          "",
          "---------------"
        ],
        "CommonServer/Utils/Probe/Criteria/CompareCriteria.ts||CommonServer/Utils/Probe/Criteria/CompareCriteria.ts": [
          "File: CommonServer/Utils/Probe/Criteria/CompareCriteria.ts -> CommonServer/Utils/Probe/Criteria/CompareCriteria.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "306:             message += ` on disk ${diskPath}`;",
          "307:         }",
          "310:             message += ` over the last ${data.criteriaFilter.evaluateOverTimeOptions.timeValueInMinutes} minutes`;",
          "311:         }",
          "",
          "[Removed Lines]",
          "309:         if (data.criteriaFilter.evaluateOverTimeOptions?.timeValueInMinutes) {",
          "",
          "[Added Lines]",
          "309:         if (data.criteriaFilter.eveluateOverTime && data.criteriaFilter.evaluateOverTimeOptions?.timeValueInMinutes) {",
          "",
          "---------------"
        ],
        "CommonServer/Utils/Probe/Criteria/EvaluateOverTime.ts||CommonServer/Utils/Probe/Criteria/EvaluateOverTime.ts": [
          "File: CommonServer/Utils/Probe/Criteria/EvaluateOverTime.ts -> CommonServer/Utils/Probe/Criteria/EvaluateOverTime.ts"
        ],
        "CommonServer/Utils/Probe/Criteria/IncomingRequestCriteria.ts||CommonServer/Utils/Probe/Criteria/IncomingRequestCriteria.ts": [
          "File: CommonServer/Utils/Probe/Criteria/IncomingRequestCriteria.ts -> CommonServer/Utils/Probe/Criteria/IncomingRequestCriteria.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: import {",
          "3:     CheckOn,",
          "4:     CriteriaFilter,",
          "",
          "[Removed Lines]",
          "1: import DataToProcess from '../../../../Ingestor/Types/DataToProcess';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "9: import IncomingMonitorRequest from 'Common/Types/Monitor/IncomingMonitor/IncomingMonitorRequest';",
          "10: import { JSONObject } from 'Common/Types/JSON';",
          "11: import OneUptimeDate from 'Common/Types/Date';",
          "13: export default class IncomingRequestCriteria {",
          "14:     public static async isMonitorInstanceCriteriaFilterMet(input: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12: import DataToProcess from '../DataToProcess';",
          "",
          "---------------"
        ],
        "CommonServer/Utils/Probe/Criteria/ServerMonitorCriteria.ts||CommonServer/Utils/Probe/Criteria/ServerMonitorCriteria.ts": [
          "File: CommonServer/Utils/Probe/Criteria/ServerMonitorCriteria.ts -> CommonServer/Utils/Probe/Criteria/ServerMonitorCriteria.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: import {",
          "3:     CheckOn,",
          "4:     CriteriaFilter,",
          "",
          "[Removed Lines]",
          "1: import DataToProcess from '../../../../Ingestor/Types/DataToProcess';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11: import EvaluateOverTime from './EvaluateOverTime';",
          "12: import { JSONObject } from 'Common/Types/JSON';",
          "13: import CompareCriteria from './CompareCriteria';",
          "15: export default class ServerMonitorCriteria {",
          "16:     public static async isMonitorInstanceCriteriaFilterMet(input: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13: import DataToProcess from '../DataToProcess';",
          "",
          "---------------"
        ],
        "CommonServer/Utils/Probe/ProbeMonitorResponse.ts||CommonServer/Utils/Probe/ProbeMonitorResponse.ts": [
          "File: CommonServer/Utils/Probe/ProbeMonitorResponse.ts -> CommonServer/Utils/Probe/ProbeMonitorResponse.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "39: import BasicInfrastructureMetrics from 'Common/Types/Infrastructure/BasicMetrics';",
          "40: import MonitorMetricsByMinute from 'Model/AnalyticsModels/MonitorMetricsByMinute';",
          "41: import MonitorMetricsByMinuteService from '../../Services/MonitorMetricsByMinuteService';",
          "43: import ServerMonitorCriteria from './Criteria/ServerMonitorCriteria';",
          "44: import IncomingRequestCriteria from './Criteria/IncomingRequestCriteria';",
          "45: import APIRequestCriteria from './Criteria/APIRequestCriteria';",
          "47: export default class ProbeMonitorResponseService {",
          "48:     public static async processProbeResponse(",
          "",
          "[Removed Lines]",
          "42: import DataToProcess from '../../../Ingestor/Types/DataToProcess';",
          "",
          "[Added Lines]",
          "45: import DataToProcess from './DataToProcess';",
          "",
          "---------------"
        ],
        "Dashboard/src/Components/Form/Monitor/CriteriaFilter.tsx||Dashboard/src/Components/Form/Monitor/CriteriaFilter.tsx": [
          "File: Dashboard/src/Components/Form/Monitor/CriteriaFilter.tsx -> Dashboard/src/Components/Form/Monitor/CriteriaFilter.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "131:                                 checkOn: value?.toString() as CheckOn,",
          "132:                                 filterType: undefined,",
          "133:                                 value: undefined,",
          "134:                             });",
          "135:                         }}",
          "136:                     />",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "134:                                 eveluateOverTime: false,",
          "135:                                 evaluateOverTimeOptions: undefined,",
          "",
          "---------------"
        ],
        "Dashboard/src/Utils/Form/Monitor/CriteriaFilter.ts||Dashboard/src/Utils/Form/Monitor/CriteriaFilter.ts": [
          "File: Dashboard/src/Utils/Form/Monitor/CriteriaFilter.ts -> Dashboard/src/Utils/Form/Monitor/CriteriaFilter.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "48:                 criteriaFilter.evaluateOverTimeOptions?.evaluateOverTimeType ===",
          "49:                 EvaluateOverTimeType.AllValues",
          "50:             ) {",
          "52:             } else if (",
          "53:                 criteriaFilter.evaluateOverTimeOptions?.evaluateOverTimeType ===",
          "54:                 EvaluateOverTimeType.AnyValue",
          "55:             ) {",
          "57:             } else if (",
          "58:                 criteriaFilter.evaluateOverTimeOptions?.evaluateOverTimeType ===",
          "59:                 EvaluateOverTimeType.Average",
          "",
          "[Removed Lines]",
          "51:                 text += `all ${isPercentage ? 'percentage ' : ''}values `;",
          "56:                 text += `any ${isPercentage ? 'percentage ' : ''}value `;",
          "",
          "[Added Lines]",
          "51:                 text += `all `;",
          "56:                 text += `any `;",
          "",
          "---------------"
        ]
      }
    }
  ]
}